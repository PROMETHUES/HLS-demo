// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "scaled_fixed2ieee.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic scaled_fixed2ieee::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic scaled_fixed2ieee::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<5> scaled_fixed2ieee::ap_ST_fsm_state1 = "1";
const sc_lv<5> scaled_fixed2ieee::ap_ST_fsm_state2 = "10";
const sc_lv<5> scaled_fixed2ieee::ap_ST_fsm_state3 = "100";
const sc_lv<5> scaled_fixed2ieee::ap_ST_fsm_state4 = "1000";
const sc_lv<5> scaled_fixed2ieee::ap_ST_fsm_state5 = "10000";
const sc_lv<32> scaled_fixed2ieee::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> scaled_fixed2ieee::ap_const_lv32_1 = "1";
const sc_lv<1> scaled_fixed2ieee::ap_const_lv1_0 = "0";
const sc_lv<32> scaled_fixed2ieee::ap_const_lv32_3 = "11";
const sc_lv<32> scaled_fixed2ieee::ap_const_lv32_4 = "100";
const sc_lv<2> scaled_fixed2ieee::ap_const_lv2_0 = "00";
const sc_lv<32> scaled_fixed2ieee::ap_const_lv32_2 = "10";
const sc_lv<1> scaled_fixed2ieee::ap_const_lv1_1 = "1";
const sc_lv<64> scaled_fixed2ieee::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> scaled_fixed2ieee::ap_const_lv64_1 = "1";
const sc_lv<32> scaled_fixed2ieee::ap_const_lv32_D = "1101";
const sc_lv<32> scaled_fixed2ieee::ap_const_lv32_1C = "11100";
const sc_lv<32> scaled_fixed2ieee::ap_const_lv32_F = "1111";
const sc_lv<32> scaled_fixed2ieee::ap_const_lv32_1F = "11111";
const sc_lv<32> scaled_fixed2ieee::ap_const_lv32_12 = "10010";
const sc_lv<2> scaled_fixed2ieee::ap_const_lv2_2 = "10";
const sc_lv<2> scaled_fixed2ieee::ap_const_lv2_1 = "1";
const sc_lv<32> scaled_fixed2ieee::ap_const_lv32_10 = "10000";
const sc_lv<9> scaled_fixed2ieee::ap_const_lv9_7F = "1111111";
const sc_lv<29> scaled_fixed2ieee::ap_const_lv29_0 = "00000000000000000000000000000";
const sc_lv<32> scaled_fixed2ieee::ap_const_lv32_5 = "101";
const sc_lv<32> scaled_fixed2ieee::ap_const_lv32_1B = "11011";
const sc_lv<23> scaled_fixed2ieee::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<8> scaled_fixed2ieee::ap_const_lv8_0 = "00000000";
const bool scaled_fixed2ieee::ap_const_boolean_1 = true;

scaled_fixed2ieee::scaled_fixed2ieee(sc_module_name name) : sc_module(name), mVcdFile(0) {
    out_bits_V_U = new scaled_fixed2ieeebkb("out_bits_V_U");
    out_bits_V_U->clk(ap_clk);
    out_bits_V_U->reset(ap_rst);
    out_bits_V_U->address0(out_bits_V_address0);
    out_bits_V_U->ce0(out_bits_V_ce0);
    out_bits_V_U->we0(out_bits_V_we0);
    out_bits_V_U->d0(out_bits_V_d0);
    out_bits_V_U->q0(out_bits_V_q0);
    out_bits_V_U->address1(out_bits_V_address1);
    out_bits_V_U->ce1(out_bits_V_ce1);
    out_bits_V_U->we1(out_bits_V_we1);
    out_bits_V_U->d1(out_bits_V_d1);
    c_U = new scaled_fixed2ieee_c("c_U");
    c_U->clk(ap_clk);
    c_U->reset(ap_rst);
    c_U->address0(c_address0);
    c_U->ce0(c_ce0);
    c_U->we0(c_we0);
    c_U->d0(c_d0);
    c_U->q0(c_q0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( tmp_21_reg_501 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_s_fu_388_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_phi_mux_p_Val2_in_phi_fu_198_p4);
    sensitive << ( tmp_21_reg_501 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( in_shift_V_fu_379_p3 );
    sensitive << ( tmp_s_fu_388_p2 );
    sensitive << ( p_Val2_in_reg_195 );

    SC_METHOD(thread_ap_phi_mux_shift_1_phi_fu_208_p4);
    sensitive << ( tmp_21_reg_501 );
    sensitive << ( shift_2_fu_326_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_s_fu_388_p2 );
    sensitive << ( shift_1_reg_205 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( tmp_21_reg_501 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_s_fu_388_p2 );

    SC_METHOD(thread_ap_return);
    sensitive << ( tmp_21_reg_501 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_s_fu_388_p2 );
    sensitive << ( result_write_assign_fu_468_p1 );
    sensitive << ( ap_return_preg );

    SC_METHOD(thread_c_address0);
    sensitive << ( tmp_1_reg_491 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_4_fu_321_p1 );

    SC_METHOD(thread_c_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_c_d0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( p_Result_34_fu_288_p4 );

    SC_METHOD(thread_c_we0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_exitcond_fu_271_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i1_reg_151 );

    SC_METHOD(thread_i_1_fu_315_p2);
    sensitive << ( i2_reg_184 );

    SC_METHOD(thread_i_fu_277_p2);
    sensitive << ( i1_reg_151 );

    SC_METHOD(thread_in_shift_V_fu_379_p3);
    sensitive << ( isNeg_fu_333_p3 );
    sensitive << ( tmp_23_fu_371_p1 );
    sensitive << ( tmp_24_fu_375_p1 );

    SC_METHOD(thread_isNeg_fu_333_p3);
    sensitive << ( c_q0 );

    SC_METHOD(thread_newexp_fu_403_p2);
    sensitive << ( ap_phi_mux_shift_1_phi_fu_208_p4 );
    sensitive << ( tmp_10_cast_fu_399_p1 );

    SC_METHOD(thread_or_cond_fu_422_p2);
    sensitive << ( tmp_26_fu_409_p3 );
    sensitive << ( tmp_11_fu_417_p2 );

    SC_METHOD(thread_out_bits_V_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_1_fu_283_p1 );

    SC_METHOD(thread_out_bits_V_address1);
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_out_bits_V_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_out_bits_V_ce1);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_out_bits_V_d0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( tmp_fu_225_p3 );

    SC_METHOD(thread_out_bits_V_d1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( tmp_8_fu_250_p3 );

    SC_METHOD(thread_out_bits_V_we0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_out_bits_V_we1);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_out_exp_V_fu_450_p3);
    sensitive << ( or_cond_fu_422_p2 );
    sensitive << ( tmp_27_fu_428_p1 );

    SC_METHOD(thread_p_Result_1_fu_215_p4);
    sensitive << ( in_V );

    SC_METHOD(thread_p_Result_34_fu_288_p4);
    sensitive << ( out_bits_V_q0 );

    SC_METHOD(thread_p_Result_35_fu_458_p4);
    sensitive << ( out_exp_V_fu_450_p3 );
    sensitive << ( p_Val2_25_fu_442_p3 );

    SC_METHOD(thread_p_Val2_25_fu_442_p3);
    sensitive << ( or_cond_fu_422_p2 );
    sensitive << ( phitmp7_fu_432_p4 );

    SC_METHOD(thread_phitmp7_fu_432_p4);
    sensitive << ( ap_phi_mux_p_Val2_in_phi_fu_198_p4 );

    SC_METHOD(thread_result_write_assign_fu_468_p1);
    sensitive << ( p_Result_35_fu_458_p4 );

    SC_METHOD(thread_sh_assign_1_fu_347_p3);
    sensitive << ( c_q0 );
    sensitive << ( isNeg_fu_333_p3 );
    sensitive << ( tmp_5_fu_341_p2 );

    SC_METHOD(thread_shift_2_fu_326_p2);
    sensitive << ( c_q0 );
    sensitive << ( shift_reg_172 );

    SC_METHOD(thread_tmp_10_cast_fu_399_p1);
    sensitive << ( tmp_2_fu_394_p2 );

    SC_METHOD(thread_tmp_11_fu_417_p2);
    sensitive << ( in_V );
    sensitive << ( tmp_21_reg_501 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_s_fu_388_p2 );

    SC_METHOD(thread_tmp_1_fu_283_p1);
    sensitive << ( i1_reg_151 );

    SC_METHOD(thread_tmp_20_fu_246_p1);
    sensitive << ( in_V );

    SC_METHOD(thread_tmp_21_fu_307_p3);
    sensitive << ( i2_reg_184 );

    SC_METHOD(thread_tmp_23_fu_371_p1);
    sensitive << ( tmp_7_fu_365_p2 );

    SC_METHOD(thread_tmp_24_fu_375_p1);
    sensitive << ( tmp_9_fu_359_p2 );

    SC_METHOD(thread_tmp_26_fu_409_p3);
    sensitive << ( newexp_fu_403_p2 );

    SC_METHOD(thread_tmp_27_fu_428_p1);
    sensitive << ( newexp_fu_403_p2 );

    SC_METHOD(thread_tmp_2_fu_394_p2);
    sensitive << ( prescale );

    SC_METHOD(thread_tmp_4_fu_321_p1);
    sensitive << ( i2_reg_184 );

    SC_METHOD(thread_tmp_5_fu_341_p2);
    sensitive << ( c_q0 );

    SC_METHOD(thread_tmp_6_fu_355_p1);
    sensitive << ( in_shift_reg_162 );

    SC_METHOD(thread_tmp_7_fu_365_p2);
    sensitive << ( tmp_6_fu_355_p1 );
    sensitive << ( sh_assign_1_fu_347_p3 );

    SC_METHOD(thread_tmp_8_fu_250_p3);
    sensitive << ( tmp_20_fu_246_p1 );

    SC_METHOD(thread_tmp_9_fu_359_p2);
    sensitive << ( tmp_6_fu_355_p1 );
    sensitive << ( sh_assign_1_fu_347_p3 );

    SC_METHOD(thread_tmp_fu_225_p3);
    sensitive << ( p_Result_1_fu_215_p4 );

    SC_METHOD(thread_tmp_s_fu_388_p2);
    sensitive << ( tmp_21_reg_501 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( c_q0 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_fu_271_p2 );
    sensitive << ( tmp_21_reg_501 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_s_fu_388_p2 );

    ap_CS_fsm = "00001";
    ap_return_preg = "00000000000000000000000000000000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "scaled_fixed2ieee_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, in_V, "(port)in_V");
    sc_trace(mVcdFile, prescale, "(port)prescale");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i_fu_277_p2, "i_fu_277_p2");
    sc_trace(mVcdFile, i_reg_486, "i_reg_486");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_1_fu_283_p1, "tmp_1_fu_283_p1");
    sc_trace(mVcdFile, tmp_1_reg_491, "tmp_1_reg_491");
    sc_trace(mVcdFile, exitcond_fu_271_p2, "exitcond_fu_271_p2");
    sc_trace(mVcdFile, tmp_21_fu_307_p3, "tmp_21_fu_307_p3");
    sc_trace(mVcdFile, tmp_21_reg_501, "tmp_21_reg_501");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, i_1_fu_315_p2, "i_1_fu_315_p2");
    sc_trace(mVcdFile, i_1_reg_505, "i_1_reg_505");
    sc_trace(mVcdFile, shift_2_fu_326_p2, "shift_2_fu_326_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, in_shift_V_fu_379_p3, "in_shift_V_fu_379_p3");
    sc_trace(mVcdFile, out_bits_V_address0, "out_bits_V_address0");
    sc_trace(mVcdFile, out_bits_V_ce0, "out_bits_V_ce0");
    sc_trace(mVcdFile, out_bits_V_we0, "out_bits_V_we0");
    sc_trace(mVcdFile, out_bits_V_d0, "out_bits_V_d0");
    sc_trace(mVcdFile, out_bits_V_q0, "out_bits_V_q0");
    sc_trace(mVcdFile, out_bits_V_address1, "out_bits_V_address1");
    sc_trace(mVcdFile, out_bits_V_ce1, "out_bits_V_ce1");
    sc_trace(mVcdFile, out_bits_V_we1, "out_bits_V_we1");
    sc_trace(mVcdFile, out_bits_V_d1, "out_bits_V_d1");
    sc_trace(mVcdFile, c_address0, "c_address0");
    sc_trace(mVcdFile, c_ce0, "c_ce0");
    sc_trace(mVcdFile, c_we0, "c_we0");
    sc_trace(mVcdFile, c_d0, "c_d0");
    sc_trace(mVcdFile, c_q0, "c_q0");
    sc_trace(mVcdFile, i1_reg_151, "i1_reg_151");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, in_shift_reg_162, "in_shift_reg_162");
    sc_trace(mVcdFile, tmp_s_fu_388_p2, "tmp_s_fu_388_p2");
    sc_trace(mVcdFile, shift_reg_172, "shift_reg_172");
    sc_trace(mVcdFile, i2_reg_184, "i2_reg_184");
    sc_trace(mVcdFile, ap_phi_mux_p_Val2_in_phi_fu_198_p4, "ap_phi_mux_p_Val2_in_phi_fu_198_p4");
    sc_trace(mVcdFile, p_Val2_in_reg_195, "p_Val2_in_reg_195");
    sc_trace(mVcdFile, ap_phi_mux_shift_1_phi_fu_208_p4, "ap_phi_mux_shift_1_phi_fu_208_p4");
    sc_trace(mVcdFile, shift_1_reg_205, "shift_1_reg_205");
    sc_trace(mVcdFile, tmp_4_fu_321_p1, "tmp_4_fu_321_p1");
    sc_trace(mVcdFile, p_Result_1_fu_215_p4, "p_Result_1_fu_215_p4");
    sc_trace(mVcdFile, tmp_fu_225_p3, "tmp_fu_225_p3");
    sc_trace(mVcdFile, tmp_20_fu_246_p1, "tmp_20_fu_246_p1");
    sc_trace(mVcdFile, tmp_8_fu_250_p3, "tmp_8_fu_250_p3");
    sc_trace(mVcdFile, p_Result_34_fu_288_p4, "p_Result_34_fu_288_p4");
    sc_trace(mVcdFile, isNeg_fu_333_p3, "isNeg_fu_333_p3");
    sc_trace(mVcdFile, tmp_5_fu_341_p2, "tmp_5_fu_341_p2");
    sc_trace(mVcdFile, tmp_6_fu_355_p1, "tmp_6_fu_355_p1");
    sc_trace(mVcdFile, sh_assign_1_fu_347_p3, "sh_assign_1_fu_347_p3");
    sc_trace(mVcdFile, tmp_7_fu_365_p2, "tmp_7_fu_365_p2");
    sc_trace(mVcdFile, tmp_9_fu_359_p2, "tmp_9_fu_359_p2");
    sc_trace(mVcdFile, tmp_23_fu_371_p1, "tmp_23_fu_371_p1");
    sc_trace(mVcdFile, tmp_24_fu_375_p1, "tmp_24_fu_375_p1");
    sc_trace(mVcdFile, tmp_2_fu_394_p2, "tmp_2_fu_394_p2");
    sc_trace(mVcdFile, tmp_10_cast_fu_399_p1, "tmp_10_cast_fu_399_p1");
    sc_trace(mVcdFile, newexp_fu_403_p2, "newexp_fu_403_p2");
    sc_trace(mVcdFile, tmp_26_fu_409_p3, "tmp_26_fu_409_p3");
    sc_trace(mVcdFile, tmp_11_fu_417_p2, "tmp_11_fu_417_p2");
    sc_trace(mVcdFile, or_cond_fu_422_p2, "or_cond_fu_422_p2");
    sc_trace(mVcdFile, phitmp7_fu_432_p4, "phitmp7_fu_432_p4");
    sc_trace(mVcdFile, tmp_27_fu_428_p1, "tmp_27_fu_428_p1");
    sc_trace(mVcdFile, out_exp_V_fu_450_p3, "out_exp_V_fu_450_p3");
    sc_trace(mVcdFile, p_Val2_25_fu_442_p3, "p_Val2_25_fu_442_p3");
    sc_trace(mVcdFile, p_Result_35_fu_458_p4, "p_Result_35_fu_458_p4");
    sc_trace(mVcdFile, result_write_assign_fu_468_p1, "result_write_assign_fu_468_p1");
    sc_trace(mVcdFile, ap_return_preg, "ap_return_preg");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

scaled_fixed2ieee::~scaled_fixed2ieee() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete out_bits_V_U;
    delete c_U;
}

void scaled_fixed2ieee::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_preg = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
             (esl_seteq<1,1,1>(tmp_21_reg_501.read(), ap_const_lv1_1) || 
              esl_seteq<1,1,1>(tmp_s_fu_388_p2.read(), ap_const_lv1_0)))) {
            ap_return_preg = result_write_assign_fu_468_p1.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        i1_reg_151 = i_reg_486.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i1_reg_151 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(exitcond_fu_271_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        i2_reg_184 = ap_const_lv2_0;
    } else if ((esl_seteq<1,1,1>(tmp_21_reg_501.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(tmp_s_fu_388_p2.read(), ap_const_lv1_1))) {
        i2_reg_184 = i_1_reg_505.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_fu_271_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        in_shift_reg_162 = in_V.read();
    } else if ((esl_seteq<1,1,1>(tmp_21_reg_501.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(tmp_s_fu_388_p2.read(), ap_const_lv1_1))) {
        in_shift_reg_162 = in_shift_V_fu_379_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(tmp_21_reg_501.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(tmp_s_fu_388_p2.read(), ap_const_lv1_0))) {
        p_Val2_in_reg_195 = in_shift_V_fu_379_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(tmp_21_fu_307_p3.read(), ap_const_lv1_1))) {
        p_Val2_in_reg_195 = in_shift_reg_162.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(tmp_21_reg_501.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(tmp_s_fu_388_p2.read(), ap_const_lv1_0))) {
        shift_1_reg_205 = shift_2_fu_326_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(tmp_21_fu_307_p3.read(), ap_const_lv1_1))) {
        shift_1_reg_205 = shift_reg_172.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_fu_271_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        shift_reg_172 = ap_const_lv32_0;
    } else if ((esl_seteq<1,1,1>(tmp_21_reg_501.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(tmp_s_fu_388_p2.read(), ap_const_lv1_1))) {
        shift_reg_172 = shift_2_fu_326_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        i_1_reg_505 = i_1_fu_315_p2.read();
        tmp_21_reg_501 = i2_reg_184.read().range(1, 1);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_reg_486 = i_fu_277_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_fu_271_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        tmp_1_reg_491 = tmp_1_fu_283_p1.read();
    }
}

void scaled_fixed2ieee::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void scaled_fixed2ieee::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void scaled_fixed2ieee::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void scaled_fixed2ieee::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void scaled_fixed2ieee::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void scaled_fixed2ieee::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          (esl_seteq<1,1,1>(tmp_21_reg_501.read(), ap_const_lv1_1) || 
           esl_seteq<1,1,1>(tmp_s_fu_388_p2.read(), ap_const_lv1_0))))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void scaled_fixed2ieee::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void scaled_fixed2ieee::thread_ap_phi_mux_p_Val2_in_phi_fu_198_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(tmp_21_reg_501.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(tmp_s_fu_388_p2.read(), ap_const_lv1_0))) {
        ap_phi_mux_p_Val2_in_phi_fu_198_p4 = in_shift_V_fu_379_p3.read();
    } else {
        ap_phi_mux_p_Val2_in_phi_fu_198_p4 = p_Val2_in_reg_195.read();
    }
}

void scaled_fixed2ieee::thread_ap_phi_mux_shift_1_phi_fu_208_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(tmp_21_reg_501.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(tmp_s_fu_388_p2.read(), ap_const_lv1_0))) {
        ap_phi_mux_shift_1_phi_fu_208_p4 = shift_2_fu_326_p2.read();
    } else {
        ap_phi_mux_shift_1_phi_fu_208_p4 = shift_1_reg_205.read();
    }
}

void scaled_fixed2ieee::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         (esl_seteq<1,1,1>(tmp_21_reg_501.read(), ap_const_lv1_1) || 
          esl_seteq<1,1,1>(tmp_s_fu_388_p2.read(), ap_const_lv1_0)))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void scaled_fixed2ieee::thread_ap_return() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         (esl_seteq<1,1,1>(tmp_21_reg_501.read(), ap_const_lv1_1) || 
          esl_seteq<1,1,1>(tmp_s_fu_388_p2.read(), ap_const_lv1_0)))) {
        ap_return = result_write_assign_fu_468_p1.read();
    } else {
        ap_return = ap_return_preg.read();
    }
}

void scaled_fixed2ieee::thread_c_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        c_address0 =  (sc_lv<1>) (tmp_4_fu_321_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        c_address0 =  (sc_lv<1>) (tmp_1_reg_491.read());
    } else {
        c_address0 = "X";
    }
}

void scaled_fixed2ieee::thread_c_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        c_ce0 = ap_const_logic_1;
    } else {
        c_ce0 = ap_const_logic_0;
    }
}

void scaled_fixed2ieee::thread_c_d0() {
    c_d0 = esl_cttz<32,32>(p_Result_34_fu_288_p4.read());
}

void scaled_fixed2ieee::thread_c_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        c_we0 = ap_const_logic_1;
    } else {
        c_we0 = ap_const_logic_0;
    }
}

void scaled_fixed2ieee::thread_exitcond_fu_271_p2() {
    exitcond_fu_271_p2 = (!i1_reg_151.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(i1_reg_151.read() == ap_const_lv2_2);
}

void scaled_fixed2ieee::thread_i_1_fu_315_p2() {
    i_1_fu_315_p2 = (!i2_reg_184.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(i2_reg_184.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void scaled_fixed2ieee::thread_i_fu_277_p2() {
    i_fu_277_p2 = (!i1_reg_151.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(i1_reg_151.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void scaled_fixed2ieee::thread_in_shift_V_fu_379_p3() {
    in_shift_V_fu_379_p3 = (!isNeg_fu_333_p3.read()[0].is_01())? sc_lv<29>(): ((isNeg_fu_333_p3.read()[0].to_bool())? tmp_23_fu_371_p1.read(): tmp_24_fu_375_p1.read());
}

void scaled_fixed2ieee::thread_isNeg_fu_333_p3() {
    isNeg_fu_333_p3 = c_q0.read().range(31, 31);
}

void scaled_fixed2ieee::thread_newexp_fu_403_p2() {
    newexp_fu_403_p2 = (!tmp_10_cast_fu_399_p1.read().is_01() || !ap_phi_mux_shift_1_phi_fu_208_p4.read().is_01())? sc_lv<32>(): (sc_bigint<32>(tmp_10_cast_fu_399_p1.read()) - sc_biguint<32>(ap_phi_mux_shift_1_phi_fu_208_p4.read()));
}

void scaled_fixed2ieee::thread_or_cond_fu_422_p2() {
    or_cond_fu_422_p2 = (tmp_26_fu_409_p3.read() | tmp_11_fu_417_p2.read());
}

void scaled_fixed2ieee::thread_out_bits_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        out_bits_V_address0 =  (sc_lv<1>) (tmp_1_fu_283_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        out_bits_V_address0 =  (sc_lv<1>) (ap_const_lv64_0);
    } else {
        out_bits_V_address0 = "X";
    }
}

void scaled_fixed2ieee::thread_out_bits_V_address1() {
    out_bits_V_address1 =  (sc_lv<1>) (ap_const_lv64_1);
}

void scaled_fixed2ieee::thread_out_bits_V_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        out_bits_V_ce0 = ap_const_logic_1;
    } else {
        out_bits_V_ce0 = ap_const_logic_0;
    }
}

void scaled_fixed2ieee::thread_out_bits_V_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        out_bits_V_ce1 = ap_const_logic_1;
    } else {
        out_bits_V_ce1 = ap_const_logic_0;
    }
}

void scaled_fixed2ieee::thread_out_bits_V_d0() {
    out_bits_V_d0 = esl_partset<32,32,17,32,32>(ap_const_lv32_0, tmp_fu_225_p3.read(), ap_const_lv32_F, ap_const_lv32_1F);
}

void scaled_fixed2ieee::thread_out_bits_V_d1() {
    out_bits_V_d1 = esl_partset<32,32,14,32,32>(ap_const_lv32_0, tmp_8_fu_250_p3.read(), ap_const_lv32_12, ap_const_lv32_1F);
}

void scaled_fixed2ieee::thread_out_bits_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        out_bits_V_we0 = ap_const_logic_1;
    } else {
        out_bits_V_we0 = ap_const_logic_0;
    }
}

void scaled_fixed2ieee::thread_out_bits_V_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        out_bits_V_we1 = ap_const_logic_1;
    } else {
        out_bits_V_we1 = ap_const_logic_0;
    }
}

void scaled_fixed2ieee::thread_out_exp_V_fu_450_p3() {
    out_exp_V_fu_450_p3 = (!or_cond_fu_422_p2.read()[0].is_01())? sc_lv<8>(): ((or_cond_fu_422_p2.read()[0].to_bool())? ap_const_lv8_0: tmp_27_fu_428_p1.read());
}

void scaled_fixed2ieee::thread_p_Result_1_fu_215_p4() {
    p_Result_1_fu_215_p4 = in_V.read().range(28, 13);
}

void scaled_fixed2ieee::thread_p_Result_34_fu_288_p4() {
    p_Result_34_fu_288_p4 = out_bits_V_q0.read().range(0, 31);
}

void scaled_fixed2ieee::thread_p_Result_35_fu_458_p4() {
    p_Result_35_fu_458_p4 = esl_concat<9,23>(esl_concat<1,8>(ap_const_lv1_0, out_exp_V_fu_450_p3.read()), p_Val2_25_fu_442_p3.read());
}

void scaled_fixed2ieee::thread_p_Val2_25_fu_442_p3() {
    p_Val2_25_fu_442_p3 = (!or_cond_fu_422_p2.read()[0].is_01())? sc_lv<23>(): ((or_cond_fu_422_p2.read()[0].to_bool())? ap_const_lv23_0: phitmp7_fu_432_p4.read());
}

void scaled_fixed2ieee::thread_phitmp7_fu_432_p4() {
    phitmp7_fu_432_p4 = ap_phi_mux_p_Val2_in_phi_fu_198_p4.read().range(27, 5);
}

void scaled_fixed2ieee::thread_result_write_assign_fu_468_p1() {
    result_write_assign_fu_468_p1 = p_Result_35_fu_458_p4.read();
}

void scaled_fixed2ieee::thread_sh_assign_1_fu_347_p3() {
    sh_assign_1_fu_347_p3 = (!isNeg_fu_333_p3.read()[0].is_01())? sc_lv<32>(): ((isNeg_fu_333_p3.read()[0].to_bool())? tmp_5_fu_341_p2.read(): c_q0.read());
}

void scaled_fixed2ieee::thread_shift_2_fu_326_p2() {
    shift_2_fu_326_p2 = (!shift_reg_172.read().is_01() || !c_q0.read().is_01())? sc_lv<32>(): (sc_biguint<32>(shift_reg_172.read()) + sc_biguint<32>(c_q0.read()));
}

void scaled_fixed2ieee::thread_tmp_10_cast_fu_399_p1() {
    tmp_10_cast_fu_399_p1 = esl_sext<32,9>(tmp_2_fu_394_p2.read());
}

void scaled_fixed2ieee::thread_tmp_11_fu_417_p2() {
    tmp_11_fu_417_p2 = (!in_V.read().is_01() || !ap_const_lv29_0.is_01())? sc_lv<1>(): sc_lv<1>(in_V.read() == ap_const_lv29_0);
}

void scaled_fixed2ieee::thread_tmp_1_fu_283_p1() {
    tmp_1_fu_283_p1 = esl_zext<64,2>(i1_reg_151.read());
}

void scaled_fixed2ieee::thread_tmp_20_fu_246_p1() {
    tmp_20_fu_246_p1 = in_V.read().range(13-1, 0);
}

void scaled_fixed2ieee::thread_tmp_21_fu_307_p3() {
    tmp_21_fu_307_p3 = i2_reg_184.read().range(1, 1);
}

void scaled_fixed2ieee::thread_tmp_23_fu_371_p1() {
    tmp_23_fu_371_p1 = tmp_7_fu_365_p2.read().range(29-1, 0);
}

void scaled_fixed2ieee::thread_tmp_24_fu_375_p1() {
    tmp_24_fu_375_p1 = tmp_9_fu_359_p2.read().range(29-1, 0);
}

void scaled_fixed2ieee::thread_tmp_26_fu_409_p3() {
    tmp_26_fu_409_p3 = newexp_fu_403_p2.read().range(31, 31);
}

void scaled_fixed2ieee::thread_tmp_27_fu_428_p1() {
    tmp_27_fu_428_p1 = newexp_fu_403_p2.read().range(8-1, 0);
}

void scaled_fixed2ieee::thread_tmp_2_fu_394_p2() {
    tmp_2_fu_394_p2 = (!ap_const_lv9_7F.is_01() || !prescale.read().is_01())? sc_lv<9>(): (sc_biguint<9>(ap_const_lv9_7F) - sc_biguint<9>(prescale.read()));
}

void scaled_fixed2ieee::thread_tmp_4_fu_321_p1() {
    tmp_4_fu_321_p1 = esl_zext<64,2>(i2_reg_184.read());
}

void scaled_fixed2ieee::thread_tmp_5_fu_341_p2() {
    tmp_5_fu_341_p2 = (!ap_const_lv32_0.is_01() || !c_q0.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_0) - sc_biguint<32>(c_q0.read()));
}

void scaled_fixed2ieee::thread_tmp_6_fu_355_p1() {
    tmp_6_fu_355_p1 = esl_zext<32,29>(in_shift_reg_162.read());
}

void scaled_fixed2ieee::thread_tmp_7_fu_365_p2() {
    tmp_7_fu_365_p2 = (!sh_assign_1_fu_347_p3.read().is_01())? sc_lv<32>(): tmp_6_fu_355_p1.read() >> (unsigned short)sh_assign_1_fu_347_p3.read().to_uint();
}

void scaled_fixed2ieee::thread_tmp_8_fu_250_p3() {
    tmp_8_fu_250_p3 = esl_concat<13,1>(tmp_20_fu_246_p1.read(), ap_const_lv1_1);
}

void scaled_fixed2ieee::thread_tmp_9_fu_359_p2() {
    tmp_9_fu_359_p2 = (!sh_assign_1_fu_347_p3.read().is_01())? sc_lv<32>(): tmp_6_fu_355_p1.read() << (unsigned short)sh_assign_1_fu_347_p3.read().to_uint();
}

void scaled_fixed2ieee::thread_tmp_fu_225_p3() {
    tmp_fu_225_p3 = esl_concat<16,1>(p_Result_1_fu_215_p4.read(), ap_const_lv1_1);
}

void scaled_fixed2ieee::thread_tmp_s_fu_388_p2() {
    tmp_s_fu_388_p2 = (!c_q0.read().is_01() || !ap_const_lv32_10.is_01())? sc_lv<1>(): sc_lv<1>(c_q0.read() == ap_const_lv32_10);
}

void scaled_fixed2ieee::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(exitcond_fu_271_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && (esl_seteq<1,1,1>(tmp_21_reg_501.read(), ap_const_lv1_1) || 
  esl_seteq<1,1,1>(tmp_s_fu_388_p2.read(), ap_const_lv1_0)))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<5>) ("XXXXX");
            break;
    }
}

}

