-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Rotate is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    src_val_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    src_val_ce0 : OUT STD_LOGIC;
    src_val_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    src_val_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    src_val_ce1 : OUT STD_LOGIC;
    src_val_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    src_rows_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    src_rows_empty_n : IN STD_LOGIC;
    src_rows_read : OUT STD_LOGIC;
    src_cols_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    src_cols_empty_n : IN STD_LOGIC;
    src_cols_read : OUT STD_LOGIC;
    dst_val_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    dst_val_ce0 : OUT STD_LOGIC;
    dst_val_we0 : OUT STD_LOGIC;
    dst_val_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    theta_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    theta_empty_n : IN STD_LOGIC;
    theta_read : OUT STD_LOGIC;
    dst_rows_out_din : OUT STD_LOGIC_VECTOR (16 downto 0);
    dst_rows_out_full_n : IN STD_LOGIC;
    dst_rows_out_write : OUT STD_LOGIC;
    dst_rows_out1_din : OUT STD_LOGIC_VECTOR (16 downto 0);
    dst_rows_out1_full_n : IN STD_LOGIC;
    dst_rows_out1_write : OUT STD_LOGIC;
    dst_cols_out_din : OUT STD_LOGIC_VECTOR (16 downto 0);
    dst_cols_out_full_n : IN STD_LOGIC;
    dst_cols_out_write : OUT STD_LOGIC;
    dst_cols_out2_din : OUT STD_LOGIC_VECTOR (16 downto 0);
    dst_cols_out2_full_n : IN STD_LOGIC;
    dst_cols_out2_write : OUT STD_LOGIC );
end;


architecture behav of Rotate is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (19 downto 0) := "00000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (19 downto 0) := "00000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (19 downto 0) := "00000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (19 downto 0) := "00000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (19 downto 0) := "00000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (19 downto 0) := "00000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (19 downto 0) := "00001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (19 downto 0) := "00010000000000000000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (19 downto 0) := "00100000000000000000";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (19 downto 0) := "01000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (19 downto 0) := "10000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_40490FDA : STD_LOGIC_VECTOR (31 downto 0) := "01000000010010010000111111011010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_43340000 : STD_LOGIC_VECTOR (31 downto 0) := "01000011001101000000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_433 : STD_LOGIC_VECTOR (11 downto 0) := "010000110011";
    constant ap_const_lv12_10 : STD_LOGIC_VECTOR (11 downto 0) := "000000010000";
    constant ap_const_lv12_FF0 : STD_LOGIC_VECTOR (11 downto 0) := "111111110000";
    constant ap_const_lv12_36 : STD_LOGIC_VECTOR (11 downto 0) := "000000110110";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_8000 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000001000000000000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv17_1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_const_lv16_FFFF : STD_LOGIC_VECTOR (15 downto 0) := "1111111111111111";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_10000 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000010000000000000000";
    constant ap_const_lv33_8000 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000001000000000000000";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal src_rows_blk_n : STD_LOGIC;
    signal src_cols_blk_n : STD_LOGIC;
    signal theta_blk_n : STD_LOGIC;
    signal dst_rows_out_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal exitcond6_fu_1781_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal dst_rows_out1_blk_n : STD_LOGIC;
    signal dst_cols_out_blk_n : STD_LOGIC;
    signal dst_cols_out2_blk_n : STD_LOGIC;
    signal j5_i_reg_276 : STD_LOGIC_VECTOR (16 downto 0);
    signal theta_read_reg_2408 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal rows_reg_2413 : STD_LOGIC_VECTOR (31 downto 0);
    signal cols_reg_2422 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_318_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i_reg_2429 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal grp_fu_323_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal angle_reg_2434 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal isneg_reg_2440 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal grp_sin_or_cos_float_s_fu_288_ap_idle : STD_LOGIC;
    signal grp_sin_or_cos_float_s_fu_288_ap_ready : STD_LOGIC;
    signal grp_sin_or_cos_float_s_fu_288_ap_done : STD_LOGIC;
    signal grp_sin_or_cos_float_s_fu_303_ap_idle : STD_LOGIC;
    signal grp_sin_or_cos_float_s_fu_303_ap_ready : STD_LOGIC;
    signal grp_sin_or_cos_float_s_fu_303_ap_done : STD_LOGIC;
    signal ap_block_state12_on_subcall_done : BOOLEAN;
    signal exp_tmp_V_reg_2446 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_34_fu_362_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_34_reg_2451 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_45_i_fu_366_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_45_i_reg_2456 : STD_LOGIC_VECTOR (0 downto 0);
    signal isneg_1_reg_2462 : STD_LOGIC_VECTOR (0 downto 0);
    signal exp_tmp_V_1_reg_2468 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_44_fu_398_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_44_reg_2473 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_61_i_fu_402_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_61_i_reg_2478 : STD_LOGIC_VECTOR (0 downto 0);
    signal cos_t_V_fu_618_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal cos_t_V_reg_2484 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal sin_t_V_fu_836_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sin_t_V_reg_2492 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_op_assign_fu_844_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_op_assign_reg_2501 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal p_Val2_i_fu_849_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_i_reg_2506 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_2_i_fu_854_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_2_i_reg_2512 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_3_i_fu_864_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_3_i_reg_2518 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_5_i_fu_874_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_5_i_reg_2523 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_10_i_fu_879_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_10_i_reg_2528 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_1_i_fu_961_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_1_i_reg_2533 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal p_2_i_fu_1050_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_2_i_reg_2540 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_11_i_fu_1139_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_11_i_reg_2547 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_12_i_fu_1224_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_12_i_reg_2556 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_13_i_fu_1314_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_13_i_reg_2565 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_14_i_fu_1399_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_14_i_reg_2574 : STD_LOGIC_VECTOR (15 downto 0);
    signal x_assign_3_fu_1415_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal x_assign_3_reg_2583 : STD_LOGIC_VECTOR (14 downto 0);
    signal x_assign_4_fu_1431_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal x_assign_4_reg_2589 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_i71_cast_i_fu_1475_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_i71_cast_i_reg_2595 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal tmp_i77_cast_i_fu_1515_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_i77_cast_i_reg_2600 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_rows_fu_1597_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_rows_reg_2605 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_cols_fu_1613_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_cols_reg_2611 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_10_fu_1694_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_10_reg_2617 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_17_fu_1775_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_17_reg_2622 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_block_state17 : BOOLEAN;
    signal i_fu_1786_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal i_reg_2631 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_22_i_fu_1801_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_22_i_reg_2636 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_6_i_fu_1806_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_6_i_reg_2641 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_20_cast_fu_1815_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_20_cast_reg_2646 : STD_LOGIC_VECTOR (17 downto 0);
    signal exitcond_fu_1823_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_2652 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state18_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state20_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal j_fu_1828_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal j_reg_2656 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal p_Val2_39_fu_1848_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_39_reg_2661 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_3_fu_1858_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_3_reg_2667 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_V_17_reg_2673 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_76_fu_1873_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_76_reg_2680 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_19_reg_2685 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_78_fu_1887_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_78_reg_2692 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_cond1_i_fu_2011_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_i_reg_2697 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state19_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state21_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal or_cond1_i_reg_2697_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_41_fu_2039_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_41_reg_2701 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_43_fu_2052_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_43_reg_2706 : STD_LOGIC_VECTOR (31 downto 0);
    signal OP2_V_4_cast_i_fu_2057_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal OP2_V_4_cast_i_reg_2711 : STD_LOGIC_VECTOR (47 downto 0);
    signal OP1_V_5_cast_i_fu_2061_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal OP1_V_5_cast_i_reg_2716 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_109_i_reg_2721 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_21_fu_2201_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_21_reg_2736 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_22_fu_2207_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_22_reg_2741 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_27_fu_2217_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_27_reg_2746 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_27_reg_2746_pp0_iter1_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_103_i_reg_2751 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_105_i_reg_2756 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_107_i_reg_2761 : STD_LOGIC_VECTOR (31 downto 0);
    signal src_val_load_reg_2766 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal src_val_load_1_reg_2771 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_63_0_i_fu_2297_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_63_0_i_reg_2786 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_63_0_1_i_fu_2305_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_63_0_1_i_reg_2791 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp28_fu_2328_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp28_reg_2796 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state18 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal grp_sin_or_cos_float_s_fu_288_ap_start : STD_LOGIC;
    signal grp_sin_or_cos_float_s_fu_288_do_cos : STD_LOGIC;
    signal grp_sin_or_cos_float_s_fu_288_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sin_or_cos_float_s_fu_303_ap_start : STD_LOGIC;
    signal grp_sin_or_cos_float_s_fu_303_do_cos : STD_LOGIC;
    signal grp_sin_or_cos_float_s_fu_303_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal i4_i_reg_265 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal ap_phi_mux_j5_i_phi_fu_280_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal grp_sin_or_cos_float_s_fu_288_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal grp_sin_or_cos_float_s_fu_303_ap_start_reg : STD_LOGIC := '0';
    signal tmp_38_cast_fu_2026_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal tmp_26_cast_fu_2114_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_27_cast_fu_2155_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_35_cast_fu_2286_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_36_cast_fu_2290_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_37_cast_fu_2404_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_26_fu_2395_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal d_assign_3_fu_328_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ireg_V_fu_336_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_28_fu_340_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal d_assign_fu_332_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ireg_V_1_fu_372_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_42_fu_376_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_36_i_fu_411_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal p_Result_46_fu_418_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_1_fu_422_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_i_137_fu_408_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_fu_435_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_47_i_fu_441_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_i_fu_447_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_49_i_fu_453_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_fu_459_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal man_V_2_fu_428_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_40_fu_487_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal sh_amt_cast_i_fu_467_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_55_i_fu_503_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_56_i_fu_507_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_39_fu_477_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_50_i_fu_471_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_fu_530_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_fu_535_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_demorgan_fu_549_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_fu_554_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_52_i_fu_481_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_fu_560_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_fu_566_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp9_fu_572_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_0162_i_fu_517_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp3_fu_541_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp4_fu_586_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_fu_513_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp_fu_578_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp21_demorgan_fu_600_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_fu_497_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp10_fu_606_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp11_fu_612_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_58_i_fu_524_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp5_fu_592_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_37_i_fu_629_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal p_Result_47_fu_636_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_4_fu_640_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_59_i_fu_626_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_1_fu_653_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_63_i_fu_659_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_64_i_fu_665_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_65_i_fu_671_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_1_fu_677_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal man_V_5_fu_646_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_46_fu_705_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal sh_amt_1_cast_i_fu_685_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_71_i_fu_721_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_72_i_fu_725_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_45_fu_695_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_66_i_fu_689_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp12_fu_748_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp13_fu_753_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp30_demorgan_fu_767_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp15_fu_772_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_68_i_fu_699_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp16_fu_778_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp17_fu_784_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp18_fu_790_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_0171_i_fu_735_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp14_fu_759_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp20_fu_804_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_fu_731_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp19_fu_796_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp45_demorgan_fu_818_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp1_fu_715_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp22_fu_824_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp23_fu_830_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_74_i_fu_742_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp21_fu_810_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_op_assign_1_fu_859_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_op_assign_2_fu_869_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_27_fu_884_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_48_fu_889_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_i_i1_fu_893_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_fu_899_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_28_fu_911_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_50_fu_937_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_fu_919_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_75_i_fu_941_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_6_fu_947_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_49_fu_929_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_i_fu_953_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_29_fu_973_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_52_fu_978_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_i_i2_fu_982_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_41_fu_988_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_30_fu_1000_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_54_fu_1026_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_7_fu_1008_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_76_i_fu_1030_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_8_fu_1036_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_53_fu_1018_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_3_i_fu_1042_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_31_fu_1062_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_56_fu_1067_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_i_i3_fu_1071_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_42_fu_1077_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_32_fu_1089_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_58_fu_1115_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_9_fu_1097_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_77_i_fu_1119_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_10_fu_1125_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_57_fu_1107_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_4_i_fu_1131_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_33_fu_1147_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_59_fu_1152_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_i_i4_fu_1156_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_43_fu_1162_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_34_fu_1174_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_61_fu_1200_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_11_fu_1182_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_78_i_fu_1204_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_12_fu_1210_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_60_fu_1192_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_5_i_fu_1216_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_11_i_fu_1232_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_35_fu_1236_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_62_fu_1242_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_i_i5_fu_1246_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_44_fu_1252_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_36_fu_1264_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_64_fu_1290_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_13_fu_1272_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_79_i_fu_1294_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_14_fu_1300_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_63_fu_1282_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_6_i_fu_1306_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_37_fu_1322_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_65_fu_1327_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_i_i6_fu_1331_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_45_fu_1337_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_38_fu_1349_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_67_fu_1375_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_15_fu_1357_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_80_i_fu_1379_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_16_fu_1385_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_66_fu_1367_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_7_i_fu_1391_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_68_fu_1407_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_51_fu_969_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_70_fu_1423_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_fu_1058_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_i_i_fu_1439_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i68_i_fu_1451_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_assign_1_fu_1444_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal y_assign_fu_1455_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_i70_i_fu_1461_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_min_fu_1467_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_i72_i_fu_1479_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i74_i_fu_1491_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_assign_2_fu_1484_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal y_assign_1_fu_1495_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_i76_i_fu_1501_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_min_fu_1507_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_i80_i_fu_1522_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_assign_2_fu_1526_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_i79_cast_i_fu_1519_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_i82_i_fu_1536_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_69_fu_1532_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal x_max_fu_1542_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_i86_i_fu_1556_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_assign_3_fu_1560_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_i85_cast_i_fu_1553_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_i88_i_fu_1570_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_71_fu_1566_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal y_max_fu_1576_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_i83_cast_i_fu_1549_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_89_i_fu_1587_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_89_cast_i_fu_1593_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_i89_cast_i_fu_1583_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_90_i_fu_1603_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_90_cast_i_fu_1609_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_fu_1619_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1_fu_1624_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_2_fu_1629_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal smax_fu_1635_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_3_fu_1643_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_4_fu_1648_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal smax1_fu_1654_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_72_fu_1662_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal smax2_fu_1670_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp15_fu_1678_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_8_fu_1684_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_9_fu_1690_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_11_fu_1700_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_12_fu_1705_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_13_fu_1710_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal smax3_fu_1716_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_14_fu_1724_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_15_fu_1729_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal smax4_fu_1735_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_73_fu_1743_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal smax5_fu_1751_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp16_fu_1759_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_s_fu_1765_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_16_fu_1771_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal y_fu_1792_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_22_i_fu_1801_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal y_cast_i_fu_1797_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_6_i_fu_1806_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_74_fu_1811_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal x_fu_1834_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_7_i_fu_1843_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal x_cast_i_fu_1839_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_i_fu_1843_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_8_i_fu_1853_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_8_i_fu_1853_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_94_i_fu_1898_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_18_fu_1903_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_75_fu_1891_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_8_i_fu_1908_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_15_i_fu_1915_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_95_i_fu_1937_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_20_fu_1942_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_77_fu_1930_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_9_i_fu_1947_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_16_i_fu_1954_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal r0_fu_1922_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal slt_fu_1969_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_1980_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_79_fu_1986_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_fu_1974_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_fu_1994_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c0_fu_1961_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_97_i_fu_2006_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1091_not_i_fu_2000_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_111_i_cast_fu_2017_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_29_fu_2021_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_99_i_fu_2031_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_101_i_fu_2044_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_47_fu_2065_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_47_fu_2065_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_47_fu_2065_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_80_fu_2081_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_81_fu_2084_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_82_fu_2088_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_186_0_i_cast_fu_2104_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_25_cast_fu_2096_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_19_fu_2108_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal c0_cast_i_fu_1965_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal c1_0_1_i_fu_2119_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal c1_0_1_cast_i_fu_2125_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_184_0_1_i_fu_2129_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_83_fu_2134_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_84_fu_2138_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_85_fu_2141_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_20_fu_2149_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal r0_cast_i_fu_1926_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal r1_i_fu_2160_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal r1_cast_i_fu_2166_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal slt1_fu_2170_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev1_fu_2175_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_86_fu_2181_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_87_fu_2185_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_34_cast_fu_2193_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_114_i_cast_fu_2213_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_26_i_fu_2222_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_29_i_fu_2227_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_44_fu_2240_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal OP2_V_cast_i_fu_2236_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_44_fu_2240_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal OP1_V_cast_i_fu_2232_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_44_fu_2240_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_45_fu_2256_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_45_fu_2256_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_45_fu_2256_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_46_fu_2271_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_46_fu_2271_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_46_fu_2271_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_63_0_i_fu_2297_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_63_0_1_i_fu_2305_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_63_1_i_fu_2314_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_63_1_1_i_fu_2323_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_63_1_i_fu_2314_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_63_1_1_i_fu_2323_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp27_fu_2334_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_64_1_1_i_fu_2338_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_110_i_fu_2343_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal r_V_fu_2347_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_89_fu_2361_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_23_fu_2371_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_112_i_fu_2365_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_fu_2381_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_88_fu_2353_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_fu_2387_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal p_Val2_63_0_1_i_fu_2305_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_63_0_i_fu_2297_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_63_1_1_i_fu_2323_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_63_1_i_fu_2314_p10 : STD_LOGIC_VECTOR (31 downto 0);

    component sin_or_cos_float_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        t_in : IN STD_LOGIC_VECTOR (31 downto 0);
        do_cos : IN STD_LOGIC;
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Rotate_Core_fmul_kbM IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Rotate_Core_fdiv_lbW IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Rotate_Core_fpextmb6 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    grp_sin_or_cos_float_s_fu_288 : component sin_or_cos_float_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_or_cos_float_s_fu_288_ap_start,
        ap_done => grp_sin_or_cos_float_s_fu_288_ap_done,
        ap_idle => grp_sin_or_cos_float_s_fu_288_ap_idle,
        ap_ready => grp_sin_or_cos_float_s_fu_288_ap_ready,
        t_in => angle_reg_2434,
        do_cos => grp_sin_or_cos_float_s_fu_288_do_cos,
        ap_return => grp_sin_or_cos_float_s_fu_288_ap_return);

    grp_sin_or_cos_float_s_fu_303 : component sin_or_cos_float_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_or_cos_float_s_fu_303_ap_start,
        ap_done => grp_sin_or_cos_float_s_fu_303_ap_done,
        ap_idle => grp_sin_or_cos_float_s_fu_303_ap_idle,
        ap_ready => grp_sin_or_cos_float_s_fu_303_ap_ready,
        t_in => angle_reg_2434,
        do_cos => grp_sin_or_cos_float_s_fu_303_do_cos,
        ap_return => grp_sin_or_cos_float_s_fu_303_ap_return);

    Rotate_Core_fmul_kbM_U45 : component Rotate_Core_fmul_kbM
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => theta_read_reg_2408,
        din1 => ap_const_lv32_40490FDA,
        ce => ap_const_logic_1,
        dout => grp_fu_318_p2);

    Rotate_Core_fdiv_lbW_U46 : component Rotate_Core_fdiv_lbW
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_i_reg_2429,
        din1 => ap_const_lv32_43340000,
        ce => ap_const_logic_1,
        dout => grp_fu_323_p2);

    Rotate_Core_fpextmb6_U47 : component Rotate_Core_fpextmb6
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => grp_sin_or_cos_float_s_fu_288_ap_return,
        dout => d_assign_3_fu_328_p1);

    Rotate_Core_fpextmb6_U48 : component Rotate_Core_fpextmb6
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => grp_sin_or_cos_float_s_fu_303_ap_return,
        dout => d_assign_fu_332_p1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((not((((dst_cols_out2_full_n = ap_const_logic_0) and (exitcond6_fu_1781_p2 = ap_const_lv1_1)) or ((dst_cols_out_full_n = ap_const_logic_0) and (exitcond6_fu_1781_p2 = ap_const_lv1_1)) or ((dst_rows_out1_full_n = ap_const_logic_0) and (exitcond6_fu_1781_p2 = ap_const_lv1_1)) or ((dst_rows_out_full_n = ap_const_logic_0) and (exitcond6_fu_1781_p2 = ap_const_lv1_1)))) and (ap_const_logic_1 = ap_CS_fsm_state17) and (exitcond6_fu_1781_p2 = ap_const_lv1_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state18) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not((((dst_cols_out2_full_n = ap_const_logic_0) and (exitcond6_fu_1781_p2 = ap_const_lv1_1)) or ((dst_cols_out_full_n = ap_const_logic_0) and (exitcond6_fu_1781_p2 = ap_const_lv1_1)) or ((dst_rows_out1_full_n = ap_const_logic_0) and (exitcond6_fu_1781_p2 = ap_const_lv1_1)) or ((dst_rows_out_full_n = ap_const_logic_0) and (exitcond6_fu_1781_p2 = ap_const_lv1_1)))) and (ap_const_logic_1 = ap_CS_fsm_state17) and (exitcond6_fu_1781_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state18)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state18);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif ((not((((dst_cols_out2_full_n = ap_const_logic_0) and (exitcond6_fu_1781_p2 = ap_const_lv1_1)) or ((dst_cols_out_full_n = ap_const_logic_0) and (exitcond6_fu_1781_p2 = ap_const_lv1_1)) or ((dst_rows_out1_full_n = ap_const_logic_0) and (exitcond6_fu_1781_p2 = ap_const_lv1_1)) or ((dst_rows_out_full_n = ap_const_logic_0) and (exitcond6_fu_1781_p2 = ap_const_lv1_1)))) and (ap_const_logic_1 = ap_CS_fsm_state17) and (exitcond6_fu_1781_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_or_cos_float_s_fu_288_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_or_cos_float_s_fu_288_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                    grp_sin_or_cos_float_s_fu_288_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_or_cos_float_s_fu_288_ap_ready = ap_const_logic_1)) then 
                    grp_sin_or_cos_float_s_fu_288_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_or_cos_float_s_fu_303_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_or_cos_float_s_fu_303_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                    grp_sin_or_cos_float_s_fu_303_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_or_cos_float_s_fu_303_ap_ready = ap_const_logic_1)) then 
                    grp_sin_or_cos_float_s_fu_303_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i4_i_reg_265_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
                i4_i_reg_265 <= i_reg_2631;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                i4_i_reg_265 <= ap_const_lv17_0;
            end if; 
        end if;
    end process;

    j5_i_reg_276_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((dst_cols_out2_full_n = ap_const_logic_0) and (exitcond6_fu_1781_p2 = ap_const_lv1_1)) or ((dst_cols_out_full_n = ap_const_logic_0) and (exitcond6_fu_1781_p2 = ap_const_lv1_1)) or ((dst_rows_out1_full_n = ap_const_logic_0) and (exitcond6_fu_1781_p2 = ap_const_lv1_1)) or ((dst_rows_out_full_n = ap_const_logic_0) and (exitcond6_fu_1781_p2 = ap_const_lv1_1)))) and (ap_const_logic_1 = ap_CS_fsm_state17) and (exitcond6_fu_1781_p2 = ap_const_lv1_0))) then 
                j5_i_reg_276 <= ap_const_lv17_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_reg_2652 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                j5_i_reg_276 <= j_reg_2656;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (exitcond_reg_2652 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (or_cond1_i_fu_2011_p2 = ap_const_lv1_1))) then
                OP1_V_5_cast_i_reg_2716 <= OP1_V_5_cast_i_fu_2061_p1;
                OP2_V_4_cast_i_reg_2711 <= OP2_V_4_cast_i_fu_2057_p1;
                p_Val2_41_reg_2701 <= p_Val2_41_fu_2039_p2;
                p_Val2_43_reg_2706 <= p_Val2_43_fu_2052_p2;
                tmp_109_i_reg_2721 <= p_Val2_47_fu_2065_p2(47 downto 16);
                tmp_21_reg_2736 <= tmp_21_fu_2201_p2;
                tmp_22_reg_2741 <= tmp_22_fu_2207_p2;
                tmp_27_reg_2746 <= tmp_27_fu_2217_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                angle_reg_2434 <= grp_fu_323_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_done_reg = ap_const_logic_1) or (theta_empty_n = ap_const_logic_0) or (src_cols_empty_n = ap_const_logic_0) or (src_rows_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                cols_reg_2422 <= src_cols_dout;
                rows_reg_2413 <= src_rows_dout;
                theta_read_reg_2408 <= theta_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                cos_t_V_reg_2484 <= cos_t_V_fu_618_p3;
                sin_t_V_reg_2492 <= sin_t_V_fu_836_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                exitcond_reg_2652 <= exitcond_fu_1823_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state12) and (ap_const_boolean_0 = ap_block_state12_on_subcall_done))) then
                exp_tmp_V_1_reg_2468 <= ireg_V_1_fu_372_p1(62 downto 52);
                exp_tmp_V_reg_2446 <= ireg_V_fu_336_p1(62 downto 52);
                isneg_1_reg_2462 <= ireg_V_1_fu_372_p1(63 downto 63);
                isneg_reg_2440 <= ireg_V_fu_336_p1(63 downto 63);
                tmp_34_reg_2451 <= tmp_34_fu_362_p1;
                tmp_44_reg_2473 <= tmp_44_fu_398_p1;
                tmp_45_i_reg_2456 <= tmp_45_i_fu_366_p2;
                tmp_61_i_reg_2478 <= tmp_61_i_fu_402_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                i_op_assign_reg_2501 <= i_op_assign_fu_844_p2;
                p_Val2_10_i_reg_2528 <= p_Val2_10_i_fu_879_p2;
                p_Val2_2_i_reg_2512 <= p_Val2_2_i_fu_854_p2;
                p_Val2_3_i_reg_2518 <= p_Val2_3_i_fu_864_p2;
                p_Val2_5_i_reg_2523 <= p_Val2_5_i_fu_874_p2;
                p_Val2_i_reg_2506 <= p_Val2_i_fu_849_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((dst_cols_out2_full_n = ap_const_logic_0) and (exitcond6_fu_1781_p2 = ap_const_lv1_1)) or ((dst_cols_out_full_n = ap_const_logic_0) and (exitcond6_fu_1781_p2 = ap_const_lv1_1)) or ((dst_rows_out1_full_n = ap_const_logic_0) and (exitcond6_fu_1781_p2 = ap_const_lv1_1)) or ((dst_rows_out_full_n = ap_const_logic_0) and (exitcond6_fu_1781_p2 = ap_const_lv1_1)))) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                i_reg_2631 <= i_fu_1786_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                j_reg_2656 <= j_fu_1828_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (exitcond_reg_2652 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                or_cond1_i_reg_2697 <= or_cond1_i_fu_2011_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                or_cond1_i_reg_2697_pp0_iter1_reg <= or_cond1_i_reg_2697;
                tmp_27_reg_2746_pp0_iter1_reg <= tmp_27_reg_2746;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                p_11_i_reg_2547 <= p_11_i_fu_1139_p3;
                p_12_i_reg_2556 <= p_12_i_fu_1224_p3;
                p_13_i_reg_2565 <= p_13_i_fu_1314_p3;
                p_14_i_reg_2574 <= p_14_i_fu_1399_p3;
                p_1_i_reg_2533 <= p_1_i_fu_961_p3;
                p_2_i_reg_2540 <= p_2_i_fu_1050_p3;
                x_assign_3_reg_2583 <= x_assign_3_fu_1415_p3;
                x_assign_4_reg_2589 <= x_assign_4_fu_1431_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((dst_cols_out2_full_n = ap_const_logic_0) and (exitcond6_fu_1781_p2 = ap_const_lv1_1)) or ((dst_cols_out_full_n = ap_const_logic_0) and (exitcond6_fu_1781_p2 = ap_const_lv1_1)) or ((dst_rows_out1_full_n = ap_const_logic_0) and (exitcond6_fu_1781_p2 = ap_const_lv1_1)) or ((dst_rows_out_full_n = ap_const_logic_0) and (exitcond6_fu_1781_p2 = ap_const_lv1_1)))) and (ap_const_logic_1 = ap_CS_fsm_state17) and (exitcond6_fu_1781_p2 = ap_const_lv1_0))) then
                p_Val2_22_i_reg_2636 <= p_Val2_22_i_fu_1801_p2;
                p_Val2_6_i_reg_2641 <= p_Val2_6_i_fu_1806_p2;
                    tmp_20_cast_reg_2646(17 downto 8) <= tmp_20_cast_fu_1815_p3(17 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_fu_1823_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                p_Val2_39_reg_2661 <= p_Val2_39_fu_1848_p2;
                p_Val2_3_reg_2667 <= p_Val2_3_fu_1858_p2;
                ret_V_17_reg_2673 <= p_Val2_39_fu_1848_p2(31 downto 16);
                ret_V_19_reg_2685 <= p_Val2_3_fu_1858_p2(31 downto 16);
                tmp_76_reg_2680 <= tmp_76_fu_1873_p1;
                tmp_78_reg_2692 <= tmp_78_fu_1887_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (or_cond1_i_reg_2697 = ap_const_lv1_1))) then
                p_Val2_63_0_1_i_reg_2791 <= p_Val2_63_0_1_i_fu_2305_p2;
                p_Val2_63_0_i_reg_2786 <= p_Val2_63_0_i_fu_2297_p2;
                tmp28_reg_2796 <= tmp28_fu_2328_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                p_cols_reg_2611 <= p_cols_fu_1613_p2;
                p_rows_reg_2605 <= p_rows_fu_1597_p2;
                tmp_10_reg_2617 <= tmp_10_fu_1694_p2;
                tmp_17_reg_2622 <= tmp_17_fu_1775_p2;
                tmp_i71_cast_i_reg_2595 <= tmp_i71_cast_i_fu_1475_p1;
                tmp_i77_cast_i_reg_2600 <= tmp_i77_cast_i_fu_1515_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (or_cond1_i_reg_2697 = ap_const_lv1_1))) then
                src_val_load_1_reg_2771 <= src_val_q1;
                src_val_load_reg_2766 <= src_val_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (or_cond1_i_reg_2697 = ap_const_lv1_1))) then
                tmp_103_i_reg_2751 <= p_Val2_44_fu_2240_p2(47 downto 16);
                tmp_105_i_reg_2756 <= p_Val2_45_fu_2256_p2(47 downto 16);
                tmp_107_i_reg_2761 <= p_Val2_46_fu_2271_p2(47 downto 16);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                tmp_i_reg_2429 <= grp_fu_318_p2;
            end if;
        end if;
    end process;
    tmp_20_cast_reg_2646(7 downto 0) <= "00000000";

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, src_rows_empty_n, src_cols_empty_n, theta_empty_n, dst_rows_out_full_n, dst_rows_out1_full_n, dst_cols_out_full_n, dst_cols_out2_full_n, ap_CS_fsm_state17, exitcond6_fu_1781_p2, ap_CS_fsm_state12, ap_block_state12_on_subcall_done, exitcond_fu_1823_p2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone, ap_block_pp0_stage1_subdone, ap_enable_reg_pp0_iter2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (theta_empty_n = ap_const_logic_0) or (src_cols_empty_n = ap_const_logic_0) or (src_rows_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state12) and (ap_const_boolean_0 = ap_block_state12_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                if ((not((((dst_cols_out2_full_n = ap_const_logic_0) and (exitcond6_fu_1781_p2 = ap_const_lv1_1)) or ((dst_cols_out_full_n = ap_const_logic_0) and (exitcond6_fu_1781_p2 = ap_const_lv1_1)) or ((dst_rows_out1_full_n = ap_const_logic_0) and (exitcond6_fu_1781_p2 = ap_const_lv1_1)) or ((dst_rows_out_full_n = ap_const_logic_0) and (exitcond6_fu_1781_p2 = ap_const_lv1_1)))) and (ap_const_logic_1 = ap_CS_fsm_state17) and (exitcond6_fu_1781_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif ((not((((dst_cols_out2_full_n = ap_const_logic_0) and (exitcond6_fu_1781_p2 = ap_const_lv1_1)) or ((dst_cols_out_full_n = ap_const_logic_0) and (exitcond6_fu_1781_p2 = ap_const_lv1_1)) or ((dst_rows_out1_full_n = ap_const_logic_0) and (exitcond6_fu_1781_p2 = ap_const_lv1_1)) or ((dst_rows_out_full_n = ap_const_logic_0) and (exitcond6_fu_1781_p2 = ap_const_lv1_1)))) and (ap_const_logic_1 = ap_CS_fsm_state17) and (exitcond6_fu_1781_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_fu_1823_p2 = ap_const_lv1_1))) and not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_fu_1823_p2 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    F2_1_fu_653_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(tmp_59_i_fu_626_p1));
    F2_fu_435_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(tmp_i_137_fu_408_p1));
        OP1_V_5_cast_i_fu_2061_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_41_fu_2039_p2),48));

        OP1_V_cast_i_fu_2232_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_26_i_fu_2222_p2),48));

        OP2_V_4_cast_i_fu_2057_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_43_fu_2052_p2),48));

        OP2_V_cast_i_fu_2236_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_29_i_fu_2227_p2),48));

    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(17);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(18);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state23 <= ap_CS_fsm(19);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_assign_proc : process(real_start, ap_done_reg, src_rows_empty_n, src_cols_empty_n, theta_empty_n)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (theta_empty_n = ap_const_logic_0) or (src_cols_empty_n = ap_const_logic_0) or (src_rows_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0));
    end process;


    ap_block_state12_on_subcall_done_assign_proc : process(grp_sin_or_cos_float_s_fu_288_ap_done, grp_sin_or_cos_float_s_fu_303_ap_done)
    begin
                ap_block_state12_on_subcall_done <= ((grp_sin_or_cos_float_s_fu_303_ap_done = ap_const_logic_0) or (grp_sin_or_cos_float_s_fu_288_ap_done = ap_const_logic_0));
    end process;


    ap_block_state17_assign_proc : process(dst_rows_out_full_n, dst_rows_out1_full_n, dst_cols_out_full_n, dst_cols_out2_full_n, exitcond6_fu_1781_p2)
    begin
                ap_block_state17 <= (((dst_cols_out2_full_n = ap_const_logic_0) and (exitcond6_fu_1781_p2 = ap_const_lv1_1)) or ((dst_cols_out_full_n = ap_const_logic_0) and (exitcond6_fu_1781_p2 = ap_const_lv1_1)) or ((dst_rows_out1_full_n = ap_const_logic_0) and (exitcond6_fu_1781_p2 = ap_const_lv1_1)) or ((dst_rows_out_full_n = ap_const_logic_0) and (exitcond6_fu_1781_p2 = ap_const_lv1_1)));
    end process;

        ap_block_state18_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state18_assign_proc : process(exitcond_fu_1823_p2)
    begin
        if ((exitcond_fu_1823_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state18 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state18 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, dst_rows_out_full_n, dst_rows_out1_full_n, dst_cols_out_full_n, dst_cols_out2_full_n, ap_CS_fsm_state17, exitcond6_fu_1781_p2)
    begin
        if ((not((((dst_cols_out2_full_n = ap_const_logic_0) and (exitcond6_fu_1781_p2 = ap_const_lv1_1)) or ((dst_cols_out_full_n = ap_const_logic_0) and (exitcond6_fu_1781_p2 = ap_const_lv1_1)) or ((dst_rows_out1_full_n = ap_const_logic_0) and (exitcond6_fu_1781_p2 = ap_const_lv1_1)) or ((dst_rows_out_full_n = ap_const_logic_0) and (exitcond6_fu_1781_p2 = ap_const_lv1_1)))) and (ap_const_logic_1 = ap_CS_fsm_state17) and (exitcond6_fu_1781_p2 = ap_const_lv1_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_j5_i_phi_fu_280_p4_assign_proc : process(j5_i_reg_276, exitcond_reg_2652, ap_CS_fsm_pp0_stage0, j_reg_2656, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (exitcond_reg_2652 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_j5_i_phi_fu_280_p4 <= j_reg_2656;
        else 
            ap_phi_mux_j5_i_phi_fu_280_p4 <= j5_i_reg_276;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;
        c0_cast_i_fu_1965_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_16_i_fu_1954_p3),17));

        c0_fu_1961_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_16_i_fu_1954_p3),32));

        c1_0_1_cast_i_fu_2125_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(c1_0_1_i_fu_2119_p2),32));

    c1_0_1_i_fu_2119_p2 <= std_logic_vector(unsigned(ap_const_lv17_1) + unsigned(c0_cast_i_fu_1965_p1));
    cos_t_V_fu_618_p3 <= 
        tmp_58_i_fu_524_p2 when (sel_tmp11_fu_612_p2(0) = '1') else 
        sel_tmp5_fu_592_p3;

    dst_cols_out2_blk_n_assign_proc : process(dst_cols_out2_full_n, ap_CS_fsm_state17, exitcond6_fu_1781_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) and (exitcond6_fu_1781_p2 = ap_const_lv1_1))) then 
            dst_cols_out2_blk_n <= dst_cols_out2_full_n;
        else 
            dst_cols_out2_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_cols_out2_din <= p_cols_reg_2611;

    dst_cols_out2_write_assign_proc : process(dst_rows_out_full_n, dst_rows_out1_full_n, dst_cols_out_full_n, dst_cols_out2_full_n, ap_CS_fsm_state17, exitcond6_fu_1781_p2)
    begin
        if ((not((((dst_cols_out2_full_n = ap_const_logic_0) and (exitcond6_fu_1781_p2 = ap_const_lv1_1)) or ((dst_cols_out_full_n = ap_const_logic_0) and (exitcond6_fu_1781_p2 = ap_const_lv1_1)) or ((dst_rows_out1_full_n = ap_const_logic_0) and (exitcond6_fu_1781_p2 = ap_const_lv1_1)) or ((dst_rows_out_full_n = ap_const_logic_0) and (exitcond6_fu_1781_p2 = ap_const_lv1_1)))) and (ap_const_logic_1 = ap_CS_fsm_state17) and (exitcond6_fu_1781_p2 = ap_const_lv1_1))) then 
            dst_cols_out2_write <= ap_const_logic_1;
        else 
            dst_cols_out2_write <= ap_const_logic_0;
        end if; 
    end process;


    dst_cols_out_blk_n_assign_proc : process(dst_cols_out_full_n, ap_CS_fsm_state17, exitcond6_fu_1781_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) and (exitcond6_fu_1781_p2 = ap_const_lv1_1))) then 
            dst_cols_out_blk_n <= dst_cols_out_full_n;
        else 
            dst_cols_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_cols_out_din <= p_cols_reg_2611;

    dst_cols_out_write_assign_proc : process(dst_rows_out_full_n, dst_rows_out1_full_n, dst_cols_out_full_n, dst_cols_out2_full_n, ap_CS_fsm_state17, exitcond6_fu_1781_p2)
    begin
        if ((not((((dst_cols_out2_full_n = ap_const_logic_0) and (exitcond6_fu_1781_p2 = ap_const_lv1_1)) or ((dst_cols_out_full_n = ap_const_logic_0) and (exitcond6_fu_1781_p2 = ap_const_lv1_1)) or ((dst_rows_out1_full_n = ap_const_logic_0) and (exitcond6_fu_1781_p2 = ap_const_lv1_1)) or ((dst_rows_out_full_n = ap_const_logic_0) and (exitcond6_fu_1781_p2 = ap_const_lv1_1)))) and (ap_const_logic_1 = ap_CS_fsm_state17) and (exitcond6_fu_1781_p2 = ap_const_lv1_1))) then 
            dst_cols_out_write <= ap_const_logic_1;
        else 
            dst_cols_out_write <= ap_const_logic_0;
        end if; 
    end process;


    dst_rows_out1_blk_n_assign_proc : process(dst_rows_out1_full_n, ap_CS_fsm_state17, exitcond6_fu_1781_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) and (exitcond6_fu_1781_p2 = ap_const_lv1_1))) then 
            dst_rows_out1_blk_n <= dst_rows_out1_full_n;
        else 
            dst_rows_out1_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_rows_out1_din <= p_rows_reg_2605;

    dst_rows_out1_write_assign_proc : process(dst_rows_out_full_n, dst_rows_out1_full_n, dst_cols_out_full_n, dst_cols_out2_full_n, ap_CS_fsm_state17, exitcond6_fu_1781_p2)
    begin
        if ((not((((dst_cols_out2_full_n = ap_const_logic_0) and (exitcond6_fu_1781_p2 = ap_const_lv1_1)) or ((dst_cols_out_full_n = ap_const_logic_0) and (exitcond6_fu_1781_p2 = ap_const_lv1_1)) or ((dst_rows_out1_full_n = ap_const_logic_0) and (exitcond6_fu_1781_p2 = ap_const_lv1_1)) or ((dst_rows_out_full_n = ap_const_logic_0) and (exitcond6_fu_1781_p2 = ap_const_lv1_1)))) and (ap_const_logic_1 = ap_CS_fsm_state17) and (exitcond6_fu_1781_p2 = ap_const_lv1_1))) then 
            dst_rows_out1_write <= ap_const_logic_1;
        else 
            dst_rows_out1_write <= ap_const_logic_0;
        end if; 
    end process;


    dst_rows_out_blk_n_assign_proc : process(dst_rows_out_full_n, ap_CS_fsm_state17, exitcond6_fu_1781_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) and (exitcond6_fu_1781_p2 = ap_const_lv1_1))) then 
            dst_rows_out_blk_n <= dst_rows_out_full_n;
        else 
            dst_rows_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_rows_out_din <= p_rows_reg_2605;

    dst_rows_out_write_assign_proc : process(dst_rows_out_full_n, dst_rows_out1_full_n, dst_cols_out_full_n, dst_cols_out2_full_n, ap_CS_fsm_state17, exitcond6_fu_1781_p2)
    begin
        if ((not((((dst_cols_out2_full_n = ap_const_logic_0) and (exitcond6_fu_1781_p2 = ap_const_lv1_1)) or ((dst_cols_out_full_n = ap_const_logic_0) and (exitcond6_fu_1781_p2 = ap_const_lv1_1)) or ((dst_rows_out1_full_n = ap_const_logic_0) and (exitcond6_fu_1781_p2 = ap_const_lv1_1)) or ((dst_rows_out_full_n = ap_const_logic_0) and (exitcond6_fu_1781_p2 = ap_const_lv1_1)))) and (ap_const_logic_1 = ap_CS_fsm_state17) and (exitcond6_fu_1781_p2 = ap_const_lv1_1))) then 
            dst_rows_out_write <= ap_const_logic_1;
        else 
            dst_rows_out_write <= ap_const_logic_0;
        end if; 
    end process;


    dst_val_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, tmp_38_cast_fu_2026_p1, ap_block_pp0_stage1, tmp_37_cast_fu_2404_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            dst_val_address0 <= tmp_37_cast_fu_2404_p1(16 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            dst_val_address0 <= tmp_38_cast_fu_2026_p1(16 - 1 downto 0);
        else 
            dst_val_address0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dst_val_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            dst_val_ce0 <= ap_const_logic_1;
        else 
            dst_val_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dst_val_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_block_pp0_stage1, tmp_26_fu_2395_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            dst_val_d0 <= tmp_26_fu_2395_p3;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            dst_val_d0 <= ap_const_lv8_0;
        else 
            dst_val_d0 <= "XXXXXXXX";
        end if; 
    end process;


    dst_val_we0_assign_proc : process(exitcond_reg_2652, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, or_cond1_i_fu_2011_p2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, or_cond1_i_reg_2697_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (or_cond1_i_fu_2011_p2 = ap_const_lv1_0) and (exitcond_reg_2652 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (or_cond1_i_reg_2697_pp0_iter1_reg = ap_const_lv1_1)))) then 
            dst_val_we0 <= ap_const_logic_1;
        else 
            dst_val_we0 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond6_fu_1781_p2 <= "1" when (i4_i_reg_265 = tmp_17_reg_2622) else "0";
    exitcond_fu_1823_p2 <= "1" when (ap_phi_mux_j5_i_phi_fu_280_p4 = tmp_10_reg_2617) else "0";
    grp_sin_or_cos_float_s_fu_288_ap_start <= grp_sin_or_cos_float_s_fu_288_ap_start_reg;
    grp_sin_or_cos_float_s_fu_288_do_cos <= ap_const_logic_1;
    grp_sin_or_cos_float_s_fu_303_ap_start <= grp_sin_or_cos_float_s_fu_303_ap_start_reg;
    grp_sin_or_cos_float_s_fu_303_do_cos <= ap_const_logic_0;
    i_fu_1786_p2 <= std_logic_vector(unsigned(i4_i_reg_265) + unsigned(ap_const_lv17_1));
    i_op_assign_1_fu_859_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) - unsigned(rows_reg_2413));
    i_op_assign_2_fu_869_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFF) + signed(rows_reg_2413));
    i_op_assign_fu_844_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFF) + signed(cols_reg_2422));
    icmp1_fu_715_p2 <= "1" when (tmp_46_fu_705_p4 = ap_const_lv7_0) else "0";
    icmp_fu_497_p2 <= "1" when (tmp_40_fu_487_p4 = ap_const_lv7_0) else "0";

    internal_ap_ready_assign_proc : process(dst_rows_out_full_n, dst_rows_out1_full_n, dst_cols_out_full_n, dst_cols_out2_full_n, ap_CS_fsm_state17, exitcond6_fu_1781_p2)
    begin
        if ((not((((dst_cols_out2_full_n = ap_const_logic_0) and (exitcond6_fu_1781_p2 = ap_const_lv1_1)) or ((dst_cols_out_full_n = ap_const_logic_0) and (exitcond6_fu_1781_p2 = ap_const_lv1_1)) or ((dst_rows_out1_full_n = ap_const_logic_0) and (exitcond6_fu_1781_p2 = ap_const_lv1_1)) or ((dst_rows_out_full_n = ap_const_logic_0) and (exitcond6_fu_1781_p2 = ap_const_lv1_1)))) and (ap_const_logic_1 = ap_CS_fsm_state17) and (exitcond6_fu_1781_p2 = ap_const_lv1_1))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ireg_V_1_fu_372_p1 <= d_assign_fu_332_p1;
    ireg_V_fu_336_p1 <= d_assign_3_fu_328_p1;
    j_fu_1828_p2 <= std_logic_vector(unsigned(ap_phi_mux_j5_i_phi_fu_280_p4) + unsigned(ap_const_lv17_1));
    man_V_1_fu_422_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(p_Result_46_fu_418_p1));
    man_V_2_fu_428_p3 <= 
        man_V_1_fu_422_p2 when (isneg_reg_2440(0) = '1') else 
        p_Result_46_fu_418_p1;
    man_V_4_fu_640_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(p_Result_47_fu_636_p1));
    man_V_5_fu_646_p3 <= 
        man_V_4_fu_640_p2 when (isneg_1_reg_2462(0) = '1') else 
        p_Result_47_fu_636_p1;
    or_cond1091_not_i_fu_2000_p2 <= (or_cond_i_fu_1994_p2 xor ap_const_lv1_1);
    or_cond1_i_fu_2011_p2 <= (tmp_97_i_fu_2006_p2 and or_cond1091_not_i_fu_2000_p2);
    or_cond_i_fu_1994_p2 <= (tmp_79_fu_1986_p3 or rev_fu_1974_p2);
    p_0162_i_fu_517_p3 <= 
        ap_const_lv32_FFFFFFFF when (isneg_reg_2440(0) = '1') else 
        ap_const_lv32_0;
    p_0171_i_fu_735_p3 <= 
        ap_const_lv32_FFFFFFFF when (isneg_1_reg_2462(0) = '1') else 
        ap_const_lv32_0;
    p_11_i_fu_1139_p3 <= 
        p_4_i_fu_1131_p3 when (tmp_57_fu_1107_p3(0) = '1') else 
        ret_V_9_fu_1097_p4;
    p_12_i_fu_1224_p3 <= 
        p_5_i_fu_1216_p3 when (tmp_60_fu_1192_p3(0) = '1') else 
        ret_V_11_fu_1182_p4;
    p_13_i_fu_1314_p3 <= 
        p_6_i_fu_1306_p3 when (tmp_63_fu_1282_p3(0) = '1') else 
        ret_V_13_fu_1272_p4;
    p_14_i_fu_1399_p3 <= 
        p_7_i_fu_1391_p3 when (tmp_66_fu_1367_p3(0) = '1') else 
        ret_V_15_fu_1357_p4;
    p_15_i_fu_1915_p3 <= 
        p_8_i_fu_1908_p3 when (tmp_75_fu_1891_p3(0) = '1') else 
        ret_V_17_reg_2673;
    p_16_i_fu_1954_p3 <= 
        p_9_i_fu_1947_p3 when (tmp_77_fu_1930_p3(0) = '1') else 
        ret_V_19_reg_2685;
    p_1_i_fu_961_p3 <= 
        p_i_fu_953_p3 when (tmp_49_fu_929_p3(0) = '1') else 
        ret_V_fu_919_p4;
    p_2_i_fu_1050_p3 <= 
        p_3_i_fu_1042_p3 when (tmp_53_fu_1018_p3(0) = '1') else 
        ret_V_7_fu_1008_p4;
    p_3_i_fu_1042_p3 <= 
        ret_V_7_fu_1008_p4 when (tmp_76_i_fu_1030_p2(0) = '1') else 
        ret_V_8_fu_1036_p2;
    p_4_i_fu_1131_p3 <= 
        ret_V_9_fu_1097_p4 when (tmp_77_i_fu_1119_p2(0) = '1') else 
        ret_V_10_fu_1125_p2;
    p_5_i_fu_1216_p3 <= 
        ret_V_11_fu_1182_p4 when (tmp_78_i_fu_1204_p2(0) = '1') else 
        ret_V_12_fu_1210_p2;
    p_6_i_fu_1306_p3 <= 
        ret_V_13_fu_1272_p4 when (tmp_79_i_fu_1294_p2(0) = '1') else 
        ret_V_14_fu_1300_p2;
    p_7_i_fu_1391_p3 <= 
        ret_V_15_fu_1357_p4 when (tmp_80_i_fu_1379_p2(0) = '1') else 
        ret_V_16_fu_1385_p2;
    p_8_i_fu_1908_p3 <= 
        ret_V_17_reg_2673 when (tmp_94_i_fu_1898_p2(0) = '1') else 
        ret_V_18_fu_1903_p2;
    p_9_i_fu_1947_p3 <= 
        ret_V_19_reg_2685 when (tmp_95_i_fu_1937_p2(0) = '1') else 
        ret_V_20_fu_1942_p2;
    p_Result_41_fu_988_p5 <= (p_Val2_29_fu_973_p2(31 downto 16) & ap_const_lv16_0);
    p_Result_42_fu_1077_p5 <= (p_Val2_31_fu_1062_p2(31 downto 16) & ap_const_lv16_0);
    p_Result_43_fu_1162_p5 <= (p_Val2_33_fu_1147_p2(31 downto 16) & ap_const_lv16_0);
    p_Result_44_fu_1252_p5 <= (p_Val2_35_fu_1236_p2(31 downto 16) & ap_const_lv16_0);
    p_Result_45_fu_1337_p5 <= (p_Val2_37_fu_1322_p2(31 downto 16) & ap_const_lv16_0);
    p_Result_46_fu_418_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_36_i_fu_411_p3),54));
    p_Result_47_fu_636_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_37_i_fu_629_p3),54));
    p_Result_s_fu_899_p5 <= (p_Val2_27_fu_884_p2(31 downto 16) & ap_const_lv16_0);
    p_Val2_10_i_fu_879_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(i_op_assign_2_fu_869_p2) * signed(sin_t_V_reg_2492))), 32));
    p_Val2_11_i_fu_1232_p2 <= std_logic_vector(unsigned(p_Val2_i_reg_2506) - unsigned(p_Val2_10_i_reg_2528));
    p_Val2_22_i_fu_1801_p0 <= y_cast_i_fu_1797_p1(17 - 1 downto 0);
    p_Val2_22_i_fu_1801_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_22_i_fu_1801_p0) * signed(cos_t_V_reg_2484))), 32));
    p_Val2_26_i_fu_2222_p2 <= std_logic_vector(unsigned(ap_const_lv32_10000) - unsigned(p_Val2_41_reg_2701));
    p_Val2_27_fu_884_p2 <= std_logic_vector(unsigned(ap_const_lv32_8000) + unsigned(p_Val2_i_reg_2506));
    p_Val2_28_fu_911_p3 <= 
        p_Val2_27_fu_884_p2 when (tmp_i_i1_fu_893_p2(0) = '1') else 
        p_Result_s_fu_899_p5;
    p_Val2_29_fu_973_p2 <= std_logic_vector(unsigned(ap_const_lv32_8000) + unsigned(p_Val2_2_i_reg_2512));
    p_Val2_29_i_fu_2227_p2 <= std_logic_vector(unsigned(ap_const_lv32_10000) - unsigned(p_Val2_43_reg_2706));
    p_Val2_2_i_fu_854_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(i_op_assign_fu_844_p2) * signed(sin_t_V_reg_2492))), 32));
    p_Val2_30_fu_1000_p3 <= 
        p_Val2_29_fu_973_p2 when (tmp_i_i2_fu_982_p2(0) = '1') else 
        p_Result_41_fu_988_p5;
    p_Val2_31_fu_1062_p2 <= std_logic_vector(unsigned(ap_const_lv32_8000) + unsigned(p_Val2_3_i_reg_2518));
    p_Val2_32_fu_1089_p3 <= 
        p_Val2_31_fu_1062_p2 when (tmp_i_i3_fu_1071_p2(0) = '1') else 
        p_Result_42_fu_1077_p5;
    p_Val2_33_fu_1147_p2 <= std_logic_vector(unsigned(ap_const_lv32_8000) + unsigned(p_Val2_5_i_reg_2523));
    p_Val2_34_fu_1174_p3 <= 
        p_Val2_33_fu_1147_p2 when (tmp_i_i4_fu_1156_p2(0) = '1') else 
        p_Result_43_fu_1162_p5;
    p_Val2_35_fu_1236_p2 <= std_logic_vector(unsigned(ap_const_lv32_8000) + unsigned(p_Val2_11_i_fu_1232_p2));
    p_Val2_36_fu_1264_p3 <= 
        p_Val2_35_fu_1236_p2 when (tmp_i_i5_fu_1246_p2(0) = '1') else 
        p_Result_44_fu_1252_p5;
    p_Val2_37_fu_1322_p2 <= std_logic_vector(unsigned(p_Val2_2_i_reg_2512) + unsigned(p_Val2_33_fu_1147_p2));
    p_Val2_38_fu_1349_p3 <= 
        p_Val2_37_fu_1322_p2 when (tmp_i_i6_fu_1331_p2(0) = '1') else 
        p_Result_45_fu_1337_p5;
    p_Val2_39_fu_1848_p2 <= std_logic_vector(unsigned(p_Val2_22_i_reg_2636) - unsigned(p_Val2_7_i_fu_1843_p2));
    p_Val2_3_fu_1858_p2 <= std_logic_vector(unsigned(p_Val2_6_i_reg_2641) + unsigned(p_Val2_8_i_fu_1853_p2));
    p_Val2_3_i_fu_864_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(i_op_assign_1_fu_859_p2) * signed(sin_t_V_reg_2492))), 32));
    p_Val2_41_fu_2039_p2 <= std_logic_vector(unsigned(p_Val2_39_reg_2661) - unsigned(tmp_99_i_fu_2031_p3));
    p_Val2_43_fu_2052_p2 <= std_logic_vector(unsigned(p_Val2_3_reg_2667) - unsigned(tmp_101_i_fu_2044_p3));
    p_Val2_44_fu_2240_p0 <= OP2_V_cast_i_fu_2236_p1(32 - 1 downto 0);
    p_Val2_44_fu_2240_p1 <= OP1_V_cast_i_fu_2232_p1(32 - 1 downto 0);
    p_Val2_44_fu_2240_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_44_fu_2240_p0) * signed(p_Val2_44_fu_2240_p1))), 48));
    p_Val2_45_fu_2256_p0 <= OP2_V_4_cast_i_reg_2711(32 - 1 downto 0);
    p_Val2_45_fu_2256_p1 <= OP1_V_cast_i_fu_2232_p1(32 - 1 downto 0);
    p_Val2_45_fu_2256_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_45_fu_2256_p0) * signed(p_Val2_45_fu_2256_p1))), 48));
    p_Val2_46_fu_2271_p0 <= OP2_V_cast_i_fu_2236_p1(32 - 1 downto 0);
    p_Val2_46_fu_2271_p1 <= OP1_V_5_cast_i_reg_2716(32 - 1 downto 0);
    p_Val2_46_fu_2271_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_46_fu_2271_p0) * signed(p_Val2_46_fu_2271_p1))), 48));
    p_Val2_47_fu_2065_p0 <= p_Val2_43_fu_2052_p2;
    p_Val2_47_fu_2065_p1 <= p_Val2_41_fu_2039_p2;
    p_Val2_47_fu_2065_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_47_fu_2065_p0) * signed(p_Val2_47_fu_2065_p1))), 48));
    p_Val2_5_i_fu_874_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(i_op_assign_2_fu_869_p2) * signed(cos_t_V_reg_2484))), 32));
    p_Val2_63_0_1_i_fu_2305_p1 <= p_Val2_63_0_1_i_fu_2305_p10(8 - 1 downto 0);
    p_Val2_63_0_1_i_fu_2305_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_val_load_1_reg_2771),32));
    p_Val2_63_0_1_i_fu_2305_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_105_i_reg_2756) * signed('0' &p_Val2_63_0_1_i_fu_2305_p1))), 32));
    p_Val2_63_0_i_fu_2297_p1 <= p_Val2_63_0_i_fu_2297_p10(8 - 1 downto 0);
    p_Val2_63_0_i_fu_2297_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_val_load_reg_2766),32));
    p_Val2_63_0_i_fu_2297_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_103_i_reg_2751) * signed('0' &p_Val2_63_0_i_fu_2297_p1))), 32));
    p_Val2_63_1_1_i_fu_2323_p1 <= p_Val2_63_1_1_i_fu_2323_p10(8 - 1 downto 0);
    p_Val2_63_1_1_i_fu_2323_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_val_q1),32));
    p_Val2_63_1_1_i_fu_2323_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_109_i_reg_2721) * signed('0' &p_Val2_63_1_1_i_fu_2323_p1))), 32));
    p_Val2_63_1_i_fu_2314_p1 <= p_Val2_63_1_i_fu_2314_p10(8 - 1 downto 0);
    p_Val2_63_1_i_fu_2314_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_val_q0),32));
    p_Val2_63_1_i_fu_2314_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_107_i_reg_2761) * signed('0' &p_Val2_63_1_i_fu_2314_p1))), 32));
    p_Val2_64_1_1_i_fu_2338_p2 <= std_logic_vector(unsigned(tmp28_reg_2796) + unsigned(tmp27_fu_2334_p2));
    p_Val2_6_i_fu_1806_p0 <= y_cast_i_fu_1797_p1(17 - 1 downto 0);
    p_Val2_6_i_fu_1806_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_6_i_fu_1806_p0) * signed(sin_t_V_reg_2492))), 32));
    p_Val2_7_i_fu_1843_p0 <= x_cast_i_fu_1839_p1(17 - 1 downto 0);
    p_Val2_7_i_fu_1843_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_7_i_fu_1843_p0) * signed(sin_t_V_reg_2492))), 32));
    p_Val2_8_i_fu_1853_p0 <= x_cast_i_fu_1839_p1(17 - 1 downto 0);
    p_Val2_8_i_fu_1853_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_8_i_fu_1853_p0) * signed(cos_t_V_reg_2484))), 32));
    p_Val2_i_fu_849_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(i_op_assign_fu_844_p2) * signed(cos_t_V_reg_2484))), 32));
    p_cols_fu_1613_p2 <= std_logic_vector(unsigned(ap_const_lv17_1) + unsigned(tmp_90_cast_i_fu_1609_p1));
    p_i_fu_953_p3 <= 
        ret_V_fu_919_p4 when (tmp_75_i_fu_941_p2(0) = '1') else 
        ret_V_6_fu_947_p2;
    p_rows_fu_1597_p2 <= std_logic_vector(unsigned(ap_const_lv17_1) + unsigned(tmp_89_cast_i_fu_1593_p1));
        r0_cast_i_fu_1926_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_15_i_fu_1915_p3),17));

        r0_fu_1922_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_15_i_fu_1915_p3),32));

        r1_cast_i_fu_2166_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r1_i_fu_2160_p2),32));

    r1_i_fu_2160_p2 <= std_logic_vector(unsigned(ap_const_lv17_1) + unsigned(r0_cast_i_fu_1926_p1));
    r_V_fu_2347_p2 <= std_logic_vector(unsigned(ap_const_lv33_8000) + unsigned(tmp_110_i_fu_2343_p1));

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    ret_V_10_fu_1125_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(ret_V_9_fu_1097_p4));
    ret_V_11_fu_1182_p4 <= p_Val2_34_fu_1174_p3(31 downto 16);
    ret_V_12_fu_1210_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(ret_V_11_fu_1182_p4));
    ret_V_13_fu_1272_p4 <= p_Val2_36_fu_1264_p3(31 downto 16);
    ret_V_14_fu_1300_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(ret_V_13_fu_1272_p4));
    ret_V_15_fu_1357_p4 <= p_Val2_38_fu_1349_p3(31 downto 16);
    ret_V_16_fu_1385_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(ret_V_15_fu_1357_p4));
    ret_V_18_fu_1903_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(ret_V_17_reg_2673));
    ret_V_20_fu_1942_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(ret_V_19_reg_2685));
    ret_V_6_fu_947_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(ret_V_fu_919_p4));
    ret_V_7_fu_1008_p4 <= p_Val2_30_fu_1000_p3(31 downto 16);
    ret_V_8_fu_1036_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(ret_V_7_fu_1008_p4));
    ret_V_9_fu_1097_p4 <= p_Val2_32_fu_1089_p3(31 downto 16);
    ret_V_fu_919_p4 <= p_Val2_28_fu_911_p3(31 downto 16);
    rev1_fu_2175_p2 <= (slt1_fu_2170_p2 xor ap_const_lv1_1);
    rev_fu_1974_p2 <= (slt_fu_1969_p2 xor ap_const_lv1_1);
    sel_tmp10_fu_606_p2 <= (sel_tmp21_demorgan_fu_600_p2 xor ap_const_lv1_1);
    sel_tmp11_fu_612_p2 <= (sel_tmp10_fu_606_p2 and icmp_fu_497_p2);
    sel_tmp12_fu_748_p2 <= (tmp_61_i_reg_2478 xor ap_const_lv1_1);
    sel_tmp13_fu_753_p2 <= (tmp_66_i_fu_689_p2 and sel_tmp12_fu_748_p2);
    sel_tmp14_fu_759_p3 <= 
        tmp_45_fu_695_p1 when (sel_tmp13_fu_753_p2(0) = '1') else 
        ap_const_lv32_0;
    sel_tmp15_fu_772_p2 <= (sel_tmp30_demorgan_fu_767_p2 xor ap_const_lv1_1);
    sel_tmp16_fu_778_p2 <= (tmp_63_i_fu_659_p2 and sel_tmp15_fu_772_p2);
    sel_tmp17_fu_784_p2 <= (tmp_68_i_fu_699_p2 xor ap_const_lv1_1);
    sel_tmp18_fu_790_p2 <= (sel_tmp17_fu_784_p2 and sel_tmp16_fu_778_p2);
    sel_tmp19_fu_796_p3 <= 
        p_0171_i_fu_735_p3 when (sel_tmp18_fu_790_p2(0) = '1') else 
        sel_tmp14_fu_759_p3;
    sel_tmp1_fu_530_p2 <= (tmp_45_i_reg_2456 xor ap_const_lv1_1);
    sel_tmp20_fu_804_p2 <= (tmp_68_i_fu_699_p2 and sel_tmp16_fu_778_p2);
    sel_tmp21_demorgan_fu_600_p2 <= (tmp_47_i_fu_441_p2 or sel_tmp6_demorgan_fu_549_p2);
    sel_tmp21_fu_810_p3 <= 
        tmp_47_fu_731_p1 when (sel_tmp20_fu_804_p2(0) = '1') else 
        sel_tmp19_fu_796_p3;
    sel_tmp22_fu_824_p2 <= (sel_tmp45_demorgan_fu_818_p2 xor ap_const_lv1_1);
    sel_tmp23_fu_830_p2 <= (sel_tmp22_fu_824_p2 and icmp1_fu_715_p2);
    sel_tmp2_fu_535_p2 <= (tmp_50_i_fu_471_p2 and sel_tmp1_fu_530_p2);
    sel_tmp30_demorgan_fu_767_p2 <= (tmp_66_i_fu_689_p2 or tmp_61_i_reg_2478);
    sel_tmp3_fu_541_p3 <= 
        tmp_39_fu_477_p1 when (sel_tmp2_fu_535_p2(0) = '1') else 
        ap_const_lv32_0;
    sel_tmp45_demorgan_fu_818_p2 <= (tmp_63_i_fu_659_p2 or sel_tmp30_demorgan_fu_767_p2);
    sel_tmp4_fu_586_p2 <= (tmp_52_i_fu_481_p2 and sel_tmp7_fu_560_p2);
    sel_tmp5_fu_592_p3 <= 
        tmp_41_fu_513_p1 when (sel_tmp4_fu_586_p2(0) = '1') else 
        sel_tmp_fu_578_p3;
    sel_tmp6_demorgan_fu_549_p2 <= (tmp_50_i_fu_471_p2 or tmp_45_i_reg_2456);
    sel_tmp6_fu_554_p2 <= (sel_tmp6_demorgan_fu_549_p2 xor ap_const_lv1_1);
    sel_tmp7_fu_560_p2 <= (tmp_47_i_fu_441_p2 and sel_tmp6_fu_554_p2);
    sel_tmp8_fu_566_p2 <= (tmp_52_i_fu_481_p2 xor ap_const_lv1_1);
    sel_tmp9_fu_572_p2 <= (sel_tmp8_fu_566_p2 and sel_tmp7_fu_560_p2);
    sel_tmp_fu_578_p3 <= 
        p_0162_i_fu_517_p3 when (sel_tmp9_fu_572_p2(0) = '1') else 
        sel_tmp3_fu_541_p3;
        sh_amt_1_cast_i_fu_685_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_1_fu_677_p3),32));

    sh_amt_1_fu_677_p3 <= 
        tmp_64_i_fu_665_p2 when (tmp_63_i_fu_659_p2(0) = '1') else 
        tmp_65_i_fu_671_p2;
        sh_amt_cast_i_fu_467_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_fu_459_p3),32));

    sh_amt_fu_459_p3 <= 
        tmp_48_i_fu_447_p2 when (tmp_47_i_fu_441_p2(0) = '1') else 
        tmp_49_i_fu_453_p2;
    sin_t_V_fu_836_p3 <= 
        tmp_74_i_fu_742_p2 when (sel_tmp23_fu_830_p2(0) = '1') else 
        sel_tmp21_fu_810_p3;
    slt1_fu_2170_p2 <= "1" when (signed(r1_cast_i_fu_2166_p1) < signed(rows_reg_2413)) else "0";
    slt_fu_1969_p2 <= "1" when (signed(r0_fu_1922_p1) < signed(rows_reg_2413)) else "0";
    smax1_fu_1654_p3 <= 
        smax_fu_1635_p3 when (tmp_4_fu_1648_p2(0) = '1') else 
        tmp_3_fu_1643_p2;
    smax2_fu_1670_p3 <= 
        ap_const_lv16_FFFF when (tmp_72_fu_1662_p3(0) = '1') else 
        smax1_fu_1654_p3;
    smax3_fu_1716_p3 <= 
        tmp_11_fu_1700_p2 when (tmp_13_fu_1710_p2(0) = '1') else 
        tmp_12_fu_1705_p2;
    smax4_fu_1735_p3 <= 
        smax3_fu_1716_p3 when (tmp_15_fu_1729_p2(0) = '1') else 
        tmp_14_fu_1724_p2;
    smax5_fu_1751_p3 <= 
        ap_const_lv16_FFFF when (tmp_73_fu_1743_p3(0) = '1') else 
        smax4_fu_1735_p3;
    smax_fu_1635_p3 <= 
        tmp_fu_1619_p2 when (tmp_2_fu_1629_p2(0) = '1') else 
        tmp_1_fu_1624_p2;

    src_cols_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, src_cols_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            src_cols_blk_n <= src_cols_empty_n;
        else 
            src_cols_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    src_cols_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, src_rows_empty_n, src_cols_empty_n, theta_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (theta_empty_n = ap_const_logic_0) or (src_cols_empty_n = ap_const_logic_0) or (src_rows_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            src_cols_read <= ap_const_logic_1;
        else 
            src_cols_read <= ap_const_logic_0;
        end if; 
    end process;


    src_rows_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, src_rows_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            src_rows_blk_n <= src_rows_empty_n;
        else 
            src_rows_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    src_rows_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, src_rows_empty_n, src_cols_empty_n, theta_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (theta_empty_n = ap_const_logic_0) or (src_cols_empty_n = ap_const_logic_0) or (src_rows_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            src_rows_read <= ap_const_logic_1;
        else 
            src_rows_read <= ap_const_logic_0;
        end if; 
    end process;


    src_val_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage1, tmp_26_cast_fu_2114_p1, tmp_35_cast_fu_2286_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            src_val_address0 <= tmp_35_cast_fu_2286_p1(16 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            src_val_address0 <= tmp_26_cast_fu_2114_p1(16 - 1 downto 0);
        else 
            src_val_address0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    src_val_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage1, tmp_27_cast_fu_2155_p1, tmp_36_cast_fu_2290_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            src_val_address1 <= tmp_36_cast_fu_2290_p1(16 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            src_val_address1 <= tmp_27_cast_fu_2155_p1(16 - 1 downto 0);
        else 
            src_val_address1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    src_val_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            src_val_ce0 <= ap_const_logic_1;
        else 
            src_val_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    src_val_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            src_val_ce1 <= ap_const_logic_1;
        else 
            src_val_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;


    theta_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, theta_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            theta_blk_n <= theta_empty_n;
        else 
            theta_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    theta_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, src_rows_empty_n, src_cols_empty_n, theta_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (theta_empty_n = ap_const_logic_0) or (src_cols_empty_n = ap_const_logic_0) or (src_rows_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            theta_read <= ap_const_logic_1;
        else 
            theta_read <= ap_const_logic_0;
        end if; 
    end process;

    tmp15_fu_1678_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(tmp_i89_cast_i_fu_1583_p1));
    tmp16_fu_1759_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(tmp_i83_cast_i_fu_1549_p1));
    tmp27_fu_2334_p2 <= std_logic_vector(unsigned(p_Val2_63_0_i_reg_2786) + unsigned(p_Val2_63_0_1_i_reg_2791));
    tmp28_fu_2328_p2 <= std_logic_vector(unsigned(p_Val2_63_1_i_fu_2314_p2) + unsigned(p_Val2_63_1_1_i_fu_2323_p2));
    tmp_101_i_fu_2044_p3 <= (p_16_i_fu_1954_p3 & ap_const_lv16_0);
    tmp_10_fu_1694_p2 <= std_logic_vector(unsigned(ap_const_lv17_1) + unsigned(tmp_9_fu_1690_p1));
        tmp_110_i_fu_2343_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_64_1_1_i_fu_2338_p2),33));

    tmp_111_i_cast_fu_2017_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j5_i_reg_276),18));
    tmp_112_i_fu_2365_p2 <= "1" when (tmp_89_fu_2361_p1 = ap_const_lv16_0) else "0";
    tmp_114_i_cast_fu_2213_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j5_i_reg_276),18));
    tmp_11_fu_1700_p2 <= (p_11_i_reg_2547 xor ap_const_lv16_FFFF);
    tmp_12_fu_1705_p2 <= (p_13_i_reg_2565 xor ap_const_lv16_FFFF);
    tmp_13_fu_1710_p2 <= "1" when (signed(tmp_11_fu_1700_p2) > signed(tmp_12_fu_1705_p2)) else "0";
    tmp_14_fu_1724_p2 <= (p_1_i_reg_2533 xor ap_const_lv16_FFFF);
    tmp_15_fu_1729_p2 <= "1" when (signed(smax3_fu_1716_p3) > signed(tmp_14_fu_1724_p2)) else "0";
    tmp_16_fu_1771_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_1765_p2),17));
    tmp_17_fu_1775_p2 <= std_logic_vector(unsigned(ap_const_lv17_1) + unsigned(tmp_16_fu_1771_p1));
    tmp_184_0_1_i_fu_2129_p2 <= "1" when (signed(c1_0_1_cast_i_fu_2125_p1) < signed(cols_reg_2422)) else "0";
        tmp_186_0_i_cast_fu_2104_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_16_i_fu_1954_p3),18));

    tmp_18_fu_1980_p2 <= (p_16_i_fu_1954_p3 or p_15_i_fu_1915_p3);
    tmp_19_fu_2108_p2 <= std_logic_vector(signed(tmp_186_0_i_cast_fu_2104_p1) + signed(tmp_25_cast_fu_2096_p3));
    tmp_1_fu_1624_p2 <= (p_14_i_reg_2574 xor ap_const_lv16_FFFF);
    tmp_20_cast_fu_1815_p3 <= (tmp_74_fu_1811_p1 & ap_const_lv8_0);
    tmp_20_fu_2149_p2 <= std_logic_vector(unsigned(tmp_85_fu_2141_p3) + unsigned(tmp_25_cast_fu_2096_p3));
    tmp_21_fu_2201_p2 <= std_logic_vector(signed(tmp_186_0_i_cast_fu_2104_p1) + signed(tmp_34_cast_fu_2193_p3));
    tmp_22_fu_2207_p2 <= std_logic_vector(unsigned(tmp_85_fu_2141_p3) + unsigned(tmp_34_cast_fu_2193_p3));
    tmp_23_fu_2371_p4 <= r_V_fu_2347_p2(23 downto 16);
    tmp_24_fu_2381_p2 <= std_logic_vector(unsigned(ap_const_lv8_1) + unsigned(tmp_23_fu_2371_p4));
    tmp_25_cast_fu_2096_p3 <= (tmp_82_fu_2088_p3 & ap_const_lv8_0);
    tmp_25_fu_2387_p3 <= 
        tmp_23_fu_2371_p4 when (tmp_112_i_fu_2365_p2(0) = '1') else 
        tmp_24_fu_2381_p2;
        tmp_26_cast_fu_2114_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_19_fu_2108_p2),64));

    tmp_26_fu_2395_p3 <= 
        tmp_25_fu_2387_p3 when (tmp_88_fu_2353_p3(0) = '1') else 
        tmp_23_fu_2371_p4;
        tmp_27_cast_fu_2155_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_20_fu_2149_p2),64));

    tmp_27_fu_2217_p2 <= std_logic_vector(unsigned(tmp_114_i_cast_fu_2213_p1) + unsigned(tmp_20_cast_reg_2646));
    tmp_28_fu_340_p1 <= ireg_V_fu_336_p1(63 - 1 downto 0);
    tmp_29_fu_2021_p2 <= std_logic_vector(unsigned(tmp_20_cast_reg_2646) + unsigned(tmp_111_i_cast_fu_2017_p1));
    tmp_2_fu_1629_p2 <= "1" when (signed(tmp_fu_1619_p2) > signed(tmp_1_fu_1624_p2)) else "0";
    tmp_34_cast_fu_2193_p3 <= (tmp_87_fu_2185_p3 & ap_const_lv8_0);
    tmp_34_fu_362_p1 <= ireg_V_fu_336_p1(52 - 1 downto 0);
        tmp_35_cast_fu_2286_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_21_reg_2736),64));

        tmp_36_cast_fu_2290_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_22_reg_2741),64));

    tmp_36_i_fu_411_p3 <= (ap_const_lv1_1 & tmp_34_reg_2451);
    tmp_37_cast_fu_2404_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_27_reg_2746_pp0_iter1_reg),64));
    tmp_37_i_fu_629_p3 <= (ap_const_lv1_1 & tmp_44_reg_2473);
    tmp_38_cast_fu_2026_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_29_fu_2021_p2),64));
    tmp_39_fu_477_p1 <= man_V_2_fu_428_p3(32 - 1 downto 0);
    tmp_3_fu_1643_p2 <= (p_2_i_reg_2540 xor ap_const_lv16_FFFF);
    tmp_40_fu_487_p4 <= sh_amt_fu_459_p3(11 downto 5);
    tmp_41_fu_513_p1 <= tmp_56_i_fu_507_p2(32 - 1 downto 0);
    tmp_42_fu_376_p1 <= ireg_V_1_fu_372_p1(63 - 1 downto 0);
    tmp_44_fu_398_p1 <= ireg_V_1_fu_372_p1(52 - 1 downto 0);
    tmp_45_fu_695_p1 <= man_V_5_fu_646_p3(32 - 1 downto 0);
    tmp_45_i_fu_366_p2 <= "1" when (tmp_28_fu_340_p1 = ap_const_lv63_0) else "0";
    tmp_46_fu_705_p4 <= sh_amt_1_fu_677_p3(11 downto 5);
    tmp_47_fu_731_p1 <= tmp_72_i_fu_725_p2(32 - 1 downto 0);
    tmp_47_i_fu_441_p2 <= "1" when (signed(F2_fu_435_p2) > signed(ap_const_lv12_10)) else "0";
    tmp_48_fu_889_p1 <= p_Val2_27_fu_884_p2(16 - 1 downto 0);
    tmp_48_i_fu_447_p2 <= std_logic_vector(signed(ap_const_lv12_FF0) + signed(F2_fu_435_p2));
    tmp_49_fu_929_p3 <= p_Val2_28_fu_911_p3(31 downto 31);
    tmp_49_i_fu_453_p2 <= std_logic_vector(unsigned(ap_const_lv12_10) - unsigned(F2_fu_435_p2));
    tmp_4_fu_1648_p2 <= "1" when (signed(smax_fu_1635_p3) > signed(tmp_3_fu_1643_p2)) else "0";
    tmp_50_fu_937_p1 <= p_Val2_28_fu_911_p3(16 - 1 downto 0);
    tmp_50_i_fu_471_p2 <= "1" when (F2_fu_435_p2 = ap_const_lv12_10) else "0";
    tmp_51_fu_969_p1 <= p_1_i_fu_961_p3(15 - 1 downto 0);
    tmp_52_fu_978_p1 <= p_Val2_29_fu_973_p2(16 - 1 downto 0);
    tmp_52_i_fu_481_p2 <= "1" when (unsigned(sh_amt_fu_459_p3) < unsigned(ap_const_lv12_36)) else "0";
    tmp_53_fu_1018_p3 <= p_Val2_30_fu_1000_p3(31 downto 31);
    tmp_54_fu_1026_p1 <= p_Val2_30_fu_1000_p3(16 - 1 downto 0);
    tmp_55_fu_1058_p1 <= p_2_i_fu_1050_p3(15 - 1 downto 0);
    tmp_55_i_fu_503_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_amt_cast_i_fu_467_p1),54));
    tmp_56_fu_1067_p1 <= p_Val2_31_fu_1062_p2(16 - 1 downto 0);
    tmp_56_i_fu_507_p2 <= std_logic_vector(shift_right(signed(man_V_2_fu_428_p3),to_integer(unsigned('0' & tmp_55_i_fu_503_p1(31-1 downto 0)))));
    tmp_57_fu_1107_p3 <= p_Val2_32_fu_1089_p3(31 downto 31);
    tmp_58_fu_1115_p1 <= p_Val2_32_fu_1089_p3(16 - 1 downto 0);
    tmp_58_i_fu_524_p2 <= std_logic_vector(shift_left(unsigned(tmp_39_fu_477_p1),to_integer(unsigned('0' & sh_amt_cast_i_fu_467_p1(31-1 downto 0)))));
    tmp_59_fu_1152_p1 <= p_Val2_33_fu_1147_p2(16 - 1 downto 0);
    tmp_59_i_fu_626_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_V_1_reg_2468),12));
    tmp_60_fu_1192_p3 <= p_Val2_34_fu_1174_p3(31 downto 31);
    tmp_61_fu_1200_p1 <= p_Val2_34_fu_1174_p3(16 - 1 downto 0);
    tmp_61_i_fu_402_p2 <= "1" when (tmp_42_fu_376_p1 = ap_const_lv63_0) else "0";
    tmp_62_fu_1242_p1 <= p_Val2_35_fu_1236_p2(16 - 1 downto 0);
    tmp_63_fu_1282_p3 <= p_Val2_36_fu_1264_p3(31 downto 31);
    tmp_63_i_fu_659_p2 <= "1" when (signed(F2_1_fu_653_p2) > signed(ap_const_lv12_10)) else "0";
    tmp_64_fu_1290_p1 <= p_Val2_36_fu_1264_p3(16 - 1 downto 0);
    tmp_64_i_fu_665_p2 <= std_logic_vector(signed(ap_const_lv12_FF0) + signed(F2_1_fu_653_p2));
    tmp_65_fu_1327_p1 <= p_Val2_37_fu_1322_p2(16 - 1 downto 0);
    tmp_65_i_fu_671_p2 <= std_logic_vector(unsigned(ap_const_lv12_10) - unsigned(F2_1_fu_653_p2));
    tmp_66_fu_1367_p3 <= p_Val2_38_fu_1349_p3(31 downto 31);
    tmp_66_i_fu_689_p2 <= "1" when (F2_1_fu_653_p2 = ap_const_lv12_10) else "0";
    tmp_67_fu_1375_p1 <= p_Val2_38_fu_1349_p3(16 - 1 downto 0);
    tmp_68_fu_1407_p3 <= p_1_i_fu_961_p3(15 downto 15);
    tmp_68_i_fu_699_p2 <= "1" when (unsigned(sh_amt_1_fu_677_p3) < unsigned(ap_const_lv12_36)) else "0";
    tmp_69_fu_1532_p1 <= y_assign_2_fu_1526_p3(15 - 1 downto 0);
    tmp_70_fu_1423_p3 <= p_2_i_fu_1050_p3(15 downto 15);
    tmp_71_fu_1566_p1 <= y_assign_3_fu_1560_p3(15 - 1 downto 0);
    tmp_71_i_fu_721_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_amt_1_cast_i_fu_685_p1),54));
    tmp_72_fu_1662_p3 <= smax1_fu_1654_p3(15 downto 15);
    tmp_72_i_fu_725_p2 <= std_logic_vector(shift_right(signed(man_V_5_fu_646_p3),to_integer(unsigned('0' & tmp_71_i_fu_721_p1(31-1 downto 0)))));
    tmp_73_fu_1743_p3 <= smax4_fu_1735_p3(15 downto 15);
    tmp_74_fu_1811_p1 <= i4_i_reg_265(10 - 1 downto 0);
    tmp_74_i_fu_742_p2 <= std_logic_vector(shift_left(unsigned(tmp_45_fu_695_p1),to_integer(unsigned('0' & sh_amt_1_cast_i_fu_685_p1(31-1 downto 0)))));
    tmp_75_fu_1891_p3 <= p_Val2_39_reg_2661(31 downto 31);
    tmp_75_i_fu_941_p2 <= "1" when (tmp_50_fu_937_p1 = ap_const_lv16_0) else "0";
    tmp_76_fu_1873_p1 <= p_Val2_39_fu_1848_p2(16 - 1 downto 0);
    tmp_76_i_fu_1030_p2 <= "1" when (tmp_54_fu_1026_p1 = ap_const_lv16_0) else "0";
    tmp_77_fu_1930_p3 <= p_Val2_3_reg_2667(31 downto 31);
    tmp_77_i_fu_1119_p2 <= "1" when (tmp_58_fu_1115_p1 = ap_const_lv16_0) else "0";
    tmp_78_fu_1887_p1 <= p_Val2_3_fu_1858_p2(16 - 1 downto 0);
    tmp_78_i_fu_1204_p2 <= "1" when (tmp_61_fu_1200_p1 = ap_const_lv16_0) else "0";
    tmp_79_fu_1986_p3 <= tmp_18_fu_1980_p2(15 downto 15);
    tmp_79_i_fu_1294_p2 <= "1" when (tmp_64_fu_1290_p1 = ap_const_lv16_0) else "0";
    tmp_80_fu_2081_p1 <= rows_reg_2413(10 - 1 downto 0);
    tmp_80_i_fu_1379_p2 <= "1" when (tmp_67_fu_1375_p1 = ap_const_lv16_0) else "0";
    tmp_81_fu_2084_p1 <= p_15_i_fu_1915_p3(10 - 1 downto 0);
    tmp_82_fu_2088_p3 <= 
        tmp_80_fu_2081_p1 when (rev_fu_1974_p2(0) = '1') else 
        tmp_81_fu_2084_p1;
        tmp_83_fu_2134_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(c1_0_1_i_fu_2119_p2),18));

    tmp_84_fu_2138_p1 <= i_op_assign_reg_2501(18 - 1 downto 0);
    tmp_85_fu_2141_p3 <= 
        tmp_83_fu_2134_p1 when (tmp_184_0_1_i_fu_2129_p2(0) = '1') else 
        tmp_84_fu_2138_p1;
    tmp_86_fu_2181_p1 <= r1_i_fu_2160_p2(10 - 1 downto 0);
    tmp_87_fu_2185_p3 <= 
        tmp_80_fu_2081_p1 when (rev1_fu_2175_p2(0) = '1') else 
        tmp_86_fu_2181_p1;
    tmp_88_fu_2353_p3 <= r_V_fu_2347_p2(32 downto 32);
    tmp_89_cast_i_fu_1593_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_89_i_fu_1587_p2),17));
    tmp_89_fu_2361_p1 <= r_V_fu_2347_p2(16 - 1 downto 0);
    tmp_89_i_fu_1587_p2 <= std_logic_vector(unsigned(tmp_i83_cast_i_fu_1549_p1) - unsigned(x_min_fu_1467_p3));
    tmp_8_fu_1684_p2 <= std_logic_vector(unsigned(smax2_fu_1670_p3) + unsigned(tmp15_fu_1678_p2));
    tmp_90_cast_i_fu_1609_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_90_i_fu_1603_p2),17));
    tmp_90_i_fu_1603_p2 <= std_logic_vector(unsigned(tmp_i89_cast_i_fu_1583_p1) - unsigned(y_min_fu_1507_p3));
    tmp_94_i_fu_1898_p2 <= "1" when (tmp_76_reg_2680 = ap_const_lv16_0) else "0";
    tmp_95_i_fu_1937_p2 <= "1" when (tmp_78_reg_2692 = ap_const_lv16_0) else "0";
    tmp_97_i_fu_2006_p2 <= "1" when (signed(c0_fu_1961_p1) < signed(cols_reg_2422)) else "0";
    tmp_99_i_fu_2031_p3 <= (p_15_i_fu_1915_p3 & ap_const_lv16_0);
    tmp_9_fu_1690_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_fu_1684_p2),17));
    tmp_fu_1619_p2 <= (p_12_i_reg_2556 xor ap_const_lv16_FFFF);
    tmp_i68_i_fu_1451_p2 <= "1" when (signed(p_11_i_reg_2547) < signed(p_13_i_reg_2565)) else "0";
    tmp_i70_i_fu_1461_p2 <= "1" when (signed(x_assign_1_fu_1444_p3) < signed(y_assign_fu_1455_p3)) else "0";
        tmp_i71_cast_i_fu_1475_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_min_fu_1467_p3),17));

    tmp_i72_i_fu_1479_p2 <= "1" when (signed(p_2_i_reg_2540) > signed(ap_const_lv16_0)) else "0";
    tmp_i74_i_fu_1491_p2 <= "1" when (signed(p_12_i_reg_2556) < signed(p_14_i_reg_2574)) else "0";
    tmp_i76_i_fu_1501_p2 <= "1" when (signed(x_assign_2_fu_1484_p3) < signed(y_assign_1_fu_1495_p3)) else "0";
        tmp_i77_cast_i_fu_1515_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(y_min_fu_1507_p3),17));

    tmp_i79_cast_i_fu_1519_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(x_assign_3_reg_2583),16));
    tmp_i80_i_fu_1522_p2 <= "1" when (signed(p_11_i_reg_2547) > signed(p_13_i_reg_2565)) else "0";
    tmp_i82_i_fu_1536_p2 <= "1" when (signed(tmp_i79_cast_i_fu_1519_p1) > signed(y_assign_2_fu_1526_p3)) else "0";
    tmp_i83_cast_i_fu_1549_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(x_max_fu_1542_p3),16));
    tmp_i85_cast_i_fu_1553_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(x_assign_4_reg_2589),16));
    tmp_i86_i_fu_1556_p2 <= "1" when (signed(p_12_i_reg_2556) > signed(p_14_i_reg_2574)) else "0";
    tmp_i88_i_fu_1570_p2 <= "1" when (signed(tmp_i85_cast_i_fu_1553_p1) > signed(y_assign_3_fu_1560_p3)) else "0";
    tmp_i89_cast_i_fu_1583_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_max_fu_1576_p3),16));
    tmp_i_137_fu_408_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_V_reg_2446),12));
    tmp_i_i1_fu_893_p2 <= "1" when (tmp_48_fu_889_p1 = ap_const_lv16_0) else "0";
    tmp_i_i2_fu_982_p2 <= "1" when (tmp_52_fu_978_p1 = ap_const_lv16_0) else "0";
    tmp_i_i3_fu_1071_p2 <= "1" when (tmp_56_fu_1067_p1 = ap_const_lv16_0) else "0";
    tmp_i_i4_fu_1156_p2 <= "1" when (tmp_59_fu_1152_p1 = ap_const_lv16_0) else "0";
    tmp_i_i5_fu_1246_p2 <= "1" when (tmp_62_fu_1242_p1 = ap_const_lv16_0) else "0";
    tmp_i_i6_fu_1331_p2 <= "1" when (tmp_65_fu_1327_p1 = ap_const_lv16_0) else "0";
    tmp_i_i_fu_1439_p2 <= "1" when (signed(p_1_i_reg_2533) > signed(ap_const_lv16_0)) else "0";
    tmp_s_fu_1765_p2 <= std_logic_vector(unsigned(smax5_fu_1751_p3) + unsigned(tmp16_fu_1759_p2));
    x_assign_1_fu_1444_p3 <= 
        ap_const_lv16_0 when (tmp_i_i_fu_1439_p2(0) = '1') else 
        p_1_i_reg_2533;
    x_assign_2_fu_1484_p3 <= 
        ap_const_lv16_0 when (tmp_i72_i_fu_1479_p2(0) = '1') else 
        p_2_i_reg_2540;
    x_assign_3_fu_1415_p3 <= 
        ap_const_lv15_0 when (tmp_68_fu_1407_p3(0) = '1') else 
        tmp_51_fu_969_p1;
    x_assign_4_fu_1431_p3 <= 
        ap_const_lv15_0 when (tmp_70_fu_1423_p3(0) = '1') else 
        tmp_55_fu_1058_p1;
        x_cast_i_fu_1839_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_fu_1834_p2),32));

    x_fu_1834_p2 <= std_logic_vector(signed(tmp_i71_cast_i_reg_2595) + signed(ap_phi_mux_j5_i_phi_fu_280_p4));
    x_max_fu_1542_p3 <= 
        x_assign_3_reg_2583 when (tmp_i82_i_fu_1536_p2(0) = '1') else 
        tmp_69_fu_1532_p1;
    x_min_fu_1467_p3 <= 
        x_assign_1_fu_1444_p3 when (tmp_i70_i_fu_1461_p2(0) = '1') else 
        y_assign_fu_1455_p3;
    y_assign_1_fu_1495_p3 <= 
        p_12_i_reg_2556 when (tmp_i74_i_fu_1491_p2(0) = '1') else 
        p_14_i_reg_2574;
    y_assign_2_fu_1526_p3 <= 
        p_11_i_reg_2547 when (tmp_i80_i_fu_1522_p2(0) = '1') else 
        p_13_i_reg_2565;
    y_assign_3_fu_1560_p3 <= 
        p_12_i_reg_2556 when (tmp_i86_i_fu_1556_p2(0) = '1') else 
        p_14_i_reg_2574;
    y_assign_fu_1455_p3 <= 
        p_11_i_reg_2547 when (tmp_i68_i_fu_1451_p2(0) = '1') else 
        p_13_i_reg_2565;
        y_cast_i_fu_1797_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(y_fu_1792_p2),32));

    y_fu_1792_p2 <= std_logic_vector(signed(tmp_i77_cast_i_reg_2600) + signed(i4_i_reg_265));
    y_max_fu_1576_p3 <= 
        x_assign_4_reg_2589 when (tmp_i88_i_fu_1570_p2(0) = '1') else 
        tmp_71_fu_1566_p1;
    y_min_fu_1507_p3 <= 
        x_assign_2_fu_1484_p3 when (tmp_i76_i_fu_1501_p2(0) = '1') else 
        y_assign_1_fu_1495_p3;
end behav;
