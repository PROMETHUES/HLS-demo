-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity SeedFilling is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    src_val_address0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    src_val_ce0 : OUT STD_LOGIC;
    src_val_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    src_rows_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    src_rows_empty_n : IN STD_LOGIC;
    src_rows_read : OUT STD_LOGIC;
    src_cols_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    src_cols_empty_n : IN STD_LOGIC;
    src_cols_read : OUT STD_LOGIC;
    label_val_address0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    label_val_ce0 : OUT STD_LOGIC;
    label_val_we0 : OUT STD_LOGIC;
    label_val_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    label_val_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    num : OUT STD_LOGIC_VECTOR (31 downto 0);
    num_ap_vld : OUT STD_LOGIC;
    label_rows_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    label_rows_full_n : IN STD_LOGIC;
    label_rows_write : OUT STD_LOGIC;
    label_cols_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    label_cols_full_n : IN STD_LOGIC;
    label_cols_write : OUT STD_LOGIC );
end;


architecture behav of SeedFilling is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (11 downto 0) := "000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (11 downto 0) := "000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (11 downto 0) := "000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (11 downto 0) := "000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (11 downto 0) := "000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (11 downto 0) := "000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (11 downto 0) := "000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (11 downto 0) := "000100000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (11 downto 0) := "001000000000";
    constant ap_ST_fsm_pp1_stage1 : STD_LOGIC_VECTOR (11 downto 0) := "010000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (11 downto 0) := "100000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv40_0 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000000000000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv40_1F4 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000111110100";
    constant ap_const_lv31_1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv19_1F4 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000111110100";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal src_rows_blk_n : STD_LOGIC;
    signal src_cols_blk_n : STD_LOGIC;
    signal label_rows_blk_n : STD_LOGIC;
    signal label_cols_blk_n : STD_LOGIC;
    signal indvar_flatten_reg_326 : STD_LOGIC_VECTOR (3 downto 0);
    signal dr_i_reg_338 : STD_LOGIC_VECTOR (2 downto 0);
    signal dc_i_reg_349 : STD_LOGIC_VECTOR (2 downto 0);
    signal vector_length_read_a_1_reg_360 : STD_LOGIC_VECTOR (31 downto 0);
    signal rows_reg_848 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal cols_reg_856 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_404_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_1_reg_863 : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal next_mul_fu_408_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal next_mul_reg_868 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_4_i_fu_418_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_423_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_reg_877 : STD_LOGIC_VECTOR (30 downto 0);
    signal j_fu_448_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_3_fu_468_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_3_reg_914 : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal next_mul1_fu_472_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal next_mul1_reg_919 : STD_LOGIC_VECTOR (39 downto 0);
    signal i_1_fu_487_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_1_reg_927 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_8_fu_493_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_8_reg_932 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_7_i_fu_482_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_1_fu_510_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal j_1_reg_940 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal tmp_1_i_fu_505_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal label_val_addr_1_reg_950 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_398_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_955 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal tmp_11_i_fu_538_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_i_reg_959 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_i_fu_544_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_12_i_reg_965 : STD_LOGIC_VECTOR (7 downto 0);
    signal points_length_fu_562_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal points_length_reg_973 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal tmp_i_i_fu_556_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal points_val_x_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal c0_reg_988 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal points_val_y_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal r0_reg_993 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_14_i_fu_582_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_14_i_reg_999 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_block_state10_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state12_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal exitcond_flatten_fu_626_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_1004 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_fu_638_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_1008 : STD_LOGIC_VECTOR (0 downto 0);
    signal dc_i_mid2_fu_644_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal dc_i_mid2_reg_1013 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_14_i_mid1_fu_652_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_14_i_mid1_reg_1020 : STD_LOGIC_VECTOR (2 downto 0);
    signal r_mid2_fu_667_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_mid2_reg_1025 : STD_LOGIC_VECTOR (15 downto 0);
    signal dr_i_mid2_fu_712_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal dr_i_mid2_reg_1031 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal c_fu_724_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal c_reg_1036 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_cond6_i_fu_758_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond6_i_reg_1042 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next_fu_764_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal indvar_flatten_next_reg_1047 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_pp1_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage1 : signal is "none";
    signal ap_block_state11_pp1_stage1_iter0 : BOOLEAN;
    signal ap_block_pp1_stage1_11001 : BOOLEAN;
    signal demorgan_fu_804_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal demorgan_reg_1052 : STD_LOGIC_VECTOR (0 downto 0);
    signal label_val_addr_2_reg_1061 : STD_LOGIC_VECTOR (17 downto 0);
    signal dc_fu_823_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal dc_reg_1066 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_pp1_stage1_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state11 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal points_val_x_address0 : STD_LOGIC_VECTOR (16 downto 0);
    signal points_val_x_ce0 : STD_LOGIC;
    signal points_val_x_we0 : STD_LOGIC;
    signal points_val_x_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal points_val_y_address0 : STD_LOGIC_VECTOR (16 downto 0);
    signal points_val_y_ce0 : STD_LOGIC;
    signal points_val_y_we0 : STD_LOGIC;
    signal points_val_y_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_0_i_i_reg_248 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal phi_mul_reg_259 : STD_LOGIC_VECTOR (39 downto 0);
    signal j_0_i_i_reg_270 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_6_i_fu_443_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_i_reg_281 : STD_LOGIC_VECTOR (30 downto 0);
    signal phi_mul1_reg_292 : STD_LOGIC_VECTOR (39 downto 0);
    signal j1_i_reg_303 : STD_LOGIC_VECTOR (30 downto 0);
    signal vector_length_read_a_reg_315 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_phi_mux_indvar_flatten_phi_fu_330_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal ap_phi_mux_dr_i_phi_fu_342_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_phi_mux_dc_i_phi_fu_353_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_phi_mux_points_length_6_i_phi_fu_375_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter0_points_length_6_i_reg_371 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp1_iter1_points_length_6_i_reg_371 : STD_LOGIC_VECTOR (31 downto 0);
    signal points_length_1_fu_828_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_cast_fu_463_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_4_cast_fu_525_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_2_i_i_fu_568_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_6_cast_fu_817_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp1_stage1 : BOOLEAN;
    signal tmp_1_i25_i_fu_835_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal num_loc_i_fu_102 : STD_LOGIC_VECTOR (31 downto 0);
    signal num_local_fu_106 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_fu_551_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_386_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_392_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_0_i_cast_i_fu_414_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_0_i_cast_i_fu_439_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_454_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_2_fu_458_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal i_cast_i_fu_478_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal j1_cast_i_fu_501_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_516_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_4_fu_520_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_10_fu_534_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_15_i_fu_588_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_fu_592_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_12_fu_597_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_i_fu_611_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_i_fu_615_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_fu_605_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal dr_fu_632_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_15_i_mid1_fu_658_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_mid1_fu_662_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_13_fu_675_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_i_mid1_fu_689_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_i_mid1_fu_693_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev1_fu_683_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_mid1_fu_698_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_620_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_i_fu_720_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_14_fu_729_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_i_fu_743_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_25_i_fu_747_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev2_fu_737_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp1_fu_752_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_mid2_fu_704_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_i_mid2_fu_770_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_20_i_fu_778_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_21_i_fu_782_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_15_fu_788_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_fu_798_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_fu_841_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_27_i_cast_fu_809_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_6_fu_812_p2 : STD_LOGIC_VECTOR (18 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of tmp_6_fu_812_p2 : signal is "no";
    signal tmp_5_fu_841_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_condition_711 : BOOLEAN;
    signal ap_condition_244 : BOOLEAN;

    component SeedFilling1_CoredEe IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        dout : OUT STD_LOGIC_VECTOR (18 downto 0) );
    end component;


    component SeedFilling_pointbkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (16 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    points_val_x_U : component SeedFilling_pointbkb
    generic map (
        DataWidth => 16,
        AddressRange => 125000,
        AddressWidth => 17)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => points_val_x_address0,
        ce0 => points_val_x_ce0,
        we0 => points_val_x_we0,
        d0 => points_val_x_d0,
        q0 => points_val_x_q0);

    points_val_y_U : component SeedFilling_pointbkb
    generic map (
        DataWidth => 16,
        AddressRange => 125000,
        AddressWidth => 17)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => points_val_y_address0,
        ce0 => points_val_y_ce0,
        we0 => points_val_y_we0,
        d0 => points_val_y_d0,
        q0 => points_val_y_q0);

    SeedFilling1_CoredEe_U23 : component SeedFilling1_CoredEe
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 10,
        dout_WIDTH => 19)
    port map (
        din0 => r_mid2_reg_1025,
        din1 => tmp_5_fu_841_p1,
        dout => tmp_5_fu_841_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (tmp_7_i_fu_482_p2 = ap_const_lv1_0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage1_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state11) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage1_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state11) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1))) then 
                    ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state11);
                elsif (((ap_const_boolean_0 = ap_block_pp1_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1))) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp1_iter1_points_length_6_i_reg_371_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_244)) then
                if (((demorgan_fu_804_p2 = ap_const_lv1_0) and (exitcond_flatten_reg_1004 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp1_iter1_points_length_6_i_reg_371 <= vector_length_read_a_1_reg_360;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter1_points_length_6_i_reg_371 <= ap_phi_reg_pp1_iter0_points_length_6_i_reg_371;
                end if;
            end if; 
        end if;
    end process;

    dc_i_reg_349_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond_flatten_reg_1004 = ap_const_lv1_0))) then 
                dc_i_reg_349 <= dc_reg_1066;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                dc_i_reg_349 <= ap_const_lv3_7;
            end if; 
        end if;
    end process;

    dr_i_reg_338_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond_flatten_reg_1004 = ap_const_lv1_0))) then 
                dr_i_reg_338 <= dr_i_mid2_reg_1031;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                dr_i_reg_338 <= ap_const_lv3_7;
            end if; 
        end if;
    end process;

    i_0_i_i_reg_248_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                i_0_i_i_reg_248 <= i_reg_877;
            elsif ((not(((label_cols_full_n = ap_const_logic_0) or (label_rows_full_n = ap_const_logic_0) or (src_cols_empty_n = ap_const_logic_0) or (src_rows_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_0_i_i_reg_248 <= ap_const_lv31_0;
            end if; 
        end if;
    end process;

    i_i_reg_281_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_i_fu_505_p2 = ap_const_lv1_0))) then 
                i_i_reg_281 <= i_1_reg_927;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_4_i_fu_418_p2 = ap_const_lv1_0))) then 
                i_i_reg_281 <= ap_const_lv31_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_326_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond_flatten_reg_1004 = ap_const_lv1_0))) then 
                indvar_flatten_reg_326 <= indvar_flatten_next_reg_1047;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                indvar_flatten_reg_326 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    j1_i_reg_303_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and ((tmp_i_i_fu_556_p2 = ap_const_lv1_1) or (or_cond_i_reg_955 = ap_const_lv1_0)))) then 
                j1_i_reg_303 <= j_1_reg_940;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (tmp_7_i_fu_482_p2 = ap_const_lv1_1))) then 
                j1_i_reg_303 <= ap_const_lv31_0;
            end if; 
        end if;
    end process;

    j_0_i_i_reg_270_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_4_i_fu_418_p2 = ap_const_lv1_1))) then 
                j_0_i_i_reg_270 <= ap_const_lv31_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_6_i_fu_443_p2 = ap_const_lv1_1))) then 
                j_0_i_i_reg_270 <= j_fu_448_p2;
            end if; 
        end if;
    end process;

    num_loc_i_fu_102_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (tmp_i_i_fu_556_p2 = ap_const_lv1_1) and (or_cond_i_reg_955 = ap_const_lv1_1))) then 
                num_loc_i_fu_102 <= tmp_11_i_reg_959;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_4_i_fu_418_p2 = ap_const_lv1_0))) then 
                num_loc_i_fu_102 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    num_local_fu_106_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (tmp_i_i_fu_556_p2 = ap_const_lv1_1) and (or_cond_i_reg_955 = ap_const_lv1_1))) then 
                num_local_fu_106 <= tmp_11_i_reg_959;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_4_i_fu_418_p2 = ap_const_lv1_0))) then 
                num_local_fu_106 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    phi_mul1_reg_292_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_i_fu_505_p2 = ap_const_lv1_0))) then 
                phi_mul1_reg_292 <= next_mul1_reg_919;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_4_i_fu_418_p2 = ap_const_lv1_0))) then 
                phi_mul1_reg_292 <= ap_const_lv40_0;
            end if; 
        end if;
    end process;

    phi_mul_reg_259_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                phi_mul_reg_259 <= next_mul_reg_868;
            elsif ((not(((label_cols_full_n = ap_const_logic_0) or (label_rows_full_n = ap_const_logic_0) or (src_cols_empty_n = ap_const_logic_0) or (src_rows_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                phi_mul_reg_259 <= ap_const_lv40_0;
            end if; 
        end if;
    end process;

    vector_length_read_a_1_reg_360_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond_flatten_reg_1004 = ap_const_lv1_0))) then 
                vector_length_read_a_1_reg_360 <= ap_phi_mux_points_length_6_i_phi_fu_375_p6;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                vector_length_read_a_1_reg_360 <= points_length_reg_973;
            end if; 
        end if;
    end process;

    vector_length_read_a_reg_315_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                vector_length_read_a_reg_315 <= vector_length_read_a_1_reg_360;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (grp_fu_398_p2 = ap_const_lv1_1))) then 
                vector_length_read_a_reg_315 <= ap_const_lv32_1;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                c0_reg_988 <= points_val_x_q0;
                r0_reg_993 <= points_val_y_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond_flatten_fu_626_p2 = ap_const_lv1_0))) then
                c_reg_1036 <= c_fu_724_p2;
                dc_i_mid2_reg_1013 <= dc_i_mid2_fu_644_p3;
                exitcond_i_reg_1008 <= exitcond_i_fu_638_p2;
                or_cond6_i_reg_1042 <= or_cond6_i_fu_758_p2;
                r_mid2_reg_1025 <= r_mid2_fu_667_p3;
                tmp_14_i_mid1_reg_1020 <= tmp_14_i_mid1_fu_652_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((label_cols_full_n = ap_const_logic_0) or (label_rows_full_n = ap_const_logic_0) or (src_cols_empty_n = ap_const_logic_0) or (src_rows_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                cols_reg_856 <= src_cols_dout;
                rows_reg_848 <= src_rows_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_1004 = ap_const_lv1_0))) then
                dc_reg_1066 <= dc_fu_823_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (exitcond_flatten_reg_1004 = ap_const_lv1_0))) then
                demorgan_reg_1052 <= demorgan_fu_804_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond_flatten_fu_626_p2 = ap_const_lv1_0))) then
                dr_i_mid2_reg_1031 <= dr_i_mid2_fu_712_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                exitcond_flatten_reg_1004 <= exitcond_flatten_fu_626_p2;
                tmp_14_i_reg_999 <= tmp_14_i_fu_582_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                i_1_reg_927 <= i_1_fu_487_p2;
                next_mul1_reg_919 <= next_mul1_fu_472_p2;
                tmp_3_reg_914 <= tmp_3_fu_468_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_reg_877 <= i_fu_423_p2;
                next_mul_reg_868 <= next_mul_fu_408_p2;
                tmp_1_reg_863 <= tmp_1_fu_404_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then
                indvar_flatten_next_reg_1047 <= indvar_flatten_next_fu_764_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                j_1_reg_940 <= j_1_fu_510_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_i_fu_505_p2 = ap_const_lv1_1))) then
                label_val_addr_1_reg_950 <= tmp_4_cast_fu_525_p1(18 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (demorgan_fu_804_p2 = ap_const_lv1_1) and (exitcond_flatten_reg_1004 = ap_const_lv1_0))) then
                label_val_addr_2_reg_1061 <= tmp_6_cast_fu_817_p1(18 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                or_cond_i_reg_955 <= grp_fu_398_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (or_cond_i_reg_955 = ap_const_lv1_1) and (tmp_i_i_fu_556_p2 = ap_const_lv1_0))) then
                points_length_reg_973 <= points_length_fu_562_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (grp_fu_398_p2 = ap_const_lv1_1))) then
                tmp_11_i_reg_959 <= tmp_11_i_fu_538_p2;
                tmp_12_i_reg_965 <= tmp_12_i_fu_544_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (tmp_7_i_fu_482_p2 = ap_const_lv1_1))) then
                tmp_8_reg_932 <= tmp_8_fu_493_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, src_rows_empty_n, src_cols_empty_n, label_rows_full_n, label_cols_full_n, ap_CS_fsm_state2, tmp_4_i_fu_418_p2, ap_CS_fsm_state3, ap_CS_fsm_state5, tmp_7_i_fu_482_p2, ap_CS_fsm_state6, tmp_1_i_fu_505_p2, or_cond_i_reg_955, ap_CS_fsm_state8, tmp_i_i_fu_556_p2, exitcond_flatten_reg_1004, ap_enable_reg_pp1_iter0, ap_block_pp1_stage1_subdone, tmp_6_i_fu_443_p2, ap_block_pp1_stage0_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((label_cols_full_n = ap_const_logic_0) or (label_rows_full_n = ap_const_logic_0) or (src_cols_empty_n = ap_const_logic_0) or (src_rows_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_4_i_fu_418_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_6_i_fu_443_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (tmp_7_i_fu_482_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_1_i_fu_505_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and ((tmp_i_i_fu_556_p2 = ap_const_lv1_1) or (or_cond_i_reg_955 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_pp1_stage1 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp1_stage1_subdone) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_1004 = ap_const_lv1_1))) and (ap_const_boolean_0 = ap_block_pp1_stage1_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp1_stage1_subdone) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_1004 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage1;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(9);
    ap_CS_fsm_pp1_stage1 <= ap_CS_fsm(10);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state13 <= ap_CS_fsm(11);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, src_rows_empty_n, src_cols_empty_n, label_rows_full_n, label_cols_full_n)
    begin
                ap_block_state1 <= ((label_cols_full_n = ap_const_logic_0) or (label_rows_full_n = ap_const_logic_0) or (src_cols_empty_n = ap_const_logic_0) or (src_rows_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state10_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp1_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_244_assign_proc : process(ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_11001)
    begin
                ap_condition_244 <= ((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1));
    end process;


    ap_condition_711_assign_proc : process(ap_CS_fsm_pp1_stage0, exitcond_flatten_reg_1004, demorgan_reg_1052, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0)
    begin
                ap_condition_711 <= ((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (demorgan_reg_1052 = ap_const_lv1_1) and (exitcond_flatten_reg_1004 = ap_const_lv1_0));
    end process;


    ap_condition_pp1_exit_iter0_state11_assign_proc : process(exitcond_flatten_reg_1004)
    begin
        if ((exitcond_flatten_reg_1004 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state11 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state11 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state5, tmp_7_i_fu_482_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (tmp_7_i_fu_482_p2 = ap_const_lv1_0))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_dc_i_phi_fu_353_p4_assign_proc : process(dc_i_reg_349, ap_CS_fsm_pp1_stage0, exitcond_flatten_reg_1004, dc_reg_1066, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond_flatten_reg_1004 = ap_const_lv1_0))) then 
            ap_phi_mux_dc_i_phi_fu_353_p4 <= dc_reg_1066;
        else 
            ap_phi_mux_dc_i_phi_fu_353_p4 <= dc_i_reg_349;
        end if; 
    end process;


    ap_phi_mux_dr_i_phi_fu_342_p4_assign_proc : process(dr_i_reg_338, ap_CS_fsm_pp1_stage0, exitcond_flatten_reg_1004, dr_i_mid2_reg_1031, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond_flatten_reg_1004 = ap_const_lv1_0))) then 
            ap_phi_mux_dr_i_phi_fu_342_p4 <= dr_i_mid2_reg_1031;
        else 
            ap_phi_mux_dr_i_phi_fu_342_p4 <= dr_i_reg_338;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten_phi_fu_330_p4_assign_proc : process(indvar_flatten_reg_326, ap_CS_fsm_pp1_stage0, exitcond_flatten_reg_1004, indvar_flatten_next_reg_1047, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond_flatten_reg_1004 = ap_const_lv1_0))) then 
            ap_phi_mux_indvar_flatten_phi_fu_330_p4 <= indvar_flatten_next_reg_1047;
        else 
            ap_phi_mux_indvar_flatten_phi_fu_330_p4 <= indvar_flatten_reg_326;
        end if; 
    end process;


    ap_phi_mux_points_length_6_i_phi_fu_375_p6_assign_proc : process(vector_length_read_a_1_reg_360, grp_fu_398_p2, ap_phi_reg_pp1_iter1_points_length_6_i_reg_371, points_length_1_fu_828_p2, ap_condition_711)
    begin
        if ((ap_const_boolean_1 = ap_condition_711)) then
            if ((grp_fu_398_p2 = ap_const_lv1_0)) then 
                ap_phi_mux_points_length_6_i_phi_fu_375_p6 <= vector_length_read_a_1_reg_360;
            elsif ((grp_fu_398_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_points_length_6_i_phi_fu_375_p6 <= points_length_1_fu_828_p2;
            else 
                ap_phi_mux_points_length_6_i_phi_fu_375_p6 <= ap_phi_reg_pp1_iter1_points_length_6_i_reg_371;
            end if;
        else 
            ap_phi_mux_points_length_6_i_phi_fu_375_p6 <= ap_phi_reg_pp1_iter1_points_length_6_i_reg_371;
        end if; 
    end process;

    ap_phi_reg_pp1_iter0_points_length_6_i_reg_371 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_ready_assign_proc : process(ap_CS_fsm_state5, tmp_7_i_fu_482_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (tmp_7_i_fu_482_p2 = ap_const_lv1_0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    c_fu_724_p2 <= std_logic_vector(signed(tmp_22_i_fu_720_p1) + signed(c0_reg_988));
    dc_fu_823_p2 <= std_logic_vector(signed(dc_i_mid2_reg_1013) + signed(ap_const_lv3_1));
    dc_i_mid2_fu_644_p3 <= 
        ap_const_lv3_7 when (exitcond_i_fu_638_p2(0) = '1') else 
        ap_phi_mux_dc_i_phi_fu_353_p4;
    demorgan_fu_804_p2 <= (or_cond6_i_reg_1042 and icmp_fu_798_p2);
    dr_fu_632_p2 <= std_logic_vector(signed(ap_phi_mux_dr_i_phi_fu_342_p4) + signed(ap_const_lv3_1));
    dr_i_mid2_fu_712_p3 <= 
        dr_fu_632_p2 when (exitcond_i_fu_638_p2(0) = '1') else 
        ap_phi_mux_dr_i_phi_fu_342_p4;
    exitcond_flatten_fu_626_p2 <= "1" when (ap_phi_mux_indvar_flatten_phi_fu_330_p4 = ap_const_lv4_9) else "0";
    exitcond_i_fu_638_p2 <= "1" when (ap_phi_mux_dc_i_phi_fu_353_p4 = ap_const_lv3_2) else "0";
    grp_fu_386_p2 <= "0" when (src_val_q0 = ap_const_lv8_0) else "1";
    grp_fu_392_p2 <= "1" when (label_val_q0 = ap_const_lv8_0) else "0";
    grp_fu_398_p2 <= (grp_fu_392_p2 and grp_fu_386_p2);
    i_0_i_cast_i_fu_414_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i_i_reg_248),32));
    i_1_fu_487_p2 <= std_logic_vector(unsigned(ap_const_lv31_1) + unsigned(i_i_reg_281));
    i_cast_i_fu_478_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_i_reg_281),32));
    i_fu_423_p2 <= std_logic_vector(unsigned(ap_const_lv31_1) + unsigned(i_0_i_i_reg_248));
    icmp_fu_798_p2 <= "0" when (tmp_15_fu_788_p4 = ap_const_lv2_1) else "1";
    indvar_flatten_next_fu_764_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_326) + unsigned(ap_const_lv4_1));
    j1_cast_i_fu_501_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j1_i_reg_303),32));
    j_0_i_cast_i_fu_439_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_0_i_i_reg_270),32));
    j_1_fu_510_p2 <= std_logic_vector(unsigned(j1_i_reg_303) + unsigned(ap_const_lv31_1));
    j_fu_448_p2 <= std_logic_vector(unsigned(j_0_i_i_reg_270) + unsigned(ap_const_lv31_1));

    label_cols_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, label_cols_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            label_cols_blk_n <= label_cols_full_n;
        else 
            label_cols_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    label_cols_din <= src_cols_dout;

    label_cols_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, src_rows_empty_n, src_cols_empty_n, label_rows_full_n, label_cols_full_n)
    begin
        if ((not(((label_cols_full_n = ap_const_logic_0) or (label_rows_full_n = ap_const_logic_0) or (src_cols_empty_n = ap_const_logic_0) or (src_rows_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            label_cols_write <= ap_const_logic_1;
        else 
            label_cols_write <= ap_const_logic_0;
        end if; 
    end process;


    label_rows_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, label_rows_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            label_rows_blk_n <= label_rows_full_n;
        else 
            label_rows_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    label_rows_din <= src_rows_dout;

    label_rows_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, src_rows_empty_n, src_cols_empty_n, label_rows_full_n, label_cols_full_n)
    begin
        if ((not(((label_cols_full_n = ap_const_logic_0) or (label_rows_full_n = ap_const_logic_0) or (src_cols_empty_n = ap_const_logic_0) or (src_rows_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            label_rows_write <= ap_const_logic_1;
        else 
            label_rows_write <= ap_const_logic_0;
        end if; 
    end process;


    label_val_address0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state6, label_val_addr_1_reg_950, ap_CS_fsm_state7, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage1, label_val_addr_2_reg_1061, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, tmp_2_cast_fu_463_p1, tmp_4_cast_fu_525_p1, tmp_6_cast_fu_817_p1, ap_block_pp1_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            label_val_address0 <= label_val_addr_2_reg_1061;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            label_val_address0 <= tmp_6_cast_fu_817_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            label_val_address0 <= label_val_addr_1_reg_950;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            label_val_address0 <= tmp_4_cast_fu_525_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            label_val_address0 <= tmp_2_cast_fu_463_p1(18 - 1 downto 0);
        else 
            label_val_address0 <= "XXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    label_val_ce0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_11001, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            label_val_ce0 <= ap_const_logic_1;
        else 
            label_val_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    label_val_d0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state7, tmp_12_i_fu_544_p2, tmp_12_i_reg_965, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            label_val_d0 <= tmp_12_i_reg_965;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            label_val_d0 <= tmp_12_i_fu_544_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            label_val_d0 <= ap_const_lv8_0;
        else 
            label_val_d0 <= "XXXXXXXX";
        end if; 
    end process;


    label_val_we0_assign_proc : process(ap_CS_fsm_state3, grp_fu_398_p2, ap_CS_fsm_state7, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, exitcond_flatten_reg_1004, demorgan_reg_1052, ap_enable_reg_pp1_iter1, tmp_6_i_fu_443_p2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (demorgan_reg_1052 = ap_const_lv1_1) and (grp_fu_398_p2 = ap_const_lv1_1) and (exitcond_flatten_reg_1004 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (grp_fu_398_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_6_i_fu_443_p2 = ap_const_lv1_1)))) then 
            label_val_we0 <= ap_const_logic_1;
        else 
            label_val_we0 <= ap_const_logic_0;
        end if; 
    end process;

    next_mul1_fu_472_p2 <= std_logic_vector(unsigned(ap_const_lv40_1F4) + unsigned(phi_mul1_reg_292));
    next_mul_fu_408_p2 <= std_logic_vector(unsigned(ap_const_lv40_1F4) + unsigned(phi_mul_reg_259));
    num <= num_local_fu_106;

    num_ap_vld_assign_proc : process(ap_CS_fsm_state5, tmp_7_i_fu_482_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (tmp_7_i_fu_482_p2 = ap_const_lv1_0))) then 
            num_ap_vld <= ap_const_logic_1;
        else 
            num_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    or_cond6_i_fu_758_p2 <= (tmp_mid2_fu_704_p3 and tmp1_fu_752_p2);
    points_length_1_fu_828_p2 <= std_logic_vector(signed(vector_length_read_a_1_reg_360) + signed(ap_const_lv32_1));
    points_length_fu_562_p2 <= std_logic_vector(unsigned(vector_length_read_a_reg_315) + unsigned(ap_const_lv32_FFFFFFFF));

    points_val_x_address0_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, tmp_2_i_i_fu_568_p1, tmp_1_i25_i_fu_835_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            points_val_x_address0 <= tmp_1_i25_i_fu_835_p1(17 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            points_val_x_address0 <= tmp_2_i_i_fu_568_p1(17 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            points_val_x_address0 <= ap_const_lv64_0(17 - 1 downto 0);
        else 
            points_val_x_address0 <= "XXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    points_val_x_ce0_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            points_val_x_ce0 <= ap_const_logic_1;
        else 
            points_val_x_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    points_val_x_d0_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_pp1_stage0, c_reg_1036, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, tmp_11_fu_551_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            points_val_x_d0 <= c_reg_1036;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            points_val_x_d0 <= tmp_11_fu_551_p1;
        else 
            points_val_x_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    points_val_x_we0_assign_proc : process(grp_fu_398_p2, ap_CS_fsm_state7, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, exitcond_flatten_reg_1004, demorgan_reg_1052, ap_enable_reg_pp1_iter1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (demorgan_reg_1052 = ap_const_lv1_1) and (grp_fu_398_p2 = ap_const_lv1_1) and (exitcond_flatten_reg_1004 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (grp_fu_398_p2 = ap_const_lv1_1)))) then 
            points_val_x_we0 <= ap_const_logic_1;
        else 
            points_val_x_we0 <= ap_const_logic_0;
        end if; 
    end process;


    points_val_y_address0_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, tmp_2_i_i_fu_568_p1, tmp_1_i25_i_fu_835_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            points_val_y_address0 <= tmp_1_i25_i_fu_835_p1(17 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            points_val_y_address0 <= tmp_2_i_i_fu_568_p1(17 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            points_val_y_address0 <= ap_const_lv64_0(17 - 1 downto 0);
        else 
            points_val_y_address0 <= "XXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    points_val_y_ce0_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            points_val_y_ce0 <= ap_const_logic_1;
        else 
            points_val_y_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    points_val_y_d0_assign_proc : process(tmp_8_reg_932, ap_CS_fsm_state7, ap_CS_fsm_pp1_stage0, r_mid2_reg_1025, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            points_val_y_d0 <= r_mid2_reg_1025;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            points_val_y_d0 <= tmp_8_reg_932;
        else 
            points_val_y_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    points_val_y_we0_assign_proc : process(grp_fu_398_p2, ap_CS_fsm_state7, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, exitcond_flatten_reg_1004, demorgan_reg_1052, ap_enable_reg_pp1_iter1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (demorgan_reg_1052 = ap_const_lv1_1) and (grp_fu_398_p2 = ap_const_lv1_1) and (exitcond_flatten_reg_1004 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (grp_fu_398_p2 = ap_const_lv1_1)))) then 
            points_val_y_we0 <= ap_const_logic_1;
        else 
            points_val_y_we0 <= ap_const_logic_0;
        end if; 
    end process;

    r_fu_592_p2 <= std_logic_vector(unsigned(r0_reg_993) + unsigned(tmp_15_i_fu_588_p1));
    r_mid1_fu_662_p2 <= std_logic_vector(signed(tmp_15_i_mid1_fu_658_p1) + signed(r0_reg_993));
    r_mid2_fu_667_p3 <= 
        r_mid1_fu_662_p2 when (exitcond_i_fu_638_p2(0) = '1') else 
        r_fu_592_p2;
    rev1_fu_683_p2 <= (tmp_13_fu_675_p3 xor ap_const_lv1_1);
    rev2_fu_737_p2 <= (tmp_14_fu_729_p3 xor ap_const_lv1_1);
    rev_fu_605_p2 <= (tmp_12_fu_597_p3 xor ap_const_lv1_1);

    src_cols_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, src_cols_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            src_cols_blk_n <= src_cols_empty_n;
        else 
            src_cols_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    src_cols_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, src_rows_empty_n, src_cols_empty_n, label_rows_full_n, label_cols_full_n)
    begin
        if ((not(((label_cols_full_n = ap_const_logic_0) or (label_rows_full_n = ap_const_logic_0) or (src_cols_empty_n = ap_const_logic_0) or (src_rows_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            src_cols_read <= ap_const_logic_1;
        else 
            src_cols_read <= ap_const_logic_0;
        end if; 
    end process;


    src_rows_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, src_rows_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            src_rows_blk_n <= src_rows_empty_n;
        else 
            src_rows_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    src_rows_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, src_rows_empty_n, src_cols_empty_n, label_rows_full_n, label_cols_full_n)
    begin
        if ((not(((label_cols_full_n = ap_const_logic_0) or (label_rows_full_n = ap_const_logic_0) or (src_cols_empty_n = ap_const_logic_0) or (src_rows_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            src_rows_read <= ap_const_logic_1;
        else 
            src_rows_read <= ap_const_logic_0;
        end if; 
    end process;


    src_val_address0_assign_proc : process(ap_CS_fsm_state6, ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage1, tmp_4_cast_fu_525_p1, tmp_6_cast_fu_817_p1, ap_block_pp1_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            src_val_address0 <= tmp_6_cast_fu_817_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            src_val_address0 <= tmp_4_cast_fu_525_p1(18 - 1 downto 0);
        else 
            src_val_address0 <= "XXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    src_val_ce0_assign_proc : process(ap_CS_fsm_state6, ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or ((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then 
            src_val_ce0 <= ap_const_logic_1;
        else 
            src_val_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp1_fu_752_p2 <= (tmp_25_i_fu_747_p2 and rev2_fu_737_p2);
    tmp_10_fu_534_p1 <= num_loc_i_fu_102(8 - 1 downto 0);
    tmp_11_fu_551_p1 <= j1_i_reg_303(16 - 1 downto 0);
    tmp_11_i_fu_538_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(num_loc_i_fu_102));
    tmp_12_fu_597_p3 <= r_fu_592_p2(15 downto 15);
    tmp_12_i_fu_544_p2 <= std_logic_vector(unsigned(ap_const_lv8_1) + unsigned(tmp_10_fu_534_p1));
    tmp_13_fu_675_p3 <= r_mid1_fu_662_p2(15 downto 15);
    tmp_14_fu_729_p3 <= c_fu_724_p2(15 downto 15);
    tmp_14_i_fu_582_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(ap_phi_mux_dr_i_phi_fu_342_p4) * signed(ap_phi_mux_dr_i_phi_fu_342_p4))), 3));
    tmp_14_i_mid1_fu_652_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(dr_fu_632_p2) * signed(dr_fu_632_p2))), 3));
    tmp_14_i_mid2_fu_770_p3 <= 
        tmp_14_i_mid1_reg_1020 when (exitcond_i_reg_1008(0) = '1') else 
        tmp_14_i_reg_999;
    tmp_15_fu_788_p4 <= tmp_21_i_fu_782_p2(2 downto 1);
        tmp_15_i_fu_588_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_phi_mux_dr_i_phi_fu_342_p4),16));

        tmp_15_i_mid1_fu_658_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(dr_fu_632_p2),16));

        tmp_17_i_fu_611_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_fu_592_p2),32));

        tmp_17_i_mid1_fu_689_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_mid1_fu_662_p2),32));

    tmp_18_i_fu_615_p2 <= "1" when (signed(tmp_17_i_fu_611_p1) < signed(rows_reg_848)) else "0";
    tmp_18_i_mid1_fu_693_p2 <= "1" when (signed(tmp_17_i_mid1_fu_689_p1) < signed(rows_reg_848)) else "0";
    tmp_1_fu_404_p1 <= phi_mul_reg_259(19 - 1 downto 0);
        tmp_1_i25_i_fu_835_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(vector_length_read_a_1_reg_360),64));

    tmp_1_i_fu_505_p2 <= "1" when (signed(j1_cast_i_fu_501_p1) < signed(cols_reg_856)) else "0";
    tmp_20_i_fu_778_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(dc_i_mid2_reg_1013) * signed(dc_i_mid2_reg_1013))), 3));
    tmp_21_i_fu_782_p2 <= std_logic_vector(unsigned(tmp_14_i_mid2_fu_770_p3) + unsigned(tmp_20_i_fu_778_p2));
        tmp_22_i_fu_720_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(dc_i_mid2_fu_644_p3),16));

        tmp_24_i_fu_743_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(c_fu_724_p2),32));

    tmp_25_i_fu_747_p2 <= "1" when (signed(tmp_24_i_fu_743_p1) < signed(cols_reg_856)) else "0";
        tmp_27_i_cast_fu_809_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(c_reg_1036),19));

    tmp_2_cast_fu_463_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_fu_458_p2),64));
    tmp_2_fu_458_p2 <= std_logic_vector(unsigned(tmp_1_reg_863) + unsigned(tmp_7_fu_454_p1));
        tmp_2_i_i_fu_568_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(points_length_fu_562_p2),64));

    tmp_3_fu_468_p1 <= phi_mul1_reg_292(19 - 1 downto 0);
    tmp_4_cast_fu_525_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_fu_520_p2),64));
    tmp_4_fu_520_p2 <= std_logic_vector(unsigned(tmp_3_reg_914) + unsigned(tmp_9_fu_516_p1));
    tmp_4_i_fu_418_p2 <= "1" when (signed(i_0_i_cast_i_fu_414_p1) < signed(rows_reg_848)) else "0";
    tmp_5_fu_841_p1 <= ap_const_lv19_1F4(10 - 1 downto 0);
        tmp_6_cast_fu_817_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_6_fu_812_p2),64));

    tmp_6_fu_812_p2 <= std_logic_vector(signed(tmp_5_fu_841_p2) + signed(tmp_27_i_cast_fu_809_p1));
    tmp_6_i_fu_443_p2 <= "1" when (signed(j_0_i_cast_i_fu_439_p1) < signed(cols_reg_856)) else "0";
    tmp_7_fu_454_p1 <= j_0_i_i_reg_270(19 - 1 downto 0);
    tmp_7_i_fu_482_p2 <= "1" when (signed(i_cast_i_fu_478_p1) < signed(rows_reg_848)) else "0";
    tmp_8_fu_493_p1 <= i_i_reg_281(16 - 1 downto 0);
    tmp_9_fu_516_p1 <= j1_i_reg_303(19 - 1 downto 0);
    tmp_fu_620_p2 <= (tmp_18_i_fu_615_p2 and rev_fu_605_p2);
    tmp_i_i_fu_556_p2 <= "1" when (vector_length_read_a_reg_315 = ap_const_lv32_0) else "0";
    tmp_mid1_fu_698_p2 <= (tmp_18_i_mid1_fu_693_p2 and rev1_fu_683_p2);
    tmp_mid2_fu_704_p3 <= 
        tmp_mid1_fu_698_p2 when (exitcond_i_fu_638_p2(0) = '1') else 
        tmp_fu_620_p2;
end behav;
