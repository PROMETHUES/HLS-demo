// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module SeedFilling (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        src_val_address0,
        src_val_ce0,
        src_val_q0,
        src_rows_dout,
        src_rows_empty_n,
        src_rows_read,
        src_cols_dout,
        src_cols_empty_n,
        src_cols_read,
        label_val_address0,
        label_val_ce0,
        label_val_we0,
        label_val_d0,
        label_val_q0,
        num,
        num_ap_vld,
        label_rows_din,
        label_rows_full_n,
        label_rows_write,
        label_cols_din,
        label_cols_full_n,
        label_cols_write
);

parameter    ap_ST_fsm_state1 = 12'd1;
parameter    ap_ST_fsm_state2 = 12'd2;
parameter    ap_ST_fsm_state3 = 12'd4;
parameter    ap_ST_fsm_state4 = 12'd8;
parameter    ap_ST_fsm_state5 = 12'd16;
parameter    ap_ST_fsm_state6 = 12'd32;
parameter    ap_ST_fsm_state7 = 12'd64;
parameter    ap_ST_fsm_state8 = 12'd128;
parameter    ap_ST_fsm_state9 = 12'd256;
parameter    ap_ST_fsm_pp1_stage0 = 12'd512;
parameter    ap_ST_fsm_pp1_stage1 = 12'd1024;
parameter    ap_ST_fsm_state13 = 12'd2048;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [17:0] src_val_address0;
output   src_val_ce0;
input  [7:0] src_val_q0;
input  [31:0] src_rows_dout;
input   src_rows_empty_n;
output   src_rows_read;
input  [31:0] src_cols_dout;
input   src_cols_empty_n;
output   src_cols_read;
output  [17:0] label_val_address0;
output   label_val_ce0;
output   label_val_we0;
output  [7:0] label_val_d0;
input  [7:0] label_val_q0;
output  [31:0] num;
output   num_ap_vld;
output  [31:0] label_rows_din;
input   label_rows_full_n;
output   label_rows_write;
output  [31:0] label_cols_din;
input   label_cols_full_n;
output   label_cols_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[17:0] src_val_address0;
reg src_val_ce0;
reg src_rows_read;
reg src_cols_read;
reg[17:0] label_val_address0;
reg label_val_ce0;
reg label_val_we0;
reg[7:0] label_val_d0;
reg num_ap_vld;
reg label_rows_write;
reg label_cols_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [11:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    src_rows_blk_n;
reg    src_cols_blk_n;
reg    label_rows_blk_n;
reg    label_cols_blk_n;
reg   [3:0] indvar_flatten_reg_326;
reg  signed [2:0] dr_i_reg_338;
reg   [2:0] dc_i_reg_349;
reg  signed [31:0] vector_length_read_a_1_reg_360;
reg   [31:0] rows_reg_848;
reg    ap_block_state1;
reg   [31:0] cols_reg_856;
wire   [18:0] tmp_1_fu_404_p1;
reg   [18:0] tmp_1_reg_863;
wire    ap_CS_fsm_state2;
wire   [39:0] next_mul_fu_408_p2;
reg   [39:0] next_mul_reg_868;
wire   [0:0] tmp_4_i_fu_418_p2;
wire   [30:0] i_fu_423_p2;
reg   [30:0] i_reg_877;
wire   [30:0] j_fu_448_p2;
wire    ap_CS_fsm_state3;
wire   [18:0] tmp_3_fu_468_p1;
reg   [18:0] tmp_3_reg_914;
wire    ap_CS_fsm_state5;
wire   [39:0] next_mul1_fu_472_p2;
reg   [39:0] next_mul1_reg_919;
wire   [30:0] i_1_fu_487_p2;
reg   [30:0] i_1_reg_927;
wire   [15:0] tmp_8_fu_493_p1;
reg   [15:0] tmp_8_reg_932;
wire   [0:0] tmp_7_i_fu_482_p2;
wire   [30:0] j_1_fu_510_p2;
reg   [30:0] j_1_reg_940;
wire    ap_CS_fsm_state6;
wire   [0:0] tmp_1_i_fu_505_p2;
reg   [17:0] label_val_addr_1_reg_950;
wire   [0:0] grp_fu_398_p2;
reg   [0:0] or_cond_i_reg_955;
wire    ap_CS_fsm_state7;
wire   [31:0] tmp_11_i_fu_538_p2;
reg   [31:0] tmp_11_i_reg_959;
wire   [7:0] tmp_12_i_fu_544_p2;
reg   [7:0] tmp_12_i_reg_965;
wire  signed [31:0] points_length_fu_562_p2;
reg  signed [31:0] points_length_reg_973;
wire    ap_CS_fsm_state8;
wire   [0:0] tmp_i_i_fu_556_p2;
wire   [15:0] points_val_x_q0;
reg   [15:0] c0_reg_988;
wire    ap_CS_fsm_state9;
wire   [15:0] points_val_y_q0;
reg   [15:0] r0_reg_993;
wire   [2:0] tmp_14_i_fu_582_p2;
reg   [2:0] tmp_14_i_reg_999;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state10_pp1_stage0_iter0;
wire    ap_block_state12_pp1_stage0_iter1;
wire    ap_block_pp1_stage0_11001;
wire   [0:0] exitcond_flatten_fu_626_p2;
reg   [0:0] exitcond_flatten_reg_1004;
wire   [0:0] exitcond_i_fu_638_p2;
reg   [0:0] exitcond_i_reg_1008;
wire  signed [2:0] dc_i_mid2_fu_644_p3;
reg  signed [2:0] dc_i_mid2_reg_1013;
wire   [2:0] tmp_14_i_mid1_fu_652_p2;
reg   [2:0] tmp_14_i_mid1_reg_1020;
wire  signed [15:0] r_mid2_fu_667_p3;
reg  signed [15:0] r_mid2_reg_1025;
wire   [2:0] dr_i_mid2_fu_712_p3;
reg   [2:0] dr_i_mid2_reg_1031;
reg    ap_enable_reg_pp1_iter0;
wire  signed [15:0] c_fu_724_p2;
reg  signed [15:0] c_reg_1036;
wire   [0:0] or_cond6_i_fu_758_p2;
reg   [0:0] or_cond6_i_reg_1042;
wire   [3:0] indvar_flatten_next_fu_764_p2;
reg   [3:0] indvar_flatten_next_reg_1047;
wire    ap_CS_fsm_pp1_stage1;
wire    ap_block_state11_pp1_stage1_iter0;
wire    ap_block_pp1_stage1_11001;
wire   [0:0] demorgan_fu_804_p2;
reg   [0:0] demorgan_reg_1052;
reg   [17:0] label_val_addr_2_reg_1061;
wire   [2:0] dc_fu_823_p2;
reg   [2:0] dc_reg_1066;
wire    ap_block_pp1_stage1_subdone;
reg    ap_condition_pp1_exit_iter0_state11;
reg    ap_enable_reg_pp1_iter1;
reg   [16:0] points_val_x_address0;
reg    points_val_x_ce0;
reg    points_val_x_we0;
reg   [15:0] points_val_x_d0;
reg   [16:0] points_val_y_address0;
reg    points_val_y_ce0;
reg    points_val_y_we0;
reg   [15:0] points_val_y_d0;
reg   [30:0] i_0_i_i_reg_248;
wire    ap_CS_fsm_state4;
reg   [39:0] phi_mul_reg_259;
reg   [30:0] j_0_i_i_reg_270;
wire   [0:0] tmp_6_i_fu_443_p2;
reg   [30:0] i_i_reg_281;
reg   [39:0] phi_mul1_reg_292;
reg   [30:0] j1_i_reg_303;
reg   [31:0] vector_length_read_a_reg_315;
wire    ap_CS_fsm_state13;
reg   [3:0] ap_phi_mux_indvar_flatten_phi_fu_330_p4;
wire    ap_block_pp1_stage0;
reg  signed [2:0] ap_phi_mux_dr_i_phi_fu_342_p4;
reg   [2:0] ap_phi_mux_dc_i_phi_fu_353_p4;
reg   [31:0] ap_phi_mux_points_length_6_i_phi_fu_375_p6;
wire   [31:0] ap_phi_reg_pp1_iter0_points_length_6_i_reg_371;
reg   [31:0] ap_phi_reg_pp1_iter1_points_length_6_i_reg_371;
wire   [31:0] points_length_1_fu_828_p2;
wire   [63:0] tmp_2_cast_fu_463_p1;
wire   [63:0] tmp_4_cast_fu_525_p1;
wire  signed [63:0] tmp_2_i_i_fu_568_p1;
wire  signed [63:0] tmp_6_cast_fu_817_p1;
wire    ap_block_pp1_stage1;
wire  signed [63:0] tmp_1_i25_i_fu_835_p1;
reg   [31:0] num_loc_i_fu_102;
reg   [31:0] num_local_fu_106;
wire   [15:0] tmp_11_fu_551_p1;
wire   [0:0] grp_fu_386_p2;
wire   [0:0] grp_fu_392_p2;
wire   [31:0] i_0_i_cast_i_fu_414_p1;
wire   [31:0] j_0_i_cast_i_fu_439_p1;
wire   [18:0] tmp_7_fu_454_p1;
wire   [18:0] tmp_2_fu_458_p2;
wire   [31:0] i_cast_i_fu_478_p1;
wire   [31:0] j1_cast_i_fu_501_p1;
wire   [18:0] tmp_9_fu_516_p1;
wire   [18:0] tmp_4_fu_520_p2;
wire   [7:0] tmp_10_fu_534_p1;
wire  signed [15:0] tmp_15_i_fu_588_p1;
wire  signed [15:0] r_fu_592_p2;
wire   [0:0] tmp_12_fu_597_p3;
wire  signed [31:0] tmp_17_i_fu_611_p1;
wire   [0:0] tmp_18_i_fu_615_p2;
wire   [0:0] rev_fu_605_p2;
wire  signed [2:0] dr_fu_632_p2;
wire  signed [15:0] tmp_15_i_mid1_fu_658_p1;
wire  signed [15:0] r_mid1_fu_662_p2;
wire   [0:0] tmp_13_fu_675_p3;
wire  signed [31:0] tmp_17_i_mid1_fu_689_p1;
wire   [0:0] tmp_18_i_mid1_fu_693_p2;
wire   [0:0] rev1_fu_683_p2;
wire   [0:0] tmp_mid1_fu_698_p2;
wire   [0:0] tmp_fu_620_p2;
wire  signed [15:0] tmp_22_i_fu_720_p1;
wire   [0:0] tmp_14_fu_729_p3;
wire  signed [31:0] tmp_24_i_fu_743_p1;
wire   [0:0] tmp_25_i_fu_747_p2;
wire   [0:0] rev2_fu_737_p2;
wire   [0:0] tmp1_fu_752_p2;
wire   [0:0] tmp_mid2_fu_704_p3;
wire   [2:0] tmp_14_i_mid2_fu_770_p3;
wire   [2:0] tmp_20_i_fu_778_p2;
wire   [2:0] tmp_21_i_fu_782_p2;
wire   [1:0] tmp_15_fu_788_p4;
wire   [0:0] icmp_fu_798_p2;
wire  signed [18:0] tmp_5_fu_841_p2;
wire  signed [18:0] tmp_27_i_cast_fu_809_p1;
(* use_dsp48 = "no" *) wire   [18:0] tmp_6_fu_812_p2;
wire   [9:0] tmp_5_fu_841_p1;
reg   [11:0] ap_NS_fsm;
wire    ap_block_pp1_stage0_subdone;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_condition_711;
reg    ap_condition_244;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 12'd1;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
end

SeedFilling_pointbkb #(
    .DataWidth( 16 ),
    .AddressRange( 125000 ),
    .AddressWidth( 17 ))
points_val_x_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(points_val_x_address0),
    .ce0(points_val_x_ce0),
    .we0(points_val_x_we0),
    .d0(points_val_x_d0),
    .q0(points_val_x_q0)
);

SeedFilling_pointbkb #(
    .DataWidth( 16 ),
    .AddressRange( 125000 ),
    .AddressWidth( 17 ))
points_val_y_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(points_val_y_address0),
    .ce0(points_val_y_ce0),
    .we0(points_val_y_we0),
    .d0(points_val_y_d0),
    .q0(points_val_y_q0)
);

SeedFilling1_CoredEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 19 ))
SeedFilling1_CoredEe_U23(
    .din0(r_mid2_reg_1025),
    .din1(tmp_5_fu_841_p1),
    .dout(tmp_5_fu_841_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state5) & (tmp_7_i_fu_482_p2 == 1'd0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage1_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state11) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state9)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage1_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state11) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state11);
        end else if (((1'b0 == ap_block_pp1_stage1_subdone) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if ((1'b1 == ap_CS_fsm_state9)) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_244)) begin
        if (((demorgan_fu_804_p2 == 1'd0) & (exitcond_flatten_reg_1004 == 1'd0))) begin
            ap_phi_reg_pp1_iter1_points_length_6_i_reg_371 <= vector_length_read_a_1_reg_360;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter1_points_length_6_i_reg_371 <= ap_phi_reg_pp1_iter0_points_length_6_i_reg_371;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_flatten_reg_1004 == 1'd0))) begin
        dc_i_reg_349 <= dc_reg_1066;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        dc_i_reg_349 <= 3'd7;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_flatten_reg_1004 == 1'd0))) begin
        dr_i_reg_338 <= dr_i_mid2_reg_1031;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        dr_i_reg_338 <= 3'd7;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        i_0_i_i_reg_248 <= i_reg_877;
    end else if ((~((label_cols_full_n == 1'b0) | (label_rows_full_n == 1'b0) | (src_cols_empty_n == 1'b0) | (src_rows_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_i_i_reg_248 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (tmp_1_i_fu_505_p2 == 1'd0))) begin
        i_i_reg_281 <= i_1_reg_927;
    end else if (((1'b1 == ap_CS_fsm_state2) & (tmp_4_i_fu_418_p2 == 1'd0))) begin
        i_i_reg_281 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_flatten_reg_1004 == 1'd0))) begin
        indvar_flatten_reg_326 <= indvar_flatten_next_reg_1047;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        indvar_flatten_reg_326 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & ((tmp_i_i_fu_556_p2 == 1'd1) | (or_cond_i_reg_955 == 1'd0)))) begin
        j1_i_reg_303 <= j_1_reg_940;
    end else if (((1'b1 == ap_CS_fsm_state5) & (tmp_7_i_fu_482_p2 == 1'd1))) begin
        j1_i_reg_303 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_4_i_fu_418_p2 == 1'd1))) begin
        j_0_i_i_reg_270 <= 31'd0;
    end else if (((1'b1 == ap_CS_fsm_state3) & (tmp_6_i_fu_443_p2 == 1'd1))) begin
        j_0_i_i_reg_270 <= j_fu_448_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (tmp_i_i_fu_556_p2 == 1'd1) & (or_cond_i_reg_955 == 1'd1))) begin
        num_loc_i_fu_102 <= tmp_11_i_reg_959;
    end else if (((1'b1 == ap_CS_fsm_state2) & (tmp_4_i_fu_418_p2 == 1'd0))) begin
        num_loc_i_fu_102 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (tmp_i_i_fu_556_p2 == 1'd1) & (or_cond_i_reg_955 == 1'd1))) begin
        num_local_fu_106 <= tmp_11_i_reg_959;
    end else if (((1'b1 == ap_CS_fsm_state2) & (tmp_4_i_fu_418_p2 == 1'd0))) begin
        num_local_fu_106 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (tmp_1_i_fu_505_p2 == 1'd0))) begin
        phi_mul1_reg_292 <= next_mul1_reg_919;
    end else if (((1'b1 == ap_CS_fsm_state2) & (tmp_4_i_fu_418_p2 == 1'd0))) begin
        phi_mul1_reg_292 <= 40'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        phi_mul_reg_259 <= next_mul_reg_868;
    end else if ((~((label_cols_full_n == 1'b0) | (label_rows_full_n == 1'b0) | (src_cols_empty_n == 1'b0) | (src_rows_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        phi_mul_reg_259 <= 40'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_flatten_reg_1004 == 1'd0))) begin
        vector_length_read_a_1_reg_360 <= ap_phi_mux_points_length_6_i_phi_fu_375_p6;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        vector_length_read_a_1_reg_360 <= points_length_reg_973;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        vector_length_read_a_reg_315 <= vector_length_read_a_1_reg_360;
    end else if (((1'b1 == ap_CS_fsm_state7) & (grp_fu_398_p2 == 1'd1))) begin
        vector_length_read_a_reg_315 <= 32'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        c0_reg_988 <= points_val_x_q0;
        r0_reg_993 <= points_val_y_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_flatten_fu_626_p2 == 1'd0))) begin
        c_reg_1036 <= c_fu_724_p2;
        dc_i_mid2_reg_1013 <= dc_i_mid2_fu_644_p3;
        exitcond_i_reg_1008 <= exitcond_i_fu_638_p2;
        or_cond6_i_reg_1042 <= or_cond6_i_fu_758_p2;
        r_mid2_reg_1025 <= r_mid2_fu_667_p3;
        tmp_14_i_mid1_reg_1020 <= tmp_14_i_mid1_fu_652_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((label_cols_full_n == 1'b0) | (label_rows_full_n == 1'b0) | (src_cols_empty_n == 1'b0) | (src_rows_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cols_reg_856 <= src_cols_dout;
        rows_reg_848 <= src_rows_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (exitcond_flatten_reg_1004 == 1'd0))) begin
        dc_reg_1066 <= dc_fu_823_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (exitcond_flatten_reg_1004 == 1'd0))) begin
        demorgan_reg_1052 <= demorgan_fu_804_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_flatten_fu_626_p2 == 1'd0))) begin
        dr_i_mid2_reg_1031 <= dr_i_mid2_fu_712_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        exitcond_flatten_reg_1004 <= exitcond_flatten_fu_626_p2;
        tmp_14_i_reg_999 <= tmp_14_i_fu_582_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        i_1_reg_927 <= i_1_fu_487_p2;
        next_mul1_reg_919 <= next_mul1_fu_472_p2;
        tmp_3_reg_914 <= tmp_3_fu_468_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_reg_877 <= i_fu_423_p2;
        next_mul_reg_868 <= next_mul_fu_408_p2;
        tmp_1_reg_863 <= tmp_1_fu_404_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        indvar_flatten_next_reg_1047 <= indvar_flatten_next_fu_764_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        j_1_reg_940 <= j_1_fu_510_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (tmp_1_i_fu_505_p2 == 1'd1))) begin
        label_val_addr_1_reg_950 <= tmp_4_cast_fu_525_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (demorgan_fu_804_p2 == 1'd1) & (exitcond_flatten_reg_1004 == 1'd0))) begin
        label_val_addr_2_reg_1061 <= tmp_6_cast_fu_817_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        or_cond_i_reg_955 <= grp_fu_398_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (or_cond_i_reg_955 == 1'd1) & (tmp_i_i_fu_556_p2 == 1'd0))) begin
        points_length_reg_973 <= points_length_fu_562_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (grp_fu_398_p2 == 1'd1))) begin
        tmp_11_i_reg_959 <= tmp_11_i_fu_538_p2;
        tmp_12_i_reg_965 <= tmp_12_i_fu_544_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (tmp_7_i_fu_482_p2 == 1'd1))) begin
        tmp_8_reg_932 <= tmp_8_fu_493_p1;
    end
end

always @ (*) begin
    if ((exitcond_flatten_reg_1004 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state11 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state11 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (tmp_7_i_fu_482_p2 == 1'd0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_flatten_reg_1004 == 1'd0))) begin
        ap_phi_mux_dc_i_phi_fu_353_p4 = dc_reg_1066;
    end else begin
        ap_phi_mux_dc_i_phi_fu_353_p4 = dc_i_reg_349;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_flatten_reg_1004 == 1'd0))) begin
        ap_phi_mux_dr_i_phi_fu_342_p4 = dr_i_mid2_reg_1031;
    end else begin
        ap_phi_mux_dr_i_phi_fu_342_p4 = dr_i_reg_338;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_flatten_reg_1004 == 1'd0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_330_p4 = indvar_flatten_next_reg_1047;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_330_p4 = indvar_flatten_reg_326;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_711)) begin
        if ((grp_fu_398_p2 == 1'd0)) begin
            ap_phi_mux_points_length_6_i_phi_fu_375_p6 = vector_length_read_a_1_reg_360;
        end else if ((grp_fu_398_p2 == 1'd1)) begin
            ap_phi_mux_points_length_6_i_phi_fu_375_p6 = points_length_1_fu_828_p2;
        end else begin
            ap_phi_mux_points_length_6_i_phi_fu_375_p6 = ap_phi_reg_pp1_iter1_points_length_6_i_reg_371;
        end
    end else begin
        ap_phi_mux_points_length_6_i_phi_fu_375_p6 = ap_phi_reg_pp1_iter1_points_length_6_i_reg_371;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (tmp_7_i_fu_482_p2 == 1'd0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        label_cols_blk_n = label_cols_full_n;
    end else begin
        label_cols_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((label_cols_full_n == 1'b0) | (label_rows_full_n == 1'b0) | (src_cols_empty_n == 1'b0) | (src_rows_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        label_cols_write = 1'b1;
    end else begin
        label_cols_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        label_rows_blk_n = label_rows_full_n;
    end else begin
        label_rows_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((label_cols_full_n == 1'b0) | (label_rows_full_n == 1'b0) | (src_cols_empty_n == 1'b0) | (src_rows_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        label_rows_write = 1'b1;
    end else begin
        label_rows_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        label_val_address0 = label_val_addr_2_reg_1061;
    end else if (((1'b0 == ap_block_pp1_stage1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        label_val_address0 = tmp_6_cast_fu_817_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        label_val_address0 = label_val_addr_1_reg_950;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        label_val_address0 = tmp_4_cast_fu_525_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        label_val_address0 = tmp_2_cast_fu_463_p1;
    end else begin
        label_val_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state3) | ((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        label_val_ce0 = 1'b1;
    end else begin
        label_val_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        label_val_d0 = tmp_12_i_reg_965;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        label_val_d0 = tmp_12_i_fu_544_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        label_val_d0 = 8'd0;
    end else begin
        label_val_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (demorgan_reg_1052 == 1'd1) & (grp_fu_398_p2 == 1'd1) & (exitcond_flatten_reg_1004 == 1'd0)) | ((1'b1 == ap_CS_fsm_state7) & (grp_fu_398_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state3) & (tmp_6_i_fu_443_p2 == 1'd1)))) begin
        label_val_we0 = 1'b1;
    end else begin
        label_val_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (tmp_7_i_fu_482_p2 == 1'd0))) begin
        num_ap_vld = 1'b1;
    end else begin
        num_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        points_val_x_address0 = tmp_1_i25_i_fu_835_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        points_val_x_address0 = tmp_2_i_i_fu_568_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        points_val_x_address0 = 64'd0;
    end else begin
        points_val_x_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        points_val_x_ce0 = 1'b1;
    end else begin
        points_val_x_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        points_val_x_d0 = c_reg_1036;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        points_val_x_d0 = tmp_11_fu_551_p1;
    end else begin
        points_val_x_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (demorgan_reg_1052 == 1'd1) & (grp_fu_398_p2 == 1'd1) & (exitcond_flatten_reg_1004 == 1'd0)) | ((1'b1 == ap_CS_fsm_state7) & (grp_fu_398_p2 == 1'd1)))) begin
        points_val_x_we0 = 1'b1;
    end else begin
        points_val_x_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        points_val_y_address0 = tmp_1_i25_i_fu_835_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        points_val_y_address0 = tmp_2_i_i_fu_568_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        points_val_y_address0 = 64'd0;
    end else begin
        points_val_y_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        points_val_y_ce0 = 1'b1;
    end else begin
        points_val_y_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        points_val_y_d0 = r_mid2_reg_1025;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        points_val_y_d0 = tmp_8_reg_932;
    end else begin
        points_val_y_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (demorgan_reg_1052 == 1'd1) & (grp_fu_398_p2 == 1'd1) & (exitcond_flatten_reg_1004 == 1'd0)) | ((1'b1 == ap_CS_fsm_state7) & (grp_fu_398_p2 == 1'd1)))) begin
        points_val_y_we0 = 1'b1;
    end else begin
        points_val_y_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        src_cols_blk_n = src_cols_empty_n;
    end else begin
        src_cols_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((label_cols_full_n == 1'b0) | (label_rows_full_n == 1'b0) | (src_cols_empty_n == 1'b0) | (src_rows_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        src_cols_read = 1'b1;
    end else begin
        src_cols_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        src_rows_blk_n = src_rows_empty_n;
    end else begin
        src_rows_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((label_cols_full_n == 1'b0) | (label_rows_full_n == 1'b0) | (src_cols_empty_n == 1'b0) | (src_rows_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        src_rows_read = 1'b1;
    end else begin
        src_rows_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        src_val_address0 = tmp_6_cast_fu_817_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        src_val_address0 = tmp_4_cast_fu_525_p1;
    end else begin
        src_val_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | ((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
        src_val_ce0 = 1'b1;
    end else begin
        src_val_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((label_cols_full_n == 1'b0) | (label_rows_full_n == 1'b0) | (src_cols_empty_n == 1'b0) | (src_rows_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (tmp_4_i_fu_418_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (tmp_6_i_fu_443_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (tmp_7_i_fu_482_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (tmp_1_i_fu_505_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & ((tmp_i_i_fu_556_p2 == 1'd1) | (or_cond_i_reg_955 == 1'd0)))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage1 : begin
            if ((~((1'b0 == ap_block_pp1_stage1_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (exitcond_flatten_reg_1004 == 1'd1)) & (1'b0 == ap_block_pp1_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((1'b0 == ap_block_pp1_stage1_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (exitcond_flatten_reg_1004 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp1_stage1 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((label_cols_full_n == 1'b0) | (label_rows_full_n == 1'b0) | (src_cols_empty_n == 1'b0) | (src_rows_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp1_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_244 = ((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_711 = ((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (demorgan_reg_1052 == 1'd1) & (exitcond_flatten_reg_1004 == 1'd0));
end

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_phi_reg_pp1_iter0_points_length_6_i_reg_371 = 'bx;

assign c_fu_724_p2 = ($signed(tmp_22_i_fu_720_p1) + $signed(c0_reg_988));

assign dc_fu_823_p2 = ($signed(dc_i_mid2_reg_1013) + $signed(3'd1));

assign dc_i_mid2_fu_644_p3 = ((exitcond_i_fu_638_p2[0:0] === 1'b1) ? 3'd7 : ap_phi_mux_dc_i_phi_fu_353_p4);

assign demorgan_fu_804_p2 = (or_cond6_i_reg_1042 & icmp_fu_798_p2);

assign dr_fu_632_p2 = ($signed(ap_phi_mux_dr_i_phi_fu_342_p4) + $signed(3'd1));

assign dr_i_mid2_fu_712_p3 = ((exitcond_i_fu_638_p2[0:0] === 1'b1) ? dr_fu_632_p2 : ap_phi_mux_dr_i_phi_fu_342_p4);

assign exitcond_flatten_fu_626_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_330_p4 == 4'd9) ? 1'b1 : 1'b0);

assign exitcond_i_fu_638_p2 = ((ap_phi_mux_dc_i_phi_fu_353_p4 == 3'd2) ? 1'b1 : 1'b0);

assign grp_fu_386_p2 = ((src_val_q0 != 8'd0) ? 1'b1 : 1'b0);

assign grp_fu_392_p2 = ((label_val_q0 == 8'd0) ? 1'b1 : 1'b0);

assign grp_fu_398_p2 = (grp_fu_392_p2 & grp_fu_386_p2);

assign i_0_i_cast_i_fu_414_p1 = i_0_i_i_reg_248;

assign i_1_fu_487_p2 = (31'd1 + i_i_reg_281);

assign i_cast_i_fu_478_p1 = i_i_reg_281;

assign i_fu_423_p2 = (31'd1 + i_0_i_i_reg_248);

assign icmp_fu_798_p2 = ((tmp_15_fu_788_p4 != 2'd1) ? 1'b1 : 1'b0);

assign indvar_flatten_next_fu_764_p2 = (indvar_flatten_reg_326 + 4'd1);

assign j1_cast_i_fu_501_p1 = j1_i_reg_303;

assign j_0_i_cast_i_fu_439_p1 = j_0_i_i_reg_270;

assign j_1_fu_510_p2 = (j1_i_reg_303 + 31'd1);

assign j_fu_448_p2 = (j_0_i_i_reg_270 + 31'd1);

assign label_cols_din = src_cols_dout;

assign label_rows_din = src_rows_dout;

assign next_mul1_fu_472_p2 = (40'd500 + phi_mul1_reg_292);

assign next_mul_fu_408_p2 = (40'd500 + phi_mul_reg_259);

assign num = num_local_fu_106;

assign or_cond6_i_fu_758_p2 = (tmp_mid2_fu_704_p3 & tmp1_fu_752_p2);

assign points_length_1_fu_828_p2 = ($signed(vector_length_read_a_1_reg_360) + $signed(32'd1));

assign points_length_fu_562_p2 = ($signed(vector_length_read_a_reg_315) + $signed(32'd4294967295));

assign r_fu_592_p2 = ($signed(r0_reg_993) + $signed(tmp_15_i_fu_588_p1));

assign r_mid1_fu_662_p2 = ($signed(tmp_15_i_mid1_fu_658_p1) + $signed(r0_reg_993));

assign r_mid2_fu_667_p3 = ((exitcond_i_fu_638_p2[0:0] === 1'b1) ? r_mid1_fu_662_p2 : r_fu_592_p2);

assign rev1_fu_683_p2 = (tmp_13_fu_675_p3 ^ 1'd1);

assign rev2_fu_737_p2 = (tmp_14_fu_729_p3 ^ 1'd1);

assign rev_fu_605_p2 = (tmp_12_fu_597_p3 ^ 1'd1);

assign tmp1_fu_752_p2 = (tmp_25_i_fu_747_p2 & rev2_fu_737_p2);

assign tmp_10_fu_534_p1 = num_loc_i_fu_102[7:0];

assign tmp_11_fu_551_p1 = j1_i_reg_303[15:0];

assign tmp_11_i_fu_538_p2 = (32'd1 + num_loc_i_fu_102);

assign tmp_12_fu_597_p3 = r_fu_592_p2[32'd15];

assign tmp_12_i_fu_544_p2 = (8'd1 + tmp_10_fu_534_p1);

assign tmp_13_fu_675_p3 = r_mid1_fu_662_p2[32'd15];

assign tmp_14_fu_729_p3 = c_fu_724_p2[32'd15];

assign tmp_14_i_fu_582_p2 = ($signed(ap_phi_mux_dr_i_phi_fu_342_p4) * $signed(ap_phi_mux_dr_i_phi_fu_342_p4));

assign tmp_14_i_mid1_fu_652_p2 = ($signed(dr_fu_632_p2) * $signed(dr_fu_632_p2));

assign tmp_14_i_mid2_fu_770_p3 = ((exitcond_i_reg_1008[0:0] === 1'b1) ? tmp_14_i_mid1_reg_1020 : tmp_14_i_reg_999);

assign tmp_15_fu_788_p4 = {{tmp_21_i_fu_782_p2[2:1]}};

assign tmp_15_i_fu_588_p1 = ap_phi_mux_dr_i_phi_fu_342_p4;

assign tmp_15_i_mid1_fu_658_p1 = dr_fu_632_p2;

assign tmp_17_i_fu_611_p1 = r_fu_592_p2;

assign tmp_17_i_mid1_fu_689_p1 = r_mid1_fu_662_p2;

assign tmp_18_i_fu_615_p2 = (($signed(tmp_17_i_fu_611_p1) < $signed(rows_reg_848)) ? 1'b1 : 1'b0);

assign tmp_18_i_mid1_fu_693_p2 = (($signed(tmp_17_i_mid1_fu_689_p1) < $signed(rows_reg_848)) ? 1'b1 : 1'b0);

assign tmp_1_fu_404_p1 = phi_mul_reg_259[18:0];

assign tmp_1_i25_i_fu_835_p1 = vector_length_read_a_1_reg_360;

assign tmp_1_i_fu_505_p2 = (($signed(j1_cast_i_fu_501_p1) < $signed(cols_reg_856)) ? 1'b1 : 1'b0);

assign tmp_20_i_fu_778_p2 = ($signed(dc_i_mid2_reg_1013) * $signed(dc_i_mid2_reg_1013));

assign tmp_21_i_fu_782_p2 = (tmp_14_i_mid2_fu_770_p3 + tmp_20_i_fu_778_p2);

assign tmp_22_i_fu_720_p1 = dc_i_mid2_fu_644_p3;

assign tmp_24_i_fu_743_p1 = c_fu_724_p2;

assign tmp_25_i_fu_747_p2 = (($signed(tmp_24_i_fu_743_p1) < $signed(cols_reg_856)) ? 1'b1 : 1'b0);

assign tmp_27_i_cast_fu_809_p1 = c_reg_1036;

assign tmp_2_cast_fu_463_p1 = tmp_2_fu_458_p2;

assign tmp_2_fu_458_p2 = (tmp_1_reg_863 + tmp_7_fu_454_p1);

assign tmp_2_i_i_fu_568_p1 = points_length_fu_562_p2;

assign tmp_3_fu_468_p1 = phi_mul1_reg_292[18:0];

assign tmp_4_cast_fu_525_p1 = tmp_4_fu_520_p2;

assign tmp_4_fu_520_p2 = (tmp_3_reg_914 + tmp_9_fu_516_p1);

assign tmp_4_i_fu_418_p2 = (($signed(i_0_i_cast_i_fu_414_p1) < $signed(rows_reg_848)) ? 1'b1 : 1'b0);

assign tmp_5_fu_841_p1 = 19'd500;

assign tmp_6_cast_fu_817_p1 = $signed(tmp_6_fu_812_p2);

assign tmp_6_fu_812_p2 = ($signed(tmp_5_fu_841_p2) + $signed(tmp_27_i_cast_fu_809_p1));

assign tmp_6_i_fu_443_p2 = (($signed(j_0_i_cast_i_fu_439_p1) < $signed(cols_reg_856)) ? 1'b1 : 1'b0);

assign tmp_7_fu_454_p1 = j_0_i_i_reg_270[18:0];

assign tmp_7_i_fu_482_p2 = (($signed(i_cast_i_fu_478_p1) < $signed(rows_reg_848)) ? 1'b1 : 1'b0);

assign tmp_8_fu_493_p1 = i_i_reg_281[15:0];

assign tmp_9_fu_516_p1 = j1_i_reg_303[18:0];

assign tmp_fu_620_p2 = (tmp_18_i_fu_615_p2 & rev_fu_605_p2);

assign tmp_i_i_fu_556_p2 = ((vector_length_read_a_reg_315 == 32'd0) ? 1'b1 : 1'b0);

assign tmp_mid1_fu_698_p2 = (tmp_18_i_mid1_fu_693_p2 & rev1_fu_683_p2);

assign tmp_mid2_fu_704_p3 = ((exitcond_i_fu_638_p2[0:0] === 1'b1) ? tmp_mid1_fu_698_p2 : tmp_fu_620_p2);

endmodule //SeedFilling
