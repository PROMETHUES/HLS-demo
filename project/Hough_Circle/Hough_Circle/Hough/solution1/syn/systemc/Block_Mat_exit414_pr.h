// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Block_Mat_exit414_pr_HH_
#define _Block_Mat_exit414_pr_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct Block_Mat_exit414_pr : public sc_module {
    // Port declarations 62
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_in< sc_lv<32> > rows;
    sc_in< sc_lv<32> > cols;
    sc_in< sc_lv<32> > gray_thresh;
    sc_in< sc_lv<32> > acc_thresh;
    sc_in< sc_lv<32> > min_dist;
    sc_in< sc_lv<32> > min_radius;
    sc_in< sc_lv<32> > max_radius;
    sc_out< sc_lv<32> > src_rows_V_out_din;
    sc_in< sc_logic > src_rows_V_out_full_n;
    sc_out< sc_logic > src_rows_V_out_write;
    sc_out< sc_lv<32> > src_cols_V_out_din;
    sc_in< sc_logic > src_cols_V_out_full_n;
    sc_out< sc_logic > src_cols_V_out_write;
    sc_out< sc_lv<32> > edge_rows_V_out_din;
    sc_in< sc_logic > edge_rows_V_out_full_n;
    sc_out< sc_logic > edge_rows_V_out_write;
    sc_out< sc_lv<32> > edge_cols_V_out_din;
    sc_in< sc_logic > edge_cols_V_out_full_n;
    sc_out< sc_logic > edge_cols_V_out_write;
    sc_out< sc_lv<32> > dx_rows_V_out_din;
    sc_in< sc_logic > dx_rows_V_out_full_n;
    sc_out< sc_logic > dx_rows_V_out_write;
    sc_out< sc_lv<32> > dx_cols_V_out_din;
    sc_in< sc_logic > dx_cols_V_out_full_n;
    sc_out< sc_logic > dx_cols_V_out_write;
    sc_out< sc_lv<32> > dy_rows_V_out_din;
    sc_in< sc_logic > dy_rows_V_out_full_n;
    sc_out< sc_logic > dy_rows_V_out_write;
    sc_out< sc_lv<32> > dy_cols_V_out_din;
    sc_in< sc_logic > dy_cols_V_out_full_n;
    sc_out< sc_logic > dy_cols_V_out_write;
    sc_out< sc_lv<3> > circles_rows_out_din;
    sc_in< sc_logic > circles_rows_out_full_n;
    sc_out< sc_logic > circles_rows_out_write;
    sc_out< sc_lv<8> > circles_cols_out_din;
    sc_in< sc_logic > circles_cols_out_full_n;
    sc_out< sc_logic > circles_cols_out_write;
    sc_out< sc_lv<32> > gray_thresh_out_din;
    sc_in< sc_logic > gray_thresh_out_full_n;
    sc_out< sc_logic > gray_thresh_out_write;
    sc_out< sc_lv<32> > acc_thresh_out_din;
    sc_in< sc_logic > acc_thresh_out_full_n;
    sc_out< sc_logic > acc_thresh_out_write;
    sc_out< sc_lv<32> > min_dist_out_din;
    sc_in< sc_logic > min_dist_out_full_n;
    sc_out< sc_logic > min_dist_out_write;
    sc_out< sc_lv<32> > min_radius_out_din;
    sc_in< sc_logic > min_radius_out_full_n;
    sc_out< sc_logic > min_radius_out_write;
    sc_out< sc_lv<32> > max_radius_out_din;
    sc_in< sc_logic > max_radius_out_full_n;
    sc_out< sc_logic > max_radius_out_write;


    // Module declarations
    Block_Mat_exit414_pr(sc_module_name name);
    SC_HAS_PROCESS(Block_Mat_exit414_pr);

    ~Block_Mat_exit414_pr();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_logic > src_rows_V_out_blk_n;
    sc_signal< sc_logic > src_cols_V_out_blk_n;
    sc_signal< sc_logic > edge_rows_V_out_blk_n;
    sc_signal< sc_logic > edge_cols_V_out_blk_n;
    sc_signal< sc_logic > dx_rows_V_out_blk_n;
    sc_signal< sc_logic > dx_cols_V_out_blk_n;
    sc_signal< sc_logic > dy_rows_V_out_blk_n;
    sc_signal< sc_logic > dy_cols_V_out_blk_n;
    sc_signal< sc_logic > circles_rows_out_blk_n;
    sc_signal< sc_logic > circles_cols_out_blk_n;
    sc_signal< sc_logic > gray_thresh_out_blk_n;
    sc_signal< sc_logic > acc_thresh_out_blk_n;
    sc_signal< sc_logic > min_dist_out_blk_n;
    sc_signal< sc_logic > min_radius_out_blk_n;
    sc_signal< sc_logic > max_radius_out_blk_n;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_fsm_state1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<3> ap_const_lv3_3;
    static const sc_lv<8> ap_const_lv8_64;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_acc_thresh_out_blk_n();
    void thread_acc_thresh_out_din();
    void thread_acc_thresh_out_write();
    void thread_ap_CS_fsm_state1();
    void thread_ap_block_state1();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_circles_cols_out_blk_n();
    void thread_circles_cols_out_din();
    void thread_circles_cols_out_write();
    void thread_circles_rows_out_blk_n();
    void thread_circles_rows_out_din();
    void thread_circles_rows_out_write();
    void thread_dx_cols_V_out_blk_n();
    void thread_dx_cols_V_out_din();
    void thread_dx_cols_V_out_write();
    void thread_dx_rows_V_out_blk_n();
    void thread_dx_rows_V_out_din();
    void thread_dx_rows_V_out_write();
    void thread_dy_cols_V_out_blk_n();
    void thread_dy_cols_V_out_din();
    void thread_dy_cols_V_out_write();
    void thread_dy_rows_V_out_blk_n();
    void thread_dy_rows_V_out_din();
    void thread_dy_rows_V_out_write();
    void thread_edge_cols_V_out_blk_n();
    void thread_edge_cols_V_out_din();
    void thread_edge_cols_V_out_write();
    void thread_edge_rows_V_out_blk_n();
    void thread_edge_rows_V_out_din();
    void thread_edge_rows_V_out_write();
    void thread_gray_thresh_out_blk_n();
    void thread_gray_thresh_out_din();
    void thread_gray_thresh_out_write();
    void thread_internal_ap_ready();
    void thread_max_radius_out_blk_n();
    void thread_max_radius_out_din();
    void thread_max_radius_out_write();
    void thread_min_dist_out_blk_n();
    void thread_min_dist_out_din();
    void thread_min_dist_out_write();
    void thread_min_radius_out_blk_n();
    void thread_min_radius_out_din();
    void thread_min_radius_out_write();
    void thread_real_start();
    void thread_src_cols_V_out_blk_n();
    void thread_src_cols_V_out_din();
    void thread_src_cols_V_out_write();
    void thread_src_rows_V_out_blk_n();
    void thread_src_rows_V_out_din();
    void thread_src_rows_V_out_write();
    void thread_start_out();
    void thread_start_write();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
