// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Gradient_Add.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Gradient_Add::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Gradient_Add::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> Gradient_Add::ap_ST_fsm_state1 = "1";
const sc_lv<4> Gradient_Add::ap_ST_fsm_state2 = "10";
const sc_lv<4> Gradient_Add::ap_ST_fsm_pp0_stage0 = "100";
const sc_lv<4> Gradient_Add::ap_ST_fsm_state8 = "1000";
const sc_lv<32> Gradient_Add::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool Gradient_Add::ap_const_boolean_1 = true;
const sc_lv<32> Gradient_Add::ap_const_lv32_2 = "10";
const bool Gradient_Add::ap_const_boolean_0 = false;
const sc_lv<1> Gradient_Add::ap_const_lv1_1 = "1";
const sc_lv<32> Gradient_Add::ap_const_lv32_1 = "1";
const sc_lv<1> Gradient_Add::ap_const_lv1_0 = "0";
const sc_lv<31> Gradient_Add::ap_const_lv31_0 = "0000000000000000000000000000000";
const sc_lv<32> Gradient_Add::ap_const_lv32_3 = "11";
const sc_lv<31> Gradient_Add::ap_const_lv31_1 = "1";

Gradient_Add::Gradient_Add(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_sqrt_fixed_32_32_s_fu_111 = new sqrt_fixed_32_32_s("grp_sqrt_fixed_32_32_s_fu_111");
    grp_sqrt_fixed_32_32_s_fu_111->ap_clk(ap_clk);
    grp_sqrt_fixed_32_32_s_fu_111->ap_rst(ap_rst);
    grp_sqrt_fixed_32_32_s_fu_111->x_V(xf_V_reg_196);
    grp_sqrt_fixed_32_32_s_fu_111->ap_return(grp_sqrt_fixed_32_32_s_fu_111_ap_return);
    grp_sqrt_fixed_32_32_s_fu_111->ap_ce(grp_sqrt_fixed_32_32_s_fu_111_ap_ce);
    HoughCircles_CorelbW_U105 = new HoughCircles_CorelbW<1,1,16,16,32>("HoughCircles_CorelbW_U105");
    HoughCircles_CorelbW_U105->din0(tmp_150_i_fu_154_p0);
    HoughCircles_CorelbW_U105->din1(tmp_150_i_fu_154_p1);
    HoughCircles_CorelbW_U105->dout(tmp_150_i_fu_154_p2);
    HoughCircles_Coremb6_U106 = new HoughCircles_Coremb6<1,1,16,16,32,32>("HoughCircles_Coremb6_U106");
    HoughCircles_Coremb6_U106->din0(grp_fu_160_p0);
    HoughCircles_Coremb6_U106->din1(grp_fu_160_p1);
    HoughCircles_Coremb6_U106->din2(tmp_150_i_fu_154_p2);
    HoughCircles_Coremb6_U106->dout(grp_fu_160_p3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( dx_data_stream_V_empty_n );
    sensitive << ( dy_data_stream_V_empty_n );
    sensitive << ( dst_data_stream_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_148_i_reg_187 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( tmp_148_i_reg_187_pp0_iter3_reg );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( dx_data_stream_V_empty_n );
    sensitive << ( dy_data_stream_V_empty_n );
    sensitive << ( dst_data_stream_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_148_i_reg_187 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( tmp_148_i_reg_187_pp0_iter3_reg );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( dx_data_stream_V_empty_n );
    sensitive << ( dy_data_stream_V_empty_n );
    sensitive << ( dst_data_stream_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_148_i_reg_187 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( tmp_148_i_reg_187_pp0_iter3_reg );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( dx_rows_V_empty_n );
    sensitive << ( dx_cols_V_empty_n );

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter1);
    sensitive << ( dx_data_stream_V_empty_n );
    sensitive << ( dy_data_stream_V_empty_n );
    sensitive << ( tmp_148_i_reg_187 );

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state7_pp0_stage0_iter4);
    sensitive << ( dst_data_stream_V_full_n );
    sensitive << ( tmp_148_i_reg_187_pp0_iter3_reg );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state3);
    sensitive << ( tmp_148_i_fu_135_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( tmp_i_fu_120_p2 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( tmp_i_fu_120_p2 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_dst_data_stream_V_blk_n);
    sensitive << ( dst_data_stream_V_full_n );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( tmp_148_i_reg_187_pp0_iter3_reg );

    SC_METHOD(thread_dst_data_stream_V_din);
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( tmp_148_i_reg_187_pp0_iter3_reg );
    sensitive << ( vmag_reg_201 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_dst_data_stream_V_write);
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( tmp_148_i_reg_187_pp0_iter3_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_dx_cols_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( dx_cols_V_empty_n );

    SC_METHOD(thread_dx_cols_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( dx_rows_V_empty_n );
    sensitive << ( dx_cols_V_empty_n );

    SC_METHOD(thread_dx_data_stream_V_blk_n);
    sensitive << ( dx_data_stream_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_148_i_reg_187 );

    SC_METHOD(thread_dx_data_stream_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_148_i_reg_187 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_dx_rows_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( dx_rows_V_empty_n );

    SC_METHOD(thread_dx_rows_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( dx_rows_V_empty_n );
    sensitive << ( dx_cols_V_empty_n );

    SC_METHOD(thread_dy_data_stream_V_blk_n);
    sensitive << ( dy_data_stream_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_148_i_reg_187 );

    SC_METHOD(thread_dy_data_stream_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_148_i_reg_187 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_160_p0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_148_i_reg_187 );
    sensitive << ( tmp_151_i_fu_150_p1 );

    SC_METHOD(thread_grp_fu_160_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_148_i_reg_187 );
    sensitive << ( tmp_151_i_fu_150_p1 );

    SC_METHOD(thread_grp_sqrt_fixed_32_32_s_fu_111_ap_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_i_cast_i_fu_116_p1);
    sensitive << ( i_i_reg_89 );

    SC_METHOD(thread_i_fu_125_p2);
    sensitive << ( i_i_reg_89 );

    SC_METHOD(thread_j_cast_i_fu_131_p1);
    sensitive << ( j_i_reg_100 );

    SC_METHOD(thread_j_fu_140_p2);
    sensitive << ( j_i_reg_100 );

    SC_METHOD(thread_tmp_148_i_fu_135_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( cols_reg_173 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( j_cast_i_fu_131_p1 );

    SC_METHOD(thread_tmp_149_i_fu_146_p1);
    sensitive << ( dx_data_stream_V_dout );

    SC_METHOD(thread_tmp_150_i_fu_154_p0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_149_i_fu_146_p1 );

    SC_METHOD(thread_tmp_150_i_fu_154_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_149_i_fu_146_p1 );

    SC_METHOD(thread_tmp_151_i_fu_150_p1);
    sensitive << ( dy_data_stream_V_dout );

    SC_METHOD(thread_tmp_i_fu_120_p2);
    sensitive << ( rows_reg_168 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_cast_i_fu_116_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( dx_rows_V_empty_n );
    sensitive << ( dx_cols_V_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( tmp_i_fu_120_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_148_i_fu_135_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_enable_reg_pp0_iter3 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "0001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Gradient_Add_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, dx_rows_V_dout, "(port)dx_rows_V_dout");
    sc_trace(mVcdFile, dx_rows_V_empty_n, "(port)dx_rows_V_empty_n");
    sc_trace(mVcdFile, dx_rows_V_read, "(port)dx_rows_V_read");
    sc_trace(mVcdFile, dx_cols_V_dout, "(port)dx_cols_V_dout");
    sc_trace(mVcdFile, dx_cols_V_empty_n, "(port)dx_cols_V_empty_n");
    sc_trace(mVcdFile, dx_cols_V_read, "(port)dx_cols_V_read");
    sc_trace(mVcdFile, dx_data_stream_V_dout, "(port)dx_data_stream_V_dout");
    sc_trace(mVcdFile, dx_data_stream_V_empty_n, "(port)dx_data_stream_V_empty_n");
    sc_trace(mVcdFile, dx_data_stream_V_read, "(port)dx_data_stream_V_read");
    sc_trace(mVcdFile, dy_data_stream_V_dout, "(port)dy_data_stream_V_dout");
    sc_trace(mVcdFile, dy_data_stream_V_empty_n, "(port)dy_data_stream_V_empty_n");
    sc_trace(mVcdFile, dy_data_stream_V_read, "(port)dy_data_stream_V_read");
    sc_trace(mVcdFile, dst_data_stream_V_din, "(port)dst_data_stream_V_din");
    sc_trace(mVcdFile, dst_data_stream_V_full_n, "(port)dst_data_stream_V_full_n");
    sc_trace(mVcdFile, dst_data_stream_V_write, "(port)dst_data_stream_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, dx_rows_V_blk_n, "dx_rows_V_blk_n");
    sc_trace(mVcdFile, dx_cols_V_blk_n, "dx_cols_V_blk_n");
    sc_trace(mVcdFile, dx_data_stream_V_blk_n, "dx_data_stream_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, tmp_148_i_reg_187, "tmp_148_i_reg_187");
    sc_trace(mVcdFile, dy_data_stream_V_blk_n, "dy_data_stream_V_blk_n");
    sc_trace(mVcdFile, dst_data_stream_V_blk_n, "dst_data_stream_V_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, tmp_148_i_reg_187_pp0_iter3_reg, "tmp_148_i_reg_187_pp0_iter3_reg");
    sc_trace(mVcdFile, j_i_reg_100, "j_i_reg_100");
    sc_trace(mVcdFile, rows_reg_168, "rows_reg_168");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, cols_reg_173, "cols_reg_173");
    sc_trace(mVcdFile, tmp_i_fu_120_p2, "tmp_i_fu_120_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, i_fu_125_p2, "i_fu_125_p2");
    sc_trace(mVcdFile, i_reg_182, "i_reg_182");
    sc_trace(mVcdFile, tmp_148_i_fu_135_p2, "tmp_148_i_fu_135_p2");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter0, "ap_block_state3_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter1, "ap_block_state4_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter2, "ap_block_state5_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter3, "ap_block_state6_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage0_iter4, "ap_block_state7_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, tmp_148_i_reg_187_pp0_iter1_reg, "tmp_148_i_reg_187_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_148_i_reg_187_pp0_iter2_reg, "tmp_148_i_reg_187_pp0_iter2_reg");
    sc_trace(mVcdFile, j_fu_140_p2, "j_fu_140_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, grp_fu_160_p3, "grp_fu_160_p3");
    sc_trace(mVcdFile, xf_V_reg_196, "xf_V_reg_196");
    sc_trace(mVcdFile, grp_sqrt_fixed_32_32_s_fu_111_ap_return, "grp_sqrt_fixed_32_32_s_fu_111_ap_return");
    sc_trace(mVcdFile, vmag_reg_201, "vmag_reg_201");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state3, "ap_condition_pp0_exit_iter0_state3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, grp_sqrt_fixed_32_32_s_fu_111_ap_ce, "grp_sqrt_fixed_32_32_s_fu_111_ap_ce");
    sc_trace(mVcdFile, i_i_reg_89, "i_i_reg_89");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, i_cast_i_fu_116_p1, "i_cast_i_fu_116_p1");
    sc_trace(mVcdFile, j_cast_i_fu_131_p1, "j_cast_i_fu_131_p1");
    sc_trace(mVcdFile, tmp_150_i_fu_154_p0, "tmp_150_i_fu_154_p0");
    sc_trace(mVcdFile, tmp_149_i_fu_146_p1, "tmp_149_i_fu_146_p1");
    sc_trace(mVcdFile, tmp_150_i_fu_154_p1, "tmp_150_i_fu_154_p1");
    sc_trace(mVcdFile, grp_fu_160_p0, "grp_fu_160_p0");
    sc_trace(mVcdFile, tmp_151_i_fu_150_p1, "tmp_151_i_fu_150_p1");
    sc_trace(mVcdFile, grp_fu_160_p1, "grp_fu_160_p1");
    sc_trace(mVcdFile, tmp_150_i_fu_154_p2, "tmp_150_i_fu_154_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

Gradient_Add::~Gradient_Add() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete grp_sqrt_fixed_32_32_s_fu_111;
    delete HoughCircles_CorelbW_U105;
    delete HoughCircles_Coremb6_U106;
}

void Gradient_Add::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(tmp_i_fu_120_p2.read(), ap_const_lv1_0) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read()) && 
             esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(tmp_i_fu_120_p2.read(), ap_const_lv1_1) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state3.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        } else if ((esl_seteq<1,1,1>(tmp_i_fu_120_p2.read(), ap_const_lv1_1) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
            ap_enable_reg_pp0_iter4 = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        i_i_reg_89 = i_reg_182.read();
    } else if ((!(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(dx_cols_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(dx_rows_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        i_i_reg_89 = ap_const_lv31_0;
    }
    if ((esl_seteq<1,1,1>(tmp_i_fu_120_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        j_i_reg_100 = ap_const_lv31_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_148_i_fu_135_p2.read()))) {
        j_i_reg_100 = j_fu_140_p2.read();
    }
    if ((!(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(dx_cols_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(dx_rows_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        cols_reg_173 = dx_cols_V_dout.read();
        rows_reg_168 = dx_rows_V_dout.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_reg_182 = i_fu_125_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_148_i_reg_187 = tmp_148_i_fu_135_p2.read();
        tmp_148_i_reg_187_pp0_iter1_reg = tmp_148_i_reg_187.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
        tmp_148_i_reg_187_pp0_iter2_reg = tmp_148_i_reg_187_pp0_iter1_reg.read();
        tmp_148_i_reg_187_pp0_iter3_reg = tmp_148_i_reg_187_pp0_iter2_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_148_i_reg_187_pp0_iter2_reg.read()))) {
        vmag_reg_201 = grp_sqrt_fixed_32_32_s_fu_111_ap_return.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(tmp_148_i_reg_187.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        xf_V_reg_196 = grp_fu_160_p3.read();
    }
}

void Gradient_Add::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[2];
}

void Gradient_Add::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void Gradient_Add::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void Gradient_Add::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[3];
}

void Gradient_Add::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Gradient_Add::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  ((esl_seteq<1,1,1>(tmp_148_i_reg_187.read(), ap_const_lv1_1) && 
    esl_seteq<1,1,1>(ap_const_logic_0, dx_data_stream_V_empty_n.read())) || 
   (esl_seteq<1,1,1>(tmp_148_i_reg_187.read(), ap_const_lv1_1) && 
    esl_seteq<1,1,1>(ap_const_logic_0, dy_data_stream_V_empty_n.read())))) || (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter4.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, tmp_148_i_reg_187_pp0_iter3_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_V_full_n.read())));
}

void Gradient_Add::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  ((esl_seteq<1,1,1>(tmp_148_i_reg_187.read(), ap_const_lv1_1) && 
    esl_seteq<1,1,1>(ap_const_logic_0, dx_data_stream_V_empty_n.read())) || 
   (esl_seteq<1,1,1>(tmp_148_i_reg_187.read(), ap_const_lv1_1) && 
    esl_seteq<1,1,1>(ap_const_logic_0, dy_data_stream_V_empty_n.read())))) || (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter4.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, tmp_148_i_reg_187_pp0_iter3_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_V_full_n.read())));
}

void Gradient_Add::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  ((esl_seteq<1,1,1>(tmp_148_i_reg_187.read(), ap_const_lv1_1) && 
    esl_seteq<1,1,1>(ap_const_logic_0, dx_data_stream_V_empty_n.read())) || 
   (esl_seteq<1,1,1>(tmp_148_i_reg_187.read(), ap_const_lv1_1) && 
    esl_seteq<1,1,1>(ap_const_logic_0, dy_data_stream_V_empty_n.read())))) || (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter4.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, tmp_148_i_reg_187_pp0_iter3_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_V_full_n.read())));
}

void Gradient_Add::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(dx_cols_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(dx_rows_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void Gradient_Add::thread_ap_block_state3_pp0_stage0_iter0() {
    ap_block_state3_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Gradient_Add::thread_ap_block_state4_pp0_stage0_iter1() {
    ap_block_state4_pp0_stage0_iter1 = ((esl_seteq<1,1,1>(tmp_148_i_reg_187.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, dx_data_stream_V_empty_n.read())) || (esl_seteq<1,1,1>(tmp_148_i_reg_187.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, dy_data_stream_V_empty_n.read())));
}

void Gradient_Add::thread_ap_block_state5_pp0_stage0_iter2() {
    ap_block_state5_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Gradient_Add::thread_ap_block_state6_pp0_stage0_iter3() {
    ap_block_state6_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Gradient_Add::thread_ap_block_state7_pp0_stage0_iter4() {
    ap_block_state7_pp0_stage0_iter4 = (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_148_i_reg_187_pp0_iter3_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_V_full_n.read()));
}

void Gradient_Add::thread_ap_condition_pp0_exit_iter0_state3() {
    if (esl_seteq<1,1,1>(tmp_148_i_fu_135_p2.read(), ap_const_lv1_0)) {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_0;
    }
}

void Gradient_Add::thread_ap_done() {
    if ((esl_seteq<1,1,1>(tmp_i_fu_120_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void Gradient_Add::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void Gradient_Add::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Gradient_Add::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void Gradient_Add::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(tmp_i_fu_120_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void Gradient_Add::thread_dst_data_stream_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter4.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_148_i_reg_187_pp0_iter3_reg.read()))) {
        dst_data_stream_V_blk_n = dst_data_stream_V_full_n.read();
    } else {
        dst_data_stream_V_blk_n = ap_const_logic_1;
    }
}

void Gradient_Add::thread_dst_data_stream_V_din() {
    dst_data_stream_V_din = vmag_reg_201.read();
}

void Gradient_Add::thread_dst_data_stream_V_write() {
    if ((esl_seteq<1,1,1>(ap_enable_reg_pp0_iter4.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_148_i_reg_187_pp0_iter3_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        dst_data_stream_V_write = ap_const_logic_1;
    } else {
        dst_data_stream_V_write = ap_const_logic_0;
    }
}

void Gradient_Add::thread_dx_cols_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        dx_cols_V_blk_n = dx_cols_V_empty_n.read();
    } else {
        dx_cols_V_blk_n = ap_const_logic_1;
    }
}

void Gradient_Add::thread_dx_cols_V_read() {
    if ((!(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(dx_cols_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(dx_rows_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        dx_cols_V_read = ap_const_logic_1;
    } else {
        dx_cols_V_read = ap_const_logic_0;
    }
}

void Gradient_Add::thread_dx_data_stream_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(tmp_148_i_reg_187.read(), ap_const_lv1_1))) {
        dx_data_stream_V_blk_n = dx_data_stream_V_empty_n.read();
    } else {
        dx_data_stream_V_blk_n = ap_const_logic_1;
    }
}

void Gradient_Add::thread_dx_data_stream_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(tmp_148_i_reg_187.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        dx_data_stream_V_read = ap_const_logic_1;
    } else {
        dx_data_stream_V_read = ap_const_logic_0;
    }
}

void Gradient_Add::thread_dx_rows_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        dx_rows_V_blk_n = dx_rows_V_empty_n.read();
    } else {
        dx_rows_V_blk_n = ap_const_logic_1;
    }
}

void Gradient_Add::thread_dx_rows_V_read() {
    if ((!(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(dx_cols_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(dx_rows_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        dx_rows_V_read = ap_const_logic_1;
    } else {
        dx_rows_V_read = ap_const_logic_0;
    }
}

void Gradient_Add::thread_dy_data_stream_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(tmp_148_i_reg_187.read(), ap_const_lv1_1))) {
        dy_data_stream_V_blk_n = dy_data_stream_V_empty_n.read();
    } else {
        dy_data_stream_V_blk_n = ap_const_logic_1;
    }
}

void Gradient_Add::thread_dy_data_stream_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(tmp_148_i_reg_187.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        dy_data_stream_V_read = ap_const_logic_1;
    } else {
        dy_data_stream_V_read = ap_const_logic_0;
    }
}

void Gradient_Add::thread_grp_fu_160_p0() {
    grp_fu_160_p0 =  (sc_lv<16>) (tmp_151_i_fu_150_p1.read());
}

void Gradient_Add::thread_grp_fu_160_p1() {
    grp_fu_160_p1 =  (sc_lv<16>) (tmp_151_i_fu_150_p1.read());
}

void Gradient_Add::thread_grp_sqrt_fixed_32_32_s_fu_111_ap_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_sqrt_fixed_32_32_s_fu_111_ap_ce = ap_const_logic_1;
    } else {
        grp_sqrt_fixed_32_32_s_fu_111_ap_ce = ap_const_logic_0;
    }
}

void Gradient_Add::thread_i_cast_i_fu_116_p1() {
    i_cast_i_fu_116_p1 = esl_zext<32,31>(i_i_reg_89.read());
}

void Gradient_Add::thread_i_fu_125_p2() {
    i_fu_125_p2 = (!i_i_reg_89.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_biguint<31>(i_i_reg_89.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void Gradient_Add::thread_j_cast_i_fu_131_p1() {
    j_cast_i_fu_131_p1 = esl_zext<32,31>(j_i_reg_100.read());
}

void Gradient_Add::thread_j_fu_140_p2() {
    j_fu_140_p2 = (!j_i_reg_100.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_biguint<31>(j_i_reg_100.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void Gradient_Add::thread_tmp_148_i_fu_135_p2() {
    tmp_148_i_fu_135_p2 = (!j_cast_i_fu_131_p1.read().is_01() || !cols_reg_173.read().is_01())? sc_lv<1>(): (sc_bigint<32>(j_cast_i_fu_131_p1.read()) < sc_bigint<32>(cols_reg_173.read()));
}

void Gradient_Add::thread_tmp_149_i_fu_146_p1() {
    tmp_149_i_fu_146_p1 = esl_sext<32,16>(dx_data_stream_V_dout.read());
}

void Gradient_Add::thread_tmp_150_i_fu_154_p0() {
    tmp_150_i_fu_154_p0 =  (sc_lv<16>) (tmp_149_i_fu_146_p1.read());
}

void Gradient_Add::thread_tmp_150_i_fu_154_p1() {
    tmp_150_i_fu_154_p1 =  (sc_lv<16>) (tmp_149_i_fu_146_p1.read());
}

void Gradient_Add::thread_tmp_151_i_fu_150_p1() {
    tmp_151_i_fu_150_p1 = esl_sext<32,16>(dy_data_stream_V_dout.read());
}

void Gradient_Add::thread_tmp_i_fu_120_p2() {
    tmp_i_fu_120_p2 = (!i_cast_i_fu_116_p1.read().is_01() || !rows_reg_168.read().is_01())? sc_lv<1>(): (sc_bigint<32>(i_cast_i_fu_116_p1.read()) < sc_bigint<32>(rows_reg_168.read()));
}

void Gradient_Add::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((!(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(dx_cols_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(dx_rows_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(tmp_i_fu_120_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            if ((!(esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && esl_seteq<1,1,1>(tmp_148_i_fu_135_p2.read(), ap_const_lv1_0)) && !(esl_seteq<1,1,1>(ap_enable_reg_pp0_iter4.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter3.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_enable_reg_pp0_iter4.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter3.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) || (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && 
  esl_seteq<1,1,1>(tmp_148_i_fu_135_p2.read(), ap_const_lv1_0)))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        default : 
            ap_NS_fsm = "XXXX";
            break;
    }
}

}

