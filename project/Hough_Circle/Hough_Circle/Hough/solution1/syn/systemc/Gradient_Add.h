// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Gradient_Add_HH_
#define _Gradient_Add_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "sqrt_fixed_32_32_s.h"
#include "HoughCircles_CorelbW.h"
#include "HoughCircles_Coremb6.h"

namespace ap_rtl {

struct Gradient_Add : public sc_module {
    // Port declarations 22
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > dx_rows_V_dout;
    sc_in< sc_logic > dx_rows_V_empty_n;
    sc_out< sc_logic > dx_rows_V_read;
    sc_in< sc_lv<32> > dx_cols_V_dout;
    sc_in< sc_logic > dx_cols_V_empty_n;
    sc_out< sc_logic > dx_cols_V_read;
    sc_in< sc_lv<16> > dx_data_stream_V_dout;
    sc_in< sc_logic > dx_data_stream_V_empty_n;
    sc_out< sc_logic > dx_data_stream_V_read;
    sc_in< sc_lv<16> > dy_data_stream_V_dout;
    sc_in< sc_logic > dy_data_stream_V_empty_n;
    sc_out< sc_logic > dy_data_stream_V_read;
    sc_out< sc_lv<16> > dst_data_stream_V_din;
    sc_in< sc_logic > dst_data_stream_V_full_n;
    sc_out< sc_logic > dst_data_stream_V_write;


    // Module declarations
    Gradient_Add(sc_module_name name);
    SC_HAS_PROCESS(Gradient_Add);

    ~Gradient_Add();

    sc_trace_file* mVcdFile;

    sqrt_fixed_32_32_s* grp_sqrt_fixed_32_32_s_fu_111;
    HoughCircles_CorelbW<1,1,16,16,32>* HoughCircles_CorelbW_U105;
    HoughCircles_Coremb6<1,1,16,16,32,32>* HoughCircles_Coremb6_U106;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > dx_rows_V_blk_n;
    sc_signal< sc_logic > dx_cols_V_blk_n;
    sc_signal< sc_logic > dx_data_stream_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > tmp_148_i_reg_187;
    sc_signal< sc_logic > dy_data_stream_V_blk_n;
    sc_signal< sc_logic > dst_data_stream_V_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_lv<1> > tmp_148_i_reg_187_pp0_iter3_reg;
    sc_signal< sc_lv<31> > j_i_reg_100;
    sc_signal< sc_lv<32> > rows_reg_168;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<32> > cols_reg_173;
    sc_signal< sc_lv<1> > tmp_i_fu_120_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<31> > i_fu_125_p2;
    sc_signal< sc_lv<31> > i_reg_182;
    sc_signal< sc_lv<1> > tmp_148_i_fu_135_p2;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter4;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > tmp_148_i_reg_187_pp0_iter1_reg;
    sc_signal< sc_lv<1> > tmp_148_i_reg_187_pp0_iter2_reg;
    sc_signal< sc_lv<31> > j_fu_140_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<32> > grp_fu_160_p3;
    sc_signal< sc_lv<32> > xf_V_reg_196;
    sc_signal< sc_lv<16> > grp_sqrt_fixed_32_32_s_fu_111_ap_return;
    sc_signal< sc_lv<16> > vmag_reg_201;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_logic > grp_sqrt_fixed_32_32_s_fu_111_ap_ce;
    sc_signal< sc_lv<31> > i_i_reg_89;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<32> > i_cast_i_fu_116_p1;
    sc_signal< sc_lv<32> > j_cast_i_fu_131_p1;
    sc_signal< sc_lv<16> > tmp_150_i_fu_154_p0;
    sc_signal< sc_lv<32> > tmp_149_i_fu_146_p1;
    sc_signal< sc_lv<16> > tmp_150_i_fu_154_p1;
    sc_signal< sc_lv<16> > grp_fu_160_p0;
    sc_signal< sc_lv<32> > tmp_151_i_fu_150_p1;
    sc_signal< sc_lv<16> > grp_fu_160_p1;
    sc_signal< sc_lv<32> > tmp_150_i_fu_154_p2;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_state2;
    static const sc_lv<4> ap_ST_fsm_pp0_stage0;
    static const sc_lv<4> ap_ST_fsm_state8;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<31> ap_const_lv31_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<31> ap_const_lv31_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state8();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state3_pp0_stage0_iter0();
    void thread_ap_block_state4_pp0_stage0_iter1();
    void thread_ap_block_state5_pp0_stage0_iter2();
    void thread_ap_block_state6_pp0_stage0_iter3();
    void thread_ap_block_state7_pp0_stage0_iter4();
    void thread_ap_condition_pp0_exit_iter0_state3();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_dst_data_stream_V_blk_n();
    void thread_dst_data_stream_V_din();
    void thread_dst_data_stream_V_write();
    void thread_dx_cols_V_blk_n();
    void thread_dx_cols_V_read();
    void thread_dx_data_stream_V_blk_n();
    void thread_dx_data_stream_V_read();
    void thread_dx_rows_V_blk_n();
    void thread_dx_rows_V_read();
    void thread_dy_data_stream_V_blk_n();
    void thread_dy_data_stream_V_read();
    void thread_grp_fu_160_p0();
    void thread_grp_fu_160_p1();
    void thread_grp_sqrt_fixed_32_32_s_fu_111_ap_ce();
    void thread_i_cast_i_fu_116_p1();
    void thread_i_fu_125_p2();
    void thread_j_cast_i_fu_131_p1();
    void thread_j_fu_140_p2();
    void thread_tmp_148_i_fu_135_p2();
    void thread_tmp_149_i_fu_146_p1();
    void thread_tmp_150_i_fu_154_p0();
    void thread_tmp_150_i_fu_154_p1();
    void thread_tmp_151_i_fu_150_p1();
    void thread_tmp_i_fu_120_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
