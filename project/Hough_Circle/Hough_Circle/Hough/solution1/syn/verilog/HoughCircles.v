// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module HoughCircles (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        edge_val_address0,
        edge_val_ce0,
        edge_val_q0,
        edge_rows_dout,
        edge_rows_empty_n,
        edge_rows_read,
        edge_cols_dout,
        edge_cols_empty_n,
        edge_cols_read,
        dx_val_address0,
        dx_val_ce0,
        dx_val_q0,
        dy_val_address0,
        dy_val_ce0,
        dy_val_q0,
        circles_val_address0,
        circles_val_ce0,
        circles_val_we0,
        circles_val_d0,
        circles_val_q0,
        circles_val_address1,
        circles_val_ce1,
        circles_val_we1,
        circles_val_d1,
        circles_val_q1,
        circles_rows_dout,
        circles_rows_empty_n,
        circles_rows_read,
        circles_cols_dout,
        circles_cols_empty_n,
        circles_cols_read,
        acc_threshold_dout,
        acc_threshold_empty_n,
        acc_threshold_read,
        min_dist_dout,
        min_dist_empty_n,
        min_dist_read,
        min_radius_dout,
        min_radius_empty_n,
        min_radius_read,
        max_radius_dout,
        max_radius_empty_n,
        max_radius_read,
        circles_rows_out_din,
        circles_rows_out_full_n,
        circles_rows_out_write,
        circles_cols_out_din,
        circles_cols_out_full_n,
        circles_cols_out_write
);

parameter    ap_ST_fsm_state1 = 75'd1;
parameter    ap_ST_fsm_state2 = 75'd2;
parameter    ap_ST_fsm_state3 = 75'd4;
parameter    ap_ST_fsm_state4 = 75'd8;
parameter    ap_ST_fsm_state5 = 75'd16;
parameter    ap_ST_fsm_state6 = 75'd32;
parameter    ap_ST_fsm_state7 = 75'd64;
parameter    ap_ST_fsm_state8 = 75'd128;
parameter    ap_ST_fsm_state9 = 75'd256;
parameter    ap_ST_fsm_state10 = 75'd512;
parameter    ap_ST_fsm_state11 = 75'd1024;
parameter    ap_ST_fsm_state12 = 75'd2048;
parameter    ap_ST_fsm_state13 = 75'd4096;
parameter    ap_ST_fsm_state14 = 75'd8192;
parameter    ap_ST_fsm_state15 = 75'd16384;
parameter    ap_ST_fsm_state16 = 75'd32768;
parameter    ap_ST_fsm_state17 = 75'd65536;
parameter    ap_ST_fsm_state18 = 75'd131072;
parameter    ap_ST_fsm_state19 = 75'd262144;
parameter    ap_ST_fsm_state20 = 75'd524288;
parameter    ap_ST_fsm_state21 = 75'd1048576;
parameter    ap_ST_fsm_state22 = 75'd2097152;
parameter    ap_ST_fsm_state23 = 75'd4194304;
parameter    ap_ST_fsm_state24 = 75'd8388608;
parameter    ap_ST_fsm_state25 = 75'd16777216;
parameter    ap_ST_fsm_state26 = 75'd33554432;
parameter    ap_ST_fsm_state27 = 75'd67108864;
parameter    ap_ST_fsm_state28 = 75'd134217728;
parameter    ap_ST_fsm_state29 = 75'd268435456;
parameter    ap_ST_fsm_state30 = 75'd536870912;
parameter    ap_ST_fsm_state31 = 75'd1073741824;
parameter    ap_ST_fsm_state32 = 75'd2147483648;
parameter    ap_ST_fsm_state33 = 75'd4294967296;
parameter    ap_ST_fsm_state34 = 75'd8589934592;
parameter    ap_ST_fsm_state35 = 75'd17179869184;
parameter    ap_ST_fsm_state36 = 75'd34359738368;
parameter    ap_ST_fsm_state37 = 75'd68719476736;
parameter    ap_ST_fsm_state38 = 75'd137438953472;
parameter    ap_ST_fsm_state39 = 75'd274877906944;
parameter    ap_ST_fsm_state40 = 75'd549755813888;
parameter    ap_ST_fsm_state41 = 75'd1099511627776;
parameter    ap_ST_fsm_state42 = 75'd2199023255552;
parameter    ap_ST_fsm_state43 = 75'd4398046511104;
parameter    ap_ST_fsm_state44 = 75'd8796093022208;
parameter    ap_ST_fsm_state45 = 75'd17592186044416;
parameter    ap_ST_fsm_state46 = 75'd35184372088832;
parameter    ap_ST_fsm_state47 = 75'd70368744177664;
parameter    ap_ST_fsm_state48 = 75'd140737488355328;
parameter    ap_ST_fsm_state49 = 75'd281474976710656;
parameter    ap_ST_fsm_state50 = 75'd562949953421312;
parameter    ap_ST_fsm_state51 = 75'd1125899906842624;
parameter    ap_ST_fsm_state52 = 75'd2251799813685248;
parameter    ap_ST_fsm_pp2_stage0 = 75'd4503599627370496;
parameter    ap_ST_fsm_pp2_stage1 = 75'd9007199254740992;
parameter    ap_ST_fsm_pp2_stage2 = 75'd18014398509481984;
parameter    ap_ST_fsm_state59 = 75'd36028797018963968;
parameter    ap_ST_fsm_state60 = 75'd72057594037927936;
parameter    ap_ST_fsm_state61 = 75'd144115188075855872;
parameter    ap_ST_fsm_state62 = 75'd288230376151711744;
parameter    ap_ST_fsm_state63 = 75'd576460752303423488;
parameter    ap_ST_fsm_state64 = 75'd1152921504606846976;
parameter    ap_ST_fsm_state65 = 75'd2305843009213693952;
parameter    ap_ST_fsm_state66 = 75'd4611686018427387904;
parameter    ap_ST_fsm_state67 = 75'd9223372036854775808;
parameter    ap_ST_fsm_pp4_stage0 = 75'd18446744073709551616;
parameter    ap_ST_fsm_pp4_stage1 = 75'd36893488147419103232;
parameter    ap_ST_fsm_state75 = 75'd73786976294838206464;
parameter    ap_ST_fsm_state76 = 75'd147573952589676412928;
parameter    ap_ST_fsm_state77 = 75'd295147905179352825856;
parameter    ap_ST_fsm_state78 = 75'd590295810358705651712;
parameter    ap_ST_fsm_state79 = 75'd1180591620717411303424;
parameter    ap_ST_fsm_state80 = 75'd2361183241434822606848;
parameter    ap_ST_fsm_state81 = 75'd4722366482869645213696;
parameter    ap_ST_fsm_state82 = 75'd9444732965739290427392;
parameter    ap_ST_fsm_state83 = 75'd18889465931478580854784;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [16:0] edge_val_address0;
output   edge_val_ce0;
input  [7:0] edge_val_q0;
input  [31:0] edge_rows_dout;
input   edge_rows_empty_n;
output   edge_rows_read;
input  [31:0] edge_cols_dout;
input   edge_cols_empty_n;
output   edge_cols_read;
output  [16:0] dx_val_address0;
output   dx_val_ce0;
input  [15:0] dx_val_q0;
output  [16:0] dy_val_address0;
output   dy_val_ce0;
input  [15:0] dy_val_q0;
output  [8:0] circles_val_address0;
output   circles_val_ce0;
output   circles_val_we0;
output  [15:0] circles_val_d0;
input  [15:0] circles_val_q0;
output  [8:0] circles_val_address1;
output   circles_val_ce1;
output   circles_val_we1;
output  [15:0] circles_val_d1;
input  [15:0] circles_val_q1;
input  [2:0] circles_rows_dout;
input   circles_rows_empty_n;
output   circles_rows_read;
input  [7:0] circles_cols_dout;
input   circles_cols_empty_n;
output   circles_cols_read;
input  [31:0] acc_threshold_dout;
input   acc_threshold_empty_n;
output   acc_threshold_read;
input  [31:0] min_dist_dout;
input   min_dist_empty_n;
output   min_dist_read;
input  [31:0] min_radius_dout;
input   min_radius_empty_n;
output   min_radius_read;
input  [31:0] max_radius_dout;
input   max_radius_empty_n;
output   max_radius_read;
output  [2:0] circles_rows_out_din;
input   circles_rows_out_full_n;
output   circles_rows_out_write;
output  [7:0] circles_cols_out_din;
input   circles_cols_out_full_n;
output   circles_cols_out_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg edge_val_ce0;
reg edge_rows_read;
reg edge_cols_read;
reg dx_val_ce0;
reg dy_val_ce0;
reg[8:0] circles_val_address0;
reg circles_val_ce0;
reg circles_val_we0;
reg[15:0] circles_val_d0;
reg[8:0] circles_val_address1;
reg circles_val_ce1;
reg circles_val_we1;
reg[15:0] circles_val_d1;
reg circles_rows_read;
reg circles_cols_read;
reg acc_threshold_read;
reg min_dist_read;
reg min_radius_read;
reg max_radius_read;
reg circles_rows_out_write;
reg circles_cols_out_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [74:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [5:0] mask_table1_address0;
reg    mask_table1_ce0;
wire   [51:0] mask_table1_q0;
wire   [5:0] one_half_table2_address0;
reg    one_half_table2_ce0;
wire   [52:0] one_half_table2_q0;
reg    edge_rows_blk_n;
reg    edge_cols_blk_n;
reg    circles_rows_blk_n;
reg    circles_cols_blk_n;
reg    acc_threshold_blk_n;
reg    min_dist_blk_n;
reg    min_radius_blk_n;
reg    max_radius_blk_n;
reg    circles_rows_out_blk_n;
reg    circles_cols_out_blk_n;
reg   [30:0] j3_i_reg_779;
reg   [30:0] j8_i_reg_812;
reg   [31:0] p_max_r1_i_reg_824;
reg  signed [31:0] r0_2_reg_834;
wire   [15:0] grp_sqrt_fixed_32_32_s_fu_909_ap_return;
reg   [15:0] reg_946;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_pp4_stage0;
reg    ap_enable_reg_pp4_iter2;
wire    ap_block_state68_pp4_stage0_iter0;
wire    ap_block_state70_pp4_stage0_iter1;
wire    ap_block_state72_pp4_stage0_iter2;
wire    ap_block_state74_pp4_stage0_iter3;
wire    ap_block_pp4_stage0_11001;
reg   [0:0] tmp_97_i_reg_2865;
reg   [0:0] tmp_97_i_reg_2865_pp4_iter1_reg;
reg    ap_block_state1;
reg   [2:0] circles_rows_read_reg_2415;
reg   [7:0] circles_cols_read_reg_2420;
reg   [31:0] acc_threshold_read_reg_2425;
reg   [31:0] min_dist_read_reg_2430;
reg   [31:0] rows_reg_2436;
reg   [31:0] cols_reg_2442;
wire   [30:0] p_max_r_fu_1034_p3;
reg   [30:0] p_max_r_reg_2448;
wire   [31:0] p_max_r_cast_i_fu_1042_p1;
reg   [31:0] p_max_r_cast_i_reg_2453;
wire  signed [31:0] p_min_r_2_fu_1046_p3;
reg  signed [31:0] p_min_r_2_reg_2459;
wire   [8:0] next_mul_fu_1054_p2;
reg   [8:0] next_mul_reg_2468;
wire    ap_CS_fsm_state2;
wire   [0:0] tmp_50_i_fu_1064_p2;
wire   [1:0] i_fu_1069_p2;
reg   [1:0] i_reg_2477;
wire   [6:0] j_fu_1084_p2;
wire    ap_CS_fsm_state3;
wire   [16:0] n_fu_1111_p2;
wire    ap_CS_fsm_state5;
wire   [8:0] n_1_fu_1128_p2;
wire    ap_CS_fsm_state6;
wire   [30:0] i_1_fu_1153_p2;
reg   [30:0] i_1_reg_2516;
wire    ap_CS_fsm_state7;
wire   [17:0] tmp_19_fu_1183_p2;
reg   [17:0] tmp_19_reg_2521;
wire   [0:0] tmp_55_i_fu_1148_p2;
wire   [31:0] y0_fu_1193_p3;
reg   [31:0] y0_reg_2526;
wire   [30:0] j_1_fu_1215_p2;
reg   [30:0] j_1_reg_2541;
wire    ap_CS_fsm_state8;
wire   [0:0] tmp_60_i_fu_1210_p2;
reg  signed [15:0] dx_val_load_reg_2561;
wire    ap_CS_fsm_state9;
reg  signed [15:0] dy_val_load_reg_2566;
wire   [0:0] tmp_64_i_fu_1245_p2;
reg   [0:0] tmp_64_i_reg_2571;
wire   [0:0] tmp_68_i_fu_1257_p2;
reg   [0:0] tmp_68_i_reg_2575;
wire  signed [31:0] grp_fu_2387_p3;
reg  signed [31:0] xf_V_reg_2579;
wire   [31:0] p_Val2_19_fu_1263_p1;
wire    ap_CS_fsm_state12;
wire   [31:0] grp_fu_1274_p2;
wire    ap_CS_fsm_state47;
wire   [31:0] grp_fu_1287_p2;
wire   [31:0] x0_fu_1297_p3;
reg   [31:0] x0_reg_2610;
wire   [0:0] exitcond_i_fu_1305_p2;
wire    ap_CS_fsm_state48;
wire   [1:0] k_fu_1311_p2;
reg   [1:0] k_reg_2619;
wire   [31:0] x1_fu_1322_p2;
wire   [31:0] y1_fu_1332_p2;
wire   [0:0] tmp_110_i_fu_1354_p2;
reg   [0:0] tmp_110_i_reg_2634;
wire    ap_CS_fsm_state49;
wire   [0:0] or_cond3_i_fu_1423_p2;
reg   [0:0] or_cond3_i_reg_2638;
reg   [16:0] accum_addr_6_reg_2642;
wire   [31:0] x1_1_fu_1450_p2;
wire    ap_CS_fsm_state50;
wire   [31:0] y1_1_fu_1456_p2;
wire   [31:0] r_2_fu_1462_p2;
wire   [31:0] sx_1_fu_1468_p2;
wire    ap_CS_fsm_state51;
wire   [31:0] sy_1_fu_1474_p2;
wire   [31:0] next_mul1_fu_1480_p2;
reg   [31:0] next_mul1_reg_2672;
wire    ap_CS_fsm_state52;
wire   [0:0] tmp_59_i_fu_1490_p2;
wire   [30:0] i_2_fu_1495_p2;
reg   [30:0] i_2_reg_2681;
wire   [30:0] min_dist_assign_fu_1519_p3;
reg   [30:0] min_dist_assign_reg_2698;
wire   [0:0] tmp_65_i_fu_1536_p2;
reg   [0:0] tmp_65_i_reg_2703;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state53_pp2_stage0_iter0;
wire    ap_block_state56_pp2_stage0_iter1;
wire    ap_block_pp2_stage0_11001;
wire   [30:0] j_3_fu_1541_p2;
reg   [30:0] j_3_reg_2707;
reg    ap_enable_reg_pp2_iter0;
wire  signed [31:0] tmp_71_i_fu_1553_p2;
reg  signed [31:0] tmp_71_i_reg_2712;
reg  signed [31:0] tmp_71_i_reg_2712_pp2_iter1_reg;
wire  signed [31:0] base_fu_1559_p2;
reg  signed [31:0] base_reg_2720;
reg  signed [31:0] base_reg_2720_pp2_iter1_reg;
wire   [31:0] accum_q0;
reg   [31:0] value_reg_2730;
wire    ap_CS_fsm_pp2_stage1;
wire    ap_block_state54_pp2_stage1_iter0;
wire    ap_block_state57_pp2_stage1_iter1;
wire    ap_block_pp2_stage1_11001;
reg   [31:0] value_reg_2730_pp2_iter1_reg;
wire   [0:0] tmp_73_i_fu_1570_p2;
reg   [0:0] tmp_73_i_reg_2736;
reg   [0:0] tmp_73_i_reg_2736_pp2_iter1_reg;
wire   [0:0] grp_fu_941_p2;
reg   [0:0] tmp_85_i_reg_2745;
wire    ap_CS_fsm_pp2_stage2;
wire    ap_block_state55_pp2_stage2_iter0;
wire    ap_block_state58_pp2_stage2_iter1;
wire    ap_block_pp2_stage2_11001;
reg   [0:0] tmp_89_i_reg_2754;
reg    ap_enable_reg_pp2_iter1;
reg   [0:0] tmp_102_i_reg_2763;
wire   [31:0] min_dist2_fu_1633_p2;
reg   [31:0] min_dist2_reg_2775;
wire    ap_CS_fsm_state60;
wire    grp_HoughSortDescent_fu_914_ap_idle;
wire    grp_HoughSortDescent_fu_914_ap_ready;
wire    grp_HoughSortDescent_fu_914_ap_done;
reg   [31:0] total_1_load_reg_2780;
wire    ap_CS_fsm_state61;
wire   [30:0] i_3_fu_1652_p2;
reg   [30:0] i_3_reg_2790;
wire   [0:0] tmp_66_i_fu_1646_p2;
wire   [31:0] centers_val_q0;
reg  signed [31:0] base_1_reg_2800;
wire    ap_CS_fsm_state62;
reg   [0:0] tmp_56_reg_2806;
wire   [15:0] tmp_61_fu_1671_p1;
reg   [15:0] tmp_61_reg_2812;
wire   [15:0] tmp_60_fu_1754_p1;
reg   [15:0] tmp_60_reg_2817;
wire    ap_CS_fsm_state63;
wire   [31:0] cx0_fu_1758_p2;
reg   [31:0] cx0_reg_2822;
wire   [15:0] tmp_62_fu_1763_p1;
reg   [15:0] tmp_62_reg_2828;
wire  signed [23:0] cy0_fu_1767_p2;
reg  signed [23:0] cy0_reg_2833;
wire  signed [31:0] cy0_cast_i_fu_1773_p1;
reg  signed [31:0] cy0_cast_i_reg_2838;
wire   [0:0] tmp_86_i_fu_1781_p2;
reg   [0:0] tmp_86_i_reg_2843;
wire    ap_CS_fsm_state64;
wire   [30:0] j_5_cast_i_fu_1786_p2;
reg   [30:0] j_5_cast_i_reg_2847;
wire   [0:0] tmp_97_i_fu_1867_p2;
reg   [0:0] tmp_97_i_reg_2865_pp4_iter2_reg;
wire   [30:0] j_4_fu_1879_p2;
reg   [30:0] j_4_reg_2879;
wire    ap_CS_fsm_pp4_stage1;
reg    ap_enable_reg_pp4_iter0;
wire    ap_block_state69_pp4_stage1_iter0;
wire    ap_block_state71_pp4_stage1_iter1;
wire    ap_block_state73_pp4_stage1_iter2;
wire    ap_block_pp4_stage1_11001;
wire  signed [31:0] p_dy_fu_1898_p2;
reg  signed [31:0] p_dy_reg_2884;
wire   [31:0] tmp_105_i_fu_1903_p2;
reg   [31:0] tmp_105_i_reg_2890;
wire   [31:0] dist2_2_fu_1913_p2;
reg   [31:0] dist2_2_reg_2895;
wire   [0:0] or_cond4_i_fu_1940_p2;
reg   [0:0] or_cond4_i_reg_2900;
wire   [31:0] p_max_r_1_cast_fu_1960_p1;
wire   [31:0] p_min_r_fu_1970_p3;
reg   [8:0] dist_accum_addr_2_reg_2914;
wire    ap_CS_fsm_state75;
wire   [31:0] dist_accum_q0;
wire    ap_CS_fsm_state76;
reg   [8:0] dist_accum_addr_3_reg_2932;
wire    ap_CS_fsm_state77;
wire   [0:0] tmp_118_i_fu_1995_p2;
wire   [31:0] tmp_136_i_fu_2006_p2;
reg   [31:0] tmp_136_i_reg_2937;
wire   [31:0] r10_0_r0_i_fu_2023_p3;
wire    ap_CS_fsm_state78;
wire   [31:0] c_0_c0_i_fu_2031_p3;
wire   [31:0] r_3_fu_2039_p2;
wire   [31:0] tmp_128_i_fu_926_p1;
reg   [31:0] tmp_128_i_reg_2957;
wire    ap_CS_fsm_state79;
wire   [63:0] x_assign_3_fu_930_p1;
reg   [63:0] x_assign_3_reg_2962;
wire    ap_CS_fsm_state80;
wire   [63:0] t_V_2_fu_2045_p1;
reg   [63:0] t_V_2_reg_2967;
wire   [0:0] tmp_i_i_i_fu_2059_p2;
reg   [0:0] tmp_i_i_i_reg_2973;
wire   [0:0] tmp_170_i_i_i_fu_2065_p2;
reg   [0:0] tmp_170_i_i_i_reg_2979;
wire   [0:0] tmp_132_i_fu_2317_p2;
reg   [0:0] tmp_132_i_reg_2994;
wire    ap_CS_fsm_state81;
wire  signed [31:0] total_fu_2323_p2;
reg  signed [31:0] total_reg_2998;
wire   [9:0] tmp_73_fu_2338_p1;
reg   [9:0] tmp_73_reg_3005;
wire   [15:0] tmp_74_fu_2359_p1;
reg   [15:0] tmp_74_reg_3010;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state53;
wire    ap_block_pp2_stage2_subdone;
wire    ap_CS_fsm_state67;
wire    ap_block_pp4_stage1_subdone;
reg    ap_enable_reg_pp4_iter1;
reg    ap_condition_pp4_exit_iter2_state73;
reg    ap_enable_reg_pp4_iter3;
reg   [16:0] accum_address0;
reg    accum_ce0;
reg    accum_we0;
reg   [31:0] accum_d0;
reg   [16:0] accum_address1;
reg    accum_ce1;
wire   [31:0] accum_q1;
reg   [8:0] dist_accum_address0;
reg    dist_accum_ce0;
reg    dist_accum_we0;
reg   [31:0] dist_accum_d0;
reg   [16:0] pt_buf_val_x_address0;
reg    pt_buf_val_x_ce0;
reg    pt_buf_val_x_we0;
wire   [30:0] pt_buf_val_x_q0;
reg   [16:0] pt_buf_val_y_address0;
reg    pt_buf_val_y_ce0;
reg    pt_buf_val_y_we0;
wire   [30:0] pt_buf_val_y_q0;
reg   [16:0] centers_val_address0;
reg    centers_val_ce0;
reg    centers_val_we0;
reg   [31:0] centers_val_d0;
reg   [31:0] grp_sqrt_fixed_32_32_s_fu_909_x_V;
reg    grp_sqrt_fixed_32_32_s_fu_909_ap_ce;
wire    ap_CS_fsm_state10;
wire    grp_HoughSortDescent_fu_914_ap_start;
wire   [16:0] grp_HoughSortDescent_fu_914_sequence_address0;
wire    grp_HoughSortDescent_fu_914_sequence_ce0;
wire    grp_HoughSortDescent_fu_914_sequence_we0;
wire   [31:0] grp_HoughSortDescent_fu_914_sequence_d0;
wire   [16:0] grp_HoughSortDescent_fu_914_data_address0;
wire    grp_HoughSortDescent_fu_914_data_ce0;
reg   [1:0] i_0_i_i_reg_613;
wire    ap_CS_fsm_state4;
reg   [8:0] phi_mul_reg_624;
reg   [6:0] j_0_i_i_reg_636;
wire   [0:0] tmp_52_i_fu_1079_p2;
reg   [16:0] n_i_reg_647;
wire   [0:0] exitcond7_i_fu_1105_p2;
reg   [8:0] n1_i_reg_658;
wire   [0:0] exitcond6_i_fu_1122_p2;
reg   [30:0] p_y_assign_reg_669;
reg   [30:0] p_x_assign_reg_682;
reg  signed [31:0] sx1_i_reg_695;
reg  signed [31:0] sy1_i_reg_705;
reg   [1:0] k_i_reg_715;
reg   [31:0] x_i_reg_726;
reg   [31:0] y_i_reg_736;
reg   [31:0] r1_i_reg_746;
reg   [30:0] i2_i_reg_756;
wire    ap_CS_fsm_state59;
reg   [31:0] phi_mul1_reg_767;
reg   [30:0] ap_phi_mux_j3_i_phi_fu_783_p4;
wire    ap_block_pp2_stage0;
reg   [30:0] i5_i_reg_790;
wire    ap_CS_fsm_state82;
wire   [0:0] tmp_146_i_fu_2373_p2;
reg   [30:0] j7_i_reg_801;
wire    ap_CS_fsm_state65;
wire   [0:0] tmp_96_i_fu_1858_p2;
reg   [30:0] ap_phi_mux_j8_i_phi_fu_816_p4;
wire    ap_block_pp4_stage0;
wire   [31:0] ap_phi_reg_pp4_iter0_p_max_r_1_i_reg_844;
reg   [31:0] ap_phi_reg_pp4_iter1_p_max_r_1_i_reg_844;
reg   [31:0] ap_phi_reg_pp4_iter2_p_max_r_1_i_reg_844;
reg   [31:0] ap_phi_reg_pp4_iter3_p_max_r_1_i_reg_844;
wire   [31:0] ap_phi_reg_pp4_iter0_p_min_r_1_i_reg_856;
reg   [31:0] ap_phi_reg_pp4_iter1_p_min_r_1_i_reg_856;
reg   [31:0] ap_phi_reg_pp4_iter2_p_min_r_1_i_reg_856;
reg   [31:0] ap_phi_reg_pp4_iter3_p_min_r_1_i_reg_856;
reg  signed [31:0] r0_i_reg_868;
reg  signed [31:0] c_i_reg_879;
reg  signed [31:0] r0_reg_889;
reg   [31:0] total_3_i_reg_900;
wire    ap_block_pp4_stage1;
reg    grp_HoughSortDescent_fu_914_ap_start_reg;
wire   [63:0] tmp_16_cast_fu_1100_p1;
wire   [63:0] tmp_53_i_fu_1117_p1;
wire   [63:0] tmp_56_i_fu_1134_p1;
wire   [63:0] tmp_21_cast_fu_1230_p1;
wire  signed [63:0] tmp_i12_i_fu_1343_p1;
wire   [63:0] tmp_140_i_fu_1439_p1;
wire  signed [63:0] tmp_72_i_fu_1565_p1;
wire  signed [63:0] tmp_84_i_fu_1575_p1;
wire    ap_block_pp2_stage1;
wire  signed [63:0] tmp_88_i_fu_1584_p1;
wire    ap_block_pp2_stage2;
wire  signed [63:0] tmp_101_i_fu_1594_p1;
wire  signed [63:0] tmp_112_i_fu_1604_p1;
wire  signed [63:0] tmp_i13_i_fu_1620_p1;
wire   [0:0] tmp_113_i_fu_1609_p2;
wire   [63:0] tmp_74_i_fu_1658_p1;
wire   [63:0] tmp_911_i_fu_1798_p1;
wire  signed [63:0] tmp_26_cast_fu_1813_p1;
wire   [63:0] tmp_104_i_fu_1873_p1;
wire   [63:0] tmp_116_i_fu_1978_p1;
wire  signed [63:0] tmp_109_i_fu_1990_p1;
wire  signed [63:0] tmp_134_i_fu_2001_p1;
wire   [63:0] tmp_171_i_i_i_fu_2081_p1;
wire  signed [63:0] tmp_143_i_fu_2333_p1;
wire  signed [63:0] tmp_31_cast_fu_2348_p1;
wire  signed [63:0] tmp_32_cast_fu_2368_p1;
reg   [31:0] pt_buf_length_i_fu_256;
wire   [31:0] pt_buf_length_fu_1337_p2;
reg   [31:0] centers_length_i_fu_260;
wire   [31:0] centers_length_fu_1614_p2;
reg   [31:0] total_1_fu_264;
wire   [15:0] tmp_142_i_fu_2328_p2;
wire   [15:0] tmp_144_i_fu_2353_p2;
wire    ap_CS_fsm_state83;
wire   [15:0] tmp_75_fu_2382_p1;
wire   [31:0] tmp_141_i_fu_1443_p2;
wire   [31:0] tmp_117_i_fu_1983_p2;
wire   [31:0] tmp_129_i_fu_921_p2;
wire   [0:0] tmp_i_i_fu_950_p2;
wire   [31:0] max_r0_fu_956_p3;
wire   [0:0] tmp_i_fu_964_p2;
wire   [0:0] tmp_i_239_fu_970_p2;
wire   [0:0] or_cond_i_fu_976_p2;
wire   [30:0] tmp_47_fu_982_p1;
wire   [30:0] temp_fu_986_p3;
wire   [0:0] tmp_47_i_fu_998_p2;
wire   [0:0] tmp_48_i_fu_1004_p2;
wire   [0:0] or_cond8_i_fu_1010_p2;
wire   [31:0] min_radius_assign_3_fu_1016_p3;
wire   [31:0] max_radius_assign_ca_fu_994_p1;
wire   [0:0] tmp_49_i_fu_1028_p2;
wire   [30:0] tmp_48_fu_1024_p1;
wire   [2:0] i_0_i_cast_cast_i_fu_1060_p1;
wire   [7:0] j_0_i_cast_cast_i_fu_1075_p1;
wire   [8:0] tmp_54_i_cast_fu_1090_p1;
wire   [8:0] tmp_16_fu_1094_p2;
wire   [31:0] p_y_assign_cast_i_fu_1144_p1;
wire   [9:0] tmp_49_fu_1159_p1;
wire   [11:0] tmp_50_fu_1171_p1;
wire   [17:0] p_shl_cast_fu_1163_p3;
wire   [17:0] p_shl1_cast_fu_1175_p3;
wire   [15:0] tmp_51_fu_1189_p1;
wire   [31:0] p_x_assign_cast_i_fu_1206_p1;
wire   [17:0] tmp_52_fu_1221_p1;
wire   [17:0] tmp_21_fu_1225_p2;
wire  signed [15:0] vx_fu_1237_p0;
wire  signed [15:0] vy_fu_1241_p0;
wire  signed [15:0] tmp_67_i_fu_1251_p0;
wire  signed [15:0] tmp_67_i_fu_1251_p1;
wire   [15:0] tmp_67_i_fu_1251_p2;
wire   [31:0] grp_fu_1274_p0;
wire   [16:0] grp_fu_1274_p1;
wire   [31:0] grp_fu_1287_p0;
wire   [16:0] grp_fu_1287_p1;
wire   [15:0] tmp_55_fu_1293_p1;
wire   [31:0] tmp_98_i_fu_1317_p2;
wire   [31:0] tmp_99_i_fu_1327_p2;
wire  signed [31:0] pt_buf_length_fu_1337_p0;
wire  signed [31:0] tmp_i12_i_fu_1343_p0;
wire  signed [15:0] tmp_123_i_fu_1369_p4;
wire   [15:0] tmp_121_i_fu_1359_p4;
wire   [0:0] tmp_64_fu_1383_p3;
wire   [0:0] tmp_125_i_fu_1391_p2;
wire   [0:0] tmp_65_fu_1397_p3;
wire   [0:0] tmp_127_i_fu_1405_p2;
wire   [0:0] tmp4_fu_1417_p2;
wire   [0:0] tmp_fu_1411_p2;
wire   [15:0] tmp_139_i_fu_1429_p2;
wire  signed [16:0] grp_fu_2401_p3;
wire   [31:0] i2_cast_i_fu_1486_p1;
wire   [30:0] tmp_53_fu_1501_p4;
wire   [0:0] icmp_fu_1510_p2;
wire   [30:0] tmp_54_fu_1516_p1;
wire   [31:0] j3_cast_i_fu_1532_p1;
wire   [31:0] tmp5_fu_1547_p2;
wire   [31:0] tmp_87_i_fu_1579_p2;
wire   [31:0] tmp_100_i_fu_1589_p2;
wire   [31:0] tmp_111_i_fu_1599_p2;
wire  signed [31:0] centers_length_fu_1614_p0;
wire  signed [31:0] tmp_i13_i_fu_1620_p0;
wire   [30:0] min_dist2_fu_1633_p0;
wire   [31:0] tmp_i15_cast_i_fu_1630_p1;
wire   [30:0] min_dist2_fu_1633_p1;
wire   [31:0] i5_cast_i_fu_1642_p1;
wire  signed [31:0] tmp_56_fu_1663_p1;
wire  signed [31:0] tmp_61_fu_1671_p0;
wire  signed [31:0] mul_fu_1678_p1;
wire   [64:0] mul_fu_1678_p2;
wire   [64:0] neg_mul_fu_1684_p2;
wire   [23:0] tmp_57_fu_1690_p4;
wire   [23:0] tmp_58_fu_1704_p4;
wire  signed [31:0] tmp_23_fu_1700_p1;
wire  signed [31:0] tmp_24_fu_1714_p1;
wire   [31:0] tmp_25_fu_1718_p3;
wire   [31:0] neg_ti_fu_1725_p2;
wire  signed [31:0] tmp_75_i_fu_1731_p3;
wire  signed [25:0] tmp_76_i_fu_1742_p1;
wire   [31:0] tmp_76_i_fu_1742_p2;
wire   [31:0] tmp6_fu_1748_p2;
wire   [23:0] tmp_59_fu_1738_p1;
wire   [31:0] j7_cast_i_fu_1777_p1;
wire   [31:0] j_2_fu_1792_p2;
wire   [9:0] tmp_63_fu_1803_p1;
wire   [9:0] tmp_26_fu_1807_p2;
wire   [31:0] cx_fu_1818_p1;
wire  signed [31:0] tmp_92_i_fu_1826_p2;
wire   [23:0] cy_cast_i_fu_1822_p1;
wire   [23:0] tmp_94_i_fu_1837_p2;
wire  signed [23:0] tmp_95_i_fu_1846_p0;
wire  signed [31:0] tmp_94_cast_i_fu_1842_p1;
wire  signed [23:0] tmp_95_i_fu_1846_p1;
wire   [31:0] tmp_93_i_fu_1831_p2;
wire   [31:0] tmp_95_i_fu_1846_p2;
wire   [31:0] dist2_fu_1852_p2;
wire   [31:0] j8_cast_i_fu_1863_p1;
wire   [31:0] extLd30_i_fu_1885_p1;
wire   [31:0] extLd34_i_fu_1889_p1;
wire  signed [31:0] p_dx_fu_1893_p2;
wire   [31:0] tmp_106_i_fu_1909_p2;
wire   [31:0] p_Val2_20_fu_1922_p1;
wire   [30:0] p_Val2_23_cast_fu_1926_p1;
wire   [0:0] tmp_107_i_fu_1930_p2;
wire   [0:0] tmp_108_i_fu_1935_p2;
wire   [0:0] tmp_114_i_fu_1946_p2;
wire   [30:0] tmp_66_fu_1918_p1;
wire   [30:0] p_max_r_1_fu_1952_p3;
wire   [0:0] tmp_115_i_fu_1964_p2;
wire  signed [31:0] tmp_135_i_fu_2012_p0;
wire   [31:0] tmp_135_i_fu_2012_p2;
wire   [0:0] tmp_137_i_fu_2018_p2;
wire  signed [31:0] c_0_c0_i_fu_2031_p1;
wire   [10:0] loc_V_fu_2049_p4;
wire   [5:0] index_V_fu_2071_p4;
wire   [0:0] p_Result_s_fu_2087_p3;
wire   [63:0] one_half_i_i_cast_i_fu_2102_p1;
wire   [63:0] p_Val2_s_fu_2106_p2;
wire   [51:0] loc_V_1_fu_2111_p1;
wire   [51:0] tmp_173_i_i_i_fu_2115_p2;
wire   [11:0] tmp_5_fu_2127_p4;
wire   [51:0] xs_sig_V_fu_2121_p2;
wire   [63:0] p_Result_13_fu_2094_p3;
wire   [63:0] p_Result_14_fu_2137_p3;
wire   [63:0] sel_tmp_v_fu_2145_p3;
wire   [0:0] sel_tmp1_fu_2156_p2;
wire   [0:0] sel_tmp2_fu_2161_p2;
wire   [63:0] sel_tmp_fu_2152_p1;
wire   [63:0] x_assign_4_fu_2166_p3;
wire   [63:0] p_Val2_15_fu_2173_p1;
wire   [51:0] loc_V_3_fu_2195_p1;
wire   [53:0] tmp_i_i_i_i_fu_2199_p4;
wire   [10:0] loc_V_2_fu_2185_p4;
wire   [11:0] tmp_i_i_i_i_cast_i_fu_2213_p1;
wire   [11:0] sh_assign_fu_2217_p2;
wire   [10:0] tmp_176_i_i_i_i_fu_2231_p2;
wire   [0:0] isNeg_fu_2223_p3;
wire  signed [11:0] tmp_176_i_i_i_cast_i_fu_2237_p1;
wire   [11:0] sh_assign_1_fu_2241_p3;
wire  signed [31:0] sh_assign_1_i_i_i_ca_fu_2249_p1;
wire   [53:0] tmp_177_i_i_i_cast_i_fu_2257_p1;
wire   [136:0] tmp_i_i_i_cast_i_fu_2209_p1;
wire   [136:0] tmp_177_i_i_i_i_fu_2253_p1;
wire   [53:0] tmp_178_i_i_i_i_fu_2261_p2;
wire   [0:0] tmp_72_fu_2273_p3;
wire   [136:0] tmp_179_i_i_i_i_fu_2267_p2;
wire   [31:0] tmp_s_fu_2281_p1;
wire   [31:0] tmp_28_fu_2285_p4;
wire   [31:0] p_Val2_8_fu_2295_p3;
wire   [0:0] p_Result_15_fu_2177_p3;
wire   [31:0] p_Val2_i_i_i_i_fu_2303_p2;
wire   [31:0] p_Val2_21_fu_2309_p3;
wire   [9:0] tmp_29_fu_2342_p2;
wire   [9:0] tmp_30_fu_2363_p2;
wire  signed [15:0] grp_fu_2387_p0;
wire  signed [31:0] vx_fu_1237_p1;
wire  signed [15:0] grp_fu_2387_p1;
wire  signed [31:0] tmp_80_i_fu_2394_p2;
wire  signed [15:0] tmp_80_i_fu_2394_p0;
wire  signed [31:0] vy_fu_1241_p1;
wire  signed [15:0] tmp_80_i_fu_2394_p1;
wire   [9:0] grp_fu_2401_p1;
wire   [15:0] grp_fu_2401_p2;
reg    grp_fu_1274_ap_start;
wire    grp_fu_1274_ap_done;
reg    grp_fu_1287_ap_start;
wire    grp_fu_1287_ap_done;
reg   [74:0] ap_NS_fsm;
wire    ap_block_pp2_stage1_subdone;
wire    ap_block_pp4_stage0_subdone;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp4;
wire    ap_enable_pp4;
wire   [16:0] grp_fu_2401_p20;
reg    ap_condition_1000;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 75'd1;
#0 ap_enable_reg_pp4_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp4_iter3 = 1'b0;
#0 grp_HoughSortDescent_fu_914_ap_start_reg = 1'b0;
end

HoughCircles_masksc4 #(
    .DataWidth( 52 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
mask_table1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mask_table1_address0),
    .ce0(mask_table1_ce0),
    .q0(mask_table1_q0)
);

HoughCircles_one_tde #(
    .DataWidth( 53 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
one_half_table2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(one_half_table2_address0),
    .ce0(one_half_table2_ce0),
    .q0(one_half_table2_q0)
);

HoughCircles_accum #(
    .DataWidth( 32 ),
    .AddressRange( 77924 ),
    .AddressWidth( 17 ))
accum_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(accum_address0),
    .ce0(accum_ce0),
    .we0(accum_we0),
    .d0(accum_d0),
    .q0(accum_q0),
    .address1(accum_address1),
    .ce1(accum_ce1),
    .q1(accum_q1)
);

HoughCircles_distudo #(
    .DataWidth( 32 ),
    .AddressRange( 321 ),
    .AddressWidth( 9 ))
dist_accum_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dist_accum_address0),
    .ce0(dist_accum_ce0),
    .we0(dist_accum_we0),
    .d0(dist_accum_d0),
    .q0(dist_accum_q0)
);

HoughCircles_pt_bvdy #(
    .DataWidth( 31 ),
    .AddressRange( 76800 ),
    .AddressWidth( 17 ))
pt_buf_val_x_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(pt_buf_val_x_address0),
    .ce0(pt_buf_val_x_ce0),
    .we0(pt_buf_val_x_we0),
    .d0(p_x_assign_reg_682),
    .q0(pt_buf_val_x_q0)
);

HoughCircles_pt_bvdy #(
    .DataWidth( 31 ),
    .AddressRange( 76800 ),
    .AddressWidth( 17 ))
pt_buf_val_y_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(pt_buf_val_y_address0),
    .ce0(pt_buf_val_y_ce0),
    .we0(pt_buf_val_y_we0),
    .d0(p_y_assign_reg_669),
    .q0(pt_buf_val_y_q0)
);

HoughCircles_centxdS #(
    .DataWidth( 32 ),
    .AddressRange( 77924 ),
    .AddressWidth( 17 ))
centers_val_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(centers_val_address0),
    .ce0(centers_val_ce0),
    .we0(centers_val_we0),
    .d0(centers_val_d0),
    .q0(centers_val_q0)
);

sqrt_fixed_32_32_s grp_sqrt_fixed_32_32_s_fu_909(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .x_V(grp_sqrt_fixed_32_32_s_fu_909_x_V),
    .ap_return(grp_sqrt_fixed_32_32_s_fu_909_ap_return),
    .ap_ce(grp_sqrt_fixed_32_32_s_fu_909_ap_ce)
);

HoughSortDescent grp_HoughSortDescent_fu_914(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_HoughSortDescent_fu_914_ap_start),
    .ap_done(grp_HoughSortDescent_fu_914_ap_done),
    .ap_idle(grp_HoughSortDescent_fu_914_ap_idle),
    .ap_ready(grp_HoughSortDescent_fu_914_ap_ready),
    .sequence_address0(grp_HoughSortDescent_fu_914_sequence_address0),
    .sequence_ce0(grp_HoughSortDescent_fu_914_sequence_ce0),
    .sequence_we0(grp_HoughSortDescent_fu_914_sequence_we0),
    .sequence_d0(grp_HoughSortDescent_fu_914_sequence_d0),
    .sequence_q0(centers_val_q0),
    .num(centers_length_i_fu_260),
    .data_address0(grp_HoughSortDescent_fu_914_data_address0),
    .data_ce0(grp_HoughSortDescent_fu_914_data_ce0),
    .data_q0(accum_q0)
);

HoughCircles_Coreyd2 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
HoughCircles_Coreyd2_U171(
    .din0(tmp_128_i_reg_2957),
    .din1(32'd1078530010),
    .dout(tmp_129_i_fu_921_p2)
);

HoughCircles_Corezec #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
HoughCircles_Corezec_U172(
    .din0(r0_i_reg_868),
    .dout(tmp_128_i_fu_926_p1)
);

HoughCircles_CoreAem #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
HoughCircles_CoreAem_U173(
    .din0(tmp_129_i_fu_921_p2),
    .dout(x_assign_3_fu_930_p1)
);

HoughCircles_CoreBew #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 32 ))
HoughCircles_CoreBew_U174(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_1274_ap_start),
    .done(grp_fu_1274_ap_done),
    .din0(grp_fu_1274_p0),
    .din1(grp_fu_1274_p1),
    .ce(1'b1),
    .dout(grp_fu_1274_p2)
);

HoughCircles_CoreBew #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 32 ))
HoughCircles_CoreBew_U175(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_1287_ap_start),
    .done(grp_fu_1287_ap_done),
    .din0(grp_fu_1287_p0),
    .din1(grp_fu_1287_p1),
    .ce(1'b1),
    .dout(grp_fu_1287_p2)
);

HoughCircles_Coremb6 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
HoughCircles_Coremb6_U176(
    .din0(grp_fu_2387_p0),
    .din1(grp_fu_2387_p1),
    .din2(tmp_80_i_fu_2394_p2),
    .dout(grp_fu_2387_p3)
);

HoughCircles_CorelbW #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
HoughCircles_CorelbW_U177(
    .din0(tmp_80_i_fu_2394_p0),
    .din1(tmp_80_i_fu_2394_p1),
    .dout(tmp_80_i_fu_2394_p2)
);

HoughCircles_CoreCeG #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
HoughCircles_CoreCeG_U178(
    .din0(tmp_123_i_fu_1369_p4),
    .din1(grp_fu_2401_p1),
    .din2(grp_fu_2401_p2),
    .dout(grp_fu_2401_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state83)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state53) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((tmp_59_i_fu_1490_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state52))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage2_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state53) & (1'b1 == ap_CS_fsm_pp2_stage2))) begin
            ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state53);
        end else if (((1'b0 == ap_block_pp2_stage2_subdone) & (1'b1 == ap_CS_fsm_pp2_stage2))) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if (((tmp_59_i_fu_1490_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state52))) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage1_subdone) & (tmp_97_i_reg_2865 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state67)) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage1_subdone) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
            ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage1_subdone) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
            ap_enable_reg_pp4_iter2 <= ap_enable_reg_pp4_iter1;
        end else if (((1'b1 == ap_CS_fsm_state67) | ((1'b0 == ap_block_pp4_stage1_subdone) & (1'b1 == ap_condition_pp4_exit_iter2_state73) & (1'b1 == ap_CS_fsm_pp4_stage1)))) begin
            ap_enable_reg_pp4_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage1_subdone) & (1'b1 == ap_condition_pp4_exit_iter2_state73) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
            ap_enable_reg_pp4_iter3 <= ap_enable_reg_pp4_iter1;
        end else if (((1'b0 == ap_block_pp4_stage1_subdone) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
            ap_enable_reg_pp4_iter3 <= ap_enable_reg_pp4_iter2;
        end else if ((1'b1 == ap_CS_fsm_state67)) begin
            ap_enable_reg_pp4_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_HoughSortDescent_fu_914_ap_start_reg <= 1'b0;
    end else begin
        if (((tmp_59_i_fu_1490_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state52))) begin
            grp_HoughSortDescent_fu_914_ap_start_reg <= 1'b1;
        end else if ((grp_HoughSortDescent_fu_914_ap_ready == 1'b1)) begin
            grp_HoughSortDescent_fu_914_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1000)) begin
        if (((or_cond4_i_fu_1940_p2 == 1'd1) & (tmp_97_i_reg_2865_pp4_iter2_reg == 1'd1))) begin
            ap_phi_reg_pp4_iter3_p_max_r_1_i_reg_844 <= p_max_r1_i_reg_824;
        end else if (((or_cond4_i_fu_1940_p2 == 1'd0) & (tmp_97_i_reg_2865_pp4_iter2_reg == 1'd1))) begin
            ap_phi_reg_pp4_iter3_p_max_r_1_i_reg_844 <= p_max_r_1_cast_fu_1960_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp4_iter3_p_max_r_1_i_reg_844 <= ap_phi_reg_pp4_iter2_p_max_r_1_i_reg_844;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1000)) begin
        if (((or_cond4_i_fu_1940_p2 == 1'd1) & (tmp_97_i_reg_2865_pp4_iter2_reg == 1'd1))) begin
            ap_phi_reg_pp4_iter3_p_min_r_1_i_reg_856 <= r0_2_reg_834;
        end else if (((or_cond4_i_fu_1940_p2 == 1'd0) & (tmp_97_i_reg_2865_pp4_iter2_reg == 1'd1))) begin
            ap_phi_reg_pp4_iter3_p_min_r_1_i_reg_856 <= p_min_r_fu_1970_p3;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp4_iter3_p_min_r_1_i_reg_856 <= ap_phi_reg_pp4_iter2_p_min_r_1_i_reg_856;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        c_i_reg_879 <= c_0_c0_i_fu_2031_p3;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        c_i_reg_879 <= dist_accum_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage2_11001) & (tmp_102_i_reg_2763 == 1'd1) & (tmp_89_i_reg_2754 == 1'd1) & (tmp_85_i_reg_2745 == 1'd1) & (tmp_73_i_reg_2736_pp2_iter1_reg == 1'd1) & (tmp_113_i_fu_1609_p2 == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage2))) begin
        centers_length_i_fu_260 <= centers_length_fu_1614_p2;
    end else if (((tmp_55_i_fu_1148_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        centers_length_i_fu_260 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        i2_i_reg_756 <= i_2_reg_2681;
    end else if (((tmp_55_i_fu_1148_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        i2_i_reg_756 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state82) & ((tmp_146_i_fu_2373_p2 == 1'd0) | (tmp_132_i_reg_2994 == 1'd0) | (tmp_86_i_reg_2843 == 1'd1)))) begin
        i5_i_reg_790 <= i_3_reg_2790;
    end else if (((grp_HoughSortDescent_fu_914_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state60))) begin
        i5_i_reg_790 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        i_0_i_i_reg_613 <= i_reg_2477;
    end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0) | (circles_cols_out_full_n == 1'b0) | (circles_rows_out_full_n == 1'b0) | (max_radius_empty_n == 1'b0) | (min_radius_empty_n == 1'b0) | (min_dist_empty_n == 1'b0) | (1'b0 == acc_threshold_empty_n) | (circles_cols_empty_n == 1'b0) | (circles_rows_empty_n == 1'b0) | (edge_cols_empty_n == 1'b0) | (edge_rows_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_i_i_reg_613 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_59_i_fu_1490_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state52))) begin
        j3_i_reg_779 <= 31'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (tmp_65_i_reg_2703 == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        j3_i_reg_779 <= j_3_reg_2707;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_96_i_fu_1858_p2 == 1'd1) & (tmp_86_i_reg_2843 == 1'd1) & (1'b1 == ap_CS_fsm_state65))) begin
        j7_i_reg_801 <= j_5_cast_i_reg_2847;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        j7_i_reg_801 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        j8_i_reg_812 <= 31'd0;
    end else if (((tmp_97_i_reg_2865 == 1'd1) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        j8_i_reg_812 <= j_4_reg_2879;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_50_i_fu_1064_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        j_0_i_i_reg_636 <= 7'd0;
    end else if (((tmp_52_i_fu_1079_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        j_0_i_i_reg_636 <= j_fu_1084_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        k_i_reg_715 <= k_reg_2619;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        k_i_reg_715 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond7_i_fu_1105_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        n1_i_reg_658 <= 9'd0;
    end else if (((exitcond6_i_fu_1122_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        n1_i_reg_658 <= n_1_fu_1128_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_50_i_fu_1064_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        n_i_reg_647 <= 17'd0;
    end else if (((exitcond7_i_fu_1105_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        n_i_reg_647 <= n_fu_1111_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        p_max_r1_i_reg_824 <= p_max_r_cast_i_reg_2453;
    end else if (((tmp_97_i_reg_2865_pp4_iter2_reg == 1'd1) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        p_max_r1_i_reg_824 <= ap_phi_reg_pp4_iter3_p_max_r_1_i_reg_844;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state48) & ((exitcond_i_fu_1305_p2 == 1'd1) | (tmp_68_i_reg_2575 == 1'd1) | (tmp_64_i_reg_2571 == 1'd1)))) begin
        p_x_assign_reg_682 <= j_1_reg_2541;
    end else if (((tmp_55_i_fu_1148_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        p_x_assign_reg_682 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_60_i_fu_1210_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        p_y_assign_reg_669 <= i_1_reg_2516;
    end else if (((exitcond6_i_fu_1122_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        p_y_assign_reg_669 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        phi_mul1_reg_767 <= next_mul1_reg_2672;
    end else if (((tmp_55_i_fu_1148_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_mul1_reg_767 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        phi_mul_reg_624 <= next_mul_reg_2468;
    end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0) | (circles_cols_out_full_n == 1'b0) | (circles_rows_out_full_n == 1'b0) | (max_radius_empty_n == 1'b0) | (min_radius_empty_n == 1'b0) | (min_dist_empty_n == 1'b0) | (1'b0 == acc_threshold_empty_n) | (circles_cols_empty_n == 1'b0) | (circles_rows_empty_n == 1'b0) | (edge_cols_empty_n == 1'b0) | (edge_rows_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        phi_mul_reg_624 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_68_i_reg_2575 == 1'd0) & (tmp_64_i_reg_2571 == 1'd0) & (exitcond_i_fu_1305_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state48))) begin
        pt_buf_length_i_fu_256 <= pt_buf_length_fu_1337_p2;
    end else if (((exitcond6_i_fu_1122_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        pt_buf_length_i_fu_256 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        r0_2_reg_834 <= p_min_r_2_reg_2459;
    end else if (((tmp_97_i_reg_2865_pp4_iter2_reg == 1'd1) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        r0_2_reg_834 <= ap_phi_reg_pp4_iter3_p_min_r_1_i_reg_856;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        r0_i_reg_868 <= r10_0_r0_i_fu_2023_p3;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        r0_i_reg_868 <= r0_2_reg_834;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        r0_reg_889 <= r_3_fu_2039_p2;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        r0_reg_889 <= r0_2_reg_834;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond3_i_reg_2638 == 1'd0) & (tmp_110_i_reg_2634 == 1'd0) & (1'b1 == ap_CS_fsm_state50))) begin
        r1_i_reg_746 <= r_2_fu_1462_p2;
    end else if (((exitcond_i_fu_1305_p2 == 1'd0) & (tmp_68_i_reg_2575 == 1'd0) & (tmp_64_i_reg_2571 == 1'd0) & (1'b1 == ap_CS_fsm_state48))) begin
        r1_i_reg_746 <= p_min_r_2_reg_2459;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        sx1_i_reg_695 <= sx_1_fu_1468_p2;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        sx1_i_reg_695 <= grp_fu_1274_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        sy1_i_reg_705 <= sy_1_fu_1474_p2;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        sy1_i_reg_705 <= grp_fu_1287_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_146_i_fu_2373_p2 == 1'd0) & (tmp_86_i_reg_2843 == 1'd0) & (tmp_132_i_reg_2994 == 1'd1) & (1'b1 == ap_CS_fsm_state82))) begin
        total_1_fu_264 <= total_reg_2998;
    end else if (((tmp_59_i_fu_1490_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state52))) begin
        total_1_fu_264 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_86_i_reg_2843 == 1'd0) & (tmp_146_i_fu_2373_p2 == 1'd1) & (tmp_132_i_reg_2994 == 1'd1) & (1'b1 == ap_CS_fsm_state82))) begin
        total_3_i_reg_900 <= total_reg_2998;
    end else if (((tmp_66_i_fu_1646_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state61))) begin
        total_3_i_reg_900 <= total_1_fu_264;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond3_i_reg_2638 == 1'd0) & (tmp_110_i_reg_2634 == 1'd0) & (1'b1 == ap_CS_fsm_state50))) begin
        x_i_reg_726 <= x1_1_fu_1450_p2;
    end else if (((exitcond_i_fu_1305_p2 == 1'd0) & (tmp_68_i_reg_2575 == 1'd0) & (tmp_64_i_reg_2571 == 1'd0) & (1'b1 == ap_CS_fsm_state48))) begin
        x_i_reg_726 <= x1_fu_1322_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond3_i_reg_2638 == 1'd0) & (tmp_110_i_reg_2634 == 1'd0) & (1'b1 == ap_CS_fsm_state50))) begin
        y_i_reg_736 <= y1_1_fu_1456_p2;
    end else if (((exitcond_i_fu_1305_p2 == 1'd0) & (tmp_68_i_reg_2575 == 1'd0) & (tmp_64_i_reg_2571 == 1'd0) & (1'b1 == ap_CS_fsm_state48))) begin
        y_i_reg_736 <= y1_fu_1332_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0) | (circles_cols_out_full_n == 1'b0) | (circles_rows_out_full_n == 1'b0) | (max_radius_empty_n == 1'b0) | (min_radius_empty_n == 1'b0) | (min_dist_empty_n == 1'b0) | (1'b0 == acc_threshold_empty_n) | (circles_cols_empty_n == 1'b0) | (circles_rows_empty_n == 1'b0) | (edge_cols_empty_n == 1'b0) | (edge_rows_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        acc_threshold_read_reg_2425 <= acc_threshold_dout;
        circles_cols_read_reg_2420 <= circles_cols_dout;
        circles_rows_read_reg_2415 <= circles_rows_dout;
        cols_reg_2442 <= edge_cols_dout;
        min_dist_read_reg_2430 <= min_dist_dout;
        p_max_r_cast_i_reg_2453[30 : 0] <= p_max_r_cast_i_fu_1042_p1[30 : 0];
        p_max_r_reg_2448 <= p_max_r_fu_1034_p3;
        p_min_r_2_reg_2459 <= p_min_r_2_fu_1046_p3;
        rows_reg_2436 <= edge_rows_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond3_i_fu_1423_p2 == 1'd0) & (tmp_110_i_fu_1354_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state49))) begin
        accum_addr_6_reg_2642 <= tmp_140_i_fu_1439_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        ap_phi_reg_pp4_iter1_p_max_r_1_i_reg_844 <= ap_phi_reg_pp4_iter0_p_max_r_1_i_reg_844;
        ap_phi_reg_pp4_iter1_p_min_r_1_i_reg_856 <= ap_phi_reg_pp4_iter0_p_min_r_1_i_reg_856;
        j_4_reg_2879 <= j_4_fu_1879_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        ap_phi_reg_pp4_iter2_p_max_r_1_i_reg_844 <= ap_phi_reg_pp4_iter1_p_max_r_1_i_reg_844;
        ap_phi_reg_pp4_iter2_p_min_r_1_i_reg_856 <= ap_phi_reg_pp4_iter1_p_min_r_1_i_reg_856;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        base_1_reg_2800 <= centers_val_q0;
        tmp_56_reg_2806 <= tmp_56_fu_1663_p1[32'd31];
        tmp_61_reg_2812 <= tmp_61_fu_1671_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (tmp_65_i_fu_1536_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        base_reg_2720 <= base_fu_1559_p2;
        tmp_71_i_reg_2712 <= tmp_71_i_fu_1553_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        base_reg_2720_pp2_iter1_reg <= base_reg_2720;
        tmp_65_i_reg_2703 <= tmp_65_i_fu_1536_p2;
        tmp_71_i_reg_2712_pp2_iter1_reg <= tmp_71_i_reg_2712;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        cx0_reg_2822 <= cx0_fu_1758_p2;
        cy0_cast_i_reg_2838 <= cy0_cast_i_fu_1773_p1;
        cy0_reg_2833 <= cy0_fu_1767_p2;
        tmp_60_reg_2817 <= tmp_60_fu_1754_p1;
        tmp_62_reg_2828 <= tmp_62_fu_1763_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_97_i_reg_2865 == 1'd1) & (1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        dist2_2_reg_2895 <= dist2_2_fu_1913_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (or_cond4_i_fu_1940_p2 == 1'd0) & (tmp_97_i_reg_2865_pp4_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        dist_accum_addr_2_reg_2914 <= tmp_116_i_fu_1978_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_118_i_fu_1995_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state77))) begin
        dist_accum_addr_3_reg_2932 <= tmp_134_i_fu_2001_p1;
        tmp_136_i_reg_2937 <= tmp_136_i_fu_2006_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        dx_val_load_reg_2561 <= dx_val_q0;
        dy_val_load_reg_2566 <= dy_val_q0;
        tmp_64_i_reg_2571 <= tmp_64_i_fu_1245_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        i_1_reg_2516 <= i_1_fu_1153_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        i_2_reg_2681 <= i_2_fu_1495_p2;
        next_mul1_reg_2672 <= next_mul1_fu_1480_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        i_3_reg_2790 <= i_3_fu_1652_p2;
        total_1_load_reg_2780 <= total_1_fu_264;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_reg_2477 <= i_fu_1069_p2;
        next_mul_reg_2468 <= next_mul_fu_1054_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        j_1_reg_2541 <= j_1_fu_1215_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        j_3_reg_2707 <= j_3_fu_1541_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        j_5_cast_i_reg_2847 <= j_5_cast_i_fu_1786_p2;
        tmp_86_i_reg_2843 <= tmp_86_i_fu_1781_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_68_i_reg_2575 == 1'd0) & (tmp_64_i_reg_2571 == 1'd0) & (1'b1 == ap_CS_fsm_state48))) begin
        k_reg_2619 <= k_fu_1311_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_HoughSortDescent_fu_914_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state60))) begin
        min_dist2_reg_2775 <= min_dist2_fu_1633_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_59_i_fu_1490_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state52))) begin
        min_dist_assign_reg_2698 <= min_dist_assign_fu_1519_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_110_i_fu_1354_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state49))) begin
        or_cond3_i_reg_2638 <= or_cond3_i_fu_1423_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (tmp_97_i_reg_2865_pp4_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        or_cond4_i_reg_2900 <= or_cond4_i_fu_1940_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage1_11001) & (tmp_97_i_reg_2865 == 1'd1) & (1'b1 == ap_CS_fsm_pp4_stage1))) begin
        p_dy_reg_2884 <= p_dy_fu_1898_p2;
        tmp_105_i_reg_2890 <= tmp_105_i_fu_1903_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((tmp_97_i_reg_2865_pp4_iter1_reg == 1'd1) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)))) begin
        reg_946 <= grp_sqrt_fixed_32_32_s_fu_909_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        t_V_2_reg_2967 <= t_V_2_fu_2045_p1;
        tmp_170_i_i_i_reg_2979 <= tmp_170_i_i_i_fu_2065_p2;
        tmp_i_i_i_reg_2973 <= tmp_i_i_i_fu_2059_p2;
        x_assign_3_reg_2962 <= x_assign_3_fu_930_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage1_11001) & (tmp_89_i_reg_2754 == 1'd1) & (tmp_85_i_reg_2745 == 1'd1) & (tmp_73_i_reg_2736 == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        tmp_102_i_reg_2763 <= grp_fu_941_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        tmp_110_i_reg_2634 <= tmp_110_i_fu_1354_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state79)) begin
        tmp_128_i_reg_2957 <= tmp_128_i_fu_926_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state81)) begin
        tmp_132_i_reg_2994 <= tmp_132_i_fu_2317_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_55_i_fu_1148_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        tmp_19_reg_2521[17 : 6] <= tmp_19_fu_1183_p2[17 : 6];
        y0_reg_2526[31 : 16] <= y0_fu_1193_p3[31 : 16];
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_64_i_fu_1245_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        tmp_68_i_reg_2575 <= tmp_68_i_fu_1257_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage1_11001) & (tmp_65_i_reg_2703 == 1'd1) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        tmp_73_i_reg_2736 <= tmp_73_i_fu_1570_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        tmp_73_i_reg_2736_pp2_iter1_reg <= tmp_73_i_reg_2736;
        value_reg_2730_pp2_iter1_reg <= value_reg_2730;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_132_i_fu_2317_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state81))) begin
        tmp_73_reg_3005 <= tmp_73_fu_2338_p1;
        tmp_74_reg_3010 <= tmp_74_fu_2359_p1;
        total_reg_2998 <= total_fu_2323_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage2_11001) & (tmp_73_i_reg_2736 == 1'd1) & (tmp_65_i_reg_2703 == 1'd1) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        tmp_85_i_reg_2745 <= grp_fu_941_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (tmp_85_i_reg_2745 == 1'd1) & (tmp_73_i_reg_2736 == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        tmp_89_i_reg_2754 <= grp_fu_941_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        tmp_97_i_reg_2865 <= tmp_97_i_fu_1867_p2;
        tmp_97_i_reg_2865_pp4_iter1_reg <= tmp_97_i_reg_2865;
        tmp_97_i_reg_2865_pp4_iter2_reg <= tmp_97_i_reg_2865_pp4_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage1_11001) & (tmp_65_i_reg_2703 == 1'd1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        value_reg_2730 <= accum_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        x0_reg_2610[31 : 16] <= x0_fu_1297_p3[31 : 16];
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_68_i_fu_1257_p2 == 1'd0) & (tmp_64_i_fu_1245_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        xf_V_reg_2579 <= grp_fu_2387_p3;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        acc_threshold_blk_n = acc_threshold_empty_n;
    end else begin
        acc_threshold_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0) | (circles_cols_out_full_n == 1'b0) | (circles_rows_out_full_n == 1'b0) | (max_radius_empty_n == 1'b0) | (min_radius_empty_n == 1'b0) | (min_dist_empty_n == 1'b0) | (1'b0 == acc_threshold_empty_n) | (circles_cols_empty_n == 1'b0) | (circles_rows_empty_n == 1'b0) | (edge_cols_empty_n == 1'b0) | (edge_rows_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        acc_threshold_read = 1'b1;
    end else begin
        acc_threshold_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1))) begin
        accum_address0 = tmp_112_i_fu_1604_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        accum_address0 = tmp_72_i_fu_1565_p1;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        accum_address0 = accum_addr_6_reg_2642;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        accum_address0 = tmp_140_i_fu_1439_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        accum_address0 = tmp_53_i_fu_1117_p1;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        accum_address0 = grp_HoughSortDescent_fu_914_data_address0;
    end else begin
        accum_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        accum_address1 = tmp_101_i_fu_1594_p1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage2))) begin
        accum_address1 = tmp_88_i_fu_1584_p1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage1))) begin
        accum_address1 = tmp_84_i_fu_1575_p1;
    end else begin
        accum_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state5) | ((1'b0 == ap_block_pp2_stage1_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
        accum_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        accum_ce0 = grp_HoughSortDescent_fu_914_data_ce0;
    end else begin
        accum_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage2_11001) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
        accum_ce1 = 1'b1;
    end else begin
        accum_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        accum_d0 = tmp_141_i_fu_1443_p2;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        accum_d0 = 32'd0;
    end else begin
        accum_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((or_cond3_i_reg_2638 == 1'd0) & (tmp_110_i_reg_2634 == 1'd0) & (1'b1 == ap_CS_fsm_state50)) | ((exitcond7_i_fu_1105_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        accum_we0 = 1'b1;
    end else begin
        accum_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((tmp_65_i_fu_1536_p2 == 1'd0)) begin
        ap_condition_pp2_exit_iter0_state53 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state53 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter2 == 1'b1))) begin
        ap_condition_pp4_exit_iter2_state73 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter2_state73 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state83)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter3 == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b0) & (ap_enable_reg_pp4_iter2 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (tmp_65_i_reg_2703 == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        ap_phi_mux_j3_i_phi_fu_783_p4 = j_3_reg_2707;
    end else begin
        ap_phi_mux_j3_i_phi_fu_783_p4 = j3_i_reg_779;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (tmp_97_i_reg_2865 == 1'd1) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        ap_phi_mux_j8_i_phi_fu_816_p4 = j_4_reg_2879;
    end else begin
        ap_phi_mux_j8_i_phi_fu_816_p4 = j8_i_reg_812;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state83)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        centers_val_address0 = tmp_74_i_fu_1658_p1;
    end else if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage2) & (1'b0 == ap_block_pp2_stage2))) begin
        centers_val_address0 = tmp_i13_i_fu_1620_p1;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        centers_val_address0 = grp_HoughSortDescent_fu_914_sequence_address0;
    end else begin
        centers_val_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state61) | ((1'b0 == ap_block_pp2_stage2_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage2)))) begin
        centers_val_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        centers_val_ce0 = grp_HoughSortDescent_fu_914_sequence_ce0;
    end else begin
        centers_val_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage2) & (1'b0 == ap_block_pp2_stage2))) begin
        centers_val_d0 = base_reg_2720_pp2_iter1_reg;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        centers_val_d0 = grp_HoughSortDescent_fu_914_sequence_d0;
    end else begin
        centers_val_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage2_11001) & (tmp_102_i_reg_2763 == 1'd1) & (tmp_89_i_reg_2754 == 1'd1) & (tmp_85_i_reg_2745 == 1'd1) & (tmp_73_i_reg_2736_pp2_iter1_reg == 1'd1) & (tmp_113_i_fu_1609_p2 == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage2))) begin
        centers_val_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        centers_val_we0 = grp_HoughSortDescent_fu_914_sequence_we0;
    end else begin
        centers_val_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        circles_cols_blk_n = circles_cols_empty_n;
    end else begin
        circles_cols_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        circles_cols_out_blk_n = circles_cols_out_full_n;
    end else begin
        circles_cols_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0) | (circles_cols_out_full_n == 1'b0) | (circles_rows_out_full_n == 1'b0) | (max_radius_empty_n == 1'b0) | (min_radius_empty_n == 1'b0) | (min_dist_empty_n == 1'b0) | (1'b0 == acc_threshold_empty_n) | (circles_cols_empty_n == 1'b0) | (circles_rows_empty_n == 1'b0) | (edge_cols_empty_n == 1'b0) | (edge_rows_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        circles_cols_out_write = 1'b1;
    end else begin
        circles_cols_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0) | (circles_cols_out_full_n == 1'b0) | (circles_rows_out_full_n == 1'b0) | (max_radius_empty_n == 1'b0) | (min_radius_empty_n == 1'b0) | (min_dist_empty_n == 1'b0) | (1'b0 == acc_threshold_empty_n) | (circles_cols_empty_n == 1'b0) | (circles_rows_empty_n == 1'b0) | (edge_cols_empty_n == 1'b0) | (edge_rows_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        circles_cols_read = 1'b1;
    end else begin
        circles_cols_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        circles_rows_blk_n = circles_rows_empty_n;
    end else begin
        circles_rows_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        circles_rows_out_blk_n = circles_rows_out_full_n;
    end else begin
        circles_rows_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0) | (circles_cols_out_full_n == 1'b0) | (circles_rows_out_full_n == 1'b0) | (max_radius_empty_n == 1'b0) | (min_radius_empty_n == 1'b0) | (min_dist_empty_n == 1'b0) | (1'b0 == acc_threshold_empty_n) | (circles_cols_empty_n == 1'b0) | (circles_rows_empty_n == 1'b0) | (edge_cols_empty_n == 1'b0) | (edge_rows_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        circles_rows_out_write = 1'b1;
    end else begin
        circles_rows_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0) | (circles_cols_out_full_n == 1'b0) | (circles_rows_out_full_n == 1'b0) | (max_radius_empty_n == 1'b0) | (min_radius_empty_n == 1'b0) | (min_dist_empty_n == 1'b0) | (1'b0 == acc_threshold_empty_n) | (circles_cols_empty_n == 1'b0) | (circles_rows_empty_n == 1'b0) | (edge_cols_empty_n == 1'b0) | (edge_rows_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        circles_rows_read = 1'b1;
    end else begin
        circles_rows_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state83)) begin
        circles_val_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        circles_val_address0 = tmp_31_cast_fu_2348_p1;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        circles_val_address0 = tmp_911_i_fu_1798_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        circles_val_address0 = tmp_16_cast_fu_1100_p1;
    end else begin
        circles_val_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state82)) begin
        circles_val_address1 = tmp_32_cast_fu_2368_p1;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        circles_val_address1 = tmp_143_i_fu_2333_p1;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        circles_val_address1 = tmp_26_cast_fu_1813_p1;
    end else begin
        circles_val_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state83))) begin
        circles_val_ce0 = 1'b1;
    end else begin
        circles_val_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state64))) begin
        circles_val_ce1 = 1'b1;
    end else begin
        circles_val_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state83)) begin
        circles_val_d0 = tmp_75_fu_2382_p1;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        circles_val_d0 = tmp_144_i_fu_2353_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        circles_val_d0 = 16'd0;
    end else begin
        circles_val_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state82)) begin
        circles_val_d1 = tmp_74_reg_3010;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        circles_val_d1 = tmp_142_i_fu_2328_p2;
    end else begin
        circles_val_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state83) | ((tmp_132_i_fu_2317_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state81)) | ((tmp_52_i_fu_1079_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3)))) begin
        circles_val_we0 = 1'b1;
    end else begin
        circles_val_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_86_i_reg_2843 == 1'd0) & (tmp_132_i_reg_2994 == 1'd1) & (1'b1 == ap_CS_fsm_state82)) | ((tmp_132_i_fu_2317_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state81)))) begin
        circles_val_we1 = 1'b1;
    end else begin
        circles_val_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        dist_accum_address0 = dist_accum_addr_3_reg_2932;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        dist_accum_address0 = tmp_134_i_fu_2001_p1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        dist_accum_address0 = tmp_109_i_fu_1990_p1;
    end else if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        dist_accum_address0 = dist_accum_addr_2_reg_2914;
    end else if (((1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter2 == 1'b1) & (1'b0 == ap_block_pp4_stage1))) begin
        dist_accum_address0 = tmp_116_i_fu_1978_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        dist_accum_address0 = tmp_56_i_fu_1134_p1;
    end else begin
        dist_accum_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state6) | ((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter2 == 1'b1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)))) begin
        dist_accum_ce0 = 1'b1;
    end else begin
        dist_accum_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        dist_accum_d0 = tmp_117_i_fu_1983_p2;
    end else if (((1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state6))) begin
        dist_accum_d0 = 32'd0;
    end else begin
        dist_accum_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state78) | ((exitcond6_i_fu_1122_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6)) | ((or_cond4_i_reg_2900 == 1'd0) & (tmp_97_i_reg_2865_pp4_iter2_reg == 1'd1) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)))) begin
        dist_accum_we0 = 1'b1;
    end else begin
        dist_accum_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        dx_val_ce0 = 1'b1;
    end else begin
        dx_val_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        dy_val_ce0 = 1'b1;
    end else begin
        dy_val_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        edge_cols_blk_n = edge_cols_empty_n;
    end else begin
        edge_cols_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0) | (circles_cols_out_full_n == 1'b0) | (circles_rows_out_full_n == 1'b0) | (max_radius_empty_n == 1'b0) | (min_radius_empty_n == 1'b0) | (min_dist_empty_n == 1'b0) | (1'b0 == acc_threshold_empty_n) | (circles_cols_empty_n == 1'b0) | (circles_rows_empty_n == 1'b0) | (edge_cols_empty_n == 1'b0) | (edge_rows_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        edge_cols_read = 1'b1;
    end else begin
        edge_cols_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        edge_rows_blk_n = edge_rows_empty_n;
    end else begin
        edge_rows_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0) | (circles_cols_out_full_n == 1'b0) | (circles_rows_out_full_n == 1'b0) | (max_radius_empty_n == 1'b0) | (min_radius_empty_n == 1'b0) | (min_dist_empty_n == 1'b0) | (1'b0 == acc_threshold_empty_n) | (circles_cols_empty_n == 1'b0) | (circles_rows_empty_n == 1'b0) | (edge_cols_empty_n == 1'b0) | (edge_rows_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        edge_rows_read = 1'b1;
    end else begin
        edge_rows_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        edge_val_ce0 = 1'b1;
    end else begin
        edge_val_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_1274_ap_start = 1'b1;
    end else begin
        grp_fu_1274_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_1287_ap_start = 1'b1;
    end else begin
        grp_fu_1287_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | ((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0)))) begin
        grp_sqrt_fixed_32_32_s_fu_909_ap_ce = 1'b1;
    end else begin
        grp_sqrt_fixed_32_32_s_fu_909_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_97_i_reg_2865_pp4_iter1_reg == 1'd1) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1) & (1'b0 == ap_block_pp4_stage1))) begin
        grp_sqrt_fixed_32_32_s_fu_909_x_V = dist2_2_reg_2895;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_sqrt_fixed_32_32_s_fu_909_x_V = xf_V_reg_2579;
    end else begin
        grp_sqrt_fixed_32_32_s_fu_909_x_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        mask_table1_ce0 = 1'b1;
    end else begin
        mask_table1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        max_radius_blk_n = max_radius_empty_n;
    end else begin
        max_radius_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0) | (circles_cols_out_full_n == 1'b0) | (circles_rows_out_full_n == 1'b0) | (max_radius_empty_n == 1'b0) | (min_radius_empty_n == 1'b0) | (min_dist_empty_n == 1'b0) | (1'b0 == acc_threshold_empty_n) | (circles_cols_empty_n == 1'b0) | (circles_rows_empty_n == 1'b0) | (edge_cols_empty_n == 1'b0) | (edge_rows_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        max_radius_read = 1'b1;
    end else begin
        max_radius_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        min_dist_blk_n = min_dist_empty_n;
    end else begin
        min_dist_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0) | (circles_cols_out_full_n == 1'b0) | (circles_rows_out_full_n == 1'b0) | (max_radius_empty_n == 1'b0) | (min_radius_empty_n == 1'b0) | (min_dist_empty_n == 1'b0) | (1'b0 == acc_threshold_empty_n) | (circles_cols_empty_n == 1'b0) | (circles_rows_empty_n == 1'b0) | (edge_cols_empty_n == 1'b0) | (edge_rows_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        min_dist_read = 1'b1;
    end else begin
        min_dist_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        min_radius_blk_n = min_radius_empty_n;
    end else begin
        min_radius_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0) | (circles_cols_out_full_n == 1'b0) | (circles_rows_out_full_n == 1'b0) | (max_radius_empty_n == 1'b0) | (min_radius_empty_n == 1'b0) | (min_dist_empty_n == 1'b0) | (1'b0 == acc_threshold_empty_n) | (circles_cols_empty_n == 1'b0) | (circles_rows_empty_n == 1'b0) | (edge_cols_empty_n == 1'b0) | (edge_rows_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        min_radius_read = 1'b1;
    end else begin
        min_radius_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        one_half_table2_ce0 = 1'b1;
    end else begin
        one_half_table2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        pt_buf_val_x_address0 = tmp_104_i_fu_1873_p1;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        pt_buf_val_x_address0 = tmp_i12_i_fu_1343_p1;
    end else begin
        pt_buf_val_x_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state48) | ((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)))) begin
        pt_buf_val_x_ce0 = 1'b1;
    end else begin
        pt_buf_val_x_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_68_i_reg_2575 == 1'd0) & (tmp_64_i_reg_2571 == 1'd0) & (exitcond_i_fu_1305_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state48))) begin
        pt_buf_val_x_we0 = 1'b1;
    end else begin
        pt_buf_val_x_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        pt_buf_val_y_address0 = tmp_104_i_fu_1873_p1;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        pt_buf_val_y_address0 = tmp_i12_i_fu_1343_p1;
    end else begin
        pt_buf_val_y_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state48) | ((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)))) begin
        pt_buf_val_y_ce0 = 1'b1;
    end else begin
        pt_buf_val_y_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_68_i_reg_2575 == 1'd0) & (tmp_64_i_reg_2571 == 1'd0) & (exitcond_i_fu_1305_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state48))) begin
        pt_buf_val_y_we0 = 1'b1;
    end else begin
        pt_buf_val_y_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0) | (circles_cols_out_full_n == 1'b0) | (circles_rows_out_full_n == 1'b0) | (max_radius_empty_n == 1'b0) | (min_radius_empty_n == 1'b0) | (min_dist_empty_n == 1'b0) | (1'b0 == acc_threshold_empty_n) | (circles_cols_empty_n == 1'b0) | (circles_rows_empty_n == 1'b0) | (edge_cols_empty_n == 1'b0) | (edge_rows_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((tmp_50_i_fu_1064_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((tmp_52_i_fu_1079_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state5 : begin
            if (((exitcond7_i_fu_1105_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((exitcond6_i_fu_1122_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((tmp_55_i_fu_1148_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((tmp_60_i_fu_1210_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & ((tmp_68_i_fu_1257_p2 == 1'd1) | (tmp_64_i_fu_1245_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            if (((1'b1 == ap_CS_fsm_state48) & ((exitcond_i_fu_1305_p2 == 1'd1) | (tmp_68_i_reg_2575 == 1'd1) | (tmp_64_i_reg_2571 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end
        end
        ap_ST_fsm_state49 : begin
            if (((or_cond3_i_fu_1423_p2 == 1'd0) & (tmp_110_i_fu_1354_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state49))) begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state52 : begin
            if (((tmp_59_i_fu_1490_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state52))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state60;
            end
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter1 == 1'b0) & (tmp_65_i_fu_1536_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1)) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end else if (((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter1 == 1'b0) & (tmp_65_i_fu_1536_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state59;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_pp2_stage1 : begin
            if ((1'b0 == ap_block_pp2_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end
        end
        ap_ST_fsm_pp2_stage2 : begin
            if ((~((1'b0 == ap_block_pp2_stage2_subdone) & (ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage2)) & (1'b0 == ap_block_pp2_stage2_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((1'b0 == ap_block_pp2_stage2_subdone) & (ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage2))) begin
                ap_NS_fsm = ap_ST_fsm_state59;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage2;
            end
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state60 : begin
            if (((grp_HoughSortDescent_fu_914_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state60))) begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state60;
            end
        end
        ap_ST_fsm_state61 : begin
            if (((tmp_66_i_fu_1646_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state61))) begin
                ap_NS_fsm = ap_ST_fsm_state83;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state62;
            end
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            if (((tmp_96_i_fu_1858_p2 == 1'd1) & (tmp_86_i_reg_2843 == 1'd1) & (1'b1 == ap_CS_fsm_state65))) begin
                ap_NS_fsm = ap_ST_fsm_state64;
            end else if (((tmp_86_i_reg_2843 == 1'd0) & (1'b1 == ap_CS_fsm_state65))) begin
                ap_NS_fsm = ap_ST_fsm_state67;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state66;
            end
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage0;
        end
        ap_ST_fsm_pp4_stage0 : begin
            if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_pp4_stage1 : begin
            if ((~((ap_enable_reg_pp4_iter1 == 1'b0) & (1'b0 == ap_block_pp4_stage1_subdone) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter2 == 1'b1)) & (1'b0 == ap_block_pp4_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if (((ap_enable_reg_pp4_iter1 == 1'b0) & (1'b0 == ap_block_pp4_stage1_subdone) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter2 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state75;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage1;
            end
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            if (((tmp_118_i_fu_1995_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state77))) begin
                ap_NS_fsm = ap_ST_fsm_state78;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state79;
            end
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            if (((1'b1 == ap_CS_fsm_state82) & ((tmp_146_i_fu_2373_p2 == 1'd0) | (tmp_132_i_reg_2994 == 1'd0) | (tmp_86_i_reg_2843 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state83;
            end
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_pp2_stage1 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_pp2_stage2 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_pp4_stage1 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage1_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0) | (circles_cols_out_full_n == 1'b0) | (circles_rows_out_full_n == 1'b0) | (max_radius_empty_n == 1'b0) | (min_radius_empty_n == 1'b0) | (min_dist_empty_n == 1'b0) | (1'b0 == acc_threshold_empty_n) | (circles_cols_empty_n == 1'b0) | (circles_rows_empty_n == 1'b0) | (edge_cols_empty_n == 1'b0) | (edge_rows_empty_n == 1'b0));
end

assign ap_block_state53_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp2_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp2_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp2_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp2_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp4_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp4_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp4_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp4_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp4_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state73_pp4_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state74_pp4_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_1000 = ((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter2 == 1'b1));
end

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

assign ap_phi_reg_pp4_iter0_p_max_r_1_i_reg_844 = 'bx;

assign ap_phi_reg_pp4_iter0_p_min_r_1_i_reg_856 = 'bx;

assign base_fu_1559_p2 = ($signed(tmp_71_i_fu_1553_p2) + $signed(32'd1));

assign c_0_c0_i_fu_2031_p1 = dist_accum_q0;

assign c_0_c0_i_fu_2031_p3 = ((tmp_137_i_fu_2018_p2[0:0] === 1'b1) ? c_0_c0_i_fu_2031_p1 : c_i_reg_879);

assign centers_length_fu_1614_p0 = centers_length_i_fu_260;

assign centers_length_fu_1614_p2 = ($signed(centers_length_fu_1614_p0) + $signed(32'd1));

assign circles_cols_out_din = circles_cols_dout;

assign circles_rows_out_din = circles_rows_dout;

assign cx0_fu_1758_p2 = ($signed(base_1_reg_2800) + $signed(tmp6_fu_1748_p2));

assign cx_fu_1818_p1 = circles_val_q0;

assign cy0_cast_i_fu_1773_p1 = cy0_fu_1767_p2;

assign cy0_fu_1767_p2 = ($signed(24'd16777215) + $signed(tmp_59_fu_1738_p1));

assign cy_cast_i_fu_1822_p1 = circles_val_q1;

assign dist2_2_fu_1913_p2 = (tmp_105_i_reg_2890 + tmp_106_i_fu_1909_p2);

assign dist2_fu_1852_p2 = (tmp_93_i_fu_1831_p2 + tmp_95_i_fu_1846_p2);

assign dx_val_address0 = tmp_21_cast_fu_1230_p1;

assign dy_val_address0 = tmp_21_cast_fu_1230_p1;

assign edge_val_address0 = tmp_21_cast_fu_1230_p1;

assign exitcond6_i_fu_1122_p2 = ((n1_i_reg_658 == 9'd321) ? 1'b1 : 1'b0);

assign exitcond7_i_fu_1105_p2 = ((n_i_reg_647 == 17'd77924) ? 1'b1 : 1'b0);

assign exitcond_i_fu_1305_p2 = ((k_i_reg_715 == 2'd2) ? 1'b1 : 1'b0);

assign extLd30_i_fu_1885_p1 = pt_buf_val_x_q0;

assign extLd34_i_fu_1889_p1 = pt_buf_val_y_q0;

assign grp_HoughSortDescent_fu_914_ap_start = grp_HoughSortDescent_fu_914_ap_start_reg;

assign grp_fu_1274_p0 = {{dx_val_load_reg_2561}, {16'd0}};

assign grp_fu_1274_p1 = p_Val2_19_fu_1263_p1;

assign grp_fu_1287_p0 = {{dy_val_load_reg_2566}, {16'd0}};

assign grp_fu_1287_p1 = p_Val2_19_fu_1263_p1;

assign grp_fu_2387_p0 = vx_fu_1237_p1;

assign grp_fu_2387_p1 = vx_fu_1237_p1;

assign grp_fu_2401_p1 = 17'd322;

assign grp_fu_2401_p2 = grp_fu_2401_p20;

assign grp_fu_2401_p20 = tmp_139_i_fu_1429_p2;

assign grp_fu_941_p2 = (($signed(value_reg_2730) > $signed(accum_q1)) ? 1'b1 : 1'b0);

assign i2_cast_i_fu_1486_p1 = i2_i_reg_756;

assign i5_cast_i_fu_1642_p1 = i5_i_reg_790;

assign i_0_i_cast_cast_i_fu_1060_p1 = i_0_i_i_reg_613;

assign i_1_fu_1153_p2 = (p_y_assign_reg_669 + 31'd1);

assign i_2_fu_1495_p2 = (i2_i_reg_756 + 31'd1);

assign i_3_fu_1652_p2 = (i5_i_reg_790 + 31'd1);

assign i_fu_1069_p2 = (i_0_i_i_reg_613 + 2'd1);

assign icmp_fu_1510_p2 = (($signed(tmp_53_fu_1501_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign index_V_fu_2071_p4 = {{t_V_2_fu_2045_p1[57:52]}};

assign isNeg_fu_2223_p3 = sh_assign_fu_2217_p2[32'd11];

assign j3_cast_i_fu_1532_p1 = ap_phi_mux_j3_i_phi_fu_783_p4;

assign j7_cast_i_fu_1777_p1 = j7_i_reg_801;

assign j8_cast_i_fu_1863_p1 = ap_phi_mux_j8_i_phi_fu_816_p4;

assign j_0_i_cast_cast_i_fu_1075_p1 = j_0_i_i_reg_636;

assign j_1_fu_1215_p2 = (p_x_assign_reg_682 + 31'd1);

assign j_2_fu_1792_p2 = (32'd1 + j7_cast_i_fu_1777_p1);

assign j_3_fu_1541_p2 = (ap_phi_mux_j3_i_phi_fu_783_p4 + 31'd1);

assign j_4_fu_1879_p2 = (j8_i_reg_812 + 31'd1);

assign j_5_cast_i_fu_1786_p2 = (j7_i_reg_801 + 31'd1);

assign j_fu_1084_p2 = (j_0_i_i_reg_636 + 7'd1);

assign k_fu_1311_p2 = (k_i_reg_715 + 2'd1);

assign loc_V_1_fu_2111_p1 = p_Val2_s_fu_2106_p2[51:0];

assign loc_V_2_fu_2185_p4 = {{p_Val2_15_fu_2173_p1[62:52]}};

assign loc_V_3_fu_2195_p1 = p_Val2_15_fu_2173_p1[51:0];

assign loc_V_fu_2049_p4 = {{t_V_2_fu_2045_p1[62:52]}};

assign mask_table1_address0 = tmp_171_i_i_i_fu_2081_p1;

assign max_r0_fu_956_p3 = ((tmp_i_i_fu_950_p2[0:0] === 1'b1) ? edge_rows_dout : edge_cols_dout);

assign max_radius_assign_ca_fu_994_p1 = temp_fu_986_p3;

assign min_dist2_fu_1633_p0 = tmp_i15_cast_i_fu_1630_p1;

assign min_dist2_fu_1633_p1 = tmp_i15_cast_i_fu_1630_p1;

assign min_dist2_fu_1633_p2 = (min_dist2_fu_1633_p0 * min_dist2_fu_1633_p1);

assign min_dist_assign_fu_1519_p3 = ((icmp_fu_1510_p2[0:0] === 1'b1) ? tmp_54_fu_1516_p1 : 31'd1);

assign min_radius_assign_3_fu_1016_p3 = ((or_cond8_i_fu_1010_p2[0:0] === 1'b1) ? max_r0_fu_956_p3 : max_radius_dout);

assign mul_fu_1678_p1 = base_1_reg_2800;

assign mul_fu_1678_p2 = ($signed({{1'b0}, {65'd6829264769}}) * $signed(mul_fu_1678_p1));

assign n_1_fu_1128_p2 = (n1_i_reg_658 + 9'd1);

assign n_fu_1111_p2 = (n_i_reg_647 + 17'd1);

assign neg_mul_fu_1684_p2 = (65'd0 - mul_fu_1678_p2);

assign neg_ti_fu_1725_p2 = (32'd0 - tmp_25_fu_1718_p3);

assign next_mul1_fu_1480_p2 = (phi_mul1_reg_767 + 32'd322);

assign next_mul_fu_1054_p2 = (phi_mul_reg_624 + 9'd100);

assign one_half_i_i_cast_i_fu_2102_p1 = one_half_table2_q0;

assign one_half_table2_address0 = tmp_171_i_i_i_fu_2081_p1;

assign or_cond3_i_fu_1423_p2 = (tmp_fu_1411_p2 | tmp4_fu_1417_p2);

assign or_cond4_i_fu_1940_p2 = (tmp_108_i_fu_1935_p2 | tmp_107_i_fu_1930_p2);

assign or_cond8_i_fu_1010_p2 = (tmp_48_i_fu_1004_p2 | tmp_47_i_fu_998_p2);

assign or_cond_i_fu_976_p2 = (tmp_i_fu_964_p2 | tmp_i_239_fu_970_p2);

assign p_Result_13_fu_2094_p3 = {{p_Result_s_fu_2087_p3}, {63'd0}};

assign p_Result_14_fu_2137_p3 = {{tmp_5_fu_2127_p4}, {xs_sig_V_fu_2121_p2}};

assign p_Result_15_fu_2177_p3 = p_Val2_15_fu_2173_p1[32'd63];

assign p_Result_s_fu_2087_p3 = t_V_2_reg_2967[32'd63];

assign p_Val2_15_fu_2173_p1 = x_assign_4_fu_2166_p3;

assign p_Val2_19_fu_1263_p1 = reg_946;

assign p_Val2_20_fu_1922_p1 = reg_946;

assign p_Val2_21_fu_2309_p3 = ((p_Result_15_fu_2177_p3[0:0] === 1'b1) ? p_Val2_i_i_i_i_fu_2303_p2 : p_Val2_8_fu_2295_p3);

assign p_Val2_23_cast_fu_1926_p1 = reg_946;

assign p_Val2_8_fu_2295_p3 = ((isNeg_fu_2223_p3[0:0] === 1'b1) ? tmp_s_fu_2281_p1 : tmp_28_fu_2285_p4);

assign p_Val2_i_i_i_i_fu_2303_p2 = (32'd0 - p_Val2_8_fu_2295_p3);

assign p_Val2_s_fu_2106_p2 = (t_V_2_reg_2967 + one_half_i_i_cast_i_fu_2102_p1);

assign p_dx_fu_1893_p2 = (cx0_reg_2822 - extLd30_i_fu_1885_p1);

assign p_dy_fu_1898_p2 = ($signed(cy0_cast_i_reg_2838) - $signed(extLd34_i_fu_1889_p1));

assign p_max_r_1_cast_fu_1960_p1 = p_max_r_1_fu_1952_p3;

assign p_max_r_1_fu_1952_p3 = ((tmp_114_i_fu_1946_p2[0:0] === 1'b1) ? p_Val2_23_cast_fu_1926_p1 : tmp_66_fu_1918_p1);

assign p_max_r_cast_i_fu_1042_p1 = p_max_r_fu_1034_p3;

assign p_max_r_fu_1034_p3 = ((tmp_49_i_fu_1028_p2[0:0] === 1'b1) ? temp_fu_986_p3 : tmp_48_fu_1024_p1);

assign p_min_r_2_fu_1046_p3 = ((tmp_49_i_fu_1028_p2[0:0] === 1'b1) ? min_radius_assign_3_fu_1016_p3 : max_radius_assign_ca_fu_994_p1);

assign p_min_r_fu_1970_p3 = ((tmp_115_i_fu_1964_p2[0:0] === 1'b1) ? p_Val2_20_fu_1922_p1 : r0_2_reg_834);

assign p_shl1_cast_fu_1175_p3 = {{tmp_50_fu_1171_p1}, {6'd0}};

assign p_shl_cast_fu_1163_p3 = {{tmp_49_fu_1159_p1}, {8'd0}};

assign p_x_assign_cast_i_fu_1206_p1 = p_x_assign_reg_682;

assign p_y_assign_cast_i_fu_1144_p1 = p_y_assign_reg_669;

assign pt_buf_length_fu_1337_p0 = pt_buf_length_i_fu_256;

assign pt_buf_length_fu_1337_p2 = ($signed(pt_buf_length_fu_1337_p0) + $signed(32'd1));

assign r10_0_r0_i_fu_2023_p3 = ((tmp_137_i_fu_2018_p2[0:0] === 1'b1) ? r0_reg_889 : r0_i_reg_868);

assign r_2_fu_1462_p2 = (r1_i_reg_746 + 32'd1);

assign r_3_fu_2039_p2 = ($signed(r0_reg_889) + $signed(32'd1));

assign sel_tmp1_fu_2156_p2 = (tmp_i_i_i_reg_2973 ^ 1'd1);

assign sel_tmp2_fu_2161_p2 = (tmp_170_i_i_i_reg_2979 & sel_tmp1_fu_2156_p2);

assign sel_tmp_fu_2152_p1 = sel_tmp_v_fu_2145_p3;

assign sel_tmp_v_fu_2145_p3 = ((tmp_i_i_i_reg_2973[0:0] === 1'b1) ? p_Result_13_fu_2094_p3 : p_Result_14_fu_2137_p3);

assign sh_assign_1_fu_2241_p3 = ((isNeg_fu_2223_p3[0:0] === 1'b1) ? tmp_176_i_i_i_cast_i_fu_2237_p1 : sh_assign_fu_2217_p2);

assign sh_assign_1_i_i_i_ca_fu_2249_p1 = $signed(sh_assign_1_fu_2241_p3);

assign sh_assign_fu_2217_p2 = ($signed(12'd3073) + $signed(tmp_i_i_i_i_cast_i_fu_2213_p1));

assign sx_1_fu_1468_p2 = ($signed(32'd0) - $signed(sx1_i_reg_695));

assign sy_1_fu_1474_p2 = ($signed(32'd0) - $signed(sy1_i_reg_705));

assign t_V_2_fu_2045_p1 = x_assign_3_fu_930_p1;

assign temp_fu_986_p3 = ((or_cond_i_fu_976_p2[0:0] === 1'b1) ? 31'd1 : tmp_47_fu_982_p1);

assign tmp4_fu_1417_p2 = (tmp_65_fu_1397_p3 | tmp_127_i_fu_1405_p2);

assign tmp5_fu_1547_p2 = (j3_cast_i_fu_1532_p1 + 32'd322);

assign tmp6_fu_1748_p2 = ($signed(32'd4294967295) + $signed(tmp_76_i_fu_1742_p2));

assign tmp_100_i_fu_1589_p2 = ($signed(tmp_71_i_reg_2712) + $signed(32'd4294966975));

assign tmp_101_i_fu_1594_p1 = $signed(tmp_100_i_fu_1589_p2);

assign tmp_104_i_fu_1873_p1 = ap_phi_mux_j8_i_phi_fu_816_p4;

assign tmp_105_i_fu_1903_p2 = ($signed(p_dx_fu_1893_p2) * $signed(p_dx_fu_1893_p2));

assign tmp_106_i_fu_1909_p2 = ($signed(p_dy_reg_2884) * $signed(p_dy_reg_2884));

assign tmp_107_i_fu_1930_p2 = (($signed(p_min_r_2_reg_2459) > $signed(p_Val2_20_fu_1922_p1)) ? 1'b1 : 1'b0);

assign tmp_108_i_fu_1935_p2 = ((p_Val2_23_cast_fu_1926_p1 > p_max_r_reg_2448) ? 1'b1 : 1'b0);

assign tmp_109_i_fu_1990_p1 = r0_2_reg_834;

assign tmp_110_i_fu_1354_p2 = (($signed(r1_i_reg_746) > $signed(p_max_r_cast_i_reg_2453)) ? 1'b1 : 1'b0);

assign tmp_111_i_fu_1599_p2 = ($signed(tmp_71_i_reg_2712_pp2_iter1_reg) + $signed(32'd323));

assign tmp_112_i_fu_1604_p1 = $signed(tmp_111_i_fu_1599_p2);

assign tmp_113_i_fu_1609_p2 = (($signed(value_reg_2730_pp2_iter1_reg) > $signed(accum_q0)) ? 1'b1 : 1'b0);

assign tmp_114_i_fu_1946_p2 = (($signed(p_Val2_20_fu_1922_p1) > $signed(p_max_r1_i_reg_824)) ? 1'b1 : 1'b0);

assign tmp_115_i_fu_1964_p2 = (($signed(p_Val2_20_fu_1922_p1) < $signed(r0_2_reg_834)) ? 1'b1 : 1'b0);

assign tmp_116_i_fu_1978_p1 = reg_946;

assign tmp_117_i_fu_1983_p2 = (dist_accum_q0 + 32'd1);

assign tmp_118_i_fu_1995_p2 = (($signed(r0_reg_889) > $signed(p_max_r1_i_reg_824)) ? 1'b1 : 1'b0);

assign tmp_121_i_fu_1359_p4 = {{x_i_reg_726[31:16]}};

assign tmp_123_i_fu_1369_p4 = {{y_i_reg_736[31:16]}};

assign tmp_125_i_fu_1391_p2 = (($signed(tmp_121_i_fu_1359_p4) > $signed(16'd319)) ? 1'b1 : 1'b0);

assign tmp_127_i_fu_1405_p2 = (($signed(tmp_123_i_fu_1369_p4) > $signed(16'd239)) ? 1'b1 : 1'b0);

assign tmp_132_i_fu_2317_p2 = (($signed(c_i_reg_879) > $signed(p_Val2_21_fu_2309_p3)) ? 1'b1 : 1'b0);

assign tmp_134_i_fu_2001_p1 = r0_reg_889;

assign tmp_135_i_fu_2012_p0 = dist_accum_q0;

assign tmp_135_i_fu_2012_p2 = ($signed(tmp_135_i_fu_2012_p0) * $signed(r0_i_reg_868));

assign tmp_136_i_fu_2006_p2 = ($signed(r0_reg_889) * $signed(c_i_reg_879));

assign tmp_137_i_fu_2018_p2 = (($signed(tmp_135_i_fu_2012_p2) > $signed(tmp_136_i_reg_2937)) ? 1'b1 : 1'b0);

assign tmp_139_i_fu_1429_p2 = (tmp_121_i_fu_1359_p4 + 16'd323);

assign tmp_140_i_fu_1439_p1 = $unsigned(grp_fu_2401_p3);

assign tmp_141_i_fu_1443_p2 = (accum_q0 + 32'd1);

assign tmp_142_i_fu_2328_p2 = (tmp_61_reg_2812 + tmp_60_reg_2817);

assign tmp_143_i_fu_2333_p1 = total_fu_2323_p2;

assign tmp_144_i_fu_2353_p2 = ($signed(16'd65535) + $signed(tmp_62_reg_2828));

assign tmp_146_i_fu_2373_p2 = (($signed(total_reg_2998) > $signed(32'd98)) ? 1'b1 : 1'b0);

assign tmp_16_cast_fu_1100_p1 = tmp_16_fu_1094_p2;

assign tmp_16_fu_1094_p2 = (phi_mul_reg_624 + tmp_54_i_cast_fu_1090_p1);

assign tmp_170_i_i_i_fu_2065_p2 = ((loc_V_fu_2049_p4 > 11'd1075) ? 1'b1 : 1'b0);

assign tmp_171_i_i_i_fu_2081_p1 = index_V_fu_2071_p4;

assign tmp_173_i_i_i_fu_2115_p2 = (mask_table1_q0 ^ 52'd4503599627370495);

assign tmp_176_i_i_i_cast_i_fu_2237_p1 = $signed(tmp_176_i_i_i_i_fu_2231_p2);

assign tmp_176_i_i_i_i_fu_2231_p2 = (11'd1023 - loc_V_2_fu_2185_p4);

assign tmp_177_i_i_i_cast_i_fu_2257_p1 = $unsigned(sh_assign_1_i_i_i_ca_fu_2249_p1);

assign tmp_177_i_i_i_i_fu_2253_p1 = $unsigned(sh_assign_1_i_i_i_ca_fu_2249_p1);

assign tmp_178_i_i_i_i_fu_2261_p2 = tmp_i_i_i_i_fu_2199_p4 >> tmp_177_i_i_i_cast_i_fu_2257_p1;

assign tmp_179_i_i_i_i_fu_2267_p2 = tmp_i_i_i_cast_i_fu_2209_p1 << tmp_177_i_i_i_i_fu_2253_p1;

assign tmp_19_fu_1183_p2 = (p_shl_cast_fu_1163_p3 + p_shl1_cast_fu_1175_p3);

assign tmp_21_cast_fu_1230_p1 = tmp_21_fu_1225_p2;

assign tmp_21_fu_1225_p2 = (tmp_19_reg_2521 + tmp_52_fu_1221_p1);

assign tmp_23_fu_1700_p1 = $signed(tmp_57_fu_1690_p4);

assign tmp_24_fu_1714_p1 = $signed(tmp_58_fu_1704_p4);

assign tmp_25_fu_1718_p3 = ((tmp_56_reg_2806[0:0] === 1'b1) ? tmp_23_fu_1700_p1 : tmp_24_fu_1714_p1);

assign tmp_26_cast_fu_1813_p1 = $signed(tmp_26_fu_1807_p2);

assign tmp_26_fu_1807_p2 = (10'd100 + tmp_63_fu_1803_p1);

assign tmp_28_fu_2285_p4 = {{tmp_179_i_i_i_i_fu_2267_p2[84:53]}};

assign tmp_29_fu_2342_p2 = (10'd100 + tmp_73_fu_2338_p1);

assign tmp_30_fu_2363_p2 = (10'd200 + tmp_73_reg_3005);

assign tmp_31_cast_fu_2348_p1 = $signed(tmp_29_fu_2342_p2);

assign tmp_32_cast_fu_2368_p1 = $signed(tmp_30_fu_2363_p2);

assign tmp_47_fu_982_p1 = min_radius_dout[30:0];

assign tmp_47_i_fu_998_p2 = (($signed(max_radius_dout) < $signed(32'd1)) ? 1'b1 : 1'b0);

assign tmp_48_fu_1024_p1 = min_radius_assign_3_fu_1016_p3[30:0];

assign tmp_48_i_fu_1004_p2 = (($signed(max_r0_fu_956_p3) < $signed(max_radius_dout)) ? 1'b1 : 1'b0);

assign tmp_49_fu_1159_p1 = p_y_assign_reg_669[9:0];

assign tmp_49_i_fu_1028_p2 = (($signed(min_radius_assign_3_fu_1016_p3) < $signed(max_radius_assign_ca_fu_994_p1)) ? 1'b1 : 1'b0);

assign tmp_50_fu_1171_p1 = p_y_assign_reg_669[11:0];

assign tmp_50_i_fu_1064_p2 = (($signed(i_0_i_cast_cast_i_fu_1060_p1) < $signed(circles_rows_read_reg_2415)) ? 1'b1 : 1'b0);

assign tmp_51_fu_1189_p1 = p_y_assign_reg_669[15:0];

assign tmp_52_fu_1221_p1 = p_x_assign_reg_682[17:0];

assign tmp_52_i_fu_1079_p2 = (($signed(j_0_i_cast_cast_i_fu_1075_p1) < $signed(circles_cols_read_reg_2420)) ? 1'b1 : 1'b0);

assign tmp_53_fu_1501_p4 = {{min_dist_read_reg_2430[31:1]}};

assign tmp_53_i_fu_1117_p1 = n_i_reg_647;

assign tmp_54_fu_1516_p1 = min_dist_read_reg_2430[30:0];

assign tmp_54_i_cast_fu_1090_p1 = j_0_i_i_reg_636;

assign tmp_55_fu_1293_p1 = p_x_assign_reg_682[15:0];

assign tmp_55_i_fu_1148_p2 = (($signed(p_y_assign_cast_i_fu_1144_p1) < $signed(rows_reg_2436)) ? 1'b1 : 1'b0);

assign tmp_56_fu_1663_p1 = centers_val_q0;

assign tmp_56_i_fu_1134_p1 = n1_i_reg_658;

assign tmp_57_fu_1690_p4 = {{neg_mul_fu_1684_p2[64:41]}};

assign tmp_58_fu_1704_p4 = {{mul_fu_1678_p2[64:41]}};

assign tmp_59_fu_1738_p1 = tmp_75_i_fu_1731_p3[23:0];

assign tmp_59_i_fu_1490_p2 = (($signed(i2_cast_i_fu_1486_p1) < $signed(rows_reg_2436)) ? 1'b1 : 1'b0);

assign tmp_5_fu_2127_p4 = {{p_Val2_s_fu_2106_p2[63:52]}};

assign tmp_60_fu_1754_p1 = tmp6_fu_1748_p2[15:0];

assign tmp_60_i_fu_1210_p2 = (($signed(p_x_assign_cast_i_fu_1206_p1) < $signed(cols_reg_2442)) ? 1'b1 : 1'b0);

assign tmp_61_fu_1671_p0 = centers_val_q0;

assign tmp_61_fu_1671_p1 = tmp_61_fu_1671_p0[15:0];

assign tmp_62_fu_1763_p1 = tmp_75_i_fu_1731_p3[15:0];

assign tmp_63_fu_1803_p1 = j_2_fu_1792_p2[9:0];

assign tmp_64_fu_1383_p3 = x_i_reg_726[32'd31];

assign tmp_64_i_fu_1245_p2 = ((edge_val_q0 == 8'd0) ? 1'b1 : 1'b0);

assign tmp_65_fu_1397_p3 = y_i_reg_736[32'd31];

assign tmp_65_i_fu_1536_p2 = (($signed(j3_cast_i_fu_1532_p1) < $signed(cols_reg_2442)) ? 1'b1 : 1'b0);

assign tmp_66_fu_1918_p1 = p_max_r1_i_reg_824[30:0];

assign tmp_66_i_fu_1646_p2 = (($signed(i5_cast_i_fu_1642_p1) < $signed(centers_length_i_fu_260)) ? 1'b1 : 1'b0);

assign tmp_67_i_fu_1251_p0 = dy_val_q0;

assign tmp_67_i_fu_1251_p1 = dx_val_q0;

assign tmp_67_i_fu_1251_p2 = (tmp_67_i_fu_1251_p1 | tmp_67_i_fu_1251_p0);

assign tmp_68_i_fu_1257_p2 = ((tmp_67_i_fu_1251_p2 == 16'd0) ? 1'b1 : 1'b0);

assign tmp_71_i_fu_1553_p2 = (tmp5_fu_1547_p2 + phi_mul1_reg_767);

assign tmp_72_fu_2273_p3 = tmp_178_i_i_i_i_fu_2261_p2[32'd53];

assign tmp_72_i_fu_1565_p1 = base_fu_1559_p2;

assign tmp_73_fu_2338_p1 = total_fu_2323_p2[9:0];

assign tmp_73_i_fu_1570_p2 = (($signed(accum_q0) > $signed(acc_threshold_read_reg_2425)) ? 1'b1 : 1'b0);

assign tmp_74_fu_2359_p1 = r0_i_reg_868[15:0];

assign tmp_74_i_fu_1658_p1 = i5_i_reg_790;

assign tmp_75_fu_2382_p1 = total_3_i_reg_900[15:0];

assign tmp_75_i_fu_1731_p3 = ((tmp_56_reg_2806[0:0] === 1'b1) ? neg_ti_fu_1725_p2 : tmp_24_fu_1714_p1);

assign tmp_76_i_fu_1742_p1 = tmp_75_i_fu_1731_p3;

assign tmp_76_i_fu_1742_p2 = ($signed(32'd4294966974) * $signed(tmp_76_i_fu_1742_p1));

assign tmp_80_i_fu_2394_p0 = vy_fu_1241_p1;

assign tmp_80_i_fu_2394_p1 = vy_fu_1241_p1;

assign tmp_84_i_fu_1575_p1 = tmp_71_i_reg_2712;

assign tmp_86_i_fu_1781_p2 = (($signed(j7_cast_i_fu_1777_p1) < $signed(total_1_load_reg_2780)) ? 1'b1 : 1'b0);

assign tmp_87_i_fu_1579_p2 = ($signed(tmp_71_i_reg_2712) + $signed(32'd2));

assign tmp_88_i_fu_1584_p1 = $signed(tmp_87_i_fu_1579_p2);

assign tmp_911_i_fu_1798_p1 = j_2_fu_1792_p2;

assign tmp_92_i_fu_1826_p2 = (cx_fu_1818_p1 - cx0_reg_2822);

assign tmp_93_i_fu_1831_p2 = ($signed(tmp_92_i_fu_1826_p2) * $signed(tmp_92_i_fu_1826_p2));

assign tmp_94_cast_i_fu_1842_p1 = $signed(tmp_94_i_fu_1837_p2);

assign tmp_94_i_fu_1837_p2 = ($signed(cy_cast_i_fu_1822_p1) - $signed(cy0_reg_2833));

assign tmp_95_i_fu_1846_p0 = tmp_94_cast_i_fu_1842_p1;

assign tmp_95_i_fu_1846_p1 = tmp_94_cast_i_fu_1842_p1;

assign tmp_95_i_fu_1846_p2 = ($signed(tmp_95_i_fu_1846_p0) * $signed(tmp_95_i_fu_1846_p1));

assign tmp_96_i_fu_1858_p2 = (($signed(dist2_fu_1852_p2) > $signed(min_dist2_reg_2775)) ? 1'b1 : 1'b0);

assign tmp_97_i_fu_1867_p2 = (($signed(j8_cast_i_fu_1863_p1) < $signed(pt_buf_length_i_fu_256)) ? 1'b1 : 1'b0);

assign tmp_98_i_fu_1317_p2 = ($signed(sx1_i_reg_695) * $signed(p_min_r_2_reg_2459));

assign tmp_99_i_fu_1327_p2 = ($signed(sy1_i_reg_705) * $signed(p_min_r_2_reg_2459));

assign tmp_fu_1411_p2 = (tmp_64_fu_1383_p3 | tmp_125_i_fu_1391_p2);

assign tmp_i12_i_fu_1343_p0 = pt_buf_length_i_fu_256;

assign tmp_i12_i_fu_1343_p1 = tmp_i12_i_fu_1343_p0;

assign tmp_i13_i_fu_1620_p0 = centers_length_i_fu_260;

assign tmp_i13_i_fu_1620_p1 = tmp_i13_i_fu_1620_p0;

assign tmp_i15_cast_i_fu_1630_p1 = min_dist_assign_reg_2698;

assign tmp_i_239_fu_970_p2 = (($signed(max_r0_fu_956_p3) < $signed(min_radius_dout)) ? 1'b1 : 1'b0);

assign tmp_i_fu_964_p2 = (($signed(min_radius_dout) < $signed(32'd1)) ? 1'b1 : 1'b0);

assign tmp_i_i_fu_950_p2 = (($signed(edge_rows_dout) > $signed(edge_cols_dout)) ? 1'b1 : 1'b0);

assign tmp_i_i_i_cast_i_fu_2209_p1 = tmp_i_i_i_i_fu_2199_p4;

assign tmp_i_i_i_fu_2059_p2 = ((loc_V_fu_2049_p4 < 11'd1022) ? 1'b1 : 1'b0);

assign tmp_i_i_i_i_cast_i_fu_2213_p1 = loc_V_2_fu_2185_p4;

assign tmp_i_i_i_i_fu_2199_p4 = {{{{1'd1}, {loc_V_3_fu_2195_p1}}}, {1'd0}};

assign tmp_s_fu_2281_p1 = tmp_72_fu_2273_p3;

assign total_fu_2323_p2 = (32'd1 + total_1_load_reg_2780);

assign vx_fu_1237_p0 = dx_val_q0;

assign vx_fu_1237_p1 = vx_fu_1237_p0;

assign vy_fu_1241_p0 = dy_val_q0;

assign vy_fu_1241_p1 = vy_fu_1241_p0;

assign x0_fu_1297_p3 = {{tmp_55_fu_1293_p1}, {16'd0}};

assign x1_1_fu_1450_p2 = ($signed(sx1_i_reg_695) + $signed(x_i_reg_726));

assign x1_fu_1322_p2 = (tmp_98_i_fu_1317_p2 + x0_reg_2610);

assign x_assign_4_fu_2166_p3 = ((sel_tmp2_fu_2161_p2[0:0] === 1'b1) ? x_assign_3_reg_2962 : sel_tmp_fu_2152_p1);

assign xs_sig_V_fu_2121_p2 = (tmp_173_i_i_i_fu_2115_p2 & loc_V_1_fu_2111_p1);

assign y0_fu_1193_p3 = {{tmp_51_fu_1189_p1}, {16'd0}};

assign y1_1_fu_1456_p2 = ($signed(sy1_i_reg_705) + $signed(y_i_reg_736));

assign y1_fu_1332_p2 = (tmp_99_i_fu_1327_p2 + y0_reg_2526);

always @ (posedge ap_clk) begin
    p_max_r_cast_i_reg_2453[31] <= 1'b0;
    tmp_19_reg_2521[5:0] <= 6'b000000;
    y0_reg_2526[15:0] <= 16'b0000000000000000;
    x0_reg_2610[15:0] <= 16'b0000000000000000;
end

endmodule //HoughCircles
