// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Block_Mat_exit414_pr (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        rows,
        cols,
        gray_thresh,
        acc_thresh,
        min_dist,
        min_radius,
        max_radius,
        src_rows_V_out_din,
        src_rows_V_out_full_n,
        src_rows_V_out_write,
        src_cols_V_out_din,
        src_cols_V_out_full_n,
        src_cols_V_out_write,
        edge_rows_V_out_din,
        edge_rows_V_out_full_n,
        edge_rows_V_out_write,
        edge_cols_V_out_din,
        edge_cols_V_out_full_n,
        edge_cols_V_out_write,
        dx_rows_V_out_din,
        dx_rows_V_out_full_n,
        dx_rows_V_out_write,
        dx_cols_V_out_din,
        dx_cols_V_out_full_n,
        dx_cols_V_out_write,
        dy_rows_V_out_din,
        dy_rows_V_out_full_n,
        dy_rows_V_out_write,
        dy_cols_V_out_din,
        dy_cols_V_out_full_n,
        dy_cols_V_out_write,
        circles_rows_out_din,
        circles_rows_out_full_n,
        circles_rows_out_write,
        circles_cols_out_din,
        circles_cols_out_full_n,
        circles_cols_out_write,
        gray_thresh_out_din,
        gray_thresh_out_full_n,
        gray_thresh_out_write,
        acc_thresh_out_din,
        acc_thresh_out_full_n,
        acc_thresh_out_write,
        min_dist_out_din,
        min_dist_out_full_n,
        min_dist_out_write,
        min_radius_out_din,
        min_radius_out_full_n,
        min_radius_out_write,
        max_radius_out_din,
        max_radius_out_full_n,
        max_radius_out_write
);

parameter    ap_ST_fsm_state1 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [31:0] rows;
input  [31:0] cols;
input  [31:0] gray_thresh;
input  [31:0] acc_thresh;
input  [31:0] min_dist;
input  [31:0] min_radius;
input  [31:0] max_radius;
output  [31:0] src_rows_V_out_din;
input   src_rows_V_out_full_n;
output   src_rows_V_out_write;
output  [31:0] src_cols_V_out_din;
input   src_cols_V_out_full_n;
output   src_cols_V_out_write;
output  [31:0] edge_rows_V_out_din;
input   edge_rows_V_out_full_n;
output   edge_rows_V_out_write;
output  [31:0] edge_cols_V_out_din;
input   edge_cols_V_out_full_n;
output   edge_cols_V_out_write;
output  [31:0] dx_rows_V_out_din;
input   dx_rows_V_out_full_n;
output   dx_rows_V_out_write;
output  [31:0] dx_cols_V_out_din;
input   dx_cols_V_out_full_n;
output   dx_cols_V_out_write;
output  [31:0] dy_rows_V_out_din;
input   dy_rows_V_out_full_n;
output   dy_rows_V_out_write;
output  [31:0] dy_cols_V_out_din;
input   dy_cols_V_out_full_n;
output   dy_cols_V_out_write;
output  [2:0] circles_rows_out_din;
input   circles_rows_out_full_n;
output   circles_rows_out_write;
output  [7:0] circles_cols_out_din;
input   circles_cols_out_full_n;
output   circles_cols_out_write;
output  [31:0] gray_thresh_out_din;
input   gray_thresh_out_full_n;
output   gray_thresh_out_write;
output  [31:0] acc_thresh_out_din;
input   acc_thresh_out_full_n;
output   acc_thresh_out_write;
output  [31:0] min_dist_out_din;
input   min_dist_out_full_n;
output   min_dist_out_write;
output  [31:0] min_radius_out_din;
input   min_radius_out_full_n;
output   min_radius_out_write;
output  [31:0] max_radius_out_din;
input   max_radius_out_full_n;
output   max_radius_out_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg src_rows_V_out_write;
reg src_cols_V_out_write;
reg edge_rows_V_out_write;
reg edge_cols_V_out_write;
reg dx_rows_V_out_write;
reg dx_cols_V_out_write;
reg dy_rows_V_out_write;
reg dy_cols_V_out_write;
reg circles_rows_out_write;
reg circles_cols_out_write;
reg gray_thresh_out_write;
reg acc_thresh_out_write;
reg min_dist_out_write;
reg min_radius_out_write;
reg max_radius_out_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    src_rows_V_out_blk_n;
reg    src_cols_V_out_blk_n;
reg    edge_rows_V_out_blk_n;
reg    edge_cols_V_out_blk_n;
reg    dx_rows_V_out_blk_n;
reg    dx_cols_V_out_blk_n;
reg    dy_rows_V_out_blk_n;
reg    dy_cols_V_out_blk_n;
reg    circles_rows_out_blk_n;
reg    circles_cols_out_blk_n;
reg    gray_thresh_out_blk_n;
reg    acc_thresh_out_blk_n;
reg    min_dist_out_blk_n;
reg    min_radius_out_blk_n;
reg    max_radius_out_blk_n;
reg    ap_block_state1;
reg   [0:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((min_radius_out_full_n == 1'b0) | (min_dist_out_full_n == 1'b0) | (1'b0 == acc_thresh_out_full_n) | (gray_thresh_out_full_n == 1'b0) | (circles_cols_out_full_n == 1'b0) | (circles_rows_out_full_n == 1'b0) | (dy_cols_V_out_full_n == 1'b0) | (dy_rows_V_out_full_n == 1'b0) | (real_start == 1'b0) | (dx_cols_V_out_full_n == 1'b0) | (dx_rows_V_out_full_n == 1'b0) | (edge_cols_V_out_full_n == 1'b0) | (edge_rows_V_out_full_n == 1'b0) | (src_cols_V_out_full_n == 1'b0) | (src_rows_V_out_full_n == 1'b0) | (max_radius_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        acc_thresh_out_blk_n = acc_thresh_out_full_n;
    end else begin
        acc_thresh_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((min_radius_out_full_n == 1'b0) | (min_dist_out_full_n == 1'b0) | (1'b0 == acc_thresh_out_full_n) | (gray_thresh_out_full_n == 1'b0) | (circles_cols_out_full_n == 1'b0) | (circles_rows_out_full_n == 1'b0) | (dy_cols_V_out_full_n == 1'b0) | (dy_rows_V_out_full_n == 1'b0) | (real_start == 1'b0) | (dx_cols_V_out_full_n == 1'b0) | (dx_rows_V_out_full_n == 1'b0) | (edge_cols_V_out_full_n == 1'b0) | (edge_rows_V_out_full_n == 1'b0) | (src_cols_V_out_full_n == 1'b0) | (src_rows_V_out_full_n == 1'b0) | (max_radius_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        acc_thresh_out_write = 1'b1;
    end else begin
        acc_thresh_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((min_radius_out_full_n == 1'b0) | (min_dist_out_full_n == 1'b0) | (1'b0 == acc_thresh_out_full_n) | (gray_thresh_out_full_n == 1'b0) | (circles_cols_out_full_n == 1'b0) | (circles_rows_out_full_n == 1'b0) | (dy_cols_V_out_full_n == 1'b0) | (dy_rows_V_out_full_n == 1'b0) | (real_start == 1'b0) | (dx_cols_V_out_full_n == 1'b0) | (dx_rows_V_out_full_n == 1'b0) | (edge_cols_V_out_full_n == 1'b0) | (edge_rows_V_out_full_n == 1'b0) | (src_cols_V_out_full_n == 1'b0) | (src_rows_V_out_full_n == 1'b0) | (max_radius_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        circles_cols_out_blk_n = circles_cols_out_full_n;
    end else begin
        circles_cols_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((min_radius_out_full_n == 1'b0) | (min_dist_out_full_n == 1'b0) | (1'b0 == acc_thresh_out_full_n) | (gray_thresh_out_full_n == 1'b0) | (circles_cols_out_full_n == 1'b0) | (circles_rows_out_full_n == 1'b0) | (dy_cols_V_out_full_n == 1'b0) | (dy_rows_V_out_full_n == 1'b0) | (real_start == 1'b0) | (dx_cols_V_out_full_n == 1'b0) | (dx_rows_V_out_full_n == 1'b0) | (edge_cols_V_out_full_n == 1'b0) | (edge_rows_V_out_full_n == 1'b0) | (src_cols_V_out_full_n == 1'b0) | (src_rows_V_out_full_n == 1'b0) | (max_radius_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        circles_cols_out_write = 1'b1;
    end else begin
        circles_cols_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        circles_rows_out_blk_n = circles_rows_out_full_n;
    end else begin
        circles_rows_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((min_radius_out_full_n == 1'b0) | (min_dist_out_full_n == 1'b0) | (1'b0 == acc_thresh_out_full_n) | (gray_thresh_out_full_n == 1'b0) | (circles_cols_out_full_n == 1'b0) | (circles_rows_out_full_n == 1'b0) | (dy_cols_V_out_full_n == 1'b0) | (dy_rows_V_out_full_n == 1'b0) | (real_start == 1'b0) | (dx_cols_V_out_full_n == 1'b0) | (dx_rows_V_out_full_n == 1'b0) | (edge_cols_V_out_full_n == 1'b0) | (edge_rows_V_out_full_n == 1'b0) | (src_cols_V_out_full_n == 1'b0) | (src_rows_V_out_full_n == 1'b0) | (max_radius_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        circles_rows_out_write = 1'b1;
    end else begin
        circles_rows_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        dx_cols_V_out_blk_n = dx_cols_V_out_full_n;
    end else begin
        dx_cols_V_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((min_radius_out_full_n == 1'b0) | (min_dist_out_full_n == 1'b0) | (1'b0 == acc_thresh_out_full_n) | (gray_thresh_out_full_n == 1'b0) | (circles_cols_out_full_n == 1'b0) | (circles_rows_out_full_n == 1'b0) | (dy_cols_V_out_full_n == 1'b0) | (dy_rows_V_out_full_n == 1'b0) | (real_start == 1'b0) | (dx_cols_V_out_full_n == 1'b0) | (dx_rows_V_out_full_n == 1'b0) | (edge_cols_V_out_full_n == 1'b0) | (edge_rows_V_out_full_n == 1'b0) | (src_cols_V_out_full_n == 1'b0) | (src_rows_V_out_full_n == 1'b0) | (max_radius_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        dx_cols_V_out_write = 1'b1;
    end else begin
        dx_cols_V_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        dx_rows_V_out_blk_n = dx_rows_V_out_full_n;
    end else begin
        dx_rows_V_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((min_radius_out_full_n == 1'b0) | (min_dist_out_full_n == 1'b0) | (1'b0 == acc_thresh_out_full_n) | (gray_thresh_out_full_n == 1'b0) | (circles_cols_out_full_n == 1'b0) | (circles_rows_out_full_n == 1'b0) | (dy_cols_V_out_full_n == 1'b0) | (dy_rows_V_out_full_n == 1'b0) | (real_start == 1'b0) | (dx_cols_V_out_full_n == 1'b0) | (dx_rows_V_out_full_n == 1'b0) | (edge_cols_V_out_full_n == 1'b0) | (edge_rows_V_out_full_n == 1'b0) | (src_cols_V_out_full_n == 1'b0) | (src_rows_V_out_full_n == 1'b0) | (max_radius_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        dx_rows_V_out_write = 1'b1;
    end else begin
        dx_rows_V_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        dy_cols_V_out_blk_n = dy_cols_V_out_full_n;
    end else begin
        dy_cols_V_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((min_radius_out_full_n == 1'b0) | (min_dist_out_full_n == 1'b0) | (1'b0 == acc_thresh_out_full_n) | (gray_thresh_out_full_n == 1'b0) | (circles_cols_out_full_n == 1'b0) | (circles_rows_out_full_n == 1'b0) | (dy_cols_V_out_full_n == 1'b0) | (dy_rows_V_out_full_n == 1'b0) | (real_start == 1'b0) | (dx_cols_V_out_full_n == 1'b0) | (dx_rows_V_out_full_n == 1'b0) | (edge_cols_V_out_full_n == 1'b0) | (edge_rows_V_out_full_n == 1'b0) | (src_cols_V_out_full_n == 1'b0) | (src_rows_V_out_full_n == 1'b0) | (max_radius_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        dy_cols_V_out_write = 1'b1;
    end else begin
        dy_cols_V_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        dy_rows_V_out_blk_n = dy_rows_V_out_full_n;
    end else begin
        dy_rows_V_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((min_radius_out_full_n == 1'b0) | (min_dist_out_full_n == 1'b0) | (1'b0 == acc_thresh_out_full_n) | (gray_thresh_out_full_n == 1'b0) | (circles_cols_out_full_n == 1'b0) | (circles_rows_out_full_n == 1'b0) | (dy_cols_V_out_full_n == 1'b0) | (dy_rows_V_out_full_n == 1'b0) | (real_start == 1'b0) | (dx_cols_V_out_full_n == 1'b0) | (dx_rows_V_out_full_n == 1'b0) | (edge_cols_V_out_full_n == 1'b0) | (edge_rows_V_out_full_n == 1'b0) | (src_cols_V_out_full_n == 1'b0) | (src_rows_V_out_full_n == 1'b0) | (max_radius_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        dy_rows_V_out_write = 1'b1;
    end else begin
        dy_rows_V_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        edge_cols_V_out_blk_n = edge_cols_V_out_full_n;
    end else begin
        edge_cols_V_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((min_radius_out_full_n == 1'b0) | (min_dist_out_full_n == 1'b0) | (1'b0 == acc_thresh_out_full_n) | (gray_thresh_out_full_n == 1'b0) | (circles_cols_out_full_n == 1'b0) | (circles_rows_out_full_n == 1'b0) | (dy_cols_V_out_full_n == 1'b0) | (dy_rows_V_out_full_n == 1'b0) | (real_start == 1'b0) | (dx_cols_V_out_full_n == 1'b0) | (dx_rows_V_out_full_n == 1'b0) | (edge_cols_V_out_full_n == 1'b0) | (edge_rows_V_out_full_n == 1'b0) | (src_cols_V_out_full_n == 1'b0) | (src_rows_V_out_full_n == 1'b0) | (max_radius_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        edge_cols_V_out_write = 1'b1;
    end else begin
        edge_cols_V_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        edge_rows_V_out_blk_n = edge_rows_V_out_full_n;
    end else begin
        edge_rows_V_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((min_radius_out_full_n == 1'b0) | (min_dist_out_full_n == 1'b0) | (1'b0 == acc_thresh_out_full_n) | (gray_thresh_out_full_n == 1'b0) | (circles_cols_out_full_n == 1'b0) | (circles_rows_out_full_n == 1'b0) | (dy_cols_V_out_full_n == 1'b0) | (dy_rows_V_out_full_n == 1'b0) | (real_start == 1'b0) | (dx_cols_V_out_full_n == 1'b0) | (dx_rows_V_out_full_n == 1'b0) | (edge_cols_V_out_full_n == 1'b0) | (edge_rows_V_out_full_n == 1'b0) | (src_cols_V_out_full_n == 1'b0) | (src_rows_V_out_full_n == 1'b0) | (max_radius_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        edge_rows_V_out_write = 1'b1;
    end else begin
        edge_rows_V_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        gray_thresh_out_blk_n = gray_thresh_out_full_n;
    end else begin
        gray_thresh_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((min_radius_out_full_n == 1'b0) | (min_dist_out_full_n == 1'b0) | (1'b0 == acc_thresh_out_full_n) | (gray_thresh_out_full_n == 1'b0) | (circles_cols_out_full_n == 1'b0) | (circles_rows_out_full_n == 1'b0) | (dy_cols_V_out_full_n == 1'b0) | (dy_rows_V_out_full_n == 1'b0) | (real_start == 1'b0) | (dx_cols_V_out_full_n == 1'b0) | (dx_rows_V_out_full_n == 1'b0) | (edge_cols_V_out_full_n == 1'b0) | (edge_rows_V_out_full_n == 1'b0) | (src_cols_V_out_full_n == 1'b0) | (src_rows_V_out_full_n == 1'b0) | (max_radius_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        gray_thresh_out_write = 1'b1;
    end else begin
        gray_thresh_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((min_radius_out_full_n == 1'b0) | (min_dist_out_full_n == 1'b0) | (1'b0 == acc_thresh_out_full_n) | (gray_thresh_out_full_n == 1'b0) | (circles_cols_out_full_n == 1'b0) | (circles_rows_out_full_n == 1'b0) | (dy_cols_V_out_full_n == 1'b0) | (dy_rows_V_out_full_n == 1'b0) | (real_start == 1'b0) | (dx_cols_V_out_full_n == 1'b0) | (dx_rows_V_out_full_n == 1'b0) | (edge_cols_V_out_full_n == 1'b0) | (edge_rows_V_out_full_n == 1'b0) | (src_cols_V_out_full_n == 1'b0) | (src_rows_V_out_full_n == 1'b0) | (max_radius_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        max_radius_out_blk_n = max_radius_out_full_n;
    end else begin
        max_radius_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((min_radius_out_full_n == 1'b0) | (min_dist_out_full_n == 1'b0) | (1'b0 == acc_thresh_out_full_n) | (gray_thresh_out_full_n == 1'b0) | (circles_cols_out_full_n == 1'b0) | (circles_rows_out_full_n == 1'b0) | (dy_cols_V_out_full_n == 1'b0) | (dy_rows_V_out_full_n == 1'b0) | (real_start == 1'b0) | (dx_cols_V_out_full_n == 1'b0) | (dx_rows_V_out_full_n == 1'b0) | (edge_cols_V_out_full_n == 1'b0) | (edge_rows_V_out_full_n == 1'b0) | (src_cols_V_out_full_n == 1'b0) | (src_rows_V_out_full_n == 1'b0) | (max_radius_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        max_radius_out_write = 1'b1;
    end else begin
        max_radius_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        min_dist_out_blk_n = min_dist_out_full_n;
    end else begin
        min_dist_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((min_radius_out_full_n == 1'b0) | (min_dist_out_full_n == 1'b0) | (1'b0 == acc_thresh_out_full_n) | (gray_thresh_out_full_n == 1'b0) | (circles_cols_out_full_n == 1'b0) | (circles_rows_out_full_n == 1'b0) | (dy_cols_V_out_full_n == 1'b0) | (dy_rows_V_out_full_n == 1'b0) | (real_start == 1'b0) | (dx_cols_V_out_full_n == 1'b0) | (dx_rows_V_out_full_n == 1'b0) | (edge_cols_V_out_full_n == 1'b0) | (edge_rows_V_out_full_n == 1'b0) | (src_cols_V_out_full_n == 1'b0) | (src_rows_V_out_full_n == 1'b0) | (max_radius_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        min_dist_out_write = 1'b1;
    end else begin
        min_dist_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        min_radius_out_blk_n = min_radius_out_full_n;
    end else begin
        min_radius_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((min_radius_out_full_n == 1'b0) | (min_dist_out_full_n == 1'b0) | (1'b0 == acc_thresh_out_full_n) | (gray_thresh_out_full_n == 1'b0) | (circles_cols_out_full_n == 1'b0) | (circles_rows_out_full_n == 1'b0) | (dy_cols_V_out_full_n == 1'b0) | (dy_rows_V_out_full_n == 1'b0) | (real_start == 1'b0) | (dx_cols_V_out_full_n == 1'b0) | (dx_rows_V_out_full_n == 1'b0) | (edge_cols_V_out_full_n == 1'b0) | (edge_rows_V_out_full_n == 1'b0) | (src_cols_V_out_full_n == 1'b0) | (src_rows_V_out_full_n == 1'b0) | (max_radius_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        min_radius_out_write = 1'b1;
    end else begin
        min_radius_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_full_n == 1'b0) & (start_once_reg == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        src_cols_V_out_blk_n = src_cols_V_out_full_n;
    end else begin
        src_cols_V_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((min_radius_out_full_n == 1'b0) | (min_dist_out_full_n == 1'b0) | (1'b0 == acc_thresh_out_full_n) | (gray_thresh_out_full_n == 1'b0) | (circles_cols_out_full_n == 1'b0) | (circles_rows_out_full_n == 1'b0) | (dy_cols_V_out_full_n == 1'b0) | (dy_rows_V_out_full_n == 1'b0) | (real_start == 1'b0) | (dx_cols_V_out_full_n == 1'b0) | (dx_rows_V_out_full_n == 1'b0) | (edge_cols_V_out_full_n == 1'b0) | (edge_rows_V_out_full_n == 1'b0) | (src_cols_V_out_full_n == 1'b0) | (src_rows_V_out_full_n == 1'b0) | (max_radius_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        src_cols_V_out_write = 1'b1;
    end else begin
        src_cols_V_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        src_rows_V_out_blk_n = src_rows_V_out_full_n;
    end else begin
        src_rows_V_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((min_radius_out_full_n == 1'b0) | (min_dist_out_full_n == 1'b0) | (1'b0 == acc_thresh_out_full_n) | (gray_thresh_out_full_n == 1'b0) | (circles_cols_out_full_n == 1'b0) | (circles_rows_out_full_n == 1'b0) | (dy_cols_V_out_full_n == 1'b0) | (dy_rows_V_out_full_n == 1'b0) | (real_start == 1'b0) | (dx_cols_V_out_full_n == 1'b0) | (dx_rows_V_out_full_n == 1'b0) | (edge_cols_V_out_full_n == 1'b0) | (edge_rows_V_out_full_n == 1'b0) | (src_cols_V_out_full_n == 1'b0) | (src_rows_V_out_full_n == 1'b0) | (max_radius_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        src_rows_V_out_write = 1'b1;
    end else begin
        src_rows_V_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign acc_thresh_out_din = acc_thresh;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_state1 = ((min_radius_out_full_n == 1'b0) | (min_dist_out_full_n == 1'b0) | (1'b0 == acc_thresh_out_full_n) | (gray_thresh_out_full_n == 1'b0) | (circles_cols_out_full_n == 1'b0) | (circles_rows_out_full_n == 1'b0) | (dy_cols_V_out_full_n == 1'b0) | (dy_rows_V_out_full_n == 1'b0) | (real_start == 1'b0) | (dx_cols_V_out_full_n == 1'b0) | (dx_rows_V_out_full_n == 1'b0) | (edge_cols_V_out_full_n == 1'b0) | (edge_rows_V_out_full_n == 1'b0) | (src_cols_V_out_full_n == 1'b0) | (src_rows_V_out_full_n == 1'b0) | (max_radius_out_full_n == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_ready = internal_ap_ready;

assign circles_cols_out_din = 8'd100;

assign circles_rows_out_din = 3'd3;

assign dx_cols_V_out_din = cols;

assign dx_rows_V_out_din = rows;

assign dy_cols_V_out_din = cols;

assign dy_rows_V_out_din = rows;

assign edge_cols_V_out_din = cols;

assign edge_rows_V_out_din = rows;

assign gray_thresh_out_din = gray_thresh;

assign max_radius_out_din = max_radius;

assign min_dist_out_din = min_dist;

assign min_radius_out_din = min_radius;

assign src_cols_V_out_din = cols;

assign src_rows_V_out_din = rows;

assign start_out = real_start;

endmodule //Block_Mat_exit414_pr
