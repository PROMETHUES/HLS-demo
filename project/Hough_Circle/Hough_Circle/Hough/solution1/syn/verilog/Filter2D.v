// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Filter2D (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_src_rows_V_read,
        p_src_cols_V_read,
        p_src_data_stream_V_dout,
        p_src_data_stream_V_empty_n,
        p_src_data_stream_V_read,
        p_dst_data_stream_V_din,
        p_dst_data_stream_V_full_n,
        p_dst_data_stream_V_write,
        p_kernel_val_0_V_1_read,
        p_kernel_val_0_V_2_read,
        p_kernel_val_1_V_0_read,
        p_kernel_val_1_V_2_read,
        p_kernel_val_2_V_0_read,
        p_kernel_val_2_V_1_read
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state5 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] p_src_rows_V_read;
input  [31:0] p_src_cols_V_read;
input  [7:0] p_src_data_stream_V_dout;
input   p_src_data_stream_V_empty_n;
output   p_src_data_stream_V_read;
output  [15:0] p_dst_data_stream_V_din;
input   p_dst_data_stream_V_full_n;
output   p_dst_data_stream_V_write;
input  [1:0] p_kernel_val_0_V_1_read;
input  [1:0] p_kernel_val_0_V_2_read;
input  [2:0] p_kernel_val_1_V_0_read;
input  [3:0] p_kernel_val_1_V_2_read;
input  [1:0] p_kernel_val_2_V_0_read;
input  [2:0] p_kernel_val_2_V_1_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg p_src_data_stream_V_read;
reg p_dst_data_stream_V_write;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    p_src_data_stream_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond388_i_reg_1371;
reg   [0:0] or_cond_i_i_reg_1380;
reg   [0:0] icmp_reg_1336;
reg   [0:0] tmp_33_reg_1327;
reg    p_dst_data_stream_V_blk_n;
reg   [0:0] or_cond_i_reg_1416;
reg   [31:0] t_V_2_reg_285;
wire   [31:0] tmp_s_fu_296_p2;
reg   [31:0] tmp_s_reg_1254;
wire   [31:0] tmp_28_fu_302_p2;
reg   [31:0] tmp_28_reg_1259;
wire   [31:0] p_neg393_i_fu_308_p2;
reg   [31:0] p_neg393_i_reg_1264;
wire   [31:0] tmp_29_fu_314_p2;
reg   [31:0] tmp_29_reg_1271;
wire   [31:0] tmp_31_fu_326_p2;
reg   [31:0] tmp_31_reg_1276;
wire  signed [9:0] OP2_V_0_1_cast_fu_332_p1;
reg  signed [9:0] OP2_V_0_1_cast_reg_1283;
wire  signed [9:0] OP2_V_0_2_cast_fu_336_p1;
reg  signed [9:0] OP2_V_0_2_cast_reg_1288;
wire  signed [10:0] OP2_V_1_cast_fu_340_p1;
reg  signed [10:0] OP2_V_1_cast_reg_1293;
wire   [11:0] OP2_V_1_2_cast_fu_344_p1;
reg   [11:0] OP2_V_1_2_cast_reg_1298;
wire  signed [9:0] OP2_V_2_cast_fu_348_p1;
reg  signed [9:0] OP2_V_2_cast_reg_1303;
wire   [10:0] OP2_V_2_1_cast_fu_352_p1;
reg   [10:0] OP2_V_2_1_cast_reg_1308;
wire   [31:0] tmp_32_fu_362_p2;
reg   [31:0] tmp_32_reg_1313;
wire   [0:0] exitcond389_i_fu_368_p2;
wire    ap_CS_fsm_state2;
wire   [31:0] i_V_fu_373_p2;
reg   [31:0] i_V_reg_1322;
wire   [0:0] tmp_33_fu_379_p2;
wire   [0:0] tmp_251_0_not_fu_384_p2;
reg   [0:0] tmp_251_0_not_reg_1331;
wire   [0:0] icmp_fu_400_p2;
wire   [0:0] tmp_34_fu_406_p2;
reg   [0:0] tmp_34_reg_1341;
wire   [0:0] tmp_295_1_fu_412_p2;
reg   [0:0] tmp_295_1_reg_1345;
wire   [0:0] tmp_35_fu_418_p2;
reg   [0:0] tmp_35_reg_1349;
wire   [1:0] tmp_88_fu_633_p1;
reg   [1:0] tmp_88_reg_1356;
wire   [1:0] tmp_89_fu_658_p1;
reg   [1:0] tmp_89_reg_1361;
wire   [1:0] tmp_90_fu_683_p1;
reg   [1:0] tmp_90_reg_1366;
wire   [0:0] exitcond388_i_fu_687_p2;
wire    ap_block_state3_pp0_stage0_iter0;
reg    ap_predicate_op166_read_state4;
reg    ap_predicate_op177_read_state4;
reg    ap_predicate_op227_write_state4;
reg    ap_block_state4_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [31:0] j_V_fu_692_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] or_cond_i_i_fu_739_p2;
wire   [0:0] brmerge_fu_816_p2;
reg   [0:0] brmerge_reg_1384;
reg   [8:0] k_buf_0_val_3_addr_reg_1391;
wire   [1:0] tmp_94_fu_828_p1;
reg   [1:0] tmp_94_reg_1397;
reg   [8:0] k_buf_0_val_4_addr_reg_1404;
reg   [8:0] k_buf_0_val_5_addr_reg_1410;
wire   [0:0] or_cond_i_fu_832_p2;
reg    ap_block_pp0_stage0_subdone;
wire   [8:0] k_buf_0_val_3_address0;
reg    k_buf_0_val_3_ce0;
wire   [7:0] k_buf_0_val_3_q0;
reg    k_buf_0_val_3_ce1;
reg    k_buf_0_val_3_we1;
wire   [8:0] k_buf_0_val_4_address0;
reg    k_buf_0_val_4_ce0;
wire   [7:0] k_buf_0_val_4_q0;
reg    k_buf_0_val_4_ce1;
reg    k_buf_0_val_4_we1;
reg   [7:0] k_buf_0_val_4_d1;
wire   [8:0] k_buf_0_val_5_address0;
reg    k_buf_0_val_5_ce0;
wire   [7:0] k_buf_0_val_5_q0;
reg    k_buf_0_val_5_ce1;
reg    k_buf_0_val_5_we1;
reg   [7:0] k_buf_0_val_5_d1;
reg   [31:0] t_V_reg_274;
wire    ap_CS_fsm_state5;
wire   [63:0] tmp_42_fu_821_p1;
reg    ap_block_pp0_stage0_01001;
reg   [7:0] src_kernel_win_0_va_fu_100;
wire   [7:0] src_kernel_win_0_va_6_fu_956_p3;
reg   [7:0] src_kernel_win_0_va_1_fu_104;
reg   [7:0] src_kernel_win_0_va_2_fu_108;
wire   [7:0] src_kernel_win_0_va_7_fu_974_p3;
reg   [7:0] src_kernel_win_0_va_3_fu_112;
reg   [7:0] src_kernel_win_0_va_4_fu_116;
wire   [7:0] src_kernel_win_0_va_8_fu_992_p3;
reg   [7:0] src_kernel_win_0_va_5_fu_120;
reg   [7:0] right_border_buf_0_s_fu_124;
wire   [7:0] col_buf_0_val_0_0_fu_866_p3;
reg   [7:0] right_border_buf_0_1_fu_128;
reg   [7:0] right_border_buf_0_2_fu_132;
reg   [7:0] right_border_buf_0_3_fu_136;
wire   [7:0] col_buf_0_val_1_0_fu_884_p3;
reg   [7:0] right_border_buf_0_4_fu_140;
reg   [7:0] right_border_buf_0_5_fu_144;
wire   [7:0] col_buf_0_val_2_0_fu_902_p3;
wire   [31:0] tmp_79_fu_320_p2;
wire   [31:0] tmp_80_fu_356_p2;
wire   [30:0] tmp_81_fu_390_p4;
wire   [31:0] tmp_36_fu_423_p2;
wire   [0:0] tmp_82_fu_429_p3;
wire   [0:0] tmp_37_fu_443_p2;
wire   [0:0] rev_fu_437_p2;
wire   [0:0] tmp_83_fu_454_p3;
wire   [31:0] p_assign_7_fu_462_p2;
wire   [31:0] p_p2_i425_i_fu_468_p3;
wire   [31:0] p_assign_6_1_fu_486_p2;
wire   [0:0] tmp_84_fu_492_p3;
wire   [0:0] tmp_321_1_fu_506_p2;
wire   [0:0] rev1_fu_500_p2;
wire   [0:0] tmp_85_fu_517_p3;
wire   [31:0] p_assign_7_1_fu_525_p2;
wire   [31:0] p_p2_i425_i_1_fu_531_p3;
wire   [31:0] p_assign_6_2_fu_549_p2;
wire   [0:0] tmp_86_fu_555_p3;
wire   [0:0] tmp_321_2_fu_569_p2;
wire   [0:0] rev2_fu_563_p2;
wire   [0:0] tmp_87_fu_580_p3;
wire   [31:0] p_assign_7_2_fu_588_p2;
wire   [31:0] p_p2_i425_i_2_fu_594_p3;
wire   [0:0] tmp_38_fu_476_p2;
wire   [31:0] p_assign_8_fu_481_p2;
wire   [0:0] or_cond_i424_i_fu_448_p2;
wire   [31:0] p_p2_i425_i_p_assign_8_fu_612_p3;
wire   [31:0] y_1_fu_620_p3;
wire   [31:0] row_assign_s_fu_628_p2;
wire   [0:0] tmp_331_1_fu_539_p2;
wire   [31:0] p_assign_8_1_fu_544_p2;
wire   [0:0] or_cond_i424_i_1_fu_511_p2;
wire   [31:0] p_p2_i425_i_1_p_assig_fu_637_p3;
wire   [31:0] y_1_1_fu_645_p3;
wire   [31:0] row_assign_10_1_fu_653_p2;
wire   [0:0] tmp_331_2_fu_602_p2;
wire   [31:0] p_assign_8_2_fu_607_p2;
wire   [0:0] or_cond_i424_i_2_fu_574_p2;
wire   [31:0] p_p2_i425_i_2_p_assig_fu_662_p3;
wire   [31:0] y_1_2_fu_670_p3;
wire   [31:0] row_assign_10_2_fu_678_p2;
wire   [30:0] tmp_91_fu_698_p4;
wire   [31:0] ImagLoc_x_fu_714_p2;
wire   [0:0] tmp_92_fu_720_p3;
wire   [0:0] tmp_40_fu_734_p2;
wire   [0:0] rev3_fu_728_p2;
wire   [0:0] tmp_93_fu_745_p3;
wire   [31:0] p_assign_1_fu_753_p2;
wire   [31:0] p_p2_i_i_fu_759_p3;
wire   [31:0] p_assign_2_fu_772_p2;
wire   [0:0] tmp_46_not_fu_785_p2;
wire   [0:0] tmp_41_fu_767_p2;
wire   [0:0] sel_tmp7_fu_791_p2;
wire   [0:0] sel_tmp8_fu_797_p2;
wire   [31:0] p_assign_3_fu_777_p3;
wire   [31:0] x_fu_803_p3;
wire   [31:0] col_assign_1_fu_811_p2;
wire   [0:0] icmp1_fu_708_p2;
wire   [7:0] tmp_9_fu_855_p5;
wire   [7:0] tmp_10_fu_873_p5;
wire   [7:0] tmp_11_fu_891_p5;
wire   [7:0] tmp_12_fu_945_p5;
wire   [7:0] tmp_13_fu_963_p5;
wire   [7:0] tmp_14_fu_981_p5;
wire   [8:0] OP1_V_0_cast_fu_1014_p1;
wire  signed [8:0] r_V_5_fu_1018_p2;
wire  signed [10:0] grp_fu_1121_p3;
wire  signed [9:0] grp_fu_1144_p3;
wire  signed [10:0] grp_fu_1152_p3;
wire  signed [11:0] tmp22_cast_fu_1062_p1;
wire  signed [11:0] grp_fu_1136_p3;
(* use_dsp48 = "no" *) wire   [11:0] p_Val2_22_fu_1065_p2;
wire   [7:0] grp_fu_1114_p0;
wire  signed [1:0] grp_fu_1114_p1;
wire   [7:0] grp_fu_1121_p0;
wire  signed [1:0] grp_fu_1121_p1;
wire  signed [10:0] grp_fu_1114_p3;
wire   [7:0] grp_fu_1129_p0;
wire  signed [2:0] grp_fu_1129_p1;
wire   [7:0] grp_fu_1136_p0;
wire   [3:0] grp_fu_1136_p1;
wire  signed [11:0] grp_fu_1129_p3;
wire   [7:0] grp_fu_1144_p0;
wire  signed [1:0] grp_fu_1144_p1;
wire   [7:0] grp_fu_1144_p2;
wire   [7:0] grp_fu_1152_p0;
wire   [2:0] grp_fu_1152_p1;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [9:0] grp_fu_1114_p00;
wire   [9:0] grp_fu_1121_p00;
wire   [10:0] grp_fu_1129_p00;
wire   [11:0] grp_fu_1136_p00;
wire   [9:0] grp_fu_1144_p00;
wire   [9:0] grp_fu_1144_p20;
wire   [10:0] grp_fu_1152_p00;
reg    ap_condition_311;
reg    ap_condition_53;
reg    ap_condition_305;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
end

Filter2D_k_buf_0_bkb #(
    .DataWidth( 8 ),
    .AddressRange( 320 ),
    .AddressWidth( 9 ))
k_buf_0_val_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_3_address0),
    .ce0(k_buf_0_val_3_ce0),
    .q0(k_buf_0_val_3_q0),
    .address1(k_buf_0_val_3_addr_reg_1391),
    .ce1(k_buf_0_val_3_ce1),
    .we1(k_buf_0_val_3_we1),
    .d1(p_src_data_stream_V_dout)
);

Filter2D_k_buf_0_bkb #(
    .DataWidth( 8 ),
    .AddressRange( 320 ),
    .AddressWidth( 9 ))
k_buf_0_val_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_4_address0),
    .ce0(k_buf_0_val_4_ce0),
    .q0(k_buf_0_val_4_q0),
    .address1(k_buf_0_val_4_addr_reg_1404),
    .ce1(k_buf_0_val_4_ce1),
    .we1(k_buf_0_val_4_we1),
    .d1(k_buf_0_val_4_d1)
);

Filter2D_k_buf_0_bkb #(
    .DataWidth( 8 ),
    .AddressRange( 320 ),
    .AddressWidth( 9 ))
k_buf_0_val_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_5_address0),
    .ce0(k_buf_0_val_5_ce0),
    .q0(k_buf_0_val_5_q0),
    .address1(k_buf_0_val_5_addr_reg_1410),
    .ce1(k_buf_0_val_5_ce1),
    .we1(k_buf_0_val_5_we1),
    .d1(k_buf_0_val_5_d1)
);

HoughCircles_CoreeOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
HoughCircles_CoreeOg_U56(
    .din0(right_border_buf_0_s_fu_124),
    .din1(right_border_buf_0_1_fu_128),
    .din2(8'd0),
    .din3(tmp_94_reg_1397),
    .dout(tmp_9_fu_855_p5)
);

HoughCircles_CoreeOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
HoughCircles_CoreeOg_U57(
    .din0(right_border_buf_0_3_fu_136),
    .din1(right_border_buf_0_4_fu_140),
    .din2(8'd0),
    .din3(tmp_94_reg_1397),
    .dout(tmp_10_fu_873_p5)
);

HoughCircles_CoreeOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
HoughCircles_CoreeOg_U58(
    .din0(right_border_buf_0_5_fu_144),
    .din1(right_border_buf_0_2_fu_132),
    .din2(8'd0),
    .din3(tmp_94_reg_1397),
    .dout(tmp_11_fu_891_p5)
);

HoughCircles_CoreeOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
HoughCircles_CoreeOg_U59(
    .din0(col_buf_0_val_0_0_fu_866_p3),
    .din1(col_buf_0_val_1_0_fu_884_p3),
    .din2(col_buf_0_val_2_0_fu_902_p3),
    .din3(tmp_88_reg_1356),
    .dout(tmp_12_fu_945_p5)
);

HoughCircles_CoreeOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
HoughCircles_CoreeOg_U60(
    .din0(col_buf_0_val_0_0_fu_866_p3),
    .din1(col_buf_0_val_1_0_fu_884_p3),
    .din2(col_buf_0_val_2_0_fu_902_p3),
    .din3(tmp_89_reg_1361),
    .dout(tmp_13_fu_963_p5)
);

HoughCircles_CoreeOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
HoughCircles_CoreeOg_U61(
    .din0(col_buf_0_val_0_0_fu_866_p3),
    .din1(col_buf_0_val_1_0_fu_884_p3),
    .din2(col_buf_0_val_2_0_fu_902_p3),
    .din3(tmp_90_reg_1366),
    .dout(tmp_14_fu_981_p5)
);

HoughCircles_CorefYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .din2_WIDTH( 9 ),
    .dout_WIDTH( 11 ))
HoughCircles_CorefYi_U62(
    .din0(grp_fu_1114_p0),
    .din1(grp_fu_1114_p1),
    .din2(r_V_5_fu_1018_p2),
    .dout(grp_fu_1114_p3)
);

HoughCircles_Coreg8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .din2_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
HoughCircles_Coreg8j_U63(
    .din0(grp_fu_1121_p0),
    .din1(grp_fu_1121_p1),
    .din2(grp_fu_1114_p3),
    .dout(grp_fu_1121_p3)
);

HoughCircles_Corehbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 3 ),
    .din2_WIDTH( 11 ),
    .dout_WIDTH( 12 ))
HoughCircles_Corehbi_U64(
    .din0(grp_fu_1129_p0),
    .din1(grp_fu_1129_p1),
    .din2(grp_fu_1121_p3),
    .dout(grp_fu_1129_p3)
);

HoughCircles_Coreibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
HoughCircles_Coreibs_U65(
    .din0(grp_fu_1136_p0),
    .din1(grp_fu_1136_p1),
    .din2(grp_fu_1129_p3),
    .dout(grp_fu_1136_p3)
);

HoughCircles_CorejbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 10 ))
HoughCircles_CorejbC_U66(
    .din0(grp_fu_1144_p0),
    .din1(grp_fu_1144_p1),
    .din2(grp_fu_1144_p2),
    .dout(grp_fu_1144_p3)
);

HoughCircles_CorekbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 3 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 11 ))
HoughCircles_CorekbM_U67(
    .din0(grp_fu_1152_p0),
    .din1(grp_fu_1152_p1),
    .din2(grp_fu_1144_p3),
    .dout(grp_fu_1152_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((exitcond388_i_fu_687_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((exitcond389_i_fu_368_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((exitcond389_i_fu_368_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond388_i_fu_687_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        t_V_2_reg_285 <= j_V_fu_692_p2;
    end else if (((exitcond389_i_fu_368_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        t_V_2_reg_285 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        t_V_reg_274 <= i_V_reg_1322;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        t_V_reg_274 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        OP2_V_0_1_cast_reg_1283 <= OP2_V_0_1_cast_fu_332_p1;
        OP2_V_0_2_cast_reg_1288 <= OP2_V_0_2_cast_fu_336_p1;
        OP2_V_1_2_cast_reg_1298[3 : 0] <= OP2_V_1_2_cast_fu_344_p1[3 : 0];
        OP2_V_1_cast_reg_1293 <= OP2_V_1_cast_fu_340_p1;
        OP2_V_2_1_cast_reg_1308[2 : 0] <= OP2_V_2_1_cast_fu_352_p1[2 : 0];
        OP2_V_2_cast_reg_1303 <= OP2_V_2_cast_fu_348_p1;
        p_neg393_i_reg_1264 <= p_neg393_i_fu_308_p2;
        tmp_28_reg_1259 <= tmp_28_fu_302_p2;
        tmp_29_reg_1271 <= tmp_29_fu_314_p2;
        tmp_31_reg_1276[31 : 1] <= tmp_31_fu_326_p2[31 : 1];
        tmp_32_reg_1313[31 : 1] <= tmp_32_fu_362_p2[31 : 1];
        tmp_s_reg_1254 <= tmp_s_fu_296_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond388_i_fu_687_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        brmerge_reg_1384 <= brmerge_fu_816_p2;
        k_buf_0_val_3_addr_reg_1391 <= tmp_42_fu_821_p1;
        k_buf_0_val_4_addr_reg_1404 <= tmp_42_fu_821_p1;
        k_buf_0_val_5_addr_reg_1410 <= tmp_42_fu_821_p1;
        or_cond_i_i_reg_1380 <= or_cond_i_i_fu_739_p2;
        or_cond_i_reg_1416 <= or_cond_i_fu_832_p2;
        tmp_94_reg_1397 <= tmp_94_fu_828_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exitcond388_i_reg_1371 <= exitcond388_i_fu_687_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_V_reg_1322 <= i_V_fu_373_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond389_i_fu_368_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_reg_1336 <= icmp_fu_400_p2;
        tmp_251_0_not_reg_1331 <= tmp_251_0_not_fu_384_p2;
        tmp_295_1_reg_1345 <= tmp_295_1_fu_412_p2;
        tmp_33_reg_1327 <= tmp_33_fu_379_p2;
        tmp_34_reg_1341 <= tmp_34_fu_406_p2;
        tmp_35_reg_1349 <= tmp_35_fu_418_p2;
        tmp_88_reg_1356 <= tmp_88_fu_633_p1;
        tmp_89_reg_1361 <= tmp_89_fu_658_p1;
        tmp_90_reg_1366 <= tmp_90_fu_683_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op177_read_state4 == 1'b1))) begin
        right_border_buf_0_1_fu_128 <= right_border_buf_0_s_fu_124;
        right_border_buf_0_2_fu_132 <= right_border_buf_0_5_fu_144;
        right_border_buf_0_3_fu_136 <= col_buf_0_val_1_0_fu_884_p3;
        right_border_buf_0_4_fu_140 <= right_border_buf_0_3_fu_136;
        right_border_buf_0_5_fu_144 <= col_buf_0_val_2_0_fu_902_p3;
        right_border_buf_0_s_fu_124 <= col_buf_0_val_0_0_fu_866_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond388_i_reg_1371 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_1_fu_104 <= src_kernel_win_0_va_fu_100;
        src_kernel_win_0_va_2_fu_108 <= src_kernel_win_0_va_7_fu_974_p3;
        src_kernel_win_0_va_3_fu_112 <= src_kernel_win_0_va_2_fu_108;
        src_kernel_win_0_va_4_fu_116 <= src_kernel_win_0_va_8_fu_992_p3;
        src_kernel_win_0_va_5_fu_120 <= src_kernel_win_0_va_4_fu_116;
        src_kernel_win_0_va_fu_100 <= src_kernel_win_0_va_6_fu_956_p3;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((exitcond389_i_fu_368_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond389_i_fu_368_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_3_ce0 = 1'b1;
    end else begin
        k_buf_0_val_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_34_reg_1341 == 1'd1) & (or_cond_i_i_reg_1380 == 1'd1) & (icmp_reg_1336 == 1'd0) & (exitcond388_i_reg_1371 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op177_read_state4 == 1'b1)))) begin
        k_buf_0_val_3_ce1 = 1'b1;
    end else begin
        k_buf_0_val_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_34_reg_1341 == 1'd1) & (or_cond_i_i_reg_1380 == 1'd1) & (icmp_reg_1336 == 1'd0) & (exitcond388_i_reg_1371 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op177_read_state4 == 1'b1)))) begin
        k_buf_0_val_3_we1 = 1'b1;
    end else begin
        k_buf_0_val_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_4_ce0 = 1'b1;
    end else begin
        k_buf_0_val_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_295_1_reg_1345 == 1'd1) & (or_cond_i_i_reg_1380 == 1'd1) & (icmp_reg_1336 == 1'd0) & (exitcond388_i_reg_1371 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op177_read_state4 == 1'b1)))) begin
        k_buf_0_val_4_ce1 = 1'b1;
    end else begin
        k_buf_0_val_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_53)) begin
        if ((ap_predicate_op177_read_state4 == 1'b1)) begin
            k_buf_0_val_4_d1 = k_buf_0_val_3_q0;
        end else if ((1'b1 == ap_condition_311)) begin
            k_buf_0_val_4_d1 = p_src_data_stream_V_dout;
        end else begin
            k_buf_0_val_4_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_4_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_295_1_reg_1345 == 1'd1) & (or_cond_i_i_reg_1380 == 1'd1) & (icmp_reg_1336 == 1'd0) & (exitcond388_i_reg_1371 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op177_read_state4 == 1'b1)))) begin
        k_buf_0_val_4_we1 = 1'b1;
    end else begin
        k_buf_0_val_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_5_ce0 = 1'b1;
    end else begin
        k_buf_0_val_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_34_reg_1341 == 1'd1) & (or_cond_i_i_reg_1380 == 1'd1) & (icmp_reg_1336 == 1'd0) & (exitcond388_i_reg_1371 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op177_read_state4 == 1'b1)))) begin
        k_buf_0_val_5_ce1 = 1'b1;
    end else begin
        k_buf_0_val_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_53)) begin
        if ((ap_predicate_op177_read_state4 == 1'b1)) begin
            k_buf_0_val_5_d1 = k_buf_0_val_4_q0;
        end else if ((1'b1 == ap_condition_305)) begin
            k_buf_0_val_5_d1 = p_src_data_stream_V_dout;
        end else begin
            k_buf_0_val_5_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_5_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_34_reg_1341 == 1'd1) & (or_cond_i_i_reg_1380 == 1'd1) & (icmp_reg_1336 == 1'd0) & (exitcond388_i_reg_1371 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op177_read_state4 == 1'b1)))) begin
        k_buf_0_val_5_we1 = 1'b1;
    end else begin
        k_buf_0_val_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((or_cond_i_reg_1416 == 1'd1) & (exitcond388_i_reg_1371 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_dst_data_stream_V_blk_n = p_dst_data_stream_V_full_n;
    end else begin
        p_dst_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op227_write_state4 == 1'b1))) begin
        p_dst_data_stream_V_write = 1'b1;
    end else begin
        p_dst_data_stream_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_33_reg_1327 == 1'd1) & (icmp_reg_1336 == 1'd1) & (or_cond_i_i_reg_1380 == 1'd1) & (exitcond388_i_reg_1371 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((or_cond_i_i_reg_1380 == 1'd1) & (icmp_reg_1336 == 1'd0) & (exitcond388_i_reg_1371 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        p_src_data_stream_V_blk_n = p_src_data_stream_V_empty_n;
    end else begin
        p_src_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op177_read_state4 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op166_read_state4 == 1'b1)))) begin
        p_src_data_stream_V_read = 1'b1;
    end else begin
        p_src_data_stream_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond389_i_fu_368_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ImagLoc_x_fu_714_p2 = ($signed(32'd4294967295) + $signed(t_V_2_reg_285));

assign OP1_V_0_cast_fu_1014_p1 = src_kernel_win_0_va_5_fu_120;

assign OP2_V_0_1_cast_fu_332_p1 = $signed(p_kernel_val_0_V_1_read);

assign OP2_V_0_2_cast_fu_336_p1 = $signed(p_kernel_val_0_V_2_read);

assign OP2_V_1_2_cast_fu_344_p1 = p_kernel_val_1_V_2_read;

assign OP2_V_1_cast_fu_340_p1 = $signed(p_kernel_val_1_V_0_read);

assign OP2_V_2_1_cast_fu_352_p1 = p_kernel_val_2_V_1_read;

assign OP2_V_2_cast_fu_348_p1 = $signed(p_kernel_val_2_V_0_read);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((p_dst_data_stream_V_full_n == 1'b0) & (ap_predicate_op227_write_state4 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op177_read_state4 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op166_read_state4 == 1'b1))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((p_dst_data_stream_V_full_n == 1'b0) & (ap_predicate_op227_write_state4 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op177_read_state4 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op166_read_state4 == 1'b1))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((p_dst_data_stream_V_full_n == 1'b0) & (ap_predicate_op227_write_state4 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op177_read_state4 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op166_read_state4 == 1'b1))));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter1 = (((p_dst_data_stream_V_full_n == 1'b0) & (ap_predicate_op227_write_state4 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op177_read_state4 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op166_read_state4 == 1'b1)));
end

always @ (*) begin
    ap_condition_305 = ((tmp_34_reg_1341 == 1'd1) & (or_cond_i_i_reg_1380 == 1'd1) & (icmp_reg_1336 == 1'd0) & (exitcond388_i_reg_1371 == 1'd0));
end

always @ (*) begin
    ap_condition_311 = ((tmp_295_1_reg_1345 == 1'd1) & (or_cond_i_i_reg_1380 == 1'd1) & (icmp_reg_1336 == 1'd0) & (exitcond388_i_reg_1371 == 1'd0));
end

always @ (*) begin
    ap_condition_53 = ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_predicate_op166_read_state4 = ((or_cond_i_i_reg_1380 == 1'd1) & (icmp_reg_1336 == 1'd0) & (exitcond388_i_reg_1371 == 1'd0));
end

always @ (*) begin
    ap_predicate_op177_read_state4 = ((tmp_33_reg_1327 == 1'd1) & (icmp_reg_1336 == 1'd1) & (or_cond_i_i_reg_1380 == 1'd1) & (exitcond388_i_reg_1371 == 1'd0));
end

always @ (*) begin
    ap_predicate_op227_write_state4 = ((or_cond_i_reg_1416 == 1'd1) & (exitcond388_i_reg_1371 == 1'd0));
end

assign brmerge_fu_816_p2 = (tmp_40_fu_734_p2 | tmp_251_0_not_reg_1331);

assign col_assign_1_fu_811_p2 = (tmp_29_reg_1271 - x_fu_803_p3);

assign col_buf_0_val_0_0_fu_866_p3 = ((brmerge_reg_1384[0:0] === 1'b1) ? k_buf_0_val_3_q0 : tmp_9_fu_855_p5);

assign col_buf_0_val_1_0_fu_884_p3 = ((brmerge_reg_1384[0:0] === 1'b1) ? k_buf_0_val_4_q0 : tmp_10_fu_873_p5);

assign col_buf_0_val_2_0_fu_902_p3 = ((brmerge_reg_1384[0:0] === 1'b1) ? k_buf_0_val_5_q0 : tmp_11_fu_891_p5);

assign exitcond388_i_fu_687_p2 = ((t_V_2_reg_285 == tmp_s_reg_1254) ? 1'b1 : 1'b0);

assign exitcond389_i_fu_368_p2 = ((t_V_reg_274 == tmp_28_reg_1259) ? 1'b1 : 1'b0);

assign grp_fu_1114_p0 = grp_fu_1114_p00;

assign grp_fu_1114_p00 = src_kernel_win_0_va_4_fu_116;

assign grp_fu_1114_p1 = OP2_V_0_1_cast_reg_1283;

assign grp_fu_1121_p0 = grp_fu_1121_p00;

assign grp_fu_1121_p00 = src_kernel_win_0_va_8_fu_992_p3;

assign grp_fu_1121_p1 = OP2_V_0_2_cast_reg_1288;

assign grp_fu_1129_p0 = grp_fu_1129_p00;

assign grp_fu_1129_p00 = src_kernel_win_0_va_3_fu_112;

assign grp_fu_1129_p1 = OP2_V_1_cast_reg_1293;

assign grp_fu_1136_p0 = grp_fu_1136_p00;

assign grp_fu_1136_p00 = src_kernel_win_0_va_7_fu_974_p3;

assign grp_fu_1136_p1 = OP2_V_1_2_cast_reg_1298;

assign grp_fu_1144_p0 = grp_fu_1144_p00;

assign grp_fu_1144_p00 = src_kernel_win_0_va_1_fu_104;

assign grp_fu_1144_p1 = OP2_V_2_cast_reg_1303;

assign grp_fu_1144_p2 = grp_fu_1144_p20;

assign grp_fu_1144_p20 = src_kernel_win_0_va_6_fu_956_p3;

assign grp_fu_1152_p0 = grp_fu_1152_p00;

assign grp_fu_1152_p00 = src_kernel_win_0_va_fu_100;

assign grp_fu_1152_p1 = OP2_V_2_1_cast_reg_1308;

assign i_V_fu_373_p2 = (t_V_reg_274 + 32'd1);

assign icmp1_fu_708_p2 = ((tmp_91_fu_698_p4 != 31'd0) ? 1'b1 : 1'b0);

assign icmp_fu_400_p2 = ((tmp_81_fu_390_p4 != 31'd0) ? 1'b1 : 1'b0);

assign j_V_fu_692_p2 = (t_V_2_reg_285 + 32'd1);

assign k_buf_0_val_3_address0 = tmp_42_fu_821_p1;

assign k_buf_0_val_4_address0 = tmp_42_fu_821_p1;

assign k_buf_0_val_5_address0 = tmp_42_fu_821_p1;

assign or_cond_i424_i_1_fu_511_p2 = (tmp_321_1_fu_506_p2 & rev1_fu_500_p2);

assign or_cond_i424_i_2_fu_574_p2 = (tmp_321_2_fu_569_p2 & rev2_fu_563_p2);

assign or_cond_i424_i_fu_448_p2 = (tmp_37_fu_443_p2 & rev_fu_437_p2);

assign or_cond_i_fu_832_p2 = (icmp_reg_1336 & icmp1_fu_708_p2);

assign or_cond_i_i_fu_739_p2 = (tmp_40_fu_734_p2 & rev3_fu_728_p2);

assign p_Val2_22_fu_1065_p2 = ($signed(tmp22_cast_fu_1062_p1) + $signed(grp_fu_1136_p3));

assign p_assign_1_fu_753_p2 = (32'd1 - t_V_2_reg_285);

assign p_assign_2_fu_772_p2 = (tmp_32_reg_1313 - p_p2_i_i_fu_759_p3);

assign p_assign_3_fu_777_p3 = ((or_cond_i_i_fu_739_p2[0:0] === 1'b1) ? ImagLoc_x_fu_714_p2 : p_assign_2_fu_772_p2);

assign p_assign_6_1_fu_486_p2 = ($signed(32'd4294967294) + $signed(t_V_reg_274));

assign p_assign_6_2_fu_549_p2 = ($signed(32'd4294967293) + $signed(t_V_reg_274));

assign p_assign_7_1_fu_525_p2 = (32'd2 - t_V_reg_274);

assign p_assign_7_2_fu_588_p2 = (32'd3 - t_V_reg_274);

assign p_assign_7_fu_462_p2 = (32'd1 - t_V_reg_274);

assign p_assign_8_1_fu_544_p2 = (tmp_31_reg_1276 - p_p2_i425_i_1_fu_531_p3);

assign p_assign_8_2_fu_607_p2 = (tmp_31_reg_1276 - p_p2_i425_i_2_fu_594_p3);

assign p_assign_8_fu_481_p2 = (tmp_31_reg_1276 - p_p2_i425_i_fu_468_p3);

assign p_dst_data_stream_V_din = $signed(p_Val2_22_fu_1065_p2);

assign p_neg393_i_fu_308_p2 = ($signed(32'd4294967295) + $signed(p_src_rows_V_read));

assign p_p2_i425_i_1_fu_531_p3 = ((tmp_85_fu_517_p3[0:0] === 1'b1) ? p_assign_7_1_fu_525_p2 : p_assign_6_1_fu_486_p2);

assign p_p2_i425_i_1_p_assig_fu_637_p3 = ((tmp_331_1_fu_539_p2[0:0] === 1'b1) ? p_p2_i425_i_1_fu_531_p3 : p_assign_8_1_fu_544_p2);

assign p_p2_i425_i_2_fu_594_p3 = ((tmp_87_fu_580_p3[0:0] === 1'b1) ? p_assign_7_2_fu_588_p2 : p_assign_6_2_fu_549_p2);

assign p_p2_i425_i_2_p_assig_fu_662_p3 = ((tmp_331_2_fu_602_p2[0:0] === 1'b1) ? p_p2_i425_i_2_fu_594_p3 : p_assign_8_2_fu_607_p2);

assign p_p2_i425_i_fu_468_p3 = ((tmp_83_fu_454_p3[0:0] === 1'b1) ? p_assign_7_fu_462_p2 : tmp_36_fu_423_p2);

assign p_p2_i425_i_p_assign_8_fu_612_p3 = ((tmp_38_fu_476_p2[0:0] === 1'b1) ? p_p2_i425_i_fu_468_p3 : p_assign_8_fu_481_p2);

assign p_p2_i_i_fu_759_p3 = ((tmp_93_fu_745_p3[0:0] === 1'b1) ? p_assign_1_fu_753_p2 : ImagLoc_x_fu_714_p2);

assign r_V_5_fu_1018_p2 = (9'd0 - OP1_V_0_cast_fu_1014_p1);

assign rev1_fu_500_p2 = (tmp_84_fu_492_p3 ^ 1'd1);

assign rev2_fu_563_p2 = (tmp_86_fu_555_p3 ^ 1'd1);

assign rev3_fu_728_p2 = (tmp_92_fu_720_p3 ^ 1'd1);

assign rev_fu_437_p2 = (tmp_82_fu_429_p3 ^ 1'd1);

assign row_assign_10_1_fu_653_p2 = (p_neg393_i_reg_1264 - y_1_1_fu_645_p3);

assign row_assign_10_2_fu_678_p2 = (p_neg393_i_reg_1264 - y_1_2_fu_670_p3);

assign row_assign_s_fu_628_p2 = (p_neg393_i_reg_1264 - y_1_fu_620_p3);

assign sel_tmp7_fu_791_p2 = (tmp_92_fu_720_p3 | tmp_46_not_fu_785_p2);

assign sel_tmp8_fu_797_p2 = (tmp_41_fu_767_p2 & sel_tmp7_fu_791_p2);

assign src_kernel_win_0_va_6_fu_956_p3 = ((tmp_35_reg_1349[0:0] === 1'b1) ? tmp_12_fu_945_p5 : col_buf_0_val_0_0_fu_866_p3);

assign src_kernel_win_0_va_7_fu_974_p3 = ((tmp_35_reg_1349[0:0] === 1'b1) ? tmp_13_fu_963_p5 : col_buf_0_val_1_0_fu_884_p3);

assign src_kernel_win_0_va_8_fu_992_p3 = ((tmp_35_reg_1349[0:0] === 1'b1) ? tmp_14_fu_981_p5 : col_buf_0_val_2_0_fu_902_p3);

assign tmp22_cast_fu_1062_p1 = grp_fu_1152_p3;

assign tmp_251_0_not_fu_384_p2 = (tmp_33_fu_379_p2 ^ 1'd1);

assign tmp_28_fu_302_p2 = (32'd2 + p_src_rows_V_read);

assign tmp_295_1_fu_412_p2 = ((t_V_reg_274 == 32'd0) ? 1'b1 : 1'b0);

assign tmp_29_fu_314_p2 = (32'd3 + p_src_cols_V_read);

assign tmp_31_fu_326_p2 = (32'd2 + tmp_79_fu_320_p2);

assign tmp_321_1_fu_506_p2 = (($signed(p_assign_6_1_fu_486_p2) < $signed(p_src_rows_V_read)) ? 1'b1 : 1'b0);

assign tmp_321_2_fu_569_p2 = (($signed(p_assign_6_2_fu_549_p2) < $signed(p_src_rows_V_read)) ? 1'b1 : 1'b0);

assign tmp_32_fu_362_p2 = ($signed(32'd4294967294) + $signed(tmp_80_fu_356_p2));

assign tmp_331_1_fu_539_p2 = (($signed(p_p2_i425_i_1_fu_531_p3) < $signed(p_src_rows_V_read)) ? 1'b1 : 1'b0);

assign tmp_331_2_fu_602_p2 = (($signed(p_p2_i425_i_2_fu_594_p3) < $signed(p_src_rows_V_read)) ? 1'b1 : 1'b0);

assign tmp_33_fu_379_p2 = ((t_V_reg_274 < p_src_rows_V_read) ? 1'b1 : 1'b0);

assign tmp_34_fu_406_p2 = ((t_V_reg_274 == 32'd1) ? 1'b1 : 1'b0);

assign tmp_35_fu_418_p2 = ((t_V_reg_274 > p_src_rows_V_read) ? 1'b1 : 1'b0);

assign tmp_36_fu_423_p2 = ($signed(32'd4294967295) + $signed(t_V_reg_274));

assign tmp_37_fu_443_p2 = (($signed(tmp_36_fu_423_p2) < $signed(p_src_rows_V_read)) ? 1'b1 : 1'b0);

assign tmp_38_fu_476_p2 = (($signed(p_p2_i425_i_fu_468_p3) < $signed(p_src_rows_V_read)) ? 1'b1 : 1'b0);

assign tmp_40_fu_734_p2 = (($signed(ImagLoc_x_fu_714_p2) < $signed(p_src_cols_V_read)) ? 1'b1 : 1'b0);

assign tmp_41_fu_767_p2 = (($signed(p_p2_i_i_fu_759_p3) < $signed(p_src_cols_V_read)) ? 1'b1 : 1'b0);

assign tmp_42_fu_821_p1 = x_fu_803_p3;

assign tmp_46_not_fu_785_p2 = (tmp_40_fu_734_p2 ^ 1'd1);

assign tmp_79_fu_320_p2 = p_src_rows_V_read << 32'd1;

assign tmp_80_fu_356_p2 = p_src_cols_V_read << 32'd1;

assign tmp_81_fu_390_p4 = {{t_V_reg_274[31:1]}};

assign tmp_82_fu_429_p3 = tmp_36_fu_423_p2[32'd31];

assign tmp_83_fu_454_p3 = tmp_36_fu_423_p2[32'd31];

assign tmp_84_fu_492_p3 = p_assign_6_1_fu_486_p2[32'd31];

assign tmp_85_fu_517_p3 = p_assign_6_1_fu_486_p2[32'd31];

assign tmp_86_fu_555_p3 = p_assign_6_2_fu_549_p2[32'd31];

assign tmp_87_fu_580_p3 = p_assign_6_2_fu_549_p2[32'd31];

assign tmp_88_fu_633_p1 = row_assign_s_fu_628_p2[1:0];

assign tmp_89_fu_658_p1 = row_assign_10_1_fu_653_p2[1:0];

assign tmp_90_fu_683_p1 = row_assign_10_2_fu_678_p2[1:0];

assign tmp_91_fu_698_p4 = {{t_V_2_reg_285[31:1]}};

assign tmp_92_fu_720_p3 = ImagLoc_x_fu_714_p2[32'd31];

assign tmp_93_fu_745_p3 = ImagLoc_x_fu_714_p2[32'd31];

assign tmp_94_fu_828_p1 = col_assign_1_fu_811_p2[1:0];

assign tmp_s_fu_296_p2 = (32'd2 + p_src_cols_V_read);

assign x_fu_803_p3 = ((sel_tmp8_fu_797_p2[0:0] === 1'b1) ? p_p2_i_i_fu_759_p3 : p_assign_3_fu_777_p3);

assign y_1_1_fu_645_p3 = ((or_cond_i424_i_1_fu_511_p2[0:0] === 1'b1) ? p_assign_6_1_fu_486_p2 : p_p2_i425_i_1_p_assig_fu_637_p3);

assign y_1_2_fu_670_p3 = ((or_cond_i424_i_2_fu_574_p2[0:0] === 1'b1) ? p_assign_6_2_fu_549_p2 : p_p2_i425_i_2_p_assig_fu_662_p3);

assign y_1_fu_620_p3 = ((or_cond_i424_i_fu_448_p2[0:0] === 1'b1) ? tmp_36_fu_423_p2 : p_p2_i425_i_p_assign_8_fu_612_p3);

always @ (posedge ap_clk) begin
    tmp_31_reg_1276[0] <= 1'b0;
    OP2_V_1_2_cast_reg_1298[11:4] <= 8'b00000000;
    OP2_V_2_1_cast_reg_1308[10:3] <= 8'b00000000;
    tmp_32_reg_1313[0] <= 1'b0;
end

endmodule //Filter2D
