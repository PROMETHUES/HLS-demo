-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Filter2D is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_src_rows_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
    p_src_cols_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
    p_src_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_data_stream_V_empty_n : IN STD_LOGIC;
    p_src_data_stream_V_read : OUT STD_LOGIC;
    p_dst_data_stream_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    p_dst_data_stream_V_full_n : IN STD_LOGIC;
    p_dst_data_stream_V_write : OUT STD_LOGIC;
    p_kernel_val_0_V_1_read : IN STD_LOGIC_VECTOR (1 downto 0);
    p_kernel_val_0_V_2_read : IN STD_LOGIC_VECTOR (1 downto 0);
    p_kernel_val_1_V_0_read : IN STD_LOGIC_VECTOR (2 downto 0);
    p_kernel_val_1_V_2_read : IN STD_LOGIC_VECTOR (3 downto 0);
    p_kernel_val_2_V_0_read : IN STD_LOGIC_VECTOR (1 downto 0);
    p_kernel_val_2_V_1_read : IN STD_LOGIC_VECTOR (2 downto 0) );
end;


architecture behav of Filter2D is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_FFFFFFFE : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_FFFFFFFD : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111101";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_src_data_stream_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal exitcond388_i_reg_1371 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_i_reg_1380 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_1336 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_reg_1327 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_dst_data_stream_V_blk_n : STD_LOGIC;
    signal or_cond_i_reg_1416 : STD_LOGIC_VECTOR (0 downto 0);
    signal t_V_2_reg_285 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_296_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_reg_1254 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_28_fu_302_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_28_reg_1259 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_neg393_i_fu_308_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_neg393_i_reg_1264 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_29_fu_314_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_29_reg_1271 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_31_fu_326_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_31_reg_1276 : STD_LOGIC_VECTOR (31 downto 0);
    signal OP2_V_0_1_cast_fu_332_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal OP2_V_0_1_cast_reg_1283 : STD_LOGIC_VECTOR (9 downto 0);
    signal OP2_V_0_2_cast_fu_336_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal OP2_V_0_2_cast_reg_1288 : STD_LOGIC_VECTOR (9 downto 0);
    signal OP2_V_1_cast_fu_340_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal OP2_V_1_cast_reg_1293 : STD_LOGIC_VECTOR (10 downto 0);
    signal OP2_V_1_2_cast_fu_344_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal OP2_V_1_2_cast_reg_1298 : STD_LOGIC_VECTOR (11 downto 0);
    signal OP2_V_2_cast_fu_348_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal OP2_V_2_cast_reg_1303 : STD_LOGIC_VECTOR (9 downto 0);
    signal OP2_V_2_1_cast_fu_352_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal OP2_V_2_1_cast_reg_1308 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_32_fu_362_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_32_reg_1313 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond389_i_fu_368_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal i_V_fu_373_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_V_reg_1322 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_33_fu_379_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_251_0_not_fu_384_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_251_0_not_reg_1331 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_fu_400_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_fu_406_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_reg_1341 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_295_1_fu_412_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_295_1_reg_1345 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_35_fu_418_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_35_reg_1349 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_88_fu_633_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_88_reg_1356 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_89_fu_658_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_89_reg_1361 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_90_fu_683_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_90_reg_1366 : STD_LOGIC_VECTOR (1 downto 0);
    signal exitcond388_i_fu_687_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op166_read_state4 : BOOLEAN;
    signal ap_predicate_op177_read_state4 : BOOLEAN;
    signal ap_predicate_op227_write_state4 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal j_V_fu_692_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal or_cond_i_i_fu_739_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_fu_816_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_reg_1384 : STD_LOGIC_VECTOR (0 downto 0);
    signal k_buf_0_val_3_addr_reg_1391 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_94_fu_828_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_94_reg_1397 : STD_LOGIC_VECTOR (1 downto 0);
    signal k_buf_0_val_4_addr_reg_1404 : STD_LOGIC_VECTOR (8 downto 0);
    signal k_buf_0_val_5_addr_reg_1410 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_cond_i_fu_832_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal k_buf_0_val_3_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal k_buf_0_val_3_ce0 : STD_LOGIC;
    signal k_buf_0_val_3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_3_ce1 : STD_LOGIC;
    signal k_buf_0_val_3_we1 : STD_LOGIC;
    signal k_buf_0_val_4_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal k_buf_0_val_4_ce0 : STD_LOGIC;
    signal k_buf_0_val_4_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_4_ce1 : STD_LOGIC;
    signal k_buf_0_val_4_we1 : STD_LOGIC;
    signal k_buf_0_val_4_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_5_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal k_buf_0_val_5_ce0 : STD_LOGIC;
    signal k_buf_0_val_5_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_5_ce1 : STD_LOGIC;
    signal k_buf_0_val_5_we1 : STD_LOGIC;
    signal k_buf_0_val_5_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal t_V_reg_274 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal tmp_42_fu_821_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal src_kernel_win_0_va_fu_100 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_6_fu_956_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_1_fu_104 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_2_fu_108 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_7_fu_974_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_3_fu_112 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_4_fu_116 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_8_fu_992_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_5_fu_120 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_s_fu_124 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_0_0_fu_866_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_1_fu_128 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_2_fu_132 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_3_fu_136 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_1_0_fu_884_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_4_fu_140 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_5_fu_144 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_2_0_fu_902_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_79_fu_320_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_80_fu_356_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_81_fu_390_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_36_fu_423_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_82_fu_429_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_fu_443_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_fu_437_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_83_fu_454_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_7_fu_462_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_p2_i425_i_fu_468_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_assign_6_1_fu_486_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_84_fu_492_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_321_1_fu_506_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev1_fu_500_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_85_fu_517_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_7_1_fu_525_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_p2_i425_i_1_fu_531_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_assign_6_2_fu_549_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_86_fu_555_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_321_2_fu_569_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev2_fu_563_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_87_fu_580_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_7_2_fu_588_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_p2_i425_i_2_fu_594_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_38_fu_476_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_8_fu_481_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_cond_i424_i_fu_448_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_p2_i425_i_p_assign_8_fu_612_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_1_fu_620_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal row_assign_s_fu_628_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_331_1_fu_539_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_8_1_fu_544_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_cond_i424_i_1_fu_511_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_p2_i425_i_1_p_assig_fu_637_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_1_1_fu_645_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal row_assign_10_1_fu_653_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_331_2_fu_602_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_8_2_fu_607_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_cond_i424_i_2_fu_574_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_p2_i425_i_2_p_assig_fu_662_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_1_2_fu_670_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal row_assign_10_2_fu_678_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_91_fu_698_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal ImagLoc_x_fu_714_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_92_fu_720_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_40_fu_734_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev3_fu_728_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_93_fu_745_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_1_fu_753_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_p2_i_i_fu_759_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_assign_2_fu_772_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_46_not_fu_785_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_fu_767_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_fu_791_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_fu_797_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_3_fu_777_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_fu_803_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal col_assign_1_fu_811_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp1_fu_708_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_fu_855_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_10_fu_873_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_11_fu_891_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_12_fu_945_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_fu_963_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_14_fu_981_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal OP1_V_0_cast_fu_1014_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_5_fu_1018_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1121_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1144_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1152_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp22_cast_fu_1062_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1136_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_22_fu_1065_p2 : STD_LOGIC_VECTOR (11 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of p_Val2_22_fu_1065_p2 : signal is "no";
    signal grp_fu_1114_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1114_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1121_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1121_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1114_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1129_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1129_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_1136_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1136_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_1129_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1144_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1144_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1144_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1152_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1152_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_1114_p00 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1121_p00 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1129_p00 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1136_p00 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1144_p00 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1144_p20 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1152_p00 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_condition_311 : BOOLEAN;
    signal ap_condition_53 : BOOLEAN;
    signal ap_condition_305 : BOOLEAN;

    component HoughCircles_CoreeOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component HoughCircles_CorefYi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (1 downto 0);
        din2 : IN STD_LOGIC_VECTOR (8 downto 0);
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component HoughCircles_Coreg8j IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (1 downto 0);
        din2 : IN STD_LOGIC_VECTOR (10 downto 0);
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component HoughCircles_Corehbi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (2 downto 0);
        din2 : IN STD_LOGIC_VECTOR (10 downto 0);
        dout : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component HoughCircles_Coreibs IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (3 downto 0);
        din2 : IN STD_LOGIC_VECTOR (11 downto 0);
        dout : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component HoughCircles_CorejbC IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (1 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component HoughCircles_CorekbM IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (2 downto 0);
        din2 : IN STD_LOGIC_VECTOR (9 downto 0);
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component Filter2D_k_buf_0_bkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    k_buf_0_val_3_U : component Filter2D_k_buf_0_bkb
    generic map (
        DataWidth => 8,
        AddressRange => 320,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_3_address0,
        ce0 => k_buf_0_val_3_ce0,
        q0 => k_buf_0_val_3_q0,
        address1 => k_buf_0_val_3_addr_reg_1391,
        ce1 => k_buf_0_val_3_ce1,
        we1 => k_buf_0_val_3_we1,
        d1 => p_src_data_stream_V_dout);

    k_buf_0_val_4_U : component Filter2D_k_buf_0_bkb
    generic map (
        DataWidth => 8,
        AddressRange => 320,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_4_address0,
        ce0 => k_buf_0_val_4_ce0,
        q0 => k_buf_0_val_4_q0,
        address1 => k_buf_0_val_4_addr_reg_1404,
        ce1 => k_buf_0_val_4_ce1,
        we1 => k_buf_0_val_4_we1,
        d1 => k_buf_0_val_4_d1);

    k_buf_0_val_5_U : component Filter2D_k_buf_0_bkb
    generic map (
        DataWidth => 8,
        AddressRange => 320,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_5_address0,
        ce0 => k_buf_0_val_5_ce0,
        q0 => k_buf_0_val_5_q0,
        address1 => k_buf_0_val_5_addr_reg_1410,
        ce1 => k_buf_0_val_5_ce1,
        we1 => k_buf_0_val_5_we1,
        d1 => k_buf_0_val_5_d1);

    HoughCircles_CoreeOg_U56 : component HoughCircles_CoreeOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_s_fu_124,
        din1 => right_border_buf_0_1_fu_128,
        din2 => ap_const_lv8_0,
        din3 => tmp_94_reg_1397,
        dout => tmp_9_fu_855_p5);

    HoughCircles_CoreeOg_U57 : component HoughCircles_CoreeOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_3_fu_136,
        din1 => right_border_buf_0_4_fu_140,
        din2 => ap_const_lv8_0,
        din3 => tmp_94_reg_1397,
        dout => tmp_10_fu_873_p5);

    HoughCircles_CoreeOg_U58 : component HoughCircles_CoreeOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_5_fu_144,
        din1 => right_border_buf_0_2_fu_132,
        din2 => ap_const_lv8_0,
        din3 => tmp_94_reg_1397,
        dout => tmp_11_fu_891_p5);

    HoughCircles_CoreeOg_U59 : component HoughCircles_CoreeOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_866_p3,
        din1 => col_buf_0_val_1_0_fu_884_p3,
        din2 => col_buf_0_val_2_0_fu_902_p3,
        din3 => tmp_88_reg_1356,
        dout => tmp_12_fu_945_p5);

    HoughCircles_CoreeOg_U60 : component HoughCircles_CoreeOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_866_p3,
        din1 => col_buf_0_val_1_0_fu_884_p3,
        din2 => col_buf_0_val_2_0_fu_902_p3,
        din3 => tmp_89_reg_1361,
        dout => tmp_13_fu_963_p5);

    HoughCircles_CoreeOg_U61 : component HoughCircles_CoreeOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_866_p3,
        din1 => col_buf_0_val_1_0_fu_884_p3,
        din2 => col_buf_0_val_2_0_fu_902_p3,
        din3 => tmp_90_reg_1366,
        dout => tmp_14_fu_981_p5);

    HoughCircles_CorefYi_U62 : component HoughCircles_CorefYi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 2,
        din2_WIDTH => 9,
        dout_WIDTH => 11)
    port map (
        din0 => grp_fu_1114_p0,
        din1 => grp_fu_1114_p1,
        din2 => r_V_5_fu_1018_p2,
        dout => grp_fu_1114_p3);

    HoughCircles_Coreg8j_U63 : component HoughCircles_Coreg8j
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 2,
        din2_WIDTH => 11,
        dout_WIDTH => 11)
    port map (
        din0 => grp_fu_1121_p0,
        din1 => grp_fu_1121_p1,
        din2 => grp_fu_1114_p3,
        dout => grp_fu_1121_p3);

    HoughCircles_Corehbi_U64 : component HoughCircles_Corehbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 3,
        din2_WIDTH => 11,
        dout_WIDTH => 12)
    port map (
        din0 => grp_fu_1129_p0,
        din1 => grp_fu_1129_p1,
        din2 => grp_fu_1121_p3,
        dout => grp_fu_1129_p3);

    HoughCircles_Coreibs_U65 : component HoughCircles_Coreibs
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 4,
        din2_WIDTH => 12,
        dout_WIDTH => 12)
    port map (
        din0 => grp_fu_1136_p0,
        din1 => grp_fu_1136_p1,
        din2 => grp_fu_1129_p3,
        dout => grp_fu_1136_p3);

    HoughCircles_CorejbC_U66 : component HoughCircles_CorejbC
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 2,
        din2_WIDTH => 8,
        dout_WIDTH => 10)
    port map (
        din0 => grp_fu_1144_p0,
        din1 => grp_fu_1144_p1,
        din2 => grp_fu_1144_p2,
        dout => grp_fu_1144_p3);

    HoughCircles_CorekbM_U67 : component HoughCircles_CorekbM
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 3,
        din2_WIDTH => 10,
        dout_WIDTH => 11)
    port map (
        din0 => grp_fu_1152_p0,
        din1 => grp_fu_1152_p1,
        din2 => grp_fu_1144_p3,
        dout => grp_fu_1152_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((exitcond388_i_fu_687_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((exitcond389_i_fu_368_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((exitcond389_i_fu_368_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    t_V_2_reg_285_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond388_i_fu_687_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                t_V_2_reg_285 <= j_V_fu_692_p2;
            elsif (((exitcond389_i_fu_368_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                t_V_2_reg_285 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    t_V_reg_274_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                t_V_reg_274 <= i_V_reg_1322;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                t_V_reg_274 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                OP2_V_0_1_cast_reg_1283 <= OP2_V_0_1_cast_fu_332_p1;
                OP2_V_0_2_cast_reg_1288 <= OP2_V_0_2_cast_fu_336_p1;
                    OP2_V_1_2_cast_reg_1298(3 downto 0) <= OP2_V_1_2_cast_fu_344_p1(3 downto 0);
                OP2_V_1_cast_reg_1293 <= OP2_V_1_cast_fu_340_p1;
                    OP2_V_2_1_cast_reg_1308(2 downto 0) <= OP2_V_2_1_cast_fu_352_p1(2 downto 0);
                OP2_V_2_cast_reg_1303 <= OP2_V_2_cast_fu_348_p1;
                p_neg393_i_reg_1264 <= p_neg393_i_fu_308_p2;
                tmp_28_reg_1259 <= tmp_28_fu_302_p2;
                tmp_29_reg_1271 <= tmp_29_fu_314_p2;
                    tmp_31_reg_1276(31 downto 1) <= tmp_31_fu_326_p2(31 downto 1);
                    tmp_32_reg_1313(31 downto 1) <= tmp_32_fu_362_p2(31 downto 1);
                tmp_s_reg_1254 <= tmp_s_fu_296_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond388_i_fu_687_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                brmerge_reg_1384 <= brmerge_fu_816_p2;
                k_buf_0_val_3_addr_reg_1391 <= tmp_42_fu_821_p1(9 - 1 downto 0);
                k_buf_0_val_4_addr_reg_1404 <= tmp_42_fu_821_p1(9 - 1 downto 0);
                k_buf_0_val_5_addr_reg_1410 <= tmp_42_fu_821_p1(9 - 1 downto 0);
                or_cond_i_i_reg_1380 <= or_cond_i_i_fu_739_p2;
                or_cond_i_reg_1416 <= or_cond_i_fu_832_p2;
                tmp_94_reg_1397 <= tmp_94_fu_828_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                exitcond388_i_reg_1371 <= exitcond388_i_fu_687_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_V_reg_1322 <= i_V_fu_373_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond389_i_fu_368_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                icmp_reg_1336 <= icmp_fu_400_p2;
                tmp_251_0_not_reg_1331 <= tmp_251_0_not_fu_384_p2;
                tmp_295_1_reg_1345 <= tmp_295_1_fu_412_p2;
                tmp_33_reg_1327 <= tmp_33_fu_379_p2;
                tmp_34_reg_1341 <= tmp_34_fu_406_p2;
                tmp_35_reg_1349 <= tmp_35_fu_418_p2;
                tmp_88_reg_1356 <= tmp_88_fu_633_p1;
                tmp_89_reg_1361 <= tmp_89_fu_658_p1;
                tmp_90_reg_1366 <= tmp_90_fu_683_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op177_read_state4 = ap_const_boolean_1))) then
                right_border_buf_0_1_fu_128 <= right_border_buf_0_s_fu_124;
                right_border_buf_0_2_fu_132 <= right_border_buf_0_5_fu_144;
                right_border_buf_0_3_fu_136 <= col_buf_0_val_1_0_fu_884_p3;
                right_border_buf_0_4_fu_140 <= right_border_buf_0_3_fu_136;
                right_border_buf_0_5_fu_144 <= col_buf_0_val_2_0_fu_902_p3;
                right_border_buf_0_s_fu_124 <= col_buf_0_val_0_0_fu_866_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond388_i_reg_1371 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_1_fu_104 <= src_kernel_win_0_va_fu_100;
                src_kernel_win_0_va_2_fu_108 <= src_kernel_win_0_va_7_fu_974_p3;
                src_kernel_win_0_va_3_fu_112 <= src_kernel_win_0_va_2_fu_108;
                src_kernel_win_0_va_4_fu_116 <= src_kernel_win_0_va_8_fu_992_p3;
                src_kernel_win_0_va_5_fu_120 <= src_kernel_win_0_va_4_fu_116;
                src_kernel_win_0_va_fu_100 <= src_kernel_win_0_va_6_fu_956_p3;
            end if;
        end if;
    end process;
    tmp_31_reg_1276(0) <= '0';
    OP2_V_1_2_cast_reg_1298(11 downto 4) <= "00000000";
    OP2_V_2_1_cast_reg_1308(10 downto 3) <= "00000000";
    tmp_32_reg_1313(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond389_i_fu_368_p2, ap_CS_fsm_state2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((exitcond389_i_fu_368_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    ImagLoc_x_fu_714_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFF) + signed(t_V_2_reg_285));
    OP1_V_0_cast_fu_1014_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_5_fu_120),9));
        OP2_V_0_1_cast_fu_332_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_0_V_1_read),10));

        OP2_V_0_2_cast_fu_336_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_0_V_2_read),10));

    OP2_V_1_2_cast_fu_344_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_kernel_val_1_V_2_read),12));
        OP2_V_1_cast_fu_340_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_1_V_0_read),11));

    OP2_V_2_1_cast_fu_352_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_kernel_val_2_V_1_read),11));
        OP2_V_2_cast_fu_348_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_2_V_0_read),10));

    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state5 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter1, ap_predicate_op166_read_state4, ap_predicate_op177_read_state4, ap_predicate_op227_write_state4)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_predicate_op227_write_state4 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op177_read_state4 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op166_read_state4 = ap_const_boolean_1))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter1, ap_predicate_op166_read_state4, ap_predicate_op177_read_state4, ap_predicate_op227_write_state4)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_predicate_op227_write_state4 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op177_read_state4 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op166_read_state4 = ap_const_boolean_1))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter1, ap_predicate_op166_read_state4, ap_predicate_op177_read_state4, ap_predicate_op227_write_state4)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_predicate_op227_write_state4 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op177_read_state4 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op166_read_state4 = ap_const_boolean_1))));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter1_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_predicate_op166_read_state4, ap_predicate_op177_read_state4, ap_predicate_op227_write_state4)
    begin
                ap_block_state4_pp0_stage0_iter1 <= (((p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_predicate_op227_write_state4 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op177_read_state4 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op166_read_state4 = ap_const_boolean_1)));
    end process;


    ap_condition_305_assign_proc : process(exitcond388_i_reg_1371, or_cond_i_i_reg_1380, icmp_reg_1336, tmp_34_reg_1341)
    begin
                ap_condition_305 <= ((tmp_34_reg_1341 = ap_const_lv1_1) and (or_cond_i_i_reg_1380 = ap_const_lv1_1) and (icmp_reg_1336 = ap_const_lv1_0) and (exitcond388_i_reg_1371 = ap_const_lv1_0));
    end process;


    ap_condition_311_assign_proc : process(exitcond388_i_reg_1371, or_cond_i_i_reg_1380, icmp_reg_1336, tmp_295_1_reg_1345)
    begin
                ap_condition_311 <= ((tmp_295_1_reg_1345 = ap_const_lv1_1) and (or_cond_i_i_reg_1380 = ap_const_lv1_1) and (icmp_reg_1336 = ap_const_lv1_0) and (exitcond388_i_reg_1371 = ap_const_lv1_0));
    end process;


    ap_condition_53_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
                ap_condition_53 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, exitcond389_i_fu_368_p2, ap_CS_fsm_state2)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((exitcond389_i_fu_368_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op166_read_state4_assign_proc : process(exitcond388_i_reg_1371, or_cond_i_i_reg_1380, icmp_reg_1336)
    begin
                ap_predicate_op166_read_state4 <= ((or_cond_i_i_reg_1380 = ap_const_lv1_1) and (icmp_reg_1336 = ap_const_lv1_0) and (exitcond388_i_reg_1371 = ap_const_lv1_0));
    end process;


    ap_predicate_op177_read_state4_assign_proc : process(exitcond388_i_reg_1371, or_cond_i_i_reg_1380, icmp_reg_1336, tmp_33_reg_1327)
    begin
                ap_predicate_op177_read_state4 <= ((tmp_33_reg_1327 = ap_const_lv1_1) and (icmp_reg_1336 = ap_const_lv1_1) and (or_cond_i_i_reg_1380 = ap_const_lv1_1) and (exitcond388_i_reg_1371 = ap_const_lv1_0));
    end process;


    ap_predicate_op227_write_state4_assign_proc : process(exitcond388_i_reg_1371, or_cond_i_reg_1416)
    begin
                ap_predicate_op227_write_state4 <= ((or_cond_i_reg_1416 = ap_const_lv1_1) and (exitcond388_i_reg_1371 = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(exitcond389_i_fu_368_p2, ap_CS_fsm_state2)
    begin
        if (((exitcond389_i_fu_368_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    brmerge_fu_816_p2 <= (tmp_40_fu_734_p2 or tmp_251_0_not_reg_1331);
    col_assign_1_fu_811_p2 <= std_logic_vector(unsigned(tmp_29_reg_1271) - unsigned(x_fu_803_p3));
    col_buf_0_val_0_0_fu_866_p3 <= 
        k_buf_0_val_3_q0 when (brmerge_reg_1384(0) = '1') else 
        tmp_9_fu_855_p5;
    col_buf_0_val_1_0_fu_884_p3 <= 
        k_buf_0_val_4_q0 when (brmerge_reg_1384(0) = '1') else 
        tmp_10_fu_873_p5;
    col_buf_0_val_2_0_fu_902_p3 <= 
        k_buf_0_val_5_q0 when (brmerge_reg_1384(0) = '1') else 
        tmp_11_fu_891_p5;
    exitcond388_i_fu_687_p2 <= "1" when (t_V_2_reg_285 = tmp_s_reg_1254) else "0";
    exitcond389_i_fu_368_p2 <= "1" when (t_V_reg_274 = tmp_28_reg_1259) else "0";
    grp_fu_1114_p0 <= grp_fu_1114_p00(8 - 1 downto 0);
    grp_fu_1114_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_4_fu_116),10));
    grp_fu_1114_p1 <= OP2_V_0_1_cast_reg_1283(2 - 1 downto 0);
    grp_fu_1121_p0 <= grp_fu_1121_p00(8 - 1 downto 0);
    grp_fu_1121_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_8_fu_992_p3),10));
    grp_fu_1121_p1 <= OP2_V_0_2_cast_reg_1288(2 - 1 downto 0);
    grp_fu_1129_p0 <= grp_fu_1129_p00(8 - 1 downto 0);
    grp_fu_1129_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_3_fu_112),11));
    grp_fu_1129_p1 <= OP2_V_1_cast_reg_1293(3 - 1 downto 0);
    grp_fu_1136_p0 <= grp_fu_1136_p00(8 - 1 downto 0);
    grp_fu_1136_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_7_fu_974_p3),12));
    grp_fu_1136_p1 <= OP2_V_1_2_cast_reg_1298(4 - 1 downto 0);
    grp_fu_1144_p0 <= grp_fu_1144_p00(8 - 1 downto 0);
    grp_fu_1144_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_1_fu_104),10));
    grp_fu_1144_p1 <= OP2_V_2_cast_reg_1303(2 - 1 downto 0);
    grp_fu_1144_p2 <= grp_fu_1144_p20(8 - 1 downto 0);
    grp_fu_1144_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_6_fu_956_p3),10));
    grp_fu_1152_p0 <= grp_fu_1152_p00(8 - 1 downto 0);
    grp_fu_1152_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_fu_100),11));
    grp_fu_1152_p1 <= OP2_V_2_1_cast_reg_1308(3 - 1 downto 0);
    i_V_fu_373_p2 <= std_logic_vector(unsigned(t_V_reg_274) + unsigned(ap_const_lv32_1));
    icmp1_fu_708_p2 <= "0" when (tmp_91_fu_698_p4 = ap_const_lv31_0) else "1";
    icmp_fu_400_p2 <= "0" when (tmp_81_fu_390_p4 = ap_const_lv31_0) else "1";
    j_V_fu_692_p2 <= std_logic_vector(unsigned(t_V_2_reg_285) + unsigned(ap_const_lv32_1));
    k_buf_0_val_3_address0 <= tmp_42_fu_821_p1(9 - 1 downto 0);

    k_buf_0_val_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_3_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_3_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond388_i_reg_1371, or_cond_i_i_reg_1380, icmp_reg_1336, tmp_34_reg_1341, ap_predicate_op177_read_state4, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_34_reg_1341 = ap_const_lv1_1) and (or_cond_i_i_reg_1380 = ap_const_lv1_1) and (icmp_reg_1336 = ap_const_lv1_0) and (exitcond388_i_reg_1371 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op177_read_state4 = ap_const_boolean_1)))) then 
            k_buf_0_val_3_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_3_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond388_i_reg_1371, or_cond_i_i_reg_1380, icmp_reg_1336, tmp_34_reg_1341, ap_predicate_op177_read_state4, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_34_reg_1341 = ap_const_lv1_1) and (or_cond_i_i_reg_1380 = ap_const_lv1_1) and (icmp_reg_1336 = ap_const_lv1_0) and (exitcond388_i_reg_1371 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op177_read_state4 = ap_const_boolean_1)))) then 
            k_buf_0_val_3_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_4_address0 <= tmp_42_fu_821_p1(9 - 1 downto 0);

    k_buf_0_val_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_4_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_4_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond388_i_reg_1371, or_cond_i_i_reg_1380, icmp_reg_1336, tmp_295_1_reg_1345, ap_predicate_op177_read_state4, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_295_1_reg_1345 = ap_const_lv1_1) and (or_cond_i_i_reg_1380 = ap_const_lv1_1) and (icmp_reg_1336 = ap_const_lv1_0) and (exitcond388_i_reg_1371 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op177_read_state4 = ap_const_boolean_1)))) then 
            k_buf_0_val_4_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_4_d1_assign_proc : process(p_src_data_stream_V_dout, ap_predicate_op177_read_state4, k_buf_0_val_3_q0, ap_condition_311, ap_condition_53)
    begin
        if ((ap_const_boolean_1 = ap_condition_53)) then
            if ((ap_predicate_op177_read_state4 = ap_const_boolean_1)) then 
                k_buf_0_val_4_d1 <= k_buf_0_val_3_q0;
            elsif ((ap_const_boolean_1 = ap_condition_311)) then 
                k_buf_0_val_4_d1 <= p_src_data_stream_V_dout;
            else 
                k_buf_0_val_4_d1 <= "XXXXXXXX";
            end if;
        else 
            k_buf_0_val_4_d1 <= "XXXXXXXX";
        end if; 
    end process;


    k_buf_0_val_4_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond388_i_reg_1371, or_cond_i_i_reg_1380, icmp_reg_1336, tmp_295_1_reg_1345, ap_predicate_op177_read_state4, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_295_1_reg_1345 = ap_const_lv1_1) and (or_cond_i_i_reg_1380 = ap_const_lv1_1) and (icmp_reg_1336 = ap_const_lv1_0) and (exitcond388_i_reg_1371 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op177_read_state4 = ap_const_boolean_1)))) then 
            k_buf_0_val_4_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_5_address0 <= tmp_42_fu_821_p1(9 - 1 downto 0);

    k_buf_0_val_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_5_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond388_i_reg_1371, or_cond_i_i_reg_1380, icmp_reg_1336, tmp_34_reg_1341, ap_predicate_op177_read_state4, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_34_reg_1341 = ap_const_lv1_1) and (or_cond_i_i_reg_1380 = ap_const_lv1_1) and (icmp_reg_1336 = ap_const_lv1_0) and (exitcond388_i_reg_1371 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op177_read_state4 = ap_const_boolean_1)))) then 
            k_buf_0_val_5_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_d1_assign_proc : process(p_src_data_stream_V_dout, ap_predicate_op177_read_state4, k_buf_0_val_4_q0, ap_condition_53, ap_condition_305)
    begin
        if ((ap_const_boolean_1 = ap_condition_53)) then
            if ((ap_predicate_op177_read_state4 = ap_const_boolean_1)) then 
                k_buf_0_val_5_d1 <= k_buf_0_val_4_q0;
            elsif ((ap_const_boolean_1 = ap_condition_305)) then 
                k_buf_0_val_5_d1 <= p_src_data_stream_V_dout;
            else 
                k_buf_0_val_5_d1 <= "XXXXXXXX";
            end if;
        else 
            k_buf_0_val_5_d1 <= "XXXXXXXX";
        end if; 
    end process;


    k_buf_0_val_5_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond388_i_reg_1371, or_cond_i_i_reg_1380, icmp_reg_1336, tmp_34_reg_1341, ap_predicate_op177_read_state4, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_34_reg_1341 = ap_const_lv1_1) and (or_cond_i_i_reg_1380 = ap_const_lv1_1) and (icmp_reg_1336 = ap_const_lv1_0) and (exitcond388_i_reg_1371 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op177_read_state4 = ap_const_boolean_1)))) then 
            k_buf_0_val_5_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_we1 <= ap_const_logic_0;
        end if; 
    end process;

    or_cond_i424_i_1_fu_511_p2 <= (tmp_321_1_fu_506_p2 and rev1_fu_500_p2);
    or_cond_i424_i_2_fu_574_p2 <= (tmp_321_2_fu_569_p2 and rev2_fu_563_p2);
    or_cond_i424_i_fu_448_p2 <= (tmp_37_fu_443_p2 and rev_fu_437_p2);
    or_cond_i_fu_832_p2 <= (icmp_reg_1336 and icmp1_fu_708_p2);
    or_cond_i_i_fu_739_p2 <= (tmp_40_fu_734_p2 and rev3_fu_728_p2);
    p_Val2_22_fu_1065_p2 <= std_logic_vector(signed(tmp22_cast_fu_1062_p1) + signed(grp_fu_1136_p3));
    p_assign_1_fu_753_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) - unsigned(t_V_2_reg_285));
    p_assign_2_fu_772_p2 <= std_logic_vector(unsigned(tmp_32_reg_1313) - unsigned(p_p2_i_i_fu_759_p3));
    p_assign_3_fu_777_p3 <= 
        ImagLoc_x_fu_714_p2 when (or_cond_i_i_fu_739_p2(0) = '1') else 
        p_assign_2_fu_772_p2;
    p_assign_6_1_fu_486_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFE) + signed(t_V_reg_274));
    p_assign_6_2_fu_549_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFD) + signed(t_V_reg_274));
    p_assign_7_1_fu_525_p2 <= std_logic_vector(unsigned(ap_const_lv32_2) - unsigned(t_V_reg_274));
    p_assign_7_2_fu_588_p2 <= std_logic_vector(unsigned(ap_const_lv32_3) - unsigned(t_V_reg_274));
    p_assign_7_fu_462_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) - unsigned(t_V_reg_274));
    p_assign_8_1_fu_544_p2 <= std_logic_vector(unsigned(tmp_31_reg_1276) - unsigned(p_p2_i425_i_1_fu_531_p3));
    p_assign_8_2_fu_607_p2 <= std_logic_vector(unsigned(tmp_31_reg_1276) - unsigned(p_p2_i425_i_2_fu_594_p3));
    p_assign_8_fu_481_p2 <= std_logic_vector(unsigned(tmp_31_reg_1276) - unsigned(p_p2_i425_i_fu_468_p3));

    p_dst_data_stream_V_blk_n_assign_proc : process(p_dst_data_stream_V_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond388_i_reg_1371, or_cond_i_reg_1416)
    begin
        if (((or_cond_i_reg_1416 = ap_const_lv1_1) and (exitcond388_i_reg_1371 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_dst_data_stream_V_blk_n <= p_dst_data_stream_V_full_n;
        else 
            p_dst_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

        p_dst_data_stream_V_din <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_22_fu_1065_p2),16));


    p_dst_data_stream_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op227_write_state4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op227_write_state4 = ap_const_boolean_1))) then 
            p_dst_data_stream_V_write <= ap_const_logic_1;
        else 
            p_dst_data_stream_V_write <= ap_const_logic_0;
        end if; 
    end process;

    p_neg393_i_fu_308_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFF) + signed(p_src_rows_V_read));
    p_p2_i425_i_1_fu_531_p3 <= 
        p_assign_7_1_fu_525_p2 when (tmp_85_fu_517_p3(0) = '1') else 
        p_assign_6_1_fu_486_p2;
    p_p2_i425_i_1_p_assig_fu_637_p3 <= 
        p_p2_i425_i_1_fu_531_p3 when (tmp_331_1_fu_539_p2(0) = '1') else 
        p_assign_8_1_fu_544_p2;
    p_p2_i425_i_2_fu_594_p3 <= 
        p_assign_7_2_fu_588_p2 when (tmp_87_fu_580_p3(0) = '1') else 
        p_assign_6_2_fu_549_p2;
    p_p2_i425_i_2_p_assig_fu_662_p3 <= 
        p_p2_i425_i_2_fu_594_p3 when (tmp_331_2_fu_602_p2(0) = '1') else 
        p_assign_8_2_fu_607_p2;
    p_p2_i425_i_fu_468_p3 <= 
        p_assign_7_fu_462_p2 when (tmp_83_fu_454_p3(0) = '1') else 
        tmp_36_fu_423_p2;
    p_p2_i425_i_p_assign_8_fu_612_p3 <= 
        p_p2_i425_i_fu_468_p3 when (tmp_38_fu_476_p2(0) = '1') else 
        p_assign_8_fu_481_p2;
    p_p2_i_i_fu_759_p3 <= 
        p_assign_1_fu_753_p2 when (tmp_93_fu_745_p3(0) = '1') else 
        ImagLoc_x_fu_714_p2;

    p_src_data_stream_V_blk_n_assign_proc : process(p_src_data_stream_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond388_i_reg_1371, or_cond_i_i_reg_1380, icmp_reg_1336, tmp_33_reg_1327)
    begin
        if ((((tmp_33_reg_1327 = ap_const_lv1_1) and (icmp_reg_1336 = ap_const_lv1_1) and (or_cond_i_i_reg_1380 = ap_const_lv1_1) and (exitcond388_i_reg_1371 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((or_cond_i_i_reg_1380 = ap_const_lv1_1) and (icmp_reg_1336 = ap_const_lv1_0) and (exitcond388_i_reg_1371 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            p_src_data_stream_V_blk_n <= p_src_data_stream_V_empty_n;
        else 
            p_src_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_data_stream_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op166_read_state4, ap_predicate_op177_read_state4, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op177_read_state4 = ap_const_boolean_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op166_read_state4 = ap_const_boolean_1)))) then 
            p_src_data_stream_V_read <= ap_const_logic_1;
        else 
            p_src_data_stream_V_read <= ap_const_logic_0;
        end if; 
    end process;

    r_V_5_fu_1018_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(OP1_V_0_cast_fu_1014_p1));
    rev1_fu_500_p2 <= (tmp_84_fu_492_p3 xor ap_const_lv1_1);
    rev2_fu_563_p2 <= (tmp_86_fu_555_p3 xor ap_const_lv1_1);
    rev3_fu_728_p2 <= (tmp_92_fu_720_p3 xor ap_const_lv1_1);
    rev_fu_437_p2 <= (tmp_82_fu_429_p3 xor ap_const_lv1_1);
    row_assign_10_1_fu_653_p2 <= std_logic_vector(unsigned(p_neg393_i_reg_1264) - unsigned(y_1_1_fu_645_p3));
    row_assign_10_2_fu_678_p2 <= std_logic_vector(unsigned(p_neg393_i_reg_1264) - unsigned(y_1_2_fu_670_p3));
    row_assign_s_fu_628_p2 <= std_logic_vector(unsigned(p_neg393_i_reg_1264) - unsigned(y_1_fu_620_p3));
    sel_tmp7_fu_791_p2 <= (tmp_92_fu_720_p3 or tmp_46_not_fu_785_p2);
    sel_tmp8_fu_797_p2 <= (tmp_41_fu_767_p2 and sel_tmp7_fu_791_p2);
    src_kernel_win_0_va_6_fu_956_p3 <= 
        tmp_12_fu_945_p5 when (tmp_35_reg_1349(0) = '1') else 
        col_buf_0_val_0_0_fu_866_p3;
    src_kernel_win_0_va_7_fu_974_p3 <= 
        tmp_13_fu_963_p5 when (tmp_35_reg_1349(0) = '1') else 
        col_buf_0_val_1_0_fu_884_p3;
    src_kernel_win_0_va_8_fu_992_p3 <= 
        tmp_14_fu_981_p5 when (tmp_35_reg_1349(0) = '1') else 
        col_buf_0_val_2_0_fu_902_p3;
        tmp22_cast_fu_1062_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_1152_p3),12));

    tmp_251_0_not_fu_384_p2 <= (tmp_33_fu_379_p2 xor ap_const_lv1_1);
    tmp_28_fu_302_p2 <= std_logic_vector(unsigned(ap_const_lv32_2) + unsigned(p_src_rows_V_read));
    tmp_295_1_fu_412_p2 <= "1" when (t_V_reg_274 = ap_const_lv32_0) else "0";
    tmp_29_fu_314_p2 <= std_logic_vector(unsigned(ap_const_lv32_3) + unsigned(p_src_cols_V_read));
    tmp_31_fu_326_p2 <= std_logic_vector(unsigned(ap_const_lv32_2) + unsigned(tmp_79_fu_320_p2));
    tmp_321_1_fu_506_p2 <= "1" when (signed(p_assign_6_1_fu_486_p2) < signed(p_src_rows_V_read)) else "0";
    tmp_321_2_fu_569_p2 <= "1" when (signed(p_assign_6_2_fu_549_p2) < signed(p_src_rows_V_read)) else "0";
    tmp_32_fu_362_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFE) + signed(tmp_80_fu_356_p2));
    tmp_331_1_fu_539_p2 <= "1" when (signed(p_p2_i425_i_1_fu_531_p3) < signed(p_src_rows_V_read)) else "0";
    tmp_331_2_fu_602_p2 <= "1" when (signed(p_p2_i425_i_2_fu_594_p3) < signed(p_src_rows_V_read)) else "0";
    tmp_33_fu_379_p2 <= "1" when (unsigned(t_V_reg_274) < unsigned(p_src_rows_V_read)) else "0";
    tmp_34_fu_406_p2 <= "1" when (t_V_reg_274 = ap_const_lv32_1) else "0";
    tmp_35_fu_418_p2 <= "1" when (unsigned(t_V_reg_274) > unsigned(p_src_rows_V_read)) else "0";
    tmp_36_fu_423_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFF) + signed(t_V_reg_274));
    tmp_37_fu_443_p2 <= "1" when (signed(tmp_36_fu_423_p2) < signed(p_src_rows_V_read)) else "0";
    tmp_38_fu_476_p2 <= "1" when (signed(p_p2_i425_i_fu_468_p3) < signed(p_src_rows_V_read)) else "0";
    tmp_40_fu_734_p2 <= "1" when (signed(ImagLoc_x_fu_714_p2) < signed(p_src_cols_V_read)) else "0";
    tmp_41_fu_767_p2 <= "1" when (signed(p_p2_i_i_fu_759_p3) < signed(p_src_cols_V_read)) else "0";
    tmp_42_fu_821_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(x_fu_803_p3),64));
    tmp_46_not_fu_785_p2 <= (tmp_40_fu_734_p2 xor ap_const_lv1_1);
    tmp_79_fu_320_p2 <= std_logic_vector(shift_left(unsigned(p_src_rows_V_read),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    tmp_80_fu_356_p2 <= std_logic_vector(shift_left(unsigned(p_src_cols_V_read),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    tmp_81_fu_390_p4 <= t_V_reg_274(31 downto 1);
    tmp_82_fu_429_p3 <= tmp_36_fu_423_p2(31 downto 31);
    tmp_83_fu_454_p3 <= tmp_36_fu_423_p2(31 downto 31);
    tmp_84_fu_492_p3 <= p_assign_6_1_fu_486_p2(31 downto 31);
    tmp_85_fu_517_p3 <= p_assign_6_1_fu_486_p2(31 downto 31);
    tmp_86_fu_555_p3 <= p_assign_6_2_fu_549_p2(31 downto 31);
    tmp_87_fu_580_p3 <= p_assign_6_2_fu_549_p2(31 downto 31);
    tmp_88_fu_633_p1 <= row_assign_s_fu_628_p2(2 - 1 downto 0);
    tmp_89_fu_658_p1 <= row_assign_10_1_fu_653_p2(2 - 1 downto 0);
    tmp_90_fu_683_p1 <= row_assign_10_2_fu_678_p2(2 - 1 downto 0);
    tmp_91_fu_698_p4 <= t_V_2_reg_285(31 downto 1);
    tmp_92_fu_720_p3 <= ImagLoc_x_fu_714_p2(31 downto 31);
    tmp_93_fu_745_p3 <= ImagLoc_x_fu_714_p2(31 downto 31);
    tmp_94_fu_828_p1 <= col_assign_1_fu_811_p2(2 - 1 downto 0);
    tmp_s_fu_296_p2 <= std_logic_vector(unsigned(ap_const_lv32_2) + unsigned(p_src_cols_V_read));
    x_fu_803_p3 <= 
        p_p2_i_i_fu_759_p3 when (sel_tmp8_fu_797_p2(0) = '1') else 
        p_assign_3_fu_777_p3;
    y_1_1_fu_645_p3 <= 
        p_assign_6_1_fu_486_p2 when (or_cond_i424_i_1_fu_511_p2(0) = '1') else 
        p_p2_i425_i_1_p_assig_fu_637_p3;
    y_1_2_fu_670_p3 <= 
        p_assign_6_2_fu_549_p2 when (or_cond_i424_i_2_fu_574_p2(0) = '1') else 
        p_p2_i425_i_2_p_assig_fu_662_p3;
    y_1_fu_620_p3 <= 
        tmp_36_fu_423_p2 when (or_cond_i424_i_fu_448_p2(0) = '1') else 
        p_p2_i425_i_p_assign_8_fu_612_p3;
end behav;
