-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity SeedFilling is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    src_val_address0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    src_val_ce0 : OUT STD_LOGIC;
    src_val_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    src_rows_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    src_rows_empty_n : IN STD_LOGIC;
    src_rows_read : OUT STD_LOGIC;
    src_cols_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    src_cols_empty_n : IN STD_LOGIC;
    src_cols_read : OUT STD_LOGIC;
    rects_val_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    rects_val_ce0 : OUT STD_LOGIC;
    rects_val_we0 : OUT STD_LOGIC;
    rects_val_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    rects_val_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    rects_val_ce1 : OUT STD_LOGIC;
    rects_val_we1 : OUT STD_LOGIC;
    rects_val_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    rects_rows_dout : IN STD_LOGIC_VECTOR (3 downto 0);
    rects_rows_empty_n : IN STD_LOGIC;
    rects_rows_read : OUT STD_LOGIC;
    rects_cols_dout : IN STD_LOGIC_VECTOR (9 downto 0);
    rects_cols_empty_n : IN STD_LOGIC;
    rects_cols_read : OUT STD_LOGIC;
    rects_rows_out_din : OUT STD_LOGIC_VECTOR (3 downto 0);
    rects_rows_out_full_n : IN STD_LOGIC;
    rects_rows_out_write : OUT STD_LOGIC;
    rects_cols_out_din : OUT STD_LOGIC_VECTOR (9 downto 0);
    rects_cols_out_full_n : IN STD_LOGIC;
    rects_cols_out_write : OUT STD_LOGIC );
end;


architecture behav of SeedFilling is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (16 downto 0) := "00000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (16 downto 0) := "00000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (16 downto 0) := "00000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (16 downto 0) := "00000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (16 downto 0) := "00000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (16 downto 0) := "00000100000000000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (16 downto 0) := "00001000000000000";
    constant ap_ST_fsm_pp2_stage1 : STD_LOGIC_VECTOR (16 downto 0) := "00010000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (16 downto 0) := "00100000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (16 downto 0) := "01000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (16 downto 0) := "10000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv40_0 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000000000000";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv18_1F4 : STD_LOGIC_VECTOR (17 downto 0) := "000000000111110100";
    constant ap_const_lv9_1F4 : STD_LOGIC_VECTOR (8 downto 0) := "111110100";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv40_1F4 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000111110100";
    constant ap_const_lv31_1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv12_100 : STD_LOGIC_VECTOR (11 downto 0) := "000100000000";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv12_200 : STD_LOGIC_VECTOR (11 downto 0) := "001000000000";
    constant ap_const_lv12_300 : STD_LOGIC_VECTOR (11 downto 0) := "001100000000";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv32_FE : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111110";
    constant ap_const_lv19_1F4 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000111110100";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal src_rows_blk_n : STD_LOGIC;
    signal src_cols_blk_n : STD_LOGIC;
    signal rects_rows_blk_n : STD_LOGIC;
    signal rects_cols_blk_n : STD_LOGIC;
    signal rects_rows_out_blk_n : STD_LOGIC;
    signal rects_cols_out_blk_n : STD_LOGIC;
    signal indvar_flatten_reg_489 : STD_LOGIC_VECTOR (3 downto 0);
    signal dr_i_reg_501 : STD_LOGIC_VECTOR (2 downto 0);
    signal dc_i_reg_512 : STD_LOGIC_VECTOR (2 downto 0);
    signal vector_length_read_a_1_reg_523 : STD_LOGIC_VECTOR (31 downto 0);
    signal y1_2_i_reg_534 : STD_LOGIC_VECTOR (15 downto 0);
    signal y0_2_i_reg_546 : STD_LOGIC_VECTOR (15 downto 0);
    signal x1_2_i_reg_558 : STD_LOGIC_VECTOR (15 downto 0);
    signal x0_2_i_reg_570 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal rects_rows_read_reg_1309 : STD_LOGIC_VECTOR (3 downto 0);
    signal rects_cols_read_reg_1314 : STD_LOGIC_VECTOR (9 downto 0);
    signal rows_reg_1319 : STD_LOGIC_VECTOR (31 downto 0);
    signal cols_reg_1326 : STD_LOGIC_VECTOR (31 downto 0);
    signal next_mul_fu_694_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal next_mul_reg_1332 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal exitcond2_i_fu_700_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_706_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_reg_1341 : STD_LOGIC_VECTOR (8 downto 0);
    signal j_fu_718_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_i_23_fu_743_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal i_1_fu_748_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_1_reg_1358 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_3_cast_fu_762_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_3_cast_reg_1363 : STD_LOGIC_VECTOR (11 downto 0);
    signal j_1_fu_780_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal tmp_1_fu_800_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_1_reg_1393 : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal next_mul1_fu_804_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal next_mul1_reg_1398 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_3_i_fu_814_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_i_reg_1403 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_2_fu_819_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_2_reg_1407 : STD_LOGIC_VECTOR (30 downto 0);
    signal y1_fu_825_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal y1_reg_1412 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_6_fu_829_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal j_2_fu_842_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal j_2_reg_1427 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal tmp_10_i_fu_837_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal label_val_addr_1_reg_1437 : STD_LOGIC_VECTOR (17 downto 0);
    signal or_cond_i_fu_682_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_1442 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal num_fu_867_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal num_reg_1446 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_i_fu_873_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_17_i_reg_1454 : STD_LOGIC_VECTOR (7 downto 0);
    signal x1_fu_880_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal points_length_fu_891_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal points_length_reg_1468 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal tmp_i_i_fu_885_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_fu_907_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_16_reg_1483 : STD_LOGIC_VECTOR (11 downto 0);
    signal points_val_x_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal c0_reg_1489 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal points_val_y_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal r0_reg_1494 : STD_LOGIC_VECTOR (15 downto 0);
    signal exitcond_flatten_fu_959_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_1500 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal ap_block_state13_pp2_stage0_iter0 : BOOLEAN;
    signal ap_block_state15_pp2_stage0_iter1 : BOOLEAN;
    signal ap_block_pp2_stage0_11001 : BOOLEAN;
    signal exitcond_i_fu_971_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_1504 : STD_LOGIC_VECTOR (0 downto 0);
    signal dc_i_mid2_fu_977_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal dc_i_mid2_reg_1509 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_26_i_mid1_fu_989_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_26_i_mid1_reg_1516 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_26_i_fu_995_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_26_i_reg_1521 : STD_LOGIC_VECTOR (2 downto 0);
    signal r_mid2_fu_1006_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_mid2_reg_1526 : STD_LOGIC_VECTOR (15 downto 0);
    signal dr_i_mid2_fu_1051_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal dr_i_mid2_reg_1536 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal c_fu_1063_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal c_reg_1541 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_cond8_i_fu_1097_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond8_i_reg_1551 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next_fu_1103_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal indvar_flatten_next_reg_1556 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_pp2_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage1 : signal is "none";
    signal ap_block_state14_pp2_stage1_iter0 : BOOLEAN;
    signal ap_block_pp2_stage1_11001 : BOOLEAN;
    signal demorgan_fu_1143_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal demorgan_reg_1561 : STD_LOGIC_VECTOR (0 downto 0);
    signal label_val_addr_2_reg_1570 : STD_LOGIC_VECTOR (17 downto 0);
    signal dc_fu_1162_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal dc_reg_1575 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_25_i_fu_1291_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal tmp_24_i_fu_1278_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp2_stage1_subdone : BOOLEAN;
    signal ap_condition_pp2_exit_iter0_state14 : STD_LOGIC;
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal label_val_address0 : STD_LOGIC_VECTOR (17 downto 0);
    signal label_val_ce0 : STD_LOGIC;
    signal label_val_we0 : STD_LOGIC;
    signal label_val_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal label_val_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal points_val_x_address0 : STD_LOGIC_VECTOR (16 downto 0);
    signal points_val_x_ce0 : STD_LOGIC;
    signal points_val_x_we0 : STD_LOGIC;
    signal points_val_x_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal points_val_y_address0 : STD_LOGIC_VECTOR (16 downto 0);
    signal points_val_y_ce0 : STD_LOGIC;
    signal points_val_y_we0 : STD_LOGIC;
    signal points_val_y_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_0_i_i_reg_346 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal phi_mul_reg_357 : STD_LOGIC_VECTOR (17 downto 0);
    signal j_0_i_i_reg_369 : STD_LOGIC_VECTOR (8 downto 0);
    signal exitcond3_i_fu_712_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_0_i1_i_reg_380 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal j_0_i1_i_reg_391 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_2_i_fu_775_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i1_i_reg_402 : STD_LOGIC_VECTOR (30 downto 0);
    signal phi_mul1_reg_413 : STD_LOGIC_VECTOR (39 downto 0);
    signal j2_i_reg_424 : STD_LOGIC_VECTOR (30 downto 0);
    signal vector_length_read_a_reg_436 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal y_i_reg_447 : STD_LOGIC_VECTOR (15 downto 0);
    signal y0_i_reg_457 : STD_LOGIC_VECTOR (15 downto 0);
    signal x_i_reg_468 : STD_LOGIC_VECTOR (15 downto 0);
    signal x0_i_reg_478 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_indvar_flatten_phi_fu_493_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp2_stage0 : BOOLEAN;
    signal ap_phi_mux_dr_i_phi_fu_505_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_phi_mux_dc_i_phi_fu_516_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_phi_mux_points_length_5_i_phi_fu_586_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_y1_4_i_phi_fu_601_p6 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_y0_4_i_phi_fu_616_p6 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_x1_4_i_phi_fu_631_p6 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_x0_4_i_phi_fu_646_p6 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp2_iter0_points_length_5_i_reg_582 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter1_points_length_5_i_reg_582 : STD_LOGIC_VECTOR (31 downto 0);
    signal points_length_1_fu_1167_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_cond9_i_fu_688_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp2_iter0_y1_4_i_reg_597 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp2_iter1_y1_4_i_reg_597 : STD_LOGIC_VECTOR (15 downto 0);
    signal y1_1_fu_1224_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp2_iter0_y0_4_i_reg_612 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp2_iter1_y0_4_i_reg_612 : STD_LOGIC_VECTOR (15 downto 0);
    signal y0_fu_1211_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp2_iter0_x1_4_i_reg_627 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp2_iter1_x1_4_i_reg_627 : STD_LOGIC_VECTOR (15 downto 0);
    signal x1_1_fu_1198_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp2_iter0_x0_4_i_reg_642 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp2_iter1_x0_4_i_reg_642 : STD_LOGIC_VECTOR (15 downto 0);
    signal x0_fu_1185_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal storemerge_reg_657 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_4_cast_fu_734_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_5_cast_fu_795_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_7_cast_fu_857_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_2_i_i_fu_897_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_19_i_fu_903_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_8_cast_fu_916_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_12_cast_fu_1156_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp2_stage1 : BOOLEAN;
    signal tmp_1_i42_i_fu_1174_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_9_cast_fu_1237_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_10_cast_fu_1247_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal num_1_fu_144 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_21_i_fu_1258_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_23_i_fu_1271_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal grp_fu_670_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_676_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_i_cast_fu_724_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_4_fu_728_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal i_0_i1_cast_cast_i_fu_739_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_2_fu_754_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal j_0_i1_cast_cast_i_fu_771_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_8_i_cast_fu_786_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_5_fu_790_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal i1_cast_i_fu_810_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal j2_cast_i_fu_833_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_fu_848_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_7_fu_852_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_14_fu_863_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_8_fu_910_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal dr_cast_i_fu_921_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_fu_925_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_18_fu_930_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_28_i_fu_944_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_29_i_fu_948_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_fu_938_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal dr_fu_965_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal dr_cast_i_mid1_fu_985_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_mid1_fu_1001_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_19_fu_1014_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_28_i_mid1_fu_1028_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_29_i_mid1_fu_1032_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev1_fu_1022_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_mid1_fu_1037_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_953_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal dc_cast_i_fu_1059_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_20_fu_1068_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_i_fu_1082_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_35_i_fu_1086_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev2_fu_1076_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp1_fu_1091_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_mid2_fu_1043_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_i_mid2_fu_1109_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_32_i_fu_1117_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal dist_fu_1121_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_21_fu_1127_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_fu_1137_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_1297_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_37_i_cast_fu_1148_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_10_fu_1151_p2 : STD_LOGIC_VECTOR (18 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of tmp_10_fu_1151_p2 : signal is "no";
    signal tmp_40_i_fu_1180_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_i_fu_1193_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_42_i_fu_1206_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_43_i_fu_1219_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_fu_1232_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_s_fu_1242_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_20_i_fu_1252_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_22_i_fu_1265_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_17_fu_1287_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_3_fu_1297_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_block_pp2_stage0_subdone : BOOLEAN;
    signal ap_idle_pp2 : STD_LOGIC;
    signal ap_enable_pp2 : STD_LOGIC;
    signal ap_condition_1007 : BOOLEAN;
    signal ap_condition_313 : BOOLEAN;

    component SeedFill2_Core_mueOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        dout : OUT STD_LOGIC_VECTOR (18 downto 0) );
    end component;


    component SeedFilling_labelbkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (17 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component SeedFilling_pointcud IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (16 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    label_val_U : component SeedFilling_labelbkb
    generic map (
        DataWidth => 8,
        AddressRange => 250000,
        AddressWidth => 18)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => label_val_address0,
        ce0 => label_val_ce0,
        we0 => label_val_we0,
        d0 => label_val_d0,
        q0 => label_val_q0);

    points_val_x_U : component SeedFilling_pointcud
    generic map (
        DataWidth => 16,
        AddressRange => 125000,
        AddressWidth => 17)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => points_val_x_address0,
        ce0 => points_val_x_ce0,
        we0 => points_val_x_we0,
        d0 => points_val_x_d0,
        q0 => points_val_x_q0);

    points_val_y_U : component SeedFilling_pointcud
    generic map (
        DataWidth => 16,
        AddressRange => 125000,
        AddressWidth => 17)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => points_val_y_address0,
        ce0 => points_val_y_ce0,
        we0 => points_val_y_we0,
        d0 => points_val_y_d0,
        q0 => points_val_y_q0);

    SeedFill2_Core_mueOg_U25 : component SeedFill2_Core_mueOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 10,
        dout_WIDTH => 19)
    port map (
        din0 => r_mid2_reg_1526,
        din1 => tmp_3_fu_1297_p1,
        dout => tmp_3_fu_1297_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp2_stage1_subdone) and (ap_const_logic_1 = ap_condition_pp2_exit_iter0_state14) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp2_stage1_subdone) and (ap_const_logic_1 = ap_condition_pp2_exit_iter0_state14) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1))) then 
                    ap_enable_reg_pp2_iter1 <= (ap_const_logic_1 xor ap_condition_pp2_exit_iter0_state14);
                elsif (((ap_const_boolean_0 = ap_block_pp2_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1))) then 
                    ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                    ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp2_iter1_points_length_5_i_reg_582_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_313)) then
                if (((demorgan_fu_1143_p2 = ap_const_lv1_0) and (exitcond_flatten_reg_1500 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp2_iter1_points_length_5_i_reg_582 <= vector_length_read_a_1_reg_523;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp2_iter1_points_length_5_i_reg_582 <= ap_phi_reg_pp2_iter0_points_length_5_i_reg_582;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp2_iter1_x0_4_i_reg_642_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_313)) then
                if (((demorgan_fu_1143_p2 = ap_const_lv1_0) and (exitcond_flatten_reg_1500 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp2_iter1_x0_4_i_reg_642 <= x0_2_i_reg_570;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp2_iter1_x0_4_i_reg_642 <= ap_phi_reg_pp2_iter0_x0_4_i_reg_642;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp2_iter1_x1_4_i_reg_627_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_313)) then
                if (((demorgan_fu_1143_p2 = ap_const_lv1_0) and (exitcond_flatten_reg_1500 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp2_iter1_x1_4_i_reg_627 <= x1_2_i_reg_558;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp2_iter1_x1_4_i_reg_627 <= ap_phi_reg_pp2_iter0_x1_4_i_reg_627;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp2_iter1_y0_4_i_reg_612_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_313)) then
                if (((demorgan_fu_1143_p2 = ap_const_lv1_0) and (exitcond_flatten_reg_1500 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp2_iter1_y0_4_i_reg_612 <= y0_2_i_reg_546;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp2_iter1_y0_4_i_reg_612 <= ap_phi_reg_pp2_iter0_y0_4_i_reg_612;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp2_iter1_y1_4_i_reg_597_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_313)) then
                if (((demorgan_fu_1143_p2 = ap_const_lv1_0) and (exitcond_flatten_reg_1500 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp2_iter1_y1_4_i_reg_597 <= y1_2_i_reg_534;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp2_iter1_y1_4_i_reg_597 <= ap_phi_reg_pp2_iter0_y1_4_i_reg_597;
                end if;
            end if; 
        end if;
    end process;

    dc_i_reg_512_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (exitcond_flatten_reg_1500 = ap_const_lv1_0))) then 
                dc_i_reg_512 <= dc_reg_1575;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                dc_i_reg_512 <= ap_const_lv3_7;
            end if; 
        end if;
    end process;

    dr_i_reg_501_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (exitcond_flatten_reg_1500 = ap_const_lv1_0))) then 
                dr_i_reg_501 <= dr_i_mid2_reg_1536;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                dr_i_reg_501 <= ap_const_lv3_7;
            end if; 
        end if;
    end process;

    i1_i_reg_402_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) and (tmp_10_i_fu_837_p2 = ap_const_lv1_0))) then 
                i1_i_reg_402 <= i_2_reg_1407;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (tmp_i_23_fu_743_p2 = ap_const_lv1_0))) then 
                i1_i_reg_402 <= ap_const_lv31_0;
            end if; 
        end if;
    end process;

    i_0_i1_i_reg_380_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond2_i_fu_700_p2 = ap_const_lv1_1))) then 
                i_0_i1_i_reg_380 <= ap_const_lv3_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                i_0_i1_i_reg_380 <= i_1_reg_1358;
            end if; 
        end if;
    end process;

    i_0_i_i_reg_346_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                i_0_i_i_reg_346 <= i_reg_1341;
            elsif ((not(((rects_cols_out_full_n = ap_const_logic_0) or (rects_rows_out_full_n = ap_const_logic_0) or (rects_cols_empty_n = ap_const_logic_0) or (rects_rows_empty_n = ap_const_logic_0) or (src_cols_empty_n = ap_const_logic_0) or (src_rows_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_0_i_i_reg_346 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_489_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (exitcond_flatten_reg_1500 = ap_const_lv1_0))) then 
                indvar_flatten_reg_489 <= indvar_flatten_next_reg_1556;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                indvar_flatten_reg_489 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    j2_i_reg_424_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state17) and (((tmp_24_i_fu_1278_p2 = ap_const_lv1_0) and (tmp_3_i_reg_1403 = ap_const_lv1_1)) or ((or_cond_i_reg_1442 = ap_const_lv1_0) and (tmp_3_i_reg_1403 = ap_const_lv1_1))))) then 
                j2_i_reg_424 <= j_2_reg_1427;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state8) and (tmp_3_i_fu_814_p2 = ap_const_lv1_1))) then 
                j2_i_reg_424 <= ap_const_lv31_0;
            end if; 
        end if;
    end process;

    j_0_i1_i_reg_391_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (tmp_i_23_fu_743_p2 = ap_const_lv1_1))) then 
                j_0_i1_i_reg_391 <= ap_const_lv9_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_2_i_fu_775_p2 = ap_const_lv1_1))) then 
                j_0_i1_i_reg_391 <= j_1_fu_780_p2;
            end if; 
        end if;
    end process;

    j_0_i_i_reg_369_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond2_i_fu_700_p2 = ap_const_lv1_0))) then 
                j_0_i_i_reg_369 <= ap_const_lv9_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond3_i_fu_712_p2 = ap_const_lv1_0))) then 
                j_0_i_i_reg_369 <= j_fu_718_p2;
            end if; 
        end if;
    end process;

    num_1_fu_144_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state17) and (tmp_24_i_fu_1278_p2 = ap_const_lv1_0) and (or_cond_i_reg_1442 = ap_const_lv1_1) and (tmp_3_i_reg_1403 = ap_const_lv1_1))) then 
                num_1_fu_144 <= num_reg_1446;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (tmp_i_23_fu_743_p2 = ap_const_lv1_0))) then 
                num_1_fu_144 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    phi_mul1_reg_413_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) and (tmp_10_i_fu_837_p2 = ap_const_lv1_0))) then 
                phi_mul1_reg_413 <= next_mul1_reg_1398;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (tmp_i_23_fu_743_p2 = ap_const_lv1_0))) then 
                phi_mul1_reg_413 <= ap_const_lv40_0;
            end if; 
        end if;
    end process;

    phi_mul_reg_357_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                phi_mul_reg_357 <= next_mul_reg_1332;
            elsif ((not(((rects_cols_out_full_n = ap_const_logic_0) or (rects_rows_out_full_n = ap_const_logic_0) or (rects_cols_empty_n = ap_const_logic_0) or (rects_rows_empty_n = ap_const_logic_0) or (src_cols_empty_n = ap_const_logic_0) or (src_rows_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                phi_mul_reg_357 <= ap_const_lv18_0;
            end if; 
        end if;
    end process;

    storemerge_reg_657_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state17) and (tmp_24_i_fu_1278_p2 = ap_const_lv1_1) and (or_cond_i_reg_1442 = ap_const_lv1_1) and (tmp_3_i_reg_1403 = ap_const_lv1_1))) then 
                storemerge_reg_657 <= tmp_25_i_fu_1291_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state8) and (tmp_3_i_fu_814_p2 = ap_const_lv1_0))) then 
                storemerge_reg_657 <= tmp_6_fu_829_p1;
            end if; 
        end if;
    end process;

    vector_length_read_a_1_reg_523_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (exitcond_flatten_reg_1500 = ap_const_lv1_0))) then 
                vector_length_read_a_1_reg_523 <= ap_phi_mux_points_length_5_i_phi_fu_586_p6;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                vector_length_read_a_1_reg_523 <= points_length_reg_1468;
            end if; 
        end if;
    end process;

    vector_length_read_a_reg_436_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                vector_length_read_a_reg_436 <= vector_length_read_a_1_reg_523;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and (or_cond_i_fu_682_p2 = ap_const_lv1_1))) then 
                vector_length_read_a_reg_436 <= ap_const_lv32_1;
            end if; 
        end if;
    end process;

    x0_2_i_reg_570_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (exitcond_flatten_reg_1500 = ap_const_lv1_0))) then 
                x0_2_i_reg_570 <= ap_phi_mux_x0_4_i_phi_fu_646_p6;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                x0_2_i_reg_570 <= x0_i_reg_478;
            end if; 
        end if;
    end process;

    x0_i_reg_478_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                x0_i_reg_478 <= x0_2_i_reg_570;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and (or_cond_i_fu_682_p2 = ap_const_lv1_1))) then 
                x0_i_reg_478 <= x1_fu_880_p1;
            end if; 
        end if;
    end process;

    x1_2_i_reg_558_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (exitcond_flatten_reg_1500 = ap_const_lv1_0))) then 
                x1_2_i_reg_558 <= ap_phi_mux_x1_4_i_phi_fu_631_p6;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                x1_2_i_reg_558 <= x_i_reg_468;
            end if; 
        end if;
    end process;

    x_i_reg_468_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                x_i_reg_468 <= x1_2_i_reg_558;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and (or_cond_i_fu_682_p2 = ap_const_lv1_1))) then 
                x_i_reg_468 <= x1_fu_880_p1;
            end if; 
        end if;
    end process;

    y0_2_i_reg_546_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (exitcond_flatten_reg_1500 = ap_const_lv1_0))) then 
                y0_2_i_reg_546 <= ap_phi_mux_y0_4_i_phi_fu_616_p6;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                y0_2_i_reg_546 <= y0_i_reg_457;
            end if; 
        end if;
    end process;

    y0_i_reg_457_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                y0_i_reg_457 <= y0_2_i_reg_546;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and (or_cond_i_fu_682_p2 = ap_const_lv1_1))) then 
                y0_i_reg_457 <= y1_reg_1412;
            end if; 
        end if;
    end process;

    y1_2_i_reg_534_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (exitcond_flatten_reg_1500 = ap_const_lv1_0))) then 
                y1_2_i_reg_534 <= ap_phi_mux_y1_4_i_phi_fu_601_p6;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                y1_2_i_reg_534 <= y_i_reg_447;
            end if; 
        end if;
    end process;

    y_i_reg_447_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                y_i_reg_447 <= y1_2_i_reg_534;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and (or_cond_i_fu_682_p2 = ap_const_lv1_1))) then 
                y_i_reg_447 <= y1_reg_1412;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                c0_reg_1489 <= points_val_x_q0;
                r0_reg_1494 <= points_val_y_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (exitcond_flatten_fu_959_p2 = ap_const_lv1_0))) then
                c_reg_1541 <= c_fu_1063_p2;
                dc_i_mid2_reg_1509 <= dc_i_mid2_fu_977_p3;
                exitcond_i_reg_1504 <= exitcond_i_fu_971_p2;
                or_cond8_i_reg_1551 <= or_cond8_i_fu_1097_p2;
                r_mid2_reg_1526 <= r_mid2_fu_1006_p3;
                tmp_26_i_mid1_reg_1516 <= tmp_26_i_mid1_fu_989_p2;
                tmp_26_i_reg_1521 <= tmp_26_i_fu_995_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((rects_cols_out_full_n = ap_const_logic_0) or (rects_rows_out_full_n = ap_const_logic_0) or (rects_cols_empty_n = ap_const_logic_0) or (rects_rows_empty_n = ap_const_logic_0) or (src_cols_empty_n = ap_const_logic_0) or (src_rows_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                cols_reg_1326 <= src_cols_dout;
                rects_cols_read_reg_1314 <= rects_cols_dout;
                rects_rows_read_reg_1309 <= rects_rows_dout;
                rows_reg_1319 <= src_rows_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_1500 = ap_const_lv1_0))) then
                dc_reg_1575 <= dc_fu_1162_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (exitcond_flatten_reg_1500 = ap_const_lv1_0))) then
                demorgan_reg_1561 <= demorgan_fu_1143_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (exitcond_flatten_fu_959_p2 = ap_const_lv1_0))) then
                dr_i_mid2_reg_1536 <= dr_i_mid2_fu_1051_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                exitcond_flatten_reg_1500 <= exitcond_flatten_fu_959_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                i_1_reg_1358 <= i_1_fu_748_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                i_2_reg_1407 <= i_2_fu_819_p2;
                next_mul1_reg_1398 <= next_mul1_fu_804_p2;
                tmp_1_reg_1393 <= tmp_1_fu_800_p1;
                tmp_3_i_reg_1403 <= tmp_3_i_fu_814_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_reg_1341 <= i_fu_706_p2;
                next_mul_reg_1332 <= next_mul_fu_694_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) then
                indvar_flatten_next_reg_1556 <= indvar_flatten_next_fu_1103_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                j_2_reg_1427 <= j_2_fu_842_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) and (tmp_10_i_fu_837_p2 = ap_const_lv1_1))) then
                label_val_addr_1_reg_1437 <= tmp_7_cast_fu_857_p1(18 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (exitcond_flatten_reg_1500 = ap_const_lv1_0) and (demorgan_fu_1143_p2 = ap_const_lv1_1))) then
                label_val_addr_2_reg_1570 <= tmp_12_cast_fu_1156_p1(18 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state10) and (or_cond_i_fu_682_p2 = ap_const_lv1_1))) then
                num_reg_1446 <= num_fu_867_p2;
                tmp_17_i_reg_1454 <= tmp_17_i_fu_873_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                or_cond_i_reg_1442 <= or_cond_i_fu_682_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (tmp_i_i_fu_885_p2 = ap_const_lv1_0))) then
                points_length_reg_1468 <= points_length_fu_891_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (tmp_i_i_fu_885_p2 = ap_const_lv1_1))) then
                tmp_16_reg_1483 <= tmp_16_fu_907_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (tmp_i_23_fu_743_p2 = ap_const_lv1_1))) then
                    tmp_3_cast_reg_1363(10 downto 8) <= tmp_3_cast_fu_762_p1(10 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (tmp_3_i_fu_814_p2 = ap_const_lv1_1))) then
                y1_reg_1412 <= y1_fu_825_p1;
            end if;
        end if;
    end process;
    tmp_3_cast_reg_1363(7 downto 0) <= "00000000";
    tmp_3_cast_reg_1363(11) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, src_rows_empty_n, src_cols_empty_n, rects_rows_empty_n, rects_cols_empty_n, rects_rows_out_full_n, rects_cols_out_full_n, ap_CS_fsm_state2, exitcond2_i_fu_700_p2, ap_CS_fsm_state3, tmp_i_23_fu_743_p2, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state8, tmp_3_i_fu_814_p2, tmp_3_i_reg_1403, ap_CS_fsm_state9, tmp_10_i_fu_837_p2, or_cond_i_fu_682_p2, or_cond_i_reg_1442, ap_CS_fsm_state10, ap_CS_fsm_state11, tmp_i_i_fu_885_p2, exitcond_flatten_reg_1500, ap_enable_reg_pp2_iter0, ap_CS_fsm_state17, tmp_24_i_fu_1278_p2, ap_block_pp2_stage1_subdone, exitcond3_i_fu_712_p2, tmp_2_i_fu_775_p2, ap_block_pp2_stage0_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((rects_cols_out_full_n = ap_const_logic_0) or (rects_rows_out_full_n = ap_const_logic_0) or (rects_cols_empty_n = ap_const_logic_0) or (rects_rows_empty_n = ap_const_logic_0) or (src_cols_empty_n = ap_const_logic_0) or (src_rows_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond2_i_fu_700_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond3_i_fu_712_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (tmp_i_23_fu_743_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_2_i_fu_775_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (tmp_3_i_fu_814_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (tmp_10_i_fu_837_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state10 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state10) and (or_cond_i_fu_682_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state11 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state11) and (tmp_i_i_fu_885_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
            when ap_ST_fsm_pp2_stage0 => 
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_pp2_stage1 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp2_stage1_subdone) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_1500 = ap_const_lv1_1))) and (ap_const_boolean_0 = ap_block_pp2_stage1_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp2_stage1_subdone) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (exitcond_flatten_reg_1500 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage1;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state17 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state17) and ((tmp_3_i_reg_1403 = ap_const_lv1_0) or ((tmp_24_i_fu_1278_p2 = ap_const_lv1_1) and (or_cond_i_reg_1442 = ap_const_lv1_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(12);
    ap_CS_fsm_pp2_stage1 <= ap_CS_fsm(13);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state16 <= ap_CS_fsm(14);
    ap_CS_fsm_state17 <= ap_CS_fsm(15);
    ap_CS_fsm_state18 <= ap_CS_fsm(16);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
        ap_block_pp2_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, src_rows_empty_n, src_cols_empty_n, rects_rows_empty_n, rects_cols_empty_n, rects_rows_out_full_n, rects_cols_out_full_n)
    begin
                ap_block_state1 <= ((rects_cols_out_full_n = ap_const_logic_0) or (rects_rows_out_full_n = ap_const_logic_0) or (rects_cols_empty_n = ap_const_logic_0) or (rects_rows_empty_n = ap_const_logic_0) or (src_cols_empty_n = ap_const_logic_0) or (src_rows_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state13_pp2_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp2_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp2_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_1007_assign_proc : process(exitcond_flatten_reg_1500, ap_CS_fsm_pp2_stage0, demorgan_reg_1561, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0)
    begin
                ap_condition_1007 <= ((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (exitcond_flatten_reg_1500 = ap_const_lv1_0) and (demorgan_reg_1561 = ap_const_lv1_1));
    end process;


    ap_condition_313_assign_proc : process(ap_enable_reg_pp2_iter0, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_11001)
    begin
                ap_condition_313 <= ((ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1));
    end process;


    ap_condition_pp2_exit_iter0_state14_assign_proc : process(exitcond_flatten_reg_1500)
    begin
        if ((exitcond_flatten_reg_1500 = ap_const_lv1_1)) then 
            ap_condition_pp2_exit_iter0_state14 <= ap_const_logic_1;
        else 
            ap_condition_pp2_exit_iter0_state14 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp2 <= (ap_idle_pp2 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp2_assign_proc : process(ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_0))) then 
            ap_idle_pp2 <= ap_const_logic_1;
        else 
            ap_idle_pp2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_dc_i_phi_fu_516_p4_assign_proc : process(dc_i_reg_512, exitcond_flatten_reg_1500, ap_CS_fsm_pp2_stage0, dc_reg_1575, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (exitcond_flatten_reg_1500 = ap_const_lv1_0))) then 
            ap_phi_mux_dc_i_phi_fu_516_p4 <= dc_reg_1575;
        else 
            ap_phi_mux_dc_i_phi_fu_516_p4 <= dc_i_reg_512;
        end if; 
    end process;


    ap_phi_mux_dr_i_phi_fu_505_p4_assign_proc : process(dr_i_reg_501, exitcond_flatten_reg_1500, ap_CS_fsm_pp2_stage0, dr_i_mid2_reg_1536, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (exitcond_flatten_reg_1500 = ap_const_lv1_0))) then 
            ap_phi_mux_dr_i_phi_fu_505_p4 <= dr_i_mid2_reg_1536;
        else 
            ap_phi_mux_dr_i_phi_fu_505_p4 <= dr_i_reg_501;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten_phi_fu_493_p4_assign_proc : process(indvar_flatten_reg_489, exitcond_flatten_reg_1500, ap_CS_fsm_pp2_stage0, indvar_flatten_next_reg_1556, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (exitcond_flatten_reg_1500 = ap_const_lv1_0))) then 
            ap_phi_mux_indvar_flatten_phi_fu_493_p4 <= indvar_flatten_next_reg_1556;
        else 
            ap_phi_mux_indvar_flatten_phi_fu_493_p4 <= indvar_flatten_reg_489;
        end if; 
    end process;


    ap_phi_mux_points_length_5_i_phi_fu_586_p6_assign_proc : process(vector_length_read_a_1_reg_523, ap_phi_reg_pp2_iter1_points_length_5_i_reg_582, points_length_1_fu_1167_p2, or_cond9_i_fu_688_p2, ap_condition_1007)
    begin
        if ((ap_const_boolean_1 = ap_condition_1007)) then
            if ((or_cond9_i_fu_688_p2 = ap_const_lv1_0)) then 
                ap_phi_mux_points_length_5_i_phi_fu_586_p6 <= vector_length_read_a_1_reg_523;
            elsif ((or_cond9_i_fu_688_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_points_length_5_i_phi_fu_586_p6 <= points_length_1_fu_1167_p2;
            else 
                ap_phi_mux_points_length_5_i_phi_fu_586_p6 <= ap_phi_reg_pp2_iter1_points_length_5_i_reg_582;
            end if;
        else 
            ap_phi_mux_points_length_5_i_phi_fu_586_p6 <= ap_phi_reg_pp2_iter1_points_length_5_i_reg_582;
        end if; 
    end process;


    ap_phi_mux_x0_4_i_phi_fu_646_p6_assign_proc : process(x0_2_i_reg_570, or_cond9_i_fu_688_p2, ap_phi_reg_pp2_iter1_x0_4_i_reg_642, x0_fu_1185_p3, ap_condition_1007)
    begin
        if ((ap_const_boolean_1 = ap_condition_1007)) then
            if ((or_cond9_i_fu_688_p2 = ap_const_lv1_0)) then 
                ap_phi_mux_x0_4_i_phi_fu_646_p6 <= x0_2_i_reg_570;
            elsif ((or_cond9_i_fu_688_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_x0_4_i_phi_fu_646_p6 <= x0_fu_1185_p3;
            else 
                ap_phi_mux_x0_4_i_phi_fu_646_p6 <= ap_phi_reg_pp2_iter1_x0_4_i_reg_642;
            end if;
        else 
            ap_phi_mux_x0_4_i_phi_fu_646_p6 <= ap_phi_reg_pp2_iter1_x0_4_i_reg_642;
        end if; 
    end process;


    ap_phi_mux_x1_4_i_phi_fu_631_p6_assign_proc : process(x1_2_i_reg_558, or_cond9_i_fu_688_p2, ap_phi_reg_pp2_iter1_x1_4_i_reg_627, x1_1_fu_1198_p3, ap_condition_1007)
    begin
        if ((ap_const_boolean_1 = ap_condition_1007)) then
            if ((or_cond9_i_fu_688_p2 = ap_const_lv1_0)) then 
                ap_phi_mux_x1_4_i_phi_fu_631_p6 <= x1_2_i_reg_558;
            elsif ((or_cond9_i_fu_688_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_x1_4_i_phi_fu_631_p6 <= x1_1_fu_1198_p3;
            else 
                ap_phi_mux_x1_4_i_phi_fu_631_p6 <= ap_phi_reg_pp2_iter1_x1_4_i_reg_627;
            end if;
        else 
            ap_phi_mux_x1_4_i_phi_fu_631_p6 <= ap_phi_reg_pp2_iter1_x1_4_i_reg_627;
        end if; 
    end process;


    ap_phi_mux_y0_4_i_phi_fu_616_p6_assign_proc : process(y0_2_i_reg_546, or_cond9_i_fu_688_p2, ap_phi_reg_pp2_iter1_y0_4_i_reg_612, y0_fu_1211_p3, ap_condition_1007)
    begin
        if ((ap_const_boolean_1 = ap_condition_1007)) then
            if ((or_cond9_i_fu_688_p2 = ap_const_lv1_0)) then 
                ap_phi_mux_y0_4_i_phi_fu_616_p6 <= y0_2_i_reg_546;
            elsif ((or_cond9_i_fu_688_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_y0_4_i_phi_fu_616_p6 <= y0_fu_1211_p3;
            else 
                ap_phi_mux_y0_4_i_phi_fu_616_p6 <= ap_phi_reg_pp2_iter1_y0_4_i_reg_612;
            end if;
        else 
            ap_phi_mux_y0_4_i_phi_fu_616_p6 <= ap_phi_reg_pp2_iter1_y0_4_i_reg_612;
        end if; 
    end process;


    ap_phi_mux_y1_4_i_phi_fu_601_p6_assign_proc : process(y1_2_i_reg_534, or_cond9_i_fu_688_p2, ap_phi_reg_pp2_iter1_y1_4_i_reg_597, y1_1_fu_1224_p3, ap_condition_1007)
    begin
        if ((ap_const_boolean_1 = ap_condition_1007)) then
            if ((or_cond9_i_fu_688_p2 = ap_const_lv1_0)) then 
                ap_phi_mux_y1_4_i_phi_fu_601_p6 <= y1_2_i_reg_534;
            elsif ((or_cond9_i_fu_688_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_y1_4_i_phi_fu_601_p6 <= y1_1_fu_1224_p3;
            else 
                ap_phi_mux_y1_4_i_phi_fu_601_p6 <= ap_phi_reg_pp2_iter1_y1_4_i_reg_597;
            end if;
        else 
            ap_phi_mux_y1_4_i_phi_fu_601_p6 <= ap_phi_reg_pp2_iter1_y1_4_i_reg_597;
        end if; 
    end process;

    ap_phi_reg_pp2_iter0_points_length_5_i_reg_582 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp2_iter0_x0_4_i_reg_642 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp2_iter0_x1_4_i_reg_627 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp2_iter0_y0_4_i_reg_612 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp2_iter0_y1_4_i_reg_597 <= "XXXXXXXXXXXXXXXX";

    ap_ready_assign_proc : process(ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    c_fu_1063_p2 <= std_logic_vector(signed(dc_cast_i_fu_1059_p1) + signed(c0_reg_1489));
        dc_cast_i_fu_1059_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(dc_i_mid2_fu_977_p3),16));

    dc_fu_1162_p2 <= std_logic_vector(signed(dc_i_mid2_reg_1509) + signed(ap_const_lv3_1));
    dc_i_mid2_fu_977_p3 <= 
        ap_const_lv3_7 when (exitcond_i_fu_971_p2(0) = '1') else 
        ap_phi_mux_dc_i_phi_fu_516_p4;
    demorgan_fu_1143_p2 <= (or_cond8_i_reg_1551 and icmp_fu_1137_p2);
    dist_fu_1121_p2 <= std_logic_vector(unsigned(tmp_26_i_mid2_fu_1109_p3) + unsigned(tmp_32_i_fu_1117_p2));
        dr_cast_i_fu_921_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_phi_mux_dr_i_phi_fu_505_p4),16));

        dr_cast_i_mid1_fu_985_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(dr_fu_965_p2),16));

    dr_fu_965_p2 <= std_logic_vector(signed(ap_phi_mux_dr_i_phi_fu_505_p4) + signed(ap_const_lv3_1));
    dr_i_mid2_fu_1051_p3 <= 
        dr_fu_965_p2 when (exitcond_i_fu_971_p2(0) = '1') else 
        ap_phi_mux_dr_i_phi_fu_505_p4;
    exitcond2_i_fu_700_p2 <= "1" when (i_0_i_i_reg_346 = ap_const_lv9_1F4) else "0";
    exitcond3_i_fu_712_p2 <= "1" when (j_0_i_i_reg_369 = ap_const_lv9_1F4) else "0";
    exitcond_flatten_fu_959_p2 <= "1" when (ap_phi_mux_indvar_flatten_phi_fu_493_p4 = ap_const_lv4_9) else "0";
    exitcond_i_fu_971_p2 <= "1" when (ap_phi_mux_dc_i_phi_fu_516_p4 = ap_const_lv3_2) else "0";
    grp_fu_670_p2 <= "0" when (src_val_q0 = ap_const_lv8_0) else "1";
    grp_fu_676_p2 <= "1" when (label_val_q0 = ap_const_lv8_0) else "0";
    i1_cast_i_fu_810_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i1_i_reg_402),32));
    i_0_i1_cast_cast_i_fu_739_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i1_i_reg_380),4));
    i_1_fu_748_p2 <= std_logic_vector(unsigned(i_0_i1_i_reg_380) + unsigned(ap_const_lv3_1));
    i_2_fu_819_p2 <= std_logic_vector(unsigned(ap_const_lv31_1) + unsigned(i1_i_reg_402));
    i_fu_706_p2 <= std_logic_vector(unsigned(i_0_i_i_reg_346) + unsigned(ap_const_lv9_1));
    icmp_fu_1137_p2 <= "0" when (tmp_21_fu_1127_p4 = ap_const_lv2_1) else "1";
    indvar_flatten_next_fu_1103_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_489) + unsigned(ap_const_lv4_1));
    j2_cast_i_fu_833_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j2_i_reg_424),32));
    j_0_i1_cast_cast_i_fu_771_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_0_i1_i_reg_391),10));
    j_1_fu_780_p2 <= std_logic_vector(unsigned(j_0_i1_i_reg_391) + unsigned(ap_const_lv9_1));
    j_2_fu_842_p2 <= std_logic_vector(unsigned(j2_i_reg_424) + unsigned(ap_const_lv31_1));
    j_fu_718_p2 <= std_logic_vector(unsigned(j_0_i_i_reg_369) + unsigned(ap_const_lv9_1));

    label_val_address0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state9, label_val_addr_1_reg_1437, ap_CS_fsm_state10, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp2_stage1, label_val_addr_2_reg_1570, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0, tmp_4_cast_fu_734_p1, tmp_7_cast_fu_857_p1, tmp_12_cast_fu_1156_p1, ap_block_pp2_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            label_val_address0 <= label_val_addr_2_reg_1570;
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) then 
            label_val_address0 <= tmp_12_cast_fu_1156_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            label_val_address0 <= label_val_addr_1_reg_1437;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            label_val_address0 <= tmp_7_cast_fu_857_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            label_val_address0 <= tmp_4_cast_fu_734_p1(18 - 1 downto 0);
        else 
            label_val_address0 <= "XXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    label_val_ce0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_11001, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)))) then 
            label_val_ce0 <= ap_const_logic_1;
        else 
            label_val_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    label_val_d0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state10, tmp_17_i_fu_873_p2, tmp_17_i_reg_1454, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            label_val_d0 <= tmp_17_i_reg_1454;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            label_val_d0 <= tmp_17_i_fu_873_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            label_val_d0 <= ap_const_lv8_0;
        else 
            label_val_d0 <= "XXXXXXXX";
        end if; 
    end process;


    label_val_we0_assign_proc : process(ap_CS_fsm_state3, or_cond_i_fu_682_p2, ap_CS_fsm_state10, exitcond_flatten_reg_1500, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, demorgan_reg_1561, ap_enable_reg_pp2_iter1, exitcond3_i_fu_712_p2, or_cond9_i_fu_688_p2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (exitcond_flatten_reg_1500 = ap_const_lv1_0) and (or_cond9_i_fu_688_p2 = ap_const_lv1_1) and (demorgan_reg_1561 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state10) and (or_cond_i_fu_682_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond3_i_fu_712_p2 = ap_const_lv1_0)))) then 
            label_val_we0 <= ap_const_logic_1;
        else 
            label_val_we0 <= ap_const_logic_0;
        end if; 
    end process;

    next_mul1_fu_804_p2 <= std_logic_vector(unsigned(ap_const_lv40_1F4) + unsigned(phi_mul1_reg_413));
    next_mul_fu_694_p2 <= std_logic_vector(unsigned(phi_mul_reg_357) + unsigned(ap_const_lv18_1F4));
    num_fu_867_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(num_1_fu_144));
    or_cond8_i_fu_1097_p2 <= (tmp_mid2_fu_1043_p3 and tmp1_fu_1091_p2);
    or_cond9_i_fu_688_p2 <= (grp_fu_676_p2 and grp_fu_670_p2);
    or_cond_i_fu_682_p2 <= (grp_fu_676_p2 and grp_fu_670_p2);
    points_length_1_fu_1167_p2 <= std_logic_vector(signed(vector_length_read_a_1_reg_523) + signed(ap_const_lv32_1));
    points_length_fu_891_p2 <= std_logic_vector(unsigned(vector_length_read_a_reg_436) + unsigned(ap_const_lv32_FFFFFFFF));

    points_val_x_address0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0, tmp_2_i_i_fu_897_p1, tmp_1_i42_i_fu_1174_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            points_val_x_address0 <= tmp_1_i42_i_fu_1174_p1(17 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            points_val_x_address0 <= tmp_2_i_i_fu_897_p1(17 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            points_val_x_address0 <= ap_const_lv64_0(17 - 1 downto 0);
        else 
            points_val_x_address0 <= "XXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    points_val_x_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)))) then 
            points_val_x_ce0 <= ap_const_logic_1;
        else 
            points_val_x_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    points_val_x_d0_assign_proc : process(ap_CS_fsm_state10, x1_fu_880_p1, ap_CS_fsm_pp2_stage0, c_reg_1541, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            points_val_x_d0 <= c_reg_1541;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            points_val_x_d0 <= x1_fu_880_p1;
        else 
            points_val_x_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    points_val_x_we0_assign_proc : process(or_cond_i_fu_682_p2, ap_CS_fsm_state10, exitcond_flatten_reg_1500, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, demorgan_reg_1561, ap_enable_reg_pp2_iter1, or_cond9_i_fu_688_p2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (exitcond_flatten_reg_1500 = ap_const_lv1_0) and (or_cond9_i_fu_688_p2 = ap_const_lv1_1) and (demorgan_reg_1561 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state10) and (or_cond_i_fu_682_p2 = ap_const_lv1_1)))) then 
            points_val_x_we0 <= ap_const_logic_1;
        else 
            points_val_x_we0 <= ap_const_logic_0;
        end if; 
    end process;


    points_val_y_address0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0, tmp_2_i_i_fu_897_p1, tmp_1_i42_i_fu_1174_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            points_val_y_address0 <= tmp_1_i42_i_fu_1174_p1(17 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            points_val_y_address0 <= tmp_2_i_i_fu_897_p1(17 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            points_val_y_address0 <= ap_const_lv64_0(17 - 1 downto 0);
        else 
            points_val_y_address0 <= "XXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    points_val_y_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)))) then 
            points_val_y_ce0 <= ap_const_logic_1;
        else 
            points_val_y_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    points_val_y_d0_assign_proc : process(y1_reg_1412, ap_CS_fsm_state10, ap_CS_fsm_pp2_stage0, r_mid2_reg_1526, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            points_val_y_d0 <= r_mid2_reg_1526;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            points_val_y_d0 <= y1_reg_1412;
        else 
            points_val_y_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    points_val_y_we0_assign_proc : process(or_cond_i_fu_682_p2, ap_CS_fsm_state10, exitcond_flatten_reg_1500, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, demorgan_reg_1561, ap_enable_reg_pp2_iter1, or_cond9_i_fu_688_p2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (exitcond_flatten_reg_1500 = ap_const_lv1_0) and (or_cond9_i_fu_688_p2 = ap_const_lv1_1) and (demorgan_reg_1561 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state10) and (or_cond_i_fu_682_p2 = ap_const_lv1_1)))) then 
            points_val_y_we0 <= ap_const_logic_1;
        else 
            points_val_y_we0 <= ap_const_logic_0;
        end if; 
    end process;

    r_fu_925_p2 <= std_logic_vector(unsigned(r0_reg_1494) + unsigned(dr_cast_i_fu_921_p1));
    r_mid1_fu_1001_p2 <= std_logic_vector(signed(dr_cast_i_mid1_fu_985_p1) + signed(r0_reg_1494));
    r_mid2_fu_1006_p3 <= 
        r_mid1_fu_1001_p2 when (exitcond_i_fu_971_p2(0) = '1') else 
        r_fu_925_p2;

    rects_cols_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, rects_cols_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            rects_cols_blk_n <= rects_cols_empty_n;
        else 
            rects_cols_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    rects_cols_out_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, rects_cols_out_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            rects_cols_out_blk_n <= rects_cols_out_full_n;
        else 
            rects_cols_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    rects_cols_out_din <= rects_cols_dout;

    rects_cols_out_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, src_rows_empty_n, src_cols_empty_n, rects_rows_empty_n, rects_cols_empty_n, rects_rows_out_full_n, rects_cols_out_full_n)
    begin
        if ((not(((rects_cols_out_full_n = ap_const_logic_0) or (rects_rows_out_full_n = ap_const_logic_0) or (rects_cols_empty_n = ap_const_logic_0) or (rects_rows_empty_n = ap_const_logic_0) or (src_cols_empty_n = ap_const_logic_0) or (src_rows_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            rects_cols_out_write <= ap_const_logic_1;
        else 
            rects_cols_out_write <= ap_const_logic_0;
        end if; 
    end process;


    rects_cols_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, src_rows_empty_n, src_cols_empty_n, rects_rows_empty_n, rects_cols_empty_n, rects_rows_out_full_n, rects_cols_out_full_n)
    begin
        if ((not(((rects_cols_out_full_n = ap_const_logic_0) or (rects_rows_out_full_n = ap_const_logic_0) or (rects_cols_empty_n = ap_const_logic_0) or (rects_rows_empty_n = ap_const_logic_0) or (src_cols_empty_n = ap_const_logic_0) or (src_rows_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            rects_cols_read <= ap_const_logic_1;
        else 
            rects_cols_read <= ap_const_logic_0;
        end if; 
    end process;


    rects_rows_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, rects_rows_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            rects_rows_blk_n <= rects_rows_empty_n;
        else 
            rects_rows_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    rects_rows_out_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, rects_rows_out_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            rects_rows_out_blk_n <= rects_rows_out_full_n;
        else 
            rects_rows_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    rects_rows_out_din <= rects_rows_dout;

    rects_rows_out_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, src_rows_empty_n, src_cols_empty_n, rects_rows_empty_n, rects_cols_empty_n, rects_rows_out_full_n, rects_cols_out_full_n)
    begin
        if ((not(((rects_cols_out_full_n = ap_const_logic_0) or (rects_rows_out_full_n = ap_const_logic_0) or (rects_cols_empty_n = ap_const_logic_0) or (rects_rows_empty_n = ap_const_logic_0) or (src_cols_empty_n = ap_const_logic_0) or (src_rows_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            rects_rows_out_write <= ap_const_logic_1;
        else 
            rects_rows_out_write <= ap_const_logic_0;
        end if; 
    end process;


    rects_rows_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, src_rows_empty_n, src_cols_empty_n, rects_rows_empty_n, rects_cols_empty_n, rects_rows_out_full_n, rects_cols_out_full_n)
    begin
        if ((not(((rects_cols_out_full_n = ap_const_logic_0) or (rects_rows_out_full_n = ap_const_logic_0) or (rects_cols_empty_n = ap_const_logic_0) or (rects_rows_empty_n = ap_const_logic_0) or (src_cols_empty_n = ap_const_logic_0) or (src_rows_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            rects_rows_read <= ap_const_logic_1;
        else 
            rects_rows_read <= ap_const_logic_0;
        end if; 
    end process;


    rects_val_address0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state11, ap_CS_fsm_state17, tmp_5_cast_fu_795_p1, tmp_19_i_fu_903_p1, tmp_10_cast_fu_1247_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            rects_val_address0 <= tmp_10_cast_fu_1247_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            rects_val_address0 <= tmp_19_i_fu_903_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            rects_val_address0 <= tmp_5_cast_fu_795_p1(10 - 1 downto 0);
        else 
            rects_val_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    rects_val_address1_assign_proc : process(ap_CS_fsm_state11, ap_CS_fsm_state17, tmp_8_cast_fu_916_p1, tmp_9_cast_fu_1237_p1, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            rects_val_address1 <= ap_const_lv64_0(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            rects_val_address1 <= tmp_9_cast_fu_1237_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            rects_val_address1 <= tmp_8_cast_fu_916_p1(10 - 1 downto 0);
        else 
            rects_val_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    rects_val_ce0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state11, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            rects_val_ce0 <= ap_const_logic_1;
        else 
            rects_val_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    rects_val_ce1_assign_proc : process(ap_CS_fsm_state11, ap_CS_fsm_state17, ap_CS_fsm_state18)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            rects_val_ce1 <= ap_const_logic_1;
        else 
            rects_val_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    rects_val_d0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state11, ap_CS_fsm_state17, x0_i_reg_478, tmp_23_i_fu_1271_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            rects_val_d0 <= tmp_23_i_fu_1271_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            rects_val_d0 <= x0_i_reg_478;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            rects_val_d0 <= ap_const_lv16_0;
        else 
            rects_val_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    rects_val_d1_assign_proc : process(ap_CS_fsm_state11, ap_CS_fsm_state17, y0_i_reg_457, storemerge_reg_657, tmp_21_i_fu_1258_p2, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            rects_val_d1 <= storemerge_reg_657;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            rects_val_d1 <= tmp_21_i_fu_1258_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            rects_val_d1 <= y0_i_reg_457;
        else 
            rects_val_d1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    rects_val_we0_assign_proc : process(ap_CS_fsm_state6, tmp_3_i_reg_1403, or_cond_i_reg_1442, ap_CS_fsm_state11, tmp_i_i_fu_885_p2, ap_CS_fsm_state17, tmp_2_i_fu_775_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state17) and (or_cond_i_reg_1442 = ap_const_lv1_1) and (tmp_3_i_reg_1403 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state11) and (tmp_i_i_fu_885_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_2_i_fu_775_p2 = ap_const_lv1_1)))) then 
            rects_val_we0 <= ap_const_logic_1;
        else 
            rects_val_we0 <= ap_const_logic_0;
        end if; 
    end process;


    rects_val_we1_assign_proc : process(tmp_3_i_reg_1403, or_cond_i_reg_1442, ap_CS_fsm_state11, tmp_i_i_fu_885_p2, ap_CS_fsm_state17, ap_CS_fsm_state18)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) or ((ap_const_logic_1 = ap_CS_fsm_state17) and (or_cond_i_reg_1442 = ap_const_lv1_1) and (tmp_3_i_reg_1403 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state11) and (tmp_i_i_fu_885_p2 = ap_const_lv1_1)))) then 
            rects_val_we1 <= ap_const_logic_1;
        else 
            rects_val_we1 <= ap_const_logic_0;
        end if; 
    end process;

    rev1_fu_1022_p2 <= (tmp_19_fu_1014_p3 xor ap_const_lv1_1);
    rev2_fu_1076_p2 <= (tmp_20_fu_1068_p3 xor ap_const_lv1_1);
    rev_fu_938_p2 <= (tmp_18_fu_930_p3 xor ap_const_lv1_1);

    src_cols_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, src_cols_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            src_cols_blk_n <= src_cols_empty_n;
        else 
            src_cols_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    src_cols_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, src_rows_empty_n, src_cols_empty_n, rects_rows_empty_n, rects_cols_empty_n, rects_rows_out_full_n, rects_cols_out_full_n)
    begin
        if ((not(((rects_cols_out_full_n = ap_const_logic_0) or (rects_rows_out_full_n = ap_const_logic_0) or (rects_cols_empty_n = ap_const_logic_0) or (rects_rows_empty_n = ap_const_logic_0) or (src_cols_empty_n = ap_const_logic_0) or (src_rows_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            src_cols_read <= ap_const_logic_1;
        else 
            src_cols_read <= ap_const_logic_0;
        end if; 
    end process;


    src_rows_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, src_rows_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            src_rows_blk_n <= src_rows_empty_n;
        else 
            src_rows_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    src_rows_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, src_rows_empty_n, src_cols_empty_n, rects_rows_empty_n, rects_cols_empty_n, rects_rows_out_full_n, rects_cols_out_full_n)
    begin
        if ((not(((rects_cols_out_full_n = ap_const_logic_0) or (rects_rows_out_full_n = ap_const_logic_0) or (rects_cols_empty_n = ap_const_logic_0) or (rects_rows_empty_n = ap_const_logic_0) or (src_cols_empty_n = ap_const_logic_0) or (src_rows_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            src_rows_read <= ap_const_logic_1;
        else 
            src_rows_read <= ap_const_logic_0;
        end if; 
    end process;


    src_val_address0_assign_proc : process(ap_CS_fsm_state9, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp2_stage1, tmp_7_cast_fu_857_p1, tmp_12_cast_fu_1156_p1, ap_block_pp2_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) then 
            src_val_address0 <= tmp_12_cast_fu_1156_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            src_val_address0 <= tmp_7_cast_fu_857_p1(18 - 1 downto 0);
        else 
            src_val_address0 <= "XXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    src_val_ce0_assign_proc : process(ap_CS_fsm_state9, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or ((ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)))) then 
            src_val_ce0 <= ap_const_logic_1;
        else 
            src_val_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp1_fu_1091_p2 <= (tmp_35_i_fu_1086_p2 and rev2_fu_1076_p2);
        tmp_10_cast_fu_1247_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_s_fu_1242_p2),64));

    tmp_10_fu_1151_p2 <= std_logic_vector(signed(tmp_3_fu_1297_p2) + signed(tmp_37_i_cast_fu_1148_p1));
    tmp_10_i_fu_837_p2 <= "1" when (signed(j2_cast_i_fu_833_p1) < signed(cols_reg_1326)) else "0";
        tmp_12_cast_fu_1156_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_10_fu_1151_p2),64));

    tmp_13_fu_848_p1 <= j2_i_reg_424(19 - 1 downto 0);
    tmp_14_fu_863_p1 <= num_1_fu_144(8 - 1 downto 0);
    tmp_16_fu_907_p1 <= num_reg_1446(12 - 1 downto 0);
    tmp_17_fu_1287_p1 <= num_1_fu_144(16 - 1 downto 0);
    tmp_17_i_fu_873_p2 <= std_logic_vector(unsigned(ap_const_lv8_1) + unsigned(tmp_14_fu_863_p1));
    tmp_18_fu_930_p3 <= r_fu_925_p2(15 downto 15);
    tmp_19_fu_1014_p3 <= r_mid1_fu_1001_p2(15 downto 15);
        tmp_19_i_fu_903_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(num_reg_1446),64));

    tmp_1_fu_800_p1 <= phi_mul1_reg_413(19 - 1 downto 0);
        tmp_1_i42_i_fu_1174_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(vector_length_read_a_1_reg_523),64));

    tmp_20_fu_1068_p3 <= c_fu_1063_p2(15 downto 15);
    tmp_20_i_fu_1252_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) - unsigned(x0_i_reg_478));
    tmp_21_fu_1127_p4 <= dist_fu_1121_p2(2 downto 1);
    tmp_21_i_fu_1258_p2 <= std_logic_vector(unsigned(x_i_reg_468) + unsigned(tmp_20_i_fu_1252_p2));
    tmp_22_i_fu_1265_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) - unsigned(y0_i_reg_457));
    tmp_23_i_fu_1271_p2 <= std_logic_vector(unsigned(y_i_reg_447) + unsigned(tmp_22_i_fu_1265_p2));
    tmp_24_i_fu_1278_p2 <= "1" when (signed(num_reg_1446) > signed(ap_const_lv32_FE)) else "0";
    tmp_25_i_fu_1291_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(tmp_17_fu_1287_p1));
    tmp_26_i_fu_995_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(ap_phi_mux_dr_i_phi_fu_505_p4) * signed(ap_phi_mux_dr_i_phi_fu_505_p4))), 3));
    tmp_26_i_mid1_fu_989_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(dr_fu_965_p2) * signed(dr_fu_965_p2))), 3));
    tmp_26_i_mid2_fu_1109_p3 <= 
        tmp_26_i_mid1_reg_1516 when (exitcond_i_reg_1504(0) = '1') else 
        tmp_26_i_reg_1521;
        tmp_28_i_fu_944_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_fu_925_p2),32));

        tmp_28_i_mid1_fu_1028_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_mid1_fu_1001_p2),32));

    tmp_29_i_fu_948_p2 <= "1" when (signed(tmp_28_i_fu_944_p1) < signed(rows_reg_1319)) else "0";
    tmp_29_i_mid1_fu_1032_p2 <= "1" when (signed(tmp_28_i_mid1_fu_1028_p1) < signed(rows_reg_1319)) else "0";
    tmp_2_fu_754_p3 <= (i_0_i1_i_reg_380 & ap_const_lv8_0);
    tmp_2_i_fu_775_p2 <= "1" when (signed(j_0_i1_cast_cast_i_fu_771_p1) < signed(rects_cols_read_reg_1314)) else "0";
        tmp_2_i_i_fu_897_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(points_length_fu_891_p2),64));

    tmp_32_i_fu_1117_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(dc_i_mid2_reg_1509) * signed(dc_i_mid2_reg_1509))), 3));
        tmp_34_i_fu_1082_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(c_fu_1063_p2),32));

    tmp_35_i_fu_1086_p2 <= "1" when (signed(tmp_34_i_fu_1082_p1) < signed(cols_reg_1326)) else "0";
        tmp_37_i_cast_fu_1148_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(c_reg_1541),19));

    tmp_3_cast_fu_762_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_fu_754_p3),12));
    tmp_3_fu_1297_p1 <= ap_const_lv19_1F4(10 - 1 downto 0);
    tmp_3_i_fu_814_p2 <= "1" when (signed(i1_cast_i_fu_810_p1) < signed(rows_reg_1319)) else "0";
    tmp_40_i_fu_1180_p2 <= "1" when (signed(c_reg_1541) < signed(x0_2_i_reg_570)) else "0";
    tmp_41_i_fu_1193_p2 <= "1" when (signed(c_reg_1541) > signed(x1_2_i_reg_558)) else "0";
    tmp_42_i_fu_1206_p2 <= "1" when (signed(r_mid2_reg_1526) < signed(y0_2_i_reg_546)) else "0";
    tmp_43_i_fu_1219_p2 <= "1" when (signed(r_mid2_reg_1526) > signed(y1_2_i_reg_534)) else "0";
    tmp_4_cast_fu_734_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_fu_728_p2),64));
    tmp_4_fu_728_p2 <= std_logic_vector(unsigned(phi_mul_reg_357) + unsigned(tmp_9_i_cast_fu_724_p1));
    tmp_5_cast_fu_795_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_fu_790_p2),64));
    tmp_5_fu_790_p2 <= std_logic_vector(unsigned(tmp_3_cast_reg_1363) + unsigned(tmp_8_i_cast_fu_786_p1));
    tmp_6_fu_829_p1 <= num_1_fu_144(16 - 1 downto 0);
    tmp_7_cast_fu_857_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_7_fu_852_p2),64));
    tmp_7_fu_852_p2 <= std_logic_vector(unsigned(tmp_1_reg_1393) + unsigned(tmp_13_fu_848_p1));
        tmp_8_cast_fu_916_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_8_fu_910_p2),64));

    tmp_8_fu_910_p2 <= std_logic_vector(unsigned(ap_const_lv12_100) + unsigned(tmp_16_fu_907_p1));
    tmp_8_i_cast_fu_786_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_0_i1_i_reg_391),12));
        tmp_9_cast_fu_1237_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_9_fu_1232_p2),64));

    tmp_9_fu_1232_p2 <= std_logic_vector(unsigned(ap_const_lv12_200) + unsigned(tmp_16_reg_1483));
    tmp_9_i_cast_fu_724_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_0_i_i_reg_369),18));
    tmp_fu_953_p2 <= (tmp_29_i_fu_948_p2 and rev_fu_938_p2);
    tmp_i_23_fu_743_p2 <= "1" when (signed(i_0_i1_cast_cast_i_fu_739_p1) < signed(rects_rows_read_reg_1309)) else "0";
    tmp_i_i_fu_885_p2 <= "1" when (vector_length_read_a_reg_436 = ap_const_lv32_0) else "0";
    tmp_mid1_fu_1037_p2 <= (tmp_29_i_mid1_fu_1032_p2 and rev1_fu_1022_p2);
    tmp_mid2_fu_1043_p3 <= 
        tmp_mid1_fu_1037_p2 when (exitcond_i_fu_971_p2(0) = '1') else 
        tmp_fu_953_p2;
    tmp_s_fu_1242_p2 <= std_logic_vector(unsigned(ap_const_lv12_300) + unsigned(tmp_16_reg_1483));
    x0_fu_1185_p3 <= 
        c_reg_1541 when (tmp_40_i_fu_1180_p2(0) = '1') else 
        x0_2_i_reg_570;
    x1_1_fu_1198_p3 <= 
        c_reg_1541 when (tmp_41_i_fu_1193_p2(0) = '1') else 
        x1_2_i_reg_558;
    x1_fu_880_p1 <= j2_i_reg_424(16 - 1 downto 0);
    y0_fu_1211_p3 <= 
        r_mid2_reg_1526 when (tmp_42_i_fu_1206_p2(0) = '1') else 
        y0_2_i_reg_546;
    y1_1_fu_1224_p3 <= 
        r_mid2_reg_1526 when (tmp_43_i_fu_1219_p2(0) = '1') else 
        y1_2_i_reg_534;
    y1_fu_825_p1 <= i1_i_reg_402(16 - 1 downto 0);
end behav;
