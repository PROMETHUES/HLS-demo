// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module SeedFilling (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        src_val_address0,
        src_val_ce0,
        src_val_q0,
        src_rows_dout,
        src_rows_empty_n,
        src_rows_read,
        src_cols_dout,
        src_cols_empty_n,
        src_cols_read,
        rects_val_address0,
        rects_val_ce0,
        rects_val_we0,
        rects_val_d0,
        rects_val_address1,
        rects_val_ce1,
        rects_val_we1,
        rects_val_d1,
        rects_rows_dout,
        rects_rows_empty_n,
        rects_rows_read,
        rects_cols_dout,
        rects_cols_empty_n,
        rects_cols_read,
        rects_rows_out_din,
        rects_rows_out_full_n,
        rects_rows_out_write,
        rects_cols_out_din,
        rects_cols_out_full_n,
        rects_cols_out_write
);

parameter    ap_ST_fsm_state1 = 17'd1;
parameter    ap_ST_fsm_state2 = 17'd2;
parameter    ap_ST_fsm_state3 = 17'd4;
parameter    ap_ST_fsm_state4 = 17'd8;
parameter    ap_ST_fsm_state5 = 17'd16;
parameter    ap_ST_fsm_state6 = 17'd32;
parameter    ap_ST_fsm_state7 = 17'd64;
parameter    ap_ST_fsm_state8 = 17'd128;
parameter    ap_ST_fsm_state9 = 17'd256;
parameter    ap_ST_fsm_state10 = 17'd512;
parameter    ap_ST_fsm_state11 = 17'd1024;
parameter    ap_ST_fsm_state12 = 17'd2048;
parameter    ap_ST_fsm_pp2_stage0 = 17'd4096;
parameter    ap_ST_fsm_pp2_stage1 = 17'd8192;
parameter    ap_ST_fsm_state16 = 17'd16384;
parameter    ap_ST_fsm_state17 = 17'd32768;
parameter    ap_ST_fsm_state18 = 17'd65536;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [17:0] src_val_address0;
output   src_val_ce0;
input  [7:0] src_val_q0;
input  [31:0] src_rows_dout;
input   src_rows_empty_n;
output   src_rows_read;
input  [31:0] src_cols_dout;
input   src_cols_empty_n;
output   src_cols_read;
output  [9:0] rects_val_address0;
output   rects_val_ce0;
output   rects_val_we0;
output  [15:0] rects_val_d0;
output  [9:0] rects_val_address1;
output   rects_val_ce1;
output   rects_val_we1;
output  [15:0] rects_val_d1;
input  [3:0] rects_rows_dout;
input   rects_rows_empty_n;
output   rects_rows_read;
input  [9:0] rects_cols_dout;
input   rects_cols_empty_n;
output   rects_cols_read;
output  [3:0] rects_rows_out_din;
input   rects_rows_out_full_n;
output   rects_rows_out_write;
output  [9:0] rects_cols_out_din;
input   rects_cols_out_full_n;
output   rects_cols_out_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[17:0] src_val_address0;
reg src_val_ce0;
reg src_rows_read;
reg src_cols_read;
reg[9:0] rects_val_address0;
reg rects_val_ce0;
reg rects_val_we0;
reg[15:0] rects_val_d0;
reg[9:0] rects_val_address1;
reg rects_val_ce1;
reg rects_val_we1;
reg[15:0] rects_val_d1;
reg rects_rows_read;
reg rects_cols_read;
reg rects_rows_out_write;
reg rects_cols_out_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [16:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    src_rows_blk_n;
reg    src_cols_blk_n;
reg    rects_rows_blk_n;
reg    rects_cols_blk_n;
reg    rects_rows_out_blk_n;
reg    rects_cols_out_blk_n;
reg   [3:0] indvar_flatten_reg_489;
reg  signed [2:0] dr_i_reg_501;
reg   [2:0] dc_i_reg_512;
reg  signed [31:0] vector_length_read_a_1_reg_523;
reg   [15:0] y1_2_i_reg_534;
reg   [15:0] y0_2_i_reg_546;
reg   [15:0] x1_2_i_reg_558;
reg   [15:0] x0_2_i_reg_570;
reg    ap_block_state1;
reg   [3:0] rects_rows_read_reg_1309;
reg   [9:0] rects_cols_read_reg_1314;
reg   [31:0] rows_reg_1319;
reg   [31:0] cols_reg_1326;
wire   [17:0] next_mul_fu_694_p2;
reg   [17:0] next_mul_reg_1332;
wire    ap_CS_fsm_state2;
wire   [0:0] exitcond2_i_fu_700_p2;
wire   [8:0] i_fu_706_p2;
reg   [8:0] i_reg_1341;
wire   [8:0] j_fu_718_p2;
wire    ap_CS_fsm_state3;
wire   [0:0] tmp_i_23_fu_743_p2;
wire    ap_CS_fsm_state5;
wire   [2:0] i_1_fu_748_p2;
reg   [2:0] i_1_reg_1358;
wire   [11:0] tmp_3_cast_fu_762_p1;
reg   [11:0] tmp_3_cast_reg_1363;
wire   [8:0] j_1_fu_780_p2;
wire    ap_CS_fsm_state6;
wire   [18:0] tmp_1_fu_800_p1;
reg   [18:0] tmp_1_reg_1393;
wire    ap_CS_fsm_state8;
wire   [39:0] next_mul1_fu_804_p2;
reg   [39:0] next_mul1_reg_1398;
wire   [0:0] tmp_3_i_fu_814_p2;
reg   [0:0] tmp_3_i_reg_1403;
wire   [30:0] i_2_fu_819_p2;
reg   [30:0] i_2_reg_1407;
wire   [15:0] y1_fu_825_p1;
reg   [15:0] y1_reg_1412;
wire   [15:0] tmp_6_fu_829_p1;
wire   [30:0] j_2_fu_842_p2;
reg   [30:0] j_2_reg_1427;
wire    ap_CS_fsm_state9;
wire   [0:0] tmp_10_i_fu_837_p2;
reg   [17:0] label_val_addr_1_reg_1437;
wire   [0:0] or_cond_i_fu_682_p2;
reg   [0:0] or_cond_i_reg_1442;
wire    ap_CS_fsm_state10;
wire  signed [31:0] num_fu_867_p2;
reg  signed [31:0] num_reg_1446;
wire   [7:0] tmp_17_i_fu_873_p2;
reg   [7:0] tmp_17_i_reg_1454;
wire   [15:0] x1_fu_880_p1;
wire  signed [31:0] points_length_fu_891_p2;
reg  signed [31:0] points_length_reg_1468;
wire    ap_CS_fsm_state11;
wire   [0:0] tmp_i_i_fu_885_p2;
wire   [11:0] tmp_16_fu_907_p1;
reg   [11:0] tmp_16_reg_1483;
wire   [15:0] points_val_x_q0;
reg   [15:0] c0_reg_1489;
wire    ap_CS_fsm_state12;
wire   [15:0] points_val_y_q0;
reg   [15:0] r0_reg_1494;
wire   [0:0] exitcond_flatten_fu_959_p2;
reg   [0:0] exitcond_flatten_reg_1500;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state13_pp2_stage0_iter0;
wire    ap_block_state15_pp2_stage0_iter1;
wire    ap_block_pp2_stage0_11001;
wire   [0:0] exitcond_i_fu_971_p2;
reg   [0:0] exitcond_i_reg_1504;
wire  signed [2:0] dc_i_mid2_fu_977_p3;
reg  signed [2:0] dc_i_mid2_reg_1509;
wire   [2:0] tmp_26_i_mid1_fu_989_p2;
reg   [2:0] tmp_26_i_mid1_reg_1516;
wire   [2:0] tmp_26_i_fu_995_p2;
reg   [2:0] tmp_26_i_reg_1521;
wire  signed [15:0] r_mid2_fu_1006_p3;
reg  signed [15:0] r_mid2_reg_1526;
wire   [2:0] dr_i_mid2_fu_1051_p3;
reg   [2:0] dr_i_mid2_reg_1536;
reg    ap_enable_reg_pp2_iter0;
wire  signed [15:0] c_fu_1063_p2;
reg  signed [15:0] c_reg_1541;
wire   [0:0] or_cond8_i_fu_1097_p2;
reg   [0:0] or_cond8_i_reg_1551;
wire   [3:0] indvar_flatten_next_fu_1103_p2;
reg   [3:0] indvar_flatten_next_reg_1556;
wire    ap_CS_fsm_pp2_stage1;
wire    ap_block_state14_pp2_stage1_iter0;
wire    ap_block_pp2_stage1_11001;
wire   [0:0] demorgan_fu_1143_p2;
reg   [0:0] demorgan_reg_1561;
reg   [17:0] label_val_addr_2_reg_1570;
wire   [2:0] dc_fu_1162_p2;
reg   [2:0] dc_reg_1575;
wire   [15:0] tmp_25_i_fu_1291_p2;
wire    ap_CS_fsm_state17;
wire   [0:0] tmp_24_i_fu_1278_p2;
wire    ap_block_pp2_stage1_subdone;
reg    ap_condition_pp2_exit_iter0_state14;
reg    ap_enable_reg_pp2_iter1;
reg   [17:0] label_val_address0;
reg    label_val_ce0;
reg    label_val_we0;
reg   [7:0] label_val_d0;
wire   [7:0] label_val_q0;
reg   [16:0] points_val_x_address0;
reg    points_val_x_ce0;
reg    points_val_x_we0;
reg   [15:0] points_val_x_d0;
reg   [16:0] points_val_y_address0;
reg    points_val_y_ce0;
reg    points_val_y_we0;
reg   [15:0] points_val_y_d0;
reg   [8:0] i_0_i_i_reg_346;
wire    ap_CS_fsm_state4;
reg   [17:0] phi_mul_reg_357;
reg   [8:0] j_0_i_i_reg_369;
wire   [0:0] exitcond3_i_fu_712_p2;
reg   [2:0] i_0_i1_i_reg_380;
wire    ap_CS_fsm_state7;
reg   [8:0] j_0_i1_i_reg_391;
wire   [0:0] tmp_2_i_fu_775_p2;
reg   [30:0] i1_i_reg_402;
reg   [39:0] phi_mul1_reg_413;
reg   [30:0] j2_i_reg_424;
reg   [31:0] vector_length_read_a_reg_436;
wire    ap_CS_fsm_state16;
reg   [15:0] y_i_reg_447;
reg   [15:0] y0_i_reg_457;
reg   [15:0] x_i_reg_468;
reg   [15:0] x0_i_reg_478;
reg   [3:0] ap_phi_mux_indvar_flatten_phi_fu_493_p4;
wire    ap_block_pp2_stage0;
reg  signed [2:0] ap_phi_mux_dr_i_phi_fu_505_p4;
reg   [2:0] ap_phi_mux_dc_i_phi_fu_516_p4;
reg   [31:0] ap_phi_mux_points_length_5_i_phi_fu_586_p6;
reg   [15:0] ap_phi_mux_y1_4_i_phi_fu_601_p6;
reg   [15:0] ap_phi_mux_y0_4_i_phi_fu_616_p6;
reg   [15:0] ap_phi_mux_x1_4_i_phi_fu_631_p6;
reg   [15:0] ap_phi_mux_x0_4_i_phi_fu_646_p6;
wire   [31:0] ap_phi_reg_pp2_iter0_points_length_5_i_reg_582;
reg   [31:0] ap_phi_reg_pp2_iter1_points_length_5_i_reg_582;
wire   [31:0] points_length_1_fu_1167_p2;
wire   [0:0] or_cond9_i_fu_688_p2;
wire   [15:0] ap_phi_reg_pp2_iter0_y1_4_i_reg_597;
reg   [15:0] ap_phi_reg_pp2_iter1_y1_4_i_reg_597;
wire   [15:0] y1_1_fu_1224_p3;
wire   [15:0] ap_phi_reg_pp2_iter0_y0_4_i_reg_612;
reg   [15:0] ap_phi_reg_pp2_iter1_y0_4_i_reg_612;
wire   [15:0] y0_fu_1211_p3;
wire   [15:0] ap_phi_reg_pp2_iter0_x1_4_i_reg_627;
reg   [15:0] ap_phi_reg_pp2_iter1_x1_4_i_reg_627;
wire   [15:0] x1_1_fu_1198_p3;
wire   [15:0] ap_phi_reg_pp2_iter0_x0_4_i_reg_642;
reg   [15:0] ap_phi_reg_pp2_iter1_x0_4_i_reg_642;
wire   [15:0] x0_fu_1185_p3;
reg   [15:0] storemerge_reg_657;
wire   [63:0] tmp_4_cast_fu_734_p1;
wire   [63:0] tmp_5_cast_fu_795_p1;
wire   [63:0] tmp_7_cast_fu_857_p1;
wire  signed [63:0] tmp_2_i_i_fu_897_p1;
wire  signed [63:0] tmp_19_i_fu_903_p1;
wire  signed [63:0] tmp_8_cast_fu_916_p1;
wire  signed [63:0] tmp_12_cast_fu_1156_p1;
wire    ap_block_pp2_stage1;
wire  signed [63:0] tmp_1_i42_i_fu_1174_p1;
wire  signed [63:0] tmp_9_cast_fu_1237_p1;
wire  signed [63:0] tmp_10_cast_fu_1247_p1;
reg   [31:0] num_1_fu_144;
wire   [15:0] tmp_21_i_fu_1258_p2;
wire   [15:0] tmp_23_i_fu_1271_p2;
wire    ap_CS_fsm_state18;
wire   [0:0] grp_fu_670_p2;
wire   [0:0] grp_fu_676_p2;
wire   [17:0] tmp_9_i_cast_fu_724_p1;
wire   [17:0] tmp_4_fu_728_p2;
wire   [3:0] i_0_i1_cast_cast_i_fu_739_p1;
wire   [10:0] tmp_2_fu_754_p3;
wire   [9:0] j_0_i1_cast_cast_i_fu_771_p1;
wire   [11:0] tmp_8_i_cast_fu_786_p1;
wire   [11:0] tmp_5_fu_790_p2;
wire   [31:0] i1_cast_i_fu_810_p1;
wire   [31:0] j2_cast_i_fu_833_p1;
wire   [18:0] tmp_13_fu_848_p1;
wire   [18:0] tmp_7_fu_852_p2;
wire   [7:0] tmp_14_fu_863_p1;
wire   [11:0] tmp_8_fu_910_p2;
wire  signed [15:0] dr_cast_i_fu_921_p1;
wire  signed [15:0] r_fu_925_p2;
wire   [0:0] tmp_18_fu_930_p3;
wire  signed [31:0] tmp_28_i_fu_944_p1;
wire   [0:0] tmp_29_i_fu_948_p2;
wire   [0:0] rev_fu_938_p2;
wire  signed [2:0] dr_fu_965_p2;
wire  signed [15:0] dr_cast_i_mid1_fu_985_p1;
wire  signed [15:0] r_mid1_fu_1001_p2;
wire   [0:0] tmp_19_fu_1014_p3;
wire  signed [31:0] tmp_28_i_mid1_fu_1028_p1;
wire   [0:0] tmp_29_i_mid1_fu_1032_p2;
wire   [0:0] rev1_fu_1022_p2;
wire   [0:0] tmp_mid1_fu_1037_p2;
wire   [0:0] tmp_fu_953_p2;
wire  signed [15:0] dc_cast_i_fu_1059_p1;
wire   [0:0] tmp_20_fu_1068_p3;
wire  signed [31:0] tmp_34_i_fu_1082_p1;
wire   [0:0] tmp_35_i_fu_1086_p2;
wire   [0:0] rev2_fu_1076_p2;
wire   [0:0] tmp1_fu_1091_p2;
wire   [0:0] tmp_mid2_fu_1043_p3;
wire   [2:0] tmp_26_i_mid2_fu_1109_p3;
wire   [2:0] tmp_32_i_fu_1117_p2;
wire   [2:0] dist_fu_1121_p2;
wire   [1:0] tmp_21_fu_1127_p4;
wire   [0:0] icmp_fu_1137_p2;
wire  signed [18:0] tmp_3_fu_1297_p2;
wire  signed [18:0] tmp_37_i_cast_fu_1148_p1;
(* use_dsp48 = "no" *) wire   [18:0] tmp_10_fu_1151_p2;
wire   [0:0] tmp_40_i_fu_1180_p2;
wire   [0:0] tmp_41_i_fu_1193_p2;
wire   [0:0] tmp_42_i_fu_1206_p2;
wire   [0:0] tmp_43_i_fu_1219_p2;
wire   [11:0] tmp_9_fu_1232_p2;
wire   [11:0] tmp_s_fu_1242_p2;
wire   [15:0] tmp_20_i_fu_1252_p2;
wire   [15:0] tmp_22_i_fu_1265_p2;
wire   [15:0] tmp_17_fu_1287_p1;
wire   [9:0] tmp_3_fu_1297_p1;
reg   [16:0] ap_NS_fsm;
wire    ap_block_pp2_stage0_subdone;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_condition_1007;
reg    ap_condition_313;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 17'd1;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
end

SeedFilling_labelbkb #(
    .DataWidth( 8 ),
    .AddressRange( 250000 ),
    .AddressWidth( 18 ))
label_val_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(label_val_address0),
    .ce0(label_val_ce0),
    .we0(label_val_we0),
    .d0(label_val_d0),
    .q0(label_val_q0)
);

SeedFilling_pointcud #(
    .DataWidth( 16 ),
    .AddressRange( 125000 ),
    .AddressWidth( 17 ))
points_val_x_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(points_val_x_address0),
    .ce0(points_val_x_ce0),
    .we0(points_val_x_we0),
    .d0(points_val_x_d0),
    .q0(points_val_x_q0)
);

SeedFilling_pointcud #(
    .DataWidth( 16 ),
    .AddressRange( 125000 ),
    .AddressWidth( 17 ))
points_val_y_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(points_val_y_address0),
    .ce0(points_val_y_ce0),
    .we0(points_val_y_we0),
    .d0(points_val_y_d0),
    .q0(points_val_y_q0)
);

SeedFill2_Core_mueOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 19 ))
SeedFill2_Core_mueOg_U25(
    .din0(r_mid2_reg_1526),
    .din1(tmp_3_fu_1297_p1),
    .dout(tmp_3_fu_1297_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state18)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage1_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state14) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state12)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage1_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state14) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
            ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state14);
        end else if (((1'b0 == ap_block_pp2_stage1_subdone) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if ((1'b1 == ap_CS_fsm_state12)) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_313)) begin
        if (((demorgan_fu_1143_p2 == 1'd0) & (exitcond_flatten_reg_1500 == 1'd0))) begin
            ap_phi_reg_pp2_iter1_points_length_5_i_reg_582 <= vector_length_read_a_1_reg_523;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp2_iter1_points_length_5_i_reg_582 <= ap_phi_reg_pp2_iter0_points_length_5_i_reg_582;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_313)) begin
        if (((demorgan_fu_1143_p2 == 1'd0) & (exitcond_flatten_reg_1500 == 1'd0))) begin
            ap_phi_reg_pp2_iter1_x0_4_i_reg_642 <= x0_2_i_reg_570;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp2_iter1_x0_4_i_reg_642 <= ap_phi_reg_pp2_iter0_x0_4_i_reg_642;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_313)) begin
        if (((demorgan_fu_1143_p2 == 1'd0) & (exitcond_flatten_reg_1500 == 1'd0))) begin
            ap_phi_reg_pp2_iter1_x1_4_i_reg_627 <= x1_2_i_reg_558;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp2_iter1_x1_4_i_reg_627 <= ap_phi_reg_pp2_iter0_x1_4_i_reg_627;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_313)) begin
        if (((demorgan_fu_1143_p2 == 1'd0) & (exitcond_flatten_reg_1500 == 1'd0))) begin
            ap_phi_reg_pp2_iter1_y0_4_i_reg_612 <= y0_2_i_reg_546;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp2_iter1_y0_4_i_reg_612 <= ap_phi_reg_pp2_iter0_y0_4_i_reg_612;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_313)) begin
        if (((demorgan_fu_1143_p2 == 1'd0) & (exitcond_flatten_reg_1500 == 1'd0))) begin
            ap_phi_reg_pp2_iter1_y1_4_i_reg_597 <= y1_2_i_reg_534;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp2_iter1_y1_4_i_reg_597 <= ap_phi_reg_pp2_iter0_y1_4_i_reg_597;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond_flatten_reg_1500 == 1'd0))) begin
        dc_i_reg_512 <= dc_reg_1575;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        dc_i_reg_512 <= 3'd7;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond_flatten_reg_1500 == 1'd0))) begin
        dr_i_reg_501 <= dr_i_mid2_reg_1536;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        dr_i_reg_501 <= 3'd7;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (tmp_10_i_fu_837_p2 == 1'd0))) begin
        i1_i_reg_402 <= i_2_reg_1407;
    end else if (((1'b1 == ap_CS_fsm_state5) & (tmp_i_23_fu_743_p2 == 1'd0))) begin
        i1_i_reg_402 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond2_i_fu_700_p2 == 1'd1))) begin
        i_0_i1_i_reg_380 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        i_0_i1_i_reg_380 <= i_1_reg_1358;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        i_0_i_i_reg_346 <= i_reg_1341;
    end else if ((~((rects_cols_out_full_n == 1'b0) | (rects_rows_out_full_n == 1'b0) | (rects_cols_empty_n == 1'b0) | (rects_rows_empty_n == 1'b0) | (src_cols_empty_n == 1'b0) | (src_rows_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_i_i_reg_346 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond_flatten_reg_1500 == 1'd0))) begin
        indvar_flatten_reg_489 <= indvar_flatten_next_reg_1556;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        indvar_flatten_reg_489 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & (((tmp_24_i_fu_1278_p2 == 1'd0) & (tmp_3_i_reg_1403 == 1'd1)) | ((or_cond_i_reg_1442 == 1'd0) & (tmp_3_i_reg_1403 == 1'd1))))) begin
        j2_i_reg_424 <= j_2_reg_1427;
    end else if (((1'b1 == ap_CS_fsm_state8) & (tmp_3_i_fu_814_p2 == 1'd1))) begin
        j2_i_reg_424 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (tmp_i_23_fu_743_p2 == 1'd1))) begin
        j_0_i1_i_reg_391 <= 9'd0;
    end else if (((1'b1 == ap_CS_fsm_state6) & (tmp_2_i_fu_775_p2 == 1'd1))) begin
        j_0_i1_i_reg_391 <= j_1_fu_780_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond2_i_fu_700_p2 == 1'd0))) begin
        j_0_i_i_reg_369 <= 9'd0;
    end else if (((1'b1 == ap_CS_fsm_state3) & (exitcond3_i_fu_712_p2 == 1'd0))) begin
        j_0_i_i_reg_369 <= j_fu_718_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & (tmp_24_i_fu_1278_p2 == 1'd0) & (or_cond_i_reg_1442 == 1'd1) & (tmp_3_i_reg_1403 == 1'd1))) begin
        num_1_fu_144 <= num_reg_1446;
    end else if (((1'b1 == ap_CS_fsm_state5) & (tmp_i_23_fu_743_p2 == 1'd0))) begin
        num_1_fu_144 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (tmp_10_i_fu_837_p2 == 1'd0))) begin
        phi_mul1_reg_413 <= next_mul1_reg_1398;
    end else if (((1'b1 == ap_CS_fsm_state5) & (tmp_i_23_fu_743_p2 == 1'd0))) begin
        phi_mul1_reg_413 <= 40'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        phi_mul_reg_357 <= next_mul_reg_1332;
    end else if ((~((rects_cols_out_full_n == 1'b0) | (rects_rows_out_full_n == 1'b0) | (rects_cols_empty_n == 1'b0) | (rects_rows_empty_n == 1'b0) | (src_cols_empty_n == 1'b0) | (src_rows_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        phi_mul_reg_357 <= 18'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & (tmp_24_i_fu_1278_p2 == 1'd1) & (or_cond_i_reg_1442 == 1'd1) & (tmp_3_i_reg_1403 == 1'd1))) begin
        storemerge_reg_657 <= tmp_25_i_fu_1291_p2;
    end else if (((1'b1 == ap_CS_fsm_state8) & (tmp_3_i_fu_814_p2 == 1'd0))) begin
        storemerge_reg_657 <= tmp_6_fu_829_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond_flatten_reg_1500 == 1'd0))) begin
        vector_length_read_a_1_reg_523 <= ap_phi_mux_points_length_5_i_phi_fu_586_p6;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        vector_length_read_a_1_reg_523 <= points_length_reg_1468;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        vector_length_read_a_reg_436 <= vector_length_read_a_1_reg_523;
    end else if (((1'b1 == ap_CS_fsm_state10) & (or_cond_i_fu_682_p2 == 1'd1))) begin
        vector_length_read_a_reg_436 <= 32'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond_flatten_reg_1500 == 1'd0))) begin
        x0_2_i_reg_570 <= ap_phi_mux_x0_4_i_phi_fu_646_p6;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        x0_2_i_reg_570 <= x0_i_reg_478;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        x0_i_reg_478 <= x0_2_i_reg_570;
    end else if (((1'b1 == ap_CS_fsm_state10) & (or_cond_i_fu_682_p2 == 1'd1))) begin
        x0_i_reg_478 <= x1_fu_880_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond_flatten_reg_1500 == 1'd0))) begin
        x1_2_i_reg_558 <= ap_phi_mux_x1_4_i_phi_fu_631_p6;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        x1_2_i_reg_558 <= x_i_reg_468;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        x_i_reg_468 <= x1_2_i_reg_558;
    end else if (((1'b1 == ap_CS_fsm_state10) & (or_cond_i_fu_682_p2 == 1'd1))) begin
        x_i_reg_468 <= x1_fu_880_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond_flatten_reg_1500 == 1'd0))) begin
        y0_2_i_reg_546 <= ap_phi_mux_y0_4_i_phi_fu_616_p6;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        y0_2_i_reg_546 <= y0_i_reg_457;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        y0_i_reg_457 <= y0_2_i_reg_546;
    end else if (((1'b1 == ap_CS_fsm_state10) & (or_cond_i_fu_682_p2 == 1'd1))) begin
        y0_i_reg_457 <= y1_reg_1412;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond_flatten_reg_1500 == 1'd0))) begin
        y1_2_i_reg_534 <= ap_phi_mux_y1_4_i_phi_fu_601_p6;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        y1_2_i_reg_534 <= y_i_reg_447;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        y_i_reg_447 <= y1_2_i_reg_534;
    end else if (((1'b1 == ap_CS_fsm_state10) & (or_cond_i_fu_682_p2 == 1'd1))) begin
        y_i_reg_447 <= y1_reg_1412;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        c0_reg_1489 <= points_val_x_q0;
        r0_reg_1494 <= points_val_y_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond_flatten_fu_959_p2 == 1'd0))) begin
        c_reg_1541 <= c_fu_1063_p2;
        dc_i_mid2_reg_1509 <= dc_i_mid2_fu_977_p3;
        exitcond_i_reg_1504 <= exitcond_i_fu_971_p2;
        or_cond8_i_reg_1551 <= or_cond8_i_fu_1097_p2;
        r_mid2_reg_1526 <= r_mid2_fu_1006_p3;
        tmp_26_i_mid1_reg_1516 <= tmp_26_i_mid1_fu_989_p2;
        tmp_26_i_reg_1521 <= tmp_26_i_fu_995_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((rects_cols_out_full_n == 1'b0) | (rects_rows_out_full_n == 1'b0) | (rects_cols_empty_n == 1'b0) | (rects_rows_empty_n == 1'b0) | (src_cols_empty_n == 1'b0) | (src_rows_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cols_reg_1326 <= src_cols_dout;
        rects_cols_read_reg_1314 <= rects_cols_dout;
        rects_rows_read_reg_1309 <= rects_rows_dout;
        rows_reg_1319 <= src_rows_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (exitcond_flatten_reg_1500 == 1'd0))) begin
        dc_reg_1575 <= dc_fu_1162_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1) & (exitcond_flatten_reg_1500 == 1'd0))) begin
        demorgan_reg_1561 <= demorgan_fu_1143_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond_flatten_fu_959_p2 == 1'd0))) begin
        dr_i_mid2_reg_1536 <= dr_i_mid2_fu_1051_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        exitcond_flatten_reg_1500 <= exitcond_flatten_fu_959_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        i_1_reg_1358 <= i_1_fu_748_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        i_2_reg_1407 <= i_2_fu_819_p2;
        next_mul1_reg_1398 <= next_mul1_fu_804_p2;
        tmp_1_reg_1393 <= tmp_1_fu_800_p1;
        tmp_3_i_reg_1403 <= tmp_3_i_fu_814_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_reg_1341 <= i_fu_706_p2;
        next_mul_reg_1332 <= next_mul_fu_694_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        indvar_flatten_next_reg_1556 <= indvar_flatten_next_fu_1103_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        j_2_reg_1427 <= j_2_fu_842_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (tmp_10_i_fu_837_p2 == 1'd1))) begin
        label_val_addr_1_reg_1437 <= tmp_7_cast_fu_857_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1) & (exitcond_flatten_reg_1500 == 1'd0) & (demorgan_fu_1143_p2 == 1'd1))) begin
        label_val_addr_2_reg_1570 <= tmp_12_cast_fu_1156_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (or_cond_i_fu_682_p2 == 1'd1))) begin
        num_reg_1446 <= num_fu_867_p2;
        tmp_17_i_reg_1454 <= tmp_17_i_fu_873_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        or_cond_i_reg_1442 <= or_cond_i_fu_682_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (tmp_i_i_fu_885_p2 == 1'd0))) begin
        points_length_reg_1468 <= points_length_fu_891_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (tmp_i_i_fu_885_p2 == 1'd1))) begin
        tmp_16_reg_1483 <= tmp_16_fu_907_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (tmp_i_23_fu_743_p2 == 1'd1))) begin
        tmp_3_cast_reg_1363[10 : 8] <= tmp_3_cast_fu_762_p1[10 : 8];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (tmp_3_i_fu_814_p2 == 1'd1))) begin
        y1_reg_1412 <= y1_fu_825_p1;
    end
end

always @ (*) begin
    if ((exitcond_flatten_reg_1500 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state14 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state14 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond_flatten_reg_1500 == 1'd0))) begin
        ap_phi_mux_dc_i_phi_fu_516_p4 = dc_reg_1575;
    end else begin
        ap_phi_mux_dc_i_phi_fu_516_p4 = dc_i_reg_512;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond_flatten_reg_1500 == 1'd0))) begin
        ap_phi_mux_dr_i_phi_fu_505_p4 = dr_i_mid2_reg_1536;
    end else begin
        ap_phi_mux_dr_i_phi_fu_505_p4 = dr_i_reg_501;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond_flatten_reg_1500 == 1'd0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_493_p4 = indvar_flatten_next_reg_1556;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_493_p4 = indvar_flatten_reg_489;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1007)) begin
        if ((or_cond9_i_fu_688_p2 == 1'd0)) begin
            ap_phi_mux_points_length_5_i_phi_fu_586_p6 = vector_length_read_a_1_reg_523;
        end else if ((or_cond9_i_fu_688_p2 == 1'd1)) begin
            ap_phi_mux_points_length_5_i_phi_fu_586_p6 = points_length_1_fu_1167_p2;
        end else begin
            ap_phi_mux_points_length_5_i_phi_fu_586_p6 = ap_phi_reg_pp2_iter1_points_length_5_i_reg_582;
        end
    end else begin
        ap_phi_mux_points_length_5_i_phi_fu_586_p6 = ap_phi_reg_pp2_iter1_points_length_5_i_reg_582;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1007)) begin
        if ((or_cond9_i_fu_688_p2 == 1'd0)) begin
            ap_phi_mux_x0_4_i_phi_fu_646_p6 = x0_2_i_reg_570;
        end else if ((or_cond9_i_fu_688_p2 == 1'd1)) begin
            ap_phi_mux_x0_4_i_phi_fu_646_p6 = x0_fu_1185_p3;
        end else begin
            ap_phi_mux_x0_4_i_phi_fu_646_p6 = ap_phi_reg_pp2_iter1_x0_4_i_reg_642;
        end
    end else begin
        ap_phi_mux_x0_4_i_phi_fu_646_p6 = ap_phi_reg_pp2_iter1_x0_4_i_reg_642;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1007)) begin
        if ((or_cond9_i_fu_688_p2 == 1'd0)) begin
            ap_phi_mux_x1_4_i_phi_fu_631_p6 = x1_2_i_reg_558;
        end else if ((or_cond9_i_fu_688_p2 == 1'd1)) begin
            ap_phi_mux_x1_4_i_phi_fu_631_p6 = x1_1_fu_1198_p3;
        end else begin
            ap_phi_mux_x1_4_i_phi_fu_631_p6 = ap_phi_reg_pp2_iter1_x1_4_i_reg_627;
        end
    end else begin
        ap_phi_mux_x1_4_i_phi_fu_631_p6 = ap_phi_reg_pp2_iter1_x1_4_i_reg_627;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1007)) begin
        if ((or_cond9_i_fu_688_p2 == 1'd0)) begin
            ap_phi_mux_y0_4_i_phi_fu_616_p6 = y0_2_i_reg_546;
        end else if ((or_cond9_i_fu_688_p2 == 1'd1)) begin
            ap_phi_mux_y0_4_i_phi_fu_616_p6 = y0_fu_1211_p3;
        end else begin
            ap_phi_mux_y0_4_i_phi_fu_616_p6 = ap_phi_reg_pp2_iter1_y0_4_i_reg_612;
        end
    end else begin
        ap_phi_mux_y0_4_i_phi_fu_616_p6 = ap_phi_reg_pp2_iter1_y0_4_i_reg_612;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1007)) begin
        if ((or_cond9_i_fu_688_p2 == 1'd0)) begin
            ap_phi_mux_y1_4_i_phi_fu_601_p6 = y1_2_i_reg_534;
        end else if ((or_cond9_i_fu_688_p2 == 1'd1)) begin
            ap_phi_mux_y1_4_i_phi_fu_601_p6 = y1_1_fu_1224_p3;
        end else begin
            ap_phi_mux_y1_4_i_phi_fu_601_p6 = ap_phi_reg_pp2_iter1_y1_4_i_reg_597;
        end
    end else begin
        ap_phi_mux_y1_4_i_phi_fu_601_p6 = ap_phi_reg_pp2_iter1_y1_4_i_reg_597;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        label_val_address0 = label_val_addr_2_reg_1570;
    end else if (((1'b0 == ap_block_pp2_stage1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        label_val_address0 = tmp_12_cast_fu_1156_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        label_val_address0 = label_val_addr_1_reg_1437;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        label_val_address0 = tmp_7_cast_fu_857_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        label_val_address0 = tmp_4_cast_fu_734_p1;
    end else begin
        label_val_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state3) | ((1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
        label_val_ce0 = 1'b1;
    end else begin
        label_val_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        label_val_d0 = tmp_17_i_reg_1454;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        label_val_d0 = tmp_17_i_fu_873_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        label_val_d0 = 8'd0;
    end else begin
        label_val_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond_flatten_reg_1500 == 1'd0) & (or_cond9_i_fu_688_p2 == 1'd1) & (demorgan_reg_1561 == 1'd1)) | ((1'b1 == ap_CS_fsm_state10) & (or_cond_i_fu_682_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state3) & (exitcond3_i_fu_712_p2 == 1'd0)))) begin
        label_val_we0 = 1'b1;
    end else begin
        label_val_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        points_val_x_address0 = tmp_1_i42_i_fu_1174_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        points_val_x_address0 = tmp_2_i_i_fu_897_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        points_val_x_address0 = 64'd0;
    end else begin
        points_val_x_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
        points_val_x_ce0 = 1'b1;
    end else begin
        points_val_x_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        points_val_x_d0 = c_reg_1541;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        points_val_x_d0 = x1_fu_880_p1;
    end else begin
        points_val_x_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond_flatten_reg_1500 == 1'd0) & (or_cond9_i_fu_688_p2 == 1'd1) & (demorgan_reg_1561 == 1'd1)) | ((1'b1 == ap_CS_fsm_state10) & (or_cond_i_fu_682_p2 == 1'd1)))) begin
        points_val_x_we0 = 1'b1;
    end else begin
        points_val_x_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        points_val_y_address0 = tmp_1_i42_i_fu_1174_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        points_val_y_address0 = tmp_2_i_i_fu_897_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        points_val_y_address0 = 64'd0;
    end else begin
        points_val_y_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
        points_val_y_ce0 = 1'b1;
    end else begin
        points_val_y_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        points_val_y_d0 = r_mid2_reg_1526;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        points_val_y_d0 = y1_reg_1412;
    end else begin
        points_val_y_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond_flatten_reg_1500 == 1'd0) & (or_cond9_i_fu_688_p2 == 1'd1) & (demorgan_reg_1561 == 1'd1)) | ((1'b1 == ap_CS_fsm_state10) & (or_cond_i_fu_682_p2 == 1'd1)))) begin
        points_val_y_we0 = 1'b1;
    end else begin
        points_val_y_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        rects_cols_blk_n = rects_cols_empty_n;
    end else begin
        rects_cols_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        rects_cols_out_blk_n = rects_cols_out_full_n;
    end else begin
        rects_cols_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((rects_cols_out_full_n == 1'b0) | (rects_rows_out_full_n == 1'b0) | (rects_cols_empty_n == 1'b0) | (rects_rows_empty_n == 1'b0) | (src_cols_empty_n == 1'b0) | (src_rows_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        rects_cols_out_write = 1'b1;
    end else begin
        rects_cols_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((rects_cols_out_full_n == 1'b0) | (rects_rows_out_full_n == 1'b0) | (rects_cols_empty_n == 1'b0) | (rects_rows_empty_n == 1'b0) | (src_cols_empty_n == 1'b0) | (src_rows_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        rects_cols_read = 1'b1;
    end else begin
        rects_cols_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        rects_rows_blk_n = rects_rows_empty_n;
    end else begin
        rects_rows_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        rects_rows_out_blk_n = rects_rows_out_full_n;
    end else begin
        rects_rows_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((rects_cols_out_full_n == 1'b0) | (rects_rows_out_full_n == 1'b0) | (rects_cols_empty_n == 1'b0) | (rects_rows_empty_n == 1'b0) | (src_cols_empty_n == 1'b0) | (src_rows_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        rects_rows_out_write = 1'b1;
    end else begin
        rects_rows_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((rects_cols_out_full_n == 1'b0) | (rects_rows_out_full_n == 1'b0) | (rects_cols_empty_n == 1'b0) | (rects_rows_empty_n == 1'b0) | (src_cols_empty_n == 1'b0) | (src_rows_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        rects_rows_read = 1'b1;
    end else begin
        rects_rows_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        rects_val_address0 = tmp_10_cast_fu_1247_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        rects_val_address0 = tmp_19_i_fu_903_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        rects_val_address0 = tmp_5_cast_fu_795_p1;
    end else begin
        rects_val_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        rects_val_address1 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        rects_val_address1 = tmp_9_cast_fu_1237_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        rects_val_address1 = tmp_8_cast_fu_916_p1;
    end else begin
        rects_val_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state6))) begin
        rects_val_ce0 = 1'b1;
    end else begin
        rects_val_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state11))) begin
        rects_val_ce1 = 1'b1;
    end else begin
        rects_val_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        rects_val_d0 = tmp_23_i_fu_1271_p2;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        rects_val_d0 = x0_i_reg_478;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        rects_val_d0 = 16'd0;
    end else begin
        rects_val_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        rects_val_d1 = storemerge_reg_657;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        rects_val_d1 = tmp_21_i_fu_1258_p2;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        rects_val_d1 = y0_i_reg_457;
    end else begin
        rects_val_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state17) & (or_cond_i_reg_1442 == 1'd1) & (tmp_3_i_reg_1403 == 1'd1)) | ((1'b1 == ap_CS_fsm_state11) & (tmp_i_i_fu_885_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state6) & (tmp_2_i_fu_775_p2 == 1'd1)))) begin
        rects_val_we0 = 1'b1;
    end else begin
        rects_val_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | ((1'b1 == ap_CS_fsm_state17) & (or_cond_i_reg_1442 == 1'd1) & (tmp_3_i_reg_1403 == 1'd1)) | ((1'b1 == ap_CS_fsm_state11) & (tmp_i_i_fu_885_p2 == 1'd1)))) begin
        rects_val_we1 = 1'b1;
    end else begin
        rects_val_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        src_cols_blk_n = src_cols_empty_n;
    end else begin
        src_cols_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((rects_cols_out_full_n == 1'b0) | (rects_rows_out_full_n == 1'b0) | (rects_cols_empty_n == 1'b0) | (rects_rows_empty_n == 1'b0) | (src_cols_empty_n == 1'b0) | (src_rows_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        src_cols_read = 1'b1;
    end else begin
        src_cols_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        src_rows_blk_n = src_rows_empty_n;
    end else begin
        src_rows_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((rects_cols_out_full_n == 1'b0) | (rects_rows_out_full_n == 1'b0) | (rects_cols_empty_n == 1'b0) | (rects_rows_empty_n == 1'b0) | (src_cols_empty_n == 1'b0) | (src_rows_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        src_rows_read = 1'b1;
    end else begin
        src_rows_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        src_val_address0 = tmp_12_cast_fu_1156_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        src_val_address0 = tmp_7_cast_fu_857_p1;
    end else begin
        src_val_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | ((1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1)))) begin
        src_val_ce0 = 1'b1;
    end else begin
        src_val_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((rects_cols_out_full_n == 1'b0) | (rects_rows_out_full_n == 1'b0) | (rects_cols_empty_n == 1'b0) | (rects_rows_empty_n == 1'b0) | (src_cols_empty_n == 1'b0) | (src_rows_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (exitcond2_i_fu_700_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (exitcond3_i_fu_712_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (tmp_i_23_fu_743_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (tmp_2_i_fu_775_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (tmp_3_i_fu_814_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (tmp_10_i_fu_837_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (or_cond_i_fu_682_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (tmp_i_i_fu_885_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_pp2_stage1 : begin
            if ((~((1'b0 == ap_block_pp2_stage1_subdone) & (ap_enable_reg_pp2_iter0 == 1'b1) & (exitcond_flatten_reg_1500 == 1'd1)) & (1'b0 == ap_block_pp2_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((1'b0 == ap_block_pp2_stage1_subdone) & (ap_enable_reg_pp2_iter0 == 1'b1) & (exitcond_flatten_reg_1500 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state17 : begin
            if (((1'b1 == ap_CS_fsm_state17) & ((tmp_3_i_reg_1403 == 1'd0) | ((tmp_24_i_fu_1278_p2 == 1'd1) & (or_cond_i_reg_1442 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp2_stage1 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((rects_cols_out_full_n == 1'b0) | (rects_rows_out_full_n == 1'b0) | (rects_cols_empty_n == 1'b0) | (rects_rows_empty_n == 1'b0) | (src_cols_empty_n == 1'b0) | (src_rows_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state13_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp2_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_1007 = ((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond_flatten_reg_1500 == 1'd0) & (demorgan_reg_1561 == 1'd1));
end

always @ (*) begin
    ap_condition_313 = ((1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1));
end

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_phi_reg_pp2_iter0_points_length_5_i_reg_582 = 'bx;

assign ap_phi_reg_pp2_iter0_x0_4_i_reg_642 = 'bx;

assign ap_phi_reg_pp2_iter0_x1_4_i_reg_627 = 'bx;

assign ap_phi_reg_pp2_iter0_y0_4_i_reg_612 = 'bx;

assign ap_phi_reg_pp2_iter0_y1_4_i_reg_597 = 'bx;

assign c_fu_1063_p2 = ($signed(dc_cast_i_fu_1059_p1) + $signed(c0_reg_1489));

assign dc_cast_i_fu_1059_p1 = dc_i_mid2_fu_977_p3;

assign dc_fu_1162_p2 = ($signed(dc_i_mid2_reg_1509) + $signed(3'd1));

assign dc_i_mid2_fu_977_p3 = ((exitcond_i_fu_971_p2[0:0] === 1'b1) ? 3'd7 : ap_phi_mux_dc_i_phi_fu_516_p4);

assign demorgan_fu_1143_p2 = (or_cond8_i_reg_1551 & icmp_fu_1137_p2);

assign dist_fu_1121_p2 = (tmp_26_i_mid2_fu_1109_p3 + tmp_32_i_fu_1117_p2);

assign dr_cast_i_fu_921_p1 = ap_phi_mux_dr_i_phi_fu_505_p4;

assign dr_cast_i_mid1_fu_985_p1 = dr_fu_965_p2;

assign dr_fu_965_p2 = ($signed(ap_phi_mux_dr_i_phi_fu_505_p4) + $signed(3'd1));

assign dr_i_mid2_fu_1051_p3 = ((exitcond_i_fu_971_p2[0:0] === 1'b1) ? dr_fu_965_p2 : ap_phi_mux_dr_i_phi_fu_505_p4);

assign exitcond2_i_fu_700_p2 = ((i_0_i_i_reg_346 == 9'd500) ? 1'b1 : 1'b0);

assign exitcond3_i_fu_712_p2 = ((j_0_i_i_reg_369 == 9'd500) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_959_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_493_p4 == 4'd9) ? 1'b1 : 1'b0);

assign exitcond_i_fu_971_p2 = ((ap_phi_mux_dc_i_phi_fu_516_p4 == 3'd2) ? 1'b1 : 1'b0);

assign grp_fu_670_p2 = ((src_val_q0 != 8'd0) ? 1'b1 : 1'b0);

assign grp_fu_676_p2 = ((label_val_q0 == 8'd0) ? 1'b1 : 1'b0);

assign i1_cast_i_fu_810_p1 = i1_i_reg_402;

assign i_0_i1_cast_cast_i_fu_739_p1 = i_0_i1_i_reg_380;

assign i_1_fu_748_p2 = (i_0_i1_i_reg_380 + 3'd1);

assign i_2_fu_819_p2 = (31'd1 + i1_i_reg_402);

assign i_fu_706_p2 = (i_0_i_i_reg_346 + 9'd1);

assign icmp_fu_1137_p2 = ((tmp_21_fu_1127_p4 != 2'd1) ? 1'b1 : 1'b0);

assign indvar_flatten_next_fu_1103_p2 = (indvar_flatten_reg_489 + 4'd1);

assign j2_cast_i_fu_833_p1 = j2_i_reg_424;

assign j_0_i1_cast_cast_i_fu_771_p1 = j_0_i1_i_reg_391;

assign j_1_fu_780_p2 = (j_0_i1_i_reg_391 + 9'd1);

assign j_2_fu_842_p2 = (j2_i_reg_424 + 31'd1);

assign j_fu_718_p2 = (j_0_i_i_reg_369 + 9'd1);

assign next_mul1_fu_804_p2 = (40'd500 + phi_mul1_reg_413);

assign next_mul_fu_694_p2 = (phi_mul_reg_357 + 18'd500);

assign num_fu_867_p2 = (32'd1 + num_1_fu_144);

assign or_cond8_i_fu_1097_p2 = (tmp_mid2_fu_1043_p3 & tmp1_fu_1091_p2);

assign or_cond9_i_fu_688_p2 = (grp_fu_676_p2 & grp_fu_670_p2);

assign or_cond_i_fu_682_p2 = (grp_fu_676_p2 & grp_fu_670_p2);

assign points_length_1_fu_1167_p2 = ($signed(vector_length_read_a_1_reg_523) + $signed(32'd1));

assign points_length_fu_891_p2 = ($signed(vector_length_read_a_reg_436) + $signed(32'd4294967295));

assign r_fu_925_p2 = ($signed(r0_reg_1494) + $signed(dr_cast_i_fu_921_p1));

assign r_mid1_fu_1001_p2 = ($signed(dr_cast_i_mid1_fu_985_p1) + $signed(r0_reg_1494));

assign r_mid2_fu_1006_p3 = ((exitcond_i_fu_971_p2[0:0] === 1'b1) ? r_mid1_fu_1001_p2 : r_fu_925_p2);

assign rects_cols_out_din = rects_cols_dout;

assign rects_rows_out_din = rects_rows_dout;

assign rev1_fu_1022_p2 = (tmp_19_fu_1014_p3 ^ 1'd1);

assign rev2_fu_1076_p2 = (tmp_20_fu_1068_p3 ^ 1'd1);

assign rev_fu_938_p2 = (tmp_18_fu_930_p3 ^ 1'd1);

assign tmp1_fu_1091_p2 = (tmp_35_i_fu_1086_p2 & rev2_fu_1076_p2);

assign tmp_10_cast_fu_1247_p1 = $signed(tmp_s_fu_1242_p2);

assign tmp_10_fu_1151_p2 = ($signed(tmp_3_fu_1297_p2) + $signed(tmp_37_i_cast_fu_1148_p1));

assign tmp_10_i_fu_837_p2 = (($signed(j2_cast_i_fu_833_p1) < $signed(cols_reg_1326)) ? 1'b1 : 1'b0);

assign tmp_12_cast_fu_1156_p1 = $signed(tmp_10_fu_1151_p2);

assign tmp_13_fu_848_p1 = j2_i_reg_424[18:0];

assign tmp_14_fu_863_p1 = num_1_fu_144[7:0];

assign tmp_16_fu_907_p1 = num_reg_1446[11:0];

assign tmp_17_fu_1287_p1 = num_1_fu_144[15:0];

assign tmp_17_i_fu_873_p2 = (8'd1 + tmp_14_fu_863_p1);

assign tmp_18_fu_930_p3 = r_fu_925_p2[32'd15];

assign tmp_19_fu_1014_p3 = r_mid1_fu_1001_p2[32'd15];

assign tmp_19_i_fu_903_p1 = num_reg_1446;

assign tmp_1_fu_800_p1 = phi_mul1_reg_413[18:0];

assign tmp_1_i42_i_fu_1174_p1 = vector_length_read_a_1_reg_523;

assign tmp_20_fu_1068_p3 = c_fu_1063_p2[32'd15];

assign tmp_20_i_fu_1252_p2 = (16'd1 - x0_i_reg_478);

assign tmp_21_fu_1127_p4 = {{dist_fu_1121_p2[2:1]}};

assign tmp_21_i_fu_1258_p2 = (x_i_reg_468 + tmp_20_i_fu_1252_p2);

assign tmp_22_i_fu_1265_p2 = (16'd1 - y0_i_reg_457);

assign tmp_23_i_fu_1271_p2 = (y_i_reg_447 + tmp_22_i_fu_1265_p2);

assign tmp_24_i_fu_1278_p2 = (($signed(num_reg_1446) > $signed(32'd254)) ? 1'b1 : 1'b0);

assign tmp_25_i_fu_1291_p2 = (16'd1 + tmp_17_fu_1287_p1);

assign tmp_26_i_fu_995_p2 = ($signed(ap_phi_mux_dr_i_phi_fu_505_p4) * $signed(ap_phi_mux_dr_i_phi_fu_505_p4));

assign tmp_26_i_mid1_fu_989_p2 = ($signed(dr_fu_965_p2) * $signed(dr_fu_965_p2));

assign tmp_26_i_mid2_fu_1109_p3 = ((exitcond_i_reg_1504[0:0] === 1'b1) ? tmp_26_i_mid1_reg_1516 : tmp_26_i_reg_1521);

assign tmp_28_i_fu_944_p1 = r_fu_925_p2;

assign tmp_28_i_mid1_fu_1028_p1 = r_mid1_fu_1001_p2;

assign tmp_29_i_fu_948_p2 = (($signed(tmp_28_i_fu_944_p1) < $signed(rows_reg_1319)) ? 1'b1 : 1'b0);

assign tmp_29_i_mid1_fu_1032_p2 = (($signed(tmp_28_i_mid1_fu_1028_p1) < $signed(rows_reg_1319)) ? 1'b1 : 1'b0);

assign tmp_2_fu_754_p3 = {{i_0_i1_i_reg_380}, {8'd0}};

assign tmp_2_i_fu_775_p2 = (($signed(j_0_i1_cast_cast_i_fu_771_p1) < $signed(rects_cols_read_reg_1314)) ? 1'b1 : 1'b0);

assign tmp_2_i_i_fu_897_p1 = points_length_fu_891_p2;

assign tmp_32_i_fu_1117_p2 = ($signed(dc_i_mid2_reg_1509) * $signed(dc_i_mid2_reg_1509));

assign tmp_34_i_fu_1082_p1 = c_fu_1063_p2;

assign tmp_35_i_fu_1086_p2 = (($signed(tmp_34_i_fu_1082_p1) < $signed(cols_reg_1326)) ? 1'b1 : 1'b0);

assign tmp_37_i_cast_fu_1148_p1 = c_reg_1541;

assign tmp_3_cast_fu_762_p1 = tmp_2_fu_754_p3;

assign tmp_3_fu_1297_p1 = 19'd500;

assign tmp_3_i_fu_814_p2 = (($signed(i1_cast_i_fu_810_p1) < $signed(rows_reg_1319)) ? 1'b1 : 1'b0);

assign tmp_40_i_fu_1180_p2 = (($signed(c_reg_1541) < $signed(x0_2_i_reg_570)) ? 1'b1 : 1'b0);

assign tmp_41_i_fu_1193_p2 = (($signed(c_reg_1541) > $signed(x1_2_i_reg_558)) ? 1'b1 : 1'b0);

assign tmp_42_i_fu_1206_p2 = (($signed(r_mid2_reg_1526) < $signed(y0_2_i_reg_546)) ? 1'b1 : 1'b0);

assign tmp_43_i_fu_1219_p2 = (($signed(r_mid2_reg_1526) > $signed(y1_2_i_reg_534)) ? 1'b1 : 1'b0);

assign tmp_4_cast_fu_734_p1 = tmp_4_fu_728_p2;

assign tmp_4_fu_728_p2 = (phi_mul_reg_357 + tmp_9_i_cast_fu_724_p1);

assign tmp_5_cast_fu_795_p1 = tmp_5_fu_790_p2;

assign tmp_5_fu_790_p2 = (tmp_3_cast_reg_1363 + tmp_8_i_cast_fu_786_p1);

assign tmp_6_fu_829_p1 = num_1_fu_144[15:0];

assign tmp_7_cast_fu_857_p1 = tmp_7_fu_852_p2;

assign tmp_7_fu_852_p2 = (tmp_1_reg_1393 + tmp_13_fu_848_p1);

assign tmp_8_cast_fu_916_p1 = $signed(tmp_8_fu_910_p2);

assign tmp_8_fu_910_p2 = (12'd256 + tmp_16_fu_907_p1);

assign tmp_8_i_cast_fu_786_p1 = j_0_i1_i_reg_391;

assign tmp_9_cast_fu_1237_p1 = $signed(tmp_9_fu_1232_p2);

assign tmp_9_fu_1232_p2 = (12'd512 + tmp_16_reg_1483);

assign tmp_9_i_cast_fu_724_p1 = j_0_i_i_reg_369;

assign tmp_fu_953_p2 = (tmp_29_i_fu_948_p2 & rev_fu_938_p2);

assign tmp_i_23_fu_743_p2 = (($signed(i_0_i1_cast_cast_i_fu_739_p1) < $signed(rects_rows_read_reg_1309)) ? 1'b1 : 1'b0);

assign tmp_i_i_fu_885_p2 = ((vector_length_read_a_reg_436 == 32'd0) ? 1'b1 : 1'b0);

assign tmp_mid1_fu_1037_p2 = (tmp_29_i_mid1_fu_1032_p2 & rev1_fu_1022_p2);

assign tmp_mid2_fu_1043_p3 = ((exitcond_i_fu_971_p2[0:0] === 1'b1) ? tmp_mid1_fu_1037_p2 : tmp_fu_953_p2);

assign tmp_s_fu_1242_p2 = (12'd768 + tmp_16_reg_1483);

assign x0_fu_1185_p3 = ((tmp_40_i_fu_1180_p2[0:0] === 1'b1) ? c_reg_1541 : x0_2_i_reg_570);

assign x1_1_fu_1198_p3 = ((tmp_41_i_fu_1193_p2[0:0] === 1'b1) ? c_reg_1541 : x1_2_i_reg_558);

assign x1_fu_880_p1 = j2_i_reg_424[15:0];

assign y0_fu_1211_p3 = ((tmp_42_i_fu_1206_p2[0:0] === 1'b1) ? r_mid2_reg_1526 : y0_2_i_reg_546);

assign y1_1_fu_1224_p3 = ((tmp_43_i_fu_1219_p2[0:0] === 1'b1) ? r_mid2_reg_1526 : y1_2_i_reg_534);

assign y1_fu_825_p1 = i1_i_reg_402[15:0];

always @ (posedge ap_clk) begin
    tmp_3_cast_reg_1363[7:0] <= 8'b00000000;
    tmp_3_cast_reg_1363[11] <= 1'b0;
end

endmodule //SeedFilling
