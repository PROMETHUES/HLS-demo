// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="FAST2_Core,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7vx690tffg1761-3,HLS_INPUT_CLOCK=20.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=17.490000,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=10,HLS_SYN_DSP=3,HLS_SYN_FF=6157,HLS_SYN_LUT=11417,HLS_VERSION=2018_2}" *)

module FAST2_Core (
        s_axi_ctrl_AWVALID,
        s_axi_ctrl_AWREADY,
        s_axi_ctrl_AWADDR,
        s_axi_ctrl_WVALID,
        s_axi_ctrl_WREADY,
        s_axi_ctrl_WDATA,
        s_axi_ctrl_WSTRB,
        s_axi_ctrl_ARVALID,
        s_axi_ctrl_ARREADY,
        s_axi_ctrl_ARADDR,
        s_axi_ctrl_RVALID,
        s_axi_ctrl_RREADY,
        s_axi_ctrl_RDATA,
        s_axi_ctrl_RRESP,
        s_axi_ctrl_BVALID,
        s_axi_ctrl_BREADY,
        s_axi_ctrl_BRESP,
        ap_clk,
        ap_rst_n,
        interrupt,
        src_axis_TDATA,
        src_axis_TKEEP,
        src_axis_TSTRB,
        src_axis_TUSER,
        src_axis_TLAST,
        src_axis_TID,
        src_axis_TDEST,
        dst_axis_TDATA,
        dst_axis_TKEEP,
        dst_axis_TSTRB,
        dst_axis_TUSER,
        dst_axis_TLAST,
        dst_axis_TID,
        dst_axis_TDEST,
        src_axis_TVALID,
        src_axis_TREADY,
        dst_axis_TVALID,
        dst_axis_TREADY
);

parameter    C_S_AXI_CTRL_DATA_WIDTH = 32;
parameter    C_S_AXI_CTRL_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_S_AXI_ADDR_WIDTH = 32;

parameter C_S_AXI_CTRL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   s_axi_ctrl_AWVALID;
output   s_axi_ctrl_AWREADY;
input  [C_S_AXI_CTRL_ADDR_WIDTH - 1:0] s_axi_ctrl_AWADDR;
input   s_axi_ctrl_WVALID;
output   s_axi_ctrl_WREADY;
input  [C_S_AXI_CTRL_DATA_WIDTH - 1:0] s_axi_ctrl_WDATA;
input  [C_S_AXI_CTRL_WSTRB_WIDTH - 1:0] s_axi_ctrl_WSTRB;
input   s_axi_ctrl_ARVALID;
output   s_axi_ctrl_ARREADY;
input  [C_S_AXI_CTRL_ADDR_WIDTH - 1:0] s_axi_ctrl_ARADDR;
output   s_axi_ctrl_RVALID;
input   s_axi_ctrl_RREADY;
output  [C_S_AXI_CTRL_DATA_WIDTH - 1:0] s_axi_ctrl_RDATA;
output  [1:0] s_axi_ctrl_RRESP;
output   s_axi_ctrl_BVALID;
input   s_axi_ctrl_BREADY;
output  [1:0] s_axi_ctrl_BRESP;
input   ap_clk;
input   ap_rst_n;
output   interrupt;
input  [31:0] src_axis_TDATA;
input  [3:0] src_axis_TKEEP;
input  [3:0] src_axis_TSTRB;
input  [0:0] src_axis_TUSER;
input  [0:0] src_axis_TLAST;
input  [0:0] src_axis_TID;
input  [0:0] src_axis_TDEST;
output  [15:0] dst_axis_TDATA;
output  [1:0] dst_axis_TKEEP;
output  [1:0] dst_axis_TSTRB;
output  [0:0] dst_axis_TUSER;
output  [0:0] dst_axis_TLAST;
output  [0:0] dst_axis_TID;
output  [0:0] dst_axis_TDEST;
input   src_axis_TVALID;
output   src_axis_TREADY;
output   dst_axis_TVALID;
input   dst_axis_TREADY;

 reg    ap_rst_n_inv;
wire    ap_start;
wire    ap_ready;
wire    ap_done;
wire    ap_idle;
wire   [31:0] rows;
wire   [31:0] cols;
wire   [7:0] threhold;
wire   [15:0] keypoints_val_i_q0;
wire   [15:0] keypoints_val_t_q0;
wire    Block_Mat_exit10_pro_U0_ap_start;
wire    Block_Mat_exit10_pro_U0_ap_done;
wire    Block_Mat_exit10_pro_U0_ap_continue;
wire    Block_Mat_exit10_pro_U0_ap_idle;
wire    Block_Mat_exit10_pro_U0_ap_ready;
wire    Block_Mat_exit10_pro_U0_start_out;
wire    Block_Mat_exit10_pro_U0_start_write;
wire   [31:0] Block_Mat_exit10_pro_U0_src_rows_V_out_din;
wire    Block_Mat_exit10_pro_U0_src_rows_V_out_write;
wire   [31:0] Block_Mat_exit10_pro_U0_src_cols_V_out_din;
wire    Block_Mat_exit10_pro_U0_src_cols_V_out_write;
wire   [31:0] Block_Mat_exit10_pro_U0_gray_rows_V_out_din;
wire    Block_Mat_exit10_pro_U0_gray_rows_V_out_write;
wire   [31:0] Block_Mat_exit10_pro_U0_gray_cols_V_out_din;
wire    Block_Mat_exit10_pro_U0_gray_cols_V_out_write;
wire   [2:0] Block_Mat_exit10_pro_U0_keypoints_rows_out_din;
wire    Block_Mat_exit10_pro_U0_keypoints_rows_out_write;
wire   [10:0] Block_Mat_exit10_pro_U0_keypoints_cols_out_din;
wire    Block_Mat_exit10_pro_U0_keypoints_cols_out_write;
wire   [7:0] Block_Mat_exit10_pro_U0_threhold_out_din;
wire    Block_Mat_exit10_pro_U0_threhold_out_write;
wire    AXIvideo2Mat_U0_ap_start;
wire    AXIvideo2Mat_U0_ap_done;
wire    AXIvideo2Mat_U0_ap_continue;
wire    AXIvideo2Mat_U0_ap_idle;
wire    AXIvideo2Mat_U0_ap_ready;
wire    AXIvideo2Mat_U0_start_out;
wire    AXIvideo2Mat_U0_start_write;
wire    AXIvideo2Mat_U0_src_axis_TREADY;
wire    AXIvideo2Mat_U0_img_rows_V_read;
wire    AXIvideo2Mat_U0_img_cols_V_read;
wire   [7:0] AXIvideo2Mat_U0_img_data_stream_0_V_din;
wire    AXIvideo2Mat_U0_img_data_stream_0_V_write;
wire   [7:0] AXIvideo2Mat_U0_img_data_stream_1_V_din;
wire    AXIvideo2Mat_U0_img_data_stream_1_V_write;
wire   [7:0] AXIvideo2Mat_U0_img_data_stream_2_V_din;
wire    AXIvideo2Mat_U0_img_data_stream_2_V_write;
wire   [31:0] AXIvideo2Mat_U0_img_rows_V_out_din;
wire    AXIvideo2Mat_U0_img_rows_V_out_write;
wire   [31:0] AXIvideo2Mat_U0_img_cols_V_out_din;
wire    AXIvideo2Mat_U0_img_cols_V_out_write;
wire    CvtColor_U0_ap_start;
wire    CvtColor_U0_ap_done;
wire    CvtColor_U0_ap_continue;
wire    CvtColor_U0_ap_idle;
wire    CvtColor_U0_ap_ready;
wire    CvtColor_U0_p_src_rows_V_read;
wire    CvtColor_U0_p_src_cols_V_read;
wire    CvtColor_U0_p_src_data_stream_0_V_read;
wire    CvtColor_U0_p_src_data_stream_1_V_read;
wire    CvtColor_U0_p_src_data_stream_2_V_read;
wire   [7:0] CvtColor_U0_p_dst_data_stream_V_din;
wire    CvtColor_U0_p_dst_data_stream_V_write;
wire    FAST_t_opr_U0_ap_start;
wire    FAST_t_opr_U0_ap_done;
wire    FAST_t_opr_U0_ap_continue;
wire    FAST_t_opr_U0_ap_idle;
wire    FAST_t_opr_U0_ap_ready;
wire    FAST_t_opr_U0_src_rows_V_read;
wire    FAST_t_opr_U0_src_cols_V_read;
wire    FAST_t_opr_U0_src_data_stream_V_read;
wire   [10:0] FAST_t_opr_U0_keypoints_val_address0;
wire    FAST_t_opr_U0_keypoints_val_ce0;
wire    FAST_t_opr_U0_keypoints_val_we0;
wire   [15:0] FAST_t_opr_U0_keypoints_val_d0;
wire   [10:0] FAST_t_opr_U0_keypoints_val_address1;
wire    FAST_t_opr_U0_keypoints_val_ce1;
wire    FAST_t_opr_U0_keypoints_val_we1;
wire   [15:0] FAST_t_opr_U0_keypoints_val_d1;
wire    FAST_t_opr_U0_keypoints_rows_read;
wire    FAST_t_opr_U0_keypoints_cols_read;
wire    FAST_t_opr_U0_threshold_read;
wire   [2:0] FAST_t_opr_U0_keypoints_rows_out_din;
wire    FAST_t_opr_U0_keypoints_rows_out_write;
wire   [10:0] FAST_t_opr_U0_keypoints_cols_out_din;
wire    FAST_t_opr_U0_keypoints_cols_out_write;
wire    ap_channel_done_keypoints_val;
wire    FAST_t_opr_U0_keypoints_val_full_n;
wire    Array2D2Mat_U0_ap_start;
wire    Array2D2Mat_U0_ap_done;
wire    Array2D2Mat_U0_ap_continue;
wire    Array2D2Mat_U0_ap_idle;
wire    Array2D2Mat_U0_ap_ready;
wire    Array2D2Mat_U0_start_out;
wire    Array2D2Mat_U0_start_write;
wire   [10:0] Array2D2Mat_U0_arr_val_address0;
wire    Array2D2Mat_U0_arr_val_ce0;
wire    Array2D2Mat_U0_arr_rows_read;
wire    Array2D2Mat_U0_arr_cols_read;
wire   [15:0] Array2D2Mat_U0_mat_data_stream_V_din;
wire    Array2D2Mat_U0_mat_data_stream_V_write;
wire   [2:0] Array2D2Mat_U0_mat_rows_V_din;
wire    Array2D2Mat_U0_mat_rows_V_write;
wire   [10:0] Array2D2Mat_U0_mat_cols_V_din;
wire    Array2D2Mat_U0_mat_cols_V_write;
wire    Mat2AXIvideo_U0_ap_start;
wire    Mat2AXIvideo_U0_ap_done;
wire    Mat2AXIvideo_U0_ap_continue;
wire    Mat2AXIvideo_U0_ap_idle;
wire    Mat2AXIvideo_U0_ap_ready;
wire    Mat2AXIvideo_U0_img_rows_V_read;
wire    Mat2AXIvideo_U0_img_cols_V_read;
wire    Mat2AXIvideo_U0_img_data_stream_V_read;
wire   [15:0] Mat2AXIvideo_U0_dst_axis_TDATA;
wire    Mat2AXIvideo_U0_dst_axis_TVALID;
wire   [1:0] Mat2AXIvideo_U0_dst_axis_TKEEP;
wire   [1:0] Mat2AXIvideo_U0_dst_axis_TSTRB;
wire   [0:0] Mat2AXIvideo_U0_dst_axis_TUSER;
wire   [0:0] Mat2AXIvideo_U0_dst_axis_TLAST;
wire   [0:0] Mat2AXIvideo_U0_dst_axis_TID;
wire   [0:0] Mat2AXIvideo_U0_dst_axis_TDEST;
wire    ap_sync_continue;
wire    keypoints_val_i_full_n;
wire    keypoints_val_t_empty_n;
wire    src_rows_V_c_full_n;
wire   [31:0] src_rows_V_c_dout;
wire    src_rows_V_c_empty_n;
wire    src_cols_V_c_full_n;
wire   [31:0] src_cols_V_c_dout;
wire    src_cols_V_c_empty_n;
wire    gray_rows_V_c_full_n;
wire   [31:0] gray_rows_V_c_dout;
wire    gray_rows_V_c_empty_n;
wire    gray_cols_V_c_full_n;
wire   [31:0] gray_cols_V_c_dout;
wire    gray_cols_V_c_empty_n;
wire    keypoints_rows_c_full_n;
wire   [2:0] keypoints_rows_c_dout;
wire    keypoints_rows_c_empty_n;
wire    keypoints_cols_c_full_n;
wire   [10:0] keypoints_cols_c_dout;
wire    keypoints_cols_c_empty_n;
wire    threhold_c_full_n;
wire   [7:0] threhold_c_dout;
wire    threhold_c_empty_n;
wire    src_data_stream_0_V_full_n;
wire   [7:0] src_data_stream_0_V_dout;
wire    src_data_stream_0_V_empty_n;
wire    src_data_stream_1_V_full_n;
wire   [7:0] src_data_stream_1_V_dout;
wire    src_data_stream_1_V_empty_n;
wire    src_data_stream_2_V_full_n;
wire   [7:0] src_data_stream_2_V_dout;
wire    src_data_stream_2_V_empty_n;
wire    src_rows_V_c23_full_n;
wire   [31:0] src_rows_V_c23_dout;
wire    src_rows_V_c23_empty_n;
wire    src_cols_V_c24_full_n;
wire   [31:0] src_cols_V_c24_dout;
wire    src_cols_V_c24_empty_n;
wire    gray_data_stream_0_s_full_n;
wire   [7:0] gray_data_stream_0_s_dout;
wire    gray_data_stream_0_s_empty_n;
wire    keypoints_rows_c25_full_n;
wire   [2:0] keypoints_rows_c25_dout;
wire    keypoints_rows_c25_empty_n;
wire    keypoints_cols_c26_full_n;
wire   [10:0] keypoints_cols_c26_dout;
wire    keypoints_cols_c26_empty_n;
wire    dst_data_stream_0_V_full_n;
wire   [15:0] dst_data_stream_0_V_dout;
wire    dst_data_stream_0_V_empty_n;
wire    dst_rows_V_c_full_n;
wire   [2:0] dst_rows_V_c_dout;
wire    dst_rows_V_c_empty_n;
wire    dst_cols_V_c_full_n;
wire   [10:0] dst_cols_V_c_dout;
wire    dst_cols_V_c_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
reg    ap_sync_reg_AXIvideo2Mat_U0_ap_ready;
wire    ap_sync_AXIvideo2Mat_U0_ap_ready;
reg   [1:0] AXIvideo2Mat_U0_ap_ready_count;
reg    ap_sync_reg_Block_Mat_exit10_pro_U0_ap_ready;
wire    ap_sync_Block_Mat_exit10_pro_U0_ap_ready;
reg   [1:0] Block_Mat_exit10_pro_U0_ap_ready_count;
wire   [0:0] start_for_FAST_t_opr_U0_din;
wire    start_for_FAST_t_opr_U0_full_n;
wire   [0:0] start_for_FAST_t_opr_U0_dout;
wire    start_for_FAST_t_opr_U0_empty_n;
wire   [0:0] start_for_CvtColor_U0_din;
wire    start_for_CvtColor_U0_full_n;
wire   [0:0] start_for_CvtColor_U0_dout;
wire    start_for_CvtColor_U0_empty_n;
wire    CvtColor_U0_start_full_n;
wire    CvtColor_U0_start_write;
wire    FAST_t_opr_U0_start_full_n;
wire    FAST_t_opr_U0_start_write;
wire   [0:0] start_for_Mat2AXIvideo_U0_din;
wire    start_for_Mat2AXIvideo_U0_full_n;
wire   [0:0] start_for_Mat2AXIvideo_U0_dout;
wire    start_for_Mat2AXIvideo_U0_empty_n;
wire    Mat2AXIvideo_U0_start_full_n;
wire    Mat2AXIvideo_U0_start_write;

// power-on initialization
initial begin
#0 ap_sync_reg_AXIvideo2Mat_U0_ap_ready = 1'b0;
#0 AXIvideo2Mat_U0_ap_ready_count = 2'd0;
#0 ap_sync_reg_Block_Mat_exit10_pro_U0_ap_ready = 1'b0;
#0 Block_Mat_exit10_pro_U0_ap_ready_count = 2'd0;
end

FAST2_Core_ctrl_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CTRL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CTRL_DATA_WIDTH ))
FAST2_Core_ctrl_s_axi_U(
    .AWVALID(s_axi_ctrl_AWVALID),
    .AWREADY(s_axi_ctrl_AWREADY),
    .AWADDR(s_axi_ctrl_AWADDR),
    .WVALID(s_axi_ctrl_WVALID),
    .WREADY(s_axi_ctrl_WREADY),
    .WDATA(s_axi_ctrl_WDATA),
    .WSTRB(s_axi_ctrl_WSTRB),
    .ARVALID(s_axi_ctrl_ARVALID),
    .ARREADY(s_axi_ctrl_ARREADY),
    .ARADDR(s_axi_ctrl_ARADDR),
    .RVALID(s_axi_ctrl_RVALID),
    .RREADY(s_axi_ctrl_RREADY),
    .RDATA(s_axi_ctrl_RDATA),
    .RRESP(s_axi_ctrl_RRESP),
    .BVALID(s_axi_ctrl_BVALID),
    .BREADY(s_axi_ctrl_BREADY),
    .BRESP(s_axi_ctrl_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .rows(rows),
    .cols(cols),
    .threhold(threhold)
);

FAST2_Core_keypoimb6 #(
    .DataWidth( 16 ),
    .AddressRange( 2000 ),
    .AddressWidth( 11 ))
keypoints_val_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(FAST_t_opr_U0_keypoints_val_address0),
    .i_ce0(FAST_t_opr_U0_keypoints_val_ce0),
    .i_we0(FAST_t_opr_U0_keypoints_val_we0),
    .i_d0(FAST_t_opr_U0_keypoints_val_d0),
    .i_q0(keypoints_val_i_q0),
    .i_address1(FAST_t_opr_U0_keypoints_val_address1),
    .i_ce1(FAST_t_opr_U0_keypoints_val_ce1),
    .i_we1(FAST_t_opr_U0_keypoints_val_we1),
    .i_d1(FAST_t_opr_U0_keypoints_val_d1),
    .t_address0(Array2D2Mat_U0_arr_val_address0),
    .t_ce0(Array2D2Mat_U0_arr_val_ce0),
    .t_we0(1'b0),
    .t_d0(16'd0),
    .t_q0(keypoints_val_t_q0),
    .t_address1(11'd0),
    .t_ce1(1'b0),
    .t_we1(1'b0),
    .t_d1(16'd0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(keypoints_val_i_full_n),
    .i_write(FAST_t_opr_U0_ap_done),
    .t_empty_n(keypoints_val_t_empty_n),
    .t_read(Array2D2Mat_U0_ap_ready)
);

Block_Mat_exit10_pro Block_Mat_exit10_pro_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Block_Mat_exit10_pro_U0_ap_start),
    .start_full_n(start_for_FAST_t_opr_U0_full_n),
    .ap_done(Block_Mat_exit10_pro_U0_ap_done),
    .ap_continue(Block_Mat_exit10_pro_U0_ap_continue),
    .ap_idle(Block_Mat_exit10_pro_U0_ap_idle),
    .ap_ready(Block_Mat_exit10_pro_U0_ap_ready),
    .start_out(Block_Mat_exit10_pro_U0_start_out),
    .start_write(Block_Mat_exit10_pro_U0_start_write),
    .rows(rows),
    .cols(cols),
    .threhold(threhold),
    .src_rows_V_out_din(Block_Mat_exit10_pro_U0_src_rows_V_out_din),
    .src_rows_V_out_full_n(src_rows_V_c_full_n),
    .src_rows_V_out_write(Block_Mat_exit10_pro_U0_src_rows_V_out_write),
    .src_cols_V_out_din(Block_Mat_exit10_pro_U0_src_cols_V_out_din),
    .src_cols_V_out_full_n(src_cols_V_c_full_n),
    .src_cols_V_out_write(Block_Mat_exit10_pro_U0_src_cols_V_out_write),
    .gray_rows_V_out_din(Block_Mat_exit10_pro_U0_gray_rows_V_out_din),
    .gray_rows_V_out_full_n(gray_rows_V_c_full_n),
    .gray_rows_V_out_write(Block_Mat_exit10_pro_U0_gray_rows_V_out_write),
    .gray_cols_V_out_din(Block_Mat_exit10_pro_U0_gray_cols_V_out_din),
    .gray_cols_V_out_full_n(gray_cols_V_c_full_n),
    .gray_cols_V_out_write(Block_Mat_exit10_pro_U0_gray_cols_V_out_write),
    .keypoints_rows_out_din(Block_Mat_exit10_pro_U0_keypoints_rows_out_din),
    .keypoints_rows_out_full_n(keypoints_rows_c_full_n),
    .keypoints_rows_out_write(Block_Mat_exit10_pro_U0_keypoints_rows_out_write),
    .keypoints_cols_out_din(Block_Mat_exit10_pro_U0_keypoints_cols_out_din),
    .keypoints_cols_out_full_n(keypoints_cols_c_full_n),
    .keypoints_cols_out_write(Block_Mat_exit10_pro_U0_keypoints_cols_out_write),
    .threhold_out_din(Block_Mat_exit10_pro_U0_threhold_out_din),
    .threhold_out_full_n(threhold_c_full_n),
    .threhold_out_write(Block_Mat_exit10_pro_U0_threhold_out_write)
);

AXIvideo2Mat AXIvideo2Mat_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(AXIvideo2Mat_U0_ap_start),
    .start_full_n(start_for_CvtColor_U0_full_n),
    .ap_done(AXIvideo2Mat_U0_ap_done),
    .ap_continue(AXIvideo2Mat_U0_ap_continue),
    .ap_idle(AXIvideo2Mat_U0_ap_idle),
    .ap_ready(AXIvideo2Mat_U0_ap_ready),
    .start_out(AXIvideo2Mat_U0_start_out),
    .start_write(AXIvideo2Mat_U0_start_write),
    .src_axis_TDATA(src_axis_TDATA),
    .src_axis_TVALID(src_axis_TVALID),
    .src_axis_TREADY(AXIvideo2Mat_U0_src_axis_TREADY),
    .src_axis_TKEEP(src_axis_TKEEP),
    .src_axis_TSTRB(src_axis_TSTRB),
    .src_axis_TUSER(src_axis_TUSER),
    .src_axis_TLAST(src_axis_TLAST),
    .src_axis_TID(src_axis_TID),
    .src_axis_TDEST(src_axis_TDEST),
    .img_rows_V_dout(src_rows_V_c_dout),
    .img_rows_V_empty_n(src_rows_V_c_empty_n),
    .img_rows_V_read(AXIvideo2Mat_U0_img_rows_V_read),
    .img_cols_V_dout(src_cols_V_c_dout),
    .img_cols_V_empty_n(src_cols_V_c_empty_n),
    .img_cols_V_read(AXIvideo2Mat_U0_img_cols_V_read),
    .img_data_stream_0_V_din(AXIvideo2Mat_U0_img_data_stream_0_V_din),
    .img_data_stream_0_V_full_n(src_data_stream_0_V_full_n),
    .img_data_stream_0_V_write(AXIvideo2Mat_U0_img_data_stream_0_V_write),
    .img_data_stream_1_V_din(AXIvideo2Mat_U0_img_data_stream_1_V_din),
    .img_data_stream_1_V_full_n(src_data_stream_1_V_full_n),
    .img_data_stream_1_V_write(AXIvideo2Mat_U0_img_data_stream_1_V_write),
    .img_data_stream_2_V_din(AXIvideo2Mat_U0_img_data_stream_2_V_din),
    .img_data_stream_2_V_full_n(src_data_stream_2_V_full_n),
    .img_data_stream_2_V_write(AXIvideo2Mat_U0_img_data_stream_2_V_write),
    .img_rows_V_out_din(AXIvideo2Mat_U0_img_rows_V_out_din),
    .img_rows_V_out_full_n(src_rows_V_c23_full_n),
    .img_rows_V_out_write(AXIvideo2Mat_U0_img_rows_V_out_write),
    .img_cols_V_out_din(AXIvideo2Mat_U0_img_cols_V_out_din),
    .img_cols_V_out_full_n(src_cols_V_c24_full_n),
    .img_cols_V_out_write(AXIvideo2Mat_U0_img_cols_V_out_write)
);

CvtColor CvtColor_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(CvtColor_U0_ap_start),
    .ap_done(CvtColor_U0_ap_done),
    .ap_continue(CvtColor_U0_ap_continue),
    .ap_idle(CvtColor_U0_ap_idle),
    .ap_ready(CvtColor_U0_ap_ready),
    .p_src_rows_V_dout(src_rows_V_c23_dout),
    .p_src_rows_V_empty_n(src_rows_V_c23_empty_n),
    .p_src_rows_V_read(CvtColor_U0_p_src_rows_V_read),
    .p_src_cols_V_dout(src_cols_V_c24_dout),
    .p_src_cols_V_empty_n(src_cols_V_c24_empty_n),
    .p_src_cols_V_read(CvtColor_U0_p_src_cols_V_read),
    .p_src_data_stream_0_V_dout(src_data_stream_0_V_dout),
    .p_src_data_stream_0_V_empty_n(src_data_stream_0_V_empty_n),
    .p_src_data_stream_0_V_read(CvtColor_U0_p_src_data_stream_0_V_read),
    .p_src_data_stream_1_V_dout(src_data_stream_1_V_dout),
    .p_src_data_stream_1_V_empty_n(src_data_stream_1_V_empty_n),
    .p_src_data_stream_1_V_read(CvtColor_U0_p_src_data_stream_1_V_read),
    .p_src_data_stream_2_V_dout(src_data_stream_2_V_dout),
    .p_src_data_stream_2_V_empty_n(src_data_stream_2_V_empty_n),
    .p_src_data_stream_2_V_read(CvtColor_U0_p_src_data_stream_2_V_read),
    .p_dst_data_stream_V_din(CvtColor_U0_p_dst_data_stream_V_din),
    .p_dst_data_stream_V_full_n(gray_data_stream_0_s_full_n),
    .p_dst_data_stream_V_write(CvtColor_U0_p_dst_data_stream_V_write)
);

FAST_t_opr FAST_t_opr_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(FAST_t_opr_U0_ap_start),
    .ap_done(FAST_t_opr_U0_ap_done),
    .ap_continue(FAST_t_opr_U0_ap_continue),
    .ap_idle(FAST_t_opr_U0_ap_idle),
    .ap_ready(FAST_t_opr_U0_ap_ready),
    .src_rows_V_dout(gray_rows_V_c_dout),
    .src_rows_V_empty_n(gray_rows_V_c_empty_n),
    .src_rows_V_read(FAST_t_opr_U0_src_rows_V_read),
    .src_cols_V_dout(gray_cols_V_c_dout),
    .src_cols_V_empty_n(gray_cols_V_c_empty_n),
    .src_cols_V_read(FAST_t_opr_U0_src_cols_V_read),
    .src_data_stream_V_dout(gray_data_stream_0_s_dout),
    .src_data_stream_V_empty_n(gray_data_stream_0_s_empty_n),
    .src_data_stream_V_read(FAST_t_opr_U0_src_data_stream_V_read),
    .keypoints_val_address0(FAST_t_opr_U0_keypoints_val_address0),
    .keypoints_val_ce0(FAST_t_opr_U0_keypoints_val_ce0),
    .keypoints_val_we0(FAST_t_opr_U0_keypoints_val_we0),
    .keypoints_val_d0(FAST_t_opr_U0_keypoints_val_d0),
    .keypoints_val_address1(FAST_t_opr_U0_keypoints_val_address1),
    .keypoints_val_ce1(FAST_t_opr_U0_keypoints_val_ce1),
    .keypoints_val_we1(FAST_t_opr_U0_keypoints_val_we1),
    .keypoints_val_d1(FAST_t_opr_U0_keypoints_val_d1),
    .keypoints_rows_dout(keypoints_rows_c_dout),
    .keypoints_rows_empty_n(keypoints_rows_c_empty_n),
    .keypoints_rows_read(FAST_t_opr_U0_keypoints_rows_read),
    .keypoints_cols_dout(keypoints_cols_c_dout),
    .keypoints_cols_empty_n(keypoints_cols_c_empty_n),
    .keypoints_cols_read(FAST_t_opr_U0_keypoints_cols_read),
    .threshold_dout(threhold_c_dout),
    .threshold_empty_n(threhold_c_empty_n),
    .threshold_read(FAST_t_opr_U0_threshold_read),
    .keypoints_rows_out_din(FAST_t_opr_U0_keypoints_rows_out_din),
    .keypoints_rows_out_full_n(keypoints_rows_c25_full_n),
    .keypoints_rows_out_write(FAST_t_opr_U0_keypoints_rows_out_write),
    .keypoints_cols_out_din(FAST_t_opr_U0_keypoints_cols_out_din),
    .keypoints_cols_out_full_n(keypoints_cols_c26_full_n),
    .keypoints_cols_out_write(FAST_t_opr_U0_keypoints_cols_out_write)
);

Array2D2Mat Array2D2Mat_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Array2D2Mat_U0_ap_start),
    .start_full_n(start_for_Mat2AXIvideo_U0_full_n),
    .ap_done(Array2D2Mat_U0_ap_done),
    .ap_continue(Array2D2Mat_U0_ap_continue),
    .ap_idle(Array2D2Mat_U0_ap_idle),
    .ap_ready(Array2D2Mat_U0_ap_ready),
    .start_out(Array2D2Mat_U0_start_out),
    .start_write(Array2D2Mat_U0_start_write),
    .arr_val_address0(Array2D2Mat_U0_arr_val_address0),
    .arr_val_ce0(Array2D2Mat_U0_arr_val_ce0),
    .arr_val_q0(keypoints_val_t_q0),
    .arr_rows_dout(keypoints_rows_c25_dout),
    .arr_rows_empty_n(keypoints_rows_c25_empty_n),
    .arr_rows_read(Array2D2Mat_U0_arr_rows_read),
    .arr_cols_dout(keypoints_cols_c26_dout),
    .arr_cols_empty_n(keypoints_cols_c26_empty_n),
    .arr_cols_read(Array2D2Mat_U0_arr_cols_read),
    .mat_data_stream_V_din(Array2D2Mat_U0_mat_data_stream_V_din),
    .mat_data_stream_V_full_n(dst_data_stream_0_V_full_n),
    .mat_data_stream_V_write(Array2D2Mat_U0_mat_data_stream_V_write),
    .mat_rows_V_din(Array2D2Mat_U0_mat_rows_V_din),
    .mat_rows_V_full_n(dst_rows_V_c_full_n),
    .mat_rows_V_write(Array2D2Mat_U0_mat_rows_V_write),
    .mat_cols_V_din(Array2D2Mat_U0_mat_cols_V_din),
    .mat_cols_V_full_n(dst_cols_V_c_full_n),
    .mat_cols_V_write(Array2D2Mat_U0_mat_cols_V_write)
);

Mat2AXIvideo Mat2AXIvideo_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Mat2AXIvideo_U0_ap_start),
    .ap_done(Mat2AXIvideo_U0_ap_done),
    .ap_continue(Mat2AXIvideo_U0_ap_continue),
    .ap_idle(Mat2AXIvideo_U0_ap_idle),
    .ap_ready(Mat2AXIvideo_U0_ap_ready),
    .img_rows_V_dout(dst_rows_V_c_dout),
    .img_rows_V_empty_n(dst_rows_V_c_empty_n),
    .img_rows_V_read(Mat2AXIvideo_U0_img_rows_V_read),
    .img_cols_V_dout(dst_cols_V_c_dout),
    .img_cols_V_empty_n(dst_cols_V_c_empty_n),
    .img_cols_V_read(Mat2AXIvideo_U0_img_cols_V_read),
    .img_data_stream_V_dout(dst_data_stream_0_V_dout),
    .img_data_stream_V_empty_n(dst_data_stream_0_V_empty_n),
    .img_data_stream_V_read(Mat2AXIvideo_U0_img_data_stream_V_read),
    .dst_axis_TDATA(Mat2AXIvideo_U0_dst_axis_TDATA),
    .dst_axis_TVALID(Mat2AXIvideo_U0_dst_axis_TVALID),
    .dst_axis_TREADY(dst_axis_TREADY),
    .dst_axis_TKEEP(Mat2AXIvideo_U0_dst_axis_TKEEP),
    .dst_axis_TSTRB(Mat2AXIvideo_U0_dst_axis_TSTRB),
    .dst_axis_TUSER(Mat2AXIvideo_U0_dst_axis_TUSER),
    .dst_axis_TLAST(Mat2AXIvideo_U0_dst_axis_TLAST),
    .dst_axis_TID(Mat2AXIvideo_U0_dst_axis_TID),
    .dst_axis_TDEST(Mat2AXIvideo_U0_dst_axis_TDEST)
);

fifo_w32_d2_A src_rows_V_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_Mat_exit10_pro_U0_src_rows_V_out_din),
    .if_full_n(src_rows_V_c_full_n),
    .if_write(Block_Mat_exit10_pro_U0_src_rows_V_out_write),
    .if_dout(src_rows_V_c_dout),
    .if_empty_n(src_rows_V_c_empty_n),
    .if_read(AXIvideo2Mat_U0_img_rows_V_read)
);

fifo_w32_d2_A src_cols_V_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_Mat_exit10_pro_U0_src_cols_V_out_din),
    .if_full_n(src_cols_V_c_full_n),
    .if_write(Block_Mat_exit10_pro_U0_src_cols_V_out_write),
    .if_dout(src_cols_V_c_dout),
    .if_empty_n(src_cols_V_c_empty_n),
    .if_read(AXIvideo2Mat_U0_img_cols_V_read)
);

fifo_w32_d4_A gray_rows_V_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_Mat_exit10_pro_U0_gray_rows_V_out_din),
    .if_full_n(gray_rows_V_c_full_n),
    .if_write(Block_Mat_exit10_pro_U0_gray_rows_V_out_write),
    .if_dout(gray_rows_V_c_dout),
    .if_empty_n(gray_rows_V_c_empty_n),
    .if_read(FAST_t_opr_U0_src_rows_V_read)
);

fifo_w32_d4_A gray_cols_V_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_Mat_exit10_pro_U0_gray_cols_V_out_din),
    .if_full_n(gray_cols_V_c_full_n),
    .if_write(Block_Mat_exit10_pro_U0_gray_cols_V_out_write),
    .if_dout(gray_cols_V_c_dout),
    .if_empty_n(gray_cols_V_c_empty_n),
    .if_read(FAST_t_opr_U0_src_cols_V_read)
);

fifo_w3_d4_A keypoints_rows_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_Mat_exit10_pro_U0_keypoints_rows_out_din),
    .if_full_n(keypoints_rows_c_full_n),
    .if_write(Block_Mat_exit10_pro_U0_keypoints_rows_out_write),
    .if_dout(keypoints_rows_c_dout),
    .if_empty_n(keypoints_rows_c_empty_n),
    .if_read(FAST_t_opr_U0_keypoints_rows_read)
);

fifo_w11_d4_A keypoints_cols_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_Mat_exit10_pro_U0_keypoints_cols_out_din),
    .if_full_n(keypoints_cols_c_full_n),
    .if_write(Block_Mat_exit10_pro_U0_keypoints_cols_out_write),
    .if_dout(keypoints_cols_c_dout),
    .if_empty_n(keypoints_cols_c_empty_n),
    .if_read(FAST_t_opr_U0_keypoints_cols_read)
);

fifo_w8_d4_A threhold_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_Mat_exit10_pro_U0_threhold_out_din),
    .if_full_n(threhold_c_full_n),
    .if_write(Block_Mat_exit10_pro_U0_threhold_out_write),
    .if_dout(threhold_c_dout),
    .if_empty_n(threhold_c_empty_n),
    .if_read(FAST_t_opr_U0_threshold_read)
);

fifo_w8_d2_A src_data_stream_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2Mat_U0_img_data_stream_0_V_din),
    .if_full_n(src_data_stream_0_V_full_n),
    .if_write(AXIvideo2Mat_U0_img_data_stream_0_V_write),
    .if_dout(src_data_stream_0_V_dout),
    .if_empty_n(src_data_stream_0_V_empty_n),
    .if_read(CvtColor_U0_p_src_data_stream_0_V_read)
);

fifo_w8_d2_A src_data_stream_1_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2Mat_U0_img_data_stream_1_V_din),
    .if_full_n(src_data_stream_1_V_full_n),
    .if_write(AXIvideo2Mat_U0_img_data_stream_1_V_write),
    .if_dout(src_data_stream_1_V_dout),
    .if_empty_n(src_data_stream_1_V_empty_n),
    .if_read(CvtColor_U0_p_src_data_stream_1_V_read)
);

fifo_w8_d2_A src_data_stream_2_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2Mat_U0_img_data_stream_2_V_din),
    .if_full_n(src_data_stream_2_V_full_n),
    .if_write(AXIvideo2Mat_U0_img_data_stream_2_V_write),
    .if_dout(src_data_stream_2_V_dout),
    .if_empty_n(src_data_stream_2_V_empty_n),
    .if_read(CvtColor_U0_p_src_data_stream_2_V_read)
);

fifo_w32_d2_A src_rows_V_c23_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2Mat_U0_img_rows_V_out_din),
    .if_full_n(src_rows_V_c23_full_n),
    .if_write(AXIvideo2Mat_U0_img_rows_V_out_write),
    .if_dout(src_rows_V_c23_dout),
    .if_empty_n(src_rows_V_c23_empty_n),
    .if_read(CvtColor_U0_p_src_rows_V_read)
);

fifo_w32_d2_A src_cols_V_c24_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2Mat_U0_img_cols_V_out_din),
    .if_full_n(src_cols_V_c24_full_n),
    .if_write(AXIvideo2Mat_U0_img_cols_V_out_write),
    .if_dout(src_cols_V_c24_dout),
    .if_empty_n(src_cols_V_c24_empty_n),
    .if_read(CvtColor_U0_p_src_cols_V_read)
);

fifo_w8_d2_A gray_data_stream_0_s_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(CvtColor_U0_p_dst_data_stream_V_din),
    .if_full_n(gray_data_stream_0_s_full_n),
    .if_write(CvtColor_U0_p_dst_data_stream_V_write),
    .if_dout(gray_data_stream_0_s_dout),
    .if_empty_n(gray_data_stream_0_s_empty_n),
    .if_read(FAST_t_opr_U0_src_data_stream_V_read)
);

fifo_w3_d2_A keypoints_rows_c25_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(FAST_t_opr_U0_keypoints_rows_out_din),
    .if_full_n(keypoints_rows_c25_full_n),
    .if_write(FAST_t_opr_U0_keypoints_rows_out_write),
    .if_dout(keypoints_rows_c25_dout),
    .if_empty_n(keypoints_rows_c25_empty_n),
    .if_read(Array2D2Mat_U0_arr_rows_read)
);

fifo_w11_d2_A keypoints_cols_c26_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(FAST_t_opr_U0_keypoints_cols_out_din),
    .if_full_n(keypoints_cols_c26_full_n),
    .if_write(FAST_t_opr_U0_keypoints_cols_out_write),
    .if_dout(keypoints_cols_c26_dout),
    .if_empty_n(keypoints_cols_c26_empty_n),
    .if_read(Array2D2Mat_U0_arr_cols_read)
);

fifo_w16_d2_A dst_data_stream_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Array2D2Mat_U0_mat_data_stream_V_din),
    .if_full_n(dst_data_stream_0_V_full_n),
    .if_write(Array2D2Mat_U0_mat_data_stream_V_write),
    .if_dout(dst_data_stream_0_V_dout),
    .if_empty_n(dst_data_stream_0_V_empty_n),
    .if_read(Mat2AXIvideo_U0_img_data_stream_V_read)
);

fifo_w3_d2_A dst_rows_V_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Array2D2Mat_U0_mat_rows_V_din),
    .if_full_n(dst_rows_V_c_full_n),
    .if_write(Array2D2Mat_U0_mat_rows_V_write),
    .if_dout(dst_rows_V_c_dout),
    .if_empty_n(dst_rows_V_c_empty_n),
    .if_read(Mat2AXIvideo_U0_img_rows_V_read)
);

fifo_w11_d2_A dst_cols_V_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Array2D2Mat_U0_mat_cols_V_din),
    .if_full_n(dst_cols_V_c_full_n),
    .if_write(Array2D2Mat_U0_mat_cols_V_write),
    .if_dout(dst_cols_V_c_dout),
    .if_empty_n(dst_cols_V_c_empty_n),
    .if_read(Mat2AXIvideo_U0_img_cols_V_read)
);

start_for_FAST_t_ncg start_for_FAST_t_ncg_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_FAST_t_opr_U0_din),
    .if_full_n(start_for_FAST_t_opr_U0_full_n),
    .if_write(Block_Mat_exit10_pro_U0_start_write),
    .if_dout(start_for_FAST_t_opr_U0_dout),
    .if_empty_n(start_for_FAST_t_opr_U0_empty_n),
    .if_read(FAST_t_opr_U0_ap_ready)
);

start_for_CvtColoocq start_for_CvtColoocq_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_CvtColor_U0_din),
    .if_full_n(start_for_CvtColor_U0_full_n),
    .if_write(AXIvideo2Mat_U0_start_write),
    .if_dout(start_for_CvtColor_U0_dout),
    .if_empty_n(start_for_CvtColor_U0_empty_n),
    .if_read(CvtColor_U0_ap_ready)
);

start_for_Mat2AXIpcA start_for_Mat2AXIpcA_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_Mat2AXIvideo_U0_din),
    .if_full_n(start_for_Mat2AXIvideo_U0_full_n),
    .if_write(Array2D2Mat_U0_start_write),
    .if_dout(start_for_Mat2AXIvideo_U0_dout),
    .if_empty_n(start_for_Mat2AXIvideo_U0_empty_n),
    .if_read(Mat2AXIvideo_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_AXIvideo2Mat_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_AXIvideo2Mat_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_AXIvideo2Mat_U0_ap_ready <= ap_sync_AXIvideo2Mat_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_Block_Mat_exit10_pro_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_Block_Mat_exit10_pro_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_Block_Mat_exit10_pro_U0_ap_ready <= ap_sync_Block_Mat_exit10_pro_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_sync_ready == 1'b1) & (1'b0 == AXIvideo2Mat_U0_ap_ready))) begin
        AXIvideo2Mat_U0_ap_ready_count <= (AXIvideo2Mat_U0_ap_ready_count - 2'd1);
    end else if (((1'b1 == AXIvideo2Mat_U0_ap_ready) & (ap_sync_ready == 1'b0))) begin
        AXIvideo2Mat_U0_ap_ready_count <= (AXIvideo2Mat_U0_ap_ready_count + 2'd1);
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == Block_Mat_exit10_pro_U0_ap_ready) & (ap_sync_ready == 1'b1))) begin
        Block_Mat_exit10_pro_U0_ap_ready_count <= (Block_Mat_exit10_pro_U0_ap_ready_count - 2'd1);
    end else if (((1'b1 == Block_Mat_exit10_pro_U0_ap_ready) & (ap_sync_ready == 1'b0))) begin
        Block_Mat_exit10_pro_U0_ap_ready_count <= (Block_Mat_exit10_pro_U0_ap_ready_count + 2'd1);
    end
end

assign AXIvideo2Mat_U0_ap_continue = 1'b1;

assign AXIvideo2Mat_U0_ap_start = ((ap_sync_reg_AXIvideo2Mat_U0_ap_ready ^ 1'b1) & ap_start);

assign Array2D2Mat_U0_ap_continue = 1'b1;

assign Array2D2Mat_U0_ap_start = keypoints_val_t_empty_n;

assign Block_Mat_exit10_pro_U0_ap_continue = 1'b1;

assign Block_Mat_exit10_pro_U0_ap_start = ((ap_sync_reg_Block_Mat_exit10_pro_U0_ap_ready ^ 1'b1) & ap_start);

assign CvtColor_U0_ap_continue = 1'b1;

assign CvtColor_U0_ap_start = start_for_CvtColor_U0_empty_n;

assign CvtColor_U0_start_full_n = 1'b1;

assign CvtColor_U0_start_write = 1'b0;

assign FAST_t_opr_U0_ap_continue = keypoints_val_i_full_n;

assign FAST_t_opr_U0_ap_start = start_for_FAST_t_opr_U0_empty_n;

assign FAST_t_opr_U0_keypoints_val_full_n = keypoints_val_i_full_n;

assign FAST_t_opr_U0_start_full_n = 1'b1;

assign FAST_t_opr_U0_start_write = 1'b0;

assign Mat2AXIvideo_U0_ap_continue = 1'b1;

assign Mat2AXIvideo_U0_ap_start = start_for_Mat2AXIvideo_U0_empty_n;

assign Mat2AXIvideo_U0_start_full_n = 1'b1;

assign Mat2AXIvideo_U0_start_write = 1'b0;

assign ap_channel_done_keypoints_val = FAST_t_opr_U0_ap_done;

assign ap_done = Mat2AXIvideo_U0_ap_done;

assign ap_idle = ((keypoints_val_t_empty_n ^ 1'b1) & Mat2AXIvideo_U0_ap_idle & FAST_t_opr_U0_ap_idle & CvtColor_U0_ap_idle & Block_Mat_exit10_pro_U0_ap_idle & Array2D2Mat_U0_ap_idle & AXIvideo2Mat_U0_ap_idle);

assign ap_ready = ap_sync_ready;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_AXIvideo2Mat_U0_ap_ready = (ap_sync_reg_AXIvideo2Mat_U0_ap_ready | AXIvideo2Mat_U0_ap_ready);

assign ap_sync_Block_Mat_exit10_pro_U0_ap_ready = (ap_sync_reg_Block_Mat_exit10_pro_U0_ap_ready | Block_Mat_exit10_pro_U0_ap_ready);

assign ap_sync_continue = 1'b1;

assign ap_sync_done = Mat2AXIvideo_U0_ap_done;

assign ap_sync_ready = (ap_sync_Block_Mat_exit10_pro_U0_ap_ready & ap_sync_AXIvideo2Mat_U0_ap_ready);

assign dst_axis_TDATA = Mat2AXIvideo_U0_dst_axis_TDATA;

assign dst_axis_TDEST = Mat2AXIvideo_U0_dst_axis_TDEST;

assign dst_axis_TID = Mat2AXIvideo_U0_dst_axis_TID;

assign dst_axis_TKEEP = Mat2AXIvideo_U0_dst_axis_TKEEP;

assign dst_axis_TLAST = Mat2AXIvideo_U0_dst_axis_TLAST;

assign dst_axis_TSTRB = Mat2AXIvideo_U0_dst_axis_TSTRB;

assign dst_axis_TUSER = Mat2AXIvideo_U0_dst_axis_TUSER;

assign dst_axis_TVALID = Mat2AXIvideo_U0_dst_axis_TVALID;

assign src_axis_TREADY = AXIvideo2Mat_U0_src_axis_TREADY;

assign start_for_CvtColor_U0_din = 1'b1;

assign start_for_FAST_t_opr_U0_din = 1'b1;

assign start_for_Mat2AXIvideo_U0_din = 1'b1;

endmodule //FAST2_Core
