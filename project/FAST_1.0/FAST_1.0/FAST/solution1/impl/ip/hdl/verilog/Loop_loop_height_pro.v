// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Loop_loop_height_pro (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        tmp_27_loc_dout,
        tmp_27_loc_empty_n,
        tmp_27_loc_read,
        tmp_loc_dout,
        tmp_loc_empty_n,
        tmp_loc_read,
        rows_dout,
        rows_empty_n,
        rows_read,
        p_neg393_i_i_loc_dout,
        p_neg393_i_i_loc_empty_n,
        p_neg393_i_i_loc_read,
        cols_dout,
        cols_empty_n,
        cols_read,
        mask_data_stream_0_V_dout,
        mask_data_stream_0_V_empty_n,
        mask_data_stream_0_V_read,
        dmask_data_stream_0_V_din,
        dmask_data_stream_0_V_full_n,
        dmask_data_stream_0_V_write
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state5 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] tmp_27_loc_dout;
input   tmp_27_loc_empty_n;
output   tmp_27_loc_read;
input  [31:0] tmp_loc_dout;
input   tmp_loc_empty_n;
output   tmp_loc_read;
input  [31:0] rows_dout;
input   rows_empty_n;
output   rows_read;
input  [31:0] p_neg393_i_i_loc_dout;
input   p_neg393_i_i_loc_empty_n;
output   p_neg393_i_i_loc_read;
input  [31:0] cols_dout;
input   cols_empty_n;
output   cols_read;
input  [7:0] mask_data_stream_0_V_dout;
input   mask_data_stream_0_V_empty_n;
output   mask_data_stream_0_V_read;
output  [7:0] dmask_data_stream_0_V_din;
input   dmask_data_stream_0_V_full_n;
output   dmask_data_stream_0_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg tmp_27_loc_read;
reg tmp_loc_read;
reg rows_read;
reg p_neg393_i_i_loc_read;
reg cols_read;
reg mask_data_stream_0_V_read;
reg dmask_data_stream_0_V_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    tmp_27_loc_blk_n;
reg    tmp_loc_blk_n;
reg    rows_blk_n;
reg    p_neg393_i_i_loc_blk_n;
reg    cols_blk_n;
reg    mask_data_stream_0_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond388_i_i_i_i_reg_1269;
reg   [0:0] or_cond_i_i_i_i_i_reg_1278;
reg   [0:0] icmp_reg_1234;
reg   [0:0] tmp_28_i_i_reg_1225;
reg    dmask_data_stream_0_V_blk_n;
reg   [0:0] or_cond_i_i_i_i_reg_1314;
reg   [31:0] t_V_3_reg_249;
reg   [31:0] rows_read_reg_1164;
reg    ap_block_state1;
reg   [31:0] cols_read_reg_1176;
reg   [31:0] tmp_27_loc_read_reg_1182;
reg   [31:0] tmp_loc_read_reg_1187;
reg   [31:0] p_neg393_i_i_loc_read_reg_1192;
wire   [31:0] tmp_38_i_i_fu_260_p2;
reg   [31:0] tmp_38_i_i_reg_1199;
wire   [31:0] tmp_251_i_i_fu_272_p2;
reg   [31:0] tmp_251_i_i_reg_1204;
wire   [31:0] tmp_37_i_i_fu_284_p2;
reg   [31:0] tmp_37_i_i_reg_1211;
wire   [0:0] exitcond389_i_i_i_i_fu_290_p2;
wire    ap_CS_fsm_state2;
wire   [31:0] i_V_fu_295_p2;
reg   [31:0] i_V_reg_1220;
wire   [0:0] tmp_28_i_i_fu_301_p2;
wire   [0:0] tmp_162_not_i_i_fu_306_p2;
reg   [0:0] tmp_162_not_i_i_reg_1229;
wire   [0:0] icmp_fu_322_p2;
wire   [0:0] tmp_213_i_i_fu_328_p2;
reg   [0:0] tmp_213_i_i_reg_1239;
wire   [0:0] tmp_213_1_i_i_fu_334_p2;
reg   [0:0] tmp_213_1_i_i_reg_1243;
wire   [0:0] tmp_233_i_i_fu_340_p2;
reg   [0:0] tmp_233_i_i_reg_1247;
wire   [1:0] tmp_18_fu_555_p1;
reg   [1:0] tmp_18_reg_1254;
wire   [1:0] tmp_19_fu_580_p1;
reg   [1:0] tmp_19_reg_1259;
wire   [1:0] tmp_20_fu_605_p1;
reg   [1:0] tmp_20_reg_1264;
wire   [0:0] exitcond388_i_i_i_i_fu_609_p2;
wire    ap_block_state3_pp0_stage0_iter0;
reg    ap_predicate_op157_read_state4;
reg    ap_predicate_op167_read_state4;
reg    ap_predicate_op204_write_state4;
reg    ap_block_state4_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [31:0] j_V_fu_614_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] or_cond_i_i_i_i_i_fu_661_p2;
wire   [0:0] brmerge_i_i_fu_745_p2;
reg   [0:0] brmerge_i_i_reg_1282;
reg   [8:0] k_buf_0_val_3_addr_reg_1289;
wire   [1:0] tmp_24_fu_750_p1;
reg   [1:0] tmp_24_reg_1295;
reg   [8:0] k_buf_0_val_4_addr_reg_1302;
reg   [8:0] k_buf_0_val_5_addr_reg_1308;
wire   [0:0] or_cond_i_i_i_i_fu_754_p2;
reg    ap_block_pp0_stage0_subdone;
wire   [8:0] k_buf_0_val_4_address0;
reg    k_buf_0_val_4_ce0;
wire   [7:0] k_buf_0_val_4_q0;
reg    k_buf_0_val_4_ce1;
reg    k_buf_0_val_4_we1;
reg   [7:0] k_buf_0_val_4_d1;
wire   [8:0] k_buf_0_val_3_address0;
reg    k_buf_0_val_3_ce0;
wire   [7:0] k_buf_0_val_3_q0;
reg    k_buf_0_val_3_ce1;
reg    k_buf_0_val_3_we1;
wire   [8:0] k_buf_0_val_5_address0;
reg    k_buf_0_val_5_ce0;
wire   [7:0] k_buf_0_val_5_q0;
reg    k_buf_0_val_5_ce1;
reg    k_buf_0_val_5_we1;
reg   [7:0] k_buf_0_val_5_d1;
reg   [31:0] t_V_reg_238;
wire    ap_CS_fsm_state5;
wire   [63:0] tmp_49_i_i_fu_733_p1;
reg    ap_block_pp0_stage0_01001;
reg   [7:0] src_kernel_win_0_va_fu_82;
wire   [7:0] src_kernel_win_0_va_9_fu_875_p3;
reg   [7:0] src_kernel_win_0_va_1_fu_86;
reg   [7:0] src_kernel_win_0_va_2_fu_90;
wire   [7:0] src_kernel_win_0_va_10_fu_893_p3;
reg   [7:0] src_kernel_win_0_va_3_fu_94;
reg   [7:0] src_kernel_win_0_va_4_fu_98;
wire   [7:0] src_kernel_win_0_va_11_fu_911_p3;
reg   [7:0] src_kernel_win_0_va_5_fu_102;
reg   [7:0] right_border_buf_0_s_fu_106;
reg   [7:0] right_border_buf_0_1_fu_110;
wire   [7:0] col_buf_0_val_2_0_fu_824_p3;
reg   [7:0] right_border_buf_0_2_fu_114;
reg   [7:0] right_border_buf_0_3_fu_118;
wire   [7:0] col_buf_0_val_0_0_fu_788_p3;
reg   [7:0] right_border_buf_0_4_fu_122;
reg   [7:0] right_border_buf_0_5_fu_126;
wire   [7:0] col_buf_0_val_1_0_fu_806_p3;
wire   [31:0] tmp_fu_266_p2;
wire   [31:0] tmp_9_fu_278_p2;
wire   [30:0] tmp_11_fu_312_p4;
wire   [31:0] tmp_236_i_i_fu_345_p2;
wire   [0:0] tmp_12_fu_351_p3;
wire   [0:0] tmp_238_i_i_fu_365_p2;
wire   [0:0] rev_fu_359_p2;
wire   [0:0] tmp_13_fu_376_p3;
wire   [31:0] p_assign_7_i_i_fu_384_p2;
wire   [31:0] p_p2_i425_i_i_i_i_fu_390_p3;
wire   [31:0] p_assign_6_1_i_i_fu_408_p2;
wire   [0:0] tmp_14_fu_414_p3;
wire   [0:0] tmp_238_1_i_i_fu_428_p2;
wire   [0:0] rev1_fu_422_p2;
wire   [0:0] tmp_15_fu_439_p3;
wire   [31:0] p_assign_7_1_i_i_fu_447_p2;
wire   [31:0] p_p2_i425_i_i_1_i_i_fu_453_p3;
wire   [31:0] p_assign_6_2_i_i_fu_471_p2;
wire   [0:0] tmp_16_fu_477_p3;
wire   [0:0] tmp_238_2_i_i_fu_491_p2;
wire   [0:0] rev2_fu_485_p2;
wire   [0:0] tmp_17_fu_502_p3;
wire   [31:0] p_assign_7_2_i_i_fu_510_p2;
wire   [31:0] p_p2_i425_i_i_2_i_i_fu_516_p3;
wire   [0:0] tmp_248_i_i_fu_398_p2;
wire   [31:0] p_assign_8_i_i_fu_403_p2;
wire   [0:0] or_cond_i424_i_i_i_i_fu_370_p2;
wire   [31:0] p_p2_i425_i_i_i_i_p_a_fu_534_p3;
wire   [31:0] y_1_i_i_fu_542_p3;
wire   [31:0] row_assign_7_i_i_fu_550_p2;
wire   [0:0] tmp_248_1_i_i_fu_461_p2;
wire   [31:0] p_assign_8_1_i_i_fu_466_p2;
wire   [0:0] or_cond_i424_i_i_1_i_fu_433_p2;
wire   [31:0] p_p2_i425_i_i_1_i_i_p_fu_559_p3;
wire   [31:0] y_1_1_i_i_fu_567_p3;
wire   [31:0] row_assign_7_1_i_i_fu_575_p2;
wire   [0:0] tmp_248_2_i_i_fu_524_p2;
wire   [31:0] p_assign_8_2_i_i_fu_529_p2;
wire   [0:0] or_cond_i424_i_i_2_i_fu_496_p2;
wire   [31:0] p_p2_i425_i_i_2_i_i_p_fu_584_p3;
wire   [31:0] y_1_2_i_i_fu_592_p3;
wire   [31:0] row_assign_7_2_i_i_fu_600_p2;
wire   [30:0] tmp_21_fu_620_p4;
wire   [31:0] ImagLoc_x_fu_636_p2;
wire   [0:0] tmp_22_fu_642_p3;
wire   [0:0] tmp_33_i_i_fu_656_p2;
wire   [0:0] rev3_fu_650_p2;
wire   [0:0] tmp_23_fu_667_p3;
wire   [31:0] p_assign_1_fu_675_p2;
wire   [31:0] p_p2_i_i_i_i_i_fu_681_p3;
wire   [31:0] p_assign_2_fu_694_p2;
wire   [0:0] tmp_33_i_i_not_fu_707_p2;
wire   [0:0] tmp_35_i_i_fu_689_p2;
wire   [0:0] sel_tmp7_fu_713_p2;
wire   [0:0] sel_tmp8_fu_719_p2;
wire   [31:0] p_assign_3_fu_699_p3;
wire   [31:0] x_fu_725_p3;
wire   [31:0] col_assign_fu_740_p2;
wire   [0:0] icmp1_fu_630_p2;
wire   [7:0] tmp_s_fu_777_p5;
wire   [7:0] tmp_1_fu_795_p5;
wire   [7:0] tmp_2_fu_813_p5;
wire   [7:0] tmp_3_fu_864_p5;
wire   [7:0] tmp_4_fu_882_p5;
wire   [7:0] tmp_5_fu_900_p5;
wire   [0:0] tmp_257_0_1_i_i_fu_936_p2;
wire   [7:0] temp_0_i_i_i_059_i_s_fu_942_p3;
wire   [0:0] tmp_257_0_2_i_i_fu_950_p2;
wire   [7:0] temp_0_i_i_i_059_i_1_fu_956_p3;
wire   [0:0] tmp_257_1_i_i_fu_964_p2;
wire   [7:0] temp_0_i_i_i_059_i_2_fu_970_p3;
wire   [0:0] tmp_257_1_1_i_i_fu_978_p2;
wire   [7:0] temp_0_i_i_i_059_i_3_fu_984_p3;
wire   [0:0] tmp_257_1_2_i_i_fu_992_p2;
wire   [7:0] temp_0_i_i_i_059_i_4_fu_998_p3;
wire   [0:0] tmp_257_2_i_i_fu_1006_p2;
wire   [7:0] temp_0_i_i_i_059_i_5_fu_1012_p3;
wire   [0:0] tmp_257_2_1_i_i_fu_1020_p2;
wire   [7:0] temp_0_i_i_i_059_i_6_fu_1026_p3;
wire   [0:0] tmp_257_2_2_i_i_fu_1034_p2;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_327;
reg    ap_condition_76;
reg    ap_condition_321;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
end

FAST_t_opr_k_buf_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 320 ),
    .AddressWidth( 9 ))
k_buf_0_val_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_4_address0),
    .ce0(k_buf_0_val_4_ce0),
    .q0(k_buf_0_val_4_q0),
    .address1(k_buf_0_val_4_addr_reg_1302),
    .ce1(k_buf_0_val_4_ce1),
    .we1(k_buf_0_val_4_we1),
    .d1(k_buf_0_val_4_d1)
);

FAST_t_opr_k_buf_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 320 ),
    .AddressWidth( 9 ))
k_buf_0_val_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_3_address0),
    .ce0(k_buf_0_val_3_ce0),
    .q0(k_buf_0_val_3_q0),
    .address1(k_buf_0_val_3_addr_reg_1289),
    .ce1(k_buf_0_val_3_ce1),
    .we1(k_buf_0_val_3_we1),
    .d1(mask_data_stream_0_V_dout)
);

FAST_t_opr_k_buf_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 320 ),
    .AddressWidth( 9 ))
k_buf_0_val_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_5_address0),
    .ce0(k_buf_0_val_5_ce0),
    .q0(k_buf_0_val_5_q0),
    .address1(k_buf_0_val_5_addr_reg_1308),
    .ce1(k_buf_0_val_5_ce1),
    .we1(k_buf_0_val_5_we1),
    .d1(k_buf_0_val_5_d1)
);

FAST1_Core_mux_32pcA #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
FAST1_Core_mux_32pcA_U77(
    .din0(right_border_buf_0_3_fu_118),
    .din1(right_border_buf_0_4_fu_122),
    .din2(8'd0),
    .din3(tmp_24_reg_1295),
    .dout(tmp_s_fu_777_p5)
);

FAST1_Core_mux_32pcA #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
FAST1_Core_mux_32pcA_U78(
    .din0(right_border_buf_0_5_fu_126),
    .din1(right_border_buf_0_2_fu_114),
    .din2(8'd0),
    .din3(tmp_24_reg_1295),
    .dout(tmp_1_fu_795_p5)
);

FAST1_Core_mux_32pcA #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
FAST1_Core_mux_32pcA_U79(
    .din0(right_border_buf_0_1_fu_110),
    .din1(right_border_buf_0_s_fu_106),
    .din2(8'd0),
    .din3(tmp_24_reg_1295),
    .dout(tmp_2_fu_813_p5)
);

FAST1_Core_mux_32pcA #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
FAST1_Core_mux_32pcA_U80(
    .din0(col_buf_0_val_0_0_fu_788_p3),
    .din1(col_buf_0_val_1_0_fu_806_p3),
    .din2(col_buf_0_val_2_0_fu_824_p3),
    .din3(tmp_18_reg_1254),
    .dout(tmp_3_fu_864_p5)
);

FAST1_Core_mux_32pcA #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
FAST1_Core_mux_32pcA_U81(
    .din0(col_buf_0_val_0_0_fu_788_p3),
    .din1(col_buf_0_val_1_0_fu_806_p3),
    .din2(col_buf_0_val_2_0_fu_824_p3),
    .din3(tmp_19_reg_1259),
    .dout(tmp_4_fu_882_p5)
);

FAST1_Core_mux_32pcA #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
FAST1_Core_mux_32pcA_U82(
    .din0(col_buf_0_val_0_0_fu_788_p3),
    .din1(col_buf_0_val_1_0_fu_806_p3),
    .din2(col_buf_0_val_2_0_fu_824_p3),
    .din3(tmp_20_reg_1264),
    .dout(tmp_5_fu_900_p5)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((exitcond389_i_i_i_i_fu_290_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((exitcond388_i_i_i_i_fu_609_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((exitcond389_i_i_i_i_fu_290_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((exitcond389_i_i_i_i_fu_290_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond388_i_i_i_i_fu_609_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        t_V_3_reg_249 <= j_V_fu_614_p2;
    end else if (((exitcond389_i_i_i_i_fu_290_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        t_V_3_reg_249 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        t_V_reg_238 <= i_V_reg_1220;
    end else if ((~((ap_start == 1'b0) | (cols_empty_n == 1'b0) | (p_neg393_i_i_loc_empty_n == 1'b0) | (rows_empty_n == 1'b0) | (tmp_loc_empty_n == 1'b0) | (tmp_27_loc_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        t_V_reg_238 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond388_i_i_i_i_fu_609_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        brmerge_i_i_reg_1282 <= brmerge_i_i_fu_745_p2;
        k_buf_0_val_3_addr_reg_1289 <= tmp_49_i_i_fu_733_p1;
        k_buf_0_val_4_addr_reg_1302 <= tmp_49_i_i_fu_733_p1;
        k_buf_0_val_5_addr_reg_1308 <= tmp_49_i_i_fu_733_p1;
        or_cond_i_i_i_i_i_reg_1278 <= or_cond_i_i_i_i_i_fu_661_p2;
        or_cond_i_i_i_i_reg_1314 <= or_cond_i_i_i_i_fu_754_p2;
        tmp_24_reg_1295 <= tmp_24_fu_750_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (cols_empty_n == 1'b0) | (p_neg393_i_i_loc_empty_n == 1'b0) | (rows_empty_n == 1'b0) | (tmp_loc_empty_n == 1'b0) | (tmp_27_loc_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cols_read_reg_1176 <= cols_dout;
        p_neg393_i_i_loc_read_reg_1192 <= p_neg393_i_i_loc_dout;
        rows_read_reg_1164 <= rows_dout;
        tmp_251_i_i_reg_1204[31 : 1] <= tmp_251_i_i_fu_272_p2[31 : 1];
        tmp_27_loc_read_reg_1182 <= tmp_27_loc_dout;
        tmp_37_i_i_reg_1211[31 : 1] <= tmp_37_i_i_fu_284_p2[31 : 1];
        tmp_38_i_i_reg_1199 <= tmp_38_i_i_fu_260_p2;
        tmp_loc_read_reg_1187 <= tmp_loc_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exitcond388_i_i_i_i_reg_1269 <= exitcond388_i_i_i_i_fu_609_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_V_reg_1220 <= i_V_fu_295_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond389_i_i_i_i_fu_290_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_reg_1234 <= icmp_fu_322_p2;
        tmp_162_not_i_i_reg_1229 <= tmp_162_not_i_i_fu_306_p2;
        tmp_18_reg_1254 <= tmp_18_fu_555_p1;
        tmp_19_reg_1259 <= tmp_19_fu_580_p1;
        tmp_20_reg_1264 <= tmp_20_fu_605_p1;
        tmp_213_1_i_i_reg_1243 <= tmp_213_1_i_i_fu_334_p2;
        tmp_213_i_i_reg_1239 <= tmp_213_i_i_fu_328_p2;
        tmp_233_i_i_reg_1247 <= tmp_233_i_i_fu_340_p2;
        tmp_28_i_i_reg_1225 <= tmp_28_i_i_fu_301_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_predicate_op167_read_state4 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        right_border_buf_0_1_fu_110 <= col_buf_0_val_2_0_fu_824_p3;
        right_border_buf_0_2_fu_114 <= right_border_buf_0_5_fu_126;
        right_border_buf_0_3_fu_118 <= col_buf_0_val_0_0_fu_788_p3;
        right_border_buf_0_4_fu_122 <= right_border_buf_0_3_fu_118;
        right_border_buf_0_5_fu_126 <= col_buf_0_val_1_0_fu_806_p3;
        right_border_buf_0_s_fu_106 <= right_border_buf_0_1_fu_110;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond388_i_i_i_i_reg_1269 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_1_fu_86 <= src_kernel_win_0_va_fu_82;
        src_kernel_win_0_va_2_fu_90 <= src_kernel_win_0_va_10_fu_893_p3;
        src_kernel_win_0_va_3_fu_94 <= src_kernel_win_0_va_2_fu_90;
        src_kernel_win_0_va_4_fu_98 <= src_kernel_win_0_va_11_fu_911_p3;
        src_kernel_win_0_va_5_fu_102 <= src_kernel_win_0_va_4_fu_98;
        src_kernel_win_0_va_fu_82 <= src_kernel_win_0_va_9_fu_875_p3;
    end
end

always @ (*) begin
    if (((exitcond389_i_i_i_i_fu_290_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond389_i_i_i_i_fu_290_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cols_blk_n = cols_empty_n;
    end else begin
        cols_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (cols_empty_n == 1'b0) | (p_neg393_i_i_loc_empty_n == 1'b0) | (rows_empty_n == 1'b0) | (tmp_loc_empty_n == 1'b0) | (tmp_27_loc_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cols_read = 1'b1;
    end else begin
        cols_read = 1'b0;
    end
end

always @ (*) begin
    if (((or_cond_i_i_i_i_reg_1314 == 1'd1) & (exitcond388_i_i_i_i_reg_1269 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dmask_data_stream_0_V_blk_n = dmask_data_stream_0_V_full_n;
    end else begin
        dmask_data_stream_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op204_write_state4 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dmask_data_stream_0_V_write = 1'b1;
    end else begin
        dmask_data_stream_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_3_ce0 = 1'b1;
    end else begin
        k_buf_0_val_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_213_i_i_reg_1239 == 1'd1) & (or_cond_i_i_i_i_i_reg_1278 == 1'd1) & (icmp_reg_1234 == 1'd0) & (exitcond388_i_i_i_i_reg_1269 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_predicate_op167_read_state4 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_3_ce1 = 1'b1;
    end else begin
        k_buf_0_val_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_213_i_i_reg_1239 == 1'd1) & (or_cond_i_i_i_i_i_reg_1278 == 1'd1) & (icmp_reg_1234 == 1'd0) & (exitcond388_i_i_i_i_reg_1269 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_predicate_op167_read_state4 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_3_we1 = 1'b1;
    end else begin
        k_buf_0_val_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_4_ce0 = 1'b1;
    end else begin
        k_buf_0_val_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_213_1_i_i_reg_1243 == 1'd1) & (or_cond_i_i_i_i_i_reg_1278 == 1'd1) & (icmp_reg_1234 == 1'd0) & (exitcond388_i_i_i_i_reg_1269 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_predicate_op167_read_state4 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_4_ce1 = 1'b1;
    end else begin
        k_buf_0_val_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_76)) begin
        if ((ap_predicate_op167_read_state4 == 1'b1)) begin
            k_buf_0_val_4_d1 = k_buf_0_val_3_q0;
        end else if ((1'b1 == ap_condition_327)) begin
            k_buf_0_val_4_d1 = mask_data_stream_0_V_dout;
        end else begin
            k_buf_0_val_4_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_4_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_213_1_i_i_reg_1243 == 1'd1) & (or_cond_i_i_i_i_i_reg_1278 == 1'd1) & (icmp_reg_1234 == 1'd0) & (exitcond388_i_i_i_i_reg_1269 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_predicate_op167_read_state4 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_4_we1 = 1'b1;
    end else begin
        k_buf_0_val_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_5_ce0 = 1'b1;
    end else begin
        k_buf_0_val_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_213_i_i_reg_1239 == 1'd1) & (or_cond_i_i_i_i_i_reg_1278 == 1'd1) & (icmp_reg_1234 == 1'd0) & (exitcond388_i_i_i_i_reg_1269 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_predicate_op167_read_state4 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_5_ce1 = 1'b1;
    end else begin
        k_buf_0_val_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_76)) begin
        if ((ap_predicate_op167_read_state4 == 1'b1)) begin
            k_buf_0_val_5_d1 = k_buf_0_val_4_q0;
        end else if ((1'b1 == ap_condition_321)) begin
            k_buf_0_val_5_d1 = mask_data_stream_0_V_dout;
        end else begin
            k_buf_0_val_5_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_5_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_213_i_i_reg_1239 == 1'd1) & (or_cond_i_i_i_i_i_reg_1278 == 1'd1) & (icmp_reg_1234 == 1'd0) & (exitcond388_i_i_i_i_reg_1269 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_predicate_op167_read_state4 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_5_we1 = 1'b1;
    end else begin
        k_buf_0_val_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((or_cond_i_i_i_i_i_reg_1278 == 1'd1) & (icmp_reg_1234 == 1'd0) & (exitcond388_i_i_i_i_reg_1269 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((tmp_28_i_i_reg_1225 == 1'd1) & (icmp_reg_1234 == 1'd1) & (or_cond_i_i_i_i_i_reg_1278 == 1'd1) & (exitcond388_i_i_i_i_reg_1269 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        mask_data_stream_0_V_blk_n = mask_data_stream_0_V_empty_n;
    end else begin
        mask_data_stream_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_predicate_op167_read_state4 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_predicate_op157_read_state4 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        mask_data_stream_0_V_read = 1'b1;
    end else begin
        mask_data_stream_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_neg393_i_i_loc_blk_n = p_neg393_i_i_loc_empty_n;
    end else begin
        p_neg393_i_i_loc_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (cols_empty_n == 1'b0) | (p_neg393_i_i_loc_empty_n == 1'b0) | (rows_empty_n == 1'b0) | (tmp_loc_empty_n == 1'b0) | (tmp_27_loc_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_neg393_i_i_loc_read = 1'b1;
    end else begin
        p_neg393_i_i_loc_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        rows_blk_n = rows_empty_n;
    end else begin
        rows_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (cols_empty_n == 1'b0) | (p_neg393_i_i_loc_empty_n == 1'b0) | (rows_empty_n == 1'b0) | (tmp_loc_empty_n == 1'b0) | (tmp_27_loc_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        rows_read = 1'b1;
    end else begin
        rows_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_27_loc_blk_n = tmp_27_loc_empty_n;
    end else begin
        tmp_27_loc_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (cols_empty_n == 1'b0) | (p_neg393_i_i_loc_empty_n == 1'b0) | (rows_empty_n == 1'b0) | (tmp_loc_empty_n == 1'b0) | (tmp_27_loc_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_27_loc_read = 1'b1;
    end else begin
        tmp_27_loc_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_loc_blk_n = tmp_loc_empty_n;
    end else begin
        tmp_loc_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (cols_empty_n == 1'b0) | (p_neg393_i_i_loc_empty_n == 1'b0) | (rows_empty_n == 1'b0) | (tmp_loc_empty_n == 1'b0) | (tmp_27_loc_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_loc_read = 1'b1;
    end else begin
        tmp_loc_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (cols_empty_n == 1'b0) | (p_neg393_i_i_loc_empty_n == 1'b0) | (rows_empty_n == 1'b0) | (tmp_loc_empty_n == 1'b0) | (tmp_27_loc_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond389_i_i_i_i_fu_290_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ImagLoc_x_fu_636_p2 = ($signed(32'd4294967295) + $signed(t_V_3_reg_249));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((dmask_data_stream_0_V_full_n == 1'b0) & (ap_predicate_op204_write_state4 == 1'b1)) | ((mask_data_stream_0_V_empty_n == 1'b0) & (ap_predicate_op167_read_state4 == 1'b1)) | ((mask_data_stream_0_V_empty_n == 1'b0) & (ap_predicate_op157_read_state4 == 1'b1))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((dmask_data_stream_0_V_full_n == 1'b0) & (ap_predicate_op204_write_state4 == 1'b1)) | ((mask_data_stream_0_V_empty_n == 1'b0) & (ap_predicate_op167_read_state4 == 1'b1)) | ((mask_data_stream_0_V_empty_n == 1'b0) & (ap_predicate_op157_read_state4 == 1'b1))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((dmask_data_stream_0_V_full_n == 1'b0) & (ap_predicate_op204_write_state4 == 1'b1)) | ((mask_data_stream_0_V_empty_n == 1'b0) & (ap_predicate_op167_read_state4 == 1'b1)) | ((mask_data_stream_0_V_empty_n == 1'b0) & (ap_predicate_op157_read_state4 == 1'b1))));
end

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (cols_empty_n == 1'b0) | (p_neg393_i_i_loc_empty_n == 1'b0) | (rows_empty_n == 1'b0) | (tmp_loc_empty_n == 1'b0) | (tmp_27_loc_empty_n == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter1 = (((dmask_data_stream_0_V_full_n == 1'b0) & (ap_predicate_op204_write_state4 == 1'b1)) | ((mask_data_stream_0_V_empty_n == 1'b0) & (ap_predicate_op167_read_state4 == 1'b1)) | ((mask_data_stream_0_V_empty_n == 1'b0) & (ap_predicate_op157_read_state4 == 1'b1)));
end

always @ (*) begin
    ap_condition_321 = ((tmp_213_i_i_reg_1239 == 1'd1) & (or_cond_i_i_i_i_i_reg_1278 == 1'd1) & (icmp_reg_1234 == 1'd0) & (exitcond388_i_i_i_i_reg_1269 == 1'd0));
end

always @ (*) begin
    ap_condition_327 = ((tmp_213_1_i_i_reg_1243 == 1'd1) & (or_cond_i_i_i_i_i_reg_1278 == 1'd1) & (icmp_reg_1234 == 1'd0) & (exitcond388_i_i_i_i_reg_1269 == 1'd0));
end

always @ (*) begin
    ap_condition_76 = ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_predicate_op157_read_state4 = ((or_cond_i_i_i_i_i_reg_1278 == 1'd1) & (icmp_reg_1234 == 1'd0) & (exitcond388_i_i_i_i_reg_1269 == 1'd0));
end

always @ (*) begin
    ap_predicate_op167_read_state4 = ((tmp_28_i_i_reg_1225 == 1'd1) & (icmp_reg_1234 == 1'd1) & (or_cond_i_i_i_i_i_reg_1278 == 1'd1) & (exitcond388_i_i_i_i_reg_1269 == 1'd0));
end

always @ (*) begin
    ap_predicate_op204_write_state4 = ((or_cond_i_i_i_i_reg_1314 == 1'd1) & (exitcond388_i_i_i_i_reg_1269 == 1'd0));
end

assign brmerge_i_i_fu_745_p2 = (tmp_33_i_i_fu_656_p2 | tmp_162_not_i_i_reg_1229);

assign col_assign_fu_740_p2 = (tmp_38_i_i_reg_1199 - x_fu_725_p3);

assign col_buf_0_val_0_0_fu_788_p3 = ((brmerge_i_i_reg_1282[0:0] === 1'b1) ? k_buf_0_val_3_q0 : tmp_s_fu_777_p5);

assign col_buf_0_val_1_0_fu_806_p3 = ((brmerge_i_i_reg_1282[0:0] === 1'b1) ? k_buf_0_val_4_q0 : tmp_1_fu_795_p5);

assign col_buf_0_val_2_0_fu_824_p3 = ((brmerge_i_i_reg_1282[0:0] === 1'b1) ? k_buf_0_val_5_q0 : tmp_2_fu_813_p5);

assign dmask_data_stream_0_V_din = ((tmp_257_2_2_i_i_fu_1034_p2[0:0] === 1'b1) ? src_kernel_win_0_va_9_fu_875_p3 : temp_0_i_i_i_059_i_6_fu_1026_p3);

assign exitcond388_i_i_i_i_fu_609_p2 = ((t_V_3_reg_249 == tmp_loc_read_reg_1187) ? 1'b1 : 1'b0);

assign exitcond389_i_i_i_i_fu_290_p2 = ((t_V_reg_238 == tmp_27_loc_read_reg_1182) ? 1'b1 : 1'b0);

assign i_V_fu_295_p2 = (t_V_reg_238 + 32'd1);

assign icmp1_fu_630_p2 = ((tmp_21_fu_620_p4 != 31'd0) ? 1'b1 : 1'b0);

assign icmp_fu_322_p2 = ((tmp_11_fu_312_p4 != 31'd0) ? 1'b1 : 1'b0);

assign j_V_fu_614_p2 = (t_V_3_reg_249 + 32'd1);

assign k_buf_0_val_3_address0 = tmp_49_i_i_fu_733_p1;

assign k_buf_0_val_4_address0 = tmp_49_i_i_fu_733_p1;

assign k_buf_0_val_5_address0 = tmp_49_i_i_fu_733_p1;

assign or_cond_i424_i_i_1_i_fu_433_p2 = (tmp_238_1_i_i_fu_428_p2 & rev1_fu_422_p2);

assign or_cond_i424_i_i_2_i_fu_496_p2 = (tmp_238_2_i_i_fu_491_p2 & rev2_fu_485_p2);

assign or_cond_i424_i_i_i_i_fu_370_p2 = (tmp_238_i_i_fu_365_p2 & rev_fu_359_p2);

assign or_cond_i_i_i_i_fu_754_p2 = (icmp_reg_1234 & icmp1_fu_630_p2);

assign or_cond_i_i_i_i_i_fu_661_p2 = (tmp_33_i_i_fu_656_p2 & rev3_fu_650_p2);

assign p_assign_1_fu_675_p2 = (32'd1 - t_V_3_reg_249);

assign p_assign_2_fu_694_p2 = (tmp_37_i_i_reg_1211 - p_p2_i_i_i_i_i_fu_681_p3);

assign p_assign_3_fu_699_p3 = ((or_cond_i_i_i_i_i_fu_661_p2[0:0] === 1'b1) ? ImagLoc_x_fu_636_p2 : p_assign_2_fu_694_p2);

assign p_assign_6_1_i_i_fu_408_p2 = ($signed(32'd4294967294) + $signed(t_V_reg_238));

assign p_assign_6_2_i_i_fu_471_p2 = ($signed(32'd4294967293) + $signed(t_V_reg_238));

assign p_assign_7_1_i_i_fu_447_p2 = (32'd2 - t_V_reg_238);

assign p_assign_7_2_i_i_fu_510_p2 = (32'd3 - t_V_reg_238);

assign p_assign_7_i_i_fu_384_p2 = (32'd1 - t_V_reg_238);

assign p_assign_8_1_i_i_fu_466_p2 = (tmp_251_i_i_reg_1204 - p_p2_i425_i_i_1_i_i_fu_453_p3);

assign p_assign_8_2_i_i_fu_529_p2 = (tmp_251_i_i_reg_1204 - p_p2_i425_i_i_2_i_i_fu_516_p3);

assign p_assign_8_i_i_fu_403_p2 = (tmp_251_i_i_reg_1204 - p_p2_i425_i_i_i_i_fu_390_p3);

assign p_p2_i425_i_i_1_i_i_fu_453_p3 = ((tmp_15_fu_439_p3[0:0] === 1'b1) ? p_assign_7_1_i_i_fu_447_p2 : p_assign_6_1_i_i_fu_408_p2);

assign p_p2_i425_i_i_1_i_i_p_fu_559_p3 = ((tmp_248_1_i_i_fu_461_p2[0:0] === 1'b1) ? p_p2_i425_i_i_1_i_i_fu_453_p3 : p_assign_8_1_i_i_fu_466_p2);

assign p_p2_i425_i_i_2_i_i_fu_516_p3 = ((tmp_17_fu_502_p3[0:0] === 1'b1) ? p_assign_7_2_i_i_fu_510_p2 : p_assign_6_2_i_i_fu_471_p2);

assign p_p2_i425_i_i_2_i_i_p_fu_584_p3 = ((tmp_248_2_i_i_fu_524_p2[0:0] === 1'b1) ? p_p2_i425_i_i_2_i_i_fu_516_p3 : p_assign_8_2_i_i_fu_529_p2);

assign p_p2_i425_i_i_i_i_fu_390_p3 = ((tmp_13_fu_376_p3[0:0] === 1'b1) ? p_assign_7_i_i_fu_384_p2 : tmp_236_i_i_fu_345_p2);

assign p_p2_i425_i_i_i_i_p_a_fu_534_p3 = ((tmp_248_i_i_fu_398_p2[0:0] === 1'b1) ? p_p2_i425_i_i_i_i_fu_390_p3 : p_assign_8_i_i_fu_403_p2);

assign p_p2_i_i_i_i_i_fu_681_p3 = ((tmp_23_fu_667_p3[0:0] === 1'b1) ? p_assign_1_fu_675_p2 : ImagLoc_x_fu_636_p2);

assign rev1_fu_422_p2 = (tmp_14_fu_414_p3 ^ 1'd1);

assign rev2_fu_485_p2 = (tmp_16_fu_477_p3 ^ 1'd1);

assign rev3_fu_650_p2 = (tmp_22_fu_642_p3 ^ 1'd1);

assign rev_fu_359_p2 = (tmp_12_fu_351_p3 ^ 1'd1);

assign row_assign_7_1_i_i_fu_575_p2 = (p_neg393_i_i_loc_read_reg_1192 - y_1_1_i_i_fu_567_p3);

assign row_assign_7_2_i_i_fu_600_p2 = (p_neg393_i_i_loc_read_reg_1192 - y_1_2_i_i_fu_592_p3);

assign row_assign_7_i_i_fu_550_p2 = (p_neg393_i_i_loc_read_reg_1192 - y_1_i_i_fu_542_p3);

assign sel_tmp7_fu_713_p2 = (tmp_33_i_i_not_fu_707_p2 | tmp_22_fu_642_p3);

assign sel_tmp8_fu_719_p2 = (tmp_35_i_i_fu_689_p2 & sel_tmp7_fu_713_p2);

assign src_kernel_win_0_va_10_fu_893_p3 = ((tmp_233_i_i_reg_1247[0:0] === 1'b1) ? tmp_4_fu_882_p5 : col_buf_0_val_1_0_fu_806_p3);

assign src_kernel_win_0_va_11_fu_911_p3 = ((tmp_233_i_i_reg_1247[0:0] === 1'b1) ? tmp_5_fu_900_p5 : col_buf_0_val_2_0_fu_824_p3);

assign src_kernel_win_0_va_9_fu_875_p3 = ((tmp_233_i_i_reg_1247[0:0] === 1'b1) ? tmp_3_fu_864_p5 : col_buf_0_val_0_0_fu_788_p3);

assign temp_0_i_i_i_059_i_1_fu_956_p3 = ((tmp_257_0_2_i_i_fu_950_p2[0:0] === 1'b1) ? src_kernel_win_0_va_11_fu_911_p3 : temp_0_i_i_i_059_i_s_fu_942_p3);

assign temp_0_i_i_i_059_i_2_fu_970_p3 = ((tmp_257_1_i_i_fu_964_p2[0:0] === 1'b1) ? src_kernel_win_0_va_3_fu_94 : temp_0_i_i_i_059_i_1_fu_956_p3);

assign temp_0_i_i_i_059_i_3_fu_984_p3 = ((tmp_257_1_1_i_i_fu_978_p2[0:0] === 1'b1) ? src_kernel_win_0_va_2_fu_90 : temp_0_i_i_i_059_i_2_fu_970_p3);

assign temp_0_i_i_i_059_i_4_fu_998_p3 = ((tmp_257_1_2_i_i_fu_992_p2[0:0] === 1'b1) ? src_kernel_win_0_va_10_fu_893_p3 : temp_0_i_i_i_059_i_3_fu_984_p3);

assign temp_0_i_i_i_059_i_5_fu_1012_p3 = ((tmp_257_2_i_i_fu_1006_p2[0:0] === 1'b1) ? src_kernel_win_0_va_1_fu_86 : temp_0_i_i_i_059_i_4_fu_998_p3);

assign temp_0_i_i_i_059_i_6_fu_1026_p3 = ((tmp_257_2_1_i_i_fu_1020_p2[0:0] === 1'b1) ? src_kernel_win_0_va_fu_82 : temp_0_i_i_i_059_i_5_fu_1012_p3);

assign temp_0_i_i_i_059_i_s_fu_942_p3 = ((tmp_257_0_1_i_i_fu_936_p2[0:0] === 1'b1) ? src_kernel_win_0_va_4_fu_98 : src_kernel_win_0_va_5_fu_102);

assign tmp_11_fu_312_p4 = {{t_V_reg_238[31:1]}};

assign tmp_12_fu_351_p3 = tmp_236_i_i_fu_345_p2[32'd31];

assign tmp_13_fu_376_p3 = tmp_236_i_i_fu_345_p2[32'd31];

assign tmp_14_fu_414_p3 = p_assign_6_1_i_i_fu_408_p2[32'd31];

assign tmp_15_fu_439_p3 = p_assign_6_1_i_i_fu_408_p2[32'd31];

assign tmp_162_not_i_i_fu_306_p2 = (tmp_28_i_i_fu_301_p2 ^ 1'd1);

assign tmp_16_fu_477_p3 = p_assign_6_2_i_i_fu_471_p2[32'd31];

assign tmp_17_fu_502_p3 = p_assign_6_2_i_i_fu_471_p2[32'd31];

assign tmp_18_fu_555_p1 = row_assign_7_i_i_fu_550_p2[1:0];

assign tmp_19_fu_580_p1 = row_assign_7_1_i_i_fu_575_p2[1:0];

assign tmp_20_fu_605_p1 = row_assign_7_2_i_i_fu_600_p2[1:0];

assign tmp_213_1_i_i_fu_334_p2 = ((t_V_reg_238 == 32'd0) ? 1'b1 : 1'b0);

assign tmp_213_i_i_fu_328_p2 = ((t_V_reg_238 == 32'd1) ? 1'b1 : 1'b0);

assign tmp_21_fu_620_p4 = {{t_V_3_reg_249[31:1]}};

assign tmp_22_fu_642_p3 = ImagLoc_x_fu_636_p2[32'd31];

assign tmp_233_i_i_fu_340_p2 = ((t_V_reg_238 > rows_read_reg_1164) ? 1'b1 : 1'b0);

assign tmp_236_i_i_fu_345_p2 = ($signed(32'd4294967295) + $signed(t_V_reg_238));

assign tmp_238_1_i_i_fu_428_p2 = (($signed(p_assign_6_1_i_i_fu_408_p2) < $signed(rows_read_reg_1164)) ? 1'b1 : 1'b0);

assign tmp_238_2_i_i_fu_491_p2 = (($signed(p_assign_6_2_i_i_fu_471_p2) < $signed(rows_read_reg_1164)) ? 1'b1 : 1'b0);

assign tmp_238_i_i_fu_365_p2 = (($signed(tmp_236_i_i_fu_345_p2) < $signed(rows_read_reg_1164)) ? 1'b1 : 1'b0);

assign tmp_23_fu_667_p3 = ImagLoc_x_fu_636_p2[32'd31];

assign tmp_248_1_i_i_fu_461_p2 = (($signed(p_p2_i425_i_i_1_i_i_fu_453_p3) < $signed(rows_read_reg_1164)) ? 1'b1 : 1'b0);

assign tmp_248_2_i_i_fu_524_p2 = (($signed(p_p2_i425_i_i_2_i_i_fu_516_p3) < $signed(rows_read_reg_1164)) ? 1'b1 : 1'b0);

assign tmp_248_i_i_fu_398_p2 = (($signed(p_p2_i425_i_i_i_i_fu_390_p3) < $signed(rows_read_reg_1164)) ? 1'b1 : 1'b0);

assign tmp_24_fu_750_p1 = col_assign_fu_740_p2[1:0];

assign tmp_251_i_i_fu_272_p2 = (32'd2 + tmp_fu_266_p2);

assign tmp_257_0_1_i_i_fu_936_p2 = ((src_kernel_win_0_va_4_fu_98 > src_kernel_win_0_va_5_fu_102) ? 1'b1 : 1'b0);

assign tmp_257_0_2_i_i_fu_950_p2 = ((src_kernel_win_0_va_11_fu_911_p3 > temp_0_i_i_i_059_i_s_fu_942_p3) ? 1'b1 : 1'b0);

assign tmp_257_1_1_i_i_fu_978_p2 = ((src_kernel_win_0_va_2_fu_90 > temp_0_i_i_i_059_i_2_fu_970_p3) ? 1'b1 : 1'b0);

assign tmp_257_1_2_i_i_fu_992_p2 = ((src_kernel_win_0_va_10_fu_893_p3 > temp_0_i_i_i_059_i_3_fu_984_p3) ? 1'b1 : 1'b0);

assign tmp_257_1_i_i_fu_964_p2 = ((src_kernel_win_0_va_3_fu_94 > temp_0_i_i_i_059_i_1_fu_956_p3) ? 1'b1 : 1'b0);

assign tmp_257_2_1_i_i_fu_1020_p2 = ((src_kernel_win_0_va_fu_82 > temp_0_i_i_i_059_i_5_fu_1012_p3) ? 1'b1 : 1'b0);

assign tmp_257_2_2_i_i_fu_1034_p2 = ((src_kernel_win_0_va_9_fu_875_p3 > temp_0_i_i_i_059_i_6_fu_1026_p3) ? 1'b1 : 1'b0);

assign tmp_257_2_i_i_fu_1006_p2 = ((src_kernel_win_0_va_1_fu_86 > temp_0_i_i_i_059_i_4_fu_998_p3) ? 1'b1 : 1'b0);

assign tmp_28_i_i_fu_301_p2 = ((t_V_reg_238 < rows_read_reg_1164) ? 1'b1 : 1'b0);

assign tmp_33_i_i_fu_656_p2 = (($signed(ImagLoc_x_fu_636_p2) < $signed(cols_read_reg_1176)) ? 1'b1 : 1'b0);

assign tmp_33_i_i_not_fu_707_p2 = (tmp_33_i_i_fu_656_p2 ^ 1'd1);

assign tmp_35_i_i_fu_689_p2 = (($signed(p_p2_i_i_i_i_i_fu_681_p3) < $signed(cols_read_reg_1176)) ? 1'b1 : 1'b0);

assign tmp_37_i_i_fu_284_p2 = ($signed(32'd4294967294) + $signed(tmp_9_fu_278_p2));

assign tmp_38_i_i_fu_260_p2 = (32'd3 + cols_dout);

assign tmp_49_i_i_fu_733_p1 = x_fu_725_p3;

assign tmp_9_fu_278_p2 = cols_dout << 32'd1;

assign tmp_fu_266_p2 = rows_dout << 32'd1;

assign x_fu_725_p3 = ((sel_tmp8_fu_719_p2[0:0] === 1'b1) ? p_p2_i_i_i_i_i_fu_681_p3 : p_assign_3_fu_699_p3);

assign y_1_1_i_i_fu_567_p3 = ((or_cond_i424_i_i_1_i_fu_433_p2[0:0] === 1'b1) ? p_assign_6_1_i_i_fu_408_p2 : p_p2_i425_i_i_1_i_i_p_fu_559_p3);

assign y_1_2_i_i_fu_592_p3 = ((or_cond_i424_i_i_2_i_fu_496_p2[0:0] === 1'b1) ? p_assign_6_2_i_i_fu_471_p2 : p_p2_i425_i_i_2_i_i_p_fu_584_p3);

assign y_1_i_i_fu_542_p3 = ((or_cond_i424_i_i_i_i_fu_370_p2[0:0] === 1'b1) ? tmp_236_i_i_fu_345_p2 : p_p2_i425_i_i_i_i_p_a_fu_534_p3);

always @ (posedge ap_clk) begin
    tmp_251_i_i_reg_1204[0] <= 1'b0;
    tmp_37_i_i_reg_1211[0] <= 1'b0;
end

endmodule //Loop_loop_height_pro
