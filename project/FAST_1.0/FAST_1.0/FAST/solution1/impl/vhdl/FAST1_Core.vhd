-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity FAST1_Core is
generic (
    C_S_AXI_CTRL_ADDR_WIDTH : INTEGER := 6;
    C_S_AXI_CTRL_DATA_WIDTH : INTEGER := 32 );
port (
    s_axi_ctrl_AWVALID : IN STD_LOGIC;
    s_axi_ctrl_AWREADY : OUT STD_LOGIC;
    s_axi_ctrl_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_ADDR_WIDTH-1 downto 0);
    s_axi_ctrl_WVALID : IN STD_LOGIC;
    s_axi_ctrl_WREADY : OUT STD_LOGIC;
    s_axi_ctrl_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH-1 downto 0);
    s_axi_ctrl_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH/8-1 downto 0);
    s_axi_ctrl_ARVALID : IN STD_LOGIC;
    s_axi_ctrl_ARREADY : OUT STD_LOGIC;
    s_axi_ctrl_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_ADDR_WIDTH-1 downto 0);
    s_axi_ctrl_RVALID : OUT STD_LOGIC;
    s_axi_ctrl_RREADY : IN STD_LOGIC;
    s_axi_ctrl_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH-1 downto 0);
    s_axi_ctrl_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_ctrl_BVALID : OUT STD_LOGIC;
    s_axi_ctrl_BREADY : IN STD_LOGIC;
    s_axi_ctrl_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    interrupt : OUT STD_LOGIC;
    src_axis_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    src_axis_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
    src_axis_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
    src_axis_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    src_axis_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    src_axis_TID : IN STD_LOGIC_VECTOR (0 downto 0);
    src_axis_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
    dst_axis_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    dst_axis_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
    dst_axis_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    dst_axis_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    dst_axis_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    dst_axis_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
    dst_axis_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0);
    src_axis_TVALID : IN STD_LOGIC;
    src_axis_TREADY : OUT STD_LOGIC;
    dst_axis_TVALID : OUT STD_LOGIC;
    dst_axis_TREADY : IN STD_LOGIC );
end;


architecture behav of FAST1_Core is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "FAST1_Core,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7vx690tffg1761-3,HLS_INPUT_CLOCK=20.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=17.490000,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=59,HLS_SYN_DSP=3,HLS_SYN_FF=8129,HLS_SYN_LUT=17472,HLS_VERSION=2018_2}";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_S_AXI_WSTRB_WIDTH : INTEGER range 63 downto 0 := 4;
    constant C_S_AXI_ADDR_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_ready : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal rows : STD_LOGIC_VECTOR (31 downto 0);
    signal cols : STD_LOGIC_VECTOR (31 downto 0);
    signal threhold : STD_LOGIC_VECTOR (7 downto 0);
    signal FAST1_Core_entry69_U0_ap_start : STD_LOGIC;
    signal FAST1_Core_entry69_U0_start_full_n : STD_LOGIC;
    signal FAST1_Core_entry69_U0_ap_done : STD_LOGIC;
    signal FAST1_Core_entry69_U0_ap_continue : STD_LOGIC;
    signal FAST1_Core_entry69_U0_ap_idle : STD_LOGIC;
    signal FAST1_Core_entry69_U0_ap_ready : STD_LOGIC;
    signal FAST1_Core_entry69_U0_start_out : STD_LOGIC;
    signal FAST1_Core_entry69_U0_start_write : STD_LOGIC;
    signal FAST1_Core_entry69_U0_rows_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal FAST1_Core_entry69_U0_rows_out_write : STD_LOGIC;
    signal FAST1_Core_entry69_U0_rows_out1_din : STD_LOGIC_VECTOR (31 downto 0);
    signal FAST1_Core_entry69_U0_rows_out1_write : STD_LOGIC;
    signal FAST1_Core_entry69_U0_cols_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal FAST1_Core_entry69_U0_cols_out_write : STD_LOGIC;
    signal FAST1_Core_entry69_U0_cols_out2_din : STD_LOGIC_VECTOR (31 downto 0);
    signal FAST1_Core_entry69_U0_cols_out2_write : STD_LOGIC;
    signal FAST1_Core_entry69_U0_threhold_out_din : STD_LOGIC_VECTOR (7 downto 0);
    signal FAST1_Core_entry69_U0_threhold_out_write : STD_LOGIC;
    signal Block_Mat_exit12454_U0_ap_start : STD_LOGIC;
    signal Block_Mat_exit12454_U0_start_full_n : STD_LOGIC;
    signal Block_Mat_exit12454_U0_ap_done : STD_LOGIC;
    signal Block_Mat_exit12454_U0_ap_continue : STD_LOGIC;
    signal Block_Mat_exit12454_U0_ap_idle : STD_LOGIC;
    signal Block_Mat_exit12454_U0_ap_ready : STD_LOGIC;
    signal Block_Mat_exit12454_U0_start_out : STD_LOGIC;
    signal Block_Mat_exit12454_U0_start_write : STD_LOGIC;
    signal Block_Mat_exit12454_U0_rows_read : STD_LOGIC;
    signal Block_Mat_exit12454_U0_cols_read : STD_LOGIC;
    signal Block_Mat_exit12454_U0_rows_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Mat_exit12454_U0_rows_out_write : STD_LOGIC;
    signal Block_Mat_exit12454_U0_p_src_rows_V_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Mat_exit12454_U0_p_src_rows_V_out_write : STD_LOGIC;
    signal Block_Mat_exit12454_U0_cols_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Mat_exit12454_U0_cols_out_write : STD_LOGIC;
    signal Block_Mat_exit12454_U0_p_src_cols_V_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Mat_exit12454_U0_p_src_cols_V_out_write : STD_LOGIC;
    signal Block_Mat_exit12454_U0_p_dst_rows_V_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Mat_exit12454_U0_p_dst_rows_V_out_write : STD_LOGIC;
    signal Block_Mat_exit12454_U0_p_dst_cols_V_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Mat_exit12454_U0_p_dst_cols_V_out_write : STD_LOGIC;
    signal Block_Mat_exit12454_U0_src0_rows_V_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Mat_exit12454_U0_src0_rows_V_out_write : STD_LOGIC;
    signal Block_Mat_exit12454_U0_src0_cols_V_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Mat_exit12454_U0_src0_cols_V_out_write : STD_LOGIC;
    signal Block_Mat_exit12454_U0_src1_rows_V_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Mat_exit12454_U0_src1_rows_V_out_write : STD_LOGIC;
    signal Block_Mat_exit12454_U0_src1_cols_V_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Mat_exit12454_U0_src1_cols_V_out_write : STD_LOGIC;
    signal Block_Mat_exit12454_U0_gray_rows_V_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Mat_exit12454_U0_gray_rows_V_out_write : STD_LOGIC;
    signal Block_Mat_exit12454_U0_gray_cols_V_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Mat_exit12454_U0_gray_cols_V_out_write : STD_LOGIC;
    signal AXIvideo2Mat_U0_ap_start : STD_LOGIC;
    signal AXIvideo2Mat_U0_ap_done : STD_LOGIC;
    signal AXIvideo2Mat_U0_ap_continue : STD_LOGIC;
    signal AXIvideo2Mat_U0_ap_idle : STD_LOGIC;
    signal AXIvideo2Mat_U0_ap_ready : STD_LOGIC;
    signal AXIvideo2Mat_U0_start_out : STD_LOGIC;
    signal AXIvideo2Mat_U0_start_write : STD_LOGIC;
    signal AXIvideo2Mat_U0_src_axis_TREADY : STD_LOGIC;
    signal AXIvideo2Mat_U0_img_rows_V_read : STD_LOGIC;
    signal AXIvideo2Mat_U0_img_cols_V_read : STD_LOGIC;
    signal AXIvideo2Mat_U0_img_data_stream_0_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal AXIvideo2Mat_U0_img_data_stream_0_V_write : STD_LOGIC;
    signal AXIvideo2Mat_U0_img_data_stream_1_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal AXIvideo2Mat_U0_img_data_stream_1_V_write : STD_LOGIC;
    signal AXIvideo2Mat_U0_img_data_stream_2_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal AXIvideo2Mat_U0_img_data_stream_2_V_write : STD_LOGIC;
    signal AXIvideo2Mat_U0_img_rows_V_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal AXIvideo2Mat_U0_img_rows_V_out_write : STD_LOGIC;
    signal AXIvideo2Mat_U0_img_cols_V_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal AXIvideo2Mat_U0_img_cols_V_out_write : STD_LOGIC;
    signal Duplicate_U0_ap_start : STD_LOGIC;
    signal Duplicate_U0_ap_done : STD_LOGIC;
    signal Duplicate_U0_ap_continue : STD_LOGIC;
    signal Duplicate_U0_ap_idle : STD_LOGIC;
    signal Duplicate_U0_ap_ready : STD_LOGIC;
    signal Duplicate_U0_src_rows_V_read : STD_LOGIC;
    signal Duplicate_U0_src_cols_V_read : STD_LOGIC;
    signal Duplicate_U0_src_data_stream_0_V_read : STD_LOGIC;
    signal Duplicate_U0_src_data_stream_1_V_read : STD_LOGIC;
    signal Duplicate_U0_src_data_stream_2_V_read : STD_LOGIC;
    signal Duplicate_U0_dst1_data_stream_0_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal Duplicate_U0_dst1_data_stream_0_V_write : STD_LOGIC;
    signal Duplicate_U0_dst1_data_stream_1_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal Duplicate_U0_dst1_data_stream_1_V_write : STD_LOGIC;
    signal Duplicate_U0_dst1_data_stream_2_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal Duplicate_U0_dst1_data_stream_2_V_write : STD_LOGIC;
    signal Duplicate_U0_dst2_data_stream_0_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal Duplicate_U0_dst2_data_stream_0_V_write : STD_LOGIC;
    signal Duplicate_U0_dst2_data_stream_1_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal Duplicate_U0_dst2_data_stream_1_V_write : STD_LOGIC;
    signal Duplicate_U0_dst2_data_stream_2_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal Duplicate_U0_dst2_data_stream_2_V_write : STD_LOGIC;
    signal CvtColor_U0_ap_start : STD_LOGIC;
    signal CvtColor_U0_ap_done : STD_LOGIC;
    signal CvtColor_U0_ap_continue : STD_LOGIC;
    signal CvtColor_U0_ap_idle : STD_LOGIC;
    signal CvtColor_U0_ap_ready : STD_LOGIC;
    signal CvtColor_U0_p_src_rows_V_read : STD_LOGIC;
    signal CvtColor_U0_p_src_cols_V_read : STD_LOGIC;
    signal CvtColor_U0_p_src_data_stream_0_V_read : STD_LOGIC;
    signal CvtColor_U0_p_src_data_stream_1_V_read : STD_LOGIC;
    signal CvtColor_U0_p_src_data_stream_2_V_read : STD_LOGIC;
    signal CvtColor_U0_p_dst_data_stream_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal CvtColor_U0_p_dst_data_stream_V_write : STD_LOGIC;
    signal FAST_t_opr_U0_ap_start : STD_LOGIC;
    signal FAST_t_opr_U0_ap_done : STD_LOGIC;
    signal FAST_t_opr_U0_ap_continue : STD_LOGIC;
    signal FAST_t_opr_U0_ap_idle : STD_LOGIC;
    signal FAST_t_opr_U0_ap_ready : STD_LOGIC;
    signal FAST_t_opr_U0_p_src_rows_V_read : STD_LOGIC;
    signal FAST_t_opr_U0_p_src_cols_V_read : STD_LOGIC;
    signal FAST_t_opr_U0_p_src_data_stream_V_read : STD_LOGIC;
    signal FAST_t_opr_U0_p_mask_data_stream_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal FAST_t_opr_U0_p_mask_data_stream_V_write : STD_LOGIC;
    signal FAST_t_opr_U0_p_threshold_read : STD_LOGIC;
    signal Block_Mat_exit124544_U0_ap_start : STD_LOGIC;
    signal Block_Mat_exit124544_U0_ap_done : STD_LOGIC;
    signal Block_Mat_exit124544_U0_ap_continue : STD_LOGIC;
    signal Block_Mat_exit124544_U0_ap_idle : STD_LOGIC;
    signal Block_Mat_exit124544_U0_ap_ready : STD_LOGIC;
    signal Block_Mat_exit124544_U0_cols_read : STD_LOGIC;
    signal Block_Mat_exit124544_U0_rows_read : STD_LOGIC;
    signal Block_Mat_exit124544_U0_tmp_out_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Mat_exit124544_U0_tmp_out_out_write : STD_LOGIC;
    signal Block_Mat_exit124544_U0_tmp_27_out_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Mat_exit124544_U0_tmp_27_out_out_write : STD_LOGIC;
    signal Block_Mat_exit124544_U0_p_neg393_i_i_out_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Mat_exit124544_U0_p_neg393_i_i_out_out_write : STD_LOGIC;
    signal Loop_loop_height_pro_U0_ap_start : STD_LOGIC;
    signal Loop_loop_height_pro_U0_ap_done : STD_LOGIC;
    signal Loop_loop_height_pro_U0_ap_continue : STD_LOGIC;
    signal Loop_loop_height_pro_U0_ap_idle : STD_LOGIC;
    signal Loop_loop_height_pro_U0_ap_ready : STD_LOGIC;
    signal Loop_loop_height_pro_U0_tmp_27_loc_read : STD_LOGIC;
    signal Loop_loop_height_pro_U0_tmp_loc_read : STD_LOGIC;
    signal Loop_loop_height_pro_U0_rows_read : STD_LOGIC;
    signal Loop_loop_height_pro_U0_p_neg393_i_i_loc_read : STD_LOGIC;
    signal Loop_loop_height_pro_U0_cols_read : STD_LOGIC;
    signal Loop_loop_height_pro_U0_mask_data_stream_0_V_read : STD_LOGIC;
    signal Loop_loop_height_pro_U0_dmask_data_stream_0_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal Loop_loop_height_pro_U0_dmask_data_stream_0_V_write : STD_LOGIC;
    signal PaintMask_U0_ap_start : STD_LOGIC;
    signal PaintMask_U0_ap_done : STD_LOGIC;
    signal PaintMask_U0_ap_continue : STD_LOGIC;
    signal PaintMask_U0_ap_idle : STD_LOGIC;
    signal PaintMask_U0_ap_ready : STD_LOGIC;
    signal PaintMask_U0_p_src_rows_V_read : STD_LOGIC;
    signal PaintMask_U0_p_src_cols_V_read : STD_LOGIC;
    signal PaintMask_U0_p_src_data_stream_0_V_read : STD_LOGIC;
    signal PaintMask_U0_p_src_data_stream_1_V_read : STD_LOGIC;
    signal PaintMask_U0_p_src_data_stream_2_V_read : STD_LOGIC;
    signal PaintMask_U0_p_mask_data_stream_V_read : STD_LOGIC;
    signal PaintMask_U0_p_dst_data_stream_0_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal PaintMask_U0_p_dst_data_stream_0_V_write : STD_LOGIC;
    signal PaintMask_U0_p_dst_data_stream_1_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal PaintMask_U0_p_dst_data_stream_1_V_write : STD_LOGIC;
    signal PaintMask_U0_p_dst_data_stream_2_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal PaintMask_U0_p_dst_data_stream_2_V_write : STD_LOGIC;
    signal Mat2AXIvideo_U0_ap_start : STD_LOGIC;
    signal Mat2AXIvideo_U0_ap_done : STD_LOGIC;
    signal Mat2AXIvideo_U0_ap_continue : STD_LOGIC;
    signal Mat2AXIvideo_U0_ap_idle : STD_LOGIC;
    signal Mat2AXIvideo_U0_ap_ready : STD_LOGIC;
    signal Mat2AXIvideo_U0_img_rows_V_read : STD_LOGIC;
    signal Mat2AXIvideo_U0_img_cols_V_read : STD_LOGIC;
    signal Mat2AXIvideo_U0_img_data_stream_0_V_read : STD_LOGIC;
    signal Mat2AXIvideo_U0_img_data_stream_1_V_read : STD_LOGIC;
    signal Mat2AXIvideo_U0_img_data_stream_2_V_read : STD_LOGIC;
    signal Mat2AXIvideo_U0_dst_axis_TDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal Mat2AXIvideo_U0_dst_axis_TVALID : STD_LOGIC;
    signal Mat2AXIvideo_U0_dst_axis_TKEEP : STD_LOGIC_VECTOR (3 downto 0);
    signal Mat2AXIvideo_U0_dst_axis_TSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal Mat2AXIvideo_U0_dst_axis_TUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Mat2AXIvideo_U0_dst_axis_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal Mat2AXIvideo_U0_dst_axis_TID : STD_LOGIC_VECTOR (0 downto 0);
    signal Mat2AXIvideo_U0_dst_axis_TDEST : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sync_continue : STD_LOGIC;
    signal rows_c_full_n : STD_LOGIC;
    signal rows_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal rows_c_empty_n : STD_LOGIC;
    signal rows_c490_full_n : STD_LOGIC;
    signal rows_c490_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal rows_c490_empty_n : STD_LOGIC;
    signal cols_c_full_n : STD_LOGIC;
    signal cols_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal cols_c_empty_n : STD_LOGIC;
    signal cols_c491_full_n : STD_LOGIC;
    signal cols_c491_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal cols_c491_empty_n : STD_LOGIC;
    signal threhold_c_full_n : STD_LOGIC;
    signal threhold_c_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal threhold_c_empty_n : STD_LOGIC;
    signal rows_c492_full_n : STD_LOGIC;
    signal rows_c492_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal rows_c492_empty_n : STD_LOGIC;
    signal p_src_rows_V_c_full_n : STD_LOGIC;
    signal p_src_rows_V_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal p_src_rows_V_c_empty_n : STD_LOGIC;
    signal cols_c493_full_n : STD_LOGIC;
    signal cols_c493_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal cols_c493_empty_n : STD_LOGIC;
    signal p_src_cols_V_c_full_n : STD_LOGIC;
    signal p_src_cols_V_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal p_src_cols_V_c_empty_n : STD_LOGIC;
    signal p_dst_rows_V_c_full_n : STD_LOGIC;
    signal p_dst_rows_V_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal p_dst_rows_V_c_empty_n : STD_LOGIC;
    signal p_dst_cols_V_c_full_n : STD_LOGIC;
    signal p_dst_cols_V_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal p_dst_cols_V_c_empty_n : STD_LOGIC;
    signal src0_rows_V_c_full_n : STD_LOGIC;
    signal src0_rows_V_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal src0_rows_V_c_empty_n : STD_LOGIC;
    signal src0_cols_V_c_full_n : STD_LOGIC;
    signal src0_cols_V_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal src0_cols_V_c_empty_n : STD_LOGIC;
    signal src1_rows_V_c_full_n : STD_LOGIC;
    signal src1_rows_V_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal src1_rows_V_c_empty_n : STD_LOGIC;
    signal src1_cols_V_c_full_n : STD_LOGIC;
    signal src1_cols_V_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal src1_cols_V_c_empty_n : STD_LOGIC;
    signal gray_rows_V_c_full_n : STD_LOGIC;
    signal gray_rows_V_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal gray_rows_V_c_empty_n : STD_LOGIC;
    signal gray_cols_V_c_full_n : STD_LOGIC;
    signal gray_cols_V_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal gray_cols_V_c_empty_n : STD_LOGIC;
    signal p_src_data_stream_0_s_full_n : STD_LOGIC;
    signal p_src_data_stream_0_s_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal p_src_data_stream_0_s_empty_n : STD_LOGIC;
    signal p_src_data_stream_1_s_full_n : STD_LOGIC;
    signal p_src_data_stream_1_s_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal p_src_data_stream_1_s_empty_n : STD_LOGIC;
    signal p_src_data_stream_2_s_full_n : STD_LOGIC;
    signal p_src_data_stream_2_s_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal p_src_data_stream_2_s_empty_n : STD_LOGIC;
    signal p_src_rows_V_c494_full_n : STD_LOGIC;
    signal p_src_rows_V_c494_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal p_src_rows_V_c494_empty_n : STD_LOGIC;
    signal p_src_cols_V_c495_full_n : STD_LOGIC;
    signal p_src_cols_V_c495_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal p_src_cols_V_c495_empty_n : STD_LOGIC;
    signal src0_data_stream_0_s_full_n : STD_LOGIC;
    signal src0_data_stream_0_s_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal src0_data_stream_0_s_empty_n : STD_LOGIC;
    signal src0_data_stream_1_s_full_n : STD_LOGIC;
    signal src0_data_stream_1_s_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal src0_data_stream_1_s_empty_n : STD_LOGIC;
    signal src0_data_stream_2_s_full_n : STD_LOGIC;
    signal src0_data_stream_2_s_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal src0_data_stream_2_s_empty_n : STD_LOGIC;
    signal src1_data_stream_0_s_full_n : STD_LOGIC;
    signal src1_data_stream_0_s_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal src1_data_stream_0_s_empty_n : STD_LOGIC;
    signal src1_data_stream_1_s_full_n : STD_LOGIC;
    signal src1_data_stream_1_s_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal src1_data_stream_1_s_empty_n : STD_LOGIC;
    signal src1_data_stream_2_s_full_n : STD_LOGIC;
    signal src1_data_stream_2_s_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal src1_data_stream_2_s_empty_n : STD_LOGIC;
    signal gray_data_stream_0_s_full_n : STD_LOGIC;
    signal gray_data_stream_0_s_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal gray_data_stream_0_s_empty_n : STD_LOGIC;
    signal mask_data_stream_0_s_full_n : STD_LOGIC;
    signal mask_data_stream_0_s_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal mask_data_stream_0_s_empty_n : STD_LOGIC;
    signal tmp_loc_c_full_n : STD_LOGIC;
    signal tmp_loc_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_loc_c_empty_n : STD_LOGIC;
    signal tmp_27_loc_c_full_n : STD_LOGIC;
    signal tmp_27_loc_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_27_loc_c_empty_n : STD_LOGIC;
    signal p_neg393_i_i_loc_c_full_n : STD_LOGIC;
    signal p_neg393_i_i_loc_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal p_neg393_i_i_loc_c_empty_n : STD_LOGIC;
    signal dmask_data_stream_0_full_n : STD_LOGIC;
    signal dmask_data_stream_0_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal dmask_data_stream_0_empty_n : STD_LOGIC;
    signal p_dst_data_stream_0_s_full_n : STD_LOGIC;
    signal p_dst_data_stream_0_s_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal p_dst_data_stream_0_s_empty_n : STD_LOGIC;
    signal p_dst_data_stream_1_s_full_n : STD_LOGIC;
    signal p_dst_data_stream_1_s_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal p_dst_data_stream_1_s_empty_n : STD_LOGIC;
    signal p_dst_data_stream_2_s_full_n : STD_LOGIC;
    signal p_dst_data_stream_2_s_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal p_dst_data_stream_2_s_empty_n : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal ap_sync_reg_AXIvideo2Mat_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_AXIvideo2Mat_U0_ap_ready : STD_LOGIC;
    signal AXIvideo2Mat_U0_ap_ready_count : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal ap_sync_reg_FAST1_Core_entry69_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_FAST1_Core_entry69_U0_ap_ready : STD_LOGIC;
    signal FAST1_Core_entry69_U0_ap_ready_count : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal start_for_Block_Mat_exit12454_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Block_Mat_exit12454_U0_full_n : STD_LOGIC;
    signal start_for_Block_Mat_exit12454_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Block_Mat_exit12454_U0_empty_n : STD_LOGIC;
    signal start_for_FAST_t_opr_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_FAST_t_opr_U0_full_n : STD_LOGIC;
    signal start_for_FAST_t_opr_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_FAST_t_opr_U0_empty_n : STD_LOGIC;
    signal start_for_Block_Mat_exit124544_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Block_Mat_exit124544_U0_full_n : STD_LOGIC;
    signal start_for_Block_Mat_exit124544_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Block_Mat_exit124544_U0_empty_n : STD_LOGIC;
    signal start_for_CvtColor_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_CvtColor_U0_full_n : STD_LOGIC;
    signal start_for_CvtColor_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_CvtColor_U0_empty_n : STD_LOGIC;
    signal start_for_Loop_loop_height_pro_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Loop_loop_height_pro_U0_full_n : STD_LOGIC;
    signal start_for_Loop_loop_height_pro_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Loop_loop_height_pro_U0_empty_n : STD_LOGIC;
    signal start_for_PaintMask_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_PaintMask_U0_full_n : STD_LOGIC;
    signal start_for_PaintMask_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_PaintMask_U0_empty_n : STD_LOGIC;
    signal start_for_Mat2AXIvideo_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Mat2AXIvideo_U0_full_n : STD_LOGIC;
    signal start_for_Mat2AXIvideo_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Mat2AXIvideo_U0_empty_n : STD_LOGIC;
    signal start_for_Duplicate_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Duplicate_U0_full_n : STD_LOGIC;
    signal start_for_Duplicate_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Duplicate_U0_empty_n : STD_LOGIC;
    signal Duplicate_U0_start_full_n : STD_LOGIC;
    signal Duplicate_U0_start_write : STD_LOGIC;
    signal CvtColor_U0_start_full_n : STD_LOGIC;
    signal CvtColor_U0_start_write : STD_LOGIC;
    signal FAST_t_opr_U0_start_full_n : STD_LOGIC;
    signal FAST_t_opr_U0_start_write : STD_LOGIC;
    signal Block_Mat_exit124544_U0_start_full_n : STD_LOGIC;
    signal Block_Mat_exit124544_U0_start_write : STD_LOGIC;
    signal Loop_loop_height_pro_U0_start_full_n : STD_LOGIC;
    signal Loop_loop_height_pro_U0_start_write : STD_LOGIC;
    signal PaintMask_U0_start_full_n : STD_LOGIC;
    signal PaintMask_U0_start_write : STD_LOGIC;
    signal Mat2AXIvideo_U0_start_full_n : STD_LOGIC;
    signal Mat2AXIvideo_U0_start_write : STD_LOGIC;

    component FAST1_Core_entry69 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        rows : IN STD_LOGIC_VECTOR (31 downto 0);
        cols : IN STD_LOGIC_VECTOR (31 downto 0);
        threhold : IN STD_LOGIC_VECTOR (7 downto 0);
        rows_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        rows_out_full_n : IN STD_LOGIC;
        rows_out_write : OUT STD_LOGIC;
        rows_out1_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        rows_out1_full_n : IN STD_LOGIC;
        rows_out1_write : OUT STD_LOGIC;
        cols_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        cols_out_full_n : IN STD_LOGIC;
        cols_out_write : OUT STD_LOGIC;
        cols_out2_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        cols_out2_full_n : IN STD_LOGIC;
        cols_out2_write : OUT STD_LOGIC;
        threhold_out_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        threhold_out_full_n : IN STD_LOGIC;
        threhold_out_write : OUT STD_LOGIC );
    end component;


    component Block_Mat_exit12454_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        rows_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        rows_empty_n : IN STD_LOGIC;
        rows_read : OUT STD_LOGIC;
        cols_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        cols_empty_n : IN STD_LOGIC;
        cols_read : OUT STD_LOGIC;
        rows_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        rows_out_full_n : IN STD_LOGIC;
        rows_out_write : OUT STD_LOGIC;
        p_src_rows_V_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        p_src_rows_V_out_full_n : IN STD_LOGIC;
        p_src_rows_V_out_write : OUT STD_LOGIC;
        cols_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        cols_out_full_n : IN STD_LOGIC;
        cols_out_write : OUT STD_LOGIC;
        p_src_cols_V_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        p_src_cols_V_out_full_n : IN STD_LOGIC;
        p_src_cols_V_out_write : OUT STD_LOGIC;
        p_dst_rows_V_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        p_dst_rows_V_out_full_n : IN STD_LOGIC;
        p_dst_rows_V_out_write : OUT STD_LOGIC;
        p_dst_cols_V_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        p_dst_cols_V_out_full_n : IN STD_LOGIC;
        p_dst_cols_V_out_write : OUT STD_LOGIC;
        src0_rows_V_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        src0_rows_V_out_full_n : IN STD_LOGIC;
        src0_rows_V_out_write : OUT STD_LOGIC;
        src0_cols_V_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        src0_cols_V_out_full_n : IN STD_LOGIC;
        src0_cols_V_out_write : OUT STD_LOGIC;
        src1_rows_V_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        src1_rows_V_out_full_n : IN STD_LOGIC;
        src1_rows_V_out_write : OUT STD_LOGIC;
        src1_cols_V_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        src1_cols_V_out_full_n : IN STD_LOGIC;
        src1_cols_V_out_write : OUT STD_LOGIC;
        gray_rows_V_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        gray_rows_V_out_full_n : IN STD_LOGIC;
        gray_rows_V_out_write : OUT STD_LOGIC;
        gray_cols_V_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        gray_cols_V_out_full_n : IN STD_LOGIC;
        gray_cols_V_out_write : OUT STD_LOGIC );
    end component;


    component AXIvideo2Mat IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        src_axis_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        src_axis_TVALID : IN STD_LOGIC;
        src_axis_TREADY : OUT STD_LOGIC;
        src_axis_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
        src_axis_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        src_axis_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        src_axis_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        src_axis_TID : IN STD_LOGIC_VECTOR (0 downto 0);
        src_axis_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
        img_rows_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        img_rows_V_empty_n : IN STD_LOGIC;
        img_rows_V_read : OUT STD_LOGIC;
        img_cols_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        img_cols_V_empty_n : IN STD_LOGIC;
        img_cols_V_read : OUT STD_LOGIC;
        img_data_stream_0_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_data_stream_0_V_full_n : IN STD_LOGIC;
        img_data_stream_0_V_write : OUT STD_LOGIC;
        img_data_stream_1_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_data_stream_1_V_full_n : IN STD_LOGIC;
        img_data_stream_1_V_write : OUT STD_LOGIC;
        img_data_stream_2_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_data_stream_2_V_full_n : IN STD_LOGIC;
        img_data_stream_2_V_write : OUT STD_LOGIC;
        img_rows_V_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        img_rows_V_out_full_n : IN STD_LOGIC;
        img_rows_V_out_write : OUT STD_LOGIC;
        img_cols_V_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        img_cols_V_out_full_n : IN STD_LOGIC;
        img_cols_V_out_write : OUT STD_LOGIC );
    end component;


    component Duplicate IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        src_rows_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        src_rows_V_empty_n : IN STD_LOGIC;
        src_rows_V_read : OUT STD_LOGIC;
        src_cols_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        src_cols_V_empty_n : IN STD_LOGIC;
        src_cols_V_read : OUT STD_LOGIC;
        src_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        src_data_stream_0_V_empty_n : IN STD_LOGIC;
        src_data_stream_0_V_read : OUT STD_LOGIC;
        src_data_stream_1_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        src_data_stream_1_V_empty_n : IN STD_LOGIC;
        src_data_stream_1_V_read : OUT STD_LOGIC;
        src_data_stream_2_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        src_data_stream_2_V_empty_n : IN STD_LOGIC;
        src_data_stream_2_V_read : OUT STD_LOGIC;
        dst1_data_stream_0_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        dst1_data_stream_0_V_full_n : IN STD_LOGIC;
        dst1_data_stream_0_V_write : OUT STD_LOGIC;
        dst1_data_stream_1_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        dst1_data_stream_1_V_full_n : IN STD_LOGIC;
        dst1_data_stream_1_V_write : OUT STD_LOGIC;
        dst1_data_stream_2_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        dst1_data_stream_2_V_full_n : IN STD_LOGIC;
        dst1_data_stream_2_V_write : OUT STD_LOGIC;
        dst2_data_stream_0_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        dst2_data_stream_0_V_full_n : IN STD_LOGIC;
        dst2_data_stream_0_V_write : OUT STD_LOGIC;
        dst2_data_stream_1_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        dst2_data_stream_1_V_full_n : IN STD_LOGIC;
        dst2_data_stream_1_V_write : OUT STD_LOGIC;
        dst2_data_stream_2_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        dst2_data_stream_2_V_full_n : IN STD_LOGIC;
        dst2_data_stream_2_V_write : OUT STD_LOGIC );
    end component;


    component CvtColor IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_src_rows_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        p_src_rows_V_empty_n : IN STD_LOGIC;
        p_src_rows_V_read : OUT STD_LOGIC;
        p_src_cols_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        p_src_cols_V_empty_n : IN STD_LOGIC;
        p_src_cols_V_read : OUT STD_LOGIC;
        p_src_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        p_src_data_stream_0_V_empty_n : IN STD_LOGIC;
        p_src_data_stream_0_V_read : OUT STD_LOGIC;
        p_src_data_stream_1_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        p_src_data_stream_1_V_empty_n : IN STD_LOGIC;
        p_src_data_stream_1_V_read : OUT STD_LOGIC;
        p_src_data_stream_2_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        p_src_data_stream_2_V_empty_n : IN STD_LOGIC;
        p_src_data_stream_2_V_read : OUT STD_LOGIC;
        p_dst_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_dst_data_stream_V_full_n : IN STD_LOGIC;
        p_dst_data_stream_V_write : OUT STD_LOGIC );
    end component;


    component FAST_t_opr IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_src_rows_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        p_src_rows_V_empty_n : IN STD_LOGIC;
        p_src_rows_V_read : OUT STD_LOGIC;
        p_src_cols_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        p_src_cols_V_empty_n : IN STD_LOGIC;
        p_src_cols_V_read : OUT STD_LOGIC;
        p_src_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        p_src_data_stream_V_empty_n : IN STD_LOGIC;
        p_src_data_stream_V_read : OUT STD_LOGIC;
        p_mask_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_mask_data_stream_V_full_n : IN STD_LOGIC;
        p_mask_data_stream_V_write : OUT STD_LOGIC;
        p_threshold_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        p_threshold_empty_n : IN STD_LOGIC;
        p_threshold_read : OUT STD_LOGIC );
    end component;


    component Block_Mat_exit124544 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        cols_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        cols_empty_n : IN STD_LOGIC;
        cols_read : OUT STD_LOGIC;
        rows_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        rows_empty_n : IN STD_LOGIC;
        rows_read : OUT STD_LOGIC;
        tmp_out_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        tmp_out_out_full_n : IN STD_LOGIC;
        tmp_out_out_write : OUT STD_LOGIC;
        tmp_27_out_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        tmp_27_out_out_full_n : IN STD_LOGIC;
        tmp_27_out_out_write : OUT STD_LOGIC;
        p_neg393_i_i_out_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        p_neg393_i_i_out_out_full_n : IN STD_LOGIC;
        p_neg393_i_i_out_out_write : OUT STD_LOGIC );
    end component;


    component Loop_loop_height_pro IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        tmp_27_loc_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        tmp_27_loc_empty_n : IN STD_LOGIC;
        tmp_27_loc_read : OUT STD_LOGIC;
        tmp_loc_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        tmp_loc_empty_n : IN STD_LOGIC;
        tmp_loc_read : OUT STD_LOGIC;
        rows_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        rows_empty_n : IN STD_LOGIC;
        rows_read : OUT STD_LOGIC;
        p_neg393_i_i_loc_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        p_neg393_i_i_loc_empty_n : IN STD_LOGIC;
        p_neg393_i_i_loc_read : OUT STD_LOGIC;
        cols_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        cols_empty_n : IN STD_LOGIC;
        cols_read : OUT STD_LOGIC;
        mask_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        mask_data_stream_0_V_empty_n : IN STD_LOGIC;
        mask_data_stream_0_V_read : OUT STD_LOGIC;
        dmask_data_stream_0_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        dmask_data_stream_0_V_full_n : IN STD_LOGIC;
        dmask_data_stream_0_V_write : OUT STD_LOGIC );
    end component;


    component PaintMask IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_src_rows_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        p_src_rows_V_empty_n : IN STD_LOGIC;
        p_src_rows_V_read : OUT STD_LOGIC;
        p_src_cols_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        p_src_cols_V_empty_n : IN STD_LOGIC;
        p_src_cols_V_read : OUT STD_LOGIC;
        p_src_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        p_src_data_stream_0_V_empty_n : IN STD_LOGIC;
        p_src_data_stream_0_V_read : OUT STD_LOGIC;
        p_src_data_stream_1_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        p_src_data_stream_1_V_empty_n : IN STD_LOGIC;
        p_src_data_stream_1_V_read : OUT STD_LOGIC;
        p_src_data_stream_2_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        p_src_data_stream_2_V_empty_n : IN STD_LOGIC;
        p_src_data_stream_2_V_read : OUT STD_LOGIC;
        p_mask_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        p_mask_data_stream_V_empty_n : IN STD_LOGIC;
        p_mask_data_stream_V_read : OUT STD_LOGIC;
        p_dst_data_stream_0_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_dst_data_stream_0_V_full_n : IN STD_LOGIC;
        p_dst_data_stream_0_V_write : OUT STD_LOGIC;
        p_dst_data_stream_1_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_dst_data_stream_1_V_full_n : IN STD_LOGIC;
        p_dst_data_stream_1_V_write : OUT STD_LOGIC;
        p_dst_data_stream_2_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_dst_data_stream_2_V_full_n : IN STD_LOGIC;
        p_dst_data_stream_2_V_write : OUT STD_LOGIC );
    end component;


    component Mat2AXIvideo IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        img_rows_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        img_rows_V_empty_n : IN STD_LOGIC;
        img_rows_V_read : OUT STD_LOGIC;
        img_cols_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        img_cols_V_empty_n : IN STD_LOGIC;
        img_cols_V_read : OUT STD_LOGIC;
        img_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        img_data_stream_0_V_empty_n : IN STD_LOGIC;
        img_data_stream_0_V_read : OUT STD_LOGIC;
        img_data_stream_1_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        img_data_stream_1_V_empty_n : IN STD_LOGIC;
        img_data_stream_1_V_read : OUT STD_LOGIC;
        img_data_stream_2_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        img_data_stream_2_V_empty_n : IN STD_LOGIC;
        img_data_stream_2_V_read : OUT STD_LOGIC;
        dst_axis_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        dst_axis_TVALID : OUT STD_LOGIC;
        dst_axis_TREADY : IN STD_LOGIC;
        dst_axis_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
        dst_axis_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        dst_axis_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        dst_axis_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
        dst_axis_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
        dst_axis_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component fifo_w32_d2_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w8_d6_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w32_d6_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w32_d8_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w32_d4_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w32_d7_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w32_d5_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w8_d2_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w8_d20000_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Block_MqcK IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_FAST_t_rcU IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Block_Msc4 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_CvtColotde IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Loop_loudo IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_PaintMavdy IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Mat2AXIwdI IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_DuplicaxdS IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FAST1_Core_ctrl_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC;
        rows : OUT STD_LOGIC_VECTOR (31 downto 0);
        cols : OUT STD_LOGIC_VECTOR (31 downto 0);
        threhold : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    FAST1_Core_ctrl_s_axi_U : component FAST1_Core_ctrl_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CTRL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CTRL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_ctrl_AWVALID,
        AWREADY => s_axi_ctrl_AWREADY,
        AWADDR => s_axi_ctrl_AWADDR,
        WVALID => s_axi_ctrl_WVALID,
        WREADY => s_axi_ctrl_WREADY,
        WDATA => s_axi_ctrl_WDATA,
        WSTRB => s_axi_ctrl_WSTRB,
        ARVALID => s_axi_ctrl_ARVALID,
        ARREADY => s_axi_ctrl_ARREADY,
        ARADDR => s_axi_ctrl_ARADDR,
        RVALID => s_axi_ctrl_RVALID,
        RREADY => s_axi_ctrl_RREADY,
        RDATA => s_axi_ctrl_RDATA,
        RRESP => s_axi_ctrl_RRESP,
        BVALID => s_axi_ctrl_BVALID,
        BREADY => s_axi_ctrl_BREADY,
        BRESP => s_axi_ctrl_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle,
        rows => rows,
        cols => cols,
        threhold => threhold);

    FAST1_Core_entry69_U0 : component FAST1_Core_entry69
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => FAST1_Core_entry69_U0_ap_start,
        start_full_n => FAST1_Core_entry69_U0_start_full_n,
        ap_done => FAST1_Core_entry69_U0_ap_done,
        ap_continue => FAST1_Core_entry69_U0_ap_continue,
        ap_idle => FAST1_Core_entry69_U0_ap_idle,
        ap_ready => FAST1_Core_entry69_U0_ap_ready,
        start_out => FAST1_Core_entry69_U0_start_out,
        start_write => FAST1_Core_entry69_U0_start_write,
        rows => rows,
        cols => cols,
        threhold => threhold,
        rows_out_din => FAST1_Core_entry69_U0_rows_out_din,
        rows_out_full_n => rows_c_full_n,
        rows_out_write => FAST1_Core_entry69_U0_rows_out_write,
        rows_out1_din => FAST1_Core_entry69_U0_rows_out1_din,
        rows_out1_full_n => rows_c490_full_n,
        rows_out1_write => FAST1_Core_entry69_U0_rows_out1_write,
        cols_out_din => FAST1_Core_entry69_U0_cols_out_din,
        cols_out_full_n => cols_c_full_n,
        cols_out_write => FAST1_Core_entry69_U0_cols_out_write,
        cols_out2_din => FAST1_Core_entry69_U0_cols_out2_din,
        cols_out2_full_n => cols_c491_full_n,
        cols_out2_write => FAST1_Core_entry69_U0_cols_out2_write,
        threhold_out_din => FAST1_Core_entry69_U0_threhold_out_din,
        threhold_out_full_n => threhold_c_full_n,
        threhold_out_write => FAST1_Core_entry69_U0_threhold_out_write);

    Block_Mat_exit12454_U0 : component Block_Mat_exit12454_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Block_Mat_exit12454_U0_ap_start,
        start_full_n => Block_Mat_exit12454_U0_start_full_n,
        ap_done => Block_Mat_exit12454_U0_ap_done,
        ap_continue => Block_Mat_exit12454_U0_ap_continue,
        ap_idle => Block_Mat_exit12454_U0_ap_idle,
        ap_ready => Block_Mat_exit12454_U0_ap_ready,
        start_out => Block_Mat_exit12454_U0_start_out,
        start_write => Block_Mat_exit12454_U0_start_write,
        rows_dout => rows_c_dout,
        rows_empty_n => rows_c_empty_n,
        rows_read => Block_Mat_exit12454_U0_rows_read,
        cols_dout => cols_c_dout,
        cols_empty_n => cols_c_empty_n,
        cols_read => Block_Mat_exit12454_U0_cols_read,
        rows_out_din => Block_Mat_exit12454_U0_rows_out_din,
        rows_out_full_n => rows_c492_full_n,
        rows_out_write => Block_Mat_exit12454_U0_rows_out_write,
        p_src_rows_V_out_din => Block_Mat_exit12454_U0_p_src_rows_V_out_din,
        p_src_rows_V_out_full_n => p_src_rows_V_c_full_n,
        p_src_rows_V_out_write => Block_Mat_exit12454_U0_p_src_rows_V_out_write,
        cols_out_din => Block_Mat_exit12454_U0_cols_out_din,
        cols_out_full_n => cols_c493_full_n,
        cols_out_write => Block_Mat_exit12454_U0_cols_out_write,
        p_src_cols_V_out_din => Block_Mat_exit12454_U0_p_src_cols_V_out_din,
        p_src_cols_V_out_full_n => p_src_cols_V_c_full_n,
        p_src_cols_V_out_write => Block_Mat_exit12454_U0_p_src_cols_V_out_write,
        p_dst_rows_V_out_din => Block_Mat_exit12454_U0_p_dst_rows_V_out_din,
        p_dst_rows_V_out_full_n => p_dst_rows_V_c_full_n,
        p_dst_rows_V_out_write => Block_Mat_exit12454_U0_p_dst_rows_V_out_write,
        p_dst_cols_V_out_din => Block_Mat_exit12454_U0_p_dst_cols_V_out_din,
        p_dst_cols_V_out_full_n => p_dst_cols_V_c_full_n,
        p_dst_cols_V_out_write => Block_Mat_exit12454_U0_p_dst_cols_V_out_write,
        src0_rows_V_out_din => Block_Mat_exit12454_U0_src0_rows_V_out_din,
        src0_rows_V_out_full_n => src0_rows_V_c_full_n,
        src0_rows_V_out_write => Block_Mat_exit12454_U0_src0_rows_V_out_write,
        src0_cols_V_out_din => Block_Mat_exit12454_U0_src0_cols_V_out_din,
        src0_cols_V_out_full_n => src0_cols_V_c_full_n,
        src0_cols_V_out_write => Block_Mat_exit12454_U0_src0_cols_V_out_write,
        src1_rows_V_out_din => Block_Mat_exit12454_U0_src1_rows_V_out_din,
        src1_rows_V_out_full_n => src1_rows_V_c_full_n,
        src1_rows_V_out_write => Block_Mat_exit12454_U0_src1_rows_V_out_write,
        src1_cols_V_out_din => Block_Mat_exit12454_U0_src1_cols_V_out_din,
        src1_cols_V_out_full_n => src1_cols_V_c_full_n,
        src1_cols_V_out_write => Block_Mat_exit12454_U0_src1_cols_V_out_write,
        gray_rows_V_out_din => Block_Mat_exit12454_U0_gray_rows_V_out_din,
        gray_rows_V_out_full_n => gray_rows_V_c_full_n,
        gray_rows_V_out_write => Block_Mat_exit12454_U0_gray_rows_V_out_write,
        gray_cols_V_out_din => Block_Mat_exit12454_U0_gray_cols_V_out_din,
        gray_cols_V_out_full_n => gray_cols_V_c_full_n,
        gray_cols_V_out_write => Block_Mat_exit12454_U0_gray_cols_V_out_write);

    AXIvideo2Mat_U0 : component AXIvideo2Mat
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => AXIvideo2Mat_U0_ap_start,
        start_full_n => start_for_Duplicate_U0_full_n,
        ap_done => AXIvideo2Mat_U0_ap_done,
        ap_continue => AXIvideo2Mat_U0_ap_continue,
        ap_idle => AXIvideo2Mat_U0_ap_idle,
        ap_ready => AXIvideo2Mat_U0_ap_ready,
        start_out => AXIvideo2Mat_U0_start_out,
        start_write => AXIvideo2Mat_U0_start_write,
        src_axis_TDATA => src_axis_TDATA,
        src_axis_TVALID => src_axis_TVALID,
        src_axis_TREADY => AXIvideo2Mat_U0_src_axis_TREADY,
        src_axis_TKEEP => src_axis_TKEEP,
        src_axis_TSTRB => src_axis_TSTRB,
        src_axis_TUSER => src_axis_TUSER,
        src_axis_TLAST => src_axis_TLAST,
        src_axis_TID => src_axis_TID,
        src_axis_TDEST => src_axis_TDEST,
        img_rows_V_dout => p_src_rows_V_c_dout,
        img_rows_V_empty_n => p_src_rows_V_c_empty_n,
        img_rows_V_read => AXIvideo2Mat_U0_img_rows_V_read,
        img_cols_V_dout => p_src_cols_V_c_dout,
        img_cols_V_empty_n => p_src_cols_V_c_empty_n,
        img_cols_V_read => AXIvideo2Mat_U0_img_cols_V_read,
        img_data_stream_0_V_din => AXIvideo2Mat_U0_img_data_stream_0_V_din,
        img_data_stream_0_V_full_n => p_src_data_stream_0_s_full_n,
        img_data_stream_0_V_write => AXIvideo2Mat_U0_img_data_stream_0_V_write,
        img_data_stream_1_V_din => AXIvideo2Mat_U0_img_data_stream_1_V_din,
        img_data_stream_1_V_full_n => p_src_data_stream_1_s_full_n,
        img_data_stream_1_V_write => AXIvideo2Mat_U0_img_data_stream_1_V_write,
        img_data_stream_2_V_din => AXIvideo2Mat_U0_img_data_stream_2_V_din,
        img_data_stream_2_V_full_n => p_src_data_stream_2_s_full_n,
        img_data_stream_2_V_write => AXIvideo2Mat_U0_img_data_stream_2_V_write,
        img_rows_V_out_din => AXIvideo2Mat_U0_img_rows_V_out_din,
        img_rows_V_out_full_n => p_src_rows_V_c494_full_n,
        img_rows_V_out_write => AXIvideo2Mat_U0_img_rows_V_out_write,
        img_cols_V_out_din => AXIvideo2Mat_U0_img_cols_V_out_din,
        img_cols_V_out_full_n => p_src_cols_V_c495_full_n,
        img_cols_V_out_write => AXIvideo2Mat_U0_img_cols_V_out_write);

    Duplicate_U0 : component Duplicate
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Duplicate_U0_ap_start,
        ap_done => Duplicate_U0_ap_done,
        ap_continue => Duplicate_U0_ap_continue,
        ap_idle => Duplicate_U0_ap_idle,
        ap_ready => Duplicate_U0_ap_ready,
        src_rows_V_dout => p_src_rows_V_c494_dout,
        src_rows_V_empty_n => p_src_rows_V_c494_empty_n,
        src_rows_V_read => Duplicate_U0_src_rows_V_read,
        src_cols_V_dout => p_src_cols_V_c495_dout,
        src_cols_V_empty_n => p_src_cols_V_c495_empty_n,
        src_cols_V_read => Duplicate_U0_src_cols_V_read,
        src_data_stream_0_V_dout => p_src_data_stream_0_s_dout,
        src_data_stream_0_V_empty_n => p_src_data_stream_0_s_empty_n,
        src_data_stream_0_V_read => Duplicate_U0_src_data_stream_0_V_read,
        src_data_stream_1_V_dout => p_src_data_stream_1_s_dout,
        src_data_stream_1_V_empty_n => p_src_data_stream_1_s_empty_n,
        src_data_stream_1_V_read => Duplicate_U0_src_data_stream_1_V_read,
        src_data_stream_2_V_dout => p_src_data_stream_2_s_dout,
        src_data_stream_2_V_empty_n => p_src_data_stream_2_s_empty_n,
        src_data_stream_2_V_read => Duplicate_U0_src_data_stream_2_V_read,
        dst1_data_stream_0_V_din => Duplicate_U0_dst1_data_stream_0_V_din,
        dst1_data_stream_0_V_full_n => src0_data_stream_0_s_full_n,
        dst1_data_stream_0_V_write => Duplicate_U0_dst1_data_stream_0_V_write,
        dst1_data_stream_1_V_din => Duplicate_U0_dst1_data_stream_1_V_din,
        dst1_data_stream_1_V_full_n => src0_data_stream_1_s_full_n,
        dst1_data_stream_1_V_write => Duplicate_U0_dst1_data_stream_1_V_write,
        dst1_data_stream_2_V_din => Duplicate_U0_dst1_data_stream_2_V_din,
        dst1_data_stream_2_V_full_n => src0_data_stream_2_s_full_n,
        dst1_data_stream_2_V_write => Duplicate_U0_dst1_data_stream_2_V_write,
        dst2_data_stream_0_V_din => Duplicate_U0_dst2_data_stream_0_V_din,
        dst2_data_stream_0_V_full_n => src1_data_stream_0_s_full_n,
        dst2_data_stream_0_V_write => Duplicate_U0_dst2_data_stream_0_V_write,
        dst2_data_stream_1_V_din => Duplicate_U0_dst2_data_stream_1_V_din,
        dst2_data_stream_1_V_full_n => src1_data_stream_1_s_full_n,
        dst2_data_stream_1_V_write => Duplicate_U0_dst2_data_stream_1_V_write,
        dst2_data_stream_2_V_din => Duplicate_U0_dst2_data_stream_2_V_din,
        dst2_data_stream_2_V_full_n => src1_data_stream_2_s_full_n,
        dst2_data_stream_2_V_write => Duplicate_U0_dst2_data_stream_2_V_write);

    CvtColor_U0 : component CvtColor
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => CvtColor_U0_ap_start,
        ap_done => CvtColor_U0_ap_done,
        ap_continue => CvtColor_U0_ap_continue,
        ap_idle => CvtColor_U0_ap_idle,
        ap_ready => CvtColor_U0_ap_ready,
        p_src_rows_V_dout => src0_rows_V_c_dout,
        p_src_rows_V_empty_n => src0_rows_V_c_empty_n,
        p_src_rows_V_read => CvtColor_U0_p_src_rows_V_read,
        p_src_cols_V_dout => src0_cols_V_c_dout,
        p_src_cols_V_empty_n => src0_cols_V_c_empty_n,
        p_src_cols_V_read => CvtColor_U0_p_src_cols_V_read,
        p_src_data_stream_0_V_dout => src0_data_stream_0_s_dout,
        p_src_data_stream_0_V_empty_n => src0_data_stream_0_s_empty_n,
        p_src_data_stream_0_V_read => CvtColor_U0_p_src_data_stream_0_V_read,
        p_src_data_stream_1_V_dout => src0_data_stream_1_s_dout,
        p_src_data_stream_1_V_empty_n => src0_data_stream_1_s_empty_n,
        p_src_data_stream_1_V_read => CvtColor_U0_p_src_data_stream_1_V_read,
        p_src_data_stream_2_V_dout => src0_data_stream_2_s_dout,
        p_src_data_stream_2_V_empty_n => src0_data_stream_2_s_empty_n,
        p_src_data_stream_2_V_read => CvtColor_U0_p_src_data_stream_2_V_read,
        p_dst_data_stream_V_din => CvtColor_U0_p_dst_data_stream_V_din,
        p_dst_data_stream_V_full_n => gray_data_stream_0_s_full_n,
        p_dst_data_stream_V_write => CvtColor_U0_p_dst_data_stream_V_write);

    FAST_t_opr_U0 : component FAST_t_opr
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => FAST_t_opr_U0_ap_start,
        ap_done => FAST_t_opr_U0_ap_done,
        ap_continue => FAST_t_opr_U0_ap_continue,
        ap_idle => FAST_t_opr_U0_ap_idle,
        ap_ready => FAST_t_opr_U0_ap_ready,
        p_src_rows_V_dout => gray_rows_V_c_dout,
        p_src_rows_V_empty_n => gray_rows_V_c_empty_n,
        p_src_rows_V_read => FAST_t_opr_U0_p_src_rows_V_read,
        p_src_cols_V_dout => gray_cols_V_c_dout,
        p_src_cols_V_empty_n => gray_cols_V_c_empty_n,
        p_src_cols_V_read => FAST_t_opr_U0_p_src_cols_V_read,
        p_src_data_stream_V_dout => gray_data_stream_0_s_dout,
        p_src_data_stream_V_empty_n => gray_data_stream_0_s_empty_n,
        p_src_data_stream_V_read => FAST_t_opr_U0_p_src_data_stream_V_read,
        p_mask_data_stream_V_din => FAST_t_opr_U0_p_mask_data_stream_V_din,
        p_mask_data_stream_V_full_n => mask_data_stream_0_s_full_n,
        p_mask_data_stream_V_write => FAST_t_opr_U0_p_mask_data_stream_V_write,
        p_threshold_dout => threhold_c_dout,
        p_threshold_empty_n => threhold_c_empty_n,
        p_threshold_read => FAST_t_opr_U0_p_threshold_read);

    Block_Mat_exit124544_U0 : component Block_Mat_exit124544
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Block_Mat_exit124544_U0_ap_start,
        ap_done => Block_Mat_exit124544_U0_ap_done,
        ap_continue => Block_Mat_exit124544_U0_ap_continue,
        ap_idle => Block_Mat_exit124544_U0_ap_idle,
        ap_ready => Block_Mat_exit124544_U0_ap_ready,
        cols_dout => cols_c491_dout,
        cols_empty_n => cols_c491_empty_n,
        cols_read => Block_Mat_exit124544_U0_cols_read,
        rows_dout => rows_c490_dout,
        rows_empty_n => rows_c490_empty_n,
        rows_read => Block_Mat_exit124544_U0_rows_read,
        tmp_out_out_din => Block_Mat_exit124544_U0_tmp_out_out_din,
        tmp_out_out_full_n => tmp_loc_c_full_n,
        tmp_out_out_write => Block_Mat_exit124544_U0_tmp_out_out_write,
        tmp_27_out_out_din => Block_Mat_exit124544_U0_tmp_27_out_out_din,
        tmp_27_out_out_full_n => tmp_27_loc_c_full_n,
        tmp_27_out_out_write => Block_Mat_exit124544_U0_tmp_27_out_out_write,
        p_neg393_i_i_out_out_din => Block_Mat_exit124544_U0_p_neg393_i_i_out_out_din,
        p_neg393_i_i_out_out_full_n => p_neg393_i_i_loc_c_full_n,
        p_neg393_i_i_out_out_write => Block_Mat_exit124544_U0_p_neg393_i_i_out_out_write);

    Loop_loop_height_pro_U0 : component Loop_loop_height_pro
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Loop_loop_height_pro_U0_ap_start,
        ap_done => Loop_loop_height_pro_U0_ap_done,
        ap_continue => Loop_loop_height_pro_U0_ap_continue,
        ap_idle => Loop_loop_height_pro_U0_ap_idle,
        ap_ready => Loop_loop_height_pro_U0_ap_ready,
        tmp_27_loc_dout => tmp_27_loc_c_dout,
        tmp_27_loc_empty_n => tmp_27_loc_c_empty_n,
        tmp_27_loc_read => Loop_loop_height_pro_U0_tmp_27_loc_read,
        tmp_loc_dout => tmp_loc_c_dout,
        tmp_loc_empty_n => tmp_loc_c_empty_n,
        tmp_loc_read => Loop_loop_height_pro_U0_tmp_loc_read,
        rows_dout => rows_c492_dout,
        rows_empty_n => rows_c492_empty_n,
        rows_read => Loop_loop_height_pro_U0_rows_read,
        p_neg393_i_i_loc_dout => p_neg393_i_i_loc_c_dout,
        p_neg393_i_i_loc_empty_n => p_neg393_i_i_loc_c_empty_n,
        p_neg393_i_i_loc_read => Loop_loop_height_pro_U0_p_neg393_i_i_loc_read,
        cols_dout => cols_c493_dout,
        cols_empty_n => cols_c493_empty_n,
        cols_read => Loop_loop_height_pro_U0_cols_read,
        mask_data_stream_0_V_dout => mask_data_stream_0_s_dout,
        mask_data_stream_0_V_empty_n => mask_data_stream_0_s_empty_n,
        mask_data_stream_0_V_read => Loop_loop_height_pro_U0_mask_data_stream_0_V_read,
        dmask_data_stream_0_V_din => Loop_loop_height_pro_U0_dmask_data_stream_0_V_din,
        dmask_data_stream_0_V_full_n => dmask_data_stream_0_full_n,
        dmask_data_stream_0_V_write => Loop_loop_height_pro_U0_dmask_data_stream_0_V_write);

    PaintMask_U0 : component PaintMask
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => PaintMask_U0_ap_start,
        ap_done => PaintMask_U0_ap_done,
        ap_continue => PaintMask_U0_ap_continue,
        ap_idle => PaintMask_U0_ap_idle,
        ap_ready => PaintMask_U0_ap_ready,
        p_src_rows_V_dout => src1_rows_V_c_dout,
        p_src_rows_V_empty_n => src1_rows_V_c_empty_n,
        p_src_rows_V_read => PaintMask_U0_p_src_rows_V_read,
        p_src_cols_V_dout => src1_cols_V_c_dout,
        p_src_cols_V_empty_n => src1_cols_V_c_empty_n,
        p_src_cols_V_read => PaintMask_U0_p_src_cols_V_read,
        p_src_data_stream_0_V_dout => src1_data_stream_0_s_dout,
        p_src_data_stream_0_V_empty_n => src1_data_stream_0_s_empty_n,
        p_src_data_stream_0_V_read => PaintMask_U0_p_src_data_stream_0_V_read,
        p_src_data_stream_1_V_dout => src1_data_stream_1_s_dout,
        p_src_data_stream_1_V_empty_n => src1_data_stream_1_s_empty_n,
        p_src_data_stream_1_V_read => PaintMask_U0_p_src_data_stream_1_V_read,
        p_src_data_stream_2_V_dout => src1_data_stream_2_s_dout,
        p_src_data_stream_2_V_empty_n => src1_data_stream_2_s_empty_n,
        p_src_data_stream_2_V_read => PaintMask_U0_p_src_data_stream_2_V_read,
        p_mask_data_stream_V_dout => dmask_data_stream_0_dout,
        p_mask_data_stream_V_empty_n => dmask_data_stream_0_empty_n,
        p_mask_data_stream_V_read => PaintMask_U0_p_mask_data_stream_V_read,
        p_dst_data_stream_0_V_din => PaintMask_U0_p_dst_data_stream_0_V_din,
        p_dst_data_stream_0_V_full_n => p_dst_data_stream_0_s_full_n,
        p_dst_data_stream_0_V_write => PaintMask_U0_p_dst_data_stream_0_V_write,
        p_dst_data_stream_1_V_din => PaintMask_U0_p_dst_data_stream_1_V_din,
        p_dst_data_stream_1_V_full_n => p_dst_data_stream_1_s_full_n,
        p_dst_data_stream_1_V_write => PaintMask_U0_p_dst_data_stream_1_V_write,
        p_dst_data_stream_2_V_din => PaintMask_U0_p_dst_data_stream_2_V_din,
        p_dst_data_stream_2_V_full_n => p_dst_data_stream_2_s_full_n,
        p_dst_data_stream_2_V_write => PaintMask_U0_p_dst_data_stream_2_V_write);

    Mat2AXIvideo_U0 : component Mat2AXIvideo
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Mat2AXIvideo_U0_ap_start,
        ap_done => Mat2AXIvideo_U0_ap_done,
        ap_continue => Mat2AXIvideo_U0_ap_continue,
        ap_idle => Mat2AXIvideo_U0_ap_idle,
        ap_ready => Mat2AXIvideo_U0_ap_ready,
        img_rows_V_dout => p_dst_rows_V_c_dout,
        img_rows_V_empty_n => p_dst_rows_V_c_empty_n,
        img_rows_V_read => Mat2AXIvideo_U0_img_rows_V_read,
        img_cols_V_dout => p_dst_cols_V_c_dout,
        img_cols_V_empty_n => p_dst_cols_V_c_empty_n,
        img_cols_V_read => Mat2AXIvideo_U0_img_cols_V_read,
        img_data_stream_0_V_dout => p_dst_data_stream_0_s_dout,
        img_data_stream_0_V_empty_n => p_dst_data_stream_0_s_empty_n,
        img_data_stream_0_V_read => Mat2AXIvideo_U0_img_data_stream_0_V_read,
        img_data_stream_1_V_dout => p_dst_data_stream_1_s_dout,
        img_data_stream_1_V_empty_n => p_dst_data_stream_1_s_empty_n,
        img_data_stream_1_V_read => Mat2AXIvideo_U0_img_data_stream_1_V_read,
        img_data_stream_2_V_dout => p_dst_data_stream_2_s_dout,
        img_data_stream_2_V_empty_n => p_dst_data_stream_2_s_empty_n,
        img_data_stream_2_V_read => Mat2AXIvideo_U0_img_data_stream_2_V_read,
        dst_axis_TDATA => Mat2AXIvideo_U0_dst_axis_TDATA,
        dst_axis_TVALID => Mat2AXIvideo_U0_dst_axis_TVALID,
        dst_axis_TREADY => dst_axis_TREADY,
        dst_axis_TKEEP => Mat2AXIvideo_U0_dst_axis_TKEEP,
        dst_axis_TSTRB => Mat2AXIvideo_U0_dst_axis_TSTRB,
        dst_axis_TUSER => Mat2AXIvideo_U0_dst_axis_TUSER,
        dst_axis_TLAST => Mat2AXIvideo_U0_dst_axis_TLAST,
        dst_axis_TID => Mat2AXIvideo_U0_dst_axis_TID,
        dst_axis_TDEST => Mat2AXIvideo_U0_dst_axis_TDEST);

    rows_c_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => FAST1_Core_entry69_U0_rows_out_din,
        if_full_n => rows_c_full_n,
        if_write => FAST1_Core_entry69_U0_rows_out_write,
        if_dout => rows_c_dout,
        if_empty_n => rows_c_empty_n,
        if_read => Block_Mat_exit12454_U0_rows_read);

    rows_c490_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => FAST1_Core_entry69_U0_rows_out1_din,
        if_full_n => rows_c490_full_n,
        if_write => FAST1_Core_entry69_U0_rows_out1_write,
        if_dout => rows_c490_dout,
        if_empty_n => rows_c490_empty_n,
        if_read => Block_Mat_exit124544_U0_rows_read);

    cols_c_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => FAST1_Core_entry69_U0_cols_out_din,
        if_full_n => cols_c_full_n,
        if_write => FAST1_Core_entry69_U0_cols_out_write,
        if_dout => cols_c_dout,
        if_empty_n => cols_c_empty_n,
        if_read => Block_Mat_exit12454_U0_cols_read);

    cols_c491_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => FAST1_Core_entry69_U0_cols_out2_din,
        if_full_n => cols_c491_full_n,
        if_write => FAST1_Core_entry69_U0_cols_out2_write,
        if_dout => cols_c491_dout,
        if_empty_n => cols_c491_empty_n,
        if_read => Block_Mat_exit124544_U0_cols_read);

    threhold_c_U : component fifo_w8_d6_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => FAST1_Core_entry69_U0_threhold_out_din,
        if_full_n => threhold_c_full_n,
        if_write => FAST1_Core_entry69_U0_threhold_out_write,
        if_dout => threhold_c_dout,
        if_empty_n => threhold_c_empty_n,
        if_read => FAST_t_opr_U0_p_threshold_read);

    rows_c492_U : component fifo_w32_d6_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit12454_U0_rows_out_din,
        if_full_n => rows_c492_full_n,
        if_write => Block_Mat_exit12454_U0_rows_out_write,
        if_dout => rows_c492_dout,
        if_empty_n => rows_c492_empty_n,
        if_read => Loop_loop_height_pro_U0_rows_read);

    p_src_rows_V_c_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit12454_U0_p_src_rows_V_out_din,
        if_full_n => p_src_rows_V_c_full_n,
        if_write => Block_Mat_exit12454_U0_p_src_rows_V_out_write,
        if_dout => p_src_rows_V_c_dout,
        if_empty_n => p_src_rows_V_c_empty_n,
        if_read => AXIvideo2Mat_U0_img_rows_V_read);

    cols_c493_U : component fifo_w32_d6_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit12454_U0_cols_out_din,
        if_full_n => cols_c493_full_n,
        if_write => Block_Mat_exit12454_U0_cols_out_write,
        if_dout => cols_c493_dout,
        if_empty_n => cols_c493_empty_n,
        if_read => Loop_loop_height_pro_U0_cols_read);

    p_src_cols_V_c_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit12454_U0_p_src_cols_V_out_din,
        if_full_n => p_src_cols_V_c_full_n,
        if_write => Block_Mat_exit12454_U0_p_src_cols_V_out_write,
        if_dout => p_src_cols_V_c_dout,
        if_empty_n => p_src_cols_V_c_empty_n,
        if_read => AXIvideo2Mat_U0_img_cols_V_read);

    p_dst_rows_V_c_U : component fifo_w32_d8_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit12454_U0_p_dst_rows_V_out_din,
        if_full_n => p_dst_rows_V_c_full_n,
        if_write => Block_Mat_exit12454_U0_p_dst_rows_V_out_write,
        if_dout => p_dst_rows_V_c_dout,
        if_empty_n => p_dst_rows_V_c_empty_n,
        if_read => Mat2AXIvideo_U0_img_rows_V_read);

    p_dst_cols_V_c_U : component fifo_w32_d8_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit12454_U0_p_dst_cols_V_out_din,
        if_full_n => p_dst_cols_V_c_full_n,
        if_write => Block_Mat_exit12454_U0_p_dst_cols_V_out_write,
        if_dout => p_dst_cols_V_c_dout,
        if_empty_n => p_dst_cols_V_c_empty_n,
        if_read => Mat2AXIvideo_U0_img_cols_V_read);

    src0_rows_V_c_U : component fifo_w32_d4_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit12454_U0_src0_rows_V_out_din,
        if_full_n => src0_rows_V_c_full_n,
        if_write => Block_Mat_exit12454_U0_src0_rows_V_out_write,
        if_dout => src0_rows_V_c_dout,
        if_empty_n => src0_rows_V_c_empty_n,
        if_read => CvtColor_U0_p_src_rows_V_read);

    src0_cols_V_c_U : component fifo_w32_d4_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit12454_U0_src0_cols_V_out_din,
        if_full_n => src0_cols_V_c_full_n,
        if_write => Block_Mat_exit12454_U0_src0_cols_V_out_write,
        if_dout => src0_cols_V_c_dout,
        if_empty_n => src0_cols_V_c_empty_n,
        if_read => CvtColor_U0_p_src_cols_V_read);

    src1_rows_V_c_U : component fifo_w32_d7_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit12454_U0_src1_rows_V_out_din,
        if_full_n => src1_rows_V_c_full_n,
        if_write => Block_Mat_exit12454_U0_src1_rows_V_out_write,
        if_dout => src1_rows_V_c_dout,
        if_empty_n => src1_rows_V_c_empty_n,
        if_read => PaintMask_U0_p_src_rows_V_read);

    src1_cols_V_c_U : component fifo_w32_d7_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit12454_U0_src1_cols_V_out_din,
        if_full_n => src1_cols_V_c_full_n,
        if_write => Block_Mat_exit12454_U0_src1_cols_V_out_write,
        if_dout => src1_cols_V_c_dout,
        if_empty_n => src1_cols_V_c_empty_n,
        if_read => PaintMask_U0_p_src_cols_V_read);

    gray_rows_V_c_U : component fifo_w32_d5_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit12454_U0_gray_rows_V_out_din,
        if_full_n => gray_rows_V_c_full_n,
        if_write => Block_Mat_exit12454_U0_gray_rows_V_out_write,
        if_dout => gray_rows_V_c_dout,
        if_empty_n => gray_rows_V_c_empty_n,
        if_read => FAST_t_opr_U0_p_src_rows_V_read);

    gray_cols_V_c_U : component fifo_w32_d5_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit12454_U0_gray_cols_V_out_din,
        if_full_n => gray_cols_V_c_full_n,
        if_write => Block_Mat_exit12454_U0_gray_cols_V_out_write,
        if_dout => gray_cols_V_c_dout,
        if_empty_n => gray_cols_V_c_empty_n,
        if_read => FAST_t_opr_U0_p_src_cols_V_read);

    p_src_data_stream_0_s_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => AXIvideo2Mat_U0_img_data_stream_0_V_din,
        if_full_n => p_src_data_stream_0_s_full_n,
        if_write => AXIvideo2Mat_U0_img_data_stream_0_V_write,
        if_dout => p_src_data_stream_0_s_dout,
        if_empty_n => p_src_data_stream_0_s_empty_n,
        if_read => Duplicate_U0_src_data_stream_0_V_read);

    p_src_data_stream_1_s_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => AXIvideo2Mat_U0_img_data_stream_1_V_din,
        if_full_n => p_src_data_stream_1_s_full_n,
        if_write => AXIvideo2Mat_U0_img_data_stream_1_V_write,
        if_dout => p_src_data_stream_1_s_dout,
        if_empty_n => p_src_data_stream_1_s_empty_n,
        if_read => Duplicate_U0_src_data_stream_1_V_read);

    p_src_data_stream_2_s_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => AXIvideo2Mat_U0_img_data_stream_2_V_din,
        if_full_n => p_src_data_stream_2_s_full_n,
        if_write => AXIvideo2Mat_U0_img_data_stream_2_V_write,
        if_dout => p_src_data_stream_2_s_dout,
        if_empty_n => p_src_data_stream_2_s_empty_n,
        if_read => Duplicate_U0_src_data_stream_2_V_read);

    p_src_rows_V_c494_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => AXIvideo2Mat_U0_img_rows_V_out_din,
        if_full_n => p_src_rows_V_c494_full_n,
        if_write => AXIvideo2Mat_U0_img_rows_V_out_write,
        if_dout => p_src_rows_V_c494_dout,
        if_empty_n => p_src_rows_V_c494_empty_n,
        if_read => Duplicate_U0_src_rows_V_read);

    p_src_cols_V_c495_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => AXIvideo2Mat_U0_img_cols_V_out_din,
        if_full_n => p_src_cols_V_c495_full_n,
        if_write => AXIvideo2Mat_U0_img_cols_V_out_write,
        if_dout => p_src_cols_V_c495_dout,
        if_empty_n => p_src_cols_V_c495_empty_n,
        if_read => Duplicate_U0_src_cols_V_read);

    src0_data_stream_0_s_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Duplicate_U0_dst1_data_stream_0_V_din,
        if_full_n => src0_data_stream_0_s_full_n,
        if_write => Duplicate_U0_dst1_data_stream_0_V_write,
        if_dout => src0_data_stream_0_s_dout,
        if_empty_n => src0_data_stream_0_s_empty_n,
        if_read => CvtColor_U0_p_src_data_stream_0_V_read);

    src0_data_stream_1_s_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Duplicate_U0_dst1_data_stream_1_V_din,
        if_full_n => src0_data_stream_1_s_full_n,
        if_write => Duplicate_U0_dst1_data_stream_1_V_write,
        if_dout => src0_data_stream_1_s_dout,
        if_empty_n => src0_data_stream_1_s_empty_n,
        if_read => CvtColor_U0_p_src_data_stream_1_V_read);

    src0_data_stream_2_s_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Duplicate_U0_dst1_data_stream_2_V_din,
        if_full_n => src0_data_stream_2_s_full_n,
        if_write => Duplicate_U0_dst1_data_stream_2_V_write,
        if_dout => src0_data_stream_2_s_dout,
        if_empty_n => src0_data_stream_2_s_empty_n,
        if_read => CvtColor_U0_p_src_data_stream_2_V_read);

    src1_data_stream_0_s_U : component fifo_w8_d20000_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Duplicate_U0_dst2_data_stream_0_V_din,
        if_full_n => src1_data_stream_0_s_full_n,
        if_write => Duplicate_U0_dst2_data_stream_0_V_write,
        if_dout => src1_data_stream_0_s_dout,
        if_empty_n => src1_data_stream_0_s_empty_n,
        if_read => PaintMask_U0_p_src_data_stream_0_V_read);

    src1_data_stream_1_s_U : component fifo_w8_d20000_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Duplicate_U0_dst2_data_stream_1_V_din,
        if_full_n => src1_data_stream_1_s_full_n,
        if_write => Duplicate_U0_dst2_data_stream_1_V_write,
        if_dout => src1_data_stream_1_s_dout,
        if_empty_n => src1_data_stream_1_s_empty_n,
        if_read => PaintMask_U0_p_src_data_stream_1_V_read);

    src1_data_stream_2_s_U : component fifo_w8_d20000_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Duplicate_U0_dst2_data_stream_2_V_din,
        if_full_n => src1_data_stream_2_s_full_n,
        if_write => Duplicate_U0_dst2_data_stream_2_V_write,
        if_dout => src1_data_stream_2_s_dout,
        if_empty_n => src1_data_stream_2_s_empty_n,
        if_read => PaintMask_U0_p_src_data_stream_2_V_read);

    gray_data_stream_0_s_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => CvtColor_U0_p_dst_data_stream_V_din,
        if_full_n => gray_data_stream_0_s_full_n,
        if_write => CvtColor_U0_p_dst_data_stream_V_write,
        if_dout => gray_data_stream_0_s_dout,
        if_empty_n => gray_data_stream_0_s_empty_n,
        if_read => FAST_t_opr_U0_p_src_data_stream_V_read);

    mask_data_stream_0_s_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => FAST_t_opr_U0_p_mask_data_stream_V_din,
        if_full_n => mask_data_stream_0_s_full_n,
        if_write => FAST_t_opr_U0_p_mask_data_stream_V_write,
        if_dout => mask_data_stream_0_s_dout,
        if_empty_n => mask_data_stream_0_s_empty_n,
        if_read => Loop_loop_height_pro_U0_mask_data_stream_0_V_read);

    tmp_loc_c_U : component fifo_w32_d6_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit124544_U0_tmp_out_out_din,
        if_full_n => tmp_loc_c_full_n,
        if_write => Block_Mat_exit124544_U0_tmp_out_out_write,
        if_dout => tmp_loc_c_dout,
        if_empty_n => tmp_loc_c_empty_n,
        if_read => Loop_loop_height_pro_U0_tmp_loc_read);

    tmp_27_loc_c_U : component fifo_w32_d6_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit124544_U0_tmp_27_out_out_din,
        if_full_n => tmp_27_loc_c_full_n,
        if_write => Block_Mat_exit124544_U0_tmp_27_out_out_write,
        if_dout => tmp_27_loc_c_dout,
        if_empty_n => tmp_27_loc_c_empty_n,
        if_read => Loop_loop_height_pro_U0_tmp_27_loc_read);

    p_neg393_i_i_loc_c_U : component fifo_w32_d6_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit124544_U0_p_neg393_i_i_out_out_din,
        if_full_n => p_neg393_i_i_loc_c_full_n,
        if_write => Block_Mat_exit124544_U0_p_neg393_i_i_out_out_write,
        if_dout => p_neg393_i_i_loc_c_dout,
        if_empty_n => p_neg393_i_i_loc_c_empty_n,
        if_read => Loop_loop_height_pro_U0_p_neg393_i_i_loc_read);

    dmask_data_stream_0_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Loop_loop_height_pro_U0_dmask_data_stream_0_V_din,
        if_full_n => dmask_data_stream_0_full_n,
        if_write => Loop_loop_height_pro_U0_dmask_data_stream_0_V_write,
        if_dout => dmask_data_stream_0_dout,
        if_empty_n => dmask_data_stream_0_empty_n,
        if_read => PaintMask_U0_p_mask_data_stream_V_read);

    p_dst_data_stream_0_s_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PaintMask_U0_p_dst_data_stream_0_V_din,
        if_full_n => p_dst_data_stream_0_s_full_n,
        if_write => PaintMask_U0_p_dst_data_stream_0_V_write,
        if_dout => p_dst_data_stream_0_s_dout,
        if_empty_n => p_dst_data_stream_0_s_empty_n,
        if_read => Mat2AXIvideo_U0_img_data_stream_0_V_read);

    p_dst_data_stream_1_s_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PaintMask_U0_p_dst_data_stream_1_V_din,
        if_full_n => p_dst_data_stream_1_s_full_n,
        if_write => PaintMask_U0_p_dst_data_stream_1_V_write,
        if_dout => p_dst_data_stream_1_s_dout,
        if_empty_n => p_dst_data_stream_1_s_empty_n,
        if_read => Mat2AXIvideo_U0_img_data_stream_1_V_read);

    p_dst_data_stream_2_s_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PaintMask_U0_p_dst_data_stream_2_V_din,
        if_full_n => p_dst_data_stream_2_s_full_n,
        if_write => PaintMask_U0_p_dst_data_stream_2_V_write,
        if_dout => p_dst_data_stream_2_s_dout,
        if_empty_n => p_dst_data_stream_2_s_empty_n,
        if_read => Mat2AXIvideo_U0_img_data_stream_2_V_read);

    start_for_Block_MqcK_U : component start_for_Block_MqcK
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Block_Mat_exit12454_U0_din,
        if_full_n => start_for_Block_Mat_exit12454_U0_full_n,
        if_write => FAST1_Core_entry69_U0_start_write,
        if_dout => start_for_Block_Mat_exit12454_U0_dout,
        if_empty_n => start_for_Block_Mat_exit12454_U0_empty_n,
        if_read => Block_Mat_exit12454_U0_ap_ready);

    start_for_FAST_t_rcU_U : component start_for_FAST_t_rcU
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_FAST_t_opr_U0_din,
        if_full_n => start_for_FAST_t_opr_U0_full_n,
        if_write => FAST1_Core_entry69_U0_start_write,
        if_dout => start_for_FAST_t_opr_U0_dout,
        if_empty_n => start_for_FAST_t_opr_U0_empty_n,
        if_read => FAST_t_opr_U0_ap_ready);

    start_for_Block_Msc4_U : component start_for_Block_Msc4
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Block_Mat_exit124544_U0_din,
        if_full_n => start_for_Block_Mat_exit124544_U0_full_n,
        if_write => FAST1_Core_entry69_U0_start_write,
        if_dout => start_for_Block_Mat_exit124544_U0_dout,
        if_empty_n => start_for_Block_Mat_exit124544_U0_empty_n,
        if_read => Block_Mat_exit124544_U0_ap_ready);

    start_for_CvtColotde_U : component start_for_CvtColotde
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_CvtColor_U0_din,
        if_full_n => start_for_CvtColor_U0_full_n,
        if_write => Block_Mat_exit12454_U0_start_write,
        if_dout => start_for_CvtColor_U0_dout,
        if_empty_n => start_for_CvtColor_U0_empty_n,
        if_read => CvtColor_U0_ap_ready);

    start_for_Loop_loudo_U : component start_for_Loop_loudo
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Loop_loop_height_pro_U0_din,
        if_full_n => start_for_Loop_loop_height_pro_U0_full_n,
        if_write => Block_Mat_exit12454_U0_start_write,
        if_dout => start_for_Loop_loop_height_pro_U0_dout,
        if_empty_n => start_for_Loop_loop_height_pro_U0_empty_n,
        if_read => Loop_loop_height_pro_U0_ap_ready);

    start_for_PaintMavdy_U : component start_for_PaintMavdy
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_PaintMask_U0_din,
        if_full_n => start_for_PaintMask_U0_full_n,
        if_write => Block_Mat_exit12454_U0_start_write,
        if_dout => start_for_PaintMask_U0_dout,
        if_empty_n => start_for_PaintMask_U0_empty_n,
        if_read => PaintMask_U0_ap_ready);

    start_for_Mat2AXIwdI_U : component start_for_Mat2AXIwdI
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Mat2AXIvideo_U0_din,
        if_full_n => start_for_Mat2AXIvideo_U0_full_n,
        if_write => Block_Mat_exit12454_U0_start_write,
        if_dout => start_for_Mat2AXIvideo_U0_dout,
        if_empty_n => start_for_Mat2AXIvideo_U0_empty_n,
        if_read => Mat2AXIvideo_U0_ap_ready);

    start_for_DuplicaxdS_U : component start_for_DuplicaxdS
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Duplicate_U0_din,
        if_full_n => start_for_Duplicate_U0_full_n,
        if_write => AXIvideo2Mat_U0_start_write,
        if_dout => start_for_Duplicate_U0_dout,
        if_empty_n => start_for_Duplicate_U0_empty_n,
        if_read => Duplicate_U0_ap_ready);





    ap_sync_reg_AXIvideo2Mat_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_AXIvideo2Mat_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_AXIvideo2Mat_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_AXIvideo2Mat_U0_ap_ready <= ap_sync_AXIvideo2Mat_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_FAST1_Core_entry69_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_FAST1_Core_entry69_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_FAST1_Core_entry69_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_FAST1_Core_entry69_U0_ap_ready <= ap_sync_FAST1_Core_entry69_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    AXIvideo2Mat_U0_ap_ready_count_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_sync_ready = ap_const_logic_1) and (ap_const_logic_0 = AXIvideo2Mat_U0_ap_ready))) then 
                AXIvideo2Mat_U0_ap_ready_count <= std_logic_vector(unsigned(AXIvideo2Mat_U0_ap_ready_count) - unsigned(ap_const_lv2_1));
            elsif (((ap_sync_ready = ap_const_logic_0) and (ap_const_logic_1 = AXIvideo2Mat_U0_ap_ready))) then 
                AXIvideo2Mat_U0_ap_ready_count <= std_logic_vector(unsigned(AXIvideo2Mat_U0_ap_ready_count) + unsigned(ap_const_lv2_1));
            end if; 
        end if;
    end process;

    FAST1_Core_entry69_U0_ap_ready_count_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_0 = FAST1_Core_entry69_U0_ap_ready) and (ap_sync_ready = ap_const_logic_1))) then 
                FAST1_Core_entry69_U0_ap_ready_count <= std_logic_vector(unsigned(FAST1_Core_entry69_U0_ap_ready_count) - unsigned(ap_const_lv2_1));
            elsif (((ap_sync_ready = ap_const_logic_0) and (ap_const_logic_1 = FAST1_Core_entry69_U0_ap_ready))) then 
                FAST1_Core_entry69_U0_ap_ready_count <= std_logic_vector(unsigned(FAST1_Core_entry69_U0_ap_ready_count) + unsigned(ap_const_lv2_1));
            end if; 
        end if;
    end process;
    AXIvideo2Mat_U0_ap_continue <= ap_const_logic_1;
    AXIvideo2Mat_U0_ap_start <= ((ap_sync_reg_AXIvideo2Mat_U0_ap_ready xor ap_const_logic_1) and ap_start);
    Block_Mat_exit124544_U0_ap_continue <= ap_const_logic_1;
    Block_Mat_exit124544_U0_ap_start <= start_for_Block_Mat_exit124544_U0_empty_n;
    Block_Mat_exit124544_U0_start_full_n <= ap_const_logic_1;
    Block_Mat_exit124544_U0_start_write <= ap_const_logic_0;
    Block_Mat_exit12454_U0_ap_continue <= ap_const_logic_1;
    Block_Mat_exit12454_U0_ap_start <= start_for_Block_Mat_exit12454_U0_empty_n;
    Block_Mat_exit12454_U0_start_full_n <= (start_for_PaintMask_U0_full_n and start_for_Mat2AXIvideo_U0_full_n and start_for_Loop_loop_height_pro_U0_full_n and start_for_CvtColor_U0_full_n);
    CvtColor_U0_ap_continue <= ap_const_logic_1;
    CvtColor_U0_ap_start <= start_for_CvtColor_U0_empty_n;
    CvtColor_U0_start_full_n <= ap_const_logic_1;
    CvtColor_U0_start_write <= ap_const_logic_0;
    Duplicate_U0_ap_continue <= ap_const_logic_1;
    Duplicate_U0_ap_start <= start_for_Duplicate_U0_empty_n;
    Duplicate_U0_start_full_n <= ap_const_logic_1;
    Duplicate_U0_start_write <= ap_const_logic_0;
    FAST1_Core_entry69_U0_ap_continue <= ap_const_logic_1;
    FAST1_Core_entry69_U0_ap_start <= ((ap_sync_reg_FAST1_Core_entry69_U0_ap_ready xor ap_const_logic_1) and ap_start);
    FAST1_Core_entry69_U0_start_full_n <= (start_for_FAST_t_opr_U0_full_n and start_for_Block_Mat_exit12454_U0_full_n and start_for_Block_Mat_exit124544_U0_full_n);
    FAST_t_opr_U0_ap_continue <= ap_const_logic_1;
    FAST_t_opr_U0_ap_start <= start_for_FAST_t_opr_U0_empty_n;
    FAST_t_opr_U0_start_full_n <= ap_const_logic_1;
    FAST_t_opr_U0_start_write <= ap_const_logic_0;
    Loop_loop_height_pro_U0_ap_continue <= ap_const_logic_1;
    Loop_loop_height_pro_U0_ap_start <= start_for_Loop_loop_height_pro_U0_empty_n;
    Loop_loop_height_pro_U0_start_full_n <= ap_const_logic_1;
    Loop_loop_height_pro_U0_start_write <= ap_const_logic_0;
    Mat2AXIvideo_U0_ap_continue <= ap_const_logic_1;
    Mat2AXIvideo_U0_ap_start <= start_for_Mat2AXIvideo_U0_empty_n;
    Mat2AXIvideo_U0_start_full_n <= ap_const_logic_1;
    Mat2AXIvideo_U0_start_write <= ap_const_logic_0;
    PaintMask_U0_ap_continue <= ap_const_logic_1;
    PaintMask_U0_ap_start <= start_for_PaintMask_U0_empty_n;
    PaintMask_U0_start_full_n <= ap_const_logic_1;
    PaintMask_U0_start_write <= ap_const_logic_0;
    ap_done <= Mat2AXIvideo_U0_ap_done;
    ap_idle <= (PaintMask_U0_ap_idle and Mat2AXIvideo_U0_ap_idle and Loop_loop_height_pro_U0_ap_idle and FAST_t_opr_U0_ap_idle and FAST1_Core_entry69_U0_ap_idle and Duplicate_U0_ap_idle and CvtColor_U0_ap_idle and Block_Mat_exit12454_U0_ap_idle and Block_Mat_exit124544_U0_ap_idle and AXIvideo2Mat_U0_ap_idle);
    ap_ready <= ap_sync_ready;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    ap_sync_AXIvideo2Mat_U0_ap_ready <= (ap_sync_reg_AXIvideo2Mat_U0_ap_ready or AXIvideo2Mat_U0_ap_ready);
    ap_sync_FAST1_Core_entry69_U0_ap_ready <= (ap_sync_reg_FAST1_Core_entry69_U0_ap_ready or FAST1_Core_entry69_U0_ap_ready);
    ap_sync_continue <= ap_const_logic_1;
    ap_sync_done <= Mat2AXIvideo_U0_ap_done;
    ap_sync_ready <= (ap_sync_FAST1_Core_entry69_U0_ap_ready and ap_sync_AXIvideo2Mat_U0_ap_ready);
    dst_axis_TDATA <= Mat2AXIvideo_U0_dst_axis_TDATA;
    dst_axis_TDEST <= Mat2AXIvideo_U0_dst_axis_TDEST;
    dst_axis_TID <= Mat2AXIvideo_U0_dst_axis_TID;
    dst_axis_TKEEP <= Mat2AXIvideo_U0_dst_axis_TKEEP;
    dst_axis_TLAST <= Mat2AXIvideo_U0_dst_axis_TLAST;
    dst_axis_TSTRB <= Mat2AXIvideo_U0_dst_axis_TSTRB;
    dst_axis_TUSER <= Mat2AXIvideo_U0_dst_axis_TUSER;
    dst_axis_TVALID <= Mat2AXIvideo_U0_dst_axis_TVALID;
    src_axis_TREADY <= AXIvideo2Mat_U0_src_axis_TREADY;
    start_for_Block_Mat_exit124544_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Block_Mat_exit12454_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_CvtColor_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Duplicate_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_FAST_t_opr_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Loop_loop_height_pro_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Mat2AXIvideo_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_PaintMask_U0_din <= (0=>ap_const_logic_1, others=>'-');
end behav;
