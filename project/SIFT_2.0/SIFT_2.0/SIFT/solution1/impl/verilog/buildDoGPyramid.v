// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module buildDoGPyramid (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        gauss_pyr_0_val_V_address0,
        gauss_pyr_0_val_V_ce0,
        gauss_pyr_0_val_V_q0,
        gauss_pyr_1_val_V_address0,
        gauss_pyr_1_val_V_ce0,
        gauss_pyr_1_val_V_q0,
        gauss_pyr_2_val_V_address0,
        gauss_pyr_2_val_V_ce0,
        gauss_pyr_2_val_V_q0,
        gauss_pyr_3_val_V_address0,
        gauss_pyr_3_val_V_ce0,
        gauss_pyr_3_val_V_q0,
        gauss_pyr_4_val_V_address0,
        gauss_pyr_4_val_V_ce0,
        gauss_pyr_4_val_V_q0,
        gauss_pyr_5_val_V_address0,
        gauss_pyr_5_val_V_ce0,
        gauss_pyr_5_val_V_q0,
        gauss_pyr_1_rows_read,
        gauss_pyr_2_rows_read,
        gauss_pyr_3_rows_read,
        gauss_pyr_4_rows_read,
        gauss_pyr_5_rows_read,
        gauss_pyr_1_cols_read,
        gauss_pyr_2_cols_read,
        gauss_pyr_3_cols_read,
        gauss_pyr_4_cols_read,
        gauss_pyr_5_cols_read,
        dog_pyr_0_val_V_address0,
        dog_pyr_0_val_V_ce0,
        dog_pyr_0_val_V_we0,
        dog_pyr_0_val_V_d0,
        dog_pyr_1_val_V_address0,
        dog_pyr_1_val_V_ce0,
        dog_pyr_1_val_V_we0,
        dog_pyr_1_val_V_d0,
        dog_pyr_2_val_V_address0,
        dog_pyr_2_val_V_ce0,
        dog_pyr_2_val_V_we0,
        dog_pyr_2_val_V_d0,
        dog_pyr_3_val_V_address0,
        dog_pyr_3_val_V_ce0,
        dog_pyr_3_val_V_we0,
        dog_pyr_3_val_V_d0,
        dog_pyr_4_val_V_address0,
        dog_pyr_4_val_V_ce0,
        dog_pyr_4_val_V_we0,
        dog_pyr_4_val_V_d0,
        dog_pyr_0_rows_read,
        dog_pyr_1_rows_read,
        dog_pyr_2_rows_read,
        dog_pyr_3_rows_read,
        dog_pyr_4_rows_read,
        dog_pyr_0_cols_read,
        dog_pyr_1_cols_read,
        dog_pyr_2_cols_read,
        dog_pyr_3_cols_read,
        dog_pyr_4_cols_read,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8,
        ap_return_9
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_state2 = 3'd2;
parameter    ap_ST_fsm_state3 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [15:0] gauss_pyr_0_val_V_address0;
output   gauss_pyr_0_val_V_ce0;
input  [31:0] gauss_pyr_0_val_V_q0;
output  [15:0] gauss_pyr_1_val_V_address0;
output   gauss_pyr_1_val_V_ce0;
input  [25:0] gauss_pyr_1_val_V_q0;
output  [15:0] gauss_pyr_2_val_V_address0;
output   gauss_pyr_2_val_V_ce0;
input  [25:0] gauss_pyr_2_val_V_q0;
output  [15:0] gauss_pyr_3_val_V_address0;
output   gauss_pyr_3_val_V_ce0;
input  [25:0] gauss_pyr_3_val_V_q0;
output  [15:0] gauss_pyr_4_val_V_address0;
output   gauss_pyr_4_val_V_ce0;
input  [25:0] gauss_pyr_4_val_V_q0;
output  [15:0] gauss_pyr_5_val_V_address0;
output   gauss_pyr_5_val_V_ce0;
input  [25:0] gauss_pyr_5_val_V_q0;
input  [31:0] gauss_pyr_1_rows_read;
input  [31:0] gauss_pyr_2_rows_read;
input  [31:0] gauss_pyr_3_rows_read;
input  [31:0] gauss_pyr_4_rows_read;
input  [31:0] gauss_pyr_5_rows_read;
input  [31:0] gauss_pyr_1_cols_read;
input  [31:0] gauss_pyr_2_cols_read;
input  [31:0] gauss_pyr_3_cols_read;
input  [31:0] gauss_pyr_4_cols_read;
input  [31:0] gauss_pyr_5_cols_read;
output  [15:0] dog_pyr_0_val_V_address0;
output   dog_pyr_0_val_V_ce0;
output   dog_pyr_0_val_V_we0;
output  [31:0] dog_pyr_0_val_V_d0;
output  [15:0] dog_pyr_1_val_V_address0;
output   dog_pyr_1_val_V_ce0;
output   dog_pyr_1_val_V_we0;
output  [31:0] dog_pyr_1_val_V_d0;
output  [15:0] dog_pyr_2_val_V_address0;
output   dog_pyr_2_val_V_ce0;
output   dog_pyr_2_val_V_we0;
output  [31:0] dog_pyr_2_val_V_d0;
output  [15:0] dog_pyr_3_val_V_address0;
output   dog_pyr_3_val_V_ce0;
output   dog_pyr_3_val_V_we0;
output  [31:0] dog_pyr_3_val_V_d0;
output  [15:0] dog_pyr_4_val_V_address0;
output   dog_pyr_4_val_V_ce0;
output   dog_pyr_4_val_V_we0;
output  [31:0] dog_pyr_4_val_V_d0;
input  [31:0] dog_pyr_0_rows_read;
input  [31:0] dog_pyr_1_rows_read;
input  [31:0] dog_pyr_2_rows_read;
input  [31:0] dog_pyr_3_rows_read;
input  [31:0] dog_pyr_4_rows_read;
input  [31:0] dog_pyr_0_cols_read;
input  [31:0] dog_pyr_1_cols_read;
input  [31:0] dog_pyr_2_cols_read;
input  [31:0] dog_pyr_3_cols_read;
input  [31:0] dog_pyr_4_cols_read;
output  [31:0] ap_return_0;
output  [31:0] ap_return_1;
output  [31:0] ap_return_2;
output  [31:0] ap_return_3;
output  [31:0] ap_return_4;
output  [31:0] ap_return_5;
output  [31:0] ap_return_6;
output  [31:0] ap_return_7;
output  [31:0] ap_return_8;
output  [31:0] ap_return_9;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[31:0] ap_return_0;
reg[31:0] ap_return_1;
reg[31:0] ap_return_2;
reg[31:0] ap_return_3;
reg[31:0] ap_return_4;
reg[31:0] ap_return_5;
reg[31:0] ap_return_6;
reg[31:0] ap_return_7;
reg[31:0] ap_return_8;
reg[31:0] ap_return_9;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [2:0] i_19_fu_508_p2;
reg   [2:0] i_19_reg_1214;
wire    ap_CS_fsm_state2;
wire   [31:0] gauss_pyr_cols_addr9_fu_515_p10;
reg   [31:0] gauss_pyr_cols_addr9_reg_1220;
wire   [0:0] exitcond_fu_502_p2;
wire   [0:0] write_flag_1_fu_530_p10;
reg   [0:0] write_flag_1_reg_1225;
wire   [0:0] write_flag12_1_fu_552_p10;
reg   [0:0] write_flag12_1_reg_1230;
wire   [0:0] write_flag15_1_fu_574_p10;
reg   [0:0] write_flag15_1_reg_1235;
wire   [0:0] write_flag21_1_fu_596_p10;
reg   [0:0] write_flag21_1_reg_1240;
wire   [0:0] write_flag18_1_fu_618_p10;
reg   [0:0] write_flag18_1_reg_1245;
wire   [0:0] write_flag38_be_fu_640_p10;
reg   [0:0] write_flag38_be_reg_1250;
wire   [0:0] write_flag35_be_fu_662_p10;
reg   [0:0] write_flag35_be_reg_1255;
wire   [0:0] write_flag31_be_fu_684_p10;
reg   [0:0] write_flag31_be_reg_1260;
wire   [0:0] write_flag27_be_fu_706_p10;
reg   [0:0] write_flag27_be_reg_1265;
wire   [0:0] write_flag24_be_fu_728_p10;
reg   [0:0] write_flag24_be_reg_1270;
wire   [31:0] dog_pyr_rows_1_fu_884_p10;
wire    ap_CS_fsm_state3;
wire    grp_SubArray2D_fu_470_ap_idle;
wire    grp_SubArray2D_fu_470_ap_ready;
wire    grp_SubArray2D_fu_470_ap_done;
wire   [31:0] dog_pyr_rows20_1_fu_906_p10;
wire   [31:0] dog_pyr_rows23_1_fu_928_p10;
wire   [31:0] dog_pyr_rows21_1_fu_950_p10;
wire   [31:0] dog_pyr_rows22_1_fu_972_p10;
wire   [31:0] dog_pyr_cols27_be_fu_998_p10;
wire   [31:0] dog_pyr_cols26_be_fu_1020_p10;
wire   [31:0] dog_pyr_cols2533_be_fu_1042_p10;
wire   [31:0] dog_pyr_cols24_be_fu_1064_p10;
wire   [31:0] dog_pyr_cols_be_fu_1086_p10;
wire    grp_SubArray2D_fu_470_ap_start;
wire   [15:0] grp_SubArray2D_fu_470_src0_1_val_V_address0;
wire    grp_SubArray2D_fu_470_src0_1_val_V_ce0;
wire   [15:0] grp_SubArray2D_fu_470_src0_2_val_V_address0;
wire    grp_SubArray2D_fu_470_src0_2_val_V_ce0;
wire   [15:0] grp_SubArray2D_fu_470_src0_3_val_V_address0;
wire    grp_SubArray2D_fu_470_src0_3_val_V_ce0;
wire   [15:0] grp_SubArray2D_fu_470_src0_4_val_V_address0;
wire    grp_SubArray2D_fu_470_src0_4_val_V_ce0;
wire   [15:0] grp_SubArray2D_fu_470_src0_5_val_V_address0;
wire    grp_SubArray2D_fu_470_src0_5_val_V_ce0;
wire   [15:0] grp_SubArray2D_fu_470_src1_0_val_V_address0;
wire    grp_SubArray2D_fu_470_src1_0_val_V_ce0;
wire   [15:0] grp_SubArray2D_fu_470_dst_0_val_V_address0;
wire    grp_SubArray2D_fu_470_dst_0_val_V_ce0;
wire    grp_SubArray2D_fu_470_dst_0_val_V_we0;
wire   [31:0] grp_SubArray2D_fu_470_dst_0_val_V_d0;
wire   [15:0] grp_SubArray2D_fu_470_dst_1_val_V_address0;
wire    grp_SubArray2D_fu_470_dst_1_val_V_ce0;
wire    grp_SubArray2D_fu_470_dst_1_val_V_we0;
wire   [31:0] grp_SubArray2D_fu_470_dst_1_val_V_d0;
wire   [15:0] grp_SubArray2D_fu_470_dst_2_val_V_address0;
wire    grp_SubArray2D_fu_470_dst_2_val_V_ce0;
wire    grp_SubArray2D_fu_470_dst_2_val_V_we0;
wire   [31:0] grp_SubArray2D_fu_470_dst_2_val_V_d0;
wire   [15:0] grp_SubArray2D_fu_470_dst_3_val_V_address0;
wire    grp_SubArray2D_fu_470_dst_3_val_V_ce0;
wire    grp_SubArray2D_fu_470_dst_3_val_V_we0;
wire   [31:0] grp_SubArray2D_fu_470_dst_3_val_V_d0;
wire   [15:0] grp_SubArray2D_fu_470_dst_4_val_V_address0;
wire    grp_SubArray2D_fu_470_dst_4_val_V_ce0;
wire    grp_SubArray2D_fu_470_dst_4_val_V_we0;
wire   [31:0] grp_SubArray2D_fu_470_dst_4_val_V_d0;
wire   [31:0] grp_SubArray2D_fu_470_ap_return_0;
wire   [31:0] grp_SubArray2D_fu_470_ap_return_1;
reg   [0:0] write_flag2_reg_212;
reg   [31:0] dog_pyr_rows22_s_reg_223;
reg   [0:0] write_flag3_reg_235;
reg   [31:0] dog_pyr_rows21_s_reg_246;
reg   [31:0] dog_pyr_rows23_s_reg_258;
reg   [0:0] write_flag4_reg_270;
reg   [0:0] write_flag5_reg_281;
reg   [31:0] dog_pyr_cols_s_reg_292;
reg   [0:0] write_flag6_reg_304;
reg   [31:0] dog_pyr_rows20_s_reg_315;
reg   [31:0] dog_pyr_cols24_s_reg_327;
reg   [0:0] write_flag7_reg_339;
reg   [0:0] write_flag8_reg_350;
reg   [31:0] dog_pyr_cols2533_s_reg_361;
reg   [0:0] write_flag9_reg_373;
reg   [31:0] dog_pyr_rows_s_reg_384;
reg   [31:0] dog_pyr_cols26_s_reg_396;
reg   [0:0] write_flag1_reg_408;
reg   [0:0] write_flag_reg_419;
reg   [31:0] dog_pyr_cols27_s_reg_430;
wire   [2:0] ap_phi_mux_i_phi_fu_446_p4;
reg   [2:0] i_reg_442;
reg   [31:0] gauss_pyr_rows_addr6_reg_454;
reg    grp_SubArray2D_fu_470_ap_start_reg;
wire   [2:0] gauss_pyr_cols_addr9_fu_515_p9;
wire   [31:0] dog_pyr_0_rows_writ_fu_750_p3;
wire   [31:0] dog_pyr_1_rows_writ_fu_757_p3;
wire   [31:0] dog_pyr_2_rows_writ_fu_764_p3;
wire   [31:0] dog_pyr_3_rows_writ_fu_771_p3;
wire   [31:0] dog_pyr_4_rows_writ_fu_778_p3;
wire   [31:0] dog_pyr_0_cols_writ_fu_785_p3;
wire   [31:0] dog_pyr_1_cols_writ_fu_792_p3;
wire   [31:0] dog_pyr_2_cols_writ_fu_799_p3;
wire   [31:0] dog_pyr_3_cols_writ_fu_806_p3;
wire   [31:0] dog_pyr_4_cols_writ_fu_813_p3;
reg   [31:0] ap_return_0_preg;
reg   [31:0] ap_return_1_preg;
reg   [31:0] ap_return_2_preg;
reg   [31:0] ap_return_3_preg;
reg   [31:0] ap_return_4_preg;
reg   [31:0] ap_return_5_preg;
reg   [31:0] ap_return_6_preg;
reg   [31:0] ap_return_7_preg;
reg   [31:0] ap_return_8_preg;
reg   [31:0] ap_return_9_preg;
reg   [2:0] ap_NS_fsm;
reg    ap_condition_884;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 grp_SubArray2D_fu_470_ap_start_reg = 1'b0;
#0 ap_return_0_preg = 32'd0;
#0 ap_return_1_preg = 32'd0;
#0 ap_return_2_preg = 32'd0;
#0 ap_return_3_preg = 32'd0;
#0 ap_return_4_preg = 32'd0;
#0 ap_return_5_preg = 32'd0;
#0 ap_return_6_preg = 32'd0;
#0 ap_return_7_preg = 32'd0;
#0 ap_return_8_preg = 32'd0;
#0 ap_return_9_preg = 32'd0;
end

SubArray2D grp_SubArray2D_fu_470(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_SubArray2D_fu_470_ap_start),
    .ap_done(grp_SubArray2D_fu_470_ap_done),
    .ap_idle(grp_SubArray2D_fu_470_ap_idle),
    .ap_ready(grp_SubArray2D_fu_470_ap_ready),
    .src0_1_val_V_address0(grp_SubArray2D_fu_470_src0_1_val_V_address0),
    .src0_1_val_V_ce0(grp_SubArray2D_fu_470_src0_1_val_V_ce0),
    .src0_1_val_V_q0(gauss_pyr_1_val_V_q0),
    .src0_2_val_V_address0(grp_SubArray2D_fu_470_src0_2_val_V_address0),
    .src0_2_val_V_ce0(grp_SubArray2D_fu_470_src0_2_val_V_ce0),
    .src0_2_val_V_q0(gauss_pyr_2_val_V_q0),
    .src0_3_val_V_address0(grp_SubArray2D_fu_470_src0_3_val_V_address0),
    .src0_3_val_V_ce0(grp_SubArray2D_fu_470_src0_3_val_V_ce0),
    .src0_3_val_V_q0(gauss_pyr_3_val_V_q0),
    .src0_4_val_V_address0(grp_SubArray2D_fu_470_src0_4_val_V_address0),
    .src0_4_val_V_ce0(grp_SubArray2D_fu_470_src0_4_val_V_ce0),
    .src0_4_val_V_q0(gauss_pyr_4_val_V_q0),
    .src0_5_val_V_address0(grp_SubArray2D_fu_470_src0_5_val_V_address0),
    .src0_5_val_V_ce0(grp_SubArray2D_fu_470_src0_5_val_V_ce0),
    .src0_5_val_V_q0(gauss_pyr_5_val_V_q0),
    .src0_val_V_offset(i_19_reg_1214),
    .src0_rows_read(gauss_pyr_rows_addr6_reg_454),
    .src0_cols_read(gauss_pyr_cols_addr9_reg_1220),
    .src1_0_val_V_address0(grp_SubArray2D_fu_470_src1_0_val_V_address0),
    .src1_0_val_V_ce0(grp_SubArray2D_fu_470_src1_0_val_V_ce0),
    .src1_0_val_V_q0(gauss_pyr_0_val_V_q0),
    .src1_val_V_offset(i_reg_442),
    .dst_0_val_V_address0(grp_SubArray2D_fu_470_dst_0_val_V_address0),
    .dst_0_val_V_ce0(grp_SubArray2D_fu_470_dst_0_val_V_ce0),
    .dst_0_val_V_we0(grp_SubArray2D_fu_470_dst_0_val_V_we0),
    .dst_0_val_V_d0(grp_SubArray2D_fu_470_dst_0_val_V_d0),
    .dst_1_val_V_address0(grp_SubArray2D_fu_470_dst_1_val_V_address0),
    .dst_1_val_V_ce0(grp_SubArray2D_fu_470_dst_1_val_V_ce0),
    .dst_1_val_V_we0(grp_SubArray2D_fu_470_dst_1_val_V_we0),
    .dst_1_val_V_d0(grp_SubArray2D_fu_470_dst_1_val_V_d0),
    .dst_2_val_V_address0(grp_SubArray2D_fu_470_dst_2_val_V_address0),
    .dst_2_val_V_ce0(grp_SubArray2D_fu_470_dst_2_val_V_ce0),
    .dst_2_val_V_we0(grp_SubArray2D_fu_470_dst_2_val_V_we0),
    .dst_2_val_V_d0(grp_SubArray2D_fu_470_dst_2_val_V_d0),
    .dst_3_val_V_address0(grp_SubArray2D_fu_470_dst_3_val_V_address0),
    .dst_3_val_V_ce0(grp_SubArray2D_fu_470_dst_3_val_V_ce0),
    .dst_3_val_V_we0(grp_SubArray2D_fu_470_dst_3_val_V_we0),
    .dst_3_val_V_d0(grp_SubArray2D_fu_470_dst_3_val_V_d0),
    .dst_4_val_V_address0(grp_SubArray2D_fu_470_dst_4_val_V_address0),
    .dst_4_val_V_ce0(grp_SubArray2D_fu_470_dst_4_val_V_ce0),
    .dst_4_val_V_we0(grp_SubArray2D_fu_470_dst_4_val_V_we0),
    .dst_4_val_V_d0(grp_SubArray2D_fu_470_dst_4_val_V_d0),
    .ap_return_0(grp_SubArray2D_fu_470_ap_return_0),
    .ap_return_1(grp_SubArray2D_fu_470_ap_return_1)
);

SIFT2_Core_mux_83Yie #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
SIFT2_Core_mux_83Yie_U773(
    .din0(gauss_pyr_5_cols_read),
    .din1(gauss_pyr_1_cols_read),
    .din2(gauss_pyr_2_cols_read),
    .din3(gauss_pyr_3_cols_read),
    .din4(gauss_pyr_4_cols_read),
    .din5(gauss_pyr_5_cols_read),
    .din6(gauss_pyr_5_cols_read),
    .din7(gauss_pyr_5_cols_read),
    .din8(gauss_pyr_cols_addr9_fu_515_p9),
    .dout(gauss_pyr_cols_addr9_fu_515_p10)
);

SIFT2_Core_mux_83Zio_x #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 1 ))
SIFT2_Core_mux_83Zio_x_U774(
    .din0(1'd1),
    .din1(write_flag_reg_419),
    .din2(write_flag_reg_419),
    .din3(write_flag_reg_419),
    .din4(write_flag_reg_419),
    .din5(write_flag_reg_419),
    .din6(write_flag_reg_419),
    .din7(write_flag_reg_419),
    .din8(i_reg_442),
    .dout(write_flag_1_fu_530_p10)
);

SIFT2_Core_mux_83Zio_x #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 1 ))
SIFT2_Core_mux_83Zio_x_U775(
    .din0(write_flag8_reg_350),
    .din1(1'd1),
    .din2(write_flag8_reg_350),
    .din3(write_flag8_reg_350),
    .din4(write_flag8_reg_350),
    .din5(write_flag8_reg_350),
    .din6(write_flag8_reg_350),
    .din7(write_flag8_reg_350),
    .din8(i_reg_442),
    .dout(write_flag12_1_fu_552_p10)
);

SIFT2_Core_mux_83Zio_x #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 1 ))
SIFT2_Core_mux_83Zio_x_U776(
    .din0(write_flag5_reg_281),
    .din1(write_flag5_reg_281),
    .din2(1'd1),
    .din3(write_flag5_reg_281),
    .din4(write_flag5_reg_281),
    .din5(write_flag5_reg_281),
    .din6(write_flag5_reg_281),
    .din7(write_flag5_reg_281),
    .din8(i_reg_442),
    .dout(write_flag15_1_fu_574_p10)
);

SIFT2_Core_mux_83Zio_x #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 1 ))
SIFT2_Core_mux_83Zio_x_U777(
    .din0(write_flag3_reg_235),
    .din1(write_flag3_reg_235),
    .din2(write_flag3_reg_235),
    .din3(write_flag3_reg_235),
    .din4(1'd1),
    .din5(1'd1),
    .din6(1'd1),
    .din7(1'd1),
    .din8(i_reg_442),
    .dout(write_flag21_1_fu_596_p10)
);

SIFT2_Core_mux_83Zio_x #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 1 ))
SIFT2_Core_mux_83Zio_x_U778(
    .din0(write_flag2_reg_212),
    .din1(write_flag2_reg_212),
    .din2(write_flag2_reg_212),
    .din3(1'd1),
    .din4(write_flag2_reg_212),
    .din5(write_flag2_reg_212),
    .din6(write_flag2_reg_212),
    .din7(write_flag2_reg_212),
    .din8(i_reg_442),
    .dout(write_flag18_1_fu_618_p10)
);

SIFT2_Core_mux_83Zio_x #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 1 ))
SIFT2_Core_mux_83Zio_x_U779(
    .din0(write_flag1_reg_408),
    .din1(write_flag1_reg_408),
    .din2(write_flag1_reg_408),
    .din3(write_flag1_reg_408),
    .din4(1'd1),
    .din5(1'd1),
    .din6(1'd1),
    .din7(1'd1),
    .din8(i_reg_442),
    .dout(write_flag38_be_fu_640_p10)
);

SIFT2_Core_mux_83Zio_x #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 1 ))
SIFT2_Core_mux_83Zio_x_U780(
    .din0(write_flag9_reg_373),
    .din1(write_flag9_reg_373),
    .din2(write_flag9_reg_373),
    .din3(1'd1),
    .din4(write_flag9_reg_373),
    .din5(write_flag9_reg_373),
    .din6(write_flag9_reg_373),
    .din7(write_flag9_reg_373),
    .din8(i_reg_442),
    .dout(write_flag35_be_fu_662_p10)
);

SIFT2_Core_mux_83Zio_x #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 1 ))
SIFT2_Core_mux_83Zio_x_U781(
    .din0(write_flag7_reg_339),
    .din1(write_flag7_reg_339),
    .din2(1'd1),
    .din3(write_flag7_reg_339),
    .din4(write_flag7_reg_339),
    .din5(write_flag7_reg_339),
    .din6(write_flag7_reg_339),
    .din7(write_flag7_reg_339),
    .din8(i_reg_442),
    .dout(write_flag31_be_fu_684_p10)
);

SIFT2_Core_mux_83Zio_x #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 1 ))
SIFT2_Core_mux_83Zio_x_U782(
    .din0(write_flag6_reg_304),
    .din1(1'd1),
    .din2(write_flag6_reg_304),
    .din3(write_flag6_reg_304),
    .din4(write_flag6_reg_304),
    .din5(write_flag6_reg_304),
    .din6(write_flag6_reg_304),
    .din7(write_flag6_reg_304),
    .din8(i_reg_442),
    .dout(write_flag27_be_fu_706_p10)
);

SIFT2_Core_mux_83Zio_x #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 1 ))
SIFT2_Core_mux_83Zio_x_U783(
    .din0(1'd1),
    .din1(write_flag4_reg_270),
    .din2(write_flag4_reg_270),
    .din3(write_flag4_reg_270),
    .din4(write_flag4_reg_270),
    .din5(write_flag4_reg_270),
    .din6(write_flag4_reg_270),
    .din7(write_flag4_reg_270),
    .din8(i_reg_442),
    .dout(write_flag24_be_fu_728_p10)
);

SIFT2_Core_mux_83Yie #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
SIFT2_Core_mux_83Yie_U784(
    .din0(grp_SubArray2D_fu_470_ap_return_0),
    .din1(dog_pyr_rows_s_reg_384),
    .din2(dog_pyr_rows_s_reg_384),
    .din3(dog_pyr_rows_s_reg_384),
    .din4(dog_pyr_rows_s_reg_384),
    .din5(dog_pyr_rows_s_reg_384),
    .din6(dog_pyr_rows_s_reg_384),
    .din7(dog_pyr_rows_s_reg_384),
    .din8(i_reg_442),
    .dout(dog_pyr_rows_1_fu_884_p10)
);

SIFT2_Core_mux_83Yie #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
SIFT2_Core_mux_83Yie_U785(
    .din0(dog_pyr_rows20_s_reg_315),
    .din1(grp_SubArray2D_fu_470_ap_return_0),
    .din2(dog_pyr_rows20_s_reg_315),
    .din3(dog_pyr_rows20_s_reg_315),
    .din4(dog_pyr_rows20_s_reg_315),
    .din5(dog_pyr_rows20_s_reg_315),
    .din6(dog_pyr_rows20_s_reg_315),
    .din7(dog_pyr_rows20_s_reg_315),
    .din8(i_reg_442),
    .dout(dog_pyr_rows20_1_fu_906_p10)
);

SIFT2_Core_mux_83Yie #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
SIFT2_Core_mux_83Yie_U786(
    .din0(dog_pyr_rows23_s_reg_258),
    .din1(dog_pyr_rows23_s_reg_258),
    .din2(dog_pyr_rows23_s_reg_258),
    .din3(dog_pyr_rows23_s_reg_258),
    .din4(grp_SubArray2D_fu_470_ap_return_0),
    .din5(grp_SubArray2D_fu_470_ap_return_0),
    .din6(grp_SubArray2D_fu_470_ap_return_0),
    .din7(grp_SubArray2D_fu_470_ap_return_0),
    .din8(i_reg_442),
    .dout(dog_pyr_rows23_1_fu_928_p10)
);

SIFT2_Core_mux_83Yie #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
SIFT2_Core_mux_83Yie_U787(
    .din0(dog_pyr_rows21_s_reg_246),
    .din1(dog_pyr_rows21_s_reg_246),
    .din2(grp_SubArray2D_fu_470_ap_return_0),
    .din3(dog_pyr_rows21_s_reg_246),
    .din4(dog_pyr_rows21_s_reg_246),
    .din5(dog_pyr_rows21_s_reg_246),
    .din6(dog_pyr_rows21_s_reg_246),
    .din7(dog_pyr_rows21_s_reg_246),
    .din8(i_reg_442),
    .dout(dog_pyr_rows21_1_fu_950_p10)
);

SIFT2_Core_mux_83Yie #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
SIFT2_Core_mux_83Yie_U788(
    .din0(dog_pyr_rows22_s_reg_223),
    .din1(dog_pyr_rows22_s_reg_223),
    .din2(dog_pyr_rows22_s_reg_223),
    .din3(grp_SubArray2D_fu_470_ap_return_0),
    .din4(dog_pyr_rows22_s_reg_223),
    .din5(dog_pyr_rows22_s_reg_223),
    .din6(dog_pyr_rows22_s_reg_223),
    .din7(dog_pyr_rows22_s_reg_223),
    .din8(i_reg_442),
    .dout(dog_pyr_rows22_1_fu_972_p10)
);

SIFT2_Core_mux_83Yie #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
SIFT2_Core_mux_83Yie_U789(
    .din0(dog_pyr_cols27_s_reg_430),
    .din1(dog_pyr_cols27_s_reg_430),
    .din2(dog_pyr_cols27_s_reg_430),
    .din3(dog_pyr_cols27_s_reg_430),
    .din4(grp_SubArray2D_fu_470_ap_return_1),
    .din5(grp_SubArray2D_fu_470_ap_return_1),
    .din6(grp_SubArray2D_fu_470_ap_return_1),
    .din7(grp_SubArray2D_fu_470_ap_return_1),
    .din8(i_reg_442),
    .dout(dog_pyr_cols27_be_fu_998_p10)
);

SIFT2_Core_mux_83Yie #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
SIFT2_Core_mux_83Yie_U790(
    .din0(dog_pyr_cols26_s_reg_396),
    .din1(dog_pyr_cols26_s_reg_396),
    .din2(dog_pyr_cols26_s_reg_396),
    .din3(grp_SubArray2D_fu_470_ap_return_1),
    .din4(dog_pyr_cols26_s_reg_396),
    .din5(dog_pyr_cols26_s_reg_396),
    .din6(dog_pyr_cols26_s_reg_396),
    .din7(dog_pyr_cols26_s_reg_396),
    .din8(i_reg_442),
    .dout(dog_pyr_cols26_be_fu_1020_p10)
);

SIFT2_Core_mux_83Yie #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
SIFT2_Core_mux_83Yie_U791(
    .din0(dog_pyr_cols2533_s_reg_361),
    .din1(dog_pyr_cols2533_s_reg_361),
    .din2(grp_SubArray2D_fu_470_ap_return_1),
    .din3(dog_pyr_cols2533_s_reg_361),
    .din4(dog_pyr_cols2533_s_reg_361),
    .din5(dog_pyr_cols2533_s_reg_361),
    .din6(dog_pyr_cols2533_s_reg_361),
    .din7(dog_pyr_cols2533_s_reg_361),
    .din8(i_reg_442),
    .dout(dog_pyr_cols2533_be_fu_1042_p10)
);

SIFT2_Core_mux_83Yie #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
SIFT2_Core_mux_83Yie_U792(
    .din0(dog_pyr_cols24_s_reg_327),
    .din1(grp_SubArray2D_fu_470_ap_return_1),
    .din2(dog_pyr_cols24_s_reg_327),
    .din3(dog_pyr_cols24_s_reg_327),
    .din4(dog_pyr_cols24_s_reg_327),
    .din5(dog_pyr_cols24_s_reg_327),
    .din6(dog_pyr_cols24_s_reg_327),
    .din7(dog_pyr_cols24_s_reg_327),
    .din8(i_reg_442),
    .dout(dog_pyr_cols24_be_fu_1064_p10)
);

SIFT2_Core_mux_83Yie #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
SIFT2_Core_mux_83Yie_U793(
    .din0(grp_SubArray2D_fu_470_ap_return_1),
    .din1(dog_pyr_cols_s_reg_292),
    .din2(dog_pyr_cols_s_reg_292),
    .din3(dog_pyr_cols_s_reg_292),
    .din4(dog_pyr_cols_s_reg_292),
    .din5(dog_pyr_cols_s_reg_292),
    .din6(dog_pyr_cols_s_reg_292),
    .din7(dog_pyr_cols_s_reg_292),
    .din8(i_reg_442),
    .dout(dog_pyr_cols_be_fu_1086_p10)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_0_preg <= 32'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_502_p2 == 1'd1))) begin
            ap_return_0_preg <= dog_pyr_0_rows_writ_fu_750_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= 32'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_502_p2 == 1'd1))) begin
            ap_return_1_preg <= dog_pyr_1_rows_writ_fu_757_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_2_preg <= 32'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_502_p2 == 1'd1))) begin
            ap_return_2_preg <= dog_pyr_2_rows_writ_fu_764_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_3_preg <= 32'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_502_p2 == 1'd1))) begin
            ap_return_3_preg <= dog_pyr_3_rows_writ_fu_771_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_4_preg <= 32'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_502_p2 == 1'd1))) begin
            ap_return_4_preg <= dog_pyr_4_rows_writ_fu_778_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_5_preg <= 32'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_502_p2 == 1'd1))) begin
            ap_return_5_preg <= dog_pyr_0_cols_writ_fu_785_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_6_preg <= 32'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_502_p2 == 1'd1))) begin
            ap_return_6_preg <= dog_pyr_1_cols_writ_fu_792_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_7_preg <= 32'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_502_p2 == 1'd1))) begin
            ap_return_7_preg <= dog_pyr_2_cols_writ_fu_799_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_8_preg <= 32'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_502_p2 == 1'd1))) begin
            ap_return_8_preg <= dog_pyr_3_cols_writ_fu_806_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_9_preg <= 32'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_502_p2 == 1'd1))) begin
            ap_return_9_preg <= dog_pyr_4_cols_writ_fu_813_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_SubArray2D_fu_470_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_502_p2 == 1'd0))) begin
            grp_SubArray2D_fu_470_ap_start_reg <= 1'b1;
        end else if ((grp_SubArray2D_fu_470_ap_ready == 1'b1)) begin
            grp_SubArray2D_fu_470_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_502_p2 == 1'd0))) begin
        if ((ap_phi_mux_i_phi_fu_446_p4 == 3'd0)) begin
            gauss_pyr_rows_addr6_reg_454 <= gauss_pyr_1_rows_read;
        end else if ((1'b1 == ap_condition_884)) begin
            gauss_pyr_rows_addr6_reg_454 <= gauss_pyr_5_rows_read;
        end else if ((ap_phi_mux_i_phi_fu_446_p4 == 3'd3)) begin
            gauss_pyr_rows_addr6_reg_454 <= gauss_pyr_4_rows_read;
        end else if ((ap_phi_mux_i_phi_fu_446_p4 == 3'd2)) begin
            gauss_pyr_rows_addr6_reg_454 <= gauss_pyr_3_rows_read;
        end else if ((ap_phi_mux_i_phi_fu_446_p4 == 3'd1)) begin
            gauss_pyr_rows_addr6_reg_454 <= gauss_pyr_2_rows_read;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((grp_SubArray2D_fu_470_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        i_reg_442 <= i_19_reg_1214;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_442 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_SubArray2D_fu_470_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        write_flag1_reg_408 <= write_flag38_be_reg_1250;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag1_reg_408 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_SubArray2D_fu_470_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        write_flag2_reg_212 <= write_flag18_1_reg_1245;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag2_reg_212 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_SubArray2D_fu_470_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        write_flag3_reg_235 <= write_flag21_1_reg_1240;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag3_reg_235 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_SubArray2D_fu_470_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        write_flag4_reg_270 <= write_flag24_be_reg_1270;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag4_reg_270 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_SubArray2D_fu_470_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        write_flag5_reg_281 <= write_flag15_1_reg_1235;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag5_reg_281 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_SubArray2D_fu_470_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        write_flag6_reg_304 <= write_flag27_be_reg_1265;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag6_reg_304 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_SubArray2D_fu_470_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        write_flag7_reg_339 <= write_flag31_be_reg_1260;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag7_reg_339 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_SubArray2D_fu_470_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        write_flag8_reg_350 <= write_flag12_1_reg_1230;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag8_reg_350 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_SubArray2D_fu_470_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        write_flag9_reg_373 <= write_flag35_be_reg_1255;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag9_reg_373 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_SubArray2D_fu_470_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        write_flag_reg_419 <= write_flag_1_reg_1225;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag_reg_419 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_SubArray2D_fu_470_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        dog_pyr_cols24_s_reg_327 <= dog_pyr_cols24_be_fu_1064_p10;
        dog_pyr_cols2533_s_reg_361 <= dog_pyr_cols2533_be_fu_1042_p10;
        dog_pyr_cols26_s_reg_396 <= dog_pyr_cols26_be_fu_1020_p10;
        dog_pyr_cols27_s_reg_430 <= dog_pyr_cols27_be_fu_998_p10;
        dog_pyr_cols_s_reg_292 <= dog_pyr_cols_be_fu_1086_p10;
        dog_pyr_rows20_s_reg_315 <= dog_pyr_rows20_1_fu_906_p10;
        dog_pyr_rows21_s_reg_246 <= dog_pyr_rows21_1_fu_950_p10;
        dog_pyr_rows22_s_reg_223 <= dog_pyr_rows22_1_fu_972_p10;
        dog_pyr_rows23_s_reg_258 <= dog_pyr_rows23_1_fu_928_p10;
        dog_pyr_rows_s_reg_384 <= dog_pyr_rows_1_fu_884_p10;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_502_p2 == 1'd0))) begin
        gauss_pyr_cols_addr9_reg_1220 <= gauss_pyr_cols_addr9_fu_515_p10;
        write_flag12_1_reg_1230 <= write_flag12_1_fu_552_p10;
        write_flag15_1_reg_1235 <= write_flag15_1_fu_574_p10;
        write_flag18_1_reg_1245 <= write_flag18_1_fu_618_p10;
        write_flag21_1_reg_1240 <= write_flag21_1_fu_596_p10;
        write_flag24_be_reg_1270 <= write_flag24_be_fu_728_p10;
        write_flag27_be_reg_1265 <= write_flag27_be_fu_706_p10;
        write_flag31_be_reg_1260 <= write_flag31_be_fu_684_p10;
        write_flag35_be_reg_1255 <= write_flag35_be_fu_662_p10;
        write_flag38_be_reg_1250 <= write_flag38_be_fu_640_p10;
        write_flag_1_reg_1225 <= write_flag_1_fu_530_p10;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_19_reg_1214 <= i_19_fu_508_p2;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_502_p2 == 1'd1)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_502_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_502_p2 == 1'd1))) begin
        ap_return_0 = dog_pyr_0_rows_writ_fu_750_p3;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_502_p2 == 1'd1))) begin
        ap_return_1 = dog_pyr_1_rows_writ_fu_757_p3;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_502_p2 == 1'd1))) begin
        ap_return_2 = dog_pyr_2_rows_writ_fu_764_p3;
    end else begin
        ap_return_2 = ap_return_2_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_502_p2 == 1'd1))) begin
        ap_return_3 = dog_pyr_3_rows_writ_fu_771_p3;
    end else begin
        ap_return_3 = ap_return_3_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_502_p2 == 1'd1))) begin
        ap_return_4 = dog_pyr_4_rows_writ_fu_778_p3;
    end else begin
        ap_return_4 = ap_return_4_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_502_p2 == 1'd1))) begin
        ap_return_5 = dog_pyr_0_cols_writ_fu_785_p3;
    end else begin
        ap_return_5 = ap_return_5_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_502_p2 == 1'd1))) begin
        ap_return_6 = dog_pyr_1_cols_writ_fu_792_p3;
    end else begin
        ap_return_6 = ap_return_6_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_502_p2 == 1'd1))) begin
        ap_return_7 = dog_pyr_2_cols_writ_fu_799_p3;
    end else begin
        ap_return_7 = ap_return_7_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_502_p2 == 1'd1))) begin
        ap_return_8 = dog_pyr_3_cols_writ_fu_806_p3;
    end else begin
        ap_return_8 = ap_return_8_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_502_p2 == 1'd1))) begin
        ap_return_9 = dog_pyr_4_cols_writ_fu_813_p3;
    end else begin
        ap_return_9 = ap_return_9_preg;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_502_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((grp_SubArray2D_fu_470_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

always @ (*) begin
    ap_condition_884 = (~(ap_phi_mux_i_phi_fu_446_p4 == 3'd0) & ~(ap_phi_mux_i_phi_fu_446_p4 == 3'd3) & ~(ap_phi_mux_i_phi_fu_446_p4 == 3'd2) & ~(ap_phi_mux_i_phi_fu_446_p4 == 3'd1));
end

assign ap_phi_mux_i_phi_fu_446_p4 = i_reg_442;

assign dog_pyr_0_cols_writ_fu_785_p3 = ((write_flag4_reg_270[0:0] === 1'b1) ? dog_pyr_cols_s_reg_292 : dog_pyr_0_cols_read);

assign dog_pyr_0_rows_writ_fu_750_p3 = ((write_flag_reg_419[0:0] === 1'b1) ? dog_pyr_rows_s_reg_384 : dog_pyr_0_rows_read);

assign dog_pyr_0_val_V_address0 = grp_SubArray2D_fu_470_dst_0_val_V_address0;

assign dog_pyr_0_val_V_ce0 = grp_SubArray2D_fu_470_dst_0_val_V_ce0;

assign dog_pyr_0_val_V_d0 = grp_SubArray2D_fu_470_dst_0_val_V_d0;

assign dog_pyr_0_val_V_we0 = grp_SubArray2D_fu_470_dst_0_val_V_we0;

assign dog_pyr_1_cols_writ_fu_792_p3 = ((write_flag6_reg_304[0:0] === 1'b1) ? dog_pyr_cols24_s_reg_327 : dog_pyr_1_cols_read);

assign dog_pyr_1_rows_writ_fu_757_p3 = ((write_flag8_reg_350[0:0] === 1'b1) ? dog_pyr_rows20_s_reg_315 : dog_pyr_1_rows_read);

assign dog_pyr_1_val_V_address0 = grp_SubArray2D_fu_470_dst_1_val_V_address0;

assign dog_pyr_1_val_V_ce0 = grp_SubArray2D_fu_470_dst_1_val_V_ce0;

assign dog_pyr_1_val_V_d0 = grp_SubArray2D_fu_470_dst_1_val_V_d0;

assign dog_pyr_1_val_V_we0 = grp_SubArray2D_fu_470_dst_1_val_V_we0;

assign dog_pyr_2_cols_writ_fu_799_p3 = ((write_flag7_reg_339[0:0] === 1'b1) ? dog_pyr_cols2533_s_reg_361 : dog_pyr_2_cols_read);

assign dog_pyr_2_rows_writ_fu_764_p3 = ((write_flag5_reg_281[0:0] === 1'b1) ? dog_pyr_rows21_s_reg_246 : dog_pyr_2_rows_read);

assign dog_pyr_2_val_V_address0 = grp_SubArray2D_fu_470_dst_2_val_V_address0;

assign dog_pyr_2_val_V_ce0 = grp_SubArray2D_fu_470_dst_2_val_V_ce0;

assign dog_pyr_2_val_V_d0 = grp_SubArray2D_fu_470_dst_2_val_V_d0;

assign dog_pyr_2_val_V_we0 = grp_SubArray2D_fu_470_dst_2_val_V_we0;

assign dog_pyr_3_cols_writ_fu_806_p3 = ((write_flag9_reg_373[0:0] === 1'b1) ? dog_pyr_cols26_s_reg_396 : dog_pyr_3_cols_read);

assign dog_pyr_3_rows_writ_fu_771_p3 = ((write_flag2_reg_212[0:0] === 1'b1) ? dog_pyr_rows22_s_reg_223 : dog_pyr_3_rows_read);

assign dog_pyr_3_val_V_address0 = grp_SubArray2D_fu_470_dst_3_val_V_address0;

assign dog_pyr_3_val_V_ce0 = grp_SubArray2D_fu_470_dst_3_val_V_ce0;

assign dog_pyr_3_val_V_d0 = grp_SubArray2D_fu_470_dst_3_val_V_d0;

assign dog_pyr_3_val_V_we0 = grp_SubArray2D_fu_470_dst_3_val_V_we0;

assign dog_pyr_4_cols_writ_fu_813_p3 = ((write_flag1_reg_408[0:0] === 1'b1) ? dog_pyr_cols27_s_reg_430 : dog_pyr_4_cols_read);

assign dog_pyr_4_rows_writ_fu_778_p3 = ((write_flag3_reg_235[0:0] === 1'b1) ? dog_pyr_rows23_s_reg_258 : dog_pyr_4_rows_read);

assign dog_pyr_4_val_V_address0 = grp_SubArray2D_fu_470_dst_4_val_V_address0;

assign dog_pyr_4_val_V_ce0 = grp_SubArray2D_fu_470_dst_4_val_V_ce0;

assign dog_pyr_4_val_V_d0 = grp_SubArray2D_fu_470_dst_4_val_V_d0;

assign dog_pyr_4_val_V_we0 = grp_SubArray2D_fu_470_dst_4_val_V_we0;

assign exitcond_fu_502_p2 = ((i_reg_442 == 3'd5) ? 1'b1 : 1'b0);

assign gauss_pyr_0_val_V_address0 = grp_SubArray2D_fu_470_src1_0_val_V_address0;

assign gauss_pyr_0_val_V_ce0 = grp_SubArray2D_fu_470_src1_0_val_V_ce0;

assign gauss_pyr_1_val_V_address0 = grp_SubArray2D_fu_470_src0_1_val_V_address0;

assign gauss_pyr_1_val_V_ce0 = grp_SubArray2D_fu_470_src0_1_val_V_ce0;

assign gauss_pyr_2_val_V_address0 = grp_SubArray2D_fu_470_src0_2_val_V_address0;

assign gauss_pyr_2_val_V_ce0 = grp_SubArray2D_fu_470_src0_2_val_V_ce0;

assign gauss_pyr_3_val_V_address0 = grp_SubArray2D_fu_470_src0_3_val_V_address0;

assign gauss_pyr_3_val_V_ce0 = grp_SubArray2D_fu_470_src0_3_val_V_ce0;

assign gauss_pyr_4_val_V_address0 = grp_SubArray2D_fu_470_src0_4_val_V_address0;

assign gauss_pyr_4_val_V_ce0 = grp_SubArray2D_fu_470_src0_4_val_V_ce0;

assign gauss_pyr_5_val_V_address0 = grp_SubArray2D_fu_470_src0_5_val_V_address0;

assign gauss_pyr_5_val_V_ce0 = grp_SubArray2D_fu_470_src0_5_val_V_ce0;

assign gauss_pyr_cols_addr9_fu_515_p9 = (i_reg_442 + 3'd1);

assign grp_SubArray2D_fu_470_ap_start = grp_SubArray2D_fu_470_ap_start_reg;

assign i_19_fu_508_p2 = (i_reg_442 + 3'd1);

endmodule //buildDoGPyramid
