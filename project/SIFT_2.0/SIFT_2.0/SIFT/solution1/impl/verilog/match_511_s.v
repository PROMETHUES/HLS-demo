// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module match_511_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        descriptors0_val_val_address0,
        descriptors0_val_val_ce0,
        descriptors0_val_val_q0,
        descriptors0_length_read,
        descriptors1_val_val_address0,
        descriptors1_val_val_ce0,
        descriptors1_val_val_q0,
        descriptors1_length_read,
        thresh_V,
        matches_val_idx0_address0,
        matches_val_idx0_ce0,
        matches_val_idx0_we0,
        matches_val_idx0_d0,
        matches_val_idx1_address0,
        matches_val_idx1_ce0,
        matches_val_idx1_we0,
        matches_val_idx1_d0,
        matches_length_read,
        ap_return
);

parameter    ap_ST_fsm_state1 = 10'd1;
parameter    ap_ST_fsm_state2 = 10'd2;
parameter    ap_ST_fsm_state3 = 10'd4;
parameter    ap_ST_fsm_pp0_stage0 = 10'd8;
parameter    ap_ST_fsm_state6 = 10'd16;
parameter    ap_ST_fsm_state7 = 10'd32;
parameter    ap_ST_fsm_state8 = 10'd64;
parameter    ap_ST_fsm_pp1_stage0 = 10'd128;
parameter    ap_ST_fsm_state11 = 10'd256;
parameter    ap_ST_fsm_state12 = 10'd512;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [15:0] descriptors0_val_val_address0;
output   descriptors0_val_val_ce0;
input  [7:0] descriptors0_val_val_q0;
input  [31:0] descriptors0_length_read;
output  [15:0] descriptors1_val_val_address0;
output   descriptors1_val_val_ce0;
input  [7:0] descriptors1_val_val_q0;
input  [31:0] descriptors1_length_read;
input  [31:0] thresh_V;
output  [8:0] matches_val_idx0_address0;
output   matches_val_idx0_ce0;
output   matches_val_idx0_we0;
output  [15:0] matches_val_idx0_d0;
output  [8:0] matches_val_idx1_address0;
output   matches_val_idx1_ce0;
output   matches_val_idx1_we0;
output  [15:0] matches_val_idx1_d0;
input  [0:0] matches_length_read;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[15:0] descriptors0_val_val_address0;
reg descriptors0_val_val_ce0;
reg[15:0] descriptors1_val_val_address0;
reg descriptors1_val_val_ce0;
reg[8:0] matches_val_idx0_address0;
reg matches_val_idx0_ce0;
reg matches_val_idx0_we0;
reg[15:0] matches_val_idx0_d0;
reg[8:0] matches_val_idx1_address0;
reg matches_val_idx1_ce0;
reg matches_val_idx1_we0;
reg[15:0] matches_val_idx1_d0;
reg[31:0] ap_return;

(* fsm_encoding = "none" *) reg   [9:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg  signed [23:0] min_dist1_3_reg_237;
reg   [7:0] k_reg_249;
reg  signed [23:0] min_dist1_5_reg_319;
reg   [7:0] k2_reg_331;
wire  signed [63:0] OP1_V_fu_364_p1;
reg  signed [63:0] OP1_V_reg_818;
reg  signed [31:0] vector_length_read_a_reg_832;
wire    ap_CS_fsm_state2;
wire   [30:0] i_3_fu_382_p2;
reg   [30:0] i_3_reg_842;
wire   [16:0] tmp_126_cast_fu_392_p3;
reg   [16:0] tmp_126_cast_reg_847;
wire   [0:0] tmp_119_fu_377_p2;
wire   [31:0] min_idx_2_cast_fu_400_p1;
reg   [31:0] min_idx_2_cast_reg_852;
wire    ap_CS_fsm_state3;
wire   [0:0] tmp_121_fu_404_p2;
wire   [30:0] j_1_fu_409_p2;
reg   [30:0] j_1_reg_861;
wire   [16:0] tmp_134_cast_fu_419_p3;
reg   [16:0] tmp_134_cast_reg_866;
wire   [0:0] exitcond7_fu_479_p2;
reg   [0:0] exitcond7_reg_874;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state4_pp0_stage0_iter0;
wire    ap_block_state5_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [7:0] k_3_fu_485_p2;
reg    ap_enable_reg_pp0_iter0;
wire  signed [23:0] grp_fu_787_p3;
reg    ap_enable_reg_pp0_iter1;
wire   [31:0] min_dist0_1_fu_557_p3;
wire    ap_CS_fsm_state6;
wire   [31:0] min_dist1_2_fu_565_p3;
wire   [31:0] min_idx_1_fu_573_p3;
reg  signed [31:0] vector_length_read_a_2_reg_913;
wire    ap_CS_fsm_state7;
wire   [30:0] i_2_fu_589_p2;
reg   [30:0] i_2_reg_923;
wire   [16:0] tmp_124_cast_fu_599_p3;
reg   [16:0] tmp_124_cast_reg_928;
wire   [0:0] tmp_s_fu_584_p2;
wire   [31:0] min_idx_cast_fu_607_p1;
reg   [31:0] min_idx_cast_reg_933;
wire    ap_CS_fsm_state8;
wire   [0:0] tmp_120_fu_611_p2;
wire   [30:0] j_fu_616_p2;
reg   [30:0] j_reg_942;
wire   [16:0] tmp_129_cast_fu_626_p3;
reg   [16:0] tmp_129_cast_reg_947;
wire   [0:0] exitcond_fu_686_p2;
reg   [0:0] exitcond_reg_955;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state9_pp1_stage0_iter0;
wire    ap_block_state10_pp1_stage0_iter1;
wire    ap_block_pp1_stage0_11001;
wire   [7:0] k_2_fu_692_p2;
reg    ap_enable_reg_pp1_iter0;
wire  signed [23:0] grp_fu_795_p3;
reg    ap_enable_reg_pp1_iter1;
wire   [31:0] min_dist07_1_fu_764_p3;
wire    ap_CS_fsm_state11;
wire   [31:0] min_dist18_2_fu_772_p3;
wire   [31:0] min_idx9_1_fu_780_p3;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state4;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state9;
reg   [30:0] i_reg_178;
wire   [0:0] tmp_fu_358_p2;
reg   [31:0] min_dist1_reg_190;
reg  signed [31:0] i_op_assign_2_reg_202;
reg   [31:0] min_idx1_reg_214;
reg   [30:0] min_idx_2_reg_226;
wire    ap_block_pp0_stage0;
reg   [30:0] i5_reg_260;
reg   [31:0] min_dist1_4_reg_272;
reg  signed [31:0] i_op_assign_reg_284;
reg   [31:0] min_idx9_reg_296;
reg   [30:0] min_idx_reg_308;
wire    ap_block_pp1_stage0;
reg   [31:0] matches_length_4_reg_342;
wire  signed [63:0] tmp_i_fu_469_p1;
wire   [0:0] tmp_127_fu_448_p2;
wire   [63:0] tmp_149_cast_fu_500_p1;
wire   [63:0] tmp_150_cast_fu_510_p1;
wire  signed [63:0] tmp_i8_fu_676_p1;
wire   [0:0] tmp_124_fu_655_p2;
wire   [63:0] tmp_142_cast_fu_707_p1;
wire   [63:0] tmp_143_cast_fu_717_p1;
reg   [31:0] vector_length_read_a_1_fu_66;
wire   [31:0] matches_length_read_s_fu_354_p1;
wire   [31:0] vector_length_write_s_fu_464_p2;
wire   [31:0] vector_length_write_1_fu_671_p2;
wire   [15:0] p_match_idx0_1_fu_454_p1;
wire   [15:0] p_match_idx0_fu_666_p1;
wire   [15:0] p_match_idx1_1_fu_459_p1;
wire   [15:0] p_match_idx1_fu_661_p1;
wire   [31:0] i_cast_fu_373_p1;
wire   [9:0] tmp_155_fu_388_p1;
wire   [9:0] tmp_157_fu_415_p1;
wire  signed [31:0] r_V_2_fu_431_p0;
wire  signed [31:0] r_V_2_fu_431_p1;
wire   [47:0] tmp_125_fu_436_p3;
wire  signed [63:0] tmp_126_fu_444_p1;
wire   [63:0] r_V_2_fu_431_p2;
wire   [16:0] tmp_148_cast_fu_491_p1;
wire   [16:0] tmp_137_fu_495_p2;
wire   [16:0] tmp_138_fu_505_p2;
wire   [8:0] tmp_250_cast_fu_515_p1;
wire   [8:0] tmp_251_cast_fu_519_p1;
wire   [8:0] delta_1_fu_523_p2;
wire  signed [31:0] min_dist1_3_cast_fu_533_p1;
wire   [0:0] tmp_135_fu_543_p2;
wire   [0:0] tmp_134_fu_537_p2;
wire   [31:0] dist_0_s_fu_549_p3;
wire   [31:0] i5_cast_fu_580_p1;
wire   [9:0] tmp_154_fu_595_p1;
wire   [9:0] tmp_156_fu_622_p1;
wire  signed [31:0] r_V_fu_638_p0;
wire  signed [31:0] r_V_fu_638_p1;
wire   [47:0] tmp_122_fu_643_p3;
wire  signed [63:0] tmp_123_fu_651_p1;
wire   [63:0] r_V_fu_638_p2;
wire   [16:0] tmp_141_cast_fu_698_p1;
wire   [16:0] tmp_131_fu_702_p2;
wire   [16:0] tmp_132_fu_712_p2;
wire   [8:0] tmp_245_cast_fu_722_p1;
wire   [8:0] tmp_246_cast_fu_726_p1;
wire   [8:0] delta_fu_730_p2;
wire  signed [31:0] min_dist1_5_cast_fu_740_p1;
wire   [0:0] tmp_129_fu_750_p2;
wire   [0:0] tmp_128_fu_744_p2;
wire   [31:0] dist12_0_s_fu_756_p3;
wire  signed [8:0] grp_fu_787_p0;
wire  signed [17:0] delta_1_cast_fu_529_p1;
wire  signed [8:0] grp_fu_787_p1;
wire  signed [8:0] grp_fu_795_p0;
wire  signed [17:0] delta_cast_fu_736_p1;
wire  signed [8:0] grp_fu_795_p1;
reg   [31:0] ap_return_preg;
wire    ap_CS_fsm_state12;
reg   [9:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;

// power-on initialization
initial begin
#0 ap_CS_fsm = 10'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_return_preg = 32'd0;
end

SIFT2_Core_mac_mubFp #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
SIFT2_Core_mac_mubFp_U1084(
    .din0(grp_fu_787_p0),
    .din1(grp_fu_787_p1),
    .din2(min_dist1_3_reg_237),
    .dout(grp_fu_787_p3)
);

SIFT2_Core_mac_mubFp #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
SIFT2_Core_mac_mubFp_U1085(
    .din0(grp_fu_795_p0),
    .din1(grp_fu_795_p1),
    .din2(min_dist1_5_reg_319),
    .dout(grp_fu_795_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state4) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((tmp_121_fu_404_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state4))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state4);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((tmp_121_fu_404_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state9) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((tmp_120_fu_611_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state9))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state9);
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if (((tmp_120_fu_611_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state12)) begin
            ap_return_preg <= matches_length_4_reg_342;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_fu_358_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i5_reg_260 <= 31'd0;
    end else if (((1'b1 == ap_CS_fsm_state8) & (tmp_120_fu_611_p2 == 1'd0))) begin
        i5_reg_260 <= i_2_reg_923;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        i_op_assign_2_reg_202 <= min_dist1_2_fu_565_p3;
    end else if (((tmp_119_fu_377_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        i_op_assign_2_reg_202 <= 32'd2147483647;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        i_op_assign_reg_284 <= min_dist18_2_fu_772_p3;
    end else if (((tmp_s_fu_584_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        i_op_assign_reg_284 <= 32'd2147483647;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (tmp_fu_358_p2 == 1'd0))) begin
        i_reg_178 <= 31'd0;
    end else if (((tmp_121_fu_404_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        i_reg_178 <= i_3_reg_842;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (exitcond_fu_686_p2 == 1'd0))) begin
        k2_reg_331 <= k_2_fu_692_p2;
    end else if (((tmp_120_fu_611_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        k2_reg_331 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond7_fu_479_p2 == 1'd0))) begin
        k_reg_249 <= k_3_fu_485_p2;
    end else if (((tmp_121_fu_404_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        k_reg_249 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond7_reg_874 == 1'd0))) begin
        min_dist1_3_reg_237 <= grp_fu_787_p3;
    end else if (((tmp_121_fu_404_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        min_dist1_3_reg_237 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        min_dist1_4_reg_272 <= min_dist07_1_fu_764_p3;
    end else if (((tmp_s_fu_584_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        min_dist1_4_reg_272 <= 32'd2147483647;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (exitcond_reg_955 == 1'd0))) begin
        min_dist1_5_reg_319 <= grp_fu_795_p3;
    end else if (((tmp_120_fu_611_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        min_dist1_5_reg_319 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        min_dist1_reg_190 <= min_dist0_1_fu_557_p3;
    end else if (((tmp_119_fu_377_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        min_dist1_reg_190 <= 32'd2147483647;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        min_idx1_reg_214 <= min_idx_1_fu_573_p3;
    end else if (((tmp_119_fu_377_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        min_idx1_reg_214 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        min_idx9_reg_296 <= min_idx9_1_fu_780_p3;
    end else if (((tmp_s_fu_584_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        min_idx9_reg_296 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        min_idx_2_reg_226 <= j_1_reg_861;
    end else if (((tmp_119_fu_377_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        min_idx_2_reg_226 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        min_idx_reg_308 <= j_reg_942;
    end else if (((tmp_s_fu_584_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        min_idx_reg_308 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_124_fu_655_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8) & (tmp_120_fu_611_p2 == 1'd0))) begin
        vector_length_read_a_1_fu_66 <= vector_length_write_1_fu_671_p2;
    end else if (((tmp_121_fu_404_p2 == 1'd0) & (tmp_127_fu_448_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        vector_length_read_a_1_fu_66 <= vector_length_write_s_fu_464_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        vector_length_read_a_1_fu_66 <= matches_length_read_s_fu_354_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        OP1_V_reg_818 <= OP1_V_fu_364_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exitcond7_reg_874 <= exitcond7_fu_479_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        exitcond_reg_955 <= exitcond_fu_686_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        i_2_reg_923 <= i_2_fu_589_p2;
        vector_length_read_a_2_reg_913 <= vector_length_read_a_1_fu_66;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_3_reg_842 <= i_3_fu_382_p2;
        vector_length_read_a_reg_832 <= vector_length_read_a_1_fu_66;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        j_1_reg_861 <= j_1_fu_409_p2;
        min_idx_2_cast_reg_852[30 : 0] <= min_idx_2_cast_fu_400_p1[30 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        j_reg_942 <= j_fu_616_p2;
        min_idx_cast_reg_933[30 : 0] <= min_idx_cast_fu_607_p1[30 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((((tmp_119_fu_377_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((1'b1 == ap_CS_fsm_state7) & (tmp_s_fu_584_p2 == 1'd0)))) begin
        matches_length_4_reg_342 <= vector_length_read_a_1_fu_66;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_s_fu_584_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        tmp_124_cast_reg_928[16 : 7] <= tmp_124_cast_fu_599_p3[16 : 7];
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_119_fu_377_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_126_cast_reg_847[16 : 7] <= tmp_126_cast_fu_392_p3[16 : 7];
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_120_fu_611_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        tmp_129_cast_reg_947[16 : 7] <= tmp_129_cast_fu_626_p3[16 : 7];
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_121_fu_404_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_134_cast_reg_866[16 : 7] <= tmp_134_cast_fu_419_p3[16 : 7];
    end
end

always @ (*) begin
    if ((exitcond7_fu_479_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state4 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state4 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_fu_686_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state9 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state9 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ap_return = matches_length_4_reg_342;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        descriptors0_val_val_address0 = tmp_142_cast_fu_707_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        descriptors0_val_val_address0 = tmp_149_cast_fu_500_p1;
    end else begin
        descriptors0_val_val_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        descriptors0_val_val_ce0 = 1'b1;
    end else begin
        descriptors0_val_val_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        descriptors1_val_val_address0 = tmp_143_cast_fu_717_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        descriptors1_val_val_address0 = tmp_150_cast_fu_510_p1;
    end else begin
        descriptors1_val_val_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        descriptors1_val_val_ce0 = 1'b1;
    end else begin
        descriptors1_val_val_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        matches_val_idx0_address0 = tmp_i8_fu_676_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        matches_val_idx0_address0 = tmp_i_fu_469_p1;
    end else begin
        matches_val_idx0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state8))) begin
        matches_val_idx0_ce0 = 1'b1;
    end else begin
        matches_val_idx0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        matches_val_idx0_d0 = p_match_idx0_fu_666_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        matches_val_idx0_d0 = p_match_idx0_1_fu_454_p1;
    end else begin
        matches_val_idx0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_121_fu_404_p2 == 1'd0) & (tmp_127_fu_448_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3)) | ((tmp_124_fu_655_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8) & (tmp_120_fu_611_p2 == 1'd0)))) begin
        matches_val_idx0_we0 = 1'b1;
    end else begin
        matches_val_idx0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        matches_val_idx1_address0 = tmp_i8_fu_676_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        matches_val_idx1_address0 = tmp_i_fu_469_p1;
    end else begin
        matches_val_idx1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state8))) begin
        matches_val_idx1_ce0 = 1'b1;
    end else begin
        matches_val_idx1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        matches_val_idx1_d0 = p_match_idx1_fu_661_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        matches_val_idx1_d0 = p_match_idx1_1_fu_459_p1;
    end else begin
        matches_val_idx1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_121_fu_404_p2 == 1'd0) & (tmp_127_fu_448_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3)) | ((tmp_124_fu_655_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8) & (tmp_120_fu_611_p2 == 1'd0)))) begin
        matches_val_idx1_we0 = 1'b1;
    end else begin
        matches_val_idx1_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((tmp_fu_358_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (tmp_fu_358_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((tmp_119_fu_377_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((tmp_121_fu_404_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((exitcond7_fu_479_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((exitcond7_fu_479_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (tmp_s_fu_584_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (tmp_120_fu_611_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((exitcond_fu_686_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((exitcond_fu_686_p2 == 1'd1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign OP1_V_fu_364_p1 = $signed(thresh_V);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd6];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign delta_1_cast_fu_529_p1 = $signed(delta_1_fu_523_p2);

assign delta_1_fu_523_p2 = (tmp_250_cast_fu_515_p1 - tmp_251_cast_fu_519_p1);

assign delta_cast_fu_736_p1 = $signed(delta_fu_730_p2);

assign delta_fu_730_p2 = (tmp_245_cast_fu_722_p1 - tmp_246_cast_fu_726_p1);

assign dist12_0_s_fu_756_p3 = ((tmp_129_fu_750_p2[0:0] === 1'b1) ? min_dist1_5_cast_fu_740_p1 : i_op_assign_reg_284);

assign dist_0_s_fu_549_p3 = ((tmp_135_fu_543_p2[0:0] === 1'b1) ? min_dist1_3_cast_fu_533_p1 : i_op_assign_2_reg_202);

assign exitcond7_fu_479_p2 = ((k_reg_249 == 8'd128) ? 1'b1 : 1'b0);

assign exitcond_fu_686_p2 = ((k2_reg_331 == 8'd128) ? 1'b1 : 1'b0);

assign grp_fu_787_p0 = delta_1_cast_fu_529_p1;

assign grp_fu_787_p1 = delta_1_cast_fu_529_p1;

assign grp_fu_795_p0 = delta_cast_fu_736_p1;

assign grp_fu_795_p1 = delta_cast_fu_736_p1;

assign i5_cast_fu_580_p1 = i5_reg_260;

assign i_2_fu_589_p2 = (i5_reg_260 + 31'd1);

assign i_3_fu_382_p2 = (i_reg_178 + 31'd1);

assign i_cast_fu_373_p1 = i_reg_178;

assign j_1_fu_409_p2 = (min_idx_2_reg_226 + 31'd1);

assign j_fu_616_p2 = (min_idx_reg_308 + 31'd1);

assign k_2_fu_692_p2 = (k2_reg_331 + 8'd1);

assign k_3_fu_485_p2 = (k_reg_249 + 8'd1);

assign matches_length_read_s_fu_354_p1 = matches_length_read;

assign min_dist07_1_fu_764_p3 = ((tmp_128_fu_744_p2[0:0] === 1'b1) ? min_dist1_5_cast_fu_740_p1 : min_dist1_4_reg_272);

assign min_dist0_1_fu_557_p3 = ((tmp_134_fu_537_p2[0:0] === 1'b1) ? min_dist1_3_cast_fu_533_p1 : min_dist1_reg_190);

assign min_dist18_2_fu_772_p3 = ((tmp_128_fu_744_p2[0:0] === 1'b1) ? min_dist1_4_reg_272 : dist12_0_s_fu_756_p3);

assign min_dist1_2_fu_565_p3 = ((tmp_134_fu_537_p2[0:0] === 1'b1) ? min_dist1_reg_190 : dist_0_s_fu_549_p3);

assign min_dist1_3_cast_fu_533_p1 = min_dist1_3_reg_237;

assign min_dist1_5_cast_fu_740_p1 = min_dist1_5_reg_319;

assign min_idx9_1_fu_780_p3 = ((tmp_128_fu_744_p2[0:0] === 1'b1) ? min_idx_cast_reg_933 : min_idx9_reg_296);

assign min_idx_1_fu_573_p3 = ((tmp_134_fu_537_p2[0:0] === 1'b1) ? min_idx_2_cast_reg_852 : min_idx1_reg_214);

assign min_idx_2_cast_fu_400_p1 = min_idx_2_reg_226;

assign min_idx_cast_fu_607_p1 = min_idx_reg_308;

assign p_match_idx0_1_fu_454_p1 = i_reg_178[15:0];

assign p_match_idx0_fu_666_p1 = min_idx9_reg_296[15:0];

assign p_match_idx1_1_fu_459_p1 = min_idx1_reg_214[15:0];

assign p_match_idx1_fu_661_p1 = i5_reg_260[15:0];

assign r_V_2_fu_431_p0 = OP1_V_reg_818;

assign r_V_2_fu_431_p1 = i_op_assign_2_reg_202;

assign r_V_2_fu_431_p2 = ($signed(r_V_2_fu_431_p0) * $signed(r_V_2_fu_431_p1));

assign r_V_fu_638_p0 = OP1_V_reg_818;

assign r_V_fu_638_p1 = i_op_assign_reg_284;

assign r_V_fu_638_p2 = ($signed(r_V_fu_638_p0) * $signed(r_V_fu_638_p1));

assign tmp_119_fu_377_p2 = (($signed(i_cast_fu_373_p1) < $signed(descriptors0_length_read)) ? 1'b1 : 1'b0);

assign tmp_120_fu_611_p2 = (($signed(min_idx_cast_fu_607_p1) < $signed(descriptors0_length_read)) ? 1'b1 : 1'b0);

assign tmp_121_fu_404_p2 = (($signed(min_idx_2_cast_fu_400_p1) < $signed(descriptors1_length_read)) ? 1'b1 : 1'b0);

assign tmp_122_fu_643_p3 = {{min_dist1_4_reg_272}, {16'd0}};

assign tmp_123_fu_651_p1 = $signed(tmp_122_fu_643_p3);

assign tmp_124_cast_fu_599_p3 = {{tmp_154_fu_595_p1}, {7'd0}};

assign tmp_124_fu_655_p2 = (($signed(tmp_123_fu_651_p1) < $signed(r_V_fu_638_p2)) ? 1'b1 : 1'b0);

assign tmp_125_fu_436_p3 = {{min_dist1_reg_190}, {16'd0}};

assign tmp_126_cast_fu_392_p3 = {{tmp_155_fu_388_p1}, {7'd0}};

assign tmp_126_fu_444_p1 = $signed(tmp_125_fu_436_p3);

assign tmp_127_fu_448_p2 = (($signed(tmp_126_fu_444_p1) < $signed(r_V_2_fu_431_p2)) ? 1'b1 : 1'b0);

assign tmp_128_fu_744_p2 = (($signed(min_dist1_5_cast_fu_740_p1) < $signed(min_dist1_4_reg_272)) ? 1'b1 : 1'b0);

assign tmp_129_cast_fu_626_p3 = {{tmp_156_fu_622_p1}, {7'd0}};

assign tmp_129_fu_750_p2 = (($signed(min_dist1_5_cast_fu_740_p1) < $signed(i_op_assign_reg_284)) ? 1'b1 : 1'b0);

assign tmp_131_fu_702_p2 = (tmp_129_cast_reg_947 + tmp_141_cast_fu_698_p1);

assign tmp_132_fu_712_p2 = (tmp_124_cast_reg_928 + tmp_141_cast_fu_698_p1);

assign tmp_134_cast_fu_419_p3 = {{tmp_157_fu_415_p1}, {7'd0}};

assign tmp_134_fu_537_p2 = (($signed(min_dist1_3_cast_fu_533_p1) < $signed(min_dist1_reg_190)) ? 1'b1 : 1'b0);

assign tmp_135_fu_543_p2 = (($signed(min_dist1_3_cast_fu_533_p1) < $signed(i_op_assign_2_reg_202)) ? 1'b1 : 1'b0);

assign tmp_137_fu_495_p2 = (tmp_126_cast_reg_847 + tmp_148_cast_fu_491_p1);

assign tmp_138_fu_505_p2 = (tmp_134_cast_reg_866 + tmp_148_cast_fu_491_p1);

assign tmp_141_cast_fu_698_p1 = k2_reg_331;

assign tmp_142_cast_fu_707_p1 = tmp_131_fu_702_p2;

assign tmp_143_cast_fu_717_p1 = tmp_132_fu_712_p2;

assign tmp_148_cast_fu_491_p1 = k_reg_249;

assign tmp_149_cast_fu_500_p1 = tmp_137_fu_495_p2;

assign tmp_150_cast_fu_510_p1 = tmp_138_fu_505_p2;

assign tmp_154_fu_595_p1 = i5_reg_260[9:0];

assign tmp_155_fu_388_p1 = i_reg_178[9:0];

assign tmp_156_fu_622_p1 = min_idx_reg_308[9:0];

assign tmp_157_fu_415_p1 = min_idx_2_reg_226[9:0];

assign tmp_245_cast_fu_722_p1 = descriptors1_val_val_q0;

assign tmp_246_cast_fu_726_p1 = descriptors0_val_val_q0;

assign tmp_250_cast_fu_515_p1 = descriptors0_val_val_q0;

assign tmp_251_cast_fu_519_p1 = descriptors1_val_val_q0;

assign tmp_fu_358_p2 = (($signed(descriptors0_length_read) > $signed(descriptors1_length_read)) ? 1'b1 : 1'b0);

assign tmp_i8_fu_676_p1 = vector_length_read_a_2_reg_913;

assign tmp_i_fu_469_p1 = vector_length_read_a_reg_832;

assign tmp_s_fu_584_p2 = (($signed(i5_cast_fu_580_p1) < $signed(descriptors1_length_read)) ? 1'b1 : 1'b0);

assign vector_length_write_1_fu_671_p2 = ($signed(32'd1) + $signed(vector_length_read_a_2_reg_913));

assign vector_length_write_s_fu_464_p2 = ($signed(32'd1) + $signed(vector_length_read_a_reg_832));

always @ (posedge ap_clk) begin
    tmp_126_cast_reg_847[6:0] <= 7'b0000000;
    min_idx_2_cast_reg_852[31] <= 1'b0;
    tmp_134_cast_reg_866[6:0] <= 7'b0000000;
    tmp_124_cast_reg_928[6:0] <= 7'b0000000;
    min_idx_cast_reg_933[31] <= 1'b0;
    tmp_129_cast_reg_947[6:0] <= 7'b0000000;
end

endmodule //match_511_s
