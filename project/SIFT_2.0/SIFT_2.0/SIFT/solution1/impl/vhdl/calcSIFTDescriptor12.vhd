-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity calcSIFTDescriptor12 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    img_0_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    img_0_val_V_ce0 : OUT STD_LOGIC;
    img_0_val_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    img_0_val_V_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    img_0_val_V_ce1 : OUT STD_LOGIC;
    img_0_val_V_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    img_1_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    img_1_val_V_ce0 : OUT STD_LOGIC;
    img_1_val_V_q0 : IN STD_LOGIC_VECTOR (25 downto 0);
    img_1_val_V_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    img_1_val_V_ce1 : OUT STD_LOGIC;
    img_1_val_V_q1 : IN STD_LOGIC_VECTOR (25 downto 0);
    img_2_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    img_2_val_V_ce0 : OUT STD_LOGIC;
    img_2_val_V_q0 : IN STD_LOGIC_VECTOR (25 downto 0);
    img_2_val_V_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    img_2_val_V_ce1 : OUT STD_LOGIC;
    img_2_val_V_q1 : IN STD_LOGIC_VECTOR (25 downto 0);
    img_3_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    img_3_val_V_ce0 : OUT STD_LOGIC;
    img_3_val_V_q0 : IN STD_LOGIC_VECTOR (25 downto 0);
    img_3_val_V_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    img_3_val_V_ce1 : OUT STD_LOGIC;
    img_3_val_V_q1 : IN STD_LOGIC_VECTOR (25 downto 0);
    img_4_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    img_4_val_V_ce0 : OUT STD_LOGIC;
    img_4_val_V_q0 : IN STD_LOGIC_VECTOR (25 downto 0);
    img_4_val_V_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    img_4_val_V_ce1 : OUT STD_LOGIC;
    img_4_val_V_q1 : IN STD_LOGIC_VECTOR (25 downto 0);
    img_5_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    img_5_val_V_ce0 : OUT STD_LOGIC;
    img_5_val_V_q0 : IN STD_LOGIC_VECTOR (25 downto 0);
    img_5_val_V_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    img_5_val_V_ce1 : OUT STD_LOGIC;
    img_5_val_V_q1 : IN STD_LOGIC_VECTOR (25 downto 0);
    img_val_V_offset : IN STD_LOGIC_VECTOR (7 downto 0);
    img_rows_read : IN STD_LOGIC_VECTOR (31 downto 0);
    img_cols_read : IN STD_LOGIC_VECTOR (31 downto 0);
    x0 : IN STD_LOGIC_VECTOR (31 downto 0);
    y0 : IN STD_LOGIC_VECTOR (31 downto 0);
    angle_V : IN STD_LOGIC_VECTOR (31 downto 0);
    sigma_V : IN STD_LOGIC_VECTOR (31 downto 0);
    descriptor_val_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    descriptor_val_ce0 : OUT STD_LOGIC;
    descriptor_val_we0 : OUT STD_LOGIC;
    descriptor_val_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    descriptor_val_offset : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of calcSIFTDescriptor12 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_pp1_stage1 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_pp1_stage2 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_pp1_stage3 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_pp1_stage4 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_pp1_stage5 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_pp1_stage6 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_pp1_stage7 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state86 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state89 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_pp3_stage0 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state93 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state94 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state95 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state96 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state97 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state98 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp4_stage0 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state102 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state103 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state104 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state105 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state106 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state107 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state108 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state109 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state110 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state111 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state112 : STD_LOGIC_VECTOR (66 downto 0) := "0000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state113 : STD_LOGIC_VECTOR (66 downto 0) := "0000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state114 : STD_LOGIC_VECTOR (66 downto 0) := "0000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state115 : STD_LOGIC_VECTOR (66 downto 0) := "0000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state116 : STD_LOGIC_VECTOR (66 downto 0) := "0000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state117 : STD_LOGIC_VECTOR (66 downto 0) := "0000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state118 : STD_LOGIC_VECTOR (66 downto 0) := "0000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state119 : STD_LOGIC_VECTOR (66 downto 0) := "0001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state120 : STD_LOGIC_VECTOR (66 downto 0) := "0010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp5_stage0 : STD_LOGIC_VECTOR (66 downto 0) := "0100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state124 : STD_LOGIC_VECTOR (66 downto 0) := "1000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_C0490FDA : STD_LOGIC_VECTOR (31 downto 0) := "11000000010010010000111111011010";
    constant ap_const_lv32_40400000 : STD_LOGIC_VECTOR (31 downto 0) := "01000000010000000000000000000000";
    constant ap_const_lv32_3F3504F3 : STD_LOGIC_VECTOR (31 downto 0) := "00111111001101010000010011110011";
    constant ap_const_lv32_40A00000 : STD_LOGIC_VECTOR (31 downto 0) := "01000000101000000000000000000000";
    constant ap_const_lv32_43340000 : STD_LOGIC_VECTOR (31 downto 0) := "01000011001101000000000000000000";
    constant ap_const_lv32_44000000 : STD_LOGIC_VECTOR (31 downto 0) := "01000100000000000000000000000000";
    constant ap_const_lv32_40490FDA : STD_LOGIC_VECTOR (31 downto 0) := "01000000010010010000111111011010";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv8_9E : STD_LOGIC_VECTOR (7 downto 0) := "10011110";
    constant ap_const_lv8_8E : STD_LOGIC_VECTOR (7 downto 0) := "10001110";
    constant ap_const_lv32_80000000 : STD_LOGIC_VECTOR (31 downto 0) := "10000000000000000000000000000000";
    constant ap_const_lv8_7E : STD_LOGIC_VECTOR (7 downto 0) := "01111110";
    constant ap_const_lv8_96 : STD_LOGIC_VECTOR (7 downto 0) := "10010110";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv23_7FFFFF : STD_LOGIC_VECTOR (22 downto 0) := "11111111111111111111111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv9_181 : STD_LOGIC_VECTOR (8 downto 0) := "110000001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_433 : STD_LOGIC_VECTOR (11 downto 0) := "010000110011";
    constant ap_const_lv12_10 : STD_LOGIC_VECTOR (11 downto 0) := "000000010000";
    constant ap_const_lv12_FF0 : STD_LOGIC_VECTOR (11 downto 0) := "111111110000";
    constant ap_const_lv12_36 : STD_LOGIC_VECTOR (11 downto 0) := "000000110110";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv9_120 : STD_LOGIC_VECTOR (8 downto 0) := "100100000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv7_30 : STD_LOGIC_VECTOR (6 downto 0) := "0110000";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv10_3FF : STD_LOGIC_VECTOR (9 downto 0) := "1111111111";
    constant ap_const_lv32_28000 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000101000000000000000";
    constant ap_const_lv32_50000 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000001010000000000000000";
    constant ap_const_lv18_1 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    constant ap_const_lv18_3FFFF : STD_LOGIC_VECTOR (17 downto 0) := "111111111111111111";
    constant ap_const_lv77_1FFFFFFFFFFFFFFFE000 : STD_LOGIC_VECTOR (76 downto 0) := "11111111111111111111111111111111111111111111111111111111111111110000000000000";
    constant ap_const_lv32_4C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001100";
    constant ap_const_lv77_0 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv44_0 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000000000000000";
    constant ap_const_lv64_FFFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv26_0 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000000000";
    constant ap_const_lv31_1F : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000011111";
    constant ap_const_lv7_61 : STD_LOGIC_VECTOR (6 downto 0) := "1100001";
    constant ap_const_lv7_7F : STD_LOGIC_VECTOR (6 downto 0) := "1111111";
    constant ap_const_lv8_50 : STD_LOGIC_VECTOR (7 downto 0) := "01010000";
    constant ap_const_lv8_4F : STD_LOGIC_VECTOR (7 downto 0) := "01001111";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv17_1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_const_lv32_1680000 : STD_LOGIC_VECTOR (31 downto 0) := "00000001011010000000000000000000";
    constant ap_const_lv73_16C16C16C2 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000001011011000001011011000001011011000010";
    constant ap_const_lv73_0 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv36_0 : STD_LOGIC_VECTOR (35 downto 0) := "000000000000000000000000000000000000";
    constant ap_const_lv28_80000 : STD_LOGIC_VECTOR (27 downto 0) := "0000000010000000000000000000";
    constant ap_const_lv27_7F80000 : STD_LOGIC_VECTOR (26 downto 0) := "111111110000000000000000000";
    constant ap_const_lv14_1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv7_20 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv31_3333 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000011001100110011";
    constant ap_const_lv32_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000010";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal mask_table1685_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal mask_table1685_ce0 : STD_LOGIC;
    signal mask_table1685_q0 : STD_LOGIC_VECTOR (22 downto 0);
    signal one_half_table2681_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal one_half_table2681_ce0 : STD_LOGIC;
    signal one_half_table2681_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal i_op_assign_reg_900 : STD_LOGIC_VECTOR (31 downto 0);
    signal indvar_flatten2_reg_909 : STD_LOGIC_VECTOR (7 downto 0);
    signal i9_reg_920 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten3_reg_931 : STD_LOGIC_VECTOR (6 downto 0);
    signal j9_reg_942 : STD_LOGIC_VECTOR (2 downto 0);
    signal k5_reg_953 : STD_LOGIC_VECTOR (3 downto 0);
    signal xf_V_1_reg_964 : STD_LOGIC_VECTOR (31 downto 0);
    signal i7_reg_976 : STD_LOGIC_VECTOR (7 downto 0);
    signal nrm_1_reg_987 : STD_LOGIC_VECTOR (31 downto 0);
    signal i8_reg_999 : STD_LOGIC_VECTOR (7 downto 0);
    signal i10_reg_1033 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1101_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1135 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal ap_CS_fsm_pp1_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage5 : signal is "none";
    signal ap_enable_reg_pp1_iter5 : STD_LOGIC := '0';
    signal ap_block_state33_pp1_stage5_iter0 : BOOLEAN;
    signal ap_block_state41_pp1_stage5_iter1 : BOOLEAN;
    signal ap_block_state49_pp1_stage5_iter2 : BOOLEAN;
    signal ap_block_state57_pp1_stage5_iter3 : BOOLEAN;
    signal ap_block_state65_pp1_stage5_iter4 : BOOLEAN;
    signal ap_block_state73_pp1_stage5_iter5 : BOOLEAN;
    signal ap_block_state81_pp1_stage5_iter6 : BOOLEAN;
    signal ap_block_pp1_stage5_11001 : BOOLEAN;
    signal or_cond_206_reg_6098 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_206_reg_6098_pp1_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_reg_6102 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_reg_6102_pp1_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state117 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state117 : signal is "none";
    signal grp_fu_1091_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1143 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal ap_CS_fsm_pp1_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage6 : signal is "none";
    signal ap_enable_reg_pp1_iter4 : STD_LOGIC := '0';
    signal ap_block_state34_pp1_stage6_iter0 : BOOLEAN;
    signal ap_block_state42_pp1_stage6_iter1 : BOOLEAN;
    signal ap_block_state50_pp1_stage6_iter2 : BOOLEAN;
    signal ap_block_state58_pp1_stage6_iter3 : BOOLEAN;
    signal ap_block_state66_pp1_stage6_iter4 : BOOLEAN;
    signal ap_block_state74_pp1_stage6_iter5 : BOOLEAN;
    signal ap_block_state82_pp1_stage6_iter6 : BOOLEAN;
    signal ap_block_pp1_stage6_11001 : BOOLEAN;
    signal or_cond_206_reg_6098_pp1_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_reg_6102_pp1_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_sqrt_fixed_32_32_s_fu_1085_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_1149 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal ap_CS_fsm_state97 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state97 : signal is "none";
    signal hist_V_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1153 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp1_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage3 : signal is "none";
    signal ap_enable_reg_pp1_iter6 : STD_LOGIC := '0';
    signal ap_block_state31_pp1_stage3_iter0 : BOOLEAN;
    signal ap_block_state39_pp1_stage3_iter1 : BOOLEAN;
    signal ap_block_state47_pp1_stage3_iter2 : BOOLEAN;
    signal ap_block_state55_pp1_stage3_iter3 : BOOLEAN;
    signal ap_block_state63_pp1_stage3_iter4 : BOOLEAN;
    signal ap_block_state71_pp1_stage3_iter5 : BOOLEAN;
    signal ap_block_state79_pp1_stage3_iter6 : BOOLEAN;
    signal ap_block_pp1_stage3_11001 : BOOLEAN;
    signal or_cond_206_reg_6098_pp1_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_reg_6102_pp1_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage7 : signal is "none";
    signal ap_block_state35_pp1_stage7_iter0 : BOOLEAN;
    signal ap_block_state43_pp1_stage7_iter1 : BOOLEAN;
    signal ap_block_state51_pp1_stage7_iter2 : BOOLEAN;
    signal ap_block_state59_pp1_stage7_iter3 : BOOLEAN;
    signal ap_block_state67_pp1_stage7_iter4 : BOOLEAN;
    signal ap_block_state75_pp1_stage7_iter5 : BOOLEAN;
    signal ap_block_state83_pp1_stage7_iter6 : BOOLEAN;
    signal ap_block_pp1_stage7_11001 : BOOLEAN;
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter7 : STD_LOGIC := '0';
    signal ap_block_state28_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state36_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state44_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state52_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_state60_pp1_stage0_iter4 : BOOLEAN;
    signal ap_block_state68_pp1_stage0_iter5 : BOOLEAN;
    signal ap_block_state76_pp1_stage0_iter6 : BOOLEAN;
    signal ap_block_state84_pp1_stage0_iter7 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal hist_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1157 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_358_fu_1161_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_358_reg_5718 : STD_LOGIC_VECTOR (0 downto 0);
    signal is_neg_3_fu_1167_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal is_neg_3_reg_5723 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp32_V_27_fu_1207_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_27_reg_5728 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1129_fu_1213_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1129_reg_5733 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp32_V_44_fu_1217_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_44_reg_5738 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal p_Result_21_reg_5743 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_165_fu_1258_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_165_reg_5748 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal f_9_fu_1269_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal p_03_i5_fu_1273_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_03_i5_reg_5758 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal tmp_fu_1280_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_5763 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal is_neg_fu_1286_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal is_neg_reg_5768 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp32_V_23_fu_1326_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_23_reg_5773 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1121_fu_1332_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1121_reg_5778 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp32_V_fu_1336_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_reg_5783 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal p_Result_s_reg_5788 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_160_fu_1377_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_160_reg_5793 : STD_LOGIC_VECTOR (31 downto 0);
    signal f_fu_1388_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal hist_width_fu_1392_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal hist_width_reg_5803 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal grp_sin_or_cos_float_s_fu_1055_ap_idle : STD_LOGIC;
    signal grp_sin_or_cos_float_s_fu_1055_ap_ready : STD_LOGIC;
    signal grp_sin_or_cos_float_s_fu_1055_ap_done : STD_LOGIC;
    signal grp_sin_or_cos_float_s_fu_1070_ap_idle : STD_LOGIC;
    signal grp_sin_or_cos_float_s_fu_1070_ap_ready : STD_LOGIC;
    signal grp_sin_or_cos_float_s_fu_1070_ap_done : STD_LOGIC;
    signal ap_block_state15_on_subcall_done : BOOLEAN;
    signal grp_sin_or_cos_float_s_fu_1055_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i_i_i_reg_5810 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sin_or_cos_float_s_fu_1070_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i_i_i1_reg_5815 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal xf_V_fu_1411_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal xf_V_reg_5830 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_V_18_fu_1417_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_V_18_reg_5835 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i_i_fu_1431_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_reg_5841 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1685_i_i_fu_1437_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1685_i_i_reg_5847 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1106_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal v_assign_1_reg_5862 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_66_fu_1538_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_66_reg_5867 : STD_LOGIC_VECTOR (31 downto 0);
    signal isneg_reg_5872 : STD_LOGIC_VECTOR (0 downto 0);
    signal exp_tmp_V_reg_5878 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_1132_fu_1572_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_1132_reg_5883 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_366_fu_1576_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_366_reg_5888 : STD_LOGIC_VECTOR (0 downto 0);
    signal isneg_1_reg_5894 : STD_LOGIC_VECTOR (0 downto 0);
    signal exp_tmp_V_1_reg_5900 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_1138_fu_1608_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_1138_reg_5905 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_377_fu_1612_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_377_reg_5910 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal tmp_198_cast_fu_1622_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_198_cast_reg_5931 : STD_LOGIC_VECTOR (16 downto 0);
    signal cos_t_V_fu_1983_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal cos_t_V_reg_5936 : STD_LOGIC_VECTOR (31 downto 0);
    signal sin_t_V_fu_2201_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sin_t_V_reg_5942 : STD_LOGIC_VECTOR (31 downto 0);
    signal radius_fu_2219_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal radius_reg_5948 : STD_LOGIC_VECTOR (31 downto 0);
    signal indvar_flatten_next1_fu_2233_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal tmp_446_mid2_v_fu_2259_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal exitcond_flatten1_fu_2227_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_455_mid2_fu_2335_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal k_4_fu_2376_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal indvar_flatten_next_fu_2388_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal i_11_fu_2396_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_11_reg_5983 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal tmp_393_fu_2401_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_393_reg_5989 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_394_fu_2406_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_394_reg_5994 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1142_fu_2411_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_1142_reg_5999 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_395_fu_2414_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_395_reg_6007 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_397_fu_2417_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal p_Val2_s_fu_2422_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_s_reg_6016 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_40_fu_2427_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_40_reg_6021 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_398_fu_2437_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_398_reg_6026 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_399_fu_2443_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_399_reg_6031 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_212_cast_fu_2452_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_212_cast_reg_6036 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_214_cast_fu_2470_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_214_cast_reg_6042 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_216_cast_fu_2488_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_216_cast_reg_6047 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_402_fu_2496_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_402_reg_6052 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_42_fu_2506_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_42_reg_6056 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_44_fu_2516_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_44_reg_6062 : STD_LOGIC_VECTOR (31 downto 0);
    signal c_fu_2521_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal c_reg_6068 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_5_fu_2526_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_5_reg_6077 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal p_Val2_45_fu_2532_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_45_reg_6082 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp1_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage1 : signal is "none";
    signal ap_block_state29_pp1_stage1_iter0 : BOOLEAN;
    signal ap_block_state37_pp1_stage1_iter1 : BOOLEAN;
    signal ap_block_state45_pp1_stage1_iter2 : BOOLEAN;
    signal ap_block_state53_pp1_stage1_iter3 : BOOLEAN;
    signal ap_block_state61_pp1_stage1_iter4 : BOOLEAN;
    signal ap_block_state69_pp1_stage1_iter5 : BOOLEAN;
    signal ap_block_state77_pp1_stage1_iter6 : BOOLEAN;
    signal ap_block_state85_pp1_stage1_iter7 : BOOLEAN;
    signal ap_block_pp1_stage1_11001 : BOOLEAN;
    signal p_Val2_45_reg_6082_pp1_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_46_fu_2537_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_46_reg_6090 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_46_reg_6090_pp1_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal or_cond_206_fu_2583_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_206_reg_6098_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_206_reg_6098_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_206_reg_6098_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_fu_2604_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_reg_6102_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_reg_6102_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_reg_6102_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1156_fu_2657_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_1156_reg_6166 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_fu_2686_p2 : STD_LOGIC_VECTOR (64 downto 0);
    signal r_V_reg_6172 : STD_LOGIC_VECTOR (64 downto 0);
    signal p_Val2_49_fu_2766_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_49_reg_6177 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp1_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage2 : signal is "none";
    signal ap_block_state30_pp1_stage2_iter0 : BOOLEAN;
    signal ap_block_state38_pp1_stage2_iter1 : BOOLEAN;
    signal ap_block_state46_pp1_stage2_iter2 : BOOLEAN;
    signal ap_block_state54_pp1_stage2_iter3 : BOOLEAN;
    signal ap_block_state62_pp1_stage2_iter4 : BOOLEAN;
    signal ap_block_state70_pp1_stage2_iter5 : BOOLEAN;
    signal ap_block_state78_pp1_stage2_iter6 : BOOLEAN;
    signal ap_block_pp1_stage2_11001 : BOOLEAN;
    signal tmp_422_fu_2800_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_422_reg_6244 : STD_LOGIC_VECTOR (0 downto 0);
    signal is_neg_5_reg_6249 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_60_fu_2817_p2 : STD_LOGIC_VECTOR (76 downto 0);
    signal p_Val2_60_reg_6255 : STD_LOGIC_VECTOR (76 downto 0);
    signal is_neg_6_reg_6262 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_52_fu_2905_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_52_reg_6268 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_520_cast_fu_2914_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_520_cast_reg_6275 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_416_fu_2920_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_416_reg_6280 : STD_LOGIC_VECTOR (0 downto 0);
    signal is_neg_4_reg_6285 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp32_V_35_fu_2963_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_35_reg_6291 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1160_fu_2969_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1160_reg_6296 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_442_fu_2973_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_442_reg_6301 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_139_fu_2983_p3 : STD_LOGIC_VECTOR (76 downto 0);
    signal p_Val2_139_reg_6306 : STD_LOGIC_VECTOR (76 downto 0);
    signal msb_idx_fu_3069_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal msb_idx_reg_6312 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1171_fu_3075_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_1171_reg_6317 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_1172_reg_6322 : STD_LOGIC_VECTOR (0 downto 0);
    signal this_assign_s_reg_6327 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp1_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage4 : signal is "none";
    signal ap_block_state32_pp1_stage4_iter0 : BOOLEAN;
    signal ap_block_state40_pp1_stage4_iter1 : BOOLEAN;
    signal ap_block_state48_pp1_stage4_iter2 : BOOLEAN;
    signal ap_block_state56_pp1_stage4_iter3 : BOOLEAN;
    signal ap_block_state64_pp1_stage4_iter4 : BOOLEAN;
    signal ap_block_state72_pp1_stage4_iter5 : BOOLEAN;
    signal ap_block_state80_pp1_stage4_iter6 : BOOLEAN;
    signal ap_block_pp1_stage4_11001 : BOOLEAN;
    signal tmp32_V_31_fu_3140_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_31_reg_6332 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1158_fu_3146_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1158_reg_6337 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp32_V_41_fu_3256_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_41_reg_6342 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_46_fu_3264_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_46_reg_6347 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_29_reg_6352 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp32_V_45_fu_3278_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_45_reg_6357 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_26_reg_6362 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_assign_67_fu_3334_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_67_reg_6367 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_47_fu_3391_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_47_reg_6372 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_35_reg_6377 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_assign_68_fu_3449_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_68_reg_6382 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1130_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal v_assign_3_reg_6387 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sqrt_fixed_32_16_s_fu_1050_ap_return : STD_LOGIC_VECTOR (23 downto 0);
    signal agg_result_V_i_reg_6392 : STD_LOGIC_VECTOR (23 downto 0);
    signal isneg_3_fu_3464_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal isneg_3_reg_6397 : STD_LOGIC_VECTOR (0 downto 0);
    signal man_V_17_fu_3508_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_17_reg_6402 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_452_fu_3516_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_452_reg_6407 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_453_fu_3528_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_453_reg_6413 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_amt_4_fu_3546_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_4_reg_6419 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_456_fu_3554_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_456_reg_6425 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1189_fu_3560_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1189_reg_6431 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp25_fu_3574_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp25_reg_6437 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_65_reg_6442 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_1_fu_3813_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_1_reg_6448 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_70_reg_6456 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_70_reg_6456_pp1_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_70_reg_6456_pp1_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_70_reg_6456_pp1_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_70_reg_6456_pp1_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_67_fu_3948_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_67_reg_6463 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1213_fu_3989_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_1213_reg_6468 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_1213_reg_6468_pp1_iter3_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_1213_reg_6468_pp1_iter4_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_1213_reg_6468_pp1_iter5_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_1213_reg_6468_pp1_iter6_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_1218_fu_4009_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_1218_reg_6473 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_1218_reg_6473_pp1_iter3_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_1218_reg_6473_pp1_iter4_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_1218_reg_6473_pp1_iter5_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_1218_reg_6473_pp1_iter6_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_1221_fu_4059_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_1221_reg_6478 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_1221_reg_6478_pp1_iter3_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_1221_reg_6478_pp1_iter4_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_1221_reg_6478_pp1_iter5_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_1221_reg_6478_pp1_iter6_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_1224_fu_4073_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_1224_reg_6483 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_1224_reg_6483_pp1_iter3_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_1224_reg_6483_pp1_iter4_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_1224_reg_6483_pp1_iter5_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_1224_reg_6483_pp1_iter6_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_71_fu_4079_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_71_reg_6488 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_71_reg_6488_pp1_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_71_reg_6488_pp1_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_71_reg_6488_pp1_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_71_reg_6488_pp1_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_73_reg_6493 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_73_reg_6493_pp1_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_73_reg_6493_pp1_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_73_reg_6493_pp1_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_73_reg_6493_pp1_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_76_reg_6500 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_76_reg_6500_pp1_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_76_reg_6500_pp1_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_76_reg_6500_pp1_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_76_reg_6500_pp1_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_atan2_cordic_float_s_fu_1044_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal isneg_2_fu_4133_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal isneg_2_reg_6512 : STD_LOGIC_VECTOR (0 downto 0);
    signal man_V_14_fu_4177_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_14_reg_6517 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_431_fu_4185_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_431_reg_6522 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_432_fu_4197_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_432_reg_6528 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_amt_3_fu_4215_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_3_reg_6534 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_435_fu_4223_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_435_reg_6540 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1164_fu_4229_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1164_reg_6546 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp15_fu_4243_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp15_reg_6552 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_6_fu_4398_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal r_V_6_reg_6557 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_1192_reg_6562 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_462_fu_4475_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp_462_reg_6568 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp_1195_fu_4482_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_1195_reg_6573 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_1196_fu_4486_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_1196_reg_6579 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_1198_reg_6584 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_68_fu_4663_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_68_reg_6589 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1210_fu_4669_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_1210_reg_6594 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_241_cast_fu_4673_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_241_cast_reg_6600 : STD_LOGIC_VECTOR (9 downto 0);
    signal hist_V_addr_4_reg_6605 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_1215_fu_4697_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_1215_reg_6610 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_246_cast_fu_4705_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_246_cast_reg_6618 : STD_LOGIC_VECTOR (9 downto 0);
    signal hist_V_addr_6_reg_6623 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_74_fu_4723_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_74_reg_6628 : STD_LOGIC_VECTOR (31 downto 0);
    signal OP2_V_22_cast_fu_4730_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal OP2_V_22_cast_reg_6633 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_79_reg_6639 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_82_reg_6645 : STD_LOGIC_VECTOR (31 downto 0);
    signal hist_V_addr_5_reg_6651 : STD_LOGIC_VECTOR (8 downto 0);
    signal hist_V_addr_7_reg_6657 : STD_LOGIC_VECTOR (8 downto 0);
    signal hist_V_addr_8_reg_6663 : STD_LOGIC_VECTOR (8 downto 0);
    signal hist_V_addr_9_reg_6668 : STD_LOGIC_VECTOR (8 downto 0);
    signal hist_V_addr_10_reg_6673 : STD_LOGIC_VECTOR (8 downto 0);
    signal hist_V_addr_11_reg_6678 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_77_fu_4841_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_77_reg_6683 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_85_reg_6688 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_88_reg_6694 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_7_fu_4950_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state86 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state86 : signal is "none";
    signal exitcond_flatten3_fu_4984_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten3_reg_6705 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal ap_block_state87_pp2_stage0_iter0 : BOOLEAN;
    signal ap_block_state88_pp2_stage0_iter1 : BOOLEAN;
    signal ap_block_pp2_stage0_11001 : BOOLEAN;
    signal indvar_flatten_next3_fu_4990_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal i9_mid2_fu_5106_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal j9_mid2_fu_5200_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_404_fu_5212_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_404_reg_6724 : STD_LOGIC_VECTOR (6 downto 0);
    signal k_5_fu_5233_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal indvar_flatten_next2_fu_5245_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal exitcond7_fu_5257_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond7_reg_6744 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp3_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp3_stage0 : signal is "none";
    signal ap_block_state90_pp3_stage0_iter0 : BOOLEAN;
    signal ap_block_state91_pp3_stage0_iter1 : BOOLEAN;
    signal ap_block_state92_pp3_stage0_iter2 : BOOLEAN;
    signal ap_block_pp3_stage0_11001 : BOOLEAN;
    signal exitcond7_reg_6744_pp3_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i_8_fu_5263_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp3_iter0 : STD_LOGIC := '0';
    signal desc_buf_val_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal desc_buf_val_V_load_reg_6758 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp3_iter1 : STD_LOGIC := '0';
    signal nrm_fu_5333_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp3_iter2 : STD_LOGIC := '0';
    signal thresh_V_cast3_fu_5343_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal thresh_V_cast3_reg_6768 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state98 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state98 : signal is "none";
    signal exitcond9_fu_5346_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond9_reg_6774 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp4_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp4_stage0 : signal is "none";
    signal ap_block_state99_pp4_stage0_iter0 : BOOLEAN;
    signal ap_block_state100_pp4_stage0_iter1 : BOOLEAN;
    signal ap_block_state101_pp4_stage0_iter2 : BOOLEAN;
    signal ap_block_pp4_stage0_11001 : BOOLEAN;
    signal exitcond9_reg_6774_pp4_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i_9_fu_5352_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp4_iter0 : STD_LOGIC := '0';
    signal desc_buf_val_V_addr_1_reg_6783 : STD_LOGIC_VECTOR (6 downto 0);
    signal val_V_fu_5368_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal val_V_reg_6789 : STD_LOGIC_VECTOR (31 downto 0);
    signal nrm_2_fu_5435_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp4_iter2 : STD_LOGIC := '0';
    signal grp_fu_1115_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_69_reg_6802 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state103 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state103 : signal is "none";
    signal grp_fu_1125_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i6_reg_6807 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state110 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state110 : signal is "none";
    signal tmp_486_fu_5575_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state118 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state118 : signal is "none";
    signal tmp_478_fu_5507_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_482_fu_5549_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_479_fu_5519_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp38_fu_5569_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_0211_s_fu_5587_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_483_fu_5581_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1233_fu_5605_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1233_reg_6837 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1230_fu_5609_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal OP2_V_10_fu_5613_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal OP2_V_10_reg_6847 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state120 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state120 : signal is "none";
    signal exitcond_fu_5617_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_6852 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp5_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp5_stage0 : signal is "none";
    signal ap_block_state121_pp5_stage0_iter0 : BOOLEAN;
    signal ap_block_state122_pp5_stage0_iter1 : BOOLEAN;
    signal ap_block_state123_pp5_stage0_iter2 : BOOLEAN;
    signal ap_block_pp5_stage0_11001 : BOOLEAN;
    signal exitcond_reg_6852_pp5_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i_1_fu_5623_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp5_iter0 : STD_LOGIC := '0';
    signal tmp_262_fu_5638_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_262_reg_6861 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_262_reg_6861_pp5_iter1_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_385_fu_5694_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_385_reg_6871 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state28 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_block_pp1_stage7_subdone : BOOLEAN;
    signal ap_block_pp1_stage1_subdone : BOOLEAN;
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal ap_block_pp2_stage0_subdone : BOOLEAN;
    signal ap_condition_pp2_exit_iter0_state87 : STD_LOGIC;
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal ap_CS_fsm_state89 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state89 : signal is "none";
    signal ap_block_pp3_stage0_subdone : BOOLEAN;
    signal ap_condition_pp3_exit_iter0_state90 : STD_LOGIC;
    signal ap_block_pp4_stage0_subdone : BOOLEAN;
    signal ap_condition_pp4_exit_iter0_state99 : STD_LOGIC;
    signal ap_enable_reg_pp4_iter1 : STD_LOGIC := '0';
    signal ap_block_pp5_stage0_subdone : BOOLEAN;
    signal ap_condition_pp5_exit_iter0_state121 : STD_LOGIC;
    signal ap_enable_reg_pp5_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp5_iter2 : STD_LOGIC := '0';
    signal hist_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal hist_V_ce0 : STD_LOGIC;
    signal hist_V_we0 : STD_LOGIC;
    signal hist_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal hist_V_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal hist_V_ce1 : STD_LOGIC;
    signal hist_V_we1 : STD_LOGIC;
    signal hist_V_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal desc_buf_val_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal desc_buf_val_V_ce0 : STD_LOGIC;
    signal desc_buf_val_V_we0 : STD_LOGIC;
    signal desc_buf_val_V_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal desc_buf_val_V_ce1 : STD_LOGIC;
    signal desc_buf_val_V_we1 : STD_LOGIC;
    signal desc_buf_val_V_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal desc_buf_val_V_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_atan2_cordic_float_s_fu_1044_ap_start : STD_LOGIC;
    signal grp_atan2_cordic_float_s_fu_1044_ap_done : STD_LOGIC;
    signal grp_atan2_cordic_float_s_fu_1044_ap_idle : STD_LOGIC;
    signal grp_atan2_cordic_float_s_fu_1044_ap_ready : STD_LOGIC;
    signal grp_atan2_cordic_float_s_fu_1044_y_in : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sin_or_cos_float_s_fu_1055_ap_start : STD_LOGIC;
    signal grp_sin_or_cos_float_s_fu_1055_do_cos : STD_LOGIC;
    signal grp_sin_or_cos_float_s_fu_1070_ap_start : STD_LOGIC;
    signal grp_sin_or_cos_float_s_fu_1070_do_cos : STD_LOGIC;
    signal grp_sqrt_fixed_32_32_s_fu_1085_x_V : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sqrt_fixed_32_32_s_fu_1085_ap_ce : STD_LOGIC;
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal ap_CS_fsm_state93 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state93 : signal is "none";
    signal ap_CS_fsm_state94 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state94 : signal is "none";
    signal ap_CS_fsm_state95 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state95 : signal is "none";
    signal ap_CS_fsm_state96 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state96 : signal is "none";
    signal indvar_flatten1_reg_835 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_reg_846 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten_reg_857 : STD_LOGIC_VECTOR (6 downto 0);
    signal j_reg_868 : STD_LOGIC_VECTOR (2 downto 0);
    signal k_reg_879 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_op_assign_4_reg_890 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_i_op_assign_phi_fu_903_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal p_8_reg_1010 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state102 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state102 : signal is "none";
    signal tmp_472_fu_5441_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state119 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state119 : signal is "none";
    signal grp_atan2_cordic_float_s_fu_1044_ap_start_reg : STD_LOGIC := '0';
    signal ap_predicate_op657_call_state35_state34 : BOOLEAN;
    signal ap_block_pp1_stage7 : BOOLEAN;
    signal ap_block_pp1_stage5 : BOOLEAN;
    signal grp_sin_or_cos_float_s_fu_1055_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_or_cos_float_s_fu_1070_ap_start_reg : STD_LOGIC := '0';
    signal tmp_1686_i_i_fu_1453_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_210_cast_fu_2371_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_229_cast_fu_2623_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp1_stage1 : BOOLEAN;
    signal tmp_230_cast_fu_2647_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_231_cast_fu_2776_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp1_stage2 : BOOLEAN;
    signal tmp_232_cast_fu_2790_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_242_cast_fu_4686_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_247_cast_fu_4718_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_243_cast_fu_4773_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp1_stage3 : BOOLEAN;
    signal tmp_248_cast_fu_4782_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_255_cast_fu_4799_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_256_cast_fu_4809_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_260_cast_fu_4826_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_261_cast_fu_4836_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_228_cast_fu_5228_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp2_stage0 : BOOLEAN;
    signal tmp_405_fu_5253_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_414_fu_5269_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp3_stage0 : BOOLEAN;
    signal tmp_474_fu_5358_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp4_stage0 : BOOLEAN;
    signal tmp_488_fu_5629_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp5_stage0 : BOOLEAN;
    signal tmp_262_cast_fu_5702_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_94_fu_4890_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp1_stage4 : BOOLEAN;
    signal p_Val2_96_fu_4897_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_90_fu_4912_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_92_fu_4919_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp1_stage6 : BOOLEAN;
    signal p_Val2_91_fu_4926_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_93_fu_4932_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_95_fu_4938_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_97_fu_4944_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1091_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1091_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1101_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1101_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_CS_fsm_state111 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state111 : signal is "none";
    signal grp_fu_1112_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal grp_fu_1119_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1122_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state104 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state104 : signal is "none";
    signal tmp_358_fu_1161_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal is_neg_3_fu_1167_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_359_fu_1175_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_359_fu_1175_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_155_fu_1181_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_155_fu_1181_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_164_fu_1189_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal num_zeros_3_fu_1199_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1112_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_360_fu_1231_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_362_fu_1241_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_361_fu_1236_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Repl2_51_trunc_fu_1245_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_363_fu_1251_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_s_fu_1294_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_153_fu_1300_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_159_fu_1308_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal num_zeros_fu_1318_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_352_fu_1350_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_354_fu_1360_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_353_fu_1355_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Repl2_48_trunc_fu_1364_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_355_fu_1370_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_391_fu_1399_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_391_fu_1399_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_392_fu_1405_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_392_fu_1405_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_391_fu_1399_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_392_fu_1405_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal loc_V_fu_1421_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal index_V_fu_1443_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_Result_s_205_fu_1459_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal one_half_i_i_cast_fu_1474_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_50_fu_1478_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal loc_V_18_fu_1483_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_1688_i_i_fu_1487_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_357_fu_1499_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal xs_sig_V_fu_1493_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Result_161_fu_1466_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_162_fu_1509_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp65_v_fu_1517_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp66_fu_1528_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp67_fu_1533_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp65_fu_1524_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1119_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ireg_V_fu_1546_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1130_fu_1550_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal grp_fu_1122_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ireg_V_1_fu_1582_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1136_fu_1586_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_1119_fu_1618_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_128_fu_1630_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal loc_V_20_fu_1651_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_1701_i_i_i_fu_1655_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal loc_V_19_fu_1641_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_i_i_i_i_cast_fu_1669_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_assign_fu_1673_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_1702_i_i_i_fu_1687_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal isNeg_fu_1679_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1702_i_i_i_cast_fu_1693_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_assign_6_fu_1697_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_assign_6_i_i_i_ca_fu_1705_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sh_assign_6_i_i_i_ca_5_fu_1709_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_1701_i_i_i_cast2_fu_1665_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_1703_i_i_i_fu_1713_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_1704_i_i_i_fu_1717_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_1127_fu_1729_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1705_i_i_i_fu_1723_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_200_fu_1737_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_201_fu_1741_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_55_fu_1751_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_163_fu_1633_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_i_i_i_fu_1759_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_365_fu_1776_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal p_Result_166_fu_1783_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_7_fu_1787_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_364_fu_1773_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_fu_1800_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_367_fu_1806_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_368_fu_1812_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_369_fu_1818_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_fu_1824_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal man_V_8_fu_1793_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_1134_fu_1852_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal sh_amt_cast_fu_1832_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_372_fu_1868_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_373_fu_1872_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_1133_fu_1842_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_370_fu_1836_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp71_fu_1895_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp72_fu_1900_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp76_demorgan_fu_1914_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp76_fu_1919_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_371_fu_1846_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp77_fu_1925_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp78_fu_1931_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp79_fu_1937_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_0154_s_fu_1882_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp73_fu_1906_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp85_fu_1951_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1135_fu_1878_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp80_fu_1943_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp91_demorgan_fu_1965_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_fu_1862_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp91_fu_1971_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp92_fu_1977_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_374_fu_1889_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp86_fu_1957_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_376_fu_1994_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal p_Result_167_fu_2001_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_10_fu_2005_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_375_fu_1991_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_1_fu_2018_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_378_fu_2024_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_379_fu_2030_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_384_fu_2036_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_1_fu_2042_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal man_V_11_fu_2011_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_1140_fu_2070_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal sh_amt_1_cast_fu_2050_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_388_fu_2086_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_389_fu_2090_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_1139_fu_2060_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_386_fu_2054_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp95_fu_2113_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp96_fu_2118_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp100_demorgan_fu_2132_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp100_fu_2137_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_387_fu_2064_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp101_fu_2143_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp102_fu_2149_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp103_fu_2155_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_0163_s_fu_2100_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp97_fu_2124_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp109_fu_2169_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1141_fu_2096_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp104_fu_2161_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp115_demorgan_fu_2183_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp12_fu_2080_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp115_fu_2189_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp116_fu_2195_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_390_fu_2107_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp110_fu_2175_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_154_fu_1765_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_132_fu_2209_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i_fu_2213_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_fu_2245_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_5_fu_2239_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_203_fu_2267_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_204_fu_2279_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl_cast_fu_2275_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl1_cast_fu_2287_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal exitcond1_fu_2303_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_exitcond_flatten_fu_2297_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_mid_fu_2251_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal exitcond6_mid_fu_2309_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_206_fu_2321_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_2_fu_2315_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_205_fu_2291_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_455_mid2_cast_fu_2343_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_207_fu_2347_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal k_mid2_fu_2327_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_209_cast_fu_2353_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_445_cast_fu_2361_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_210_fu_2365_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal indvar_flatten_op_fu_2382_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_393_fu_2401_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_394_fu_2406_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_395_fu_2414_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_fu_2432_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1143_fu_2448_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_1144_fu_2460_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_1145_fu_2464_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_1146_fu_2478_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_1147_fu_2482_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_41_fu_2501_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_43_fu_2511_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_407_fu_2542_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_408_fu_2548_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_410_fu_2560_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp120_fu_2572_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_409_fu_2554_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp119_fu_2577_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp118_fu_2566_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_411_fu_2589_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_412_fu_2594_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp121_fu_2598_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1152_fu_2609_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_1153_fu_2612_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_229_fu_2618_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_1154_fu_2633_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_1155_fu_2636_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_230_fu_2642_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_58_fu_2663_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal OP1_V_10_fu_2660_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_58_fu_2663_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_59_fu_2672_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal OP1_V_11_fu_2669_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_59_fu_2672_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_58_fu_2663_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_59_fu_2672_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_440_fu_2678_p1 : STD_LOGIC_VECTOR (64 downto 0);
    signal tmp_441_fu_2682_p1 : STD_LOGIC_VECTOR (64 downto 0);
    signal p_Val2_56_fu_2712_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_56_fu_2712_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_56_fu_2712_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_56_fu_2712_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_56_fu_2712_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_61_fu_2749_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_61_fu_2749_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_61_fu_2749_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_61_fu_2749_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_61_fu_2749_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_56_fu_2712_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_61_fu_2749_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_231_fu_2772_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_232_fu_2786_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_60_fu_2817_p1 : STD_LOGIC_VECTOR (64 downto 0);
    signal p_Val2_98_fu_2851_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_98_fu_2851_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_98_fu_2851_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_98_fu_2851_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_98_fu_2851_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_99_fu_2888_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_99_fu_2888_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_99_fu_2888_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_99_fu_2888_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_99_fu_2888_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_98_fu_2851_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_99_fu_2888_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_520_cast_fu_2914_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_fu_2911_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_520_cast_fu_2914_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_423_fu_2934_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_156_fu_2939_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_170_fu_2945_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal num_zeros_5_fu_2955_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_443_fu_2978_p2 : STD_LOGIC_VECTOR (76 downto 0);
    signal tmp_380_fu_2989_p4 : STD_LOGIC_VECTOR (43 downto 0);
    signal p_Result_32_fu_2999_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_444_fu_3003_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_33_fu_3021_p4 : STD_LOGIC_VECTOR (32 downto 0);
    signal p_Result_173_fu_3031_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_446_fu_3043_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1169_fu_3011_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1170_fu_3051_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_445_fu_3015_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal NZeros_fu_3055_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal num_zeros_6_fu_3061_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_521_cast_fu_3090_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_3087_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_521_cast_fu_3090_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_521_cast_fu_3090_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_53_fu_3096_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_417_fu_3111_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_s_207_fu_3116_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_168_fu_3122_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal num_zeros_4_fu_3132_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal msb_idx_5_fu_3153_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_1173_fu_3159_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_447_fu_3178_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp32_V_38_fu_3175_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_593_cast_fu_3184_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1175_fu_3194_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_139_cast_fu_3150_p1 : STD_LOGIC_VECTOR (96 downto 0);
    signal tmp_1176_fu_3198_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1178_fu_3210_p4 : STD_LOGIC_VECTOR (96 downto 0);
    signal tmp_1179_fu_3220_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_1177_fu_3204_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_1181_fu_3234_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_1180_fu_3226_p3 : STD_LOGIC_VECTOR (96 downto 0);
    signal tmp_1182_fu_3242_p1 : STD_LOGIC_VECTOR (96 downto 0);
    signal tmp_1183_fu_3246_p2 : STD_LOGIC_VECTOR (96 downto 0);
    signal icmp22_fu_3169_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp32_V_39_fu_3188_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_40_fu_3252_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_424_fu_3292_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_426_fu_3302_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_425_fu_3297_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Repl2_57_trunc_fu_3306_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_427_fu_3312_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_171_fu_3319_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal f_13_fu_3330_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_418_fu_3341_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_420_fu_3351_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_419_fu_3346_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Repl2_54_trunc_fu_3355_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_421_fu_3361_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_169_fu_3368_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal f_11_fu_3379_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_448_fu_3405_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1185_fu_3410_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp122_cast_cast_fu_3413_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Repl2_61_trunc_fu_3421_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_449_fu_3427_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_174_fu_3434_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal f_15_fu_3445_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ireg_V_3_fu_3456_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_tmp_V_4_fu_3472_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_1188_fu_3486_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_451_fu_3490_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal p_Result_175_fu_3498_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_16_fu_3502_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_1186_fu_3460_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_450_fu_3482_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_4_fu_3522_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_454_fu_3534_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_455_fu_3540_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_1190_fu_3564_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal sh_amt_4_cast_fu_3580_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_458_fu_3588_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_459_fu_3592_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal sel_tmp28_fu_3613_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp33_demorgan_fu_3623_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp33_fu_3627_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_457_fu_3583_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp34_fu_3633_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp35_fu_3638_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp48_demorgan_fu_3656_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp48_fu_3661_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp49_fu_3667_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_460_fu_3608_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1191_fu_3597_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp42_fu_3650_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp36_fu_3644_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal storemerge6_fu_3601_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp29_fu_3618_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_fu_3680_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel_fu_3672_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel18_fu_3686_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_cond5_fu_3693_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond6_fu_3707_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel19_fu_3699_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal W_V_fu_3713_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_64_fu_3728_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Val2_64_fu_3728_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_64_fu_3728_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_1199_fu_3744_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_i_i5_fu_3747_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_38_fu_3753_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_104_fu_3764_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1201_fu_3789_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_29_fu_3771_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_463_fu_3793_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_30_fu_3799_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1200_fu_3781_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_s_fu_3805_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_467_fu_3821_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_66_fu_3828_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_69_fu_3840_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_69_fu_3840_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_69_fu_3840_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_1202_fu_3859_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_i_i6_fu_3862_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_39_fu_3868_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_105_fu_3879_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1204_fu_3904_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_31_fu_3886_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_464_fu_3908_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_32_fu_3914_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1203_fu_3896_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_2_fu_3920_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_3_fu_3928_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_468_fu_3940_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_236_fu_3953_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_237_fu_3964_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_shl4_cast_fu_3960_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_shl5_cast_fu_3971_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_238_fu_3975_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_1212_fu_3985_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_1211_fu_3981_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal c0_cast_fu_3936_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_470_fu_3995_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_1217_fu_4005_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_1216_fu_4001_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal r0_cast_fu_3856_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_471_fu_4015_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_249_fu_4021_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_250_fu_4033_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_shl2_cast_fu_4029_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_shl3_cast_fu_4041_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_251_fu_4045_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_1220_fu_4055_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_1219_fu_4051_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_1223_fu_4069_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_1222_fu_4065_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_72_fu_4089_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_72_fu_4089_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal OP2_V_21_cast_fu_4086_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_72_fu_4089_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_75_fu_4109_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_75_fu_4109_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_75_fu_4109_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal ireg_V_2_fu_4125_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_tmp_V_3_fu_4141_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_1163_fu_4155_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_430_fu_4159_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal p_Result_172_fu_4167_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_13_fu_4171_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_1161_fu_4129_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_429_fu_4151_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_3_fu_4191_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_433_fu_4203_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_434_fu_4209_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_1165_fu_4233_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal sh_amt_3_cast_fu_4249_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_437_fu_4257_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_438_fu_4261_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal sel_tmp1_fu_4282_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_fu_4287_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_demorgan_fu_4299_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_fu_4303_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_436_fu_4252_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_fu_4309_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_fu_4314_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp9_fu_4320_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal storemerge_fu_4270_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp3_fu_4292_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp15_fu_4334_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1166_fu_4266_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp10_fu_4326_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp21_demorgan_fu_4348_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp21_fu_4353_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp22_fu_4359_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_439_fu_4277_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp16_fu_4340_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_157_fu_4364_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1167_fu_4372_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal Ang_V_1_fu_4380_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_57_fu_4386_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_461_fu_4394_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal r_V_s_fu_4411_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal mul_fu_4422_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal mul_fu_4422_p2 : STD_LOGIC_VECTOR (72 downto 0);
    signal neg_mul_fu_4428_p2 : STD_LOGIC_VECTOR (72 downto 0);
    signal tmp_1193_fu_4434_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_1194_fu_4448_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_233_fu_4444_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp_234_fu_4458_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp_235_fu_4462_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal neg_ti_fu_4469_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal icmp32_fu_4512_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_71_cast_fu_4517_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal p_Val2_96_Val2_s_fu_4522_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_1197_fu_4500_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_62_fu_4507_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal p_Val2_96_Val2_1_fu_4529_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal p_Val2_63_fu_4533_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_1205_fu_4545_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_150_cast_fu_4541_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i_i7_fu_4549_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_40_fu_4555_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_106_fu_4567_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1207_fu_4593_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_33_fu_4575_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_465_fu_4597_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_34_fu_4603_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1206_fu_4585_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_7_fu_4609_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_9_fu_4617_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal o0_cast_fu_4625_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_466_fu_4629_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_1209_fu_4639_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_469_fu_4655_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_242_fu_4680_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_1208_fu_4635_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp35_fu_4649_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1214_fu_4691_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_247_fu_4712_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_78_fu_4733_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_78_fu_4733_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_78_fu_4733_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_81_fu_4753_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_81_fu_4753_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_81_fu_4753_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_243_fu_4769_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_248_fu_4778_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_254_cast_fu_4787_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_255_fu_4794_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_256_fu_4804_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_259_cast_fu_4814_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_260_fu_4821_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_261_fu_4831_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_84_fu_4856_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_84_fu_4856_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_84_fu_4856_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_87_fu_4875_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_87_fu_4875_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_87_fu_4875_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_83_fu_4849_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_80_fu_4845_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_89_fu_4908_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_86_fu_4904_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1148_fu_4956_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_400_fu_4960_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_504_cast_fu_4968_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal exitcond_flatten2_fu_4996_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_6_mid1_fu_5010_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_s_fu_5016_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_457_mid2_v_fu_5022_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_218_fu_5030_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_219_fu_5042_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl6_cast_fu_5038_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl7_cast_fu_5050_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_1149_fu_5060_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_458_mid1_fu_5064_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal j_4_fu_4978_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal exitcond2_fu_5094_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_exitcond_flatten_2_fu_5088_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j9_mid_fu_5002_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal exitcond1_mid_fu_5100_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_222_fu_5120_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_4_dup_fu_5114_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_458_mid2_fu_5072_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_504_cast_mid1_fu_5134_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_401_fu_4972_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_469_mid1_fu_5138_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_223_fu_5144_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_224_fu_5152_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal j_4_mid1_fu_5168_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_471_mid_fu_5080_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_471_mid2_fu_5174_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_471_mid2_cast_fu_5182_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_220_fu_5054_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_225_fu_5186_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal k5_mid2_fu_5126_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_470_mid2_fu_5160_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal k5_cast_fu_5208_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_458_cast_fu_5218_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_227_cast_fu_5192_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_228_fu_5222_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal indvar_flatten20_op_fu_5239_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_7_fu_5277_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal OP1_V_12_fu_5274_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_V_7_fu_5277_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_7_fu_5277_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1151_fu_5301_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_V_fu_5283_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_415_fu_5305_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_6_fu_5311_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1150_fu_5293_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_4_fu_5317_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_0_fu_5325_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal thresh_V_fu_5706_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_i5_fu_5363_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_8_fu_5379_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal OP1_V_13_fu_5376_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_V_8_fu_5379_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_8_fu_5379_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1226_fu_5403_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_V_7_fu_5385_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_475_fu_5407_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_8_fu_5413_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1225_fu_5395_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_6_fu_5419_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_5_fu_5427_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ireg_V_4_fu_5447_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_tmp_V_2_fu_5463_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_1229_fu_5477_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_477_fu_5481_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal p_Result_176_fu_5489_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal isneg_4_fu_5455_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal man_V_19_fu_5493_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_1227_fu_5451_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_476_fu_5473_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_2_fu_5513_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_480_fu_5525_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_481_fu_5531_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_2_fu_5537_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal man_V_20_fu_5499_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_1232_fu_5559_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_1231_fu_5555_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sh_amt_2_cast_fu_5545_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_484_fu_5595_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_485_fu_5599_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_546_cast_fu_5634_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal r_V_9_fu_5647_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_9_fu_5647_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_9_fu_5647_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1235_fu_5660_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_381_fu_5670_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_489_fu_5664_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_382_fu_5680_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1234_fu_5652_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_383_fu_5686_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal thresh_V_fu_5706_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal thresh_V_fu_5706_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_1091_ce : STD_LOGIC;
    signal ap_CS_fsm_state124 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state124 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (66 downto 0);
    signal ap_block_pp1_stage2_subdone : BOOLEAN;
    signal ap_block_pp1_stage3_subdone : BOOLEAN;
    signal ap_block_pp1_stage4_subdone : BOOLEAN;
    signal ap_block_pp1_stage5_subdone : BOOLEAN;
    signal ap_block_pp1_stage6_subdone : BOOLEAN;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_idle_pp2 : STD_LOGIC;
    signal ap_enable_pp2 : STD_LOGIC;
    signal ap_idle_pp3 : STD_LOGIC;
    signal ap_enable_pp3 : STD_LOGIC;
    signal ap_idle_pp4 : STD_LOGIC;
    signal ap_enable_pp4 : STD_LOGIC;
    signal ap_idle_pp5 : STD_LOGIC;
    signal ap_enable_pp5 : STD_LOGIC;
    signal p_Val2_64_fu_3728_p00 : STD_LOGIC_VECTOR (47 downto 0);
    signal thresh_V_fu_5706_p00 : STD_LOGIC_VECTOR (30 downto 0);

    component atan2_cordic_float_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        y_in : IN STD_LOGIC_VECTOR (31 downto 0);
        x_in : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component sqrt_fixed_32_16_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        x_V : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component sin_or_cos_float_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        t_in : IN STD_LOGIC_VECTOR (31 downto 0);
        do_cos : IN STD_LOGIC;
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component sqrt_fixed_32_32_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        x_V : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component SIFT2_Core_fmul_3dEe IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component SIFT2_Core_fdiv_3g8j IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component SIFT2_Core_uitofpXh4 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component SIFT2_Core_sitofpeOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component SIFT2_Core_fpext_hbi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component SIFT2_Core_fsqrt_bom IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component SIFT2_Core_fexp_3jbC IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component SIFT2_Core_mux_63VhK_x IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component SIFT2_Core_mul_mubpm IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (14 downto 0);
        dout : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component calcOrientationHi6jw IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (22 downto 0) );
    end component;


    component calcOrientationHi7jG IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component calcSIFTDescriptobml IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component calcSIFTDescriptobnm IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    mask_table1685_U : component calcOrientationHi6jw
    generic map (
        DataWidth => 23,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => mask_table1685_address0,
        ce0 => mask_table1685_ce0,
        q0 => mask_table1685_q0);

    one_half_table2681_U : component calcOrientationHi7jG
    generic map (
        DataWidth => 24,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => one_half_table2681_address0,
        ce0 => one_half_table2681_ce0,
        q0 => one_half_table2681_q0);

    hist_V_U : component calcSIFTDescriptobml
    generic map (
        DataWidth => 32,
        AddressRange => 288,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => hist_V_address0,
        ce0 => hist_V_ce0,
        we0 => hist_V_we0,
        d0 => hist_V_d0,
        q0 => hist_V_q0,
        address1 => hist_V_address1,
        ce1 => hist_V_ce1,
        we1 => hist_V_we1,
        d1 => hist_V_d1,
        q1 => hist_V_q1);

    desc_buf_val_V_U : component calcSIFTDescriptobnm
    generic map (
        DataWidth => 32,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => desc_buf_val_V_address0,
        ce0 => desc_buf_val_V_ce0,
        we0 => desc_buf_val_V_we0,
        d0 => hist_V_q1,
        q0 => desc_buf_val_V_q0,
        address1 => desc_buf_val_V_address1,
        ce1 => desc_buf_val_V_ce1,
        we1 => desc_buf_val_V_we1,
        d1 => desc_buf_val_V_d1,
        q1 => desc_buf_val_V_q1);

    grp_atan2_cordic_float_s_fu_1044 : component atan2_cordic_float_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_atan2_cordic_float_s_fu_1044_ap_start,
        ap_done => grp_atan2_cordic_float_s_fu_1044_ap_done,
        ap_idle => grp_atan2_cordic_float_s_fu_1044_ap_idle,
        ap_ready => grp_atan2_cordic_float_s_fu_1044_ap_ready,
        y_in => grp_atan2_cordic_float_s_fu_1044_y_in,
        x_in => x_assign_67_reg_6367,
        ap_return => grp_atan2_cordic_float_s_fu_1044_ap_return);

    grp_sqrt_fixed_32_16_s_fu_1050 : component sqrt_fixed_32_16_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        x_V => this_assign_s_reg_6327,
        ap_return => grp_sqrt_fixed_32_16_s_fu_1050_ap_return);

    grp_sin_or_cos_float_s_fu_1055 : component sin_or_cos_float_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_or_cos_float_s_fu_1055_ap_start,
        ap_done => grp_sin_or_cos_float_s_fu_1055_ap_done,
        ap_idle => grp_sin_or_cos_float_s_fu_1055_ap_idle,
        ap_ready => grp_sin_or_cos_float_s_fu_1055_ap_ready,
        t_in => reg_1135,
        do_cos => grp_sin_or_cos_float_s_fu_1055_do_cos,
        ap_return => grp_sin_or_cos_float_s_fu_1055_ap_return);

    grp_sin_or_cos_float_s_fu_1070 : component sin_or_cos_float_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_or_cos_float_s_fu_1070_ap_start,
        ap_done => grp_sin_or_cos_float_s_fu_1070_ap_done,
        ap_idle => grp_sin_or_cos_float_s_fu_1070_ap_idle,
        ap_ready => grp_sin_or_cos_float_s_fu_1070_ap_ready,
        t_in => reg_1135,
        do_cos => grp_sin_or_cos_float_s_fu_1070_do_cos,
        ap_return => grp_sin_or_cos_float_s_fu_1070_ap_return);

    grp_sqrt_fixed_32_32_s_fu_1085 : component sqrt_fixed_32_32_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        x_V => grp_sqrt_fixed_32_32_s_fu_1085_x_V,
        ap_return => grp_sqrt_fixed_32_32_s_fu_1085_ap_return,
        ap_ce => grp_sqrt_fixed_32_32_s_fu_1085_ap_ce);

    SIFT2_Core_fmul_3dEe_U1005 : component SIFT2_Core_fmul_3dEe
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1091_p0,
        din1 => grp_fu_1091_p1,
        ce => grp_fu_1091_ce,
        dout => grp_fu_1091_p2);

    SIFT2_Core_fdiv_3g8j_U1006 : component SIFT2_Core_fdiv_3g8j
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1101_p0,
        din1 => grp_fu_1101_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1101_p2);

    SIFT2_Core_fdiv_3g8j_U1007 : component SIFT2_Core_fdiv_3g8j
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_i_i_i1_reg_5815,
        din1 => hist_width_reg_5803,
        ce => ap_const_logic_1,
        dout => grp_fu_1106_p2);

    SIFT2_Core_uitofpXh4_U1008 : component SIFT2_Core_uitofpXh4
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1112_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_1112_p1);

    SIFT2_Core_sitofpeOg_U1009 : component SIFT2_Core_sitofpeOg
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => nrm_1_reg_987,
        ce => ap_const_logic_1,
        dout => grp_fu_1115_p1);

    SIFT2_Core_fpext_hbi_U1010 : component SIFT2_Core_fpext_hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => grp_fu_1119_p0,
        dout => grp_fu_1119_p1);

    SIFT2_Core_fpext_hbi_U1011 : component SIFT2_Core_fpext_hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => grp_fu_1122_p0,
        dout => grp_fu_1122_p1);

    SIFT2_Core_fsqrt_bom_U1012 : component SIFT2_Core_fsqrt_bom
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_const_lv32_0,
        din1 => x_assign_69_reg_6802,
        ce => ap_const_logic_1,
        dout => grp_fu_1125_p2);

    SIFT2_Core_fexp_3jbC_U1013 : component SIFT2_Core_fexp_3jbC
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_const_lv32_0,
        din1 => x_assign_68_reg_6382,
        ce => ap_const_logic_1,
        dout => grp_fu_1130_p2);

    SIFT2_Core_mux_63VhK_x_U1014 : component SIFT2_Core_mux_63VhK_x
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => img_0_val_V_q0,
        din1 => p_Val2_56_fu_2712_p2,
        din2 => p_Val2_56_fu_2712_p3,
        din3 => p_Val2_56_fu_2712_p4,
        din4 => p_Val2_56_fu_2712_p5,
        din5 => p_Val2_56_fu_2712_p6,
        din6 => tmp_1142_reg_5999,
        dout => p_Val2_56_fu_2712_p8);

    SIFT2_Core_mux_63VhK_x_U1015 : component SIFT2_Core_mux_63VhK_x
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => img_0_val_V_q1,
        din1 => p_Val2_61_fu_2749_p2,
        din2 => p_Val2_61_fu_2749_p3,
        din3 => p_Val2_61_fu_2749_p4,
        din4 => p_Val2_61_fu_2749_p5,
        din5 => p_Val2_61_fu_2749_p6,
        din6 => tmp_1142_reg_5999,
        dout => p_Val2_61_fu_2749_p8);

    SIFT2_Core_mux_63VhK_x_U1016 : component SIFT2_Core_mux_63VhK_x
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => img_0_val_V_q0,
        din1 => p_Val2_98_fu_2851_p2,
        din2 => p_Val2_98_fu_2851_p3,
        din3 => p_Val2_98_fu_2851_p4,
        din4 => p_Val2_98_fu_2851_p5,
        din5 => p_Val2_98_fu_2851_p6,
        din6 => tmp_1142_reg_5999,
        dout => p_Val2_98_fu_2851_p8);

    SIFT2_Core_mux_63VhK_x_U1017 : component SIFT2_Core_mux_63VhK_x
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => img_0_val_V_q1,
        din1 => p_Val2_99_fu_2888_p2,
        din2 => p_Val2_99_fu_2888_p3,
        din3 => p_Val2_99_fu_2888_p4,
        din4 => p_Val2_99_fu_2888_p5,
        din5 => p_Val2_99_fu_2888_p6,
        din6 => tmp_1142_reg_5999,
        dout => p_Val2_99_fu_2888_p8);

    SIFT2_Core_mul_mubpm_U1018 : component SIFT2_Core_mul_mubpm
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 15,
        dout_WIDTH => 31)
    port map (
        din0 => thresh_V_fu_5706_p0,
        din1 => thresh_V_fu_5706_p1,
        dout => thresh_V_fu_5706_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state28) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((tmp_397_fu_2417_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage7) and (ap_const_boolean_0 = ap_block_pp1_stage7_subdone))) then
                    if ((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state28)) then 
                        ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state28);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage7) and (ap_const_boolean_0 = ap_block_pp1_stage7_subdone))) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage7) and (ap_const_boolean_0 = ap_block_pp1_stage7_subdone))) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage7) and (ap_const_boolean_0 = ap_block_pp1_stage7_subdone))) then 
                    ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage7) and (ap_const_boolean_0 = ap_block_pp1_stage7_subdone))) then 
                    ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage7) and (ap_const_boolean_0 = ap_block_pp1_stage7_subdone))) then 
                    ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter7 <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_boolean_0 = ap_block_pp1_stage1_subdone)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage7) and (ap_const_boolean_0 = ap_block_pp1_stage7_subdone)))) then 
                    ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
                elsif (((tmp_397_fu_2417_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
                    ap_enable_reg_pp1_iter7 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp2_exit_iter0_state87) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif (((tmp_397_fu_2417_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp2_exit_iter0_state87) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone))) then 
                    ap_enable_reg_pp2_iter1 <= (ap_const_logic_1 xor ap_condition_pp2_exit_iter0_state87);
                elsif ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
                elsif (((tmp_397_fu_2417_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
                    ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp3_exit_iter0_state90) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state89)) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp3_exit_iter0_state90)) then 
                        ap_enable_reg_pp3_iter1 <= (ap_const_logic_1 xor ap_condition_pp3_exit_iter0_state90);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state89)) then 
                    ap_enable_reg_pp3_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp4_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp4_exit_iter0_state99) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_boolean_0 = ap_block_pp4_stage0_subdone))) then 
                    ap_enable_reg_pp4_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state98)) then 
                    ap_enable_reg_pp4_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp4_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp4_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp4_exit_iter0_state99)) then 
                        ap_enable_reg_pp4_iter1 <= (ap_const_logic_1 xor ap_condition_pp4_exit_iter0_state99);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp4_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp4_stage0_subdone)) then 
                    ap_enable_reg_pp4_iter2 <= ap_enable_reg_pp4_iter1;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state98)) then 
                    ap_enable_reg_pp4_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp5_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp5_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp5_exit_iter0_state121) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0_subdone))) then 
                    ap_enable_reg_pp5_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state120)) then 
                    ap_enable_reg_pp5_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp5_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp5_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp5_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp5_exit_iter0_state121)) then 
                        ap_enable_reg_pp5_iter1 <= (ap_const_logic_1 xor ap_condition_pp5_exit_iter0_state121);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp5_iter1 <= ap_enable_reg_pp5_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp5_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp5_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp5_stage0_subdone)) then 
                    ap_enable_reg_pp5_iter2 <= ap_enable_reg_pp5_iter1;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state120)) then 
                    ap_enable_reg_pp5_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_atan2_cordic_float_s_fu_1044_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_atan2_cordic_float_s_fu_1044_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_predicate_op657_call_state35_state34 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp1_stage6_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6))) then 
                    grp_atan2_cordic_float_s_fu_1044_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_atan2_cordic_float_s_fu_1044_ap_ready = ap_const_logic_1)) then 
                    grp_atan2_cordic_float_s_fu_1044_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_or_cos_float_s_fu_1055_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_or_cos_float_s_fu_1055_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                    grp_sin_or_cos_float_s_fu_1055_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_or_cos_float_s_fu_1055_ap_ready = ap_const_logic_1)) then 
                    grp_sin_or_cos_float_s_fu_1055_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_or_cos_float_s_fu_1070_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_or_cos_float_s_fu_1070_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                    grp_sin_or_cos_float_s_fu_1070_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_or_cos_float_s_fu_1070_ap_ready = ap_const_logic_1)) then 
                    grp_sin_or_cos_float_s_fu_1070_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i10_reg_1033_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_fu_5617_p2 = ap_const_lv1_0) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001))) then 
                i10_reg_1033 <= i_1_fu_5623_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state120)) then 
                i10_reg_1033 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    i7_reg_976_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state89)) then 
                i7_reg_976 <= ap_const_lv8_0;
            elsif (((exitcond7_fu_5257_p2 = ap_const_lv1_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then 
                i7_reg_976 <= i_8_fu_5263_p2;
            end if; 
        end if;
    end process;

    i8_reg_999_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond9_fu_5346_p2 = ap_const_lv1_0) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001))) then 
                i8_reg_999 <= i_9_fu_5352_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state98)) then 
                i8_reg_999 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    i9_reg_920_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_397_fu_2417_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
                i9_reg_920 <= ap_const_lv3_0;
            elsif (((exitcond_flatten3_fu_4984_p2 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then 
                i9_reg_920 <= i9_mid2_fu_5106_p3;
            end if; 
        end if;
    end process;

    i_op_assign_4_reg_890_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state86)) then 
                i_op_assign_4_reg_890 <= i_7_fu_4950_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
                i_op_assign_4_reg_890 <= i_11_fu_2396_p2;
            end if; 
        end if;
    end process;

    i_op_assign_reg_900_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_402_reg_6052 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1))) then 
                i_op_assign_reg_900 <= j_5_reg_6077;
            elsif (((tmp_397_fu_2417_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
                i_op_assign_reg_900 <= i_11_reg_5983;
            end if; 
        end if;
    end process;

    i_reg_846_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten1_fu_2227_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state25))) then 
                i_reg_846 <= tmp_446_mid2_v_fu_2259_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
                i_reg_846 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    indvar_flatten1_reg_835_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten1_fu_2227_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state25))) then 
                indvar_flatten1_reg_835 <= indvar_flatten_next1_fu_2233_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
                indvar_flatten1_reg_835 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    indvar_flatten2_reg_909_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_397_fu_2417_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
                indvar_flatten2_reg_909 <= ap_const_lv8_0;
            elsif (((exitcond_flatten3_fu_4984_p2 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then 
                indvar_flatten2_reg_909 <= indvar_flatten_next3_fu_4990_p2;
            end if; 
        end if;
    end process;

    indvar_flatten3_reg_931_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_397_fu_2417_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
                indvar_flatten3_reg_931 <= ap_const_lv7_0;
            elsif (((exitcond_flatten3_fu_4984_p2 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then 
                indvar_flatten3_reg_931 <= indvar_flatten_next2_fu_5245_p3;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_857_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten1_fu_2227_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state25))) then 
                indvar_flatten_reg_857 <= indvar_flatten_next_fu_2388_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
                indvar_flatten_reg_857 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    j9_reg_942_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_397_fu_2417_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
                j9_reg_942 <= ap_const_lv3_0;
            elsif (((exitcond_flatten3_fu_4984_p2 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then 
                j9_reg_942 <= j9_mid2_fu_5200_p3;
            end if; 
        end if;
    end process;

    j_reg_868_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten1_fu_2227_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state25))) then 
                j_reg_868 <= tmp_455_mid2_fu_2335_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
                j_reg_868 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    k5_reg_953_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_397_fu_2417_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
                k5_reg_953 <= ap_const_lv4_0;
            elsif (((exitcond_flatten3_fu_4984_p2 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then 
                k5_reg_953 <= k_5_fu_5233_p2;
            end if; 
        end if;
    end process;

    k_reg_879_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten1_fu_2227_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state25))) then 
                k_reg_879 <= k_4_fu_2376_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
                k_reg_879 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    nrm_1_reg_987_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond9_reg_6774_pp4_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp4_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001))) then 
                nrm_1_reg_987 <= nrm_2_fu_5435_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state98)) then 
                nrm_1_reg_987 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    p_8_reg_1010_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_479_fu_5519_p2 = ap_const_lv1_0) and (tmp_482_fu_5549_p2 = ap_const_lv1_0) and (tmp_478_fu_5507_p2 = ap_const_lv1_0) and (icmp38_fu_5569_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state118))) then 
                p_8_reg_1010 <= tmp_486_fu_5575_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state119)) then 
                p_8_reg_1010 <= tmp_1233_reg_6837;
            elsif (((tmp_483_fu_5581_p2 = ap_const_lv1_0) and (tmp_482_fu_5549_p2 = ap_const_lv1_0) and (tmp_478_fu_5507_p2 = ap_const_lv1_0) and (tmp_479_fu_5519_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state118))) then 
                p_8_reg_1010 <= p_0211_s_fu_5587_p3;
            elsif (((tmp_478_fu_5507_p2 = ap_const_lv1_0) and (tmp_482_fu_5549_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state118))) then 
                p_8_reg_1010 <= tmp_1230_fu_5609_p1;
            elsif ((((tmp_472_fu_5441_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state102)) or ((tmp_478_fu_5507_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state118)) or ((icmp38_fu_5569_p2 = ap_const_lv1_0) and (tmp_479_fu_5519_p2 = ap_const_lv1_0) and (tmp_482_fu_5549_p2 = ap_const_lv1_0) and (tmp_478_fu_5507_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state118)))) then 
                p_8_reg_1010 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    xf_V_1_reg_964_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state89)) then 
                xf_V_1_reg_964 <= ap_const_lv32_0;
            elsif (((exitcond7_reg_6744_pp3_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then 
                xf_V_1_reg_964 <= nrm_fu_5333_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state120)) then
                OP2_V_10_reg_6847 <= OP2_V_10_fu_5613_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage3_11001) and (or_cond3_reg_6102_pp1_iter6_reg = ap_const_lv1_1) and (or_cond_206_reg_6098_pp1_iter6_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3))) then
                OP2_V_22_cast_reg_6633 <= OP2_V_22_cast_fu_4730_p1;
                hist_V_addr_10_reg_6673 <= tmp_260_cast_fu_4826_p1(9 - 1 downto 0);
                hist_V_addr_11_reg_6678 <= tmp_261_cast_fu_4836_p1(9 - 1 downto 0);
                hist_V_addr_5_reg_6651 <= tmp_243_cast_fu_4773_p1(9 - 1 downto 0);
                hist_V_addr_7_reg_6657 <= tmp_248_cast_fu_4782_p1(9 - 1 downto 0);
                hist_V_addr_8_reg_6663 <= tmp_255_cast_fu_4799_p1(9 - 1 downto 0);
                hist_V_addr_9_reg_6668 <= tmp_256_cast_fu_4809_p1(9 - 1 downto 0);
                p_Val2_74_reg_6628 <= p_Val2_74_fu_4723_p2;
                p_Val2_79_reg_6639 <= p_Val2_78_fu_4733_p2(47 downto 16);
                p_Val2_82_reg_6645 <= p_Val2_81_fu_4753_p2(47 downto 16);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage6_11001) and (or_cond3_reg_6102_pp1_iter1_reg = ap_const_lv1_1) and (or_cond_206_reg_6098_pp1_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6))) then
                agg_result_V_i_reg_6392 <= grp_sqrt_fixed_32_16_s_fu_1050_ap_return;
                icmp25_reg_6437 <= icmp25_fu_3574_p2;
                isneg_3_reg_6397 <= ireg_V_3_fu_3456_p1(63 downto 63);
                man_V_17_reg_6402 <= man_V_17_fu_3508_p3;
                sh_amt_4_reg_6419 <= sh_amt_4_fu_3546_p3;
                tmp_1189_reg_6431 <= tmp_1189_fu_3560_p1;
                tmp_452_reg_6407 <= tmp_452_fu_3516_p2;
                tmp_453_reg_6413 <= tmp_453_fu_3528_p2;
                tmp_456_reg_6425 <= tmp_456_fu_3554_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_402_fu_2496_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                c_reg_6068 <= c_fu_2521_p2;
                p_Val2_42_reg_6056 <= p_Val2_42_fu_2506_p2;
                p_Val2_44_reg_6062 <= p_Val2_44_fu_2516_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state24)) then
                cos_t_V_reg_5936 <= cos_t_V_fu_1983_p3;
                radius_reg_5948 <= radius_fu_2219_p3;
                sin_t_V_reg_5942 <= sin_t_V_fu_2201_p3;
                    tmp_198_cast_reg_5931(16 downto 7) <= tmp_198_cast_fu_1622_p3(16 downto 7);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond9_fu_5346_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001))) then
                desc_buf_val_V_addr_1_reg_6783 <= tmp_474_fu_5358_p1(7 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond7_reg_6744 = ap_const_lv1_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then
                desc_buf_val_V_load_reg_6758 <= desc_buf_val_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then
                exitcond7_reg_6744 <= exitcond7_fu_5257_p2;
                exitcond7_reg_6744_pp3_iter1_reg <= exitcond7_reg_6744;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001))) then
                exitcond9_reg_6774 <= exitcond9_fu_5346_p2;
                exitcond9_reg_6774_pp4_iter1_reg <= exitcond9_reg_6774;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                exitcond_flatten3_reg_6705 <= exitcond_flatten3_fu_4984_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001))) then
                exitcond_reg_6852 <= exitcond_fu_5617_p2;
                exitcond_reg_6852_pp5_iter1_reg <= exitcond_reg_6852;
                tmp_262_reg_6861_pp5_iter1_reg <= tmp_262_reg_6861;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then
                exp_tmp_V_1_reg_5900 <= ireg_V_1_fu_1582_p1(62 downto 52);
                exp_tmp_V_reg_5878 <= ireg_V_fu_1546_p1(62 downto 52);
                isneg_1_reg_5894 <= ireg_V_1_fu_1582_p1(63 downto 63);
                isneg_reg_5872 <= ireg_V_fu_1546_p1(63 downto 63);
                tmp_1132_reg_5883 <= tmp_1132_fu_1572_p1;
                tmp_1138_reg_5905 <= tmp_1138_fu_1608_p1;
                tmp_366_reg_5888 <= tmp_366_fu_1576_p2;
                tmp_377_reg_5910 <= tmp_377_fu_1612_p2;
                x_assign_66_reg_5867 <= x_assign_66_fu_1538_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage2_11001) and (or_cond3_reg_6102_pp1_iter6_reg = ap_const_lv1_1) and (or_cond_206_reg_6098_pp1_iter6_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2))) then
                hist_V_addr_4_reg_6605 <= tmp_242_cast_fu_4686_p1(9 - 1 downto 0);
                hist_V_addr_6_reg_6623 <= tmp_247_cast_fu_4718_p1(9 - 1 downto 0);
                p_Val2_68_reg_6589 <= p_Val2_68_fu_4663_p2;
                tmp_1210_reg_6594 <= tmp_1210_fu_4669_p1;
                tmp_1215_reg_6610 <= tmp_1215_fu_4697_p3;
                    tmp_241_cast_reg_6600(9 downto 3) <= tmp_241_cast_fu_4673_p3(9 downto 3);
                    tmp_246_cast_reg_6618(9 downto 3) <= tmp_246_cast_fu_4705_p3(9 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state15_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                hist_width_reg_5803 <= hist_width_fu_1392_p3;
                tmp_i_i_i1_reg_5815 <= grp_sin_or_cos_float_s_fu_1070_ap_return;
                tmp_i_i_i_reg_5810 <= grp_sin_or_cos_float_s_fu_1055_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state26)) then
                i_11_reg_5983 <= i_11_fu_2396_p2;
                tmp_1142_reg_5999 <= tmp_1142_fu_2411_p1;
                tmp_393_reg_5989 <= tmp_393_fu_2401_p2;
                tmp_394_reg_5994 <= tmp_394_fu_2406_p2;
                tmp_395_reg_6007 <= tmp_395_fu_2414_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage6_11001) and (or_cond3_reg_6102_pp1_iter5_reg = ap_const_lv1_1) and (or_cond_206_reg_6098_pp1_iter5_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6))) then
                icmp15_reg_6552 <= icmp15_fu_4243_p2;
                isneg_2_reg_6512 <= ireg_V_2_fu_4125_p1(63 downto 63);
                man_V_14_reg_6517 <= man_V_14_fu_4177_p3;
                sh_amt_3_reg_6534 <= sh_amt_3_fu_4215_p3;
                tmp_1164_reg_6546 <= tmp_1164_fu_4229_p1;
                tmp_431_reg_6522 <= tmp_431_fu_4185_p2;
                tmp_432_reg_6528 <= tmp_432_fu_4197_p2;
                tmp_435_reg_6540 <= tmp_435_fu_4223_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                is_neg_3_reg_5723 <= is_neg_3_fu_1167_p1(31 downto 31);
                tmp32_V_27_reg_5728 <= tmp32_V_27_fu_1207_p2;
                tmp_1129_reg_5733 <= tmp_1129_fu_1213_p1;
                tmp_358_reg_5718 <= tmp_358_fu_1161_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_402_reg_6052 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage3_11001) and (or_cond3_reg_6102 = ap_const_lv1_1) and (or_cond_206_reg_6098 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3))) then
                is_neg_4_reg_6285 <= p_Val2_52_fu_2905_p2(31 downto 31);
                msb_idx_reg_6312 <= msb_idx_fu_3069_p2;
                p_Val2_139_reg_6306 <= p_Val2_139_fu_2983_p3;
                p_Val2_52_reg_6268 <= p_Val2_52_fu_2905_p2;
                tmp_1171_reg_6317 <= tmp_1171_fu_3075_p1;
                tmp_1172_reg_6322 <= msb_idx_fu_3069_p2(31 downto 31);
                tmp_416_reg_6280 <= tmp_416_fu_2920_p2;
                tmp_442_reg_6301 <= tmp_442_fu_2973_p2;
                tmp_520_cast_reg_6275 <= tmp_520_cast_fu_2914_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage2_11001) and (tmp_402_reg_6052 = ap_const_lv1_0) and (or_cond3_reg_6102 = ap_const_lv1_1) and (or_cond_206_reg_6098 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2))) then
                is_neg_5_reg_6249 <= p_Val2_49_fu_2766_p2(31 downto 31);
                is_neg_6_reg_6262 <= p_Val2_60_fu_2817_p2(76 downto 76);
                p_Val2_49_reg_6177 <= p_Val2_49_fu_2766_p2;
                p_Val2_60_reg_6255 <= p_Val2_60_fu_2817_p2;
                tmp_422_reg_6244 <= tmp_422_fu_2800_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                is_neg_reg_5768 <= sigma_V(31 downto 31);
                tmp32_V_23_reg_5773 <= tmp32_V_23_fu_1326_p2;
                tmp_1121_reg_5778 <= tmp_1121_fu_1332_p1;
                tmp_reg_5763 <= tmp_fu_1280_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_402_fu_2496_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                j_5_reg_6077 <= j_5_fu_2526_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (tmp_402_reg_6052 = ap_const_lv1_0) and (or_cond_206_fu_2583_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1))) then
                or_cond3_reg_6102 <= or_cond3_fu_2604_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1))) then
                or_cond3_reg_6102_pp1_iter1_reg <= or_cond3_reg_6102;
                or_cond3_reg_6102_pp1_iter2_reg <= or_cond3_reg_6102_pp1_iter1_reg;
                or_cond3_reg_6102_pp1_iter3_reg <= or_cond3_reg_6102_pp1_iter2_reg;
                or_cond3_reg_6102_pp1_iter4_reg <= or_cond3_reg_6102_pp1_iter3_reg;
                or_cond3_reg_6102_pp1_iter5_reg <= or_cond3_reg_6102_pp1_iter4_reg;
                or_cond3_reg_6102_pp1_iter6_reg <= or_cond3_reg_6102_pp1_iter5_reg;
                or_cond_206_reg_6098_pp1_iter1_reg <= or_cond_206_reg_6098;
                or_cond_206_reg_6098_pp1_iter2_reg <= or_cond_206_reg_6098_pp1_iter1_reg;
                or_cond_206_reg_6098_pp1_iter3_reg <= or_cond_206_reg_6098_pp1_iter2_reg;
                or_cond_206_reg_6098_pp1_iter4_reg <= or_cond_206_reg_6098_pp1_iter3_reg;
                or_cond_206_reg_6098_pp1_iter5_reg <= or_cond_206_reg_6098_pp1_iter4_reg;
                or_cond_206_reg_6098_pp1_iter6_reg <= or_cond_206_reg_6098_pp1_iter5_reg;
                p_Val2_45_reg_6082_pp1_iter1_reg <= p_Val2_45_reg_6082;
                p_Val2_46_reg_6090_pp1_iter1_reg <= p_Val2_46_reg_6090;
                tmp_1213_reg_6468_pp1_iter3_reg <= tmp_1213_reg_6468;
                tmp_1213_reg_6468_pp1_iter4_reg <= tmp_1213_reg_6468_pp1_iter3_reg;
                tmp_1213_reg_6468_pp1_iter5_reg <= tmp_1213_reg_6468_pp1_iter4_reg;
                tmp_1213_reg_6468_pp1_iter6_reg <= tmp_1213_reg_6468_pp1_iter5_reg;
                tmp_1218_reg_6473_pp1_iter3_reg <= tmp_1218_reg_6473;
                tmp_1218_reg_6473_pp1_iter4_reg <= tmp_1218_reg_6473_pp1_iter3_reg;
                tmp_1218_reg_6473_pp1_iter5_reg <= tmp_1218_reg_6473_pp1_iter4_reg;
                tmp_1218_reg_6473_pp1_iter6_reg <= tmp_1218_reg_6473_pp1_iter5_reg;
                tmp_1221_reg_6478_pp1_iter3_reg <= tmp_1221_reg_6478;
                tmp_1221_reg_6478_pp1_iter4_reg <= tmp_1221_reg_6478_pp1_iter3_reg;
                tmp_1221_reg_6478_pp1_iter5_reg <= tmp_1221_reg_6478_pp1_iter4_reg;
                tmp_1221_reg_6478_pp1_iter6_reg <= tmp_1221_reg_6478_pp1_iter5_reg;
                tmp_1224_reg_6483_pp1_iter3_reg <= tmp_1224_reg_6483;
                tmp_1224_reg_6483_pp1_iter4_reg <= tmp_1224_reg_6483_pp1_iter3_reg;
                tmp_1224_reg_6483_pp1_iter5_reg <= tmp_1224_reg_6483_pp1_iter4_reg;
                tmp_1224_reg_6483_pp1_iter6_reg <= tmp_1224_reg_6483_pp1_iter5_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (tmp_402_reg_6052 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1))) then
                or_cond_206_reg_6098 <= or_cond_206_fu_2583_p2;
                p_Val2_45_reg_6082 <= p_Val2_45_fu_2532_p2;
                p_Val2_46_reg_6090 <= p_Val2_46_fu_2537_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                p_03_i5_reg_5758 <= p_03_i5_fu_1273_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage7_11001) and (or_cond3_reg_6102_pp1_iter1_reg = ap_const_lv1_1) and (or_cond_206_reg_6098_pp1_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage7))) then
                p_1_reg_6448 <= p_1_fu_3813_p3;
                p_Val2_65_reg_6442 <= p_Val2_64_fu_3728_p2(47 downto 16);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_5763 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                p_Result_160_reg_5793 <= p_Result_160_fu_1377_p5;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_358_reg_5718 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                p_Result_165_reg_5748 <= p_Result_165_fu_1258_p5;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_358_reg_5718 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                p_Result_21_reg_5743 <= tmp32_V_44_fu_1217_p1(30 downto 23);
                tmp32_V_44_reg_5738 <= tmp32_V_44_fu_1217_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_416_reg_6280 = ap_const_lv1_0) and (tmp_402_reg_6052 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage6_11001) and (or_cond3_reg_6102 = ap_const_lv1_1) and (or_cond_206_reg_6098 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6))) then
                p_Result_26_reg_6362 <= tmp32_V_45_fu_3278_p1(30 downto 23);
                tmp32_V_45_reg_6357 <= tmp32_V_45_fu_3278_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_422_reg_6244 = ap_const_lv1_0) and (tmp_402_reg_6052 = ap_const_lv1_0) and (or_cond3_reg_6102 = ap_const_lv1_1) and (or_cond_206_reg_6098 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5))) then
                p_Result_29_reg_6352 <= tmp32_V_46_fu_3264_p1(30 downto 23);
                tmp32_V_46_reg_6347 <= tmp32_V_46_fu_3264_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_442_reg_6301 = ap_const_lv1_0) and (tmp_402_reg_6052 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage7_11001) and (or_cond3_reg_6102 = ap_const_lv1_1) and (or_cond_206_reg_6098 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage7))) then
                p_Result_35_reg_6377 <= tmp32_V_47_fu_3391_p1(30 downto 23);
                tmp32_V_47_reg_6372 <= tmp32_V_47_fu_3391_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_5763 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                p_Result_s_reg_5788 <= tmp32_V_fu_1336_p1(30 downto 23);
                tmp32_V_reg_5783 <= tmp32_V_fu_1336_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_397_fu_2417_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state27))) then
                p_Val2_40_reg_6021 <= p_Val2_40_fu_2427_p2;
                p_Val2_s_reg_6016 <= p_Val2_s_fu_2422_p2;
                    tmp_212_cast_reg_6036(17 downto 8) <= tmp_212_cast_fu_2452_p3(17 downto 8);
                    tmp_214_cast_reg_6042(17 downto 8) <= tmp_214_cast_fu_2470_p3(17 downto 8);
                    tmp_216_cast_reg_6047(17 downto 8) <= tmp_216_cast_fu_2488_p3(17 downto 8);
                tmp_398_reg_6026 <= tmp_398_fu_2437_p2;
                tmp_399_reg_6031 <= tmp_399_fu_2443_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (or_cond3_reg_6102_pp1_iter1_reg = ap_const_lv1_1) and (or_cond_206_reg_6098_pp1_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1))) then
                p_Val2_67_reg_6463 <= p_Val2_67_fu_3948_p2;
                tmp_1213_reg_6468 <= tmp_1213_fu_3989_p2;
                tmp_1218_reg_6473 <= tmp_1218_fu_4009_p2;
                tmp_1221_reg_6478 <= tmp_1221_fu_4059_p2;
                tmp_1224_reg_6483 <= tmp_1224_fu_4073_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (or_cond3_reg_6102_pp1_iter1_reg = ap_const_lv1_1) and (or_cond_206_reg_6098_pp1_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                p_Val2_70_reg_6456 <= p_Val2_69_fu_3840_p2(47 downto 16);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                p_Val2_70_reg_6456_pp1_iter3_reg <= p_Val2_70_reg_6456;
                p_Val2_70_reg_6456_pp1_iter4_reg <= p_Val2_70_reg_6456_pp1_iter3_reg;
                p_Val2_70_reg_6456_pp1_iter5_reg <= p_Val2_70_reg_6456_pp1_iter4_reg;
                p_Val2_70_reg_6456_pp1_iter6_reg <= p_Val2_70_reg_6456_pp1_iter5_reg;
                tmp_402_reg_6052 <= tmp_402_fu_2496_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage2_11001) and (or_cond3_reg_6102_pp1_iter2_reg = ap_const_lv1_1) and (or_cond_206_reg_6098_pp1_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2))) then
                p_Val2_71_reg_6488 <= p_Val2_71_fu_4079_p2;
                p_Val2_73_reg_6493 <= p_Val2_72_fu_4089_p2(47 downto 16);
                p_Val2_76_reg_6500 <= p_Val2_75_fu_4109_p2(47 downto 16);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2))) then
                p_Val2_71_reg_6488_pp1_iter3_reg <= p_Val2_71_reg_6488;
                p_Val2_71_reg_6488_pp1_iter4_reg <= p_Val2_71_reg_6488_pp1_iter3_reg;
                p_Val2_71_reg_6488_pp1_iter5_reg <= p_Val2_71_reg_6488_pp1_iter4_reg;
                p_Val2_71_reg_6488_pp1_iter6_reg <= p_Val2_71_reg_6488_pp1_iter5_reg;
                p_Val2_73_reg_6493_pp1_iter3_reg <= p_Val2_73_reg_6493;
                p_Val2_73_reg_6493_pp1_iter4_reg <= p_Val2_73_reg_6493_pp1_iter3_reg;
                p_Val2_73_reg_6493_pp1_iter5_reg <= p_Val2_73_reg_6493_pp1_iter4_reg;
                p_Val2_73_reg_6493_pp1_iter6_reg <= p_Val2_73_reg_6493_pp1_iter5_reg;
                p_Val2_76_reg_6500_pp1_iter3_reg <= p_Val2_76_reg_6500;
                p_Val2_76_reg_6500_pp1_iter4_reg <= p_Val2_76_reg_6500_pp1_iter3_reg;
                p_Val2_76_reg_6500_pp1_iter5_reg <= p_Val2_76_reg_6500_pp1_iter4_reg;
                p_Val2_76_reg_6500_pp1_iter6_reg <= p_Val2_76_reg_6500_pp1_iter5_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage4_11001) and (or_cond3_reg_6102_pp1_iter6_reg = ap_const_lv1_1) and (or_cond_206_reg_6098_pp1_iter6_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage4))) then
                p_Val2_77_reg_6683 <= p_Val2_77_fu_4841_p2;
                p_Val2_85_reg_6688 <= p_Val2_84_fu_4856_p2(47 downto 16);
                p_Val2_88_reg_6694 <= p_Val2_87_fu_4875_p2(47 downto 16);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage7_11001) and (or_cond3_reg_6102_pp1_iter5_reg = ap_const_lv1_1) and (or_cond_206_reg_6098_pp1_iter5_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage7))) then
                r_V_6_reg_6557 <= r_V_6_fu_4398_p2;
                tmp_1192_reg_6562 <= r_V_6_fu_4398_p2(32 downto 32);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (tmp_402_reg_6052 = ap_const_lv1_0) and (or_cond3_fu_2604_p2 = ap_const_lv1_1) and (or_cond_206_fu_2583_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1))) then
                r_V_reg_6172 <= r_V_fu_2686_p2;
                tmp_1156_reg_6166 <= tmp_1156_fu_2657_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state117) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state13) or ((or_cond3_reg_6102_pp1_iter5_reg = ap_const_lv1_1) and (or_cond_206_reg_6098_pp1_iter5_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage5_11001) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5)))) then
                reg_1135 <= grp_fu_1101_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state19) or ((ap_const_boolean_0 = ap_block_pp1_stage6_11001) and (or_cond3_reg_6102_pp1_iter4_reg = ap_const_lv1_1) and (or_cond_206_reg_6098_pp1_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6)))) then
                reg_1143 <= grp_fu_1091_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state97) or (ap_const_logic_1 = ap_CS_fsm_state23))) then
                reg_1149 <= grp_sqrt_fixed_32_32_s_fu_1085_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (or_cond3_reg_6102_pp1_iter6_reg = ap_const_lv1_1) and (or_cond_206_reg_6098_pp1_iter6_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage7_11001) and (or_cond3_reg_6102_pp1_iter6_reg = ap_const_lv1_1) and (or_cond_206_reg_6098_pp1_iter6_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage7) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage3_11001) and (or_cond3_reg_6102_pp1_iter6_reg = ap_const_lv1_1) and (or_cond_206_reg_6098_pp1_iter6_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3)))) then
                reg_1153 <= hist_V_q1;
                reg_1157 <= hist_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state22)) then
                t_V_18_reg_5835 <= t_V_18_fu_1417_p1;
                tmp_1685_i_i_reg_5847 <= tmp_1685_i_i_fu_1437_p2;
                tmp_i_i_reg_5841 <= tmp_i_i_fu_1431_p2;
                v_assign_1_reg_5862 <= grp_fu_1106_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage4_11001) and (tmp_402_reg_6052 = ap_const_lv1_0) and (or_cond3_reg_6102 = ap_const_lv1_1) and (or_cond_206_reg_6098 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage4))) then
                this_assign_s_reg_6327 <= p_Val2_53_fu_3096_p2(47 downto 16);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state98)) then
                    thresh_V_cast3_reg_6768(30 downto 0) <= thresh_V_cast3_fu_5343_p1(30 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage4_11001) and (tmp_416_reg_6280 = ap_const_lv1_0) and (tmp_402_reg_6052 = ap_const_lv1_0) and (or_cond3_reg_6102 = ap_const_lv1_1) and (or_cond_206_reg_6098 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage4))) then
                tmp32_V_31_reg_6332 <= tmp32_V_31_fu_3140_p2;
                tmp_1158_reg_6337 <= tmp_1158_fu_3146_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_422_reg_6244 = ap_const_lv1_0) and (tmp_402_reg_6052 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage3_11001) and (or_cond3_reg_6102 = ap_const_lv1_1) and (or_cond_206_reg_6098 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3))) then
                tmp32_V_35_reg_6291 <= tmp32_V_35_fu_2963_p2;
                tmp_1160_reg_6296 <= tmp_1160_fu_2969_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage4_11001) and (tmp_442_reg_6301 = ap_const_lv1_0) and (tmp_402_reg_6052 = ap_const_lv1_0) and (or_cond3_reg_6102 = ap_const_lv1_1) and (or_cond_206_reg_6098 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage4))) then
                tmp32_V_41_reg_6342 <= tmp32_V_41_fu_3256_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (or_cond3_reg_6102_pp1_iter5_reg = ap_const_lv1_1) and (or_cond_206_reg_6098_pp1_iter5_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1))) then
                tmp_1195_reg_6573 <= tmp_1195_fu_4482_p1;
                tmp_1196_reg_6579 <= tmp_1196_fu_4486_p1;
                tmp_1198_reg_6584 <= tmp_462_fu_4475_p3(27 downto 19);
                tmp_462_reg_6568 <= tmp_462_fu_4475_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_482_fu_5549_p2 = ap_const_lv1_0) and (tmp_478_fu_5507_p2 = ap_const_lv1_0) and (tmp_483_fu_5581_p2 = ap_const_lv1_1) and (tmp_479_fu_5519_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state118))) then
                tmp_1233_reg_6837 <= tmp_1233_fu_5605_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_fu_5617_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001))) then
                tmp_262_reg_6861 <= tmp_262_fu_5638_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_reg_6852 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001))) then
                tmp_385_reg_6871 <= tmp_385_fu_5694_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten3_fu_4984_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                tmp_404_reg_6724 <= tmp_404_fu_5212_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state110)) then
                tmp_i6_reg_6807 <= grp_fu_1125_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond3_reg_6102_pp1_iter1_reg = ap_const_lv1_1) and (or_cond_206_reg_6098_pp1_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5))) then
                v_assign_3_reg_6387 <= grp_fu_1130_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond9_reg_6774 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001))) then
                val_V_reg_6789 <= val_V_fu_5368_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_402_reg_6052 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage6_11001) and (or_cond3_reg_6102 = ap_const_lv1_1) and (or_cond_206_reg_6098 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6))) then
                x_assign_67_reg_6367 <= x_assign_67_fu_3334_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (or_cond3_reg_6102 = ap_const_lv1_1) and (or_cond_206_reg_6098 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                x_assign_68_reg_6382 <= x_assign_68_fu_3449_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state103)) then
                x_assign_69_reg_6802 <= grp_fu_1115_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then
                xf_V_reg_5830 <= xf_V_fu_1411_p2;
            end if;
        end if;
    end process;
    tmp_198_cast_reg_5931(6 downto 0) <= "0000000";
    tmp_212_cast_reg_6036(7 downto 0) <= "00000000";
    tmp_214_cast_reg_6042(7 downto 0) <= "00000000";
    tmp_216_cast_reg_6047(7 downto 0) <= "00000000";
    tmp_241_cast_reg_6600(2 downto 0) <= "000";
    tmp_246_cast_reg_6618(2 downto 0) <= "000";
    thresh_V_cast3_reg_6768(31) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp1_iter6, ap_enable_reg_pp1_iter7, ap_CS_fsm_state15, ap_block_state15_on_subcall_done, ap_CS_fsm_state25, exitcond_flatten1_fu_2227_p2, tmp_397_fu_2417_p2, ap_CS_fsm_state27, tmp_402_fu_2496_p2, ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage1, exitcond_flatten3_fu_4984_p2, ap_enable_reg_pp2_iter0, exitcond7_fu_5257_p2, ap_enable_reg_pp3_iter0, ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter2, exitcond9_fu_5346_p2, ap_enable_reg_pp4_iter0, ap_enable_reg_pp4_iter2, ap_CS_fsm_state118, tmp_478_fu_5507_p2, tmp_482_fu_5549_p2, tmp_479_fu_5519_p2, tmp_483_fu_5581_p2, exitcond_fu_5617_p2, ap_enable_reg_pp5_iter0, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter1, ap_block_pp1_stage7_subdone, ap_block_pp1_stage1_subdone, ap_block_pp2_stage0_subdone, ap_block_pp3_stage0_subdone, ap_block_pp4_stage0_subdone, ap_enable_reg_pp4_iter1, ap_block_pp5_stage0_subdone, ap_enable_reg_pp5_iter1, ap_enable_reg_pp5_iter2, ap_CS_fsm_state102, tmp_472_fu_5441_p2, ap_block_pp1_stage2_subdone, ap_block_pp1_stage3_subdone, ap_block_pp1_stage4_subdone, ap_block_pp1_stage5_subdone, ap_block_pp1_stage6_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                if (((ap_const_boolean_0 = ap_block_state15_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                if (((exitcond_flatten1_fu_2227_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state25))) then
                    ap_NS_fsm <= ap_ST_fsm_state25;
                else
                    ap_NS_fsm <= ap_ST_fsm_state26;
                end if;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                if (((tmp_397_fu_2417_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((tmp_402_fu_2496_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage1;
                elsif (((tmp_402_fu_2496_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state86;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_pp1_stage1 => 
                if ((not(((ap_enable_reg_pp1_iter6 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage1_subdone))) and (ap_const_boolean_0 = ap_block_pp1_stage1_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage2;
                elsif (((ap_enable_reg_pp1_iter6 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage1_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state86;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage1;
                end if;
            when ap_ST_fsm_pp1_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage2;
                end if;
            when ap_ST_fsm_pp1_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage3;
                end if;
            when ap_ST_fsm_pp1_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage4;
                end if;
            when ap_ST_fsm_pp1_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage5;
                end if;
            when ap_ST_fsm_pp1_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage6;
                end if;
            when ap_ST_fsm_pp1_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage7;
                end if;
            when ap_ST_fsm_state86 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_pp2_stage0 => 
                if (not(((exitcond_flatten3_fu_4984_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                elsif (((exitcond_flatten3_fu_4984_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state89;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_state89 => 
                ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
            when ap_ST_fsm_pp3_stage0 => 
                if ((not(((exitcond7_fu_5257_p2 = ap_const_lv1_1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0))) and not(((ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                elsif ((((ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0)) or ((exitcond7_fu_5257_p2 = ap_const_lv1_1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state93;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                end if;
            when ap_ST_fsm_state93 => 
                ap_NS_fsm <= ap_ST_fsm_state94;
            when ap_ST_fsm_state94 => 
                ap_NS_fsm <= ap_ST_fsm_state95;
            when ap_ST_fsm_state95 => 
                ap_NS_fsm <= ap_ST_fsm_state96;
            when ap_ST_fsm_state96 => 
                ap_NS_fsm <= ap_ST_fsm_state97;
            when ap_ST_fsm_state97 => 
                ap_NS_fsm <= ap_ST_fsm_state98;
            when ap_ST_fsm_state98 => 
                ap_NS_fsm <= ap_ST_fsm_pp4_stage0;
            when ap_ST_fsm_pp4_stage0 => 
                if ((not(((exitcond9_fu_5346_p2 = ap_const_lv1_1) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_enable_reg_pp4_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp4_stage0_subdone))) and not(((ap_enable_reg_pp4_iter2 = ap_const_logic_1) and (ap_enable_reg_pp4_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp4_stage0_subdone))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage0;
                elsif ((((ap_enable_reg_pp4_iter2 = ap_const_logic_1) and (ap_enable_reg_pp4_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp4_stage0_subdone)) or ((exitcond9_fu_5346_p2 = ap_const_lv1_1) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_enable_reg_pp4_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp4_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_state102;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage0;
                end if;
            when ap_ST_fsm_state102 => 
                if (((tmp_472_fu_5441_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state102))) then
                    ap_NS_fsm <= ap_ST_fsm_state120;
                else
                    ap_NS_fsm <= ap_ST_fsm_state103;
                end if;
            when ap_ST_fsm_state103 => 
                ap_NS_fsm <= ap_ST_fsm_state104;
            when ap_ST_fsm_state104 => 
                ap_NS_fsm <= ap_ST_fsm_state105;
            when ap_ST_fsm_state105 => 
                ap_NS_fsm <= ap_ST_fsm_state106;
            when ap_ST_fsm_state106 => 
                ap_NS_fsm <= ap_ST_fsm_state107;
            when ap_ST_fsm_state107 => 
                ap_NS_fsm <= ap_ST_fsm_state108;
            when ap_ST_fsm_state108 => 
                ap_NS_fsm <= ap_ST_fsm_state109;
            when ap_ST_fsm_state109 => 
                ap_NS_fsm <= ap_ST_fsm_state110;
            when ap_ST_fsm_state110 => 
                ap_NS_fsm <= ap_ST_fsm_state111;
            when ap_ST_fsm_state111 => 
                ap_NS_fsm <= ap_ST_fsm_state112;
            when ap_ST_fsm_state112 => 
                ap_NS_fsm <= ap_ST_fsm_state113;
            when ap_ST_fsm_state113 => 
                ap_NS_fsm <= ap_ST_fsm_state114;
            when ap_ST_fsm_state114 => 
                ap_NS_fsm <= ap_ST_fsm_state115;
            when ap_ST_fsm_state115 => 
                ap_NS_fsm <= ap_ST_fsm_state116;
            when ap_ST_fsm_state116 => 
                ap_NS_fsm <= ap_ST_fsm_state117;
            when ap_ST_fsm_state117 => 
                ap_NS_fsm <= ap_ST_fsm_state118;
            when ap_ST_fsm_state118 => 
                if (((tmp_482_fu_5549_p2 = ap_const_lv1_0) and (tmp_478_fu_5507_p2 = ap_const_lv1_0) and (tmp_483_fu_5581_p2 = ap_const_lv1_1) and (tmp_479_fu_5519_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state118))) then
                    ap_NS_fsm <= ap_ST_fsm_state119;
                else
                    ap_NS_fsm <= ap_ST_fsm_state120;
                end if;
            when ap_ST_fsm_state119 => 
                ap_NS_fsm <= ap_ST_fsm_state120;
            when ap_ST_fsm_state120 => 
                ap_NS_fsm <= ap_ST_fsm_pp5_stage0;
            when ap_ST_fsm_pp5_stage0 => 
                if ((not(((exitcond_fu_5617_p2 = ap_const_lv1_1) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_enable_reg_pp5_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp5_stage0_subdone))) and not(((ap_enable_reg_pp5_iter2 = ap_const_logic_1) and (ap_enable_reg_pp5_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp5_stage0_subdone))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp5_stage0;
                elsif ((((ap_enable_reg_pp5_iter2 = ap_const_logic_1) and (ap_enable_reg_pp5_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp5_stage0_subdone)) or ((exitcond_fu_5617_p2 = ap_const_lv1_1) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_enable_reg_pp5_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp5_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_state124;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp5_stage0;
                end if;
            when ap_ST_fsm_state124 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    Ang_V_1_fu_4380_p2 <= std_logic_vector(unsigned(ap_const_lv32_1680000) + unsigned(p_Val2_157_fu_4364_p3));
    F2_1_fu_2018_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(tmp_375_fu_1991_p1));
    F2_2_fu_5513_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(tmp_476_fu_5473_p1));
    F2_3_fu_4191_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(tmp_429_fu_4151_p1));
    F2_4_fu_3522_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(tmp_450_fu_3482_p1));
    F2_fu_1800_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(tmp_364_fu_1773_p1));
    NZeros_fu_3055_p2 <= std_logic_vector(unsigned(tmp_1169_fu_3011_p1) + unsigned(tmp_1170_fu_3051_p1));
        OP1_V_10_fu_2660_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_42_reg_6056),64));

        OP1_V_11_fu_2669_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_44_reg_6062),64));

        OP1_V_12_fu_5274_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(desc_buf_val_V_load_reg_6758),64));

        OP1_V_13_fu_5376_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(val_V_reg_6789),64));

        OP2_V_10_fu_5613_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_8_reg_1010),64));

        OP2_V_21_cast_fu_4086_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_67_reg_6463),48));

        OP2_V_22_cast_fu_4730_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_68_reg_6589),48));

    W_V_fu_3713_p3 <= 
        newSel19_fu_3699_p3 when (or_cond6_fu_3707_p2(0) = '1') else 
        ap_const_lv32_0;
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(27);
    ap_CS_fsm_pp1_stage1 <= ap_CS_fsm(28);
    ap_CS_fsm_pp1_stage2 <= ap_CS_fsm(29);
    ap_CS_fsm_pp1_stage3 <= ap_CS_fsm(30);
    ap_CS_fsm_pp1_stage4 <= ap_CS_fsm(31);
    ap_CS_fsm_pp1_stage5 <= ap_CS_fsm(32);
    ap_CS_fsm_pp1_stage6 <= ap_CS_fsm(33);
    ap_CS_fsm_pp1_stage7 <= ap_CS_fsm(34);
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(36);
    ap_CS_fsm_pp3_stage0 <= ap_CS_fsm(38);
    ap_CS_fsm_pp4_stage0 <= ap_CS_fsm(45);
    ap_CS_fsm_pp5_stage0 <= ap_CS_fsm(65);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state102 <= ap_CS_fsm(46);
    ap_CS_fsm_state103 <= ap_CS_fsm(47);
    ap_CS_fsm_state104 <= ap_CS_fsm(48);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state110 <= ap_CS_fsm(54);
    ap_CS_fsm_state111 <= ap_CS_fsm(55);
    ap_CS_fsm_state117 <= ap_CS_fsm(61);
    ap_CS_fsm_state118 <= ap_CS_fsm(62);
    ap_CS_fsm_state119 <= ap_CS_fsm(63);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state120 <= ap_CS_fsm(64);
    ap_CS_fsm_state124 <= ap_CS_fsm(66);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state86 <= ap_CS_fsm(35);
    ap_CS_fsm_state89 <= ap_CS_fsm(37);
    ap_CS_fsm_state93 <= ap_CS_fsm(39);
    ap_CS_fsm_state94 <= ap_CS_fsm(40);
    ap_CS_fsm_state95 <= ap_CS_fsm(41);
    ap_CS_fsm_state96 <= ap_CS_fsm(42);
    ap_CS_fsm_state97 <= ap_CS_fsm(43);
    ap_CS_fsm_state98 <= ap_CS_fsm(44);
        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp5_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp5_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp5_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state100_pp4_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state101_pp4_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state121_pp5_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state122_pp5_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state123_pp5_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state15_on_subcall_done_assign_proc : process(grp_sin_or_cos_float_s_fu_1055_ap_done, grp_sin_or_cos_float_s_fu_1070_ap_done)
    begin
                ap_block_state15_on_subcall_done <= ((grp_sin_or_cos_float_s_fu_1070_ap_done = ap_const_logic_0) or (grp_sin_or_cos_float_s_fu_1055_ap_done = ap_const_logic_0));
    end process;

        ap_block_state28_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp1_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp1_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp1_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp1_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp1_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp1_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp1_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp1_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp1_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp1_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state40_pp1_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp1_stage5_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state42_pp1_stage6_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state43_pp1_stage7_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state44_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state45_pp1_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state46_pp1_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state47_pp1_stage3_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state48_pp1_stage4_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state49_pp1_stage5_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state50_pp1_stage6_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state51_pp1_stage7_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state52_pp1_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state53_pp1_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state54_pp1_stage2_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state55_pp1_stage3_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state56_pp1_stage4_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state57_pp1_stage5_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state58_pp1_stage6_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state59_pp1_stage7_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state60_pp1_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state61_pp1_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state62_pp1_stage2_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state63_pp1_stage3_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state64_pp1_stage4_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state65_pp1_stage5_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state66_pp1_stage6_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state67_pp1_stage7_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state68_pp1_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state69_pp1_stage1_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state70_pp1_stage2_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state71_pp1_stage3_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state72_pp1_stage4_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state73_pp1_stage5_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state74_pp1_stage6_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state75_pp1_stage7_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state76_pp1_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state77_pp1_stage1_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state78_pp1_stage2_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state79_pp1_stage3_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state80_pp1_stage4_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state81_pp1_stage5_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state82_pp1_stage6_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state83_pp1_stage7_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state84_pp1_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state85_pp1_stage1_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state87_pp2_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state88_pp2_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state90_pp3_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state91_pp3_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state92_pp3_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state99_pp4_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp1_exit_iter0_state28_assign_proc : process(tmp_402_fu_2496_p2)
    begin
        if ((tmp_402_fu_2496_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state28 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state28 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp2_exit_iter0_state87_assign_proc : process(exitcond_flatten3_fu_4984_p2)
    begin
        if ((exitcond_flatten3_fu_4984_p2 = ap_const_lv1_1)) then 
            ap_condition_pp2_exit_iter0_state87 <= ap_const_logic_1;
        else 
            ap_condition_pp2_exit_iter0_state87 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp3_exit_iter0_state90_assign_proc : process(exitcond7_fu_5257_p2)
    begin
        if ((exitcond7_fu_5257_p2 = ap_const_lv1_1)) then 
            ap_condition_pp3_exit_iter0_state90 <= ap_const_logic_1;
        else 
            ap_condition_pp3_exit_iter0_state90 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp4_exit_iter0_state99_assign_proc : process(exitcond9_fu_5346_p2)
    begin
        if ((exitcond9_fu_5346_p2 = ap_const_lv1_1)) then 
            ap_condition_pp4_exit_iter0_state99 <= ap_const_logic_1;
        else 
            ap_condition_pp4_exit_iter0_state99 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp5_exit_iter0_state121_assign_proc : process(exitcond_fu_5617_p2)
    begin
        if ((exitcond_fu_5617_p2 = ap_const_lv1_1)) then 
            ap_condition_pp5_exit_iter0_state121 <= ap_const_logic_1;
        else 
            ap_condition_pp5_exit_iter0_state121 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state124)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state124) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);
    ap_enable_pp2 <= (ap_idle_pp2 xor ap_const_logic_1);
    ap_enable_pp3 <= (ap_idle_pp3 xor ap_const_logic_1);
    ap_enable_pp4 <= (ap_idle_pp4 xor ap_const_logic_1);
    ap_enable_pp5 <= (ap_idle_pp5 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter5, ap_enable_reg_pp1_iter4, ap_enable_reg_pp1_iter6, ap_enable_reg_pp1_iter7, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_enable_reg_pp1_iter0 = ap_const_logic_0) and (ap_enable_reg_pp1_iter7 = ap_const_logic_0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp2_assign_proc : process(ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_0))) then 
            ap_idle_pp2 <= ap_const_logic_1;
        else 
            ap_idle_pp2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp3_assign_proc : process(ap_enable_reg_pp3_iter0, ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter2)
    begin
        if (((ap_enable_reg_pp3_iter2 = ap_const_logic_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_0))) then 
            ap_idle_pp3 <= ap_const_logic_1;
        else 
            ap_idle_pp3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp4_assign_proc : process(ap_enable_reg_pp4_iter0, ap_enable_reg_pp4_iter2, ap_enable_reg_pp4_iter1)
    begin
        if (((ap_enable_reg_pp4_iter1 = ap_const_logic_0) and (ap_enable_reg_pp4_iter2 = ap_const_logic_0) and (ap_enable_reg_pp4_iter0 = ap_const_logic_0))) then 
            ap_idle_pp4 <= ap_const_logic_1;
        else 
            ap_idle_pp4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp5_assign_proc : process(ap_enable_reg_pp5_iter0, ap_enable_reg_pp5_iter1, ap_enable_reg_pp5_iter2)
    begin
        if (((ap_enable_reg_pp5_iter2 = ap_const_logic_0) and (ap_enable_reg_pp5_iter1 = ap_const_logic_0) and (ap_enable_reg_pp5_iter0 = ap_const_logic_0))) then 
            ap_idle_pp5 <= ap_const_logic_1;
        else 
            ap_idle_pp5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_i_op_assign_phi_fu_903_p4_assign_proc : process(i_op_assign_reg_900, ap_CS_fsm_pp1_stage0, tmp_402_reg_6052, j_5_reg_6077, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0)
    begin
        if (((tmp_402_reg_6052 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            ap_phi_mux_i_op_assign_phi_fu_903_p4 <= j_5_reg_6077;
        else 
            ap_phi_mux_i_op_assign_phi_fu_903_p4 <= i_op_assign_reg_900;
        end if; 
    end process;


    ap_predicate_op657_call_state35_state34_assign_proc : process(or_cond_206_reg_6098, or_cond3_reg_6102, tmp_402_reg_6052)
    begin
                ap_predicate_op657_call_state35_state34 <= ((tmp_402_reg_6052 = ap_const_lv1_0) and (or_cond3_reg_6102 = ap_const_lv1_1) and (or_cond_206_reg_6098 = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state124)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state124)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

        c0_cast_fu_3936_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_3_fu_3928_p3),17));

    c_fu_2521_p2 <= std_logic_vector(signed(ap_phi_mux_i_op_assign_phi_fu_903_p4) + signed(x0));
    cos_t_V_fu_1983_p3 <= 
        tmp_374_fu_1889_p2 when (sel_tmp92_fu_1977_p2(0) = '1') else 
        sel_tmp86_fu_1957_p3;

    desc_buf_val_V_address0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, ap_CS_fsm_pp4_stage0, ap_enable_reg_pp4_iter0, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0, tmp_405_fu_5253_p1, tmp_414_fu_5269_p1, ap_block_pp3_stage0, tmp_474_fu_5358_p1, ap_block_pp4_stage0)
    begin
        if (((ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_boolean_0 = ap_block_pp4_stage0))) then 
            desc_buf_val_V_address0 <= tmp_474_fu_5358_p1(7 - 1 downto 0);
        elsif (((ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            desc_buf_val_V_address0 <= tmp_414_fu_5269_p1(7 - 1 downto 0);
        elsif (((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            desc_buf_val_V_address0 <= tmp_405_fu_5253_p1(7 - 1 downto 0);
        else 
            desc_buf_val_V_address0 <= "XXXXXXX";
        end if; 
    end process;


    desc_buf_val_V_address1_assign_proc : process(ap_CS_fsm_pp4_stage0, desc_buf_val_V_addr_1_reg_6783, ap_CS_fsm_pp5_stage0, ap_enable_reg_pp5_iter0, ap_enable_reg_pp4_iter1, ap_block_pp4_stage0, tmp_488_fu_5629_p1, ap_block_pp5_stage0)
    begin
        if (((ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0))) then 
            desc_buf_val_V_address1 <= tmp_488_fu_5629_p1(7 - 1 downto 0);
        elsif (((ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_boolean_0 = ap_block_pp4_stage0))) then 
            desc_buf_val_V_address1 <= desc_buf_val_V_addr_1_reg_6783;
        else 
            desc_buf_val_V_address1 <= "XXXXXXX";
        end if; 
    end process;


    desc_buf_val_V_ce0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter0, ap_CS_fsm_pp4_stage0, ap_block_pp4_stage0_11001, ap_enable_reg_pp4_iter0, ap_enable_reg_pp2_iter1)
    begin
        if ((((ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001)) or ((ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001)) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)))) then 
            desc_buf_val_V_ce0 <= ap_const_logic_1;
        else 
            desc_buf_val_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    desc_buf_val_V_ce1_assign_proc : process(ap_CS_fsm_pp4_stage0, ap_block_pp4_stage0_11001, ap_CS_fsm_pp5_stage0, ap_block_pp5_stage0_11001, ap_enable_reg_pp5_iter0, ap_enable_reg_pp4_iter1)
    begin
        if ((((ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001)) or ((ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001)))) then 
            desc_buf_val_V_ce1 <= ap_const_logic_1;
        else 
            desc_buf_val_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    desc_buf_val_V_d1 <= 
        desc_buf_val_V_q0 when (tmp_i5_fu_5363_p2(0) = '1') else 
        thresh_V_cast3_reg_6768;

    desc_buf_val_V_we0_assign_proc : process(exitcond_flatten3_reg_6705, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter1)
    begin
        if (((exitcond_flatten3_reg_6705 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then 
            desc_buf_val_V_we0 <= ap_const_logic_1;
        else 
            desc_buf_val_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    desc_buf_val_V_we1_assign_proc : process(exitcond9_reg_6774, ap_CS_fsm_pp4_stage0, ap_block_pp4_stage0_11001, ap_enable_reg_pp4_iter1)
    begin
        if (((exitcond9_reg_6774 = ap_const_lv1_0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001))) then 
            desc_buf_val_V_we1 <= ap_const_logic_1;
        else 
            desc_buf_val_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    descriptor_val_address0 <= tmp_262_cast_fu_5702_p1(16 - 1 downto 0);

    descriptor_val_ce0_assign_proc : process(ap_block_pp5_stage0_11001, ap_enable_reg_pp5_iter2)
    begin
        if (((ap_enable_reg_pp5_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001))) then 
            descriptor_val_ce0 <= ap_const_logic_1;
        else 
            descriptor_val_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    descriptor_val_d0 <= tmp_385_reg_6871;

    descriptor_val_we0_assign_proc : process(ap_block_pp5_stage0_11001, exitcond_reg_6852_pp5_iter1_reg, ap_enable_reg_pp5_iter2)
    begin
        if (((exitcond_reg_6852_pp5_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp5_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001))) then 
            descriptor_val_we0 <= ap_const_logic_1;
        else 
            descriptor_val_we0 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond1_fu_2303_p2 <= "1" when (k_reg_879 = ap_const_lv4_8) else "0";
    exitcond1_mid_fu_5100_p2 <= (not_exitcond_flatten_2_fu_5088_p2 and exitcond2_fu_5094_p2);
    exitcond2_fu_5094_p2 <= "1" when (k5_reg_953 = ap_const_lv4_8) else "0";
    exitcond6_mid_fu_2309_p2 <= (not_exitcond_flatten_fu_2297_p2 and exitcond1_fu_2303_p2);
    exitcond7_fu_5257_p2 <= "1" when (i7_reg_976 = ap_const_lv8_80) else "0";
    exitcond9_fu_5346_p2 <= "1" when (i8_reg_999 = ap_const_lv8_80) else "0";
    exitcond_flatten1_fu_2227_p2 <= "1" when (indvar_flatten1_reg_835 = ap_const_lv9_120) else "0";
    exitcond_flatten2_fu_4996_p2 <= "1" when (indvar_flatten3_reg_931 = ap_const_lv7_20) else "0";
    exitcond_flatten3_fu_4984_p2 <= "1" when (indvar_flatten2_reg_909 = ap_const_lv8_80) else "0";
    exitcond_flatten_fu_2245_p2 <= "1" when (indvar_flatten_reg_857 = ap_const_lv7_30) else "0";
    exitcond_fu_5617_p2 <= "1" when (i10_reg_1033 = ap_const_lv8_80) else "0";
    exp_tmp_V_2_fu_5463_p4 <= ireg_V_4_fu_5447_p1(62 downto 52);
    exp_tmp_V_3_fu_4141_p4 <= ireg_V_2_fu_4125_p1(62 downto 52);
    exp_tmp_V_4_fu_3472_p4 <= ireg_V_3_fu_3456_p1(62 downto 52);
    f_11_fu_3379_p1 <= p_Result_169_fu_3368_p5;
    f_13_fu_3330_p1 <= p_Result_171_fu_3319_p5;
    f_15_fu_3445_p1 <= p_Result_174_fu_3434_p5;
    f_9_fu_1269_p1 <= p_Result_165_reg_5748;
    f_fu_1388_p1 <= p_Result_160_reg_5793;
    grp_atan2_cordic_float_s_fu_1044_ap_start <= grp_atan2_cordic_float_s_fu_1044_ap_start_reg;
    grp_atan2_cordic_float_s_fu_1044_y_in <= 
        ap_const_lv32_0 when (tmp_416_reg_6280(0) = '1') else 
        f_11_fu_3379_p1;

    grp_fu_1091_ce_assign_proc : process(ap_CS_fsm_pp1_stage5, ap_block_pp1_stage5_11001, ap_CS_fsm_state19, ap_CS_fsm_state21, ap_CS_fsm_pp1_stage6, ap_block_pp1_stage6_11001, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_block_state15_on_subcall_done, ap_CS_fsm_state18, ap_CS_fsm_state20)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state20) or ((ap_const_boolean_0 = ap_block_state15_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((ap_const_boolean_0 = ap_block_pp1_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6)) or ((ap_const_boolean_0 = ap_block_pp1_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5)))) then 
            grp_fu_1091_ce <= ap_const_logic_1;
        else 
            grp_fu_1091_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1091_p0_assign_proc : process(ap_CS_fsm_pp1_stage5, reg_1143, ap_enable_reg_pp1_iter4, f_9_fu_1269_p1, ap_CS_fsm_state5, f_fu_1388_p1, ap_CS_fsm_state14, hist_width_reg_5803, ap_CS_fsm_state18, grp_atan2_cordic_float_s_fu_1044_ap_return, ap_CS_fsm_state20, ap_block_pp1_stage5)
    begin
        if (((ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5) and (ap_const_boolean_0 = ap_block_pp1_stage5))) then 
            grp_fu_1091_p0 <= grp_atan2_cordic_float_s_fu_1044_ap_return;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            grp_fu_1091_p0 <= reg_1143;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_fu_1091_p0 <= hist_width_reg_5803;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_fu_1091_p0 <= f_fu_1388_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_1091_p0 <= f_9_fu_1269_p1;
        else 
            grp_fu_1091_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1091_p1_assign_proc : process(ap_CS_fsm_pp1_stage5, ap_enable_reg_pp1_iter4, ap_CS_fsm_state5, ap_CS_fsm_state14, ap_CS_fsm_state18, ap_CS_fsm_state20, ap_block_pp1_stage5)
    begin
        if (((ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5) and (ap_const_boolean_0 = ap_block_pp1_stage5))) then 
            grp_fu_1091_p1 <= ap_const_lv32_43340000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            grp_fu_1091_p1 <= ap_const_lv32_40A00000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_fu_1091_p1 <= ap_const_lv32_3F3504F3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_fu_1091_p1 <= ap_const_lv32_40400000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_1091_p1 <= ap_const_lv32_C0490FDA;
        else 
            grp_fu_1091_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1101_p0_assign_proc : process(reg_1143, ap_enable_reg_pp1_iter4, ap_CS_fsm_pp1_stage7, p_03_i5_reg_5758, tmp_i_i_i_reg_5810, ap_block_pp1_stage7, ap_CS_fsm_state7, ap_CS_fsm_state16, ap_CS_fsm_state111)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state111)) then 
            grp_fu_1101_p0 <= ap_const_lv32_44000000;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage7) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage7))) then 
            grp_fu_1101_p0 <= reg_1143;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_fu_1101_p0 <= tmp_i_i_i_reg_5810;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fu_1101_p0 <= p_03_i5_reg_5758;
        else 
            grp_fu_1101_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1101_p1_assign_proc : process(ap_enable_reg_pp1_iter4, ap_CS_fsm_pp1_stage7, hist_width_reg_5803, tmp_i6_reg_6807, ap_block_pp1_stage7, ap_CS_fsm_state7, ap_CS_fsm_state16, ap_CS_fsm_state111)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state111)) then 
            grp_fu_1101_p1 <= tmp_i6_reg_6807;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage7) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage7))) then 
            grp_fu_1101_p1 <= ap_const_lv32_40490FDA;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_fu_1101_p1 <= hist_width_reg_5803;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fu_1101_p1 <= ap_const_lv32_43340000;
        else 
            grp_fu_1101_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1112_p0_assign_proc : process(ap_CS_fsm_pp1_stage5, ap_CS_fsm_pp1_stage6, tmp32_V_27_reg_5728, tmp32_V_23_reg_5773, ap_enable_reg_pp1_iter0, tmp32_V_35_reg_6291, ap_CS_fsm_pp1_stage4, tmp32_V_31_reg_6332, tmp32_V_41_reg_6342, ap_block_pp1_stage5, ap_block_pp1_stage4, ap_block_pp1_stage6, ap_CS_fsm_state2, ap_CS_fsm_state11)
    begin
        if (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_const_boolean_0 = ap_block_pp1_stage6))) then 
            grp_fu_1112_p0 <= tmp32_V_41_reg_6342;
        elsif (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5) and (ap_const_boolean_0 = ap_block_pp1_stage5))) then 
            grp_fu_1112_p0 <= tmp32_V_31_reg_6332;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage4) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage4))) then 
            grp_fu_1112_p0 <= tmp32_V_35_reg_6291;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_1112_p0 <= tmp32_V_23_reg_5773;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_1112_p0 <= tmp32_V_27_reg_5728;
        else 
            grp_fu_1112_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1119_p0_assign_proc : process(reg_1135, ap_CS_fsm_pp1_stage6, ap_CS_fsm_state23, v_assign_3_reg_6387, ap_CS_fsm_state118, ap_enable_reg_pp1_iter1, ap_block_pp1_stage6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage6))) then 
            grp_fu_1119_p0 <= v_assign_3_reg_6387;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state118))) then 
            grp_fu_1119_p0 <= reg_1135;
        else 
            grp_fu_1119_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1122_p0_assign_proc : process(reg_1135, ap_enable_reg_pp1_iter5, ap_CS_fsm_pp1_stage6, ap_CS_fsm_state23, v_assign_1_reg_5862, ap_block_pp1_stage6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage6))) then 
            grp_fu_1122_p0 <= reg_1135;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            grp_fu_1122_p0 <= v_assign_1_reg_5862;
        else 
            grp_fu_1122_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_sin_or_cos_float_s_fu_1055_ap_start <= grp_sin_or_cos_float_s_fu_1055_ap_start_reg;
    grp_sin_or_cos_float_s_fu_1055_do_cos <= ap_const_logic_1;
    grp_sin_or_cos_float_s_fu_1070_ap_start <= grp_sin_or_cos_float_s_fu_1070_ap_start_reg;
    grp_sin_or_cos_float_s_fu_1070_do_cos <= ap_const_logic_0;

    grp_sqrt_fixed_32_32_s_fu_1085_ap_ce_assign_proc : process(ap_CS_fsm_state22, ap_CS_fsm_state19, ap_CS_fsm_state21, ap_CS_fsm_state23, ap_CS_fsm_state97, ap_CS_fsm_state20, ap_CS_fsm_state93, ap_CS_fsm_state94, ap_CS_fsm_state95, ap_CS_fsm_state96)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state97) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state96) or (ap_const_logic_1 = ap_CS_fsm_state95) or (ap_const_logic_1 = ap_CS_fsm_state94) or (ap_const_logic_1 = ap_CS_fsm_state93) or (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            grp_sqrt_fixed_32_32_s_fu_1085_ap_ce <= ap_const_logic_1;
        else 
            grp_sqrt_fixed_32_32_s_fu_1085_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_sqrt_fixed_32_32_s_fu_1085_x_V_assign_proc : process(xf_V_1_reg_964, ap_CS_fsm_state19, xf_V_reg_5830, ap_CS_fsm_state93)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state93)) then 
            grp_sqrt_fixed_32_32_s_fu_1085_x_V <= xf_V_1_reg_964;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            grp_sqrt_fixed_32_32_s_fu_1085_x_V <= xf_V_reg_5830;
        else 
            grp_sqrt_fixed_32_32_s_fu_1085_x_V <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    hist_V_address0_assign_proc : process(ap_CS_fsm_pp1_stage5, ap_CS_fsm_pp1_stage6, ap_CS_fsm_pp1_stage3, ap_enable_reg_pp1_iter6, ap_CS_fsm_pp1_stage7, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter7, ap_CS_fsm_state25, ap_CS_fsm_pp1_stage1, ap_CS_fsm_pp1_stage2, ap_CS_fsm_pp1_stage4, hist_V_addr_6_reg_6623, hist_V_addr_5_reg_6651, hist_V_addr_7_reg_6657, hist_V_addr_10_reg_6673, hist_V_addr_11_reg_6678, ap_block_pp1_stage0, ap_block_pp1_stage7, ap_block_pp1_stage5, tmp_210_cast_fu_2371_p1, ap_block_pp1_stage1, ap_block_pp1_stage2, tmp_247_cast_fu_4718_p1, ap_block_pp1_stage3, tmp_260_cast_fu_4826_p1, ap_block_pp1_stage4, ap_block_pp1_stage6)
    begin
        if (((ap_enable_reg_pp1_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            hist_V_address0 <= hist_V_addr_5_reg_6651;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage1)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage7) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage7)))) then 
            hist_V_address0 <= hist_V_addr_11_reg_6678;
        elsif (((ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_const_boolean_0 = ap_block_pp1_stage6))) then 
            hist_V_address0 <= hist_V_addr_7_reg_6657;
        elsif (((ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5) and (ap_const_boolean_0 = ap_block_pp1_stage5))) then 
            hist_V_address0 <= hist_V_addr_6_reg_6623;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage4) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage4))) then 
            hist_V_address0 <= hist_V_addr_10_reg_6673;
        elsif (((ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_const_boolean_0 = ap_block_pp1_stage3))) then 
            hist_V_address0 <= tmp_260_cast_fu_4826_p1(9 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage2))) then 
            hist_V_address0 <= tmp_247_cast_fu_4718_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            hist_V_address0 <= tmp_210_cast_fu_2371_p1(9 - 1 downto 0);
        else 
            hist_V_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    hist_V_address1_assign_proc : process(ap_CS_fsm_pp1_stage5, ap_CS_fsm_pp1_stage6, ap_CS_fsm_pp1_stage3, ap_enable_reg_pp1_iter6, ap_CS_fsm_pp1_stage7, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter7, ap_CS_fsm_pp1_stage1, ap_CS_fsm_pp1_stage2, ap_CS_fsm_pp1_stage4, hist_V_addr_4_reg_6605, hist_V_addr_5_reg_6651, hist_V_addr_7_reg_6657, hist_V_addr_8_reg_6663, hist_V_addr_9_reg_6668, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_block_pp1_stage0, ap_block_pp1_stage7, ap_block_pp1_stage5, ap_block_pp1_stage1, ap_block_pp1_stage2, tmp_242_cast_fu_4686_p1, ap_block_pp1_stage3, tmp_255_cast_fu_4799_p1, tmp_228_cast_fu_5228_p1, ap_block_pp2_stage0, ap_block_pp1_stage4, ap_block_pp1_stage6)
    begin
        if (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            hist_V_address1 <= tmp_228_cast_fu_5228_p1(9 - 1 downto 0);
        elsif (((ap_enable_reg_pp1_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            hist_V_address1 <= hist_V_addr_7_reg_6657;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage1)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage7) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage7)))) then 
            hist_V_address1 <= hist_V_addr_9_reg_6668;
        elsif (((ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_const_boolean_0 = ap_block_pp1_stage6))) then 
            hist_V_address1 <= hist_V_addr_5_reg_6651;
        elsif (((ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5) and (ap_const_boolean_0 = ap_block_pp1_stage5))) then 
            hist_V_address1 <= hist_V_addr_4_reg_6605;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage4) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage4))) then 
            hist_V_address1 <= hist_V_addr_8_reg_6663;
        elsif (((ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_const_boolean_0 = ap_block_pp1_stage3))) then 
            hist_V_address1 <= tmp_255_cast_fu_4799_p1(9 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage2))) then 
            hist_V_address1 <= tmp_242_cast_fu_4686_p1(9 - 1 downto 0);
        else 
            hist_V_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    hist_V_ce0_assign_proc : process(ap_CS_fsm_pp1_stage5, ap_block_pp1_stage5_11001, ap_CS_fsm_pp1_stage6, ap_block_pp1_stage6_11001, ap_CS_fsm_pp1_stage3, ap_enable_reg_pp1_iter6, ap_block_pp1_stage3_11001, ap_CS_fsm_pp1_stage7, ap_block_pp1_stage7_11001, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter7, ap_block_pp1_stage0_11001, ap_CS_fsm_state25, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_11001, ap_CS_fsm_pp1_stage2, ap_block_pp1_stage2_11001, ap_CS_fsm_pp1_stage4, ap_block_pp1_stage4_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state25) or ((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage4) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage7) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage3_11001) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3)) or ((ap_const_boolean_0 = ap_block_pp1_stage6_11001) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6)) or ((ap_const_boolean_0 = ap_block_pp1_stage5_11001) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5)))) then 
            hist_V_ce0 <= ap_const_logic_1;
        else 
            hist_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    hist_V_ce1_assign_proc : process(ap_CS_fsm_pp1_stage5, ap_block_pp1_stage5_11001, ap_CS_fsm_pp1_stage6, ap_block_pp1_stage6_11001, ap_CS_fsm_pp1_stage3, ap_enable_reg_pp1_iter6, ap_block_pp1_stage3_11001, ap_CS_fsm_pp1_stage7, ap_block_pp1_stage7_11001, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter7, ap_block_pp1_stage0_11001, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_11001, ap_CS_fsm_pp1_stage2, ap_block_pp1_stage2_11001, ap_CS_fsm_pp1_stage4, ap_block_pp1_stage4_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage4) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage7) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage3_11001) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3)) or ((ap_const_boolean_0 = ap_block_pp1_stage6_11001) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6)) or ((ap_const_boolean_0 = ap_block_pp1_stage5_11001) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)))) then 
            hist_V_ce1 <= ap_const_logic_1;
        else 
            hist_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    hist_V_d0_assign_proc : process(ap_CS_fsm_pp1_stage5, ap_enable_reg_pp1_iter6, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter7, ap_CS_fsm_state25, ap_CS_fsm_pp1_stage1, ap_CS_fsm_pp1_stage4, ap_block_pp1_stage0, ap_block_pp1_stage5, ap_block_pp1_stage1, ap_block_pp1_stage4, p_Val2_96_fu_4897_p2, p_Val2_92_fu_4919_p2, p_Val2_91_fu_4926_p2, p_Val2_97_fu_4944_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage1))) then 
            hist_V_d0 <= p_Val2_97_fu_4944_p2;
        elsif (((ap_enable_reg_pp1_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            hist_V_d0 <= p_Val2_91_fu_4926_p2;
        elsif (((ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5) and (ap_const_boolean_0 = ap_block_pp1_stage5))) then 
            hist_V_d0 <= p_Val2_92_fu_4919_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage4) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage4))) then 
            hist_V_d0 <= p_Val2_96_fu_4897_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            hist_V_d0 <= ap_const_lv32_0;
        else 
            hist_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    hist_V_d1_assign_proc : process(ap_CS_fsm_pp1_stage5, ap_enable_reg_pp1_iter6, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter7, ap_CS_fsm_pp1_stage1, ap_CS_fsm_pp1_stage4, ap_block_pp1_stage0, ap_block_pp1_stage5, ap_block_pp1_stage1, p_Val2_94_fu_4890_p2, ap_block_pp1_stage4, p_Val2_90_fu_4912_p2, p_Val2_93_fu_4932_p2, p_Val2_95_fu_4938_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage1))) then 
            hist_V_d1 <= p_Val2_95_fu_4938_p2;
        elsif (((ap_enable_reg_pp1_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            hist_V_d1 <= p_Val2_93_fu_4932_p2;
        elsif (((ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5) and (ap_const_boolean_0 = ap_block_pp1_stage5))) then 
            hist_V_d1 <= p_Val2_90_fu_4912_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage4) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage4))) then 
            hist_V_d1 <= p_Val2_94_fu_4890_p2;
        else 
            hist_V_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    hist_V_we0_assign_proc : process(ap_CS_fsm_pp1_stage5, ap_block_pp1_stage5_11001, ap_enable_reg_pp1_iter6, or_cond_206_reg_6098_pp1_iter6_reg, or_cond3_reg_6102_pp1_iter6_reg, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter7, ap_block_pp1_stage0_11001, ap_CS_fsm_state25, exitcond_flatten1_fu_2227_p2, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_11001, ap_CS_fsm_pp1_stage4, ap_block_pp1_stage4_11001)
    begin
        if ((((exitcond_flatten1_fu_2227_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (or_cond3_reg_6102_pp1_iter6_reg = ap_const_lv1_1) and (or_cond_206_reg_6098_pp1_iter6_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (or_cond3_reg_6102_pp1_iter6_reg = ap_const_lv1_1) and (or_cond_206_reg_6098_pp1_iter6_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage4_11001) and (or_cond3_reg_6102_pp1_iter6_reg = ap_const_lv1_1) and (or_cond_206_reg_6098_pp1_iter6_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage4) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1)) or ((or_cond3_reg_6102_pp1_iter6_reg = ap_const_lv1_1) and (or_cond_206_reg_6098_pp1_iter6_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage5_11001) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5)))) then 
            hist_V_we0 <= ap_const_logic_1;
        else 
            hist_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    hist_V_we1_assign_proc : process(ap_CS_fsm_pp1_stage5, ap_block_pp1_stage5_11001, ap_enable_reg_pp1_iter6, or_cond_206_reg_6098_pp1_iter6_reg, or_cond3_reg_6102_pp1_iter6_reg, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter7, ap_block_pp1_stage0_11001, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_11001, ap_CS_fsm_pp1_stage4, ap_block_pp1_stage4_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (or_cond3_reg_6102_pp1_iter6_reg = ap_const_lv1_1) and (or_cond_206_reg_6098_pp1_iter6_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (or_cond3_reg_6102_pp1_iter6_reg = ap_const_lv1_1) and (or_cond_206_reg_6098_pp1_iter6_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage4_11001) and (or_cond3_reg_6102_pp1_iter6_reg = ap_const_lv1_1) and (or_cond_206_reg_6098_pp1_iter6_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage4) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1)) or ((or_cond3_reg_6102_pp1_iter6_reg = ap_const_lv1_1) and (or_cond_206_reg_6098_pp1_iter6_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage5_11001) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5)))) then 
            hist_V_we1 <= ap_const_logic_1;
        else 
            hist_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    hist_width_fu_1392_p3 <= 
        ap_const_lv32_0 when (tmp_reg_5763(0) = '1') else 
        grp_fu_1091_p2;
    i9_mid2_fu_5106_p3 <= 
        i_s_fu_5016_p2 when (exitcond_flatten2_fu_4996_p2(0) = '1') else 
        i9_reg_920;
    i_11_fu_2396_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(radius_reg_5948));
    i_1_fu_5623_p2 <= std_logic_vector(unsigned(i10_reg_1033) + unsigned(ap_const_lv8_1));
    i_5_fu_2239_p2 <= std_logic_vector(unsigned(i_reg_846) + unsigned(ap_const_lv3_1));
    i_6_mid1_fu_5010_p2 <= std_logic_vector(unsigned(ap_const_lv3_2) + unsigned(i9_reg_920));
    i_7_fu_4950_p2 <= std_logic_vector(signed(i_op_assign_4_reg_890) + signed(ap_const_lv32_1));
    i_8_fu_5263_p2 <= std_logic_vector(unsigned(i7_reg_976) + unsigned(ap_const_lv8_1));
    i_9_fu_5352_p2 <= std_logic_vector(unsigned(i8_reg_999) + unsigned(ap_const_lv8_1));
    i_s_fu_5016_p2 <= std_logic_vector(unsigned(ap_const_lv3_1) + unsigned(i9_reg_920));
    icmp12_fu_2080_p2 <= "1" when (tmp_1140_fu_2070_p4 = ap_const_lv7_0) else "0";
    icmp15_fu_4243_p2 <= "1" when (tmp_1165_fu_4233_p4 = ap_const_lv7_0) else "0";
    icmp22_fu_3169_p2 <= "1" when (tmp_1173_fu_3159_p4 = ap_const_lv26_0) else "0";
    icmp25_fu_3574_p2 <= "1" when (tmp_1190_fu_3564_p4 = ap_const_lv7_0) else "0";
    icmp32_fu_4512_p2 <= "1" when (signed(tmp_1198_reg_6584) < signed(ap_const_lv9_1)) else "0";
    icmp35_fu_4649_p2 <= "1" when (signed(tmp_1209_fu_4639_p4) < signed(ap_const_lv14_1)) else "0";
    icmp38_fu_5569_p2 <= "1" when (tmp_1232_fu_5559_p4 = ap_const_lv7_0) else "0";
    icmp_fu_1862_p2 <= "1" when (tmp_1134_fu_1852_p4 = ap_const_lv7_0) else "0";

    img_0_val_V_address0_assign_proc : process(ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage1, ap_CS_fsm_pp1_stage2, tmp_229_cast_fu_2623_p1, ap_block_pp1_stage1, tmp_231_cast_fu_2776_p1, ap_block_pp1_stage2)
    begin
        if ((ap_enable_reg_pp1_iter0 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_const_boolean_0 = ap_block_pp1_stage2))) then 
                img_0_val_V_address0 <= tmp_231_cast_fu_2776_p1(16 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_boolean_0 = ap_block_pp1_stage1))) then 
                img_0_val_V_address0 <= tmp_229_cast_fu_2623_p1(16 - 1 downto 0);
            else 
                img_0_val_V_address0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            img_0_val_V_address0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    img_0_val_V_address1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage1, ap_CS_fsm_pp1_stage2, ap_block_pp1_stage1, tmp_230_cast_fu_2647_p1, ap_block_pp1_stage2, tmp_232_cast_fu_2790_p1)
    begin
        if ((ap_enable_reg_pp1_iter0 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_const_boolean_0 = ap_block_pp1_stage2))) then 
                img_0_val_V_address1 <= tmp_232_cast_fu_2790_p1(16 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_boolean_0 = ap_block_pp1_stage1))) then 
                img_0_val_V_address1 <= tmp_230_cast_fu_2647_p1(16 - 1 downto 0);
            else 
                img_0_val_V_address1 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            img_0_val_V_address1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    img_0_val_V_ce0_assign_proc : process(ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_11001, ap_CS_fsm_pp1_stage2, ap_block_pp1_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then 
            img_0_val_V_ce0 <= ap_const_logic_1;
        else 
            img_0_val_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    img_0_val_V_ce1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_11001, ap_CS_fsm_pp1_stage2, ap_block_pp1_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then 
            img_0_val_V_ce1 <= ap_const_logic_1;
        else 
            img_0_val_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    img_1_val_V_address0_assign_proc : process(ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage1, ap_CS_fsm_pp1_stage2, tmp_229_cast_fu_2623_p1, ap_block_pp1_stage1, tmp_231_cast_fu_2776_p1, ap_block_pp1_stage2)
    begin
        if ((ap_enable_reg_pp1_iter0 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_const_boolean_0 = ap_block_pp1_stage2))) then 
                img_1_val_V_address0 <= tmp_231_cast_fu_2776_p1(16 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_boolean_0 = ap_block_pp1_stage1))) then 
                img_1_val_V_address0 <= tmp_229_cast_fu_2623_p1(16 - 1 downto 0);
            else 
                img_1_val_V_address0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            img_1_val_V_address0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    img_1_val_V_address1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage1, ap_CS_fsm_pp1_stage2, ap_block_pp1_stage1, tmp_230_cast_fu_2647_p1, ap_block_pp1_stage2, tmp_232_cast_fu_2790_p1)
    begin
        if ((ap_enable_reg_pp1_iter0 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_const_boolean_0 = ap_block_pp1_stage2))) then 
                img_1_val_V_address1 <= tmp_232_cast_fu_2790_p1(16 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_boolean_0 = ap_block_pp1_stage1))) then 
                img_1_val_V_address1 <= tmp_230_cast_fu_2647_p1(16 - 1 downto 0);
            else 
                img_1_val_V_address1 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            img_1_val_V_address1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    img_1_val_V_ce0_assign_proc : process(ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_11001, ap_CS_fsm_pp1_stage2, ap_block_pp1_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then 
            img_1_val_V_ce0 <= ap_const_logic_1;
        else 
            img_1_val_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    img_1_val_V_ce1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_11001, ap_CS_fsm_pp1_stage2, ap_block_pp1_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then 
            img_1_val_V_ce1 <= ap_const_logic_1;
        else 
            img_1_val_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    img_2_val_V_address0_assign_proc : process(ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage1, ap_CS_fsm_pp1_stage2, tmp_229_cast_fu_2623_p1, ap_block_pp1_stage1, tmp_231_cast_fu_2776_p1, ap_block_pp1_stage2)
    begin
        if ((ap_enable_reg_pp1_iter0 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_const_boolean_0 = ap_block_pp1_stage2))) then 
                img_2_val_V_address0 <= tmp_231_cast_fu_2776_p1(16 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_boolean_0 = ap_block_pp1_stage1))) then 
                img_2_val_V_address0 <= tmp_229_cast_fu_2623_p1(16 - 1 downto 0);
            else 
                img_2_val_V_address0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            img_2_val_V_address0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    img_2_val_V_address1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage1, ap_CS_fsm_pp1_stage2, ap_block_pp1_stage1, tmp_230_cast_fu_2647_p1, ap_block_pp1_stage2, tmp_232_cast_fu_2790_p1)
    begin
        if ((ap_enable_reg_pp1_iter0 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_const_boolean_0 = ap_block_pp1_stage2))) then 
                img_2_val_V_address1 <= tmp_232_cast_fu_2790_p1(16 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_boolean_0 = ap_block_pp1_stage1))) then 
                img_2_val_V_address1 <= tmp_230_cast_fu_2647_p1(16 - 1 downto 0);
            else 
                img_2_val_V_address1 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            img_2_val_V_address1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    img_2_val_V_ce0_assign_proc : process(ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_11001, ap_CS_fsm_pp1_stage2, ap_block_pp1_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then 
            img_2_val_V_ce0 <= ap_const_logic_1;
        else 
            img_2_val_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    img_2_val_V_ce1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_11001, ap_CS_fsm_pp1_stage2, ap_block_pp1_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then 
            img_2_val_V_ce1 <= ap_const_logic_1;
        else 
            img_2_val_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    img_3_val_V_address0_assign_proc : process(ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage1, ap_CS_fsm_pp1_stage2, tmp_229_cast_fu_2623_p1, ap_block_pp1_stage1, tmp_231_cast_fu_2776_p1, ap_block_pp1_stage2)
    begin
        if ((ap_enable_reg_pp1_iter0 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_const_boolean_0 = ap_block_pp1_stage2))) then 
                img_3_val_V_address0 <= tmp_231_cast_fu_2776_p1(16 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_boolean_0 = ap_block_pp1_stage1))) then 
                img_3_val_V_address0 <= tmp_229_cast_fu_2623_p1(16 - 1 downto 0);
            else 
                img_3_val_V_address0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            img_3_val_V_address0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    img_3_val_V_address1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage1, ap_CS_fsm_pp1_stage2, ap_block_pp1_stage1, tmp_230_cast_fu_2647_p1, ap_block_pp1_stage2, tmp_232_cast_fu_2790_p1)
    begin
        if ((ap_enable_reg_pp1_iter0 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_const_boolean_0 = ap_block_pp1_stage2))) then 
                img_3_val_V_address1 <= tmp_232_cast_fu_2790_p1(16 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_boolean_0 = ap_block_pp1_stage1))) then 
                img_3_val_V_address1 <= tmp_230_cast_fu_2647_p1(16 - 1 downto 0);
            else 
                img_3_val_V_address1 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            img_3_val_V_address1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    img_3_val_V_ce0_assign_proc : process(ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_11001, ap_CS_fsm_pp1_stage2, ap_block_pp1_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then 
            img_3_val_V_ce0 <= ap_const_logic_1;
        else 
            img_3_val_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    img_3_val_V_ce1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_11001, ap_CS_fsm_pp1_stage2, ap_block_pp1_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then 
            img_3_val_V_ce1 <= ap_const_logic_1;
        else 
            img_3_val_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    img_4_val_V_address0_assign_proc : process(ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage1, ap_CS_fsm_pp1_stage2, tmp_229_cast_fu_2623_p1, ap_block_pp1_stage1, tmp_231_cast_fu_2776_p1, ap_block_pp1_stage2)
    begin
        if ((ap_enable_reg_pp1_iter0 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_const_boolean_0 = ap_block_pp1_stage2))) then 
                img_4_val_V_address0 <= tmp_231_cast_fu_2776_p1(16 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_boolean_0 = ap_block_pp1_stage1))) then 
                img_4_val_V_address0 <= tmp_229_cast_fu_2623_p1(16 - 1 downto 0);
            else 
                img_4_val_V_address0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            img_4_val_V_address0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    img_4_val_V_address1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage1, ap_CS_fsm_pp1_stage2, ap_block_pp1_stage1, tmp_230_cast_fu_2647_p1, ap_block_pp1_stage2, tmp_232_cast_fu_2790_p1)
    begin
        if ((ap_enable_reg_pp1_iter0 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_const_boolean_0 = ap_block_pp1_stage2))) then 
                img_4_val_V_address1 <= tmp_232_cast_fu_2790_p1(16 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_boolean_0 = ap_block_pp1_stage1))) then 
                img_4_val_V_address1 <= tmp_230_cast_fu_2647_p1(16 - 1 downto 0);
            else 
                img_4_val_V_address1 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            img_4_val_V_address1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    img_4_val_V_ce0_assign_proc : process(ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_11001, ap_CS_fsm_pp1_stage2, ap_block_pp1_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then 
            img_4_val_V_ce0 <= ap_const_logic_1;
        else 
            img_4_val_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    img_4_val_V_ce1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_11001, ap_CS_fsm_pp1_stage2, ap_block_pp1_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then 
            img_4_val_V_ce1 <= ap_const_logic_1;
        else 
            img_4_val_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    img_5_val_V_address0_assign_proc : process(ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage1, ap_CS_fsm_pp1_stage2, tmp_229_cast_fu_2623_p1, ap_block_pp1_stage1, tmp_231_cast_fu_2776_p1, ap_block_pp1_stage2)
    begin
        if ((ap_enable_reg_pp1_iter0 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_const_boolean_0 = ap_block_pp1_stage2))) then 
                img_5_val_V_address0 <= tmp_231_cast_fu_2776_p1(16 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_boolean_0 = ap_block_pp1_stage1))) then 
                img_5_val_V_address0 <= tmp_229_cast_fu_2623_p1(16 - 1 downto 0);
            else 
                img_5_val_V_address0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            img_5_val_V_address0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    img_5_val_V_address1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage1, ap_CS_fsm_pp1_stage2, ap_block_pp1_stage1, tmp_230_cast_fu_2647_p1, ap_block_pp1_stage2, tmp_232_cast_fu_2790_p1)
    begin
        if ((ap_enable_reg_pp1_iter0 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_const_boolean_0 = ap_block_pp1_stage2))) then 
                img_5_val_V_address1 <= tmp_232_cast_fu_2790_p1(16 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_boolean_0 = ap_block_pp1_stage1))) then 
                img_5_val_V_address1 <= tmp_230_cast_fu_2647_p1(16 - 1 downto 0);
            else 
                img_5_val_V_address1 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            img_5_val_V_address1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    img_5_val_V_ce0_assign_proc : process(ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_11001, ap_CS_fsm_pp1_stage2, ap_block_pp1_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then 
            img_5_val_V_ce0 <= ap_const_logic_1;
        else 
            img_5_val_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    img_5_val_V_ce1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_11001, ap_CS_fsm_pp1_stage2, ap_block_pp1_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then 
            img_5_val_V_ce1 <= ap_const_logic_1;
        else 
            img_5_val_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    index_V_fu_1443_p4 <= t_V_18_fu_1417_p1(27 downto 23);
    indvar_flatten20_op_fu_5239_p2 <= std_logic_vector(unsigned(ap_const_lv7_1) + unsigned(indvar_flatten3_reg_931));
    indvar_flatten_next1_fu_2233_p2 <= std_logic_vector(unsigned(indvar_flatten1_reg_835) + unsigned(ap_const_lv9_1));
    indvar_flatten_next2_fu_5245_p3 <= 
        ap_const_lv7_1 when (exitcond_flatten2_fu_4996_p2(0) = '1') else 
        indvar_flatten20_op_fu_5239_p2;
    indvar_flatten_next3_fu_4990_p2 <= std_logic_vector(unsigned(ap_const_lv8_1) + unsigned(indvar_flatten2_reg_909));
    indvar_flatten_next_fu_2388_p3 <= 
        ap_const_lv7_1 when (exitcond_flatten_fu_2245_p2(0) = '1') else 
        indvar_flatten_op_fu_2382_p2;
    indvar_flatten_op_fu_2382_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_857) + unsigned(ap_const_lv7_1));
    ireg_V_1_fu_1582_p1 <= grp_fu_1122_p1;
    ireg_V_2_fu_4125_p1 <= grp_fu_1122_p1;
    ireg_V_3_fu_3456_p1 <= grp_fu_1119_p1;
    ireg_V_4_fu_5447_p1 <= grp_fu_1119_p1;
    ireg_V_fu_1546_p1 <= grp_fu_1119_p1;
    isNeg_fu_1679_p3 <= sh_assign_fu_1673_p2(8 downto 8);
    is_neg_3_fu_1167_p1 <= angle_V;
    is_neg_3_fu_1167_p3 <= is_neg_3_fu_1167_p1(31 downto 31);
    is_neg_fu_1286_p3 <= sigma_V(31 downto 31);
    isneg_2_fu_4133_p3 <= ireg_V_2_fu_4125_p1(63 downto 63);
    isneg_3_fu_3464_p3 <= ireg_V_3_fu_3456_p1(63 downto 63);
    isneg_4_fu_5455_p3 <= ireg_V_4_fu_5447_p1(63 downto 63);
    j9_mid2_fu_5200_p3 <= 
        j_4_dup_fu_5114_p2 when (exitcond1_mid_fu_5100_p2(0) = '1') else 
        j9_mid_fu_5002_p3;
    j9_mid_fu_5002_p3 <= 
        ap_const_lv3_0 when (exitcond_flatten2_fu_4996_p2(0) = '1') else 
        j9_reg_942;
    j_2_fu_2315_p2 <= std_logic_vector(unsigned(j_mid_fu_2251_p3) + unsigned(ap_const_lv3_1));
    j_4_dup_fu_5114_p2 <= std_logic_vector(unsigned(ap_const_lv3_1) + unsigned(j9_mid_fu_5002_p3));
    j_4_fu_4978_p2 <= std_logic_vector(unsigned(ap_const_lv3_1) + unsigned(j9_reg_942));
    j_4_mid1_fu_5168_p2 <= std_logic_vector(unsigned(ap_const_lv3_2) + unsigned(j9_mid_fu_5002_p3));
    j_5_fu_2526_p2 <= std_logic_vector(signed(ap_phi_mux_i_op_assign_phi_fu_903_p4) + signed(ap_const_lv32_1));
    j_mid_fu_2251_p3 <= 
        ap_const_lv3_0 when (exitcond_flatten_fu_2245_p2(0) = '1') else 
        j_reg_868;
    k5_cast_fu_5208_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k5_mid2_fu_5126_p3),7));
    k5_mid2_fu_5126_p3 <= 
        ap_const_lv4_0 when (tmp_222_fu_5120_p2(0) = '1') else 
        k5_reg_953;
    k_4_fu_2376_p2 <= std_logic_vector(unsigned(k_mid2_fu_2327_p3) + unsigned(ap_const_lv4_1));
    k_5_fu_5233_p2 <= std_logic_vector(unsigned(ap_const_lv4_1) + unsigned(k5_mid2_fu_5126_p3));
    k_mid2_fu_2327_p3 <= 
        ap_const_lv4_0 when (tmp_206_fu_2321_p2(0) = '1') else 
        k_reg_879;
    loc_V_18_fu_1483_p1 <= p_Val2_50_fu_1478_p2(23 - 1 downto 0);
    loc_V_19_fu_1641_p4 <= p_Val2_128_fu_1630_p1(30 downto 23);
    loc_V_20_fu_1651_p1 <= p_Val2_128_fu_1630_p1(23 - 1 downto 0);
    loc_V_fu_1421_p4 <= t_V_18_fu_1417_p1(30 downto 23);
    man_V_10_fu_2005_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(p_Result_167_fu_2001_p1));
    man_V_11_fu_2011_p3 <= 
        man_V_10_fu_2005_p2 when (isneg_1_reg_5894(0) = '1') else 
        p_Result_167_fu_2001_p1;
    man_V_13_fu_4171_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(p_Result_172_fu_4167_p1));
    man_V_14_fu_4177_p3 <= 
        man_V_13_fu_4171_p2 when (isneg_2_fu_4133_p3(0) = '1') else 
        p_Result_172_fu_4167_p1;
    man_V_16_fu_3502_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(p_Result_175_fu_3498_p1));
    man_V_17_fu_3508_p3 <= 
        man_V_16_fu_3502_p2 when (isneg_3_fu_3464_p3(0) = '1') else 
        p_Result_175_fu_3498_p1;
    man_V_19_fu_5493_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(p_Result_176_fu_5489_p1));
    man_V_20_fu_5499_p3 <= 
        man_V_19_fu_5493_p2 when (isneg_4_fu_5455_p3(0) = '1') else 
        p_Result_176_fu_5489_p1;
    man_V_7_fu_1787_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(p_Result_166_fu_1783_p1));
    man_V_8_fu_1793_p3 <= 
        man_V_7_fu_1787_p2 when (isneg_reg_5872(0) = '1') else 
        p_Result_166_fu_1783_p1;
    mask_table1685_address0 <= tmp_1686_i_i_fu_1453_p1(5 - 1 downto 0);

    mask_table1685_ce0_assign_proc : process(ap_CS_fsm_state22)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            mask_table1685_ce0 <= ap_const_logic_1;
        else 
            mask_table1685_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    msb_idx_5_fu_3153_p3 <= 
        ap_const_lv31_0 when (tmp_1172_reg_6322(0) = '1') else 
        tmp_1171_reg_6317;
    msb_idx_fu_3069_p2 <= std_logic_vector(unsigned(ap_const_lv32_60) - unsigned(num_zeros_6_fu_3061_p3));
    mul_fu_4422_p1 <= r_V_s_fu_4411_p3;
    mul_fu_4422_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv73_16C16C16C2) * signed(mul_fu_4422_p1))), 73));
    neg_mul_fu_4428_p2 <= std_logic_vector(unsigned(ap_const_lv73_0) - unsigned(mul_fu_4422_p2));
    neg_ti_fu_4469_p2 <= std_logic_vector(unsigned(ap_const_lv36_0) - unsigned(tmp_235_fu_4462_p3));
    newSel18_fu_3686_p3 <= 
        storemerge6_fu_3601_p3 when (sel_tmp36_fu_3644_p2(0) = '1') else 
        tmp_1189_reg_6431;
    newSel19_fu_3699_p3 <= 
        newSel_fu_3672_p3 when (or_cond_fu_3680_p2(0) = '1') else 
        newSel18_fu_3686_p3;
    newSel_fu_3672_p3 <= 
        tmp_460_fu_3608_p2 when (sel_tmp49_fu_3667_p2(0) = '1') else 
        tmp_1191_fu_3597_p1;
    not_exitcond_flatten_2_fu_5088_p2 <= (exitcond_flatten2_fu_4996_p2 xor ap_const_lv1_1);
    not_exitcond_flatten_fu_2297_p2 <= (exitcond_flatten_fu_2245_p2 xor ap_const_lv1_1);
    nrm_2_fu_5435_p2 <= std_logic_vector(unsigned(nrm_1_reg_987) + unsigned(p_5_fu_5427_p3));
    nrm_fu_5333_p2 <= std_logic_vector(unsigned(xf_V_1_reg_964) + unsigned(p_0_fu_5325_p3));
    
    num_zeros_3_fu_1199_p3_proc : process(p_Result_164_fu_1189_p4)
    begin
        num_zeros_3_fu_1199_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 0 to 32 - 1 loop
            if p_Result_164_fu_1189_p4(i) = '1' then
                num_zeros_3_fu_1199_p3 <= std_logic_vector(to_unsigned(i,32));
                exit;
            end if;
        end loop;
    end process;

    
    num_zeros_4_fu_3132_p3_proc : process(p_Result_168_fu_3122_p4)
    begin
        num_zeros_4_fu_3132_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 0 to 32 - 1 loop
            if p_Result_168_fu_3122_p4(i) = '1' then
                num_zeros_4_fu_3132_p3 <= std_logic_vector(to_unsigned(i,32));
                exit;
            end if;
        end loop;
    end process;

    
    num_zeros_5_fu_2955_p3_proc : process(p_Result_170_fu_2945_p4)
    begin
        num_zeros_5_fu_2955_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 0 to 32 - 1 loop
            if p_Result_170_fu_2945_p4(i) = '1' then
                num_zeros_5_fu_2955_p3 <= std_logic_vector(to_unsigned(i,32));
                exit;
            end if;
        end loop;
    end process;

    num_zeros_6_fu_3061_p3 <= 
        NZeros_fu_3055_p2 when (tmp_445_fu_3015_p2(0) = '1') else 
        tmp_1169_fu_3011_p1;
    
    num_zeros_fu_1318_p3_proc : process(p_Result_159_fu_1308_p4)
    begin
        num_zeros_fu_1318_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 0 to 32 - 1 loop
            if p_Result_159_fu_1308_p4(i) = '1' then
                num_zeros_fu_1318_p3 <= std_logic_vector(to_unsigned(i,32));
                exit;
            end if;
        end loop;
    end process;

        o0_cast_fu_4625_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_9_fu_4617_p3),17));

    one_half_i_i_cast_fu_1474_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(one_half_table2681_q0),32));
    one_half_table2681_address0 <= tmp_1686_i_i_fu_1453_p1(5 - 1 downto 0);

    one_half_table2681_ce0_assign_proc : process(ap_CS_fsm_state22)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            one_half_table2681_ce0 <= ap_const_logic_1;
        else 
            one_half_table2681_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    or_cond3_fu_2604_p2 <= (tmp_399_reg_6031 and tmp121_fu_2598_p2);
    or_cond5_fu_3693_p2 <= (sel_tmp36_fu_3644_p2 or sel_tmp29_fu_3618_p2);
    or_cond6_fu_3707_p2 <= (or_cond_fu_3680_p2 or or_cond5_fu_3693_p2);
    or_cond_206_fu_2583_p2 <= (tmp119_fu_2577_p2 and tmp118_fu_2566_p2);
    or_cond_fu_3680_p2 <= (sel_tmp49_fu_3667_p2 or sel_tmp42_fu_3650_p2);
    p_0154_s_fu_1882_p3 <= 
        ap_const_lv32_FFFFFFFF when (isneg_reg_5872(0) = '1') else 
        ap_const_lv32_0;
    p_0163_s_fu_2100_p3 <= 
        ap_const_lv32_FFFFFFFF when (isneg_1_reg_5894(0) = '1') else 
        ap_const_lv32_0;
    p_0211_s_fu_5587_p3 <= 
        ap_const_lv32_FFFFFFFF when (isneg_4_fu_5455_p3(0) = '1') else 
        ap_const_lv32_0;
    p_03_i5_fu_1273_p3 <= 
        ap_const_lv32_80000000 when (tmp_358_reg_5718(0) = '1') else 
        grp_fu_1091_p2;
    p_0_fu_5325_p3 <= 
        p_4_fu_5317_p3 when (tmp_1150_fu_5293_p3(0) = '1') else 
        ret_V_fu_5283_p4;
    p_1_fu_3813_p3 <= 
        p_s_fu_3805_p3 when (tmp_1200_fu_3781_p3(0) = '1') else 
        ret_V_29_fu_3771_p4;
    p_2_fu_3920_p3 <= 
        ret_V_31_fu_3886_p4 when (tmp_464_fu_3908_p2(0) = '1') else 
        ret_V_32_fu_3914_p2;
    p_3_fu_3928_p3 <= 
        p_2_fu_3920_p3 when (tmp_1203_fu_3896_p3(0) = '1') else 
        ret_V_31_fu_3886_p4;
    p_4_fu_5317_p3 <= 
        ret_V_fu_5283_p4 when (tmp_415_fu_5305_p2(0) = '1') else 
        ret_V_6_fu_5311_p2;
    p_5_fu_5427_p3 <= 
        p_6_fu_5419_p3 when (tmp_1225_fu_5395_p3(0) = '1') else 
        ret_V_7_fu_5385_p4;
    p_6_fu_5419_p3 <= 
        ret_V_7_fu_5385_p4 when (tmp_475_fu_5407_p2(0) = '1') else 
        ret_V_8_fu_5413_p2;
    p_7_fu_4609_p3 <= 
        ret_V_33_fu_4575_p4 when (tmp_465_fu_4597_p2(0) = '1') else 
        ret_V_34_fu_4603_p2;
    p_9_fu_4617_p3 <= 
        p_7_fu_4609_p3 when (tmp_1206_fu_4585_p3(0) = '1') else 
        ret_V_33_fu_4575_p4;
    p_Repl2_48_trunc_fu_1364_p2 <= std_logic_vector(unsigned(tmp_354_fu_1360_p1) + unsigned(tmp_353_fu_1355_p2));
    p_Repl2_51_trunc_fu_1245_p2 <= std_logic_vector(unsigned(tmp_362_fu_1241_p1) + unsigned(tmp_361_fu_1236_p2));
    p_Repl2_54_trunc_fu_3355_p2 <= std_logic_vector(unsigned(tmp_420_fu_3351_p1) + unsigned(tmp_419_fu_3346_p2));
    p_Repl2_57_trunc_fu_3306_p2 <= std_logic_vector(unsigned(tmp_426_fu_3302_p1) + unsigned(tmp_425_fu_3297_p2));
    p_Repl2_61_trunc_fu_3421_p2 <= std_logic_vector(unsigned(tmp_1185_fu_3410_p1) + unsigned(tmp122_cast_cast_fu_3413_p3));
    
    p_Result_159_fu_1308_p4_proc : process(p_Val2_153_fu_1300_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable p_Result_159_fu_1308_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(5 - 1 downto 0) := ap_const_lv32_1F(5 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(5 - 1 downto 0) := ap_const_lv32_0(5 - 1 downto 0);
        v0_cpy := p_Val2_153_fu_1300_p3;
        if (vlo_cpy(5 - 1 downto 0) > vhi_cpy(5 - 1 downto 0)) then
            vhi_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_0(5-1 downto 0)));
            vlo_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_1F(5-1 downto 0)));
            for p_Result_159_fu_1308_p4_i in 0 to 32-1 loop
                v0_cpy(p_Result_159_fu_1308_p4_i) := p_Val2_153_fu_1300_p3(32-1-p_Result_159_fu_1308_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(5-1 downto 0)))));

        section := (others=>'0');
        section(5-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(5-1 downto 0)) - unsigned(vlo_cpy(5-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(32-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_159_fu_1308_p4 <= resvalue(32-1 downto 0);
    end process;

    p_Result_160_fu_1377_p5 <= (tmp_355_fu_1370_p3 & tmp32_V_reg_5783(22 downto 0));
    p_Result_161_fu_1466_p3 <= (p_Result_s_205_fu_1459_p3 & ap_const_lv31_0);
    p_Result_162_fu_1509_p3 <= (tmp_357_fu_1499_p4 & xs_sig_V_fu_1493_p2);
    p_Result_163_fu_1633_p3 <= p_Val2_128_fu_1630_p1(31 downto 31);
    
    p_Result_164_fu_1189_p4_proc : process(p_Val2_155_fu_1181_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable p_Result_164_fu_1189_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(5 - 1 downto 0) := ap_const_lv32_1F(5 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(5 - 1 downto 0) := ap_const_lv32_0(5 - 1 downto 0);
        v0_cpy := p_Val2_155_fu_1181_p3;
        if (vlo_cpy(5 - 1 downto 0) > vhi_cpy(5 - 1 downto 0)) then
            vhi_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_0(5-1 downto 0)));
            vlo_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_1F(5-1 downto 0)));
            for p_Result_164_fu_1189_p4_i in 0 to 32-1 loop
                v0_cpy(p_Result_164_fu_1189_p4_i) := p_Val2_155_fu_1181_p3(32-1-p_Result_164_fu_1189_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(5-1 downto 0)))));

        section := (others=>'0');
        section(5-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(5-1 downto 0)) - unsigned(vlo_cpy(5-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(32-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_164_fu_1189_p4 <= resvalue(32-1 downto 0);
    end process;

    p_Result_165_fu_1258_p5 <= (tmp_363_fu_1251_p3 & tmp32_V_44_reg_5738(22 downto 0));
    p_Result_166_fu_1783_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_365_fu_1776_p3),54));
    p_Result_167_fu_2001_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_376_fu_1994_p3),54));
    
    p_Result_168_fu_3122_p4_proc : process(p_Val2_s_207_fu_3116_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable p_Result_168_fu_3122_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(5 - 1 downto 0) := ap_const_lv32_1F(5 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(5 - 1 downto 0) := ap_const_lv32_0(5 - 1 downto 0);
        v0_cpy := p_Val2_s_207_fu_3116_p3;
        if (vlo_cpy(5 - 1 downto 0) > vhi_cpy(5 - 1 downto 0)) then
            vhi_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_0(5-1 downto 0)));
            vlo_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_1F(5-1 downto 0)));
            for p_Result_168_fu_3122_p4_i in 0 to 32-1 loop
                v0_cpy(p_Result_168_fu_3122_p4_i) := p_Val2_s_207_fu_3116_p3(32-1-p_Result_168_fu_3122_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(5-1 downto 0)))));

        section := (others=>'0');
        section(5-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(5-1 downto 0)) - unsigned(vlo_cpy(5-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(32-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_168_fu_3122_p4 <= resvalue(32-1 downto 0);
    end process;

    p_Result_169_fu_3368_p5 <= (tmp_421_fu_3361_p3 & tmp32_V_45_reg_6357(22 downto 0));
    
    p_Result_170_fu_2945_p4_proc : process(p_Val2_156_fu_2939_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable p_Result_170_fu_2945_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(5 - 1 downto 0) := ap_const_lv32_1F(5 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(5 - 1 downto 0) := ap_const_lv32_0(5 - 1 downto 0);
        v0_cpy := p_Val2_156_fu_2939_p3;
        if (vlo_cpy(5 - 1 downto 0) > vhi_cpy(5 - 1 downto 0)) then
            vhi_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_0(5-1 downto 0)));
            vlo_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_1F(5-1 downto 0)));
            for p_Result_170_fu_2945_p4_i in 0 to 32-1 loop
                v0_cpy(p_Result_170_fu_2945_p4_i) := p_Val2_156_fu_2939_p3(32-1-p_Result_170_fu_2945_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(5-1 downto 0)))));

        section := (others=>'0');
        section(5-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(5-1 downto 0)) - unsigned(vlo_cpy(5-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(32-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_170_fu_2945_p4 <= resvalue(32-1 downto 0);
    end process;

    p_Result_171_fu_3319_p5 <= (tmp_427_fu_3312_p3 & tmp32_V_46_reg_6347(22 downto 0));
    p_Result_172_fu_4167_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_430_fu_4159_p3),54));
    
    p_Result_173_fu_3031_p5_proc : process(p_Result_33_fu_3021_p4)
    begin
        for i in 64 - 1 downto 0 loop
            if (i > 63 or i < 31) then
                p_Result_173_fu_3031_p5(i) <= ap_const_lv64_FFFFFFFFFFFFFFFF(i);
            elsif (63 - i >= 33) then
                p_Result_173_fu_3031_p5(i) <= '0';
            else
                p_Result_173_fu_3031_p5(i) <= p_Result_33_fu_3021_p4(63 - i);
            end if;
        end loop;
    end process;

    p_Result_174_fu_3434_p5 <= (tmp_449_fu_3427_p3 & tmp32_V_47_reg_6372(22 downto 0));
    p_Result_175_fu_3498_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_451_fu_3490_p3),54));
    p_Result_176_fu_5489_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_477_fu_5481_p3),54));
    p_Result_32_fu_2999_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_380_fu_2989_p4),64));
    
    p_Result_33_fu_3021_p4_proc : process(p_Val2_139_fu_2983_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(77+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(77+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(77 - 1 downto 0);
    variable p_Result_33_fu_3021_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(77 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(77 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(77 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(7 - 1 downto 0) := ap_const_lv32_20(7 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(7 - 1 downto 0) := ap_const_lv32_0(7 - 1 downto 0);
        v0_cpy := p_Val2_139_fu_2983_p3;
        if (vlo_cpy(7 - 1 downto 0) > vhi_cpy(7 - 1 downto 0)) then
            vhi_cpy(7-1 downto 0) := std_logic_vector(77-1-unsigned(ap_const_lv32_0(7-1 downto 0)));
            vlo_cpy(7-1 downto 0) := std_logic_vector(77-1-unsigned(ap_const_lv32_20(7-1 downto 0)));
            for p_Result_33_fu_3021_p4_i in 0 to 77-1 loop
                v0_cpy(p_Result_33_fu_3021_p4_i) := p_Val2_139_fu_2983_p3(77-1-p_Result_33_fu_3021_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(7-1 downto 0)))));

        section := (others=>'0');
        section(7-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(7-1 downto 0)) - unsigned(vlo_cpy(7-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(77-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_33_fu_3021_p4 <= resvalue(33-1 downto 0);
    end process;

    p_Result_38_fu_3753_p5 <= (p_Val2_45_reg_6082_pp1_iter1_reg(31 downto 16) & ap_const_lv16_0);
    p_Result_39_fu_3868_p5 <= (p_Val2_46_reg_6090_pp1_iter1_reg(31 downto 16) & ap_const_lv16_0);
    p_Result_40_fu_4555_p5 <= (p_Val2_150_cast_fu_4541_p1(31 downto 16) & ap_const_lv16_0);
    p_Result_s_205_fu_1459_p3 <= t_V_18_reg_5835(31 downto 31);
    p_Val2_104_fu_3764_p3 <= 
        p_Val2_45_reg_6082_pp1_iter1_reg when (tmp_i_i5_fu_3747_p2(0) = '1') else 
        p_Result_38_fu_3753_p5;
    p_Val2_105_fu_3879_p3 <= 
        p_Val2_46_reg_6090_pp1_iter1_reg when (tmp_i_i6_fu_3862_p2(0) = '1') else 
        p_Result_39_fu_3868_p5;
    p_Val2_106_fu_4567_p3 <= 
        p_Val2_150_cast_fu_4541_p1 when (tmp_i_i7_fu_4549_p2(0) = '1') else 
        p_Result_40_fu_4555_p5;
    p_Val2_128_fu_1630_p1 <= x_assign_66_reg_5867;
    p_Val2_132_fu_2209_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_1149),32));
    p_Val2_139_cast_fu_3150_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_139_reg_6306),97));
    p_Val2_139_fu_2983_p3 <= 
        tmp_443_fu_2978_p2 when (is_neg_6_reg_6262(0) = '1') else 
        p_Val2_60_reg_6255;
        p_Val2_150_cast_fu_4541_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_63_fu_4533_p3),32));

    p_Val2_153_fu_1300_p3 <= 
        tmp_s_fu_1294_p2 when (is_neg_fu_1286_p3(0) = '1') else 
        sigma_V;
    p_Val2_154_fu_1765_p3 <= 
        p_Val2_i_i_i_fu_1759_p2 when (p_Result_163_fu_1633_p3(0) = '1') else 
        p_Val2_55_fu_1751_p3;
    p_Val2_155_fu_1181_p2 <= angle_V;
    p_Val2_155_fu_1181_p3 <= 
        tmp_359_fu_1175_p2 when (is_neg_3_fu_1167_p3(0) = '1') else 
        p_Val2_155_fu_1181_p2;
    p_Val2_156_fu_2939_p3 <= 
        tmp_423_fu_2934_p2 when (is_neg_5_reg_6249(0) = '1') else 
        p_Val2_49_reg_6177;
    p_Val2_157_fu_4364_p3 <= 
        tmp_439_fu_4277_p2 when (sel_tmp22_fu_4359_p2(0) = '1') else 
        sel_tmp16_fu_4340_p3;
    p_Val2_40_fu_2427_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(cos_t_V_reg_5936) * signed(i_op_assign_4_reg_890))), 32));
    p_Val2_41_fu_2501_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(ap_phi_mux_i_op_assign_phi_fu_903_p4) * signed(cos_t_V_reg_5936))), 32));
    p_Val2_42_fu_2506_p2 <= std_logic_vector(unsigned(p_Val2_41_fu_2501_p2) - unsigned(p_Val2_s_reg_6016));
    p_Val2_43_fu_2511_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(ap_phi_mux_i_op_assign_phi_fu_903_p4) * signed(sin_t_V_reg_5942))), 32));
    p_Val2_44_fu_2516_p2 <= std_logic_vector(unsigned(p_Val2_43_fu_2511_p2) + unsigned(p_Val2_40_reg_6021));
    p_Val2_45_fu_2532_p2 <= std_logic_vector(signed(p_Val2_44_reg_6062) + signed(ap_const_lv32_28000));
    p_Val2_46_fu_2537_p2 <= std_logic_vector(signed(p_Val2_42_reg_6056) + signed(ap_const_lv32_28000));
    p_Val2_49_fu_2766_p2 <= std_logic_vector(unsigned(p_Val2_56_fu_2712_p8) - unsigned(p_Val2_61_fu_2749_p8));
    p_Val2_50_fu_1478_p2 <= std_logic_vector(unsigned(one_half_i_i_cast_fu_1474_p1) + unsigned(t_V_18_reg_5835));
    p_Val2_52_fu_2905_p2 <= std_logic_vector(unsigned(p_Val2_98_fu_2851_p8) - unsigned(p_Val2_99_fu_2888_p8));
    p_Val2_53_fu_3096_p2 <= std_logic_vector(unsigned(tmp_521_cast_fu_3090_p2) + unsigned(tmp_520_cast_reg_6275));
    p_Val2_55_fu_1751_p3 <= 
        tmp_200_fu_1737_p1 when (isNeg_fu_1679_p3(0) = '1') else 
        tmp_201_fu_1741_p4;
        p_Val2_56_fu_2712_p2 <= std_logic_vector(IEEE.numeric_std.resize(signed(img_1_val_V_q0),32));

        p_Val2_56_fu_2712_p3 <= std_logic_vector(IEEE.numeric_std.resize(signed(img_2_val_V_q0),32));

        p_Val2_56_fu_2712_p4 <= std_logic_vector(IEEE.numeric_std.resize(signed(img_3_val_V_q0),32));

        p_Val2_56_fu_2712_p5 <= std_logic_vector(IEEE.numeric_std.resize(signed(img_4_val_V_q0),32));

        p_Val2_56_fu_2712_p6 <= std_logic_vector(IEEE.numeric_std.resize(signed(img_5_val_V_q0),32));

    p_Val2_57_fu_4386_p3 <= 
        Ang_V_1_fu_4380_p2 when (tmp_1167_fu_4372_p3(0) = '1') else 
        p_Val2_157_fu_4364_p3;
    p_Val2_58_fu_2663_p0 <= OP1_V_10_fu_2660_p1(32 - 1 downto 0);
    p_Val2_58_fu_2663_p1 <= OP1_V_10_fu_2660_p1(32 - 1 downto 0);
    p_Val2_58_fu_2663_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_58_fu_2663_p0) * signed(p_Val2_58_fu_2663_p1))), 64));
    p_Val2_59_fu_2672_p0 <= OP1_V_11_fu_2669_p1(32 - 1 downto 0);
    p_Val2_59_fu_2672_p1 <= OP1_V_11_fu_2669_p1(32 - 1 downto 0);
    p_Val2_59_fu_2672_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_59_fu_2672_p0) * signed(p_Val2_59_fu_2672_p1))), 64));
    p_Val2_60_fu_2817_p1 <= r_V_reg_6172;
    p_Val2_60_fu_2817_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(ap_const_lv77_1FFFFFFFFFFFFFFFE000) * signed(p_Val2_60_fu_2817_p1))), 77));
        p_Val2_61_fu_2749_p2 <= std_logic_vector(IEEE.numeric_std.resize(signed(img_1_val_V_q1),32));

        p_Val2_61_fu_2749_p3 <= std_logic_vector(IEEE.numeric_std.resize(signed(img_2_val_V_q1),32));

        p_Val2_61_fu_2749_p4 <= std_logic_vector(IEEE.numeric_std.resize(signed(img_3_val_V_q1),32));

        p_Val2_61_fu_2749_p5 <= std_logic_vector(IEEE.numeric_std.resize(signed(img_4_val_V_q1),32));

        p_Val2_61_fu_2749_p6 <= std_logic_vector(IEEE.numeric_std.resize(signed(img_5_val_V_q1),32));

    p_Val2_62_fu_4507_p2 <= std_logic_vector(unsigned(ap_const_lv28_80000) + unsigned(tmp_1196_reg_6579));
    p_Val2_63_fu_4533_p3 <= 
        p_Val2_62_fu_4507_p2 when (tmp_1197_fu_4500_p3(0) = '1') else 
        p_Val2_96_Val2_1_fu_4529_p1;
    p_Val2_64_fu_3728_p0 <= p_Val2_64_fu_3728_p00(24 - 1 downto 0);
    p_Val2_64_fu_3728_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(agg_result_V_i_reg_6392),48));
    p_Val2_64_fu_3728_p1 <= W_V_fu_3713_p3;
    p_Val2_64_fu_3728_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &p_Val2_64_fu_3728_p0) * signed(p_Val2_64_fu_3728_p1))), 48));
    p_Val2_66_fu_3828_p2 <= std_logic_vector(unsigned(p_Val2_45_reg_6082_pp1_iter1_reg) - unsigned(tmp_467_fu_3821_p3));
    p_Val2_67_fu_3948_p2 <= std_logic_vector(unsigned(p_Val2_46_reg_6090_pp1_iter1_reg) - unsigned(tmp_468_fu_3940_p3));
    p_Val2_68_fu_4663_p2 <= std_logic_vector(signed(p_Val2_150_cast_fu_4541_p1) - signed(tmp_469_fu_4655_p3));
    p_Val2_69_fu_3840_p0 <= p_Val2_65_reg_6442;
    p_Val2_69_fu_3840_p1 <= p_Val2_66_fu_3828_p2;
    p_Val2_69_fu_3840_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_69_fu_3840_p0) * signed(p_Val2_69_fu_3840_p1))), 48));
    p_Val2_71_cast_fu_4517_p2 <= std_logic_vector(signed(ap_const_lv27_7F80000) + signed(tmp_1195_reg_6573));
    p_Val2_71_fu_4079_p2 <= std_logic_vector(signed(p_Val2_65_reg_6442) - signed(p_Val2_70_reg_6456));
    p_Val2_72_fu_4089_p0 <= p_Val2_70_reg_6456;
    p_Val2_72_fu_4089_p1 <= OP2_V_21_cast_fu_4086_p1(32 - 1 downto 0);
    p_Val2_72_fu_4089_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_72_fu_4089_p0) * signed(p_Val2_72_fu_4089_p1))), 48));
    p_Val2_74_fu_4723_p2 <= std_logic_vector(signed(p_Val2_70_reg_6456_pp1_iter6_reg) - signed(p_Val2_73_reg_6493_pp1_iter6_reg));
    p_Val2_75_fu_4109_p0 <= p_Val2_71_fu_4079_p2;
    p_Val2_75_fu_4109_p1 <= OP2_V_21_cast_fu_4086_p1(32 - 1 downto 0);
    p_Val2_75_fu_4109_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_75_fu_4109_p0) * signed(p_Val2_75_fu_4109_p1))), 48));
    p_Val2_77_fu_4841_p2 <= std_logic_vector(signed(p_Val2_71_reg_6488_pp1_iter6_reg) - signed(p_Val2_76_reg_6500_pp1_iter6_reg));
    p_Val2_78_fu_4733_p0 <= p_Val2_73_reg_6493_pp1_iter6_reg;
    p_Val2_78_fu_4733_p1 <= OP2_V_22_cast_fu_4730_p1(32 - 1 downto 0);
    p_Val2_78_fu_4733_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_78_fu_4733_p0) * signed(p_Val2_78_fu_4733_p1))), 48));
    p_Val2_80_fu_4845_p2 <= std_logic_vector(signed(p_Val2_73_reg_6493_pp1_iter6_reg) - signed(p_Val2_79_reg_6639));
    p_Val2_81_fu_4753_p0 <= p_Val2_74_fu_4723_p2;
    p_Val2_81_fu_4753_p1 <= OP2_V_22_cast_fu_4730_p1(32 - 1 downto 0);
    p_Val2_81_fu_4753_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_81_fu_4753_p0) * signed(p_Val2_81_fu_4753_p1))), 48));
    p_Val2_83_fu_4849_p2 <= std_logic_vector(signed(p_Val2_74_reg_6628) - signed(p_Val2_82_reg_6645));
    p_Val2_84_fu_4856_p0 <= p_Val2_76_reg_6500_pp1_iter6_reg;
    p_Val2_84_fu_4856_p1 <= OP2_V_22_cast_reg_6633(32 - 1 downto 0);
    p_Val2_84_fu_4856_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_84_fu_4856_p0) * signed(p_Val2_84_fu_4856_p1))), 48));
    p_Val2_86_fu_4904_p2 <= std_logic_vector(signed(p_Val2_76_reg_6500_pp1_iter6_reg) - signed(p_Val2_85_reg_6688));
    p_Val2_87_fu_4875_p0 <= p_Val2_77_fu_4841_p2;
    p_Val2_87_fu_4875_p1 <= OP2_V_22_cast_reg_6633(32 - 1 downto 0);
    p_Val2_87_fu_4875_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_87_fu_4875_p0) * signed(p_Val2_87_fu_4875_p1))), 48));
    p_Val2_89_fu_4908_p2 <= std_logic_vector(signed(p_Val2_77_reg_6683) - signed(p_Val2_88_reg_6694));
    p_Val2_90_fu_4912_p2 <= std_logic_vector(unsigned(p_Val2_89_fu_4908_p2) + unsigned(reg_1153));
    p_Val2_91_fu_4926_p2 <= std_logic_vector(unsigned(p_Val2_88_reg_6694) + unsigned(reg_1153));
    p_Val2_92_fu_4919_p2 <= std_logic_vector(unsigned(p_Val2_86_fu_4904_p2) + unsigned(reg_1157));
    p_Val2_93_fu_4932_p2 <= std_logic_vector(unsigned(p_Val2_85_reg_6688) + unsigned(reg_1157));
    p_Val2_94_fu_4890_p2 <= std_logic_vector(unsigned(p_Val2_83_fu_4849_p2) + unsigned(hist_V_q1));
    p_Val2_95_fu_4938_p2 <= std_logic_vector(unsigned(p_Val2_82_reg_6645) + unsigned(reg_1153));
    p_Val2_96_Val2_1_fu_4529_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_96_Val2_s_fu_4522_p3),28));
    p_Val2_96_Val2_s_fu_4522_p3 <= 
        tmp_1195_reg_6573 when (icmp32_fu_4512_p2(0) = '1') else 
        p_Val2_71_cast_fu_4517_p2;
    p_Val2_96_fu_4897_p2 <= std_logic_vector(unsigned(p_Val2_80_fu_4845_p2) + unsigned(hist_V_q0));
    p_Val2_97_fu_4944_p2 <= std_logic_vector(unsigned(p_Val2_79_reg_6639) + unsigned(reg_1157));
        p_Val2_98_fu_2851_p2 <= std_logic_vector(IEEE.numeric_std.resize(signed(img_1_val_V_q0),32));

        p_Val2_98_fu_2851_p3 <= std_logic_vector(IEEE.numeric_std.resize(signed(img_2_val_V_q0),32));

        p_Val2_98_fu_2851_p4 <= std_logic_vector(IEEE.numeric_std.resize(signed(img_3_val_V_q0),32));

        p_Val2_98_fu_2851_p5 <= std_logic_vector(IEEE.numeric_std.resize(signed(img_4_val_V_q0),32));

        p_Val2_98_fu_2851_p6 <= std_logic_vector(IEEE.numeric_std.resize(signed(img_5_val_V_q0),32));

        p_Val2_99_fu_2888_p2 <= std_logic_vector(IEEE.numeric_std.resize(signed(img_1_val_V_q1),32));

        p_Val2_99_fu_2888_p3 <= std_logic_vector(IEEE.numeric_std.resize(signed(img_2_val_V_q1),32));

        p_Val2_99_fu_2888_p4 <= std_logic_vector(IEEE.numeric_std.resize(signed(img_3_val_V_q1),32));

        p_Val2_99_fu_2888_p5 <= std_logic_vector(IEEE.numeric_std.resize(signed(img_4_val_V_q1),32));

        p_Val2_99_fu_2888_p6 <= std_logic_vector(IEEE.numeric_std.resize(signed(img_5_val_V_q1),32));

    p_Val2_i_i_i_fu_1759_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(p_Val2_55_fu_1751_p3));
    p_Val2_s_207_fu_3116_p3 <= 
        tmp_417_fu_3111_p2 when (is_neg_4_reg_6285(0) = '1') else 
        p_Val2_52_reg_6268;
    p_Val2_s_fu_2422_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(sin_t_V_reg_5942) * signed(i_op_assign_4_reg_890))), 32));
    p_s_fu_3805_p3 <= 
        ret_V_29_fu_3771_p4 when (tmp_463_fu_3793_p2(0) = '1') else 
        ret_V_30_fu_3799_p2;
    p_shl1_cast_fu_2287_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_204_fu_2279_p3),7));
        p_shl2_cast_fu_4029_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_249_fu_4021_p3),21));

        p_shl3_cast_fu_4041_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_250_fu_4033_p3),21));

        p_shl4_cast_fu_3960_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_236_fu_3953_p3),20));

        p_shl5_cast_fu_3971_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_237_fu_3964_p3),20));

    p_shl6_cast_fu_5038_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_218_fu_5030_p3),7));
    p_shl7_cast_fu_5050_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_219_fu_5042_p3),7));
    p_shl_cast_fu_2275_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_203_fu_2267_p3),7));
        r0_cast_fu_3856_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_1_reg_6448),17));

    r_V_6_fu_4398_p2 <= std_logic_vector(signed(tmp_461_fu_4394_p1) - signed(tmp_395_reg_6007));
    r_V_7_fu_5277_p0 <= OP1_V_12_fu_5274_p1(32 - 1 downto 0);
    r_V_7_fu_5277_p1 <= OP1_V_12_fu_5274_p1(32 - 1 downto 0);
    r_V_7_fu_5277_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_7_fu_5277_p0) * signed(r_V_7_fu_5277_p1))), 64));
    r_V_8_fu_5379_p0 <= OP1_V_13_fu_5376_p1(32 - 1 downto 0);
    r_V_8_fu_5379_p1 <= OP1_V_13_fu_5376_p1(32 - 1 downto 0);
    r_V_8_fu_5379_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_8_fu_5379_p0) * signed(r_V_8_fu_5379_p1))), 64));
    r_V_9_fu_5647_p0 <= desc_buf_val_V_q1;
    r_V_9_fu_5647_p1 <= OP2_V_10_reg_6847(32 - 1 downto 0);
    r_V_9_fu_5647_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_9_fu_5647_p0) * signed(r_V_9_fu_5647_p1))), 64));
    r_V_fu_2686_p2 <= std_logic_vector(signed(tmp_440_fu_2678_p1) + signed(tmp_441_fu_2682_p1));
    r_V_s_fu_4411_p3 <= (r_V_6_reg_6557 & ap_const_lv3_0);
    r_fu_2432_p2 <= std_logic_vector(signed(i_op_assign_4_reg_890) + signed(y0));
    radius_fu_2219_p3 <= 
        p_Val2_154_fu_1765_p3 when (tmp_i_fu_2213_p2(0) = '1') else 
        p_Val2_132_fu_2209_p1;
    ret_V_29_fu_3771_p4 <= p_Val2_104_fu_3764_p3(31 downto 16);
    ret_V_30_fu_3799_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(ret_V_29_fu_3771_p4));
    ret_V_31_fu_3886_p4 <= p_Val2_105_fu_3879_p3(31 downto 16);
    ret_V_32_fu_3914_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(ret_V_31_fu_3886_p4));
    ret_V_33_fu_4575_p4 <= p_Val2_106_fu_4567_p3(31 downto 16);
    ret_V_34_fu_4603_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(ret_V_33_fu_4575_p4));
    ret_V_6_fu_5311_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(ret_V_fu_5283_p4));
    ret_V_7_fu_5385_p4 <= r_V_8_fu_5379_p2(63 downto 32);
    ret_V_8_fu_5413_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(ret_V_7_fu_5385_p4));
    ret_V_fu_5283_p4 <= r_V_7_fu_5277_p2(63 downto 32);
    sel_tmp100_demorgan_fu_2132_p2 <= (tmp_386_fu_2054_p2 or tmp_377_reg_5910);
    sel_tmp100_fu_2137_p2 <= (sel_tmp100_demorgan_fu_2132_p2 xor ap_const_lv1_1);
    sel_tmp101_fu_2143_p2 <= (tmp_378_fu_2024_p2 and sel_tmp100_fu_2137_p2);
    sel_tmp102_fu_2149_p2 <= (tmp_387_fu_2064_p2 xor ap_const_lv1_1);
    sel_tmp103_fu_2155_p2 <= (sel_tmp102_fu_2149_p2 and sel_tmp101_fu_2143_p2);
    sel_tmp104_fu_2161_p3 <= 
        p_0163_s_fu_2100_p3 when (sel_tmp103_fu_2155_p2(0) = '1') else 
        sel_tmp97_fu_2124_p3;
    sel_tmp109_fu_2169_p2 <= (tmp_387_fu_2064_p2 and sel_tmp101_fu_2143_p2);
    sel_tmp10_fu_4326_p3 <= 
        storemerge_fu_4270_p3 when (sel_tmp9_fu_4320_p2(0) = '1') else 
        sel_tmp3_fu_4292_p3;
    sel_tmp110_fu_2175_p3 <= 
        tmp_1141_fu_2096_p1 when (sel_tmp109_fu_2169_p2(0) = '1') else 
        sel_tmp104_fu_2161_p3;
    sel_tmp115_demorgan_fu_2183_p2 <= (tmp_378_fu_2024_p2 or sel_tmp100_demorgan_fu_2132_p2);
    sel_tmp115_fu_2189_p2 <= (sel_tmp115_demorgan_fu_2183_p2 xor ap_const_lv1_1);
    sel_tmp116_fu_2195_p2 <= (sel_tmp115_fu_2189_p2 and icmp12_fu_2080_p2);
    sel_tmp15_fu_4334_p2 <= (tmp_436_fu_4252_p2 and sel_tmp7_fu_4309_p2);
    sel_tmp16_fu_4340_p3 <= 
        tmp_1166_fu_4266_p1 when (sel_tmp15_fu_4334_p2(0) = '1') else 
        sel_tmp10_fu_4326_p3;
    sel_tmp1_fu_4282_p2 <= (tmp_431_reg_6522 xor ap_const_lv1_1);
    sel_tmp21_demorgan_fu_4348_p2 <= (tmp_432_reg_6528 or sel_tmp6_demorgan_fu_4299_p2);
    sel_tmp21_fu_4353_p2 <= (sel_tmp21_demorgan_fu_4348_p2 xor ap_const_lv1_1);
    sel_tmp22_fu_4359_p2 <= (sel_tmp21_fu_4353_p2 and icmp15_reg_6552);
    sel_tmp28_fu_3613_p2 <= (tmp_452_reg_6407 xor ap_const_lv1_1);
    sel_tmp29_fu_3618_p2 <= (tmp_456_reg_6425 and sel_tmp28_fu_3613_p2);
    sel_tmp2_fu_4287_p2 <= (tmp_435_reg_6540 and sel_tmp1_fu_4282_p2);
    sel_tmp33_demorgan_fu_3623_p2 <= (tmp_456_reg_6425 or tmp_452_reg_6407);
    sel_tmp33_fu_3627_p2 <= (sel_tmp33_demorgan_fu_3623_p2 xor ap_const_lv1_1);
    sel_tmp34_fu_3633_p2 <= (tmp_453_reg_6413 and sel_tmp33_fu_3627_p2);
    sel_tmp35_fu_3638_p2 <= (tmp_457_fu_3583_p2 xor ap_const_lv1_1);
    sel_tmp36_fu_3644_p2 <= (sel_tmp35_fu_3638_p2 and sel_tmp34_fu_3633_p2);
    sel_tmp3_fu_4292_p3 <= 
        tmp_1164_reg_6546 when (sel_tmp2_fu_4287_p2(0) = '1') else 
        ap_const_lv32_0;
    sel_tmp42_fu_3650_p2 <= (tmp_457_fu_3583_p2 and sel_tmp34_fu_3633_p2);
    sel_tmp48_demorgan_fu_3656_p2 <= (tmp_453_reg_6413 or sel_tmp33_demorgan_fu_3623_p2);
    sel_tmp48_fu_3661_p2 <= (sel_tmp48_demorgan_fu_3656_p2 xor ap_const_lv1_1);
    sel_tmp49_fu_3667_p2 <= (sel_tmp48_fu_3661_p2 and icmp25_reg_6437);
    sel_tmp65_fu_1524_p1 <= sel_tmp65_v_fu_1517_p3;
    sel_tmp65_v_fu_1517_p3 <= 
        p_Result_161_fu_1466_p3 when (tmp_i_i_reg_5841(0) = '1') else 
        p_Result_162_fu_1509_p3;
    sel_tmp66_fu_1528_p2 <= (tmp_i_i_reg_5841 xor ap_const_lv1_1);
    sel_tmp67_fu_1533_p2 <= (tmp_1685_i_i_reg_5847 and sel_tmp66_fu_1528_p2);
    sel_tmp6_demorgan_fu_4299_p2 <= (tmp_435_reg_6540 or tmp_431_reg_6522);
    sel_tmp6_fu_4303_p2 <= (sel_tmp6_demorgan_fu_4299_p2 xor ap_const_lv1_1);
    sel_tmp71_fu_1895_p2 <= (tmp_366_reg_5888 xor ap_const_lv1_1);
    sel_tmp72_fu_1900_p2 <= (tmp_370_fu_1836_p2 and sel_tmp71_fu_1895_p2);
    sel_tmp73_fu_1906_p3 <= 
        tmp_1133_fu_1842_p1 when (sel_tmp72_fu_1900_p2(0) = '1') else 
        ap_const_lv32_0;
    sel_tmp76_demorgan_fu_1914_p2 <= (tmp_370_fu_1836_p2 or tmp_366_reg_5888);
    sel_tmp76_fu_1919_p2 <= (sel_tmp76_demorgan_fu_1914_p2 xor ap_const_lv1_1);
    sel_tmp77_fu_1925_p2 <= (tmp_367_fu_1806_p2 and sel_tmp76_fu_1919_p2);
    sel_tmp78_fu_1931_p2 <= (tmp_371_fu_1846_p2 xor ap_const_lv1_1);
    sel_tmp79_fu_1937_p2 <= (sel_tmp78_fu_1931_p2 and sel_tmp77_fu_1925_p2);
    sel_tmp7_fu_4309_p2 <= (tmp_432_reg_6528 and sel_tmp6_fu_4303_p2);
    sel_tmp80_fu_1943_p3 <= 
        p_0154_s_fu_1882_p3 when (sel_tmp79_fu_1937_p2(0) = '1') else 
        sel_tmp73_fu_1906_p3;
    sel_tmp85_fu_1951_p2 <= (tmp_371_fu_1846_p2 and sel_tmp77_fu_1925_p2);
    sel_tmp86_fu_1957_p3 <= 
        tmp_1135_fu_1878_p1 when (sel_tmp85_fu_1951_p2(0) = '1') else 
        sel_tmp80_fu_1943_p3;
    sel_tmp8_fu_4314_p2 <= (tmp_436_fu_4252_p2 xor ap_const_lv1_1);
    sel_tmp91_demorgan_fu_1965_p2 <= (tmp_367_fu_1806_p2 or sel_tmp76_demorgan_fu_1914_p2);
    sel_tmp91_fu_1971_p2 <= (sel_tmp91_demorgan_fu_1965_p2 xor ap_const_lv1_1);
    sel_tmp92_fu_1977_p2 <= (sel_tmp91_fu_1971_p2 and icmp_fu_1862_p2);
    sel_tmp95_fu_2113_p2 <= (tmp_377_reg_5910 xor ap_const_lv1_1);
    sel_tmp96_fu_2118_p2 <= (tmp_386_fu_2054_p2 and sel_tmp95_fu_2113_p2);
    sel_tmp97_fu_2124_p3 <= 
        tmp_1139_fu_2060_p1 when (sel_tmp96_fu_2118_p2(0) = '1') else 
        ap_const_lv32_0;
    sel_tmp9_fu_4320_p2 <= (sel_tmp8_fu_4314_p2 and sel_tmp7_fu_4309_p2);
        sh_amt_1_cast_fu_2050_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_1_fu_2042_p3),32));

    sh_amt_1_fu_2042_p3 <= 
        tmp_379_fu_2030_p2 when (tmp_378_fu_2024_p2(0) = '1') else 
        tmp_384_fu_2036_p2;
        sh_amt_2_cast_fu_5545_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_2_fu_5537_p3),32));

    sh_amt_2_fu_5537_p3 <= 
        tmp_480_fu_5525_p2 when (tmp_479_fu_5519_p2(0) = '1') else 
        tmp_481_fu_5531_p2;
        sh_amt_3_cast_fu_4249_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_3_reg_6534),32));

    sh_amt_3_fu_4215_p3 <= 
        tmp_433_fu_4203_p2 when (tmp_432_fu_4197_p2(0) = '1') else 
        tmp_434_fu_4209_p2;
        sh_amt_4_cast_fu_3580_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_4_reg_6419),32));

    sh_amt_4_fu_3546_p3 <= 
        tmp_454_fu_3534_p2 when (tmp_453_fu_3528_p2(0) = '1') else 
        tmp_455_fu_3540_p2;
        sh_amt_cast_fu_1832_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_fu_1824_p3),32));

    sh_amt_fu_1824_p3 <= 
        tmp_368_fu_1812_p2 when (tmp_367_fu_1806_p2(0) = '1') else 
        tmp_369_fu_1818_p2;
    sh_assign_6_fu_1697_p3 <= 
        tmp_1702_i_i_i_cast_fu_1693_p1 when (isNeg_fu_1679_p3(0) = '1') else 
        sh_assign_fu_1673_p2;
        sh_assign_6_i_i_i_ca_5_fu_1709_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_assign_6_fu_1697_p3),25));

        sh_assign_6_i_i_i_ca_fu_1705_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_assign_6_fu_1697_p3),32));

    sh_assign_fu_1673_p2 <= std_logic_vector(signed(ap_const_lv9_181) + signed(tmp_i_i_i_i_cast_fu_1669_p1));
    sin_t_V_fu_2201_p3 <= 
        tmp_390_fu_2107_p2 when (sel_tmp116_fu_2195_p2(0) = '1') else 
        sel_tmp110_fu_2175_p3;
    storemerge6_fu_3601_p3 <= 
        ap_const_lv32_FFFFFFFF when (isneg_3_reg_6397(0) = '1') else 
        ap_const_lv32_0;
    storemerge_fu_4270_p3 <= 
        ap_const_lv32_FFFFFFFF when (isneg_2_reg_6512(0) = '1') else 
        ap_const_lv32_0;
    t_V_18_fu_1417_p1 <= reg_1143;
    thresh_V_cast3_fu_5343_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(thresh_V_fu_5706_p2),32));
    thresh_V_fu_5706_p0 <= thresh_V_fu_5706_p00(16 - 1 downto 0);
    thresh_V_fu_5706_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_1149),31));
    thresh_V_fu_5706_p1 <= ap_const_lv31_3333(15 - 1 downto 0);
    tmp118_fu_2566_p2 <= (tmp_408_fu_2548_p2 and tmp_407_fu_2542_p2);
    tmp119_fu_2577_p2 <= (tmp_409_fu_2554_p2 and tmp120_fu_2572_p2);
    tmp120_fu_2572_p2 <= (tmp_410_fu_2560_p2 and tmp_398_reg_6026);
    tmp121_fu_2598_p2 <= (tmp_412_fu_2594_p2 and tmp_411_fu_2589_p2);
    tmp122_cast_cast_fu_3413_p3 <= 
        ap_const_lv8_50 when (tmp_448_fu_3405_p2(0) = '1') else 
        ap_const_lv8_4F;
    tmp32_V_23_fu_1326_p2 <= std_logic_vector(shift_left(unsigned(p_Val2_153_fu_1300_p3),to_integer(unsigned('0' & num_zeros_fu_1318_p3(31-1 downto 0)))));
    tmp32_V_27_fu_1207_p2 <= std_logic_vector(shift_left(unsigned(p_Val2_155_fu_1181_p3),to_integer(unsigned('0' & num_zeros_3_fu_1199_p3(31-1 downto 0)))));
    tmp32_V_31_fu_3140_p2 <= std_logic_vector(shift_left(unsigned(p_Val2_s_207_fu_3116_p3),to_integer(unsigned('0' & num_zeros_4_fu_3132_p3(31-1 downto 0)))));
    tmp32_V_35_fu_2963_p2 <= std_logic_vector(shift_left(unsigned(p_Val2_156_fu_2939_p3),to_integer(unsigned('0' & num_zeros_5_fu_2955_p3(31-1 downto 0)))));
    tmp32_V_38_fu_3175_p1 <= p_Val2_139_reg_6306(32 - 1 downto 0);
    tmp32_V_39_fu_3188_p2 <= std_logic_vector(shift_left(unsigned(tmp32_V_38_fu_3175_p1),to_integer(unsigned('0' & tmp_593_cast_fu_3184_p1(31-1 downto 0)))));
    tmp32_V_40_fu_3252_p1 <= tmp_1183_fu_3246_p2(32 - 1 downto 0);
    tmp32_V_41_fu_3256_p3 <= 
        tmp32_V_39_fu_3188_p2 when (icmp22_fu_3169_p2(0) = '1') else 
        tmp32_V_40_fu_3252_p1;
    tmp32_V_44_fu_1217_p1 <= grp_fu_1112_p1;
    tmp32_V_45_fu_3278_p1 <= grp_fu_1112_p1;
    tmp32_V_46_fu_3264_p1 <= grp_fu_1112_p1;
    tmp32_V_47_fu_3391_p1 <= grp_fu_1112_p1;
    tmp32_V_fu_1336_p1 <= grp_fu_1112_p1;
    tmp_1119_fu_1618_p1 <= descriptor_val_offset(10 - 1 downto 0);
    tmp_1121_fu_1332_p1 <= num_zeros_fu_1318_p3(8 - 1 downto 0);
    tmp_1127_fu_1729_p3 <= tmp_1704_i_i_i_fu_1717_p2(24 downto 24);
    tmp_1129_fu_1213_p1 <= num_zeros_3_fu_1199_p3(8 - 1 downto 0);
    tmp_1130_fu_1550_p1 <= ireg_V_fu_1546_p1(63 - 1 downto 0);
    tmp_1132_fu_1572_p1 <= ireg_V_fu_1546_p1(52 - 1 downto 0);
    tmp_1133_fu_1842_p1 <= man_V_8_fu_1793_p3(32 - 1 downto 0);
    tmp_1134_fu_1852_p4 <= sh_amt_fu_1824_p3(11 downto 5);
    tmp_1135_fu_1878_p1 <= tmp_373_fu_1872_p2(32 - 1 downto 0);
    tmp_1136_fu_1586_p1 <= ireg_V_1_fu_1582_p1(63 - 1 downto 0);
    tmp_1138_fu_1608_p1 <= ireg_V_1_fu_1582_p1(52 - 1 downto 0);
    tmp_1139_fu_2060_p1 <= man_V_11_fu_2011_p3(32 - 1 downto 0);
    tmp_1140_fu_2070_p4 <= sh_amt_1_fu_2042_p3(11 downto 5);
    tmp_1141_fu_2096_p1 <= tmp_389_fu_2090_p2(32 - 1 downto 0);
    tmp_1142_fu_2411_p1 <= img_val_V_offset(3 - 1 downto 0);
    tmp_1143_fu_2448_p1 <= r_fu_2432_p2(10 - 1 downto 0);
    tmp_1144_fu_2460_p1 <= r_fu_2432_p2(10 - 1 downto 0);
    tmp_1145_fu_2464_p2 <= std_logic_vector(unsigned(ap_const_lv10_1) + unsigned(tmp_1144_fu_2460_p1));
    tmp_1146_fu_2478_p1 <= r_fu_2432_p2(10 - 1 downto 0);
    tmp_1147_fu_2482_p2 <= std_logic_vector(signed(ap_const_lv10_3FF) + signed(tmp_1146_fu_2478_p1));
    tmp_1148_fu_4956_p1 <= i9_reg_920(2 - 1 downto 0);
    tmp_1149_fu_5060_p1 <= i_s_fu_5016_p2(2 - 1 downto 0);
    tmp_1150_fu_5293_p3 <= r_V_7_fu_5277_p2(63 downto 63);
    tmp_1151_fu_5301_p1 <= r_V_7_fu_5277_p2(32 - 1 downto 0);
    tmp_1152_fu_2609_p1 <= c_reg_6068(18 - 1 downto 0);
    tmp_1153_fu_2612_p2 <= std_logic_vector(unsigned(ap_const_lv18_1) + unsigned(tmp_1152_fu_2609_p1));
    tmp_1154_fu_2633_p1 <= c_reg_6068(18 - 1 downto 0);
    tmp_1155_fu_2636_p2 <= std_logic_vector(signed(ap_const_lv18_3FFFF) + signed(tmp_1154_fu_2633_p1));
    tmp_1156_fu_2657_p1 <= c_reg_6068(18 - 1 downto 0);
    tmp_1158_fu_3146_p1 <= num_zeros_4_fu_3132_p3(8 - 1 downto 0);
    tmp_1160_fu_2969_p1 <= num_zeros_5_fu_2955_p3(8 - 1 downto 0);
    tmp_1161_fu_4129_p1 <= ireg_V_2_fu_4125_p1(63 - 1 downto 0);
    tmp_1163_fu_4155_p1 <= ireg_V_2_fu_4125_p1(52 - 1 downto 0);
    tmp_1164_fu_4229_p1 <= man_V_14_fu_4177_p3(32 - 1 downto 0);
    tmp_1165_fu_4233_p4 <= sh_amt_3_fu_4215_p3(11 downto 5);
    tmp_1166_fu_4266_p1 <= tmp_438_fu_4261_p2(32 - 1 downto 0);
    tmp_1167_fu_4372_p3 <= p_Val2_157_fu_4364_p3(31 downto 31);
    tmp_1169_fu_3011_p1 <= tmp_444_fu_3003_p3(32 - 1 downto 0);
    tmp_1170_fu_3051_p1 <= tmp_446_fu_3043_p3(32 - 1 downto 0);
    tmp_1171_fu_3075_p1 <= msb_idx_fu_3069_p2(31 - 1 downto 0);
    tmp_1173_fu_3159_p4 <= msb_idx_5_fu_3153_p3(30 downto 5);
    tmp_1175_fu_3194_p1 <= msb_idx_5_fu_3153_p3(7 - 1 downto 0);
    tmp_1176_fu_3198_p2 <= "1" when (unsigned(msb_idx_5_fu_3153_p3) < unsigned(ap_const_lv31_1F)) else "0";
    tmp_1177_fu_3204_p2 <= std_logic_vector(signed(ap_const_lv7_61) + signed(tmp_1175_fu_3194_p1));
    
    tmp_1178_fu_3210_p4_proc : process(p_Val2_139_cast_fu_3150_p1)
    variable vlo_cpy : STD_LOGIC_VECTOR(97+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(97+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(97 - 1 downto 0);
    variable tmp_1178_fu_3210_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(97 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(97 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(97 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(7 - 1 downto 0) := ap_const_lv32_60(7 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(7 - 1 downto 0) := ap_const_lv32_0(7 - 1 downto 0);
        v0_cpy := p_Val2_139_cast_fu_3150_p1;
        if (vlo_cpy(7 - 1 downto 0) > vhi_cpy(7 - 1 downto 0)) then
            vhi_cpy(7-1 downto 0) := std_logic_vector(97-1-unsigned(ap_const_lv32_0(7-1 downto 0)));
            vlo_cpy(7-1 downto 0) := std_logic_vector(97-1-unsigned(ap_const_lv32_60(7-1 downto 0)));
            for tmp_1178_fu_3210_p4_i in 0 to 97-1 loop
                v0_cpy(tmp_1178_fu_3210_p4_i) := p_Val2_139_cast_fu_3150_p1(97-1-tmp_1178_fu_3210_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(7-1 downto 0)))));

        section := (others=>'0');
        section(7-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(7-1 downto 0)) - unsigned(vlo_cpy(7-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(97-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_1178_fu_3210_p4 <= resvalue(97-1 downto 0);
    end process;

    tmp_1179_fu_3220_p2 <= (tmp_1175_fu_3194_p1 xor ap_const_lv7_7F);
    tmp_1180_fu_3226_p3 <= 
        tmp_1178_fu_3210_p4 when (tmp_1176_fu_3198_p2(0) = '1') else 
        p_Val2_139_cast_fu_3150_p1;
    tmp_1181_fu_3234_p3 <= 
        tmp_1179_fu_3220_p2 when (tmp_1176_fu_3198_p2(0) = '1') else 
        tmp_1177_fu_3204_p2;
    tmp_1182_fu_3242_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1181_fu_3234_p3),97));
    tmp_1183_fu_3246_p2 <= std_logic_vector(shift_right(unsigned(tmp_1180_fu_3226_p3),to_integer(unsigned('0' & tmp_1182_fu_3242_p1(31-1 downto 0)))));
    tmp_1185_fu_3410_p1 <= msb_idx_reg_6312(8 - 1 downto 0);
    tmp_1186_fu_3460_p1 <= ireg_V_3_fu_3456_p1(63 - 1 downto 0);
    tmp_1188_fu_3486_p1 <= ireg_V_3_fu_3456_p1(52 - 1 downto 0);
    tmp_1189_fu_3560_p1 <= man_V_17_fu_3508_p3(32 - 1 downto 0);
    tmp_1190_fu_3564_p4 <= sh_amt_4_fu_3546_p3(11 downto 5);
    tmp_1191_fu_3597_p1 <= tmp_459_fu_3592_p2(32 - 1 downto 0);
    tmp_1193_fu_4434_p4 <= neg_mul_fu_4428_p2(72 downto 45);
    tmp_1194_fu_4448_p4 <= mul_fu_4422_p2(72 downto 45);
    tmp_1195_fu_4482_p1 <= tmp_462_fu_4475_p3(27 - 1 downto 0);
    tmp_1196_fu_4486_p1 <= tmp_462_fu_4475_p3(28 - 1 downto 0);
    tmp_1197_fu_4500_p3 <= tmp_462_reg_6568(27 downto 27);
    tmp_1199_fu_3744_p1 <= p_Val2_45_reg_6082_pp1_iter1_reg(16 - 1 downto 0);
    tmp_1200_fu_3781_p3 <= p_Val2_104_fu_3764_p3(31 downto 31);
    tmp_1201_fu_3789_p1 <= p_Val2_104_fu_3764_p3(16 - 1 downto 0);
    tmp_1202_fu_3859_p1 <= p_Val2_46_reg_6090_pp1_iter1_reg(16 - 1 downto 0);
    tmp_1203_fu_3896_p3 <= p_Val2_105_fu_3879_p3(31 downto 31);
    tmp_1204_fu_3904_p1 <= p_Val2_105_fu_3879_p3(16 - 1 downto 0);
    tmp_1205_fu_4545_p1 <= p_Val2_63_fu_4533_p3(16 - 1 downto 0);
    tmp_1206_fu_4585_p3 <= p_Val2_106_fu_4567_p3(31 downto 31);
    tmp_1207_fu_4593_p1 <= p_Val2_106_fu_4567_p3(16 - 1 downto 0);
    tmp_1208_fu_4635_p1 <= p_9_fu_4617_p3(10 - 1 downto 0);
    tmp_1209_fu_4639_p4 <= tmp_466_fu_4629_p2(16 downto 3);
    tmp_1210_fu_4669_p1 <= p_9_fu_4617_p3(10 - 1 downto 0);
    tmp_1211_fu_3981_p1 <= tmp_238_fu_3975_p2(7 - 1 downto 0);
    tmp_1212_fu_3985_p1 <= p_3_fu_3928_p3(7 - 1 downto 0);
    tmp_1213_fu_3989_p2 <= std_logic_vector(unsigned(tmp_1212_fu_3985_p1) + unsigned(tmp_1211_fu_3981_p1));
    tmp_1214_fu_4691_p2 <= std_logic_vector(unsigned(ap_const_lv10_1) + unsigned(tmp_1208_fu_4635_p1));
    tmp_1215_fu_4697_p3 <= 
        tmp_1214_fu_4691_p2 when (icmp35_fu_4649_p2(0) = '1') else 
        ap_const_lv10_0;
    tmp_1216_fu_4001_p1 <= tmp_238_fu_3975_p2(7 - 1 downto 0);
    tmp_1217_fu_4005_p1 <= tmp_470_fu_3995_p2(7 - 1 downto 0);
    tmp_1218_fu_4009_p2 <= std_logic_vector(unsigned(tmp_1217_fu_4005_p1) + unsigned(tmp_1216_fu_4001_p1));
    tmp_1219_fu_4051_p1 <= tmp_251_fu_4045_p2(7 - 1 downto 0);
    tmp_1220_fu_4055_p1 <= p_3_fu_3928_p3(7 - 1 downto 0);
    tmp_1221_fu_4059_p2 <= std_logic_vector(unsigned(tmp_1220_fu_4055_p1) + unsigned(tmp_1219_fu_4051_p1));
    tmp_1222_fu_4065_p1 <= tmp_251_fu_4045_p2(7 - 1 downto 0);
    tmp_1223_fu_4069_p1 <= tmp_470_fu_3995_p2(7 - 1 downto 0);
    tmp_1224_fu_4073_p2 <= std_logic_vector(unsigned(tmp_1223_fu_4069_p1) + unsigned(tmp_1222_fu_4065_p1));
    tmp_1225_fu_5395_p3 <= r_V_8_fu_5379_p2(63 downto 63);
    tmp_1226_fu_5403_p1 <= r_V_8_fu_5379_p2(32 - 1 downto 0);
    tmp_1227_fu_5451_p1 <= ireg_V_4_fu_5447_p1(63 - 1 downto 0);
    tmp_1229_fu_5477_p1 <= ireg_V_4_fu_5447_p1(52 - 1 downto 0);
    tmp_1230_fu_5609_p1 <= man_V_20_fu_5499_p3(32 - 1 downto 0);
    tmp_1231_fu_5555_p1 <= man_V_20_fu_5499_p3(32 - 1 downto 0);
    tmp_1232_fu_5559_p4 <= sh_amt_2_fu_5537_p3(11 downto 5);
    tmp_1233_fu_5605_p1 <= tmp_485_fu_5599_p2(32 - 1 downto 0);
    tmp_1234_fu_5652_p3 <= r_V_9_fu_5647_p2(63 downto 63);
    tmp_1235_fu_5660_p1 <= r_V_9_fu_5647_p2(32 - 1 downto 0);
    tmp_1685_i_i_fu_1437_p2 <= "1" when (unsigned(loc_V_fu_1421_p4) > unsigned(ap_const_lv8_96)) else "0";
    tmp_1686_i_i_fu_1453_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(index_V_fu_1443_p4),64));
    tmp_1688_i_i_fu_1487_p2 <= (mask_table1685_q0 xor ap_const_lv23_7FFFFF);
    tmp_1701_i_i_i_cast2_fu_1665_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1701_i_i_i_fu_1655_p4),79));
    tmp_1701_i_i_i_fu_1655_p4 <= ((ap_const_lv1_1 & loc_V_20_fu_1651_p1) & ap_const_lv1_0);
        tmp_1702_i_i_i_cast_fu_1693_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_1702_i_i_i_fu_1687_p2),9));

    tmp_1702_i_i_i_fu_1687_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) - unsigned(loc_V_19_fu_1641_p4));
    tmp_1703_i_i_i_fu_1713_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_assign_6_i_i_i_ca_fu_1705_p1),79));
    tmp_1704_i_i_i_fu_1717_p2 <= std_logic_vector(shift_right(unsigned(tmp_1701_i_i_i_fu_1655_p4),to_integer(unsigned('0' & sh_assign_6_i_i_i_ca_5_fu_1709_p1(25-1 downto 0)))));
    tmp_1705_i_i_i_fu_1723_p2 <= std_logic_vector(shift_left(unsigned(tmp_1701_i_i_i_cast2_fu_1665_p1),to_integer(unsigned('0' & tmp_1703_i_i_i_fu_1713_p1(31-1 downto 0)))));
    tmp_198_cast_fu_1622_p3 <= (tmp_1119_fu_1618_p1 & ap_const_lv7_0);
    tmp_200_fu_1737_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1127_fu_1729_p3),32));
    tmp_201_fu_1741_p4 <= tmp_1705_i_i_i_fu_1723_p2(55 downto 24);
    tmp_203_fu_2267_p3 <= (tmp_446_mid2_v_fu_2259_p3 & ap_const_lv3_0);
    tmp_204_fu_2279_p3 <= (tmp_446_mid2_v_fu_2259_p3 & ap_const_lv1_0);
    tmp_205_fu_2291_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_2275_p1) - unsigned(p_shl1_cast_fu_2287_p1));
    tmp_206_fu_2321_p2 <= (exitcond_flatten_fu_2245_p2 or exitcond6_mid_fu_2309_p2);
    tmp_207_fu_2347_p2 <= std_logic_vector(unsigned(tmp_205_fu_2291_p2) + unsigned(tmp_455_mid2_cast_fu_2343_p1));
    tmp_209_cast_fu_2353_p3 <= (tmp_207_fu_2347_p2 & ap_const_lv3_0);
    tmp_210_cast_fu_2371_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_210_fu_2365_p2),64));
    tmp_210_fu_2365_p2 <= std_logic_vector(unsigned(tmp_209_cast_fu_2353_p3) + unsigned(tmp_445_cast_fu_2361_p1));
    tmp_212_cast_fu_2452_p3 <= (tmp_1143_fu_2448_p1 & ap_const_lv8_0);
    tmp_214_cast_fu_2470_p3 <= (tmp_1145_fu_2464_p2 & ap_const_lv8_0);
    tmp_216_cast_fu_2488_p3 <= (tmp_1147_fu_2482_p2 & ap_const_lv8_0);
    tmp_218_fu_5030_p3 <= (tmp_457_mid2_v_fu_5022_p3 & ap_const_lv3_0);
    tmp_219_fu_5042_p3 <= (tmp_457_mid2_v_fu_5022_p3 & ap_const_lv1_0);
    tmp_220_fu_5054_p2 <= std_logic_vector(unsigned(p_shl6_cast_fu_5038_p1) - unsigned(p_shl7_cast_fu_5050_p1));
    tmp_222_fu_5120_p2 <= (exitcond_flatten2_fu_4996_p2 or exitcond1_mid_fu_5100_p2);
    tmp_223_fu_5144_p3 <= 
        tmp_458_mid1_fu_5064_p3 when (exitcond_flatten2_fu_4996_p2(0) = '1') else 
        tmp_401_fu_4972_p2;
    tmp_224_fu_5152_p3 <= 
        tmp_469_mid1_fu_5138_p2 when (exitcond1_mid_fu_5100_p2(0) = '1') else 
        tmp_223_fu_5144_p3;
    tmp_225_fu_5186_p2 <= std_logic_vector(unsigned(tmp_471_mid2_cast_fu_5182_p1) + unsigned(tmp_220_fu_5054_p2));
    tmp_227_cast_fu_5192_p3 <= (tmp_225_fu_5186_p2 & ap_const_lv3_0);
    tmp_228_cast_fu_5228_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_228_fu_5222_p2),64));
    tmp_228_fu_5222_p2 <= std_logic_vector(unsigned(tmp_458_cast_fu_5218_p1) + unsigned(tmp_227_cast_fu_5192_p3));
        tmp_229_cast_fu_2623_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_229_fu_2618_p2),64));

    tmp_229_fu_2618_p2 <= std_logic_vector(unsigned(tmp_1153_fu_2612_p2) + unsigned(tmp_212_cast_reg_6036));
        tmp_230_cast_fu_2647_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_230_fu_2642_p2),64));

    tmp_230_fu_2642_p2 <= std_logic_vector(unsigned(tmp_1155_fu_2636_p2) + unsigned(tmp_212_cast_reg_6036));
        tmp_231_cast_fu_2776_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_231_fu_2772_p2),64));

    tmp_231_fu_2772_p2 <= std_logic_vector(unsigned(tmp_1156_reg_6166) + unsigned(tmp_214_cast_reg_6042));
        tmp_232_cast_fu_2790_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_232_fu_2786_p2),64));

    tmp_232_fu_2786_p2 <= std_logic_vector(unsigned(tmp_1156_reg_6166) + unsigned(tmp_216_cast_reg_6047));
        tmp_233_fu_4444_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_1193_fu_4434_p4),36));

        tmp_234_fu_4458_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_1194_fu_4448_p4),36));

    tmp_235_fu_4462_p3 <= 
        tmp_233_fu_4444_p1 when (tmp_1192_reg_6562(0) = '1') else 
        tmp_234_fu_4458_p1;
    tmp_236_fu_3953_p3 <= (p_1_reg_6448 & ap_const_lv3_0);
    tmp_237_fu_3964_p3 <= (p_1_reg_6448 & ap_const_lv1_0);
    tmp_238_fu_3975_p2 <= std_logic_vector(signed(p_shl4_cast_fu_3960_p1) - signed(p_shl5_cast_fu_3971_p1));
    tmp_241_cast_fu_4673_p3 <= (tmp_1213_reg_6468_pp1_iter6_reg & ap_const_lv3_0);
    tmp_242_cast_fu_4686_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_242_fu_4680_p2),64));
    tmp_242_fu_4680_p2 <= std_logic_vector(unsigned(tmp_1210_fu_4669_p1) + unsigned(tmp_241_cast_fu_4673_p3));
    tmp_243_cast_fu_4773_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_243_fu_4769_p2),64));
    tmp_243_fu_4769_p2 <= std_logic_vector(unsigned(tmp_1215_reg_6610) + unsigned(tmp_241_cast_reg_6600));
    tmp_246_cast_fu_4705_p3 <= (tmp_1218_reg_6473_pp1_iter6_reg & ap_const_lv3_0);
    tmp_247_cast_fu_4718_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_247_fu_4712_p2),64));
    tmp_247_fu_4712_p2 <= std_logic_vector(unsigned(tmp_1210_fu_4669_p1) + unsigned(tmp_246_cast_fu_4705_p3));
    tmp_248_cast_fu_4782_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_248_fu_4778_p2),64));
    tmp_248_fu_4778_p2 <= std_logic_vector(unsigned(tmp_1215_reg_6610) + unsigned(tmp_246_cast_reg_6618));
    tmp_249_fu_4021_p3 <= (tmp_471_fu_4015_p2 & ap_const_lv3_0);
    tmp_250_fu_4033_p3 <= (tmp_471_fu_4015_p2 & ap_const_lv1_0);
    tmp_251_fu_4045_p2 <= std_logic_vector(signed(p_shl2_cast_fu_4029_p1) - signed(p_shl3_cast_fu_4041_p1));
    tmp_254_cast_fu_4787_p3 <= (tmp_1221_reg_6478_pp1_iter6_reg & ap_const_lv3_0);
    tmp_255_cast_fu_4799_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_255_fu_4794_p2),64));
    tmp_255_fu_4794_p2 <= std_logic_vector(unsigned(tmp_1210_reg_6594) + unsigned(tmp_254_cast_fu_4787_p3));
    tmp_256_cast_fu_4809_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_256_fu_4804_p2),64));
    tmp_256_fu_4804_p2 <= std_logic_vector(unsigned(tmp_1215_reg_6610) + unsigned(tmp_254_cast_fu_4787_p3));
    tmp_259_cast_fu_4814_p3 <= (tmp_1224_reg_6483_pp1_iter6_reg & ap_const_lv3_0);
    tmp_260_cast_fu_4826_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_260_fu_4821_p2),64));
    tmp_260_fu_4821_p2 <= std_logic_vector(unsigned(tmp_1210_reg_6594) + unsigned(tmp_259_cast_fu_4814_p3));
    tmp_261_cast_fu_4836_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_261_fu_4831_p2),64));
    tmp_261_fu_4831_p2 <= std_logic_vector(unsigned(tmp_1215_reg_6610) + unsigned(tmp_259_cast_fu_4814_p3));
        tmp_262_cast_fu_5702_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_262_reg_6861_pp5_iter1_reg),64));

    tmp_262_fu_5638_p2 <= std_logic_vector(unsigned(tmp_546_cast_fu_5634_p1) + unsigned(tmp_198_cast_reg_5931));
    tmp_352_fu_1350_p2 <= "0" when (p_Result_s_reg_5788 = ap_const_lv8_9E) else "1";
    tmp_353_fu_1355_p2 <= std_logic_vector(signed(ap_const_lv8_8E) - signed(tmp_1121_reg_5778));
    tmp_354_fu_1360_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_352_fu_1350_p2),8));
    tmp_355_fu_1370_p3 <= (is_neg_reg_5768 & p_Repl2_48_trunc_fu_1364_p2);
    tmp_357_fu_1499_p4 <= p_Val2_50_fu_1478_p2(31 downto 23);
    tmp_358_fu_1161_p0 <= angle_V;
    tmp_358_fu_1161_p2 <= "1" when (tmp_358_fu_1161_p0 = ap_const_lv32_0) else "0";
    tmp_359_fu_1175_p1 <= angle_V;
    tmp_359_fu_1175_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(tmp_359_fu_1175_p1));
    tmp_360_fu_1231_p2 <= "0" when (p_Result_21_reg_5743 = ap_const_lv8_9E) else "1";
    tmp_361_fu_1236_p2 <= std_logic_vector(signed(ap_const_lv8_8E) - signed(tmp_1129_reg_5733));
    tmp_362_fu_1241_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_360_fu_1231_p2),8));
    tmp_363_fu_1251_p3 <= (is_neg_3_reg_5723 & p_Repl2_51_trunc_fu_1245_p2);
    tmp_364_fu_1773_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_V_reg_5878),12));
    tmp_365_fu_1776_p3 <= (ap_const_lv1_1 & tmp_1132_reg_5883);
    tmp_366_fu_1576_p2 <= "1" when (tmp_1130_fu_1550_p1 = ap_const_lv63_0) else "0";
    tmp_367_fu_1806_p2 <= "1" when (signed(F2_fu_1800_p2) > signed(ap_const_lv12_10)) else "0";
    tmp_368_fu_1812_p2 <= std_logic_vector(signed(ap_const_lv12_FF0) + signed(F2_fu_1800_p2));
    tmp_369_fu_1818_p2 <= std_logic_vector(unsigned(ap_const_lv12_10) - unsigned(F2_fu_1800_p2));
    tmp_370_fu_1836_p2 <= "1" when (F2_fu_1800_p2 = ap_const_lv12_10) else "0";
    tmp_371_fu_1846_p2 <= "1" when (unsigned(sh_amt_fu_1824_p3) < unsigned(ap_const_lv12_36)) else "0";
    tmp_372_fu_1868_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_amt_cast_fu_1832_p1),54));
    tmp_373_fu_1872_p2 <= std_logic_vector(shift_right(signed(man_V_8_fu_1793_p3),to_integer(unsigned('0' & tmp_372_fu_1868_p1(31-1 downto 0)))));
    tmp_374_fu_1889_p2 <= std_logic_vector(shift_left(unsigned(tmp_1133_fu_1842_p1),to_integer(unsigned('0' & sh_amt_cast_fu_1832_p1(31-1 downto 0)))));
    tmp_375_fu_1991_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_V_1_reg_5900),12));
    tmp_376_fu_1994_p3 <= (ap_const_lv1_1 & tmp_1138_reg_5905);
    tmp_377_fu_1612_p2 <= "1" when (tmp_1136_fu_1586_p1 = ap_const_lv63_0) else "0";
    tmp_378_fu_2024_p2 <= "1" when (signed(F2_1_fu_2018_p2) > signed(ap_const_lv12_10)) else "0";
    tmp_379_fu_2030_p2 <= std_logic_vector(signed(ap_const_lv12_FF0) + signed(F2_1_fu_2018_p2));
    tmp_380_fu_2989_p4 <= p_Val2_139_fu_2983_p3(76 downto 33);
    tmp_381_fu_5670_p4 <= r_V_9_fu_5647_p2(39 downto 32);
    tmp_382_fu_5680_p2 <= std_logic_vector(unsigned(ap_const_lv8_1) + unsigned(tmp_381_fu_5670_p4));
    tmp_383_fu_5686_p3 <= 
        tmp_381_fu_5670_p4 when (tmp_489_fu_5664_p2(0) = '1') else 
        tmp_382_fu_5680_p2;
    tmp_384_fu_2036_p2 <= std_logic_vector(unsigned(ap_const_lv12_10) - unsigned(F2_1_fu_2018_p2));
    tmp_385_fu_5694_p3 <= 
        tmp_383_fu_5686_p3 when (tmp_1234_fu_5652_p3(0) = '1') else 
        tmp_381_fu_5670_p4;
    tmp_386_fu_2054_p2 <= "1" when (F2_1_fu_2018_p2 = ap_const_lv12_10) else "0";
    tmp_387_fu_2064_p2 <= "1" when (unsigned(sh_amt_1_fu_2042_p3) < unsigned(ap_const_lv12_36)) else "0";
    tmp_388_fu_2086_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_amt_1_cast_fu_2050_p1),54));
    tmp_389_fu_2090_p2 <= std_logic_vector(shift_right(signed(man_V_11_fu_2011_p3),to_integer(unsigned('0' & tmp_388_fu_2086_p1(31-1 downto 0)))));
    tmp_390_fu_2107_p2 <= std_logic_vector(shift_left(unsigned(tmp_1139_fu_2060_p1),to_integer(unsigned('0' & sh_amt_1_cast_fu_2050_p1(31-1 downto 0)))));
    tmp_391_fu_1399_p0 <= img_rows_read;
    tmp_391_fu_1399_p1 <= img_rows_read;
    tmp_391_fu_1399_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_391_fu_1399_p0) * signed(tmp_391_fu_1399_p1))), 32));
    tmp_392_fu_1405_p0 <= img_cols_read;
    tmp_392_fu_1405_p1 <= img_cols_read;
    tmp_392_fu_1405_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_392_fu_1405_p0) * signed(tmp_392_fu_1405_p1))), 32));
    tmp_393_fu_2401_p1 <= img_rows_read;
    tmp_393_fu_2401_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFF) + signed(tmp_393_fu_2401_p1));
    tmp_394_fu_2406_p1 <= img_cols_read;
    tmp_394_fu_2406_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFF) + signed(tmp_394_fu_2406_p1));
    tmp_395_fu_2414_p0 <= angle_V;
        tmp_395_fu_2414_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_395_fu_2414_p0),33));

    tmp_397_fu_2417_p2 <= "1" when (signed(i_op_assign_4_reg_890) > signed(radius_reg_5948)) else "0";
    tmp_398_fu_2437_p2 <= "1" when (signed(r_fu_2432_p2) > signed(ap_const_lv32_0)) else "0";
    tmp_399_fu_2443_p2 <= "1" when (signed(r_fu_2432_p2) < signed(tmp_393_reg_5989)) else "0";
    tmp_400_fu_4960_p3 <= (tmp_1148_fu_4956_p1 & ap_const_lv2_0);
    tmp_401_fu_4972_p2 <= std_logic_vector(unsigned(tmp_400_fu_4960_p3) + unsigned(tmp_504_cast_fu_4968_p1));
    tmp_402_fu_2496_p2 <= "1" when (signed(ap_phi_mux_i_op_assign_phi_fu_903_p4) > signed(radius_reg_5948)) else "0";
    tmp_404_fu_5212_p2 <= std_logic_vector(unsigned(tmp_470_mid2_fu_5160_p3) + unsigned(k5_cast_fu_5208_p1));
    tmp_405_fu_5253_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_404_reg_6724),64));
    tmp_407_fu_2542_p2 <= "1" when (signed(p_Val2_45_fu_2532_p2) > signed(ap_const_lv32_0)) else "0";
    tmp_408_fu_2548_p2 <= "1" when (signed(p_Val2_45_fu_2532_p2) < signed(ap_const_lv32_50000)) else "0";
    tmp_409_fu_2554_p2 <= "1" when (signed(p_Val2_46_fu_2537_p2) > signed(ap_const_lv32_0)) else "0";
    tmp_410_fu_2560_p2 <= "1" when (signed(p_Val2_46_fu_2537_p2) < signed(ap_const_lv32_50000)) else "0";
    tmp_411_fu_2589_p2 <= "1" when (signed(c_reg_6068) > signed(ap_const_lv32_0)) else "0";
    tmp_412_fu_2594_p2 <= "1" when (signed(c_reg_6068) < signed(tmp_394_reg_5994)) else "0";
    tmp_414_fu_5269_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i7_reg_976),64));
    tmp_415_fu_5305_p2 <= "1" when (tmp_1151_fu_5301_p1 = ap_const_lv32_0) else "0";
    tmp_416_fu_2920_p2 <= "1" when (p_Val2_98_fu_2851_p8 = p_Val2_99_fu_2888_p8) else "0";
    tmp_417_fu_3111_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(p_Val2_52_reg_6268));
    tmp_418_fu_3341_p2 <= "0" when (p_Result_26_reg_6362 = ap_const_lv8_9E) else "1";
    tmp_419_fu_3346_p2 <= std_logic_vector(signed(ap_const_lv8_8E) - signed(tmp_1158_reg_6337));
    tmp_420_fu_3351_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_418_fu_3341_p2),8));
    tmp_421_fu_3361_p3 <= (is_neg_4_reg_6285 & p_Repl2_54_trunc_fu_3355_p2);
    tmp_422_fu_2800_p2 <= "1" when (p_Val2_56_fu_2712_p8 = p_Val2_61_fu_2749_p8) else "0";
    tmp_423_fu_2934_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(p_Val2_49_reg_6177));
    tmp_424_fu_3292_p2 <= "0" when (p_Result_29_reg_6352 = ap_const_lv8_9E) else "1";
    tmp_425_fu_3297_p2 <= std_logic_vector(signed(ap_const_lv8_8E) - signed(tmp_1160_reg_6296));
    tmp_426_fu_3302_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_424_fu_3292_p2),8));
    tmp_427_fu_3312_p3 <= (is_neg_5_reg_6249 & p_Repl2_57_trunc_fu_3306_p2);
    tmp_429_fu_4151_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_V_3_fu_4141_p4),12));
    tmp_430_fu_4159_p3 <= (ap_const_lv1_1 & tmp_1163_fu_4155_p1);
    tmp_431_fu_4185_p2 <= "1" when (tmp_1161_fu_4129_p1 = ap_const_lv63_0) else "0";
    tmp_432_fu_4197_p2 <= "1" when (signed(F2_3_fu_4191_p2) > signed(ap_const_lv12_10)) else "0";
    tmp_433_fu_4203_p2 <= std_logic_vector(signed(ap_const_lv12_FF0) + signed(F2_3_fu_4191_p2));
    tmp_434_fu_4209_p2 <= std_logic_vector(unsigned(ap_const_lv12_10) - unsigned(F2_3_fu_4191_p2));
    tmp_435_fu_4223_p2 <= "1" when (F2_3_fu_4191_p2 = ap_const_lv12_10) else "0";
    tmp_436_fu_4252_p2 <= "1" when (unsigned(sh_amt_3_reg_6534) < unsigned(ap_const_lv12_36)) else "0";
    tmp_437_fu_4257_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_amt_3_cast_fu_4249_p1),54));
    tmp_438_fu_4261_p2 <= std_logic_vector(shift_right(signed(man_V_14_reg_6517),to_integer(unsigned('0' & tmp_437_fu_4257_p1(31-1 downto 0)))));
    tmp_439_fu_4277_p2 <= std_logic_vector(shift_left(unsigned(tmp_1164_reg_6546),to_integer(unsigned('0' & sh_amt_3_cast_fu_4249_p1(31-1 downto 0)))));
        tmp_440_fu_2678_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_58_fu_2663_p2),65));

        tmp_441_fu_2682_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_59_fu_2672_p2),65));

    tmp_442_fu_2973_p2 <= "1" when (p_Val2_60_reg_6255 = ap_const_lv77_0) else "0";
    tmp_443_fu_2978_p2 <= std_logic_vector(unsigned(ap_const_lv77_0) - unsigned(p_Val2_60_reg_6255));
    
    tmp_444_fu_3003_p3_proc : process(p_Result_32_fu_2999_p1)
    begin
        tmp_444_fu_3003_p3 <= std_logic_vector(to_unsigned(64, 64));
        for i in 64 - 1 downto 0 loop
            if p_Result_32_fu_2999_p1(i) = '1' then
                tmp_444_fu_3003_p3 <= std_logic_vector(to_unsigned(64-1-i,64));
                exit;
            end if;
        end loop;
    end process;

    tmp_445_cast_fu_2361_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k_mid2_fu_2327_p3),10));
    tmp_445_fu_3015_p2 <= "1" when (tmp_380_fu_2989_p4 = ap_const_lv44_0) else "0";
    
    tmp_446_fu_3043_p3_proc : process(p_Result_173_fu_3031_p5)
    begin
        tmp_446_fu_3043_p3 <= std_logic_vector(to_unsigned(64, 64));
        for i in 64 - 1 downto 0 loop
            if p_Result_173_fu_3031_p5(i) = '1' then
                tmp_446_fu_3043_p3 <= std_logic_vector(to_unsigned(64-1-i,64));
                exit;
            end if;
        end loop;
    end process;

    tmp_446_mid2_v_fu_2259_p3 <= 
        i_5_fu_2239_p2 when (exitcond_flatten_fu_2245_p2(0) = '1') else 
        i_reg_846;
    tmp_447_fu_3178_p2 <= std_logic_vector(unsigned(ap_const_lv31_1F) - unsigned(msb_idx_5_fu_3153_p3));
    tmp_448_fu_3405_p2 <= "0" when (p_Result_35_reg_6377 = ap_const_lv8_9E) else "1";
    tmp_449_fu_3427_p3 <= (is_neg_6_reg_6262 & p_Repl2_61_trunc_fu_3421_p2);
    tmp_450_fu_3482_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_V_4_fu_3472_p4),12));
    tmp_451_fu_3490_p3 <= (ap_const_lv1_1 & tmp_1188_fu_3486_p1);
    tmp_452_fu_3516_p2 <= "1" when (tmp_1186_fu_3460_p1 = ap_const_lv63_0) else "0";
    tmp_453_fu_3528_p2 <= "1" when (signed(F2_4_fu_3522_p2) > signed(ap_const_lv12_10)) else "0";
    tmp_454_fu_3534_p2 <= std_logic_vector(signed(ap_const_lv12_FF0) + signed(F2_4_fu_3522_p2));
    tmp_455_fu_3540_p2 <= std_logic_vector(unsigned(ap_const_lv12_10) - unsigned(F2_4_fu_3522_p2));
    tmp_455_mid2_cast_fu_2343_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_455_mid2_fu_2335_p3),7));
    tmp_455_mid2_fu_2335_p3 <= 
        j_2_fu_2315_p2 when (exitcond6_mid_fu_2309_p2(0) = '1') else 
        j_mid_fu_2251_p3;
    tmp_456_fu_3554_p2 <= "1" when (F2_4_fu_3522_p2 = ap_const_lv12_10) else "0";
    tmp_457_fu_3583_p2 <= "1" when (unsigned(sh_amt_4_reg_6419) < unsigned(ap_const_lv12_36)) else "0";
    tmp_457_mid2_v_fu_5022_p3 <= 
        i_6_mid1_fu_5010_p2 when (exitcond_flatten2_fu_4996_p2(0) = '1') else 
        i_s_fu_5016_p2;
    tmp_458_cast_fu_5218_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k5_mid2_fu_5126_p3),10));
    tmp_458_fu_3588_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_amt_4_cast_fu_3580_p1),54));
    tmp_458_mid1_fu_5064_p3 <= (tmp_1149_fu_5060_p1 & ap_const_lv2_0);
    tmp_458_mid2_fu_5072_p3 <= 
        tmp_458_mid1_fu_5064_p3 when (exitcond_flatten2_fu_4996_p2(0) = '1') else 
        tmp_400_fu_4960_p3;
    tmp_459_fu_3592_p2 <= std_logic_vector(shift_right(signed(man_V_17_reg_6402),to_integer(unsigned('0' & tmp_458_fu_3588_p1(31-1 downto 0)))));
    tmp_460_fu_3608_p2 <= std_logic_vector(shift_left(unsigned(tmp_1189_reg_6431),to_integer(unsigned('0' & sh_amt_4_cast_fu_3580_p1(31-1 downto 0)))));
        tmp_461_fu_4394_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_57_fu_4386_p3),33));

    tmp_462_fu_4475_p3 <= 
        neg_ti_fu_4469_p2 when (tmp_1192_reg_6562(0) = '1') else 
        tmp_234_fu_4458_p1;
    tmp_463_fu_3793_p2 <= "1" when (tmp_1201_fu_3789_p1 = ap_const_lv16_0) else "0";
    tmp_464_fu_3908_p2 <= "1" when (tmp_1204_fu_3904_p1 = ap_const_lv16_0) else "0";
    tmp_465_fu_4597_p2 <= "1" when (tmp_1207_fu_4593_p1 = ap_const_lv16_0) else "0";
    tmp_466_fu_4629_p2 <= std_logic_vector(unsigned(ap_const_lv17_1) + unsigned(o0_cast_fu_4625_p1));
    tmp_467_fu_3821_p3 <= (p_1_reg_6448 & ap_const_lv16_0);
    tmp_468_fu_3940_p3 <= (p_3_fu_3928_p3 & ap_const_lv16_0);
    tmp_469_fu_4655_p3 <= (p_9_fu_4617_p3 & ap_const_lv16_0);
    tmp_469_mid1_fu_5138_p2 <= std_logic_vector(unsigned(tmp_458_mid2_fu_5072_p3) + unsigned(tmp_504_cast_mid1_fu_5134_p1));
    tmp_470_fu_3995_p2 <= std_logic_vector(unsigned(ap_const_lv17_1) + unsigned(c0_cast_fu_3936_p1));
    tmp_470_mid2_fu_5160_p3 <= (tmp_224_fu_5152_p3 & ap_const_lv3_0);
    tmp_471_fu_4015_p2 <= std_logic_vector(unsigned(ap_const_lv17_1) + unsigned(r0_cast_fu_3856_p1));
    tmp_471_mid2_cast_fu_5182_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_471_mid2_fu_5174_p3),7));
    tmp_471_mid2_fu_5174_p3 <= 
        j_4_mid1_fu_5168_p2 when (exitcond1_mid_fu_5100_p2(0) = '1') else 
        tmp_471_mid_fu_5080_p3;
    tmp_471_mid_fu_5080_p3 <= 
        ap_const_lv3_1 when (exitcond_flatten2_fu_4996_p2(0) = '1') else 
        j_4_fu_4978_p2;
    tmp_472_fu_5441_p2 <= "1" when (signed(nrm_1_reg_987) > signed(ap_const_lv32_0)) else "0";
    tmp_474_fu_5358_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i8_reg_999),64));
    tmp_475_fu_5407_p2 <= "1" when (tmp_1226_fu_5403_p1 = ap_const_lv32_0) else "0";
    tmp_476_fu_5473_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_V_2_fu_5463_p4),12));
    tmp_477_fu_5481_p3 <= (ap_const_lv1_1 & tmp_1229_fu_5477_p1);
    tmp_478_fu_5507_p2 <= "1" when (tmp_1227_fu_5451_p1 = ap_const_lv63_0) else "0";
    tmp_479_fu_5519_p2 <= "1" when (signed(F2_2_fu_5513_p2) > signed(ap_const_lv12_10)) else "0";
    tmp_480_fu_5525_p2 <= std_logic_vector(unsigned(F2_2_fu_5513_p2) + unsigned(ap_const_lv12_FF0));
    tmp_481_fu_5531_p2 <= std_logic_vector(unsigned(ap_const_lv12_10) - unsigned(F2_2_fu_5513_p2));
    tmp_482_fu_5549_p2 <= "1" when (F2_2_fu_5513_p2 = ap_const_lv12_10) else "0";
    tmp_483_fu_5581_p2 <= "1" when (unsigned(sh_amt_2_fu_5537_p3) < unsigned(ap_const_lv12_36)) else "0";
    tmp_484_fu_5595_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_amt_2_cast_fu_5545_p1),54));
    tmp_485_fu_5599_p2 <= std_logic_vector(shift_right(signed(man_V_20_fu_5499_p3),to_integer(unsigned('0' & tmp_484_fu_5595_p1(31-1 downto 0)))));
    tmp_486_fu_5575_p2 <= std_logic_vector(shift_left(unsigned(tmp_1231_fu_5555_p1),to_integer(unsigned('0' & sh_amt_2_cast_fu_5545_p1(31-1 downto 0)))));
    tmp_488_fu_5629_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i10_reg_1033),64));
    tmp_489_fu_5664_p2 <= "1" when (tmp_1235_fu_5660_p1 = ap_const_lv32_0) else "0";
    tmp_504_cast_fu_4968_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j9_reg_942),4));
    tmp_504_cast_mid1_fu_5134_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_4_dup_fu_5114_p2),4));
    tmp_520_cast_fu_2914_p0 <= tmp_6_fu_2911_p1(32 - 1 downto 0);
    tmp_520_cast_fu_2914_p1 <= tmp_6_fu_2911_p1(32 - 1 downto 0);
    tmp_520_cast_fu_2914_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_520_cast_fu_2914_p0) * signed(tmp_520_cast_fu_2914_p1))), 48));
    tmp_521_cast_fu_3090_p0 <= tmp_7_fu_3087_p1(32 - 1 downto 0);
    tmp_521_cast_fu_3090_p1 <= tmp_7_fu_3087_p1(32 - 1 downto 0);
    tmp_521_cast_fu_3090_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_521_cast_fu_3090_p0) * signed(tmp_521_cast_fu_3090_p1))), 48));
    tmp_546_cast_fu_5634_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i10_reg_1033),17));
    tmp_593_cast_fu_3184_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_447_fu_3178_p2),32));
        tmp_6_fu_2911_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_49_reg_6177),48));

        tmp_7_fu_3087_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_52_reg_6268),48));

    tmp_fu_1280_p2 <= "1" when (sigma_V = ap_const_lv32_0) else "0";
    tmp_i5_fu_5363_p2 <= "1" when (signed(desc_buf_val_V_q0) < signed(thresh_V_cast3_reg_6768)) else "0";
    tmp_i_fu_2213_p2 <= "1" when (signed(p_Val2_154_fu_1765_p3) < signed(p_Val2_132_fu_2209_p1)) else "0";
    tmp_i_i5_fu_3747_p2 <= "1" when (tmp_1199_fu_3744_p1 = ap_const_lv16_0) else "0";
    tmp_i_i6_fu_3862_p2 <= "1" when (tmp_1202_fu_3859_p1 = ap_const_lv16_0) else "0";
    tmp_i_i7_fu_4549_p2 <= "1" when (tmp_1205_fu_4545_p1 = ap_const_lv16_0) else "0";
    tmp_i_i_fu_1431_p2 <= "1" when (unsigned(loc_V_fu_1421_p4) < unsigned(ap_const_lv8_7E)) else "0";
    tmp_i_i_i_i_cast_fu_1669_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loc_V_19_fu_1641_p4),9));
    tmp_s_fu_1294_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(sigma_V));
    val_V_fu_5368_p3 <= 
        desc_buf_val_V_q0 when (tmp_i5_fu_5363_p2(0) = '1') else 
        thresh_V_cast3_reg_6768;
    x_assign_66_fu_1538_p3 <= 
        reg_1143 when (sel_tmp67_fu_1533_p2(0) = '1') else 
        sel_tmp65_fu_1524_p1;
    x_assign_67_fu_3334_p3 <= 
        ap_const_lv32_0 when (tmp_422_reg_6244(0) = '1') else 
        f_13_fu_3330_p1;
    x_assign_68_fu_3449_p3 <= 
        ap_const_lv32_0 when (tmp_442_reg_6301(0) = '1') else 
        f_15_fu_3445_p1;
    xf_V_fu_1411_p2 <= std_logic_vector(unsigned(tmp_391_fu_1399_p2) + unsigned(tmp_392_fu_1405_p2));
    xs_sig_V_fu_1493_p2 <= (tmp_1688_i_i_fu_1487_p2 and loc_V_18_fu_1483_p1);
end behav;
