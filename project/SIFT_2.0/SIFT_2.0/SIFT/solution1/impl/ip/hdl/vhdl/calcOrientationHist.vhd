-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity calcOrientationHist is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    img_0_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    img_0_val_V_ce0 : OUT STD_LOGIC;
    img_0_val_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    img_0_val_V_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    img_0_val_V_ce1 : OUT STD_LOGIC;
    img_0_val_V_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    img_1_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    img_1_val_V_ce0 : OUT STD_LOGIC;
    img_1_val_V_q0 : IN STD_LOGIC_VECTOR (25 downto 0);
    img_1_val_V_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    img_1_val_V_ce1 : OUT STD_LOGIC;
    img_1_val_V_q1 : IN STD_LOGIC_VECTOR (25 downto 0);
    img_2_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    img_2_val_V_ce0 : OUT STD_LOGIC;
    img_2_val_V_q0 : IN STD_LOGIC_VECTOR (25 downto 0);
    img_2_val_V_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    img_2_val_V_ce1 : OUT STD_LOGIC;
    img_2_val_V_q1 : IN STD_LOGIC_VECTOR (25 downto 0);
    img_3_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    img_3_val_V_ce0 : OUT STD_LOGIC;
    img_3_val_V_q0 : IN STD_LOGIC_VECTOR (25 downto 0);
    img_3_val_V_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    img_3_val_V_ce1 : OUT STD_LOGIC;
    img_3_val_V_q1 : IN STD_LOGIC_VECTOR (25 downto 0);
    img_4_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    img_4_val_V_ce0 : OUT STD_LOGIC;
    img_4_val_V_q0 : IN STD_LOGIC_VECTOR (25 downto 0);
    img_4_val_V_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    img_4_val_V_ce1 : OUT STD_LOGIC;
    img_4_val_V_q1 : IN STD_LOGIC_VECTOR (25 downto 0);
    img_5_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    img_5_val_V_ce0 : OUT STD_LOGIC;
    img_5_val_V_q0 : IN STD_LOGIC_VECTOR (25 downto 0);
    img_5_val_V_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    img_5_val_V_ce1 : OUT STD_LOGIC;
    img_5_val_V_q1 : IN STD_LOGIC_VECTOR (25 downto 0);
    img_val_V_offset : IN STD_LOGIC_VECTOR (31 downto 0);
    img_rows_read : IN STD_LOGIC_VECTOR (31 downto 0);
    img_cols_read : IN STD_LOGIC_VECTOR (31 downto 0);
    r0 : IN STD_LOGIC_VECTOR (31 downto 0);
    c0 : IN STD_LOGIC_VECTOR (31 downto 0);
    radius : IN STD_LOGIC_VECTOR (31 downto 0);
    sigma_V : IN STD_LOGIC_VECTOR (31 downto 0);
    hist_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    hist_V_ce0 : OUT STD_LOGIC;
    hist_V_we0 : OUT STD_LOGIC;
    hist_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of calcOrientationHist is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (26 downto 0) := "000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (26 downto 0) := "000000000010000000000000000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (26 downto 0) := "000000000100000000000000000";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (26 downto 0) := "000000001000000000000000000";
    constant ap_ST_fsm_state82 : STD_LOGIC_VECTOR (26 downto 0) := "000000010000000000000000000";
    constant ap_ST_fsm_state83 : STD_LOGIC_VECTOR (26 downto 0) := "000000100000000000000000000";
    constant ap_ST_fsm_state84 : STD_LOGIC_VECTOR (26 downto 0) := "000001000000000000000000000";
    constant ap_ST_fsm_state85 : STD_LOGIC_VECTOR (26 downto 0) := "000010000000000000000000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (26 downto 0) := "000100000000000000000000000";
    constant ap_ST_fsm_pp1_stage1 : STD_LOGIC_VECTOR (26 downto 0) := "001000000000000000000000000";
    constant ap_ST_fsm_pp1_stage2 : STD_LOGIC_VECTOR (26 downto 0) := "010000000000000000000000000";
    constant ap_ST_fsm_state90 : STD_LOGIC_VECTOR (26 downto 0) := "100000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv6_2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_const_lv64_24 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000100100";
    constant ap_const_lv64_25 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000100101";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_26 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000100110";
    constant ap_const_lv64_27 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000100111";
    constant ap_const_lv32_43340000 : STD_LOGIC_VECTOR (31 downto 0) := "01000011001101000000000000000000";
    constant ap_const_lv32_42100000 : STD_LOGIC_VECTOR (31 downto 0) := "01000010000100000000000000000000";
    constant ap_const_lv32_BF800000 : STD_LOGIC_VECTOR (31 downto 0) := "10111111100000000000000000000000";
    constant ap_const_lv32_40490FDA : STD_LOGIC_VECTOR (31 downto 0) := "01000000010010010000111111011010";
    constant ap_const_lv32_43B40000 : STD_LOGIC_VECTOR (31 downto 0) := "01000011101101000000000000000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv65_0 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv64_FFFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv26_0 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000000000";
    constant ap_const_lv31_1F : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000011111";
    constant ap_const_lv7_61 : STD_LOGIC_VECTOR (6 downto 0) := "1100001";
    constant ap_const_lv7_7E : STD_LOGIC_VECTOR (6 downto 0) := "1111110";
    constant ap_const_lv8_9E : STD_LOGIC_VECTOR (7 downto 0) := "10011110";
    constant ap_const_lv8_60 : STD_LOGIC_VECTOR (7 downto 0) := "01100000";
    constant ap_const_lv8_5F : STD_LOGIC_VECTOR (7 downto 0) := "01011111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_433 : STD_LOGIC_VECTOR (11 downto 0) := "010000110011";
    constant ap_const_lv12_10 : STD_LOGIC_VECTOR (11 downto 0) := "000000010000";
    constant ap_const_lv12_FF0 : STD_LOGIC_VECTOR (11 downto 0) := "111111110000";
    constant ap_const_lv12_36 : STD_LOGIC_VECTOR (11 downto 0) := "000000110110";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv6_28 : STD_LOGIC_VECTOR (5 downto 0) := "101000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv10_3FF : STD_LOGIC_VECTOR (9 downto 0) := "1111111111";
    constant ap_const_lv18_1 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    constant ap_const_lv18_3FFFF : STD_LOGIC_VECTOR (17 downto 0) := "111111111111111111";
    constant ap_const_lv27_0 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    constant ap_const_lv6_21 : STD_LOGIC_VECTOR (5 downto 0) := "100001";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv8_8E : STD_LOGIC_VECTOR (7 downto 0) := "10001110";
    constant ap_const_lv8_AE : STD_LOGIC_VECTOR (7 downto 0) := "10101110";
    constant ap_const_lv32_1680000 : STD_LOGIC_VECTOR (31 downto 0) := "00000001011010000000000000000000";
    constant ap_const_lv8_7E : STD_LOGIC_VECTOR (7 downto 0) := "01111110";
    constant ap_const_lv8_96 : STD_LOGIC_VECTOR (7 downto 0) := "10010110";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv23_7FFFFF : STD_LOGIC_VECTOR (22 downto 0) := "11111111111111111111111";
    constant ap_const_lv9_181 : STD_LOGIC_VECTOR (8 downto 0) := "110000001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_FFFFFFDC : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111011100";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv6_26 : STD_LOGIC_VECTOR (5 downto 0) := "100110";
    constant ap_const_lv6_3E : STD_LOGIC_VECTOR (5 downto 0) := "111110";
    constant ap_const_lv6_3F : STD_LOGIC_VECTOR (5 downto 0) := "111111";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal mask_table1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal mask_table1_ce0 : STD_LOGIC;
    signal mask_table1_q0 : STD_LOGIC_VECTOR (22 downto 0);
    signal one_half_table2_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal one_half_table2_ce0 : STD_LOGIC;
    signal one_half_table2_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal j6_reg_771 : STD_LOGIC_VECTOR (31 downto 0);
    signal omax_V_write_assign_reg_780 : STD_LOGIC_VECTOR (31 downto 0);
    signal i2_reg_792 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_822_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_843 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter22 : STD_LOGIC := '0';
    signal ap_block_state18_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state20_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state24_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state26_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state28_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state30_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state32_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state34_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state36_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state38_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state40_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state42_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state44_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state46_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state48_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_state50_pp0_stage0_iter16 : BOOLEAN;
    signal ap_block_state52_pp0_stage0_iter17 : BOOLEAN;
    signal ap_block_state54_pp0_stage0_iter18 : BOOLEAN;
    signal ap_block_state56_pp0_stage0_iter19 : BOOLEAN;
    signal ap_block_state58_pp0_stage0_iter20 : BOOLEAN;
    signal ap_block_state60_pp0_stage0_iter21 : BOOLEAN;
    signal ap_block_state62_pp0_stage0_iter22 : BOOLEAN;
    signal ap_block_state64_pp0_stage0_iter23 : BOOLEAN;
    signal ap_block_state66_pp0_stage0_iter24 : BOOLEAN;
    signal ap_block_state68_pp0_stage0_iter25 : BOOLEAN;
    signal ap_block_state70_pp0_stage0_iter26 : BOOLEAN;
    signal ap_block_state72_pp0_stage0_iter27 : BOOLEAN;
    signal ap_block_state74_pp0_stage0_iter28 : BOOLEAN;
    signal ap_block_state76_pp0_stage0_iter29 : BOOLEAN;
    signal ap_block_state78_pp0_stage0_iter30 : BOOLEAN;
    signal ap_block_state80_pp0_stage0_iter31 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal or_cond4_reg_3713 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_reg_3713_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal temphist_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_848 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state83 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state83 : signal is "none";
    signal temphist_V_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state84 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state84 : signal is "none";
    signal reg_854 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_882_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_reg_3516 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_fu_886_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_3522 : STD_LOGIC_VECTOR (0 downto 0);
    signal is_neg_reg_3527 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_158_fu_905_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_158_reg_3533 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal msb_idx_fu_991_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal msb_idx_reg_3539 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1239_fu_997_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_1239_reg_3544 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_1240_reg_3549 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp32_V_50_fu_1115_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_50_reg_3554 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp32_V_71_fu_1123_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_71_reg_3559 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal p_Result_44_reg_3564 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_03_i8_fu_1181_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_03_i8_reg_3569 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal isneg_reg_3574 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal exp_tmp_V_reg_3580 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_1256_fu_1214_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_1256_reg_3585 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_498_fu_1218_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_498_reg_3590 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal expf_scale_V_fu_1452_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal expf_scale_V_reg_3628 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_12_fu_1466_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal i_15_fu_1477_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_15_reg_3641 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond2_fu_1460_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_507_fu_1482_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_507_reg_3647 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_508_fu_1487_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_508_reg_3652 : STD_LOGIC_VECTOR (31 downto 0);
    signal OP2_V_fu_1492_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal OP2_V_reg_3657 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1260_fu_1495_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_1260_reg_3662 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_510_fu_1498_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal or_cond_213_fu_1519_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_264_cast_fu_1529_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_264_cast_reg_3678 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_266_cast_fu_1547_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_266_cast_reg_3684 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_268_cast_fu_1565_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_268_cast_reg_3689 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_513_fu_1573_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_513_reg_3694 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_529_fu_1579_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_529_reg_3709 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_fu_1600_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_reg_3713_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_reg_3713_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_reg_3713_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_reg_3713_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_reg_3713_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_reg_3713_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_reg_3713_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_reg_3713_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_reg_3713_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_reg_3713_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_reg_3713_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_reg_3713_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_reg_3713_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_reg_3713_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_reg_3713_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_reg_3713_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_reg_3713_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_reg_3713_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_reg_3713_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_reg_3713_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_reg_3713_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_reg_3713_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_reg_3713_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_reg_3713_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_reg_3713_pp0_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_reg_3713_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_reg_3713_pp0_iter28_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_reg_3713_pp0_iter29_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_reg_3713_pp0_iter30_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_reg_3713_pp0_iter31_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1270_fu_1656_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_1270_reg_3777 : STD_LOGIC_VECTOR (17 downto 0);
    signal i_op_assign_fu_1666_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_op_assign_reg_3783 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_6_fu_1671_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_6_reg_3788 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal p_Val2_113_fu_1751_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_113_reg_3793 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state19_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state21_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state23_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state25_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_state27_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_state29_pp0_stage1_iter5 : BOOLEAN;
    signal ap_block_state31_pp0_stage1_iter6 : BOOLEAN;
    signal ap_block_state33_pp0_stage1_iter7 : BOOLEAN;
    signal ap_block_state35_pp0_stage1_iter8 : BOOLEAN;
    signal ap_block_state37_pp0_stage1_iter9 : BOOLEAN;
    signal ap_block_state39_pp0_stage1_iter10 : BOOLEAN;
    signal ap_block_state41_pp0_stage1_iter11 : BOOLEAN;
    signal ap_block_state43_pp0_stage1_iter12 : BOOLEAN;
    signal ap_block_state45_pp0_stage1_iter13 : BOOLEAN;
    signal ap_block_state47_pp0_stage1_iter14 : BOOLEAN;
    signal ap_block_state49_pp0_stage1_iter15 : BOOLEAN;
    signal ap_block_state51_pp0_stage1_iter16 : BOOLEAN;
    signal ap_block_state53_pp0_stage1_iter17 : BOOLEAN;
    signal ap_block_state55_pp0_stage1_iter18 : BOOLEAN;
    signal ap_block_state57_pp0_stage1_iter19 : BOOLEAN;
    signal ap_block_state59_pp0_stage1_iter20 : BOOLEAN;
    signal ap_block_state61_pp0_stage1_iter21 : BOOLEAN;
    signal ap_block_state63_pp0_stage1_iter22 : BOOLEAN;
    signal ap_block_state65_pp0_stage1_iter23 : BOOLEAN;
    signal ap_block_state67_pp0_stage1_iter24 : BOOLEAN;
    signal ap_block_state69_pp0_stage1_iter25 : BOOLEAN;
    signal ap_block_state71_pp0_stage1_iter26 : BOOLEAN;
    signal ap_block_state73_pp0_stage1_iter27 : BOOLEAN;
    signal ap_block_state75_pp0_stage1_iter28 : BOOLEAN;
    signal ap_block_state77_pp0_stage1_iter29 : BOOLEAN;
    signal ap_block_state79_pp0_stage1_iter30 : BOOLEAN;
    signal ap_block_state81_pp0_stage1_iter31 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal tmp_539_fu_1785_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_539_reg_3860 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_539_reg_3860_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal is_neg_8_reg_3865 : STD_LOGIC_VECTOR (0 downto 0);
    signal is_neg_8_reg_3865_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1283_fu_1807_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_1283_reg_3871 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_558_fu_1811_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_558_reg_3877 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_558_reg_3877_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal is_neg_9_reg_3882 : STD_LOGIC_VECTOR (0 downto 0);
    signal is_neg_9_reg_3882_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_101_fu_1899_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_101_reg_3888 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_710_cast_fu_1908_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_710_cast_reg_3895 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_533_fu_1914_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_533_reg_3900 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_533_reg_3900_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal is_neg_7_reg_3905 : STD_LOGIC_VECTOR (0 downto 0);
    signal is_neg_7_reg_3905_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp32_V_58_fu_1957_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_58_reg_3911 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1274_fu_1963_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1274_reg_3916 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1274_reg_3916_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1286_fu_2004_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1286_reg_3921 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1286_reg_3921_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp32_V_64_fu_2070_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_64_reg_3926 : STD_LOGIC_VECTOR (31 downto 0);
    signal this_assign_reg_3931 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_54_fu_2131_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_54_reg_3936 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1272_fu_2137_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1272_reg_3941 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1272_reg_3941_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp32_V_73_fu_2141_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_73_reg_3946 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_51_reg_3951 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp32_V_74_fu_2155_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_74_reg_3956 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_55_reg_3961 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp32_V_72_fu_2169_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_72_reg_3966 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_48_reg_3971 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_assign_fu_2225_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_reg_3976 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_s_fu_2274_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_s_reg_3981 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_838_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal v_assign_6_reg_3986 : STD_LOGIC_VECTOR (31 downto 0);
    signal isneg_6_reg_3991 : STD_LOGIC_VECTOR (0 downto 0);
    signal exp_tmp_V_6_reg_3997 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_1296_fu_2357_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_1296_reg_4002 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_567_fu_2361_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_567_reg_4007 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_sqrt_fixed_32_16_s_fu_810_ap_return : STD_LOGIC_VECTOR (23 downto 0);
    signal agg_result_V_i_reg_4013 : STD_LOGIC_VECTOR (23 downto 0);
    signal W_V_fu_2595_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal W_V_reg_4018 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_s_215_fu_2609_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_s_215_reg_4023 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_s_215_reg_4023_pp0_iter8_reg : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_s_215_reg_4023_pp0_iter9_reg : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_s_215_reg_4023_pp0_iter10_reg : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_s_215_reg_4023_pp0_iter11_reg : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_s_215_reg_4023_pp0_iter12_reg : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_s_215_reg_4023_pp0_iter13_reg : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_s_215_reg_4023_pp0_iter14_reg : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_s_215_reg_4023_pp0_iter15_reg : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_s_215_reg_4023_pp0_iter16_reg : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_s_215_reg_4023_pp0_iter17_reg : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_s_215_reg_4023_pp0_iter18_reg : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_s_215_reg_4023_pp0_iter19_reg : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_s_215_reg_4023_pp0_iter20_reg : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_s_215_reg_4023_pp0_iter21_reg : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_s_215_reg_4023_pp0_iter22_reg : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_s_215_reg_4023_pp0_iter23_reg : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_s_215_reg_4023_pp0_iter24_reg : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_s_215_reg_4023_pp0_iter25_reg : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_s_215_reg_4023_pp0_iter26_reg : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_s_215_reg_4023_pp0_iter27_reg : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_s_215_reg_4023_pp0_iter28_reg : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_s_215_reg_4023_pp0_iter29_reg : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_s_215_reg_4023_pp0_iter30_reg : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_s_215_reg_4023_pp0_iter31_reg : STD_LOGIC_VECTOR (47 downto 0);
    signal grp_atan2_cordic_float_s_fu_804_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_815_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_545_reg_4033 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter18 : STD_LOGIC := '0';
    signal isneg_5_reg_4038 : STD_LOGIC_VECTOR (0 downto 0);
    signal exp_tmp_V_5_reg_4044 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_1277_fu_2641_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_1277_reg_4049 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_548_fu_2645_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_548_reg_4054 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_187_fu_2861_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_187_reg_4060 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1281_reg_4066 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_576_fu_2892_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_576_reg_4071 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_576_reg_4071_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_576_reg_4071_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal is_neg_10_fu_2898_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal is_neg_10_reg_4076 : STD_LOGIC_VECTOR (0 downto 0);
    signal is_neg_10_reg_4076_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp32_V_68_fu_2942_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_68_reg_4081 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1301_fu_2948_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1301_reg_4086 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1301_reg_4086_pp0_iter24_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp32_V_75_fu_2952_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_75_reg_4091 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_59_reg_4096 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_199_fu_2993_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_199_reg_4101 : STD_LOGIC_VECTOR (31 downto 0);
    signal f_24_fu_3004_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_03_i_fu_3008_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_03_i_reg_4111 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_70_reg_4116 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter29 : STD_LOGIC := '0';
    signal t_V_29_fu_3015_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_V_29_reg_4122 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i_i9_fu_3028_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i9_reg_4128 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1685_i_i_fu_3034_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1685_i_i_reg_4134 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_202_reg_4149 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_125_fu_3264_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_125_reg_4154 : STD_LOGIC_VECTOR (31 downto 0);
    signal temphist_V_addr_14_reg_4160 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_14_fu_3338_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state82 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state82 : signal is "none";
    signal exitcond_fu_3344_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_4181 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_block_state86_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state89_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal tmp_516_fu_3356_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_516_reg_4185 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_V_10_fu_3380_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal r_V_10_reg_4200 : STD_LOGIC_VECTOR (32 downto 0);
    signal ap_CS_fsm_pp1_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage1 : signal is "none";
    signal ap_block_state87_pp1_stage1_iter0 : BOOLEAN;
    signal ap_block_pp1_stage1_11001 : BOOLEAN;
    signal i_13_fu_3397_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_13_reg_4205 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal r_V_11_fu_3416_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal r_V_11_reg_4220 : STD_LOGIC_VECTOR (32 downto 0);
    signal ap_CS_fsm_pp1_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage2 : signal is "none";
    signal ap_block_state88_pp1_stage2_iter0 : BOOLEAN;
    signal ap_block_pp1_stage2_11001 : BOOLEAN;
    signal tmp_1049_omax_V_load_fu_3508_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state18 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter19 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter20 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter21 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter23 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter24 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter25 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter26 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter27 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter28 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter30 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter31 : STD_LOGIC := '0';
    signal ap_CS_fsm_state85 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state85 : signal is "none";
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state86 : STD_LOGIC;
    signal ap_block_pp1_stage2_subdone : BOOLEAN;
    signal temphist_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal temphist_V_ce0 : STD_LOGIC;
    signal temphist_V_we0 : STD_LOGIC;
    signal temphist_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal temphist_V_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal temphist_V_ce1 : STD_LOGIC;
    signal temphist_V_we1 : STD_LOGIC;
    signal grp_atan2_cordic_float_s_fu_804_ap_start : STD_LOGIC;
    signal grp_atan2_cordic_float_s_fu_804_ap_done : STD_LOGIC;
    signal grp_atan2_cordic_float_s_fu_804_ap_idle : STD_LOGIC;
    signal grp_atan2_cordic_float_s_fu_804_ap_ready : STD_LOGIC;
    signal grp_atan2_cordic_float_s_fu_804_y_in : STD_LOGIC_VECTOR (31 downto 0);
    signal i_reg_750 : STD_LOGIC_VECTOR (5 downto 0);
    signal i1_reg_761 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_j6_phi_fu_774_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal ap_phi_mux_i2_phi_fu_796_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_atan2_cordic_float_s_fu_804_ap_start_reg : STD_LOGIC := '0';
    signal tmp_509_fu_1472_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_269_cast_fu_1621_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_270_cast_fu_1646_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_271_cast_fu_1761_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal tmp_272_cast_fu_1775_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1686_i_i_fu_3050_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_584_fu_3309_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_518_fu_3367_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_522_fu_3392_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp1_stage1 : BOOLEAN;
    signal tmp_523_fu_3403_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_526_fu_3422_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp1_stage2 : BOOLEAN;
    signal tmp_527_fu_3491_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_815_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_815_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_822_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_822_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal grp_fu_829_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_fu_832_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_835_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_fu_860_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_fu_860_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal OP2_V_23_cast_fu_872_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_s_fu_876_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_s_fu_876_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal p_Val2_s_fu_876_p2 : STD_LOGIC_VECTOR (64 downto 0);
    signal tmp_649_cast_fu_900_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_386_fu_911_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_42_fu_921_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_490_fu_925_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_s_fu_943_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_187_fu_953_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_492_fu_965_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1237_fu_933_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1238_fu_973_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_491_fu_937_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal NZeros_fu_977_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal num_zeros_fu_983_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal msb_idx_6_fu_1012_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_1241_fu_1018_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_493_fu_1037_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp32_V_fu_1034_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_654_cast_fu_1043_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1243_fu_1053_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_165_cast_fu_1009_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal tmp_1244_fu_1057_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1246_fu_1069_p4 : STD_LOGIC_VECTOR (95 downto 0);
    signal tmp_1247_fu_1079_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_1245_fu_1063_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_1249_fu_1093_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_1248_fu_1085_p3 : STD_LOGIC_VECTOR (95 downto 0);
    signal tmp_1250_fu_1101_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal tmp_1251_fu_1105_p2 : STD_LOGIC_VECTOR (95 downto 0);
    signal icmp_fu_1028_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp32_V_48_fu_1047_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_49_fu_1111_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_829_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_494_fu_1137_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1253_fu_1142_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp83_cast_cast_fu_1145_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Repl2_64_trunc_fu_1153_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_495_fu_1159_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_188_fu_1166_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal f_fu_1177_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_835_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ireg_V_fu_1188_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1254_fu_1192_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_497_fu_1227_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal p_Result_189_fu_1234_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_21_fu_1238_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_496_fu_1224_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_fu_1251_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_499_fu_1257_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_500_fu_1263_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_501_fu_1269_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_fu_1275_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal man_V_22_fu_1244_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_1258_fu_1303_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal sh_amt_cast_fu_1283_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_504_fu_1319_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_505_fu_1323_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_1257_fu_1293_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_502_fu_1287_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp60_fu_1346_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp65_demorgan_fu_1357_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp65_fu_1362_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_503_fu_1297_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp66_fu_1368_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp67_fu_1374_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp80_demorgan_fu_1392_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp11_fu_1313_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp80_fu_1398_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp81_fu_1404_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_506_fu_1340_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1259_fu_1329_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp74_fu_1386_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp68_fu_1380_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_078_s_fu_1333_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp61_fu_1351_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_fu_1418_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel_fu_1410_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel20_fu_1424_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_cond7_fu_1432_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond8_fu_1446_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel21_fu_1438_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_fu_1503_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_511_fu_1508_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_512_fu_1514_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1261_fu_1525_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_1262_fu_1537_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_1263_fu_1541_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_1264_fu_1555_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_1265_fu_1559_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal c_fu_1584_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_531_fu_1589_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_532_fu_1595_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1266_fu_1606_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_1267_fu_1610_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_269_fu_1616_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_1268_fu_1631_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_1269_fu_1635_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_270_fu_1641_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_557_fu_1660_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_111_fu_1697_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_111_fu_1697_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_111_fu_1697_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_111_fu_1697_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_111_fu_1697_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_112_fu_1734_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_112_fu_1734_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_112_fu_1734_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_112_fu_1734_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_112_fu_1734_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_111_fu_1697_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_112_fu_1734_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_271_fu_1757_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_272_fu_1771_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_104_fu_1802_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_104_fu_1802_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_104_fu_1802_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_114_fu_1845_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_114_fu_1845_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_114_fu_1845_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_114_fu_1845_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_114_fu_1845_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_115_fu_1882_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_115_fu_1882_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_115_fu_1882_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_115_fu_1882_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_115_fu_1882_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_114_fu_1845_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_115_fu_1882_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_710_cast_fu_1908_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_1905_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_710_cast_fu_1908_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_540_fu_1928_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_186_fu_1933_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_192_fu_1939_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal num_zeros_8_fu_1949_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_740_cast_fu_1967_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal p_Val2_170_fu_1972_p3 : STD_LOGIC_VECTOR (62 downto 0);
    signal p_Val2_190_cast_fu_1978_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_195_fu_1982_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_559_fu_1992_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal num_zeros_9_fu_2000_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal msb_idx_7_fu_2008_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1287_fu_2014_p4 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp32_V_61_fu_2030_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_560_fu_2034_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1289_fu_2046_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1290_fu_2050_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1291_fu_2056_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1292_fu_2060_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp19_fu_2024_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp32_V_62_fu_2040_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_63_fu_2066_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_711_cast_fu_2081_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_2078_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_711_cast_fu_2081_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_711_cast_fu_2081_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_102_fu_2087_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_534_fu_2102_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_185_fu_2107_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_190_fu_2113_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal num_zeros_7_fu_2123_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_832_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_541_fu_2183_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_542_fu_2188_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_543_fu_2193_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Repl2_70_trunc_fu_2197_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_544_fu_2203_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_193_fu_2210_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal f_20_fu_2221_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_561_fu_2232_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_562_fu_2237_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_563_fu_2242_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Repl2_73_trunc_fu_2246_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_564_fu_2252_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_196_fu_2259_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal f_22_fu_2270_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_535_fu_2281_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_536_fu_2286_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_537_fu_2291_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Repl2_67_trunc_fu_2295_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_538_fu_2301_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_191_fu_2308_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal f_18_fu_2319_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ireg_V_6_fu_2331_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1294_fu_2335_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_566_fu_2370_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal p_Result_197_fu_2377_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_27_fu_2381_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_565_fu_2367_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_6_fu_2394_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_568_fu_2400_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_569_fu_2406_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_570_fu_2412_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_6_fu_2418_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal man_V_28_fu_2387_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_1298_fu_2446_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal sh_amt_6_cast_fu_2426_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_573_fu_2462_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_574_fu_2466_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_1297_fu_2436_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_571_fu_2430_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp28_fu_2489_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp33_demorgan_fu_2500_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp33_fu_2505_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_572_fu_2440_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp34_fu_2511_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp35_fu_2517_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp48_demorgan_fu_2535_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp22_fu_2456_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp48_fu_2541_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp49_fu_2547_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_575_fu_2483_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1299_fu_2472_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp42_fu_2529_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp36_fu_2523_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal storemerge_fu_2476_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp29_fu_2494_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond9_fu_2561_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel22_fu_2553_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel23_fu_2567_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_cond1_fu_2575_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_fu_2589_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel24_fu_2581_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_s_215_fu_2609_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_s_215_fu_2609_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal ireg_V_5_fu_2615_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1275_fu_2619_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_547_fu_2654_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal p_Result_194_fu_2661_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_24_fu_2665_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_546_fu_2651_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_5_fu_2678_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_549_fu_2684_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_550_fu_2690_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_551_fu_2696_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_5_fu_2702_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal man_V_25_fu_2671_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_1279_fu_2730_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal sh_amt_5_cast_fu_2710_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_554_fu_2746_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_555_fu_2750_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_1278_fu_2720_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_552_fu_2714_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_fu_2773_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_fu_2778_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_demorgan_fu_2792_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_fu_2797_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_553_fu_2724_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_fu_2803_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp9_fu_2809_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp10_fu_2815_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal storemerge9_fu_2760_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp4_fu_2784_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp16_fu_2829_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1280_fu_2756_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp11_fu_2821_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp22_demorgan_fu_2843_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp14_fu_2740_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp22_fu_2849_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp23_fu_2855_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_556_fu_2767_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp17_fu_2835_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal Ang_V_2_fu_2877_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_118_fu_2882_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1282_fu_2888_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_738_cast_fu_2906_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Val2_188_fu_2912_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Val2_302_cast_fu_2920_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_198_fu_2924_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal num_zeros_10_fu_2934_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_577_fu_2966_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_578_fu_2971_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_579_fu_2976_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Repl2_76_trunc_fu_2980_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_580_fu_2986_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal loc_V_fu_3018_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal index_V_fu_3040_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_Result_s_214_fu_3056_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal one_half_i_i_cast_fu_3071_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_121_fu_3075_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal loc_V_21_fu_3080_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_1688_i_i_fu_3084_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_392_fu_3096_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal xs_sig_V_fu_3090_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Result_200_fu_3063_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_201_fu_3106_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp52_v_fu_3114_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp53_fu_3125_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp54_fu_3130_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp52_fu_3121_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_71_fu_3135_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_181_fu_3142_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal loc_V_23_fu_3164_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_1701_i_i_i_fu_3168_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal loc_V_22_fu_3154_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_i_i_i_i_cast_fu_3182_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_assign_fu_3186_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_1702_i_i_i_fu_3200_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal isNeg_fu_3192_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1702_i_i_i_cast_fu_3206_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_assign_7_fu_3210_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_assign_6_i_i_i_ca_fu_3218_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sh_assign_6_i_i_i_ca_6_fu_3222_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_1701_i_i_i_cast3_fu_3178_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_1703_i_i_i_fu_3226_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_1704_i_i_i_fu_3230_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_1307_fu_3242_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1705_i_i_i_fu_3236_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_274_fu_3250_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_275_fu_3254_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_i_i_i_fu_3272_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_189_fu_3277_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_581_fu_3283_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_582_fu_3289_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal bin_1_fu_3295_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_583_fu_3303_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_585_fu_3314_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_106_fu_3322_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_515_fu_3350_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_517_fu_3361_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_519_fu_3372_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_520_fu_3376_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_521_fu_3386_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_524_fu_3408_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_525_fu_3412_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal p_Val2_108_fu_3427_p3 : STD_LOGIC_VECTOR (44 downto 0);
    signal p_Val2_98_fu_3438_p3 : STD_LOGIC_VECTOR (46 downto 0);
    signal p_shl_fu_3449_p3 : STD_LOGIC_VECTOR (46 downto 0);
    signal p_shl1_fu_3461_p3 : STD_LOGIC_VECTOR (44 downto 0);
    signal p_shl_cast_fu_3457_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_shl1_cast_fu_3469_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_172_cast_fu_3434_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_106_cast_fu_3445_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_109_fu_3473_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp84_fu_3479_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_110_fu_3485_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_528_fu_3502_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state90 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state90 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (26 downto 0);
    signal ap_block_pp1_stage1_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal p_Val2_s_215_fu_2609_p10 : STD_LOGIC_VECTOR (47 downto 0);

    component atan2_cordic_float_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        y_in : IN STD_LOGIC_VECTOR (31 downto 0);
        x_in : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component sqrt_fixed_32_16_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        x_V : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component SIFT2_Core_fmul_3dEe IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component SIFT2_Core_fdiv_3g8j IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component SIFT2_Core_uitofpXh4 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component SIFT2_Core_fpext_hbi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component SIFT2_Core_fexp_3jbC IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component SIFT2_Core_mux_63VhK_x IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component calcOrientationHi6jw IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (22 downto 0) );
    end component;


    component calcOrientationHi7jG IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component calcOrientationHi8jQ IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    mask_table1_U : component calcOrientationHi6jw
    generic map (
        DataWidth => 23,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => mask_table1_address0,
        ce0 => mask_table1_ce0,
        q0 => mask_table1_q0);

    one_half_table2_U : component calcOrientationHi7jG
    generic map (
        DataWidth => 24,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => one_half_table2_address0,
        ce0 => one_half_table2_ce0,
        q0 => one_half_table2_q0);

    temphist_V_U : component calcOrientationHi8jQ
    generic map (
        DataWidth => 32,
        AddressRange => 40,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => temphist_V_address0,
        ce0 => temphist_V_ce0,
        we0 => temphist_V_we0,
        d0 => temphist_V_d0,
        q0 => temphist_V_q0,
        address1 => temphist_V_address1,
        ce1 => temphist_V_ce1,
        we1 => temphist_V_we1,
        d1 => reg_848,
        q1 => temphist_V_q1);

    grp_atan2_cordic_float_s_fu_804 : component atan2_cordic_float_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_atan2_cordic_float_s_fu_804_ap_start,
        ap_done => grp_atan2_cordic_float_s_fu_804_ap_done,
        ap_idle => grp_atan2_cordic_float_s_fu_804_ap_idle,
        ap_ready => grp_atan2_cordic_float_s_fu_804_ap_ready,
        y_in => grp_atan2_cordic_float_s_fu_804_y_in,
        x_in => x_assign_reg_3976,
        ap_return => grp_atan2_cordic_float_s_fu_804_ap_return);

    grp_sqrt_fixed_32_16_s_fu_810 : component sqrt_fixed_32_16_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        x_V => this_assign_reg_3931,
        ap_return => grp_sqrt_fixed_32_16_s_fu_810_ap_return);

    SIFT2_Core_fmul_3dEe_U917 : component SIFT2_Core_fmul_3dEe
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_815_p0,
        din1 => grp_fu_815_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_815_p2);

    SIFT2_Core_fdiv_3g8j_U918 : component SIFT2_Core_fdiv_3g8j
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_822_p0,
        din1 => grp_fu_822_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_822_p2);

    SIFT2_Core_uitofpXh4_U919 : component SIFT2_Core_uitofpXh4
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_829_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_829_p1);

    SIFT2_Core_uitofpXh4_U920 : component SIFT2_Core_uitofpXh4
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_832_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_832_p1);

    SIFT2_Core_fpext_hbi_U921 : component SIFT2_Core_fpext_hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => grp_fu_835_p0,
        dout => grp_fu_835_p1);

    SIFT2_Core_fexp_3jbC_U922 : component SIFT2_Core_fexp_3jbC
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_const_lv32_0,
        din1 => x_assign_s_reg_3981,
        ce => ap_const_logic_1,
        dout => grp_fu_838_p2);

    SIFT2_Core_mux_63VhK_x_U923 : component SIFT2_Core_mux_63VhK_x
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => img_0_val_V_q0,
        din1 => p_Val2_111_fu_1697_p2,
        din2 => p_Val2_111_fu_1697_p3,
        din3 => p_Val2_111_fu_1697_p4,
        din4 => p_Val2_111_fu_1697_p5,
        din5 => p_Val2_111_fu_1697_p6,
        din6 => tmp_1260_reg_3662,
        dout => p_Val2_111_fu_1697_p8);

    SIFT2_Core_mux_63VhK_x_U924 : component SIFT2_Core_mux_63VhK_x
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => img_0_val_V_q1,
        din1 => p_Val2_112_fu_1734_p2,
        din2 => p_Val2_112_fu_1734_p3,
        din3 => p_Val2_112_fu_1734_p4,
        din4 => p_Val2_112_fu_1734_p5,
        din5 => p_Val2_112_fu_1734_p6,
        din6 => tmp_1260_reg_3662,
        dout => p_Val2_112_fu_1734_p8);

    SIFT2_Core_mux_63VhK_x_U925 : component SIFT2_Core_mux_63VhK_x
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => img_0_val_V_q0,
        din1 => p_Val2_114_fu_1845_p2,
        din2 => p_Val2_114_fu_1845_p3,
        din3 => p_Val2_114_fu_1845_p4,
        din4 => p_Val2_114_fu_1845_p5,
        din5 => p_Val2_114_fu_1845_p6,
        din6 => tmp_1260_reg_3662,
        dout => p_Val2_114_fu_1845_p8);

    SIFT2_Core_mux_63VhK_x_U926 : component SIFT2_Core_mux_63VhK_x
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => img_0_val_V_q1,
        din1 => p_Val2_115_fu_1882_p2,
        din2 => p_Val2_115_fu_1882_p3,
        din3 => p_Val2_115_fu_1882_p4,
        din4 => p_Val2_115_fu_1882_p5,
        din5 => p_Val2_115_fu_1882_p6,
        din6 => tmp_1260_reg_3662,
        dout => p_Val2_115_fu_1882_p8);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state18) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((tmp_510_fu_1498_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state17) and (or_cond_213_fu_1519_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state18)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state18);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter19 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter20 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter21 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter22 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter23 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter24_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter24 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter25_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter25 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter26_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter26 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter27_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter27 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter28_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter28 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter29_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter29 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter30_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter30 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter31_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter31 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
                elsif (((tmp_510_fu_1498_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state17) and (or_cond_213_fu_1519_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp0_iter31 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state86) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state86) and (((ap_const_boolean_0 = ap_block_pp1_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))))) then 
                    ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state86);
                elsif ((((ap_const_boolean_0 = ap_block_pp1_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_atan2_cordic_float_s_fu_804_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_atan2_cordic_float_s_fu_804_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (or_cond4_reg_3713_pp0_iter2_reg = ap_const_lv1_1))) then 
                    grp_atan2_cordic_float_s_fu_804_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_atan2_cordic_float_s_fu_804_ap_ready = ap_const_logic_1)) then 
                    grp_atan2_cordic_float_s_fu_804_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i1_reg_761_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
                i1_reg_761 <= i_14_fu_3338_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state16) and (exitcond2_fu_1460_p2 = ap_const_lv1_1))) then 
                i1_reg_761 <= i_15_fu_1477_p2;
            end if; 
        end if;
    end process;

    i2_reg_792_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (exitcond_reg_4181 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                i2_reg_792 <= i_13_reg_4205;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
                i2_reg_792 <= ap_const_lv6_2;
            end if; 
        end if;
    end process;

    i_reg_750_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                i_reg_750 <= ap_const_lv6_0;
            elsif (((exitcond2_fu_1460_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                i_reg_750 <= i_12_fu_1466_p2;
            end if; 
        end if;
    end process;

    j6_reg_771_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_529_reg_3709 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                j6_reg_771 <= j_6_reg_3788;
            elsif (((tmp_510_fu_1498_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state17) and (or_cond_213_fu_1519_p2 = ap_const_lv1_1))) then 
                j6_reg_771 <= i_15_reg_3641;
            end if; 
        end if;
    end process;

    omax_V_write_assign_reg_780_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (exitcond_reg_4181 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                omax_V_write_assign_reg_780 <= tmp_1049_omax_V_load_fu_3508_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
                omax_V_write_assign_reg_780 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    reg_848_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
                reg_848 <= temphist_V_q1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state83)) then 
                reg_848 <= temphist_V_q0;
            end if; 
        end if;
    end process;

    reg_854_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
                reg_854 <= temphist_V_q0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state83)) then 
                reg_854 <= temphist_V_q1;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state16) and (exitcond2_fu_1460_p2 = ap_const_lv1_1))) then
                OP2_V_reg_3657 <= OP2_V_fu_1492_p1;
                i_15_reg_3641 <= i_15_fu_1477_p2;
                tmp_1260_reg_3662 <= tmp_1260_fu_1495_p1;
                tmp_507_reg_3647 <= tmp_507_fu_1482_p2;
                tmp_508_reg_3652 <= tmp_508_fu_1487_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (or_cond4_reg_3713_pp0_iter6_reg = ap_const_lv1_1))) then
                W_V_reg_4018 <= W_V_fu_2595_p3;
                agg_result_V_i_reg_4013 <= grp_sqrt_fixed_32_16_s_fu_810_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                exitcond_reg_4181 <= exitcond_fu_3344_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (or_cond4_reg_3713_pp0_iter22_reg = ap_const_lv1_1))) then
                exp_tmp_V_5_reg_4044 <= ireg_V_5_fu_2615_p1(62 downto 52);
                isneg_5_reg_4038 <= ireg_V_5_fu_2615_p1(63 downto 63);
                tmp_1277_reg_4049 <= tmp_1277_fu_2641_p1;
                tmp_548_reg_4054 <= tmp_548_fu_2645_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (or_cond4_reg_3713_pp0_iter5_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                exp_tmp_V_6_reg_3997 <= ireg_V_6_fu_2331_p1(62 downto 52);
                isneg_6_reg_3991 <= ireg_V_6_fu_2331_p1(63 downto 63);
                tmp_1296_reg_4002 <= tmp_1296_fu_2357_p1;
                tmp_567_reg_4007 <= tmp_567_fu_2361_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                exp_tmp_V_reg_3580 <= ireg_V_fu_1188_p1(62 downto 52);
                isneg_reg_3574 <= ireg_V_fu_1188_p1(63 downto 63);
                tmp_1256_reg_3585 <= tmp_1256_fu_1214_p1;
                tmp_498_reg_3590 <= tmp_498_fu_1218_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                expf_scale_V_reg_3628 <= expf_scale_V_fu_1452_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (exitcond_reg_4181 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1))) then
                i_13_reg_4205 <= i_13_fu_3397_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_529_fu_1579_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (or_cond4_fu_1600_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                i_op_assign_reg_3783 <= i_op_assign_fu_1666_p2;
                tmp_1270_reg_3777 <= tmp_1270_fu_1656_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (or_cond4_reg_3713_pp0_iter23_reg = ap_const_lv1_1))) then
                is_neg_10_reg_4076 <= p_Val2_118_fu_2882_p3(31 downto 31);
                tmp32_V_68_reg_4081 <= tmp32_V_68_fu_2942_p2;
                tmp_1301_reg_4086 <= tmp_1301_fu_2948_p1;
                tmp_576_reg_4071 <= tmp_576_fu_2892_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                is_neg_10_reg_4076_pp0_iter24_reg <= is_neg_10_reg_4076;
                is_neg_8_reg_3865_pp0_iter1_reg <= is_neg_8_reg_3865;
                is_neg_9_reg_3882_pp0_iter1_reg <= is_neg_9_reg_3882;
                tmp_1272_reg_3941_pp0_iter2_reg <= tmp_1272_reg_3941;
                tmp_1301_reg_4086_pp0_iter24_reg <= tmp_1301_reg_4086;
                tmp_539_reg_3860_pp0_iter1_reg <= tmp_539_reg_3860;
                tmp_558_reg_3877_pp0_iter1_reg <= tmp_558_reg_3877;
                tmp_576_reg_4071_pp0_iter24_reg <= tmp_576_reg_4071;
                tmp_576_reg_4071_pp0_iter25_reg <= tmp_576_reg_4071_pp0_iter24_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (or_cond4_reg_3713 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                is_neg_7_reg_3905 <= p_Val2_101_fu_1899_p2(31 downto 31);
                p_Val2_101_reg_3888 <= p_Val2_101_fu_1899_p2;
                tmp_533_reg_3900 <= tmp_533_fu_1914_p2;
                tmp_710_cast_reg_3895 <= tmp_710_cast_fu_1908_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                is_neg_7_reg_3905_pp0_iter2_reg <= is_neg_7_reg_3905;
                or_cond4_reg_3713_pp0_iter10_reg <= or_cond4_reg_3713_pp0_iter9_reg;
                or_cond4_reg_3713_pp0_iter11_reg <= or_cond4_reg_3713_pp0_iter10_reg;
                or_cond4_reg_3713_pp0_iter12_reg <= or_cond4_reg_3713_pp0_iter11_reg;
                or_cond4_reg_3713_pp0_iter13_reg <= or_cond4_reg_3713_pp0_iter12_reg;
                or_cond4_reg_3713_pp0_iter14_reg <= or_cond4_reg_3713_pp0_iter13_reg;
                or_cond4_reg_3713_pp0_iter15_reg <= or_cond4_reg_3713_pp0_iter14_reg;
                or_cond4_reg_3713_pp0_iter16_reg <= or_cond4_reg_3713_pp0_iter15_reg;
                or_cond4_reg_3713_pp0_iter17_reg <= or_cond4_reg_3713_pp0_iter16_reg;
                or_cond4_reg_3713_pp0_iter18_reg <= or_cond4_reg_3713_pp0_iter17_reg;
                or_cond4_reg_3713_pp0_iter19_reg <= or_cond4_reg_3713_pp0_iter18_reg;
                or_cond4_reg_3713_pp0_iter1_reg <= or_cond4_reg_3713;
                or_cond4_reg_3713_pp0_iter20_reg <= or_cond4_reg_3713_pp0_iter19_reg;
                or_cond4_reg_3713_pp0_iter21_reg <= or_cond4_reg_3713_pp0_iter20_reg;
                or_cond4_reg_3713_pp0_iter22_reg <= or_cond4_reg_3713_pp0_iter21_reg;
                or_cond4_reg_3713_pp0_iter23_reg <= or_cond4_reg_3713_pp0_iter22_reg;
                or_cond4_reg_3713_pp0_iter24_reg <= or_cond4_reg_3713_pp0_iter23_reg;
                or_cond4_reg_3713_pp0_iter25_reg <= or_cond4_reg_3713_pp0_iter24_reg;
                or_cond4_reg_3713_pp0_iter26_reg <= or_cond4_reg_3713_pp0_iter25_reg;
                or_cond4_reg_3713_pp0_iter27_reg <= or_cond4_reg_3713_pp0_iter26_reg;
                or_cond4_reg_3713_pp0_iter28_reg <= or_cond4_reg_3713_pp0_iter27_reg;
                or_cond4_reg_3713_pp0_iter29_reg <= or_cond4_reg_3713_pp0_iter28_reg;
                or_cond4_reg_3713_pp0_iter2_reg <= or_cond4_reg_3713_pp0_iter1_reg;
                or_cond4_reg_3713_pp0_iter30_reg <= or_cond4_reg_3713_pp0_iter29_reg;
                or_cond4_reg_3713_pp0_iter31_reg <= or_cond4_reg_3713_pp0_iter30_reg;
                or_cond4_reg_3713_pp0_iter3_reg <= or_cond4_reg_3713_pp0_iter2_reg;
                or_cond4_reg_3713_pp0_iter4_reg <= or_cond4_reg_3713_pp0_iter3_reg;
                or_cond4_reg_3713_pp0_iter5_reg <= or_cond4_reg_3713_pp0_iter4_reg;
                or_cond4_reg_3713_pp0_iter6_reg <= or_cond4_reg_3713_pp0_iter5_reg;
                or_cond4_reg_3713_pp0_iter7_reg <= or_cond4_reg_3713_pp0_iter6_reg;
                or_cond4_reg_3713_pp0_iter8_reg <= or_cond4_reg_3713_pp0_iter7_reg;
                or_cond4_reg_3713_pp0_iter9_reg <= or_cond4_reg_3713_pp0_iter8_reg;
                p_Val2_s_215_reg_4023_pp0_iter10_reg <= p_Val2_s_215_reg_4023_pp0_iter9_reg;
                p_Val2_s_215_reg_4023_pp0_iter11_reg <= p_Val2_s_215_reg_4023_pp0_iter10_reg;
                p_Val2_s_215_reg_4023_pp0_iter12_reg <= p_Val2_s_215_reg_4023_pp0_iter11_reg;
                p_Val2_s_215_reg_4023_pp0_iter13_reg <= p_Val2_s_215_reg_4023_pp0_iter12_reg;
                p_Val2_s_215_reg_4023_pp0_iter14_reg <= p_Val2_s_215_reg_4023_pp0_iter13_reg;
                p_Val2_s_215_reg_4023_pp0_iter15_reg <= p_Val2_s_215_reg_4023_pp0_iter14_reg;
                p_Val2_s_215_reg_4023_pp0_iter16_reg <= p_Val2_s_215_reg_4023_pp0_iter15_reg;
                p_Val2_s_215_reg_4023_pp0_iter17_reg <= p_Val2_s_215_reg_4023_pp0_iter16_reg;
                p_Val2_s_215_reg_4023_pp0_iter18_reg <= p_Val2_s_215_reg_4023_pp0_iter17_reg;
                p_Val2_s_215_reg_4023_pp0_iter19_reg <= p_Val2_s_215_reg_4023_pp0_iter18_reg;
                p_Val2_s_215_reg_4023_pp0_iter20_reg <= p_Val2_s_215_reg_4023_pp0_iter19_reg;
                p_Val2_s_215_reg_4023_pp0_iter21_reg <= p_Val2_s_215_reg_4023_pp0_iter20_reg;
                p_Val2_s_215_reg_4023_pp0_iter22_reg <= p_Val2_s_215_reg_4023_pp0_iter21_reg;
                p_Val2_s_215_reg_4023_pp0_iter23_reg <= p_Val2_s_215_reg_4023_pp0_iter22_reg;
                p_Val2_s_215_reg_4023_pp0_iter24_reg <= p_Val2_s_215_reg_4023_pp0_iter23_reg;
                p_Val2_s_215_reg_4023_pp0_iter25_reg <= p_Val2_s_215_reg_4023_pp0_iter24_reg;
                p_Val2_s_215_reg_4023_pp0_iter26_reg <= p_Val2_s_215_reg_4023_pp0_iter25_reg;
                p_Val2_s_215_reg_4023_pp0_iter27_reg <= p_Val2_s_215_reg_4023_pp0_iter26_reg;
                p_Val2_s_215_reg_4023_pp0_iter28_reg <= p_Val2_s_215_reg_4023_pp0_iter27_reg;
                p_Val2_s_215_reg_4023_pp0_iter29_reg <= p_Val2_s_215_reg_4023_pp0_iter28_reg;
                p_Val2_s_215_reg_4023_pp0_iter30_reg <= p_Val2_s_215_reg_4023_pp0_iter29_reg;
                p_Val2_s_215_reg_4023_pp0_iter31_reg <= p_Val2_s_215_reg_4023_pp0_iter30_reg;
                p_Val2_s_215_reg_4023_pp0_iter8_reg <= p_Val2_s_215_reg_4023;
                p_Val2_s_215_reg_4023_pp0_iter9_reg <= p_Val2_s_215_reg_4023_pp0_iter8_reg;
                tmp_1274_reg_3916_pp0_iter2_reg <= tmp_1274_reg_3916;
                tmp_1286_reg_3921_pp0_iter2_reg <= tmp_1286_reg_3921;
                tmp_529_reg_3709 <= tmp_529_fu_1579_p2;
                tmp_533_reg_3900_pp0_iter2_reg <= tmp_533_reg_3900;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (tmp_529_reg_3709 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (or_cond4_reg_3713 = ap_const_lv1_1))) then
                is_neg_8_reg_3865 <= p_Val2_113_fu_1751_p2(31 downto 31);
                is_neg_9_reg_3882 <= p_Val2_104_fu_1802_p2(63 downto 63);
                p_Val2_113_reg_3793 <= p_Val2_113_fu_1751_p2;
                tmp_1283_reg_3871 <= tmp_1283_fu_1807_p1;
                tmp_539_reg_3860 <= tmp_539_fu_1785_p2;
                tmp_558_reg_3877 <= tmp_558_fu_1811_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                is_neg_reg_3527 <= p_Val2_s_fu_876_p2(64 downto 64);
                    tmp_reg_3516(63 downto 1) <= tmp_fu_882_p1(63 downto 1);
                tmp_s_reg_3522 <= tmp_s_fu_886_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_529_fu_1579_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                j_6_reg_3788 <= j_6_fu_1671_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_s_reg_3522 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                msb_idx_reg_3539 <= msb_idx_fu_991_p2;
                    p_Val2_158_reg_3533(63 downto 1) <= p_Val2_158_fu_905_p3(63 downto 1);
                tmp_1239_reg_3544 <= tmp_1239_fu_997_p1;
                tmp_1240_reg_3549 <= msb_idx_fu_991_p2(31 downto 31);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_529_fu_1579_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                or_cond4_reg_3713 <= or_cond4_fu_1600_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                p_03_i8_reg_3569 <= p_03_i8_fu_1181_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (or_cond4_reg_3713_pp0_iter25_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_03_i_reg_4111 <= p_03_i_fu_3008_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_576_reg_4071_pp0_iter24_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (or_cond4_reg_3713_pp0_iter24_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Result_199_reg_4101 <= p_Result_199_fu_2993_p5;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (or_cond4_reg_3713_pp0_iter30_reg = ap_const_lv1_1))) then
                p_Result_202_reg_4149 <= p_Val2_181_fu_3142_p1(31 downto 31);
                p_Val2_125_reg_4154 <= p_Val2_125_fu_3264_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_s_reg_3522 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                p_Result_44_reg_3564 <= tmp32_V_71_fu_1123_p1(30 downto 23);
                tmp32_V_71_reg_3559 <= tmp32_V_71_fu_1123_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (tmp_533_reg_3900_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (or_cond4_reg_3713_pp0_iter2_reg = ap_const_lv1_1))) then
                p_Result_48_reg_3971 <= tmp32_V_72_fu_2169_p1(30 downto 23);
                tmp32_V_72_reg_3966 <= tmp32_V_72_fu_2169_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_539_reg_3860_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (or_cond4_reg_3713_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Result_51_reg_3951 <= tmp32_V_73_fu_2141_p1(30 downto 23);
                tmp32_V_73_reg_3946 <= tmp32_V_73_fu_2141_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_558_reg_3877_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (or_cond4_reg_3713_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Result_55_reg_3961 <= tmp32_V_74_fu_2155_p1(30 downto 23);
                tmp32_V_74_reg_3956 <= tmp32_V_74_fu_2155_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (tmp_576_reg_4071 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (or_cond4_reg_3713_pp0_iter24_reg = ap_const_lv1_1))) then
                p_Result_59_reg_4096 <= tmp32_V_75_fu_2952_p1(30 downto 23);
                tmp32_V_75_reg_4091 <= tmp32_V_75_fu_2952_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (or_cond4_reg_3713_pp0_iter22_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Val2_187_reg_4060 <= p_Val2_187_fu_2861_p3;
                tmp_1281_reg_4066 <= p_Val2_187_fu_2861_p3(31 downto 31);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (or_cond4_reg_3713_pp0_iter6_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Val2_s_215_reg_4023 <= p_Val2_s_215_fu_2609_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (exitcond_reg_4181 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1))) then
                r_V_10_reg_4200 <= r_V_10_fu_3380_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage2_11001) and (exitcond_reg_4181 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2))) then
                r_V_11_reg_4220 <= r_V_11_fu_3416_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state13) or ((ap_enable_reg_pp0_iter22 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (or_cond4_reg_3713_pp0_iter21_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then
                reg_843 <= grp_fu_822_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (or_cond4_reg_3713_pp0_iter29_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                t_V_29_reg_4122 <= t_V_29_fu_3015_p1;
                tmp_1685_i_i_reg_4134 <= tmp_1685_i_i_fu_3034_p2;
                tmp_i_i9_reg_4128 <= tmp_i_i9_fu_3028_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (or_cond4_reg_3713_pp0_iter30_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                temphist_V_addr_14_reg_4160 <= tmp_584_fu_3309_p1(6 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (or_cond4_reg_3713_pp0_iter1_reg = ap_const_lv1_1))) then
                this_assign_reg_3931 <= p_Val2_102_fu_2087_p2(47 downto 16);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_s_reg_3522 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                tmp32_V_50_reg_3554 <= tmp32_V_50_fu_1115_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (tmp_533_reg_3900 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (or_cond4_reg_3713_pp0_iter1_reg = ap_const_lv1_1))) then
                tmp32_V_54_reg_3936 <= tmp32_V_54_fu_2131_p2;
                tmp_1272_reg_3941 <= tmp_1272_fu_2137_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_539_reg_3860 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (or_cond4_reg_3713 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp32_V_58_reg_3911 <= tmp32_V_58_fu_1957_p2;
                tmp_1274_reg_3916 <= tmp_1274_fu_1963_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_558_reg_3877 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (or_cond4_reg_3713 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp32_V_64_reg_3926 <= tmp32_V_64_fu_2070_p3;
                tmp_1286_reg_3921 <= tmp_1286_fu_2004_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_510_fu_1498_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state17) and (or_cond_213_fu_1519_p2 = ap_const_lv1_1))) then
                    tmp_264_cast_reg_3678(17 downto 8) <= tmp_264_cast_fu_1529_p3(17 downto 8);
                    tmp_266_cast_reg_3684(17 downto 8) <= tmp_266_cast_fu_1547_p3(17 downto 8);
                    tmp_268_cast_reg_3689(17 downto 8) <= tmp_268_cast_fu_1565_p3(17 downto 8);
                tmp_513_reg_3694 <= tmp_513_fu_1573_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (exitcond_fu_3344_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                    tmp_516_reg_4185(5 downto 0) <= tmp_516_fu_3356_p1(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (or_cond4_reg_3713_pp0_iter18_reg = ap_const_lv1_1))) then
                tmp_545_reg_4033 <= grp_fu_815_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (or_cond4_reg_3713_pp0_iter5_reg = ap_const_lv1_1))) then
                v_assign_6_reg_3986 <= grp_fu_838_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter29 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (or_cond4_reg_3713_pp0_iter29_reg = ap_const_lv1_1))) then
                x_assign_70_reg_4116 <= grp_fu_822_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (or_cond4_reg_3713_pp0_iter2_reg = ap_const_lv1_1))) then
                x_assign_reg_3976 <= x_assign_fu_2225_p3;
                x_assign_s_reg_3981 <= x_assign_s_fu_2274_p3;
            end if;
        end if;
    end process;
    tmp_reg_3516(0) <= '0';
    p_Val2_158_reg_3533(0) <= '0';
    tmp_264_cast_reg_3678(7 downto 0) <= "00000000";
    tmp_266_cast_reg_3684(7 downto 0) <= "00000000";
    tmp_268_cast_reg_3689(7 downto 0) <= "00000000";
    tmp_516_reg_4185(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state16, exitcond2_fu_1460_p2, tmp_510_fu_1498_p2, ap_CS_fsm_state17, or_cond_213_fu_1519_p2, tmp_529_fu_1579_p2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, exitcond_fu_3344_p2, ap_enable_reg_pp1_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1, ap_block_pp0_stage1_subdone, ap_enable_reg_pp0_iter30, ap_enable_reg_pp0_iter31, ap_block_pp1_stage0_subdone, ap_block_pp1_stage2_subdone, ap_block_pp1_stage1_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state16) and (exitcond2_fu_1460_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state17 => 
                if (((tmp_510_fu_1498_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state17) and (or_cond_213_fu_1519_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((or_cond_213_fu_1519_p2 = ap_const_lv1_0) and (tmp_510_fu_1498_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                    ap_NS_fsm <= ap_ST_fsm_state82;
                else
                    ap_NS_fsm <= ap_ST_fsm_state83;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (tmp_529_fu_1579_p2 = ap_const_lv1_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (tmp_529_fu_1579_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state82;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((not(((ap_enable_reg_pp0_iter30 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter31 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_enable_reg_pp0_iter30 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter31 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                    ap_NS_fsm <= ap_ST_fsm_state82;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_state82 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state83 => 
                ap_NS_fsm <= ap_ST_fsm_state84;
            when ap_ST_fsm_state84 => 
                ap_NS_fsm <= ap_ST_fsm_state85;
            when ap_ST_fsm_state85 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (exitcond_fu_3344_p2 = ap_const_lv1_1))) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage1;
                elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (exitcond_fu_3344_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state90;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_pp1_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage1;
                end if;
            when ap_ST_fsm_pp1_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage2;
                end if;
            when ap_ST_fsm_state90 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    Ang_V_2_fu_2877_p2 <= std_logic_vector(unsigned(ap_const_lv32_1680000) + unsigned(p_Val2_187_reg_4060));
    F2_5_fu_2678_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(tmp_546_fu_2651_p1));
    F2_6_fu_2394_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(tmp_565_fu_2367_p1));
    F2_fu_1251_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(tmp_496_fu_1224_p1));
    NZeros_fu_977_p2 <= std_logic_vector(unsigned(tmp_1237_fu_933_p1) + unsigned(tmp_1238_fu_973_p1));
    OP2_V_23_cast_fu_872_p0 <= sigma_V;
        OP2_V_fu_1492_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(expf_scale_V_reg_3628),64));

    W_V_fu_2595_p3 <= 
        newSel24_fu_2581_p3 when (or_cond2_fu_2589_p2(0) = '1') else 
        ap_const_lv32_0;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(17);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(18);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(23);
    ap_CS_fsm_pp1_stage1 <= ap_CS_fsm(24);
    ap_CS_fsm_pp1_stage2 <= ap_CS_fsm(25);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state82 <= ap_CS_fsm(19);
    ap_CS_fsm_state83 <= ap_CS_fsm(20);
    ap_CS_fsm_state84 <= ap_CS_fsm(21);
    ap_CS_fsm_state85 <= ap_CS_fsm(22);
    ap_CS_fsm_state90 <= ap_CS_fsm(26);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage1_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage1_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp0_stage1_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp0_stage1_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp0_stage1_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp0_stage1_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state40_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp0_stage1_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state42_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state43_pp0_stage1_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state44_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state45_pp0_stage1_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state46_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state47_pp0_stage1_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state48_pp0_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state49_pp0_stage1_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state50_pp0_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state51_pp0_stage1_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state52_pp0_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state53_pp0_stage1_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state54_pp0_stage0_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state55_pp0_stage1_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state56_pp0_stage0_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state57_pp0_stage1_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state58_pp0_stage0_iter20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state59_pp0_stage1_iter20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state60_pp0_stage0_iter21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state61_pp0_stage1_iter21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state62_pp0_stage0_iter22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state63_pp0_stage1_iter22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state64_pp0_stage0_iter23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state65_pp0_stage1_iter23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state66_pp0_stage0_iter24 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state67_pp0_stage1_iter24 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state68_pp0_stage0_iter25 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state69_pp0_stage1_iter25 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state70_pp0_stage0_iter26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state71_pp0_stage1_iter26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state72_pp0_stage0_iter27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state73_pp0_stage1_iter27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state74_pp0_stage0_iter28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state75_pp0_stage1_iter28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state76_pp0_stage0_iter29 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state77_pp0_stage1_iter29 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state78_pp0_stage0_iter30 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state79_pp0_stage1_iter30 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state80_pp0_stage0_iter31 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state81_pp0_stage1_iter31 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state86_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state87_pp1_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state88_pp1_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state89_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state18_assign_proc : process(tmp_529_fu_1579_p2)
    begin
        if ((tmp_529_fu_1579_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state18 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state18 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state86_assign_proc : process(exitcond_fu_3344_p2)
    begin
        if ((exitcond_fu_3344_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state86 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state86 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state90)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state90) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter22, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter29, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter21, ap_enable_reg_pp0_iter23, ap_enable_reg_pp0_iter24, ap_enable_reg_pp0_iter25, ap_enable_reg_pp0_iter26, ap_enable_reg_pp0_iter27, ap_enable_reg_pp0_iter28, ap_enable_reg_pp0_iter30, ap_enable_reg_pp0_iter31)
    begin
        if (((ap_enable_reg_pp0_iter31 = ap_const_logic_0) and (ap_enable_reg_pp0_iter30 = ap_const_logic_0) and (ap_enable_reg_pp0_iter28 = ap_const_logic_0) and (ap_enable_reg_pp0_iter27 = ap_const_logic_0) and (ap_enable_reg_pp0_iter26 = ap_const_logic_0) and (ap_enable_reg_pp0_iter25 = ap_const_logic_0) and (ap_enable_reg_pp0_iter24 = ap_const_logic_0) and (ap_enable_reg_pp0_iter23 = ap_const_logic_0) and (ap_enable_reg_pp0_iter21 = ap_const_logic_0) and (ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter29 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter22 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_i2_phi_fu_796_p4_assign_proc : process(i2_reg_792, exitcond_reg_4181, ap_CS_fsm_pp1_stage0, i_13_reg_4205, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (exitcond_reg_4181 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            ap_phi_mux_i2_phi_fu_796_p4 <= i_13_reg_4205;
        else 
            ap_phi_mux_i2_phi_fu_796_p4 <= i2_reg_792;
        end if; 
    end process;


    ap_phi_mux_j6_phi_fu_774_p4_assign_proc : process(j6_reg_771, ap_CS_fsm_pp0_stage0, tmp_529_reg_3709, j_6_reg_3788, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_529_reg_3709 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_j6_phi_fu_774_p4 <= j_6_reg_3788;
        else 
            ap_phi_mux_j6_phi_fu_774_p4 <= j6_reg_771;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state90)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state90)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= omax_V_write_assign_reg_780;
    bin_1_fu_3295_p3 <= 
        tmp_582_fu_3289_p2 when (tmp_581_fu_3283_p2(0) = '1') else 
        p_Val2_189_fu_3277_p3;
    c_fu_1584_p2 <= std_logic_vector(signed(ap_phi_mux_j6_phi_fu_774_p4) + signed(c0));
    exitcond2_fu_1460_p2 <= "1" when (i_reg_750 = ap_const_lv6_28) else "0";
    exitcond_fu_3344_p2 <= "1" when (ap_phi_mux_i2_phi_fu_796_p4 = ap_const_lv6_26) else "0";
    expf_scale_V_fu_1452_p3 <= 
        newSel21_fu_1438_p3 when (or_cond8_fu_1446_p2(0) = '1') else 
        ap_const_lv32_0;
    f_18_fu_2319_p1 <= p_Result_191_fu_2308_p5;
    f_20_fu_2221_p1 <= p_Result_193_fu_2210_p5;
    f_22_fu_2270_p1 <= p_Result_196_fu_2259_p5;
    f_24_fu_3004_p1 <= p_Result_199_reg_4101;
    f_fu_1177_p1 <= p_Result_188_fu_1166_p5;
    grp_atan2_cordic_float_s_fu_804_ap_start <= grp_atan2_cordic_float_s_fu_804_ap_start_reg;
    grp_atan2_cordic_float_s_fu_804_y_in <= 
        ap_const_lv32_0 when (tmp_533_reg_3900_pp0_iter2_reg(0) = '1') else 
        f_18_fu_2319_p1;

    grp_fu_815_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, grp_atan2_cordic_float_s_fu_804_ap_return, ap_enable_reg_pp0_iter18, f_24_fu_3004_p1, ap_enable_reg_pp0_iter25, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter25 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_815_p0 <= f_24_fu_3004_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_815_p0 <= grp_atan2_cordic_float_s_fu_804_ap_return;
        else 
            grp_fu_815_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_815_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter25, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter25 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_815_p1 <= ap_const_lv32_42100000;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_815_p1 <= ap_const_lv32_43340000;
        else 
            grp_fu_815_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_822_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, tmp_545_reg_4033, p_03_i_reg_4111, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter26, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_CS_fsm_state7)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter26 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_822_p0 <= p_03_i_reg_4111;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_822_p0 <= tmp_545_reg_4033;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fu_822_p0 <= ap_const_lv32_BF800000;
        else 
            grp_fu_822_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_822_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, p_03_i8_reg_3569, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter26, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_CS_fsm_state7)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter26 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_822_p1 <= ap_const_lv32_43B40000;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_822_p1 <= ap_const_lv32_40490FDA;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fu_822_p1 <= p_03_i8_reg_3569;
        else 
            grp_fu_822_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_829_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, tmp32_V_50_reg_3554, ap_CS_fsm_pp0_stage1, tmp32_V_58_reg_3911, tmp32_V_54_reg_3936, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_CS_fsm_state4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_829_p0 <= tmp32_V_54_reg_3936;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_829_p0 <= tmp32_V_58_reg_3911;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_829_p0 <= tmp32_V_50_reg_3554;
        else 
            grp_fu_829_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_832_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, tmp32_V_64_reg_3926, tmp32_V_68_reg_4081, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter24, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_832_p0 <= tmp32_V_68_reg_4081;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_832_p0 <= tmp32_V_64_reg_3926;
        else 
            grp_fu_832_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_835_p0_assign_proc : process(reg_843, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter22, ap_CS_fsm_state14, ap_CS_fsm_pp0_stage1, v_assign_6_reg_3986, ap_enable_reg_pp0_iter6, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_835_p0 <= v_assign_6_reg_3986;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter22 = ap_const_logic_1)))) then 
            grp_fu_835_p0 <= reg_843;
        else 
            grp_fu_835_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    hist_V_address0 <= tmp_516_reg_4185(6 - 1 downto 0);

    hist_V_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            hist_V_ce0 <= ap_const_logic_1;
        else 
            hist_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    hist_V_d0 <= p_Val2_110_fu_3485_p2(47 downto 16);

    hist_V_we0_assign_proc : process(exitcond_reg_4181, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (exitcond_reg_4181 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            hist_V_we0 <= ap_const_logic_1;
        else 
            hist_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    i_12_fu_1466_p2 <= std_logic_vector(unsigned(i_reg_750) + unsigned(ap_const_lv6_1));
    i_13_fu_3397_p2 <= std_logic_vector(unsigned(i2_reg_792) + unsigned(ap_const_lv6_1));
    i_14_fu_3338_p2 <= std_logic_vector(signed(i1_reg_761) + signed(ap_const_lv32_1));
    i_15_fu_1477_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(radius));
    i_op_assign_fu_1666_p2 <= std_logic_vector(unsigned(tmp_557_fu_1660_p2) + unsigned(tmp_513_reg_3694));
    icmp11_fu_1313_p2 <= "1" when (tmp_1258_fu_1303_p4 = ap_const_lv7_0) else "0";
    icmp14_fu_2740_p2 <= "1" when (tmp_1279_fu_2730_p4 = ap_const_lv7_0) else "0";
    icmp19_fu_2024_p2 <= "1" when (tmp_1287_fu_2014_p4 = ap_const_lv27_0) else "0";
    icmp22_fu_2456_p2 <= "1" when (tmp_1298_fu_2446_p4 = ap_const_lv7_0) else "0";
    icmp_fu_1028_p2 <= "1" when (tmp_1241_fu_1018_p4 = ap_const_lv26_0) else "0";

    img_0_val_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0, tmp_269_cast_fu_1621_p1, tmp_271_cast_fu_1761_p1, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                img_0_val_V_address0 <= tmp_271_cast_fu_1761_p1(16 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                img_0_val_V_address0 <= tmp_269_cast_fu_1621_p1(16 - 1 downto 0);
            else 
                img_0_val_V_address0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            img_0_val_V_address0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    img_0_val_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0, tmp_270_cast_fu_1646_p1, ap_block_pp0_stage1, tmp_272_cast_fu_1775_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                img_0_val_V_address1 <= tmp_272_cast_fu_1775_p1(16 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                img_0_val_V_address1 <= tmp_270_cast_fu_1646_p1(16 - 1 downto 0);
            else 
                img_0_val_V_address1 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            img_0_val_V_address1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    img_0_val_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            img_0_val_V_ce0 <= ap_const_logic_1;
        else 
            img_0_val_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    img_0_val_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            img_0_val_V_ce1 <= ap_const_logic_1;
        else 
            img_0_val_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    img_1_val_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0, tmp_269_cast_fu_1621_p1, tmp_271_cast_fu_1761_p1, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                img_1_val_V_address0 <= tmp_271_cast_fu_1761_p1(16 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                img_1_val_V_address0 <= tmp_269_cast_fu_1621_p1(16 - 1 downto 0);
            else 
                img_1_val_V_address0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            img_1_val_V_address0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    img_1_val_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0, tmp_270_cast_fu_1646_p1, ap_block_pp0_stage1, tmp_272_cast_fu_1775_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                img_1_val_V_address1 <= tmp_272_cast_fu_1775_p1(16 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                img_1_val_V_address1 <= tmp_270_cast_fu_1646_p1(16 - 1 downto 0);
            else 
                img_1_val_V_address1 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            img_1_val_V_address1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    img_1_val_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            img_1_val_V_ce0 <= ap_const_logic_1;
        else 
            img_1_val_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    img_1_val_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            img_1_val_V_ce1 <= ap_const_logic_1;
        else 
            img_1_val_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    img_2_val_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0, tmp_269_cast_fu_1621_p1, tmp_271_cast_fu_1761_p1, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                img_2_val_V_address0 <= tmp_271_cast_fu_1761_p1(16 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                img_2_val_V_address0 <= tmp_269_cast_fu_1621_p1(16 - 1 downto 0);
            else 
                img_2_val_V_address0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            img_2_val_V_address0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    img_2_val_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0, tmp_270_cast_fu_1646_p1, ap_block_pp0_stage1, tmp_272_cast_fu_1775_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                img_2_val_V_address1 <= tmp_272_cast_fu_1775_p1(16 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                img_2_val_V_address1 <= tmp_270_cast_fu_1646_p1(16 - 1 downto 0);
            else 
                img_2_val_V_address1 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            img_2_val_V_address1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    img_2_val_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            img_2_val_V_ce0 <= ap_const_logic_1;
        else 
            img_2_val_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    img_2_val_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            img_2_val_V_ce1 <= ap_const_logic_1;
        else 
            img_2_val_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    img_3_val_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0, tmp_269_cast_fu_1621_p1, tmp_271_cast_fu_1761_p1, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                img_3_val_V_address0 <= tmp_271_cast_fu_1761_p1(16 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                img_3_val_V_address0 <= tmp_269_cast_fu_1621_p1(16 - 1 downto 0);
            else 
                img_3_val_V_address0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            img_3_val_V_address0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    img_3_val_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0, tmp_270_cast_fu_1646_p1, ap_block_pp0_stage1, tmp_272_cast_fu_1775_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                img_3_val_V_address1 <= tmp_272_cast_fu_1775_p1(16 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                img_3_val_V_address1 <= tmp_270_cast_fu_1646_p1(16 - 1 downto 0);
            else 
                img_3_val_V_address1 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            img_3_val_V_address1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    img_3_val_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            img_3_val_V_ce0 <= ap_const_logic_1;
        else 
            img_3_val_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    img_3_val_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            img_3_val_V_ce1 <= ap_const_logic_1;
        else 
            img_3_val_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    img_4_val_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0, tmp_269_cast_fu_1621_p1, tmp_271_cast_fu_1761_p1, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                img_4_val_V_address0 <= tmp_271_cast_fu_1761_p1(16 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                img_4_val_V_address0 <= tmp_269_cast_fu_1621_p1(16 - 1 downto 0);
            else 
                img_4_val_V_address0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            img_4_val_V_address0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    img_4_val_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0, tmp_270_cast_fu_1646_p1, ap_block_pp0_stage1, tmp_272_cast_fu_1775_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                img_4_val_V_address1 <= tmp_272_cast_fu_1775_p1(16 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                img_4_val_V_address1 <= tmp_270_cast_fu_1646_p1(16 - 1 downto 0);
            else 
                img_4_val_V_address1 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            img_4_val_V_address1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    img_4_val_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            img_4_val_V_ce0 <= ap_const_logic_1;
        else 
            img_4_val_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    img_4_val_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            img_4_val_V_ce1 <= ap_const_logic_1;
        else 
            img_4_val_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    img_5_val_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0, tmp_269_cast_fu_1621_p1, tmp_271_cast_fu_1761_p1, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                img_5_val_V_address0 <= tmp_271_cast_fu_1761_p1(16 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                img_5_val_V_address0 <= tmp_269_cast_fu_1621_p1(16 - 1 downto 0);
            else 
                img_5_val_V_address0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            img_5_val_V_address0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    img_5_val_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0, tmp_270_cast_fu_1646_p1, ap_block_pp0_stage1, tmp_272_cast_fu_1775_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                img_5_val_V_address1 <= tmp_272_cast_fu_1775_p1(16 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                img_5_val_V_address1 <= tmp_270_cast_fu_1646_p1(16 - 1 downto 0);
            else 
                img_5_val_V_address1 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            img_5_val_V_address1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    img_5_val_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            img_5_val_V_ce0 <= ap_const_logic_1;
        else 
            img_5_val_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    img_5_val_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            img_5_val_V_ce1 <= ap_const_logic_1;
        else 
            img_5_val_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    index_V_fu_3040_p4 <= t_V_29_fu_3015_p1(27 downto 23);
    ireg_V_5_fu_2615_p1 <= grp_fu_835_p1;
    ireg_V_6_fu_2331_p1 <= grp_fu_835_p1;
    ireg_V_fu_1188_p1 <= grp_fu_835_p1;
    isNeg_fu_3192_p3 <= sh_assign_fu_3186_p2(8 downto 8);
    is_neg_10_fu_2898_p3 <= p_Val2_118_fu_2882_p3(31 downto 31);
    j_6_fu_1671_p2 <= std_logic_vector(signed(ap_phi_mux_j6_phi_fu_774_p4) + signed(ap_const_lv32_1));
    loc_V_21_fu_3080_p1 <= p_Val2_121_fu_3075_p2(23 - 1 downto 0);
    loc_V_22_fu_3154_p4 <= p_Val2_181_fu_3142_p1(30 downto 23);
    loc_V_23_fu_3164_p1 <= p_Val2_181_fu_3142_p1(23 - 1 downto 0);
    loc_V_fu_3018_p4 <= t_V_29_fu_3015_p1(30 downto 23);
    man_V_21_fu_1238_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(p_Result_189_fu_1234_p1));
    man_V_22_fu_1244_p3 <= 
        man_V_21_fu_1238_p2 when (isneg_reg_3574(0) = '1') else 
        p_Result_189_fu_1234_p1;
    man_V_24_fu_2665_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(p_Result_194_fu_2661_p1));
    man_V_25_fu_2671_p3 <= 
        man_V_24_fu_2665_p2 when (isneg_5_reg_4038(0) = '1') else 
        p_Result_194_fu_2661_p1;
    man_V_27_fu_2381_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(p_Result_197_fu_2377_p1));
    man_V_28_fu_2387_p3 <= 
        man_V_27_fu_2381_p2 when (isneg_6_reg_3991(0) = '1') else 
        p_Result_197_fu_2377_p1;
    mask_table1_address0 <= tmp_1686_i_i_fu_3050_p1(5 - 1 downto 0);

    mask_table1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter30)
    begin
        if (((ap_enable_reg_pp0_iter30 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            mask_table1_ce0 <= ap_const_logic_1;
        else 
            mask_table1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    msb_idx_6_fu_1012_p3 <= 
        ap_const_lv31_0 when (tmp_1240_reg_3549(0) = '1') else 
        tmp_1239_reg_3544;
    msb_idx_7_fu_2008_p2 <= (num_zeros_9_fu_2000_p1 xor ap_const_lv32_3F);
    msb_idx_fu_991_p2 <= std_logic_vector(unsigned(ap_const_lv32_5F) - unsigned(num_zeros_fu_983_p3));
    newSel20_fu_1424_p3 <= 
        p_078_s_fu_1333_p3 when (sel_tmp68_fu_1380_p2(0) = '1') else 
        tmp_1257_fu_1293_p1;
    newSel21_fu_1438_p3 <= 
        newSel_fu_1410_p3 when (or_cond_fu_1418_p2(0) = '1') else 
        newSel20_fu_1424_p3;
    newSel22_fu_2553_p3 <= 
        tmp_575_fu_2483_p2 when (sel_tmp49_fu_2547_p2(0) = '1') else 
        tmp_1299_fu_2472_p1;
    newSel23_fu_2567_p3 <= 
        storemerge_fu_2476_p3 when (sel_tmp36_fu_2523_p2(0) = '1') else 
        tmp_1297_fu_2436_p1;
    newSel24_fu_2581_p3 <= 
        newSel22_fu_2553_p3 when (or_cond9_fu_2561_p2(0) = '1') else 
        newSel23_fu_2567_p3;
    newSel_fu_1410_p3 <= 
        tmp_506_fu_1340_p2 when (sel_tmp81_fu_1404_p2(0) = '1') else 
        tmp_1259_fu_1329_p1;
    
    num_zeros_10_fu_2934_p3_proc : process(p_Result_198_fu_2924_p4)
    begin
        num_zeros_10_fu_2934_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 0 to 32 - 1 loop
            if p_Result_198_fu_2924_p4(i) = '1' then
                num_zeros_10_fu_2934_p3 <= std_logic_vector(to_unsigned(i,32));
                exit;
            end if;
        end loop;
    end process;

    
    num_zeros_7_fu_2123_p3_proc : process(p_Result_190_fu_2113_p4)
    begin
        num_zeros_7_fu_2123_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 0 to 32 - 1 loop
            if p_Result_190_fu_2113_p4(i) = '1' then
                num_zeros_7_fu_2123_p3 <= std_logic_vector(to_unsigned(i,32));
                exit;
            end if;
        end loop;
    end process;

    
    num_zeros_8_fu_1949_p3_proc : process(p_Result_192_fu_1939_p4)
    begin
        num_zeros_8_fu_1949_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 0 to 32 - 1 loop
            if p_Result_192_fu_1939_p4(i) = '1' then
                num_zeros_8_fu_1949_p3 <= std_logic_vector(to_unsigned(i,32));
                exit;
            end if;
        end loop;
    end process;

    num_zeros_9_fu_2000_p1 <= tmp_559_fu_1992_p3(32 - 1 downto 0);
    num_zeros_fu_983_p3 <= 
        NZeros_fu_977_p2 when (tmp_491_fu_937_p2(0) = '1') else 
        tmp_1237_fu_933_p1;
    one_half_i_i_cast_fu_3071_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(one_half_table2_q0),32));
    one_half_table2_address0 <= tmp_1686_i_i_fu_3050_p1(5 - 1 downto 0);

    one_half_table2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter30)
    begin
        if (((ap_enable_reg_pp0_iter30 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            one_half_table2_ce0 <= ap_const_logic_1;
        else 
            one_half_table2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    or_cond1_fu_2575_p2 <= (sel_tmp36_fu_2523_p2 or sel_tmp29_fu_2494_p2);
    or_cond2_fu_2589_p2 <= (or_cond9_fu_2561_p2 or or_cond1_fu_2575_p2);
    or_cond4_fu_1600_p2 <= (tmp_532_fu_1595_p2 and tmp_531_fu_1589_p2);
    or_cond7_fu_1432_p2 <= (sel_tmp68_fu_1380_p2 or sel_tmp61_fu_1351_p2);
    or_cond8_fu_1446_p2 <= (or_cond_fu_1418_p2 or or_cond7_fu_1432_p2);
    or_cond9_fu_2561_p2 <= (sel_tmp49_fu_2547_p2 or sel_tmp42_fu_2529_p2);
    or_cond_213_fu_1519_p2 <= (tmp_512_fu_1514_p2 and tmp_511_fu_1508_p2);
    or_cond_fu_1418_p2 <= (sel_tmp81_fu_1404_p2 or sel_tmp74_fu_1386_p2);
    p_03_i8_fu_1181_p3 <= 
        ap_const_lv32_0 when (tmp_s_reg_3522(0) = '1') else 
        f_fu_1177_p1;
    p_03_i_fu_3008_p3 <= 
        ap_const_lv32_0 when (tmp_576_reg_4071_pp0_iter25_reg(0) = '1') else 
        grp_fu_815_p2;
    p_078_s_fu_1333_p3 <= 
        ap_const_lv32_FFFFFFFF when (isneg_reg_3574(0) = '1') else 
        ap_const_lv32_0;
    p_Repl2_64_trunc_fu_1153_p2 <= std_logic_vector(unsigned(tmp_1253_fu_1142_p1) + unsigned(tmp83_cast_cast_fu_1145_p3));
    p_Repl2_67_trunc_fu_2295_p2 <= std_logic_vector(unsigned(tmp_536_fu_2286_p2) + unsigned(tmp_537_fu_2291_p1));
    p_Repl2_70_trunc_fu_2197_p2 <= std_logic_vector(unsigned(tmp_542_fu_2188_p2) + unsigned(tmp_543_fu_2193_p1));
    p_Repl2_73_trunc_fu_2246_p2 <= std_logic_vector(unsigned(tmp_562_fu_2237_p2) + unsigned(tmp_563_fu_2242_p1));
    p_Repl2_76_trunc_fu_2980_p2 <= std_logic_vector(unsigned(tmp_578_fu_2971_p2) + unsigned(tmp_579_fu_2976_p1));
    
    p_Result_187_fu_953_p5_proc : process(p_Result_s_fu_943_p4)
    begin
        for i in 64 - 1 downto 0 loop
            if (i > 63 or i < 32) then
                p_Result_187_fu_953_p5(i) <= ap_const_lv64_FFFFFFFFFFFFFFFF(i);
            elsif (63 - i >= 32) then
                p_Result_187_fu_953_p5(i) <= '0';
            else
                p_Result_187_fu_953_p5(i) <= p_Result_s_fu_943_p4(63 - i);
            end if;
        end loop;
    end process;

    p_Result_188_fu_1166_p5 <= (tmp_495_fu_1159_p3 & tmp32_V_71_reg_3559(22 downto 0));
    p_Result_189_fu_1234_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_497_fu_1227_p3),54));
    
    p_Result_190_fu_2113_p4_proc : process(p_Val2_185_fu_2107_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable p_Result_190_fu_2113_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(5 - 1 downto 0) := ap_const_lv32_1F(5 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(5 - 1 downto 0) := ap_const_lv32_0(5 - 1 downto 0);
        v0_cpy := p_Val2_185_fu_2107_p3;
        if (vlo_cpy(5 - 1 downto 0) > vhi_cpy(5 - 1 downto 0)) then
            vhi_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_0(5-1 downto 0)));
            vlo_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_1F(5-1 downto 0)));
            for p_Result_190_fu_2113_p4_i in 0 to 32-1 loop
                v0_cpy(p_Result_190_fu_2113_p4_i) := p_Val2_185_fu_2107_p3(32-1-p_Result_190_fu_2113_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(5-1 downto 0)))));

        section := (others=>'0');
        section(5-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(5-1 downto 0)) - unsigned(vlo_cpy(5-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(32-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_190_fu_2113_p4 <= resvalue(32-1 downto 0);
    end process;

    p_Result_191_fu_2308_p5 <= (tmp_538_fu_2301_p3 & tmp32_V_72_reg_3966(22 downto 0));
    
    p_Result_192_fu_1939_p4_proc : process(p_Val2_186_fu_1933_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable p_Result_192_fu_1939_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(5 - 1 downto 0) := ap_const_lv32_1F(5 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(5 - 1 downto 0) := ap_const_lv32_0(5 - 1 downto 0);
        v0_cpy := p_Val2_186_fu_1933_p3;
        if (vlo_cpy(5 - 1 downto 0) > vhi_cpy(5 - 1 downto 0)) then
            vhi_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_0(5-1 downto 0)));
            vlo_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_1F(5-1 downto 0)));
            for p_Result_192_fu_1939_p4_i in 0 to 32-1 loop
                v0_cpy(p_Result_192_fu_1939_p4_i) := p_Val2_186_fu_1933_p3(32-1-p_Result_192_fu_1939_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(5-1 downto 0)))));

        section := (others=>'0');
        section(5-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(5-1 downto 0)) - unsigned(vlo_cpy(5-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(32-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_192_fu_1939_p4 <= resvalue(32-1 downto 0);
    end process;

    p_Result_193_fu_2210_p5 <= (tmp_544_fu_2203_p3 & tmp32_V_73_reg_3946(22 downto 0));
    p_Result_194_fu_2661_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_547_fu_2654_p3),54));
    
    p_Result_195_fu_1982_p4_proc : process(p_Val2_190_cast_fu_1978_p1)
    variable vlo_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable p_Result_195_fu_1982_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_3F(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := p_Val2_190_cast_fu_1978_p1;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_3F(6-1 downto 0)));
            for p_Result_195_fu_1982_p4_i in 0 to 64-1 loop
                v0_cpy(p_Result_195_fu_1982_p4_i) := p_Val2_190_cast_fu_1978_p1(64-1-p_Result_195_fu_1982_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(64-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_195_fu_1982_p4 <= resvalue(64-1 downto 0);
    end process;

    p_Result_196_fu_2259_p5 <= (tmp_564_fu_2252_p3 & tmp32_V_74_reg_3956(22 downto 0));
    p_Result_197_fu_2377_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_566_fu_2370_p3),54));
    
    p_Result_198_fu_2924_p4_proc : process(p_Val2_302_cast_fu_2920_p1)
    variable vlo_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable p_Result_198_fu_2924_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(5 - 1 downto 0) := ap_const_lv32_1F(5 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(5 - 1 downto 0) := ap_const_lv32_0(5 - 1 downto 0);
        v0_cpy := p_Val2_302_cast_fu_2920_p1;
        if (vlo_cpy(5 - 1 downto 0) > vhi_cpy(5 - 1 downto 0)) then
            vhi_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_0(5-1 downto 0)));
            vlo_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_1F(5-1 downto 0)));
            for p_Result_198_fu_2924_p4_i in 0 to 32-1 loop
                v0_cpy(p_Result_198_fu_2924_p4_i) := p_Val2_302_cast_fu_2920_p1(32-1-p_Result_198_fu_2924_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(5-1 downto 0)))));

        section := (others=>'0');
        section(5-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(5-1 downto 0)) - unsigned(vlo_cpy(5-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(32-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_198_fu_2924_p4 <= resvalue(32-1 downto 0);
    end process;

    p_Result_199_fu_2993_p5 <= (tmp_580_fu_2986_p3 & tmp32_V_75_reg_4091(22 downto 0));
    p_Result_200_fu_3063_p3 <= (p_Result_s_214_fu_3056_p3 & ap_const_lv31_0);
    p_Result_201_fu_3106_p3 <= (tmp_392_fu_3096_p4 & xs_sig_V_fu_3090_p2);
    p_Result_42_fu_921_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_386_fu_911_p4),64));
    p_Result_s_214_fu_3056_p3 <= t_V_29_reg_4122(31 downto 31);
    
    p_Result_s_fu_943_p4_proc : process(p_Val2_158_fu_905_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable p_Result_s_fu_943_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_1F(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := p_Val2_158_fu_905_p3;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_1F(6-1 downto 0)));
            for p_Result_s_fu_943_p4_i in 0 to 64-1 loop
                v0_cpy(p_Result_s_fu_943_p4_i) := p_Val2_158_fu_905_p3(64-1-p_Result_s_fu_943_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(64-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_s_fu_943_p4 <= resvalue(32-1 downto 0);
    end process;

    p_Val2_101_fu_1899_p2 <= std_logic_vector(unsigned(p_Val2_114_fu_1845_p8) - unsigned(p_Val2_115_fu_1882_p8));
    p_Val2_102_fu_2087_p2 <= std_logic_vector(unsigned(tmp_710_cast_reg_3895) + unsigned(tmp_711_cast_fu_2081_p2));
    p_Val2_104_fu_1802_p0 <= i_op_assign_reg_3783;
    p_Val2_104_fu_1802_p1 <= OP2_V_reg_3657(32 - 1 downto 0);
    p_Val2_104_fu_1802_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_104_fu_1802_p0) * signed(p_Val2_104_fu_1802_p1))), 64));
        p_Val2_106_cast_fu_3445_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_98_fu_3438_p3),48));

    p_Val2_106_fu_3322_p2 <= std_logic_vector(unsigned(tmp_585_fu_3314_p3) + unsigned(p_Val2_s_215_reg_4023_pp0_iter31_reg));
    p_Val2_108_fu_3427_p3 <= (r_V_10_reg_4200 & ap_const_lv12_0);
    p_Val2_109_fu_3473_p2 <= std_logic_vector(signed(p_shl_cast_fu_3457_p1) - signed(p_shl1_cast_fu_3469_p1));
    p_Val2_110_fu_3485_p2 <= std_logic_vector(unsigned(p_Val2_109_fu_3473_p2) + unsigned(tmp84_fu_3479_p2));
        p_Val2_111_fu_1697_p2 <= std_logic_vector(IEEE.numeric_std.resize(signed(img_1_val_V_q0),32));

        p_Val2_111_fu_1697_p3 <= std_logic_vector(IEEE.numeric_std.resize(signed(img_2_val_V_q0),32));

        p_Val2_111_fu_1697_p4 <= std_logic_vector(IEEE.numeric_std.resize(signed(img_3_val_V_q0),32));

        p_Val2_111_fu_1697_p5 <= std_logic_vector(IEEE.numeric_std.resize(signed(img_4_val_V_q0),32));

        p_Val2_111_fu_1697_p6 <= std_logic_vector(IEEE.numeric_std.resize(signed(img_5_val_V_q0),32));

        p_Val2_112_fu_1734_p2 <= std_logic_vector(IEEE.numeric_std.resize(signed(img_1_val_V_q1),32));

        p_Val2_112_fu_1734_p3 <= std_logic_vector(IEEE.numeric_std.resize(signed(img_2_val_V_q1),32));

        p_Val2_112_fu_1734_p4 <= std_logic_vector(IEEE.numeric_std.resize(signed(img_3_val_V_q1),32));

        p_Val2_112_fu_1734_p5 <= std_logic_vector(IEEE.numeric_std.resize(signed(img_4_val_V_q1),32));

        p_Val2_112_fu_1734_p6 <= std_logic_vector(IEEE.numeric_std.resize(signed(img_5_val_V_q1),32));

    p_Val2_113_fu_1751_p2 <= std_logic_vector(unsigned(p_Val2_111_fu_1697_p8) - unsigned(p_Val2_112_fu_1734_p8));
        p_Val2_114_fu_1845_p2 <= std_logic_vector(IEEE.numeric_std.resize(signed(img_1_val_V_q0),32));

        p_Val2_114_fu_1845_p3 <= std_logic_vector(IEEE.numeric_std.resize(signed(img_2_val_V_q0),32));

        p_Val2_114_fu_1845_p4 <= std_logic_vector(IEEE.numeric_std.resize(signed(img_3_val_V_q0),32));

        p_Val2_114_fu_1845_p5 <= std_logic_vector(IEEE.numeric_std.resize(signed(img_4_val_V_q0),32));

        p_Val2_114_fu_1845_p6 <= std_logic_vector(IEEE.numeric_std.resize(signed(img_5_val_V_q0),32));

        p_Val2_115_fu_1882_p2 <= std_logic_vector(IEEE.numeric_std.resize(signed(img_1_val_V_q1),32));

        p_Val2_115_fu_1882_p3 <= std_logic_vector(IEEE.numeric_std.resize(signed(img_2_val_V_q1),32));

        p_Val2_115_fu_1882_p4 <= std_logic_vector(IEEE.numeric_std.resize(signed(img_3_val_V_q1),32));

        p_Val2_115_fu_1882_p5 <= std_logic_vector(IEEE.numeric_std.resize(signed(img_4_val_V_q1),32));

        p_Val2_115_fu_1882_p6 <= std_logic_vector(IEEE.numeric_std.resize(signed(img_5_val_V_q1),32));

    p_Val2_118_fu_2882_p3 <= 
        Ang_V_2_fu_2877_p2 when (tmp_1281_reg_4066(0) = '1') else 
        p_Val2_187_reg_4060;
    p_Val2_121_fu_3075_p2 <= std_logic_vector(unsigned(t_V_29_reg_4122) + unsigned(one_half_i_i_cast_fu_3071_p1));
    p_Val2_125_fu_3264_p3 <= 
        tmp_274_fu_3250_p1 when (isNeg_fu_3192_p3(0) = '1') else 
        tmp_275_fu_3254_p4;
    p_Val2_158_fu_905_p3 <= 
        tmp_649_cast_fu_900_p2 when (is_neg_reg_3527(0) = '1') else 
        tmp_reg_3516;
    p_Val2_165_cast_fu_1009_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_158_reg_3533),96));
    p_Val2_170_fu_1972_p3 <= 
        tmp_740_cast_fu_1967_p2 when (is_neg_9_reg_3882(0) = '1') else 
        tmp_1283_reg_3871;
        p_Val2_172_cast_fu_3434_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_108_fu_3427_p3),48));

    p_Val2_181_fu_3142_p1 <= x_assign_71_fu_3135_p3;
    p_Val2_185_fu_2107_p3 <= 
        tmp_534_fu_2102_p2 when (is_neg_7_reg_3905(0) = '1') else 
        p_Val2_101_reg_3888;
    p_Val2_186_fu_1933_p3 <= 
        tmp_540_fu_1928_p2 when (is_neg_8_reg_3865(0) = '1') else 
        p_Val2_113_reg_3793;
    p_Val2_187_fu_2861_p3 <= 
        tmp_556_fu_2767_p2 when (sel_tmp23_fu_2855_p2(0) = '1') else 
        sel_tmp17_fu_2835_p3;
    p_Val2_188_fu_2912_p3 <= 
        tmp_738_cast_fu_2906_p2 when (is_neg_10_fu_2898_p3(0) = '1') else 
        tmp_1282_fu_2888_p1;
    p_Val2_189_fu_3277_p3 <= 
        p_Val2_i_i_i_fu_3272_p2 when (p_Result_202_reg_4149(0) = '1') else 
        p_Val2_125_reg_4154;
    p_Val2_190_cast_fu_1978_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_170_fu_1972_p3),64));
    p_Val2_302_cast_fu_2920_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_188_fu_2912_p3),32));
    p_Val2_98_fu_3438_p3 <= (r_V_11_reg_4220 & ap_const_lv14_0);
    p_Val2_i_i_i_fu_3272_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(p_Val2_125_reg_4154));
    p_Val2_s_215_fu_2609_p0 <= W_V_reg_4018;
    p_Val2_s_215_fu_2609_p1 <= p_Val2_s_215_fu_2609_p10(24 - 1 downto 0);
    p_Val2_s_215_fu_2609_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(agg_result_V_i_reg_4013),48));
    p_Val2_s_215_fu_2609_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_s_215_fu_2609_p0) * signed('0' &p_Val2_s_215_fu_2609_p1))), 48));
    p_Val2_s_fu_876_p0 <= OP2_V_23_cast_fu_872_p0;
    p_Val2_s_fu_876_p1 <= r_V_fu_860_p3;
    p_Val2_s_fu_876_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_s_fu_876_p0) * signed(p_Val2_s_fu_876_p1))), 65));
        p_shl1_cast_fu_3469_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_shl1_fu_3461_p3),48));

    p_shl1_fu_3461_p3 <= (temphist_V_q1 & ap_const_lv13_0);
        p_shl_cast_fu_3457_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_shl_fu_3449_p3),48));

    p_shl_fu_3449_p3 <= (temphist_V_q1 & ap_const_lv15_0);
    r_V_10_fu_3380_p2 <= std_logic_vector(signed(tmp_519_fu_3372_p1) + signed(tmp_520_fu_3376_p1));
    r_V_11_fu_3416_p2 <= std_logic_vector(signed(tmp_524_fu_3408_p1) + signed(tmp_525_fu_3412_p1));
    r_V_fu_860_p1 <= sigma_V;
    r_V_fu_860_p3 <= (r_V_fu_860_p1 & ap_const_lv1_0);
    r_fu_1503_p2 <= std_logic_vector(signed(i1_reg_761) + signed(r0));
    sel_tmp10_fu_2815_p2 <= (sel_tmp9_fu_2809_p2 and sel_tmp8_fu_2803_p2);
    sel_tmp11_fu_2821_p3 <= 
        storemerge9_fu_2760_p3 when (sel_tmp10_fu_2815_p2(0) = '1') else 
        sel_tmp4_fu_2784_p3;
    sel_tmp16_fu_2829_p2 <= (tmp_553_fu_2724_p2 and sel_tmp8_fu_2803_p2);
    sel_tmp17_fu_2835_p3 <= 
        tmp_1280_fu_2756_p1 when (sel_tmp16_fu_2829_p2(0) = '1') else 
        sel_tmp11_fu_2821_p3;
    sel_tmp22_demorgan_fu_2843_p2 <= (tmp_549_fu_2684_p2 or sel_tmp7_demorgan_fu_2792_p2);
    sel_tmp22_fu_2849_p2 <= (sel_tmp22_demorgan_fu_2843_p2 xor ap_const_lv1_1);
    sel_tmp23_fu_2855_p2 <= (sel_tmp22_fu_2849_p2 and icmp14_fu_2740_p2);
    sel_tmp28_fu_2489_p2 <= (tmp_567_reg_4007 xor ap_const_lv1_1);
    sel_tmp29_fu_2494_p2 <= (tmp_571_fu_2430_p2 and sel_tmp28_fu_2489_p2);
    sel_tmp2_fu_2773_p2 <= (tmp_548_reg_4054 xor ap_const_lv1_1);
    sel_tmp33_demorgan_fu_2500_p2 <= (tmp_571_fu_2430_p2 or tmp_567_reg_4007);
    sel_tmp33_fu_2505_p2 <= (sel_tmp33_demorgan_fu_2500_p2 xor ap_const_lv1_1);
    sel_tmp34_fu_2511_p2 <= (tmp_568_fu_2400_p2 and sel_tmp33_fu_2505_p2);
    sel_tmp35_fu_2517_p2 <= (tmp_572_fu_2440_p2 xor ap_const_lv1_1);
    sel_tmp36_fu_2523_p2 <= (sel_tmp35_fu_2517_p2 and sel_tmp34_fu_2511_p2);
    sel_tmp3_fu_2778_p2 <= (tmp_552_fu_2714_p2 and sel_tmp2_fu_2773_p2);
    sel_tmp42_fu_2529_p2 <= (tmp_572_fu_2440_p2 and sel_tmp34_fu_2511_p2);
    sel_tmp48_demorgan_fu_2535_p2 <= (tmp_568_fu_2400_p2 or sel_tmp33_demorgan_fu_2500_p2);
    sel_tmp48_fu_2541_p2 <= (sel_tmp48_demorgan_fu_2535_p2 xor ap_const_lv1_1);
    sel_tmp49_fu_2547_p2 <= (sel_tmp48_fu_2541_p2 and icmp22_fu_2456_p2);
    sel_tmp4_fu_2784_p3 <= 
        tmp_1278_fu_2720_p1 when (sel_tmp3_fu_2778_p2(0) = '1') else 
        ap_const_lv32_0;
    sel_tmp52_fu_3121_p1 <= sel_tmp52_v_fu_3114_p3;
    sel_tmp52_v_fu_3114_p3 <= 
        p_Result_200_fu_3063_p3 when (tmp_i_i9_reg_4128(0) = '1') else 
        p_Result_201_fu_3106_p3;
    sel_tmp53_fu_3125_p2 <= (tmp_i_i9_reg_4128 xor ap_const_lv1_1);
    sel_tmp54_fu_3130_p2 <= (tmp_1685_i_i_reg_4134 and sel_tmp53_fu_3125_p2);
    sel_tmp60_fu_1346_p2 <= (tmp_498_reg_3590 xor ap_const_lv1_1);
    sel_tmp61_fu_1351_p2 <= (tmp_502_fu_1287_p2 and sel_tmp60_fu_1346_p2);
    sel_tmp65_demorgan_fu_1357_p2 <= (tmp_502_fu_1287_p2 or tmp_498_reg_3590);
    sel_tmp65_fu_1362_p2 <= (sel_tmp65_demorgan_fu_1357_p2 xor ap_const_lv1_1);
    sel_tmp66_fu_1368_p2 <= (tmp_499_fu_1257_p2 and sel_tmp65_fu_1362_p2);
    sel_tmp67_fu_1374_p2 <= (tmp_503_fu_1297_p2 xor ap_const_lv1_1);
    sel_tmp68_fu_1380_p2 <= (sel_tmp67_fu_1374_p2 and sel_tmp66_fu_1368_p2);
    sel_tmp74_fu_1386_p2 <= (tmp_503_fu_1297_p2 and sel_tmp66_fu_1368_p2);
    sel_tmp7_demorgan_fu_2792_p2 <= (tmp_552_fu_2714_p2 or tmp_548_reg_4054);
    sel_tmp7_fu_2797_p2 <= (sel_tmp7_demorgan_fu_2792_p2 xor ap_const_lv1_1);
    sel_tmp80_demorgan_fu_1392_p2 <= (tmp_499_fu_1257_p2 or sel_tmp65_demorgan_fu_1357_p2);
    sel_tmp80_fu_1398_p2 <= (sel_tmp80_demorgan_fu_1392_p2 xor ap_const_lv1_1);
    sel_tmp81_fu_1404_p2 <= (sel_tmp80_fu_1398_p2 and icmp11_fu_1313_p2);
    sel_tmp8_fu_2803_p2 <= (tmp_549_fu_2684_p2 and sel_tmp7_fu_2797_p2);
    sel_tmp9_fu_2809_p2 <= (tmp_553_fu_2724_p2 xor ap_const_lv1_1);
        sh_amt_5_cast_fu_2710_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_5_fu_2702_p3),32));

    sh_amt_5_fu_2702_p3 <= 
        tmp_550_fu_2690_p2 when (tmp_549_fu_2684_p2(0) = '1') else 
        tmp_551_fu_2696_p2;
        sh_amt_6_cast_fu_2426_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_6_fu_2418_p3),32));

    sh_amt_6_fu_2418_p3 <= 
        tmp_569_fu_2406_p2 when (tmp_568_fu_2400_p2(0) = '1') else 
        tmp_570_fu_2412_p2;
        sh_amt_cast_fu_1283_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_fu_1275_p3),32));

    sh_amt_fu_1275_p3 <= 
        tmp_500_fu_1263_p2 when (tmp_499_fu_1257_p2(0) = '1') else 
        tmp_501_fu_1269_p2;
        sh_assign_6_i_i_i_ca_6_fu_3222_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_assign_7_fu_3210_p3),25));

        sh_assign_6_i_i_i_ca_fu_3218_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_assign_7_fu_3210_p3),32));

    sh_assign_7_fu_3210_p3 <= 
        tmp_1702_i_i_i_cast_fu_3206_p1 when (isNeg_fu_3192_p3(0) = '1') else 
        sh_assign_fu_3186_p2;
    sh_assign_fu_3186_p2 <= std_logic_vector(signed(ap_const_lv9_181) + signed(tmp_i_i_i_i_cast_fu_3182_p1));
    storemerge9_fu_2760_p3 <= 
        ap_const_lv32_FFFFFFFF when (isneg_5_reg_4038(0) = '1') else 
        ap_const_lv32_0;
    storemerge_fu_2476_p3 <= 
        ap_const_lv32_FFFFFFFF when (isneg_6_reg_3991(0) = '1') else 
        ap_const_lv32_0;
    t_V_29_fu_3015_p1 <= x_assign_70_reg_4116;

    temphist_V_address0_assign_proc : process(ap_CS_fsm_state83, ap_CS_fsm_state84, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_pp0_stage1, temphist_V_addr_14_reg_4160, ap_CS_fsm_pp1_stage0, ap_CS_fsm_pp1_stage1, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter31, ap_CS_fsm_state85, ap_block_pp1_stage0, tmp_509_fu_1472_p1, ap_block_pp0_stage1, tmp_518_fu_3367_p1, ap_block_pp1_stage1, tmp_523_fu_3403_p1)
    begin
        if (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_boolean_0 = ap_block_pp1_stage1))) then 
            temphist_V_address0 <= tmp_523_fu_3403_p1(6 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            temphist_V_address0 <= tmp_518_fu_3367_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            temphist_V_address0 <= ap_const_lv64_27(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
            temphist_V_address0 <= ap_const_lv64_1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state83)) then 
            temphist_V_address0 <= ap_const_lv64_3(6 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter31 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            temphist_V_address0 <= temphist_V_addr_14_reg_4160;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            temphist_V_address0 <= ap_const_lv64_24(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            temphist_V_address0 <= tmp_509_fu_1472_p1(6 - 1 downto 0);
        else 
            temphist_V_address0 <= "XXXXXX";
        end if; 
    end process;


    temphist_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_state83, ap_CS_fsm_state84, ap_CS_fsm_state17, ap_CS_fsm_pp1_stage0, tmp_516_fu_3356_p1, ap_CS_fsm_pp1_stage1, ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage2, ap_enable_reg_pp0_iter31, ap_CS_fsm_state85, ap_block_pp0_stage0, ap_block_pp1_stage0, tmp_584_fu_3309_p1, tmp_522_fu_3392_p1, ap_block_pp1_stage1, tmp_526_fu_3422_p1, ap_block_pp1_stage2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage2))) then 
            temphist_V_address1 <= tmp_526_fu_3422_p1(6 - 1 downto 0);
        elsif (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_boolean_0 = ap_block_pp1_stage1))) then 
            temphist_V_address1 <= tmp_522_fu_3392_p1(6 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            temphist_V_address1 <= tmp_516_fu_3356_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
            temphist_V_address1 <= ap_const_lv64_26(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
            temphist_V_address1 <= ap_const_lv64_0(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state83)) then 
            temphist_V_address1 <= ap_const_lv64_2(6 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter31 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            temphist_V_address1 <= tmp_584_fu_3309_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            temphist_V_address1 <= ap_const_lv64_25(6 - 1 downto 0);
        else 
            temphist_V_address1 <= "XXXXXX";
        end if; 
    end process;


    temphist_V_ce0_assign_proc : process(ap_CS_fsm_state83, ap_CS_fsm_state84, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_11001, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter31, ap_CS_fsm_state85)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state85) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state83) or ((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter31 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            temphist_V_ce0 <= ap_const_logic_1;
        else 
            temphist_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    temphist_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_state83, ap_CS_fsm_state84, ap_CS_fsm_state17, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_11001, ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage2, ap_block_pp1_stage2_11001, ap_enable_reg_pp0_iter31, ap_CS_fsm_state85)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state85) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state83) or ((ap_const_boolean_0 = ap_block_pp1_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_enable_reg_pp0_iter31 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            temphist_V_ce1 <= ap_const_logic_1;
        else 
            temphist_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    temphist_V_d0_assign_proc : process(ap_CS_fsm_state84, reg_854, ap_CS_fsm_state16, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter31, ap_CS_fsm_state85, ap_block_pp0_stage1, p_Val2_106_fu_3322_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state85) or (ap_const_logic_1 = ap_CS_fsm_state84))) then 
            temphist_V_d0 <= reg_854;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter31 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            temphist_V_d0 <= p_Val2_106_fu_3322_p2(47 downto 16);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            temphist_V_d0 <= ap_const_lv32_0;
        else 
            temphist_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    temphist_V_we0_assign_proc : process(ap_CS_fsm_state84, ap_CS_fsm_state16, exitcond2_fu_1460_p2, or_cond4_reg_3713_pp0_iter31_reg, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter31, ap_CS_fsm_state85)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state85) or (ap_const_logic_1 = ap_CS_fsm_state84) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter31 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (or_cond4_reg_3713_pp0_iter31_reg = ap_const_lv1_1)) or ((exitcond2_fu_1460_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16)))) then 
            temphist_V_we0 <= ap_const_logic_1;
        else 
            temphist_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    temphist_V_we1_assign_proc : process(ap_CS_fsm_state84, ap_CS_fsm_state85)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state85) or (ap_const_logic_1 = ap_CS_fsm_state84))) then 
            temphist_V_we1 <= ap_const_logic_1;
        else 
            temphist_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    tmp32_V_48_fu_1047_p2 <= std_logic_vector(shift_left(unsigned(tmp32_V_fu_1034_p1),to_integer(unsigned('0' & tmp_654_cast_fu_1043_p1(31-1 downto 0)))));
    tmp32_V_49_fu_1111_p1 <= tmp_1251_fu_1105_p2(32 - 1 downto 0);
    tmp32_V_50_fu_1115_p3 <= 
        tmp32_V_48_fu_1047_p2 when (icmp_fu_1028_p2(0) = '1') else 
        tmp32_V_49_fu_1111_p1;
    tmp32_V_54_fu_2131_p2 <= std_logic_vector(shift_left(unsigned(p_Val2_185_fu_2107_p3),to_integer(unsigned('0' & num_zeros_7_fu_2123_p3(31-1 downto 0)))));
    tmp32_V_58_fu_1957_p2 <= std_logic_vector(shift_left(unsigned(p_Val2_186_fu_1933_p3),to_integer(unsigned('0' & num_zeros_8_fu_1949_p3(31-1 downto 0)))));
    tmp32_V_61_fu_2030_p1 <= p_Val2_170_fu_1972_p3(32 - 1 downto 0);
    tmp32_V_62_fu_2040_p2 <= std_logic_vector(shift_left(unsigned(tmp32_V_61_fu_2030_p1),to_integer(unsigned('0' & tmp_560_fu_2034_p2(31-1 downto 0)))));
    tmp32_V_63_fu_2066_p1 <= tmp_1292_fu_2060_p2(32 - 1 downto 0);
    tmp32_V_64_fu_2070_p3 <= 
        tmp32_V_62_fu_2040_p2 when (icmp19_fu_2024_p2(0) = '1') else 
        tmp32_V_63_fu_2066_p1;
    tmp32_V_68_fu_2942_p2 <= std_logic_vector(shift_left(unsigned(p_Val2_302_cast_fu_2920_p1),to_integer(unsigned('0' & num_zeros_10_fu_2934_p3(31-1 downto 0)))));
    tmp32_V_71_fu_1123_p1 <= grp_fu_829_p1;
    tmp32_V_72_fu_2169_p1 <= grp_fu_829_p1;
    tmp32_V_73_fu_2141_p1 <= grp_fu_829_p1;
    tmp32_V_74_fu_2155_p1 <= grp_fu_832_p1;
    tmp32_V_75_fu_2952_p1 <= grp_fu_832_p1;
    tmp32_V_fu_1034_p1 <= p_Val2_158_reg_3533(32 - 1 downto 0);
    tmp83_cast_cast_fu_1145_p3 <= 
        ap_const_lv8_60 when (tmp_494_fu_1137_p2(0) = '1') else 
        ap_const_lv8_5F;
    tmp84_fu_3479_p2 <= std_logic_vector(signed(p_Val2_172_cast_fu_3434_p1) + signed(p_Val2_106_cast_fu_3445_p1));
    tmp_1049_omax_V_load_fu_3508_p3 <= 
        tmp_527_fu_3491_p4 when (tmp_528_fu_3502_p2(0) = '1') else 
        omax_V_write_assign_reg_780;
    tmp_1237_fu_933_p1 <= tmp_490_fu_925_p3(32 - 1 downto 0);
    tmp_1238_fu_973_p1 <= tmp_492_fu_965_p3(32 - 1 downto 0);
    tmp_1239_fu_997_p1 <= msb_idx_fu_991_p2(31 - 1 downto 0);
    tmp_1241_fu_1018_p4 <= msb_idx_6_fu_1012_p3(30 downto 5);
    tmp_1243_fu_1053_p1 <= msb_idx_6_fu_1012_p3(7 - 1 downto 0);
    tmp_1244_fu_1057_p2 <= "1" when (unsigned(msb_idx_6_fu_1012_p3) < unsigned(ap_const_lv31_1F)) else "0";
    tmp_1245_fu_1063_p2 <= std_logic_vector(signed(ap_const_lv7_61) + signed(tmp_1243_fu_1053_p1));
    
    tmp_1246_fu_1069_p4_proc : process(p_Val2_165_cast_fu_1009_p1)
    variable vlo_cpy : STD_LOGIC_VECTOR(96+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(96+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(96 - 1 downto 0);
    variable tmp_1246_fu_1069_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(96 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(96 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(96 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(7 - 1 downto 0) := ap_const_lv32_5F(7 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(7 - 1 downto 0) := ap_const_lv32_0(7 - 1 downto 0);
        v0_cpy := p_Val2_165_cast_fu_1009_p1;
        if (vlo_cpy(7 - 1 downto 0) > vhi_cpy(7 - 1 downto 0)) then
            vhi_cpy(7-1 downto 0) := std_logic_vector(96-1-unsigned(ap_const_lv32_0(7-1 downto 0)));
            vlo_cpy(7-1 downto 0) := std_logic_vector(96-1-unsigned(ap_const_lv32_5F(7-1 downto 0)));
            for tmp_1246_fu_1069_p4_i in 0 to 96-1 loop
                v0_cpy(tmp_1246_fu_1069_p4_i) := p_Val2_165_cast_fu_1009_p1(96-1-tmp_1246_fu_1069_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(7-1 downto 0)))));

        section := (others=>'0');
        section(7-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(7-1 downto 0)) - unsigned(vlo_cpy(7-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(96-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_1246_fu_1069_p4 <= resvalue(96-1 downto 0);
    end process;

    tmp_1247_fu_1079_p2 <= std_logic_vector(signed(ap_const_lv7_7E) - signed(tmp_1243_fu_1053_p1));
    tmp_1248_fu_1085_p3 <= 
        tmp_1246_fu_1069_p4 when (tmp_1244_fu_1057_p2(0) = '1') else 
        p_Val2_165_cast_fu_1009_p1;
    tmp_1249_fu_1093_p3 <= 
        tmp_1247_fu_1079_p2 when (tmp_1244_fu_1057_p2(0) = '1') else 
        tmp_1245_fu_1063_p2;
    tmp_1250_fu_1101_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1249_fu_1093_p3),96));
    tmp_1251_fu_1105_p2 <= std_logic_vector(shift_right(unsigned(tmp_1248_fu_1085_p3),to_integer(unsigned('0' & tmp_1250_fu_1101_p1(31-1 downto 0)))));
    tmp_1253_fu_1142_p1 <= msb_idx_reg_3539(8 - 1 downto 0);
    tmp_1254_fu_1192_p1 <= ireg_V_fu_1188_p1(63 - 1 downto 0);
    tmp_1256_fu_1214_p1 <= ireg_V_fu_1188_p1(52 - 1 downto 0);
    tmp_1257_fu_1293_p1 <= man_V_22_fu_1244_p3(32 - 1 downto 0);
    tmp_1258_fu_1303_p4 <= sh_amt_fu_1275_p3(11 downto 5);
    tmp_1259_fu_1329_p1 <= tmp_505_fu_1323_p2(32 - 1 downto 0);
    tmp_1260_fu_1495_p1 <= img_val_V_offset(3 - 1 downto 0);
    tmp_1261_fu_1525_p1 <= r_fu_1503_p2(10 - 1 downto 0);
    tmp_1262_fu_1537_p1 <= r_fu_1503_p2(10 - 1 downto 0);
    tmp_1263_fu_1541_p2 <= std_logic_vector(unsigned(ap_const_lv10_1) + unsigned(tmp_1262_fu_1537_p1));
    tmp_1264_fu_1555_p1 <= r_fu_1503_p2(10 - 1 downto 0);
    tmp_1265_fu_1559_p2 <= std_logic_vector(signed(ap_const_lv10_3FF) + signed(tmp_1264_fu_1555_p1));
    tmp_1266_fu_1606_p1 <= c_fu_1584_p2(18 - 1 downto 0);
    tmp_1267_fu_1610_p2 <= std_logic_vector(unsigned(ap_const_lv18_1) + unsigned(tmp_1266_fu_1606_p1));
    tmp_1268_fu_1631_p1 <= c_fu_1584_p2(18 - 1 downto 0);
    tmp_1269_fu_1635_p2 <= std_logic_vector(signed(ap_const_lv18_3FFFF) + signed(tmp_1268_fu_1631_p1));
    tmp_1270_fu_1656_p1 <= c_fu_1584_p2(18 - 1 downto 0);
    tmp_1272_fu_2137_p1 <= num_zeros_7_fu_2123_p3(8 - 1 downto 0);
    tmp_1274_fu_1963_p1 <= num_zeros_8_fu_1949_p3(8 - 1 downto 0);
    tmp_1275_fu_2619_p1 <= ireg_V_5_fu_2615_p1(63 - 1 downto 0);
    tmp_1277_fu_2641_p1 <= ireg_V_5_fu_2615_p1(52 - 1 downto 0);
    tmp_1278_fu_2720_p1 <= man_V_25_fu_2671_p3(32 - 1 downto 0);
    tmp_1279_fu_2730_p4 <= sh_amt_5_fu_2702_p3(11 downto 5);
    tmp_1280_fu_2756_p1 <= tmp_555_fu_2750_p2(32 - 1 downto 0);
    tmp_1282_fu_2888_p1 <= p_Val2_118_fu_2882_p3(31 - 1 downto 0);
    tmp_1283_fu_1807_p1 <= p_Val2_104_fu_1802_p2(63 - 1 downto 0);
    tmp_1286_fu_2004_p1 <= tmp_559_fu_1992_p3(8 - 1 downto 0);
    tmp_1287_fu_2014_p4 <= msb_idx_7_fu_2008_p2(31 downto 5);
    tmp_1289_fu_2046_p1 <= msb_idx_7_fu_2008_p2(6 - 1 downto 0);
    tmp_1290_fu_2050_p2 <= std_logic_vector(signed(ap_const_lv6_21) + signed(tmp_1289_fu_2046_p1));
    tmp_1291_fu_2056_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1290_fu_2050_p2),64));
    tmp_1292_fu_2060_p2 <= std_logic_vector(shift_right(unsigned(p_Val2_190_cast_fu_1978_p1),to_integer(unsigned('0' & tmp_1291_fu_2056_p1(31-1 downto 0)))));
    tmp_1294_fu_2335_p1 <= ireg_V_6_fu_2331_p1(63 - 1 downto 0);
    tmp_1296_fu_2357_p1 <= ireg_V_6_fu_2331_p1(52 - 1 downto 0);
    tmp_1297_fu_2436_p1 <= man_V_28_fu_2387_p3(32 - 1 downto 0);
    tmp_1298_fu_2446_p4 <= sh_amt_6_fu_2418_p3(11 downto 5);
    tmp_1299_fu_2472_p1 <= tmp_574_fu_2466_p2(32 - 1 downto 0);
    tmp_1301_fu_2948_p1 <= num_zeros_10_fu_2934_p3(8 - 1 downto 0);
    tmp_1307_fu_3242_p3 <= tmp_1704_i_i_i_fu_3230_p2(24 downto 24);
    tmp_1685_i_i_fu_3034_p2 <= "1" when (unsigned(loc_V_fu_3018_p4) > unsigned(ap_const_lv8_96)) else "0";
    tmp_1686_i_i_fu_3050_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(index_V_fu_3040_p4),64));
    tmp_1688_i_i_fu_3084_p2 <= (mask_table1_q0 xor ap_const_lv23_7FFFFF);
    tmp_1701_i_i_i_cast3_fu_3178_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1701_i_i_i_fu_3168_p4),79));
    tmp_1701_i_i_i_fu_3168_p4 <= ((ap_const_lv1_1 & loc_V_23_fu_3164_p1) & ap_const_lv1_0);
        tmp_1702_i_i_i_cast_fu_3206_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_1702_i_i_i_fu_3200_p2),9));

    tmp_1702_i_i_i_fu_3200_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) - unsigned(loc_V_22_fu_3154_p4));
    tmp_1703_i_i_i_fu_3226_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_assign_6_i_i_i_ca_fu_3218_p1),79));
    tmp_1704_i_i_i_fu_3230_p2 <= std_logic_vector(shift_right(unsigned(tmp_1701_i_i_i_fu_3168_p4),to_integer(unsigned('0' & sh_assign_6_i_i_i_ca_6_fu_3222_p1(25-1 downto 0)))));
    tmp_1705_i_i_i_fu_3236_p2 <= std_logic_vector(shift_left(unsigned(tmp_1701_i_i_i_cast3_fu_3178_p1),to_integer(unsigned('0' & tmp_1703_i_i_i_fu_3226_p1(31-1 downto 0)))));
    tmp_264_cast_fu_1529_p3 <= (tmp_1261_fu_1525_p1 & ap_const_lv8_0);
    tmp_266_cast_fu_1547_p3 <= (tmp_1263_fu_1541_p2 & ap_const_lv8_0);
    tmp_268_cast_fu_1565_p3 <= (tmp_1265_fu_1559_p2 & ap_const_lv8_0);
        tmp_269_cast_fu_1621_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_269_fu_1616_p2),64));

    tmp_269_fu_1616_p2 <= std_logic_vector(unsigned(tmp_264_cast_reg_3678) + unsigned(tmp_1267_fu_1610_p2));
    tmp_270_cast_fu_1646_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_270_fu_1641_p2),64));
    tmp_270_fu_1641_p2 <= std_logic_vector(unsigned(tmp_264_cast_reg_3678) + unsigned(tmp_1269_fu_1635_p2));
        tmp_271_cast_fu_1761_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_271_fu_1757_p2),64));

    tmp_271_fu_1757_p2 <= std_logic_vector(unsigned(tmp_266_cast_reg_3684) + unsigned(tmp_1270_reg_3777));
    tmp_272_cast_fu_1775_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_272_fu_1771_p2),64));
    tmp_272_fu_1771_p2 <= std_logic_vector(unsigned(tmp_268_cast_reg_3689) + unsigned(tmp_1270_reg_3777));
    tmp_274_fu_3250_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1307_fu_3242_p3),32));
    tmp_275_fu_3254_p4 <= tmp_1705_i_i_i_fu_3236_p2(55 downto 24);
    tmp_386_fu_911_p4 <= p_Val2_158_fu_905_p3(63 downto 32);
    tmp_392_fu_3096_p4 <= p_Val2_121_fu_3075_p2(31 downto 23);
    
    tmp_490_fu_925_p3_proc : process(p_Result_42_fu_921_p1)
    begin
        tmp_490_fu_925_p3 <= std_logic_vector(to_unsigned(64, 64));
        for i in 64 - 1 downto 0 loop
            if p_Result_42_fu_921_p1(i) = '1' then
                tmp_490_fu_925_p3 <= std_logic_vector(to_unsigned(64-1-i,64));
                exit;
            end if;
        end loop;
    end process;

    tmp_491_fu_937_p2 <= "1" when (tmp_386_fu_911_p4 = ap_const_lv32_0) else "0";
    
    tmp_492_fu_965_p3_proc : process(p_Result_187_fu_953_p5)
    begin
        tmp_492_fu_965_p3 <= std_logic_vector(to_unsigned(64, 64));
        for i in 64 - 1 downto 0 loop
            if p_Result_187_fu_953_p5(i) = '1' then
                tmp_492_fu_965_p3 <= std_logic_vector(to_unsigned(64-1-i,64));
                exit;
            end if;
        end loop;
    end process;

    tmp_493_fu_1037_p2 <= std_logic_vector(unsigned(ap_const_lv31_1F) - unsigned(msb_idx_6_fu_1012_p3));
    tmp_494_fu_1137_p2 <= "0" when (p_Result_44_reg_3564 = ap_const_lv8_9E) else "1";
    tmp_495_fu_1159_p3 <= (is_neg_reg_3527 & p_Repl2_64_trunc_fu_1153_p2);
    tmp_496_fu_1224_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_V_reg_3580),12));
    tmp_497_fu_1227_p3 <= (ap_const_lv1_1 & tmp_1256_reg_3585);
    tmp_498_fu_1218_p2 <= "1" when (tmp_1254_fu_1192_p1 = ap_const_lv63_0) else "0";
    tmp_499_fu_1257_p2 <= "1" when (signed(F2_fu_1251_p2) > signed(ap_const_lv12_10)) else "0";
    tmp_500_fu_1263_p2 <= std_logic_vector(signed(ap_const_lv12_FF0) + signed(F2_fu_1251_p2));
    tmp_501_fu_1269_p2 <= std_logic_vector(unsigned(ap_const_lv12_10) - unsigned(F2_fu_1251_p2));
    tmp_502_fu_1287_p2 <= "1" when (F2_fu_1251_p2 = ap_const_lv12_10) else "0";
    tmp_503_fu_1297_p2 <= "1" when (unsigned(sh_amt_fu_1275_p3) < unsigned(ap_const_lv12_36)) else "0";
    tmp_504_fu_1319_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_amt_cast_fu_1283_p1),54));
    tmp_505_fu_1323_p2 <= std_logic_vector(shift_right(signed(man_V_22_fu_1244_p3),to_integer(unsigned('0' & tmp_504_fu_1319_p1(31-1 downto 0)))));
    tmp_506_fu_1340_p2 <= std_logic_vector(shift_left(unsigned(tmp_1257_fu_1293_p1),to_integer(unsigned('0' & sh_amt_cast_fu_1283_p1(31-1 downto 0)))));
    tmp_507_fu_1482_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFF) + signed(img_rows_read));
    tmp_508_fu_1487_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFF) + signed(img_cols_read));
    tmp_509_fu_1472_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_reg_750),64));
    tmp_510_fu_1498_p2 <= "1" when (signed(i1_reg_761) > signed(radius)) else "0";
    tmp_511_fu_1508_p2 <= "1" when (signed(r_fu_1503_p2) > signed(ap_const_lv32_0)) else "0";
    tmp_512_fu_1514_p2 <= "1" when (signed(r_fu_1503_p2) < signed(tmp_507_reg_3647)) else "0";
    tmp_513_fu_1573_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(i1_reg_761) * signed(i1_reg_761))), 32));
    tmp_515_fu_3350_p2 <= std_logic_vector(unsigned(ap_phi_mux_i2_phi_fu_796_p4) + unsigned(ap_const_lv6_3E));
    tmp_516_fu_3356_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_515_fu_3350_p2),64));
    tmp_517_fu_3361_p2 <= std_logic_vector(unsigned(ap_phi_mux_i2_phi_fu_796_p4) + unsigned(ap_const_lv6_2));
    tmp_518_fu_3367_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_517_fu_3361_p2),64));
        tmp_519_fu_3372_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(temphist_V_q1),33));

        tmp_520_fu_3376_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(temphist_V_q0),33));

    tmp_521_fu_3386_p2 <= std_logic_vector(unsigned(i2_reg_792) + unsigned(ap_const_lv6_3F));
    tmp_522_fu_3392_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_521_fu_3386_p2),64));
    tmp_523_fu_3403_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_13_fu_3397_p2),64));
        tmp_524_fu_3408_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(temphist_V_q1),33));

        tmp_525_fu_3412_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(temphist_V_q0),33));

    tmp_526_fu_3422_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i2_reg_792),64));
    tmp_527_fu_3491_p4 <= p_Val2_110_fu_3485_p2(47 downto 16);
    tmp_528_fu_3502_p2 <= "1" when (signed(tmp_527_fu_3491_p4) > signed(omax_V_write_assign_reg_780)) else "0";
    tmp_529_fu_1579_p2 <= "1" when (signed(ap_phi_mux_j6_phi_fu_774_p4) > signed(radius)) else "0";
    tmp_531_fu_1589_p2 <= "1" when (signed(c_fu_1584_p2) > signed(ap_const_lv32_0)) else "0";
    tmp_532_fu_1595_p2 <= "1" when (signed(c_fu_1584_p2) < signed(tmp_508_reg_3652)) else "0";
    tmp_533_fu_1914_p2 <= "1" when (p_Val2_114_fu_1845_p8 = p_Val2_115_fu_1882_p8) else "0";
    tmp_534_fu_2102_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(p_Val2_101_reg_3888));
    tmp_535_fu_2281_p2 <= "0" when (p_Result_48_reg_3971 = ap_const_lv8_9E) else "1";
    tmp_536_fu_2286_p2 <= std_logic_vector(signed(ap_const_lv8_8E) - signed(tmp_1272_reg_3941_pp0_iter2_reg));
    tmp_537_fu_2291_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_535_fu_2281_p2),8));
    tmp_538_fu_2301_p3 <= (is_neg_7_reg_3905_pp0_iter2_reg & p_Repl2_67_trunc_fu_2295_p2);
    tmp_539_fu_1785_p2 <= "1" when (p_Val2_111_fu_1697_p8 = p_Val2_112_fu_1734_p8) else "0";
    tmp_540_fu_1928_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(p_Val2_113_reg_3793));
    tmp_541_fu_2183_p2 <= "0" when (p_Result_51_reg_3951 = ap_const_lv8_9E) else "1";
    tmp_542_fu_2188_p2 <= std_logic_vector(signed(ap_const_lv8_8E) - signed(tmp_1274_reg_3916_pp0_iter2_reg));
    tmp_543_fu_2193_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_541_fu_2183_p2),8));
    tmp_544_fu_2203_p3 <= (is_neg_8_reg_3865_pp0_iter1_reg & p_Repl2_70_trunc_fu_2197_p2);
    tmp_546_fu_2651_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_V_5_reg_4044),12));
    tmp_547_fu_2654_p3 <= (ap_const_lv1_1 & tmp_1277_reg_4049);
    tmp_548_fu_2645_p2 <= "1" when (tmp_1275_fu_2619_p1 = ap_const_lv63_0) else "0";
    tmp_549_fu_2684_p2 <= "1" when (signed(F2_5_fu_2678_p2) > signed(ap_const_lv12_10)) else "0";
    tmp_550_fu_2690_p2 <= std_logic_vector(signed(ap_const_lv12_FF0) + signed(F2_5_fu_2678_p2));
    tmp_551_fu_2696_p2 <= std_logic_vector(unsigned(ap_const_lv12_10) - unsigned(F2_5_fu_2678_p2));
    tmp_552_fu_2714_p2 <= "1" when (F2_5_fu_2678_p2 = ap_const_lv12_10) else "0";
    tmp_553_fu_2724_p2 <= "1" when (unsigned(sh_amt_5_fu_2702_p3) < unsigned(ap_const_lv12_36)) else "0";
    tmp_554_fu_2746_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_amt_5_cast_fu_2710_p1),54));
    tmp_555_fu_2750_p2 <= std_logic_vector(shift_right(signed(man_V_25_fu_2671_p3),to_integer(unsigned('0' & tmp_554_fu_2746_p1(31-1 downto 0)))));
    tmp_556_fu_2767_p2 <= std_logic_vector(shift_left(unsigned(tmp_1278_fu_2720_p1),to_integer(unsigned('0' & sh_amt_5_cast_fu_2710_p1(31-1 downto 0)))));
    tmp_557_fu_1660_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(ap_phi_mux_j6_phi_fu_774_p4) * signed(ap_phi_mux_j6_phi_fu_774_p4))), 32));
    tmp_558_fu_1811_p2 <= "1" when (p_Val2_104_fu_1802_p2 = ap_const_lv64_0) else "0";
    
    tmp_559_fu_1992_p3_proc : process(p_Result_195_fu_1982_p4)
    begin
        tmp_559_fu_1992_p3 <= std_logic_vector(to_unsigned(64, 64));
        for i in 0 to 64 - 1 loop
            if p_Result_195_fu_1982_p4(i) = '1' then
                tmp_559_fu_1992_p3 <= std_logic_vector(to_unsigned(i,64));
                exit;
            end if;
        end loop;
    end process;

    tmp_560_fu_2034_p2 <= std_logic_vector(unsigned(ap_const_lv32_1F) - unsigned(msb_idx_7_fu_2008_p2));
    tmp_561_fu_2232_p2 <= "0" when (p_Result_55_reg_3961 = ap_const_lv8_9E) else "1";
    tmp_562_fu_2237_p2 <= std_logic_vector(signed(ap_const_lv8_AE) - signed(tmp_1286_reg_3921_pp0_iter2_reg));
    tmp_563_fu_2242_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_561_fu_2232_p2),8));
    tmp_564_fu_2252_p3 <= (is_neg_9_reg_3882_pp0_iter1_reg & p_Repl2_73_trunc_fu_2246_p2);
    tmp_565_fu_2367_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_V_6_reg_3997),12));
    tmp_566_fu_2370_p3 <= (ap_const_lv1_1 & tmp_1296_reg_4002);
    tmp_567_fu_2361_p2 <= "1" when (tmp_1294_fu_2335_p1 = ap_const_lv63_0) else "0";
    tmp_568_fu_2400_p2 <= "1" when (signed(F2_6_fu_2394_p2) > signed(ap_const_lv12_10)) else "0";
    tmp_569_fu_2406_p2 <= std_logic_vector(signed(ap_const_lv12_FF0) + signed(F2_6_fu_2394_p2));
    tmp_570_fu_2412_p2 <= std_logic_vector(unsigned(ap_const_lv12_10) - unsigned(F2_6_fu_2394_p2));
    tmp_571_fu_2430_p2 <= "1" when (F2_6_fu_2394_p2 = ap_const_lv12_10) else "0";
    tmp_572_fu_2440_p2 <= "1" when (unsigned(sh_amt_6_fu_2418_p3) < unsigned(ap_const_lv12_36)) else "0";
    tmp_573_fu_2462_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_amt_6_cast_fu_2426_p1),54));
    tmp_574_fu_2466_p2 <= std_logic_vector(shift_right(signed(man_V_28_fu_2387_p3),to_integer(unsigned('0' & tmp_573_fu_2462_p1(31-1 downto 0)))));
    tmp_575_fu_2483_p2 <= std_logic_vector(shift_left(unsigned(tmp_1297_fu_2436_p1),to_integer(unsigned('0' & sh_amt_6_cast_fu_2426_p1(31-1 downto 0)))));
    tmp_576_fu_2892_p2 <= "1" when (p_Val2_118_fu_2882_p3 = ap_const_lv32_0) else "0";
    tmp_577_fu_2966_p2 <= "0" when (p_Result_59_reg_4096 = ap_const_lv8_9E) else "1";
    tmp_578_fu_2971_p2 <= std_logic_vector(signed(ap_const_lv8_8E) - signed(tmp_1301_reg_4086_pp0_iter24_reg));
    tmp_579_fu_2976_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_577_fu_2966_p2),8));
    tmp_580_fu_2986_p3 <= (is_neg_10_reg_4076_pp0_iter24_reg & p_Repl2_76_trunc_fu_2980_p2);
    tmp_581_fu_3283_p2 <= "1" when (signed(p_Val2_189_fu_3277_p3) > signed(ap_const_lv32_23)) else "0";
    tmp_582_fu_3289_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFDC) + signed(p_Val2_189_fu_3277_p3));
    tmp_583_fu_3303_p2 <= std_logic_vector(unsigned(ap_const_lv32_2) + unsigned(bin_1_fu_3295_p3));
        tmp_584_fu_3309_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_583_fu_3303_p2),64));

    tmp_585_fu_3314_p3 <= (temphist_V_q1 & ap_const_lv16_0);
    tmp_649_cast_fu_900_p2 <= std_logic_vector(unsigned(ap_const_lv64_0) - unsigned(tmp_reg_3516));
    tmp_654_cast_fu_1043_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_493_fu_1037_p2),32));
    tmp_710_cast_fu_1908_p0 <= tmp_8_fu_1905_p1(32 - 1 downto 0);
    tmp_710_cast_fu_1908_p1 <= tmp_8_fu_1905_p1(32 - 1 downto 0);
    tmp_710_cast_fu_1908_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_710_cast_fu_1908_p0) * signed(tmp_710_cast_fu_1908_p1))), 48));
    tmp_711_cast_fu_2081_p0 <= tmp_9_fu_2078_p1(32 - 1 downto 0);
    tmp_711_cast_fu_2081_p1 <= tmp_9_fu_2078_p1(32 - 1 downto 0);
    tmp_711_cast_fu_2081_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_711_cast_fu_2081_p0) * signed(tmp_711_cast_fu_2081_p1))), 48));
    tmp_738_cast_fu_2906_p2 <= std_logic_vector(unsigned(ap_const_lv31_0) - unsigned(tmp_1282_fu_2888_p1));
    tmp_740_cast_fu_1967_p2 <= std_logic_vector(unsigned(ap_const_lv63_0) - unsigned(tmp_1283_reg_3871));
        tmp_8_fu_1905_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_113_reg_3793),48));

        tmp_9_fu_2078_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_101_reg_3888),48));

    tmp_fu_882_p1 <= p_Val2_s_fu_876_p2(64 - 1 downto 0);
    tmp_i_i9_fu_3028_p2 <= "1" when (unsigned(loc_V_fu_3018_p4) < unsigned(ap_const_lv8_7E)) else "0";
    tmp_i_i_i_i_cast_fu_3182_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loc_V_22_fu_3154_p4),9));
    tmp_s_fu_886_p2 <= "1" when (p_Val2_s_fu_876_p2 = ap_const_lv65_0) else "0";
    x_assign_71_fu_3135_p3 <= 
        x_assign_70_reg_4116 when (sel_tmp54_fu_3130_p2(0) = '1') else 
        sel_tmp52_fu_3121_p1;
    x_assign_fu_2225_p3 <= 
        ap_const_lv32_0 when (tmp_539_reg_3860_pp0_iter1_reg(0) = '1') else 
        f_20_fu_2221_p1;
    x_assign_s_fu_2274_p3 <= 
        ap_const_lv32_0 when (tmp_558_reg_3877_pp0_iter1_reg(0) = '1') else 
        f_22_fu_2270_p1;
    xs_sig_V_fu_3090_p2 <= (tmp_1688_i_i_fu_3084_p2 and loc_V_21_fu_3080_p1);
end behav;
