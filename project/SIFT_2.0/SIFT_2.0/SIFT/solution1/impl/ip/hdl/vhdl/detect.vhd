-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity detect is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    src_val_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    src_val_ce0 : OUT STD_LOGIC;
    src_val_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    src_rows_read : IN STD_LOGIC_VECTOR (31 downto 0);
    src_cols_read : IN STD_LOGIC_VECTOR (31 downto 0);
    keypoints_val_pt_x_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    keypoints_val_pt_x_ce0 : OUT STD_LOGIC;
    keypoints_val_pt_x_we0 : OUT STD_LOGIC;
    keypoints_val_pt_x_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    keypoints_val_pt_x_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    keypoints_val_pt_y_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    keypoints_val_pt_y_ce0 : OUT STD_LOGIC;
    keypoints_val_pt_y_we0 : OUT STD_LOGIC;
    keypoints_val_pt_y_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    keypoints_val_pt_y_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    keypoints_val_angle_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    keypoints_val_angle_V_ce0 : OUT STD_LOGIC;
    keypoints_val_angle_V_we0 : OUT STD_LOGIC;
    keypoints_val_angle_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    keypoints_val_angle_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    keypoints_val_sigma_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    keypoints_val_sigma_V_ce0 : OUT STD_LOGIC;
    keypoints_val_sigma_V_we0 : OUT STD_LOGIC;
    keypoints_val_sigma_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    keypoints_val_sigma_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    keypoints_val_octave_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    keypoints_val_octave_ce0 : OUT STD_LOGIC;
    keypoints_val_octave_we0 : OUT STD_LOGIC;
    keypoints_val_octave_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    keypoints_val_octave_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    keypoints_val_layer_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    keypoints_val_layer_ce0 : OUT STD_LOGIC;
    keypoints_val_layer_we0 : OUT STD_LOGIC;
    keypoints_val_layer_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    keypoints_val_layer_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    descriptors_val_val_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    descriptors_val_val_ce0 : OUT STD_LOGIC;
    descriptors_val_val_we0 : OUT STD_LOGIC;
    descriptors_val_val_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of detect is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (58 downto 0) := "00000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (58 downto 0) := "00000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (58 downto 0) := "00000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (58 downto 0) := "00000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (58 downto 0) := "00000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (58 downto 0) := "00000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (58 downto 0) := "00001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (58 downto 0) := "00010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (58 downto 0) := "00100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (58 downto 0) := "01000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (58 downto 0) := "10000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_40000000 : STD_LOGIC_VECTOR (31 downto 0) := "01000000000000000000000000000000";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_C0800000 : STD_LOGIC_VECTOR (31 downto 0) := "11000000100000000000000000000000";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_3F317218 : STD_LOGIC_VECTOR (31 downto 0) := "00111111001100010111001000011000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv32_100 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000000";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv8_7E : STD_LOGIC_VECTOR (7 downto 0) := "01111110";
    constant ap_const_lv8_96 : STD_LOGIC_VECTOR (7 downto 0) := "10010110";
    constant ap_const_lv23_7FFFFF : STD_LOGIC_VECTOR (22 downto 0) := "11111111111111111111111";
    constant ap_const_lv9_181 : STD_LOGIC_VECTOR (8 downto 0) := "110000001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv31_1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal mask_table1688_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal mask_table1688_ce0 : STD_LOGIC;
    signal mask_table1688_q0 : STD_LOGIC_VECTOR (22 downto 0);
    signal one_half_table2684_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal one_half_table2684_ce0 : STD_LOGIC;
    signal one_half_table2684_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_981_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_993 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state49 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state49 : signal is "none";
    signal grp_fu_972_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_999 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal ap_CS_fsm_state56 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state56 : signal is "none";
    signal tmp_s_fu_1039_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal gauss_pyr_0_rows_s_fu_1045_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal gauss_pyr_0_rows_s_reg_2541 : STD_LOGIC_VECTOR (31 downto 0);
    signal gauss_pyr_1_rows_s_fu_1067_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal gauss_pyr_1_rows_s_reg_2546 : STD_LOGIC_VECTOR (31 downto 0);
    signal gauss_pyr_2_rows_s_fu_1089_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal gauss_pyr_2_rows_s_reg_2551 : STD_LOGIC_VECTOR (31 downto 0);
    signal gauss_pyr_3_rows_s_fu_1111_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal gauss_pyr_3_rows_s_reg_2556 : STD_LOGIC_VECTOR (31 downto 0);
    signal gauss_pyr_4_rows_s_fu_1133_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal gauss_pyr_4_rows_s_reg_2561 : STD_LOGIC_VECTOR (31 downto 0);
    signal gauss_pyr_5_rows_s_fu_1155_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal gauss_pyr_5_rows_s_reg_2566 : STD_LOGIC_VECTOR (31 downto 0);
    signal gauss_pyr_0_cols_s_fu_1177_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal gauss_pyr_0_cols_s_reg_2571 : STD_LOGIC_VECTOR (31 downto 0);
    signal gauss_pyr_1_cols_s_fu_1199_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal gauss_pyr_1_cols_s_reg_2576 : STD_LOGIC_VECTOR (31 downto 0);
    signal gauss_pyr_2_cols_s_fu_1221_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal gauss_pyr_2_cols_s_reg_2581 : STD_LOGIC_VECTOR (31 downto 0);
    signal gauss_pyr_3_cols_s_fu_1243_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal gauss_pyr_3_cols_s_reg_2586 : STD_LOGIC_VECTOR (31 downto 0);
    signal gauss_pyr_4_cols_s_fu_1265_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal gauss_pyr_4_cols_s_reg_2591 : STD_LOGIC_VECTOR (31 downto 0);
    signal gauss_pyr_5_cols_s_fu_1287_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal gauss_pyr_5_cols_s_reg_2596 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_344_fu_1405_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal dog_pyr_rows_0_1_fu_1411_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_rows_0_1_reg_2669 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_rows_1_1_fu_1433_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_rows_1_1_reg_2674 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_rows_2_1_fu_1455_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_rows_2_1_reg_2679 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_rows_3_1_fu_1477_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_rows_3_1_reg_2684 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_rows_4_1_fu_1499_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_rows_4_1_reg_2689 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_cols_0_1_fu_1521_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_cols_0_1_reg_2694 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_cols_1_1_fu_1543_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_cols_1_1_reg_2699 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_cols_2_1_fu_1565_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_cols_2_1_reg_2704 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_cols_3_1_fu_1587_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_cols_3_1_reg_2709 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_cols_4_1_fu_1609_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_cols_4_1_reg_2714 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i_fu_1687_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_reg_2722 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_345_fu_1631_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_201_fu_1691_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_fu_988_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i_i_reg_2732 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal t_V_15_fu_1697_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_V_15_reg_2737 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal tmp_i_i1_fu_1711_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i1_reg_2743 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1685_i_i_fu_1717_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1685_i_i_reg_2749 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_01_i_i_fu_1818_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_01_i_i_reg_2764 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal grp_fu_967_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_63_reg_2769 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal p_Val2_117_fu_1961_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_117_reg_2774 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal o_1_fu_1978_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal o_1_reg_2782 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal grp_Resize_fu_908_ap_idle : STD_LOGIC;
    signal grp_Resize_fu_908_ap_ready : STD_LOGIC;
    signal grp_Resize_fu_908_ap_done : STD_LOGIC;
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal grp_GaussianBlur15_fu_772_ap_idle : STD_LOGIC;
    signal grp_GaussianBlur15_fu_772_ap_ready : STD_LOGIC;
    signal grp_GaussianBlur15_fu_772_ap_done : STD_LOGIC;
    signal gauss_pyr_5_cols_1_reg_2810 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal grp_buildGaussianPyramid_fu_719_ap_idle : STD_LOGIC;
    signal grp_buildGaussianPyramid_fu_719_ap_ready : STD_LOGIC;
    signal grp_buildGaussianPyramid_fu_719_ap_done : STD_LOGIC;
    signal gauss_pyr_4_cols_1_reg_2818 : STD_LOGIC_VECTOR (31 downto 0);
    signal gauss_pyr_3_cols_1_reg_2826 : STD_LOGIC_VECTOR (31 downto 0);
    signal gauss_pyr_2_cols_1_reg_2834 : STD_LOGIC_VECTOR (31 downto 0);
    signal gauss_pyr_1_cols_1_reg_2842 : STD_LOGIC_VECTOR (31 downto 0);
    signal gauss_pyr_5_rows_1_reg_2850 : STD_LOGIC_VECTOR (31 downto 0);
    signal gauss_pyr_4_rows_1_reg_2858 : STD_LOGIC_VECTOR (31 downto 0);
    signal gauss_pyr_3_rows_1_reg_2866 : STD_LOGIC_VECTOR (31 downto 0);
    signal gauss_pyr_2_rows_1_reg_2874 : STD_LOGIC_VECTOR (31 downto 0);
    signal gauss_pyr_1_rows_1_reg_2882 : STD_LOGIC_VECTOR (31 downto 0);
    signal gauss_pyr_0_rows_1_reg_2890 : STD_LOGIC_VECTOR (31 downto 0);
    signal gauss_pyr_0_cols_1_reg_2897 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_0_rows_reg_2904 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal grp_buildDoGPyramid_fu_922_ap_idle : STD_LOGIC;
    signal grp_buildDoGPyramid_fu_922_ap_ready : STD_LOGIC;
    signal grp_buildDoGPyramid_fu_922_ap_done : STD_LOGIC;
    signal dog_pyr_1_rows_reg_2910 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_2_rows_reg_2915 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_3_rows_reg_2920 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_4_rows_reg_2925 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_0_cols_reg_2930 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_1_cols_reg_2936 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_2_cols_reg_2941 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_3_cols_reg_2946 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_4_cols_reg_2951 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_findScaleSpaceExtrem_fu_781_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal idx1_reg_2956 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal grp_findScaleSpaceExtrem_fu_781_ap_idle : STD_LOGIC;
    signal grp_findScaleSpaceExtrem_fu_781_ap_ready : STD_LOGIC;
    signal grp_findScaleSpaceExtrem_fu_781_ap_done : STD_LOGIC;
    signal tmp_748_i_fu_2111_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_748_i_reg_2965 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal tmp_i1_fu_2106_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal keypoints_val_octave_3_reg_2983 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal keypoints_val_layer_1_reg_2988 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_350_fu_2121_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_350_reg_2993 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_351_fu_2133_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_351_reg_2998 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_assign1_fu_2145_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal ap_CS_fsm_state46 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state46 : signal is "none";
    signal keypoints_val_pt_x_l_reg_3018 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state47 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state47 : signal is "none";
    signal keypoints_val_pt_y_l_reg_3023 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_750_i1_fu_2149_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state48 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state48 : signal is "none";
    signal grp_pow_generic_float_s_fu_887_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal scale_reg_3038 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_985_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_752_i_reg_3044 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_977_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_65_reg_3049 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state57 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state57 : signal is "none";
    signal p_Val2_118_fu_2293_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_118_reg_3064 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_119_fu_2436_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_119_reg_3069 : STD_LOGIC_VECTOR (31 downto 0);
    signal angle_V_reg_3074 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state58 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state58 : signal is "none";
    signal sigma_V_reg_3079 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_fu_2444_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_reg_3084 : STD_LOGIC_VECTOR (31 downto 0);
    signal base_val_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal base_val_V_ce0 : STD_LOGIC;
    signal base_val_V_we0 : STD_LOGIC;
    signal base_val_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal base_val_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal gauss_pyr_0_val_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal gauss_pyr_0_val_V_ce0 : STD_LOGIC;
    signal gauss_pyr_0_val_V_we0 : STD_LOGIC;
    signal gauss_pyr_0_val_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal gauss_pyr_0_val_V_address1 : STD_LOGIC_VECTOR (15 downto 0);
    signal gauss_pyr_0_val_V_ce1 : STD_LOGIC;
    signal gauss_pyr_0_val_V_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal gauss_pyr_1_val_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal gauss_pyr_1_val_V_ce0 : STD_LOGIC;
    signal gauss_pyr_1_val_V_q0 : STD_LOGIC_VECTOR (25 downto 0);
    signal gauss_pyr_1_val_V_address1 : STD_LOGIC_VECTOR (15 downto 0);
    signal gauss_pyr_1_val_V_ce1 : STD_LOGIC;
    signal gauss_pyr_1_val_V_we1 : STD_LOGIC;
    signal gauss_pyr_1_val_V_q1 : STD_LOGIC_VECTOR (25 downto 0);
    signal gauss_pyr_2_val_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal gauss_pyr_2_val_V_ce0 : STD_LOGIC;
    signal gauss_pyr_2_val_V_q0 : STD_LOGIC_VECTOR (25 downto 0);
    signal gauss_pyr_2_val_V_address1 : STD_LOGIC_VECTOR (15 downto 0);
    signal gauss_pyr_2_val_V_ce1 : STD_LOGIC;
    signal gauss_pyr_2_val_V_we1 : STD_LOGIC;
    signal gauss_pyr_2_val_V_q1 : STD_LOGIC_VECTOR (25 downto 0);
    signal gauss_pyr_3_val_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal gauss_pyr_3_val_V_ce0 : STD_LOGIC;
    signal gauss_pyr_3_val_V_q0 : STD_LOGIC_VECTOR (25 downto 0);
    signal gauss_pyr_3_val_V_address1 : STD_LOGIC_VECTOR (15 downto 0);
    signal gauss_pyr_3_val_V_ce1 : STD_LOGIC;
    signal gauss_pyr_3_val_V_we1 : STD_LOGIC;
    signal gauss_pyr_3_val_V_q1 : STD_LOGIC_VECTOR (25 downto 0);
    signal gauss_pyr_4_val_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal gauss_pyr_4_val_V_ce0 : STD_LOGIC;
    signal gauss_pyr_4_val_V_q0 : STD_LOGIC_VECTOR (25 downto 0);
    signal gauss_pyr_4_val_V_address1 : STD_LOGIC_VECTOR (15 downto 0);
    signal gauss_pyr_4_val_V_ce1 : STD_LOGIC;
    signal gauss_pyr_4_val_V_we1 : STD_LOGIC;
    signal gauss_pyr_4_val_V_q1 : STD_LOGIC_VECTOR (25 downto 0);
    signal gauss_pyr_5_val_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal gauss_pyr_5_val_V_ce0 : STD_LOGIC;
    signal gauss_pyr_5_val_V_we0 : STD_LOGIC;
    signal gauss_pyr_5_val_V_q0 : STD_LOGIC_VECTOR (25 downto 0);
    signal gauss_pyr_5_val_V_address1 : STD_LOGIC_VECTOR (15 downto 0);
    signal gauss_pyr_5_val_V_ce1 : STD_LOGIC;
    signal gauss_pyr_5_val_V_q1 : STD_LOGIC_VECTOR (25 downto 0);
    signal dog_pyr_0_val_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal dog_pyr_0_val_V_ce0 : STD_LOGIC;
    signal dog_pyr_0_val_V_we0 : STD_LOGIC;
    signal dog_pyr_0_val_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_0_val_V_ce1 : STD_LOGIC;
    signal dog_pyr_0_val_V_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_1_val_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal dog_pyr_1_val_V_ce0 : STD_LOGIC;
    signal dog_pyr_1_val_V_we0 : STD_LOGIC;
    signal dog_pyr_1_val_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_1_val_V_ce1 : STD_LOGIC;
    signal dog_pyr_1_val_V_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_2_val_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal dog_pyr_2_val_V_ce0 : STD_LOGIC;
    signal dog_pyr_2_val_V_we0 : STD_LOGIC;
    signal dog_pyr_2_val_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_2_val_V_ce1 : STD_LOGIC;
    signal dog_pyr_2_val_V_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_3_val_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal dog_pyr_3_val_V_ce0 : STD_LOGIC;
    signal dog_pyr_3_val_V_we0 : STD_LOGIC;
    signal dog_pyr_3_val_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_3_val_V_ce1 : STD_LOGIC;
    signal dog_pyr_3_val_V_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_4_val_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal dog_pyr_4_val_V_ce0 : STD_LOGIC;
    signal dog_pyr_4_val_V_we0 : STD_LOGIC;
    signal dog_pyr_4_val_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_4_val_V_ce1 : STD_LOGIC;
    signal dog_pyr_4_val_V_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_buildGaussianPyramid_fu_719_ap_start : STD_LOGIC;
    signal grp_buildGaussianPyramid_fu_719_src_val_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_buildGaussianPyramid_fu_719_src_val_V_ce0 : STD_LOGIC;
    signal grp_buildGaussianPyramid_fu_719_gauss_pyr_0_val_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_buildGaussianPyramid_fu_719_gauss_pyr_0_val_V_ce0 : STD_LOGIC;
    signal grp_buildGaussianPyramid_fu_719_gauss_pyr_0_val_V_we0 : STD_LOGIC;
    signal grp_buildGaussianPyramid_fu_719_gauss_pyr_0_val_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_buildGaussianPyramid_fu_719_gauss_pyr_1_val_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_buildGaussianPyramid_fu_719_gauss_pyr_1_val_V_ce0 : STD_LOGIC;
    signal grp_buildGaussianPyramid_fu_719_gauss_pyr_1_val_V_address1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_buildGaussianPyramid_fu_719_gauss_pyr_1_val_V_ce1 : STD_LOGIC;
    signal grp_buildGaussianPyramid_fu_719_gauss_pyr_1_val_V_we1 : STD_LOGIC;
    signal grp_buildGaussianPyramid_fu_719_gauss_pyr_1_val_V_d1 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_buildGaussianPyramid_fu_719_gauss_pyr_2_val_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_buildGaussianPyramid_fu_719_gauss_pyr_2_val_V_ce0 : STD_LOGIC;
    signal grp_buildGaussianPyramid_fu_719_gauss_pyr_2_val_V_address1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_buildGaussianPyramid_fu_719_gauss_pyr_2_val_V_ce1 : STD_LOGIC;
    signal grp_buildGaussianPyramid_fu_719_gauss_pyr_2_val_V_we1 : STD_LOGIC;
    signal grp_buildGaussianPyramid_fu_719_gauss_pyr_2_val_V_d1 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_buildGaussianPyramid_fu_719_gauss_pyr_3_val_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_buildGaussianPyramid_fu_719_gauss_pyr_3_val_V_ce0 : STD_LOGIC;
    signal grp_buildGaussianPyramid_fu_719_gauss_pyr_3_val_V_address1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_buildGaussianPyramid_fu_719_gauss_pyr_3_val_V_ce1 : STD_LOGIC;
    signal grp_buildGaussianPyramid_fu_719_gauss_pyr_3_val_V_we1 : STD_LOGIC;
    signal grp_buildGaussianPyramid_fu_719_gauss_pyr_3_val_V_d1 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_buildGaussianPyramid_fu_719_gauss_pyr_4_val_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_buildGaussianPyramid_fu_719_gauss_pyr_4_val_V_ce0 : STD_LOGIC;
    signal grp_buildGaussianPyramid_fu_719_gauss_pyr_4_val_V_address1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_buildGaussianPyramid_fu_719_gauss_pyr_4_val_V_ce1 : STD_LOGIC;
    signal grp_buildGaussianPyramid_fu_719_gauss_pyr_4_val_V_we1 : STD_LOGIC;
    signal grp_buildGaussianPyramid_fu_719_gauss_pyr_4_val_V_d1 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_buildGaussianPyramid_fu_719_gauss_pyr_5_val_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_buildGaussianPyramid_fu_719_gauss_pyr_5_val_V_ce0 : STD_LOGIC;
    signal grp_buildGaussianPyramid_fu_719_gauss_pyr_5_val_V_we0 : STD_LOGIC;
    signal grp_buildGaussianPyramid_fu_719_gauss_pyr_5_val_V_d0 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_buildGaussianPyramid_fu_719_ap_return_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_buildGaussianPyramid_fu_719_ap_return_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_buildGaussianPyramid_fu_719_ap_return_2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_buildGaussianPyramid_fu_719_ap_return_3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_buildGaussianPyramid_fu_719_ap_return_4 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_buildGaussianPyramid_fu_719_ap_return_5 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_buildGaussianPyramid_fu_719_ap_return_6 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_buildGaussianPyramid_fu_719_ap_return_7 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_buildGaussianPyramid_fu_719_ap_return_8 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_buildGaussianPyramid_fu_719_ap_return_9 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_buildGaussianPyramid_fu_719_ap_return_10 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_buildGaussianPyramid_fu_719_ap_return_11 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_GaussianBlur15_fu_772_ap_start : STD_LOGIC;
    signal grp_GaussianBlur15_fu_772_src_val_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_GaussianBlur15_fu_772_src_val_ce0 : STD_LOGIC;
    signal grp_GaussianBlur15_fu_772_dst_val_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_GaussianBlur15_fu_772_dst_val_V_ce0 : STD_LOGIC;
    signal grp_GaussianBlur15_fu_772_dst_val_V_we0 : STD_LOGIC;
    signal grp_GaussianBlur15_fu_772_dst_val_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_GaussianBlur15_fu_772_ap_return_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_GaussianBlur15_fu_772_ap_return_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_findScaleSpaceExtrem_fu_781_ap_start : STD_LOGIC;
    signal grp_findScaleSpaceExtrem_fu_781_gauss_pyr_0_val_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_findScaleSpaceExtrem_fu_781_gauss_pyr_0_val_V_ce0 : STD_LOGIC;
    signal grp_findScaleSpaceExtrem_fu_781_gauss_pyr_0_val_V_address1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_findScaleSpaceExtrem_fu_781_gauss_pyr_0_val_V_ce1 : STD_LOGIC;
    signal grp_findScaleSpaceExtrem_fu_781_gauss_pyr_1_val_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_findScaleSpaceExtrem_fu_781_gauss_pyr_1_val_V_ce0 : STD_LOGIC;
    signal grp_findScaleSpaceExtrem_fu_781_gauss_pyr_1_val_V_address1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_findScaleSpaceExtrem_fu_781_gauss_pyr_1_val_V_ce1 : STD_LOGIC;
    signal grp_findScaleSpaceExtrem_fu_781_gauss_pyr_2_val_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_findScaleSpaceExtrem_fu_781_gauss_pyr_2_val_V_ce0 : STD_LOGIC;
    signal grp_findScaleSpaceExtrem_fu_781_gauss_pyr_2_val_V_address1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_findScaleSpaceExtrem_fu_781_gauss_pyr_2_val_V_ce1 : STD_LOGIC;
    signal grp_findScaleSpaceExtrem_fu_781_gauss_pyr_3_val_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_findScaleSpaceExtrem_fu_781_gauss_pyr_3_val_V_ce0 : STD_LOGIC;
    signal grp_findScaleSpaceExtrem_fu_781_gauss_pyr_3_val_V_address1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_findScaleSpaceExtrem_fu_781_gauss_pyr_3_val_V_ce1 : STD_LOGIC;
    signal grp_findScaleSpaceExtrem_fu_781_gauss_pyr_4_val_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_findScaleSpaceExtrem_fu_781_gauss_pyr_4_val_V_ce0 : STD_LOGIC;
    signal grp_findScaleSpaceExtrem_fu_781_gauss_pyr_4_val_V_address1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_findScaleSpaceExtrem_fu_781_gauss_pyr_4_val_V_ce1 : STD_LOGIC;
    signal grp_findScaleSpaceExtrem_fu_781_gauss_pyr_5_val_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_findScaleSpaceExtrem_fu_781_gauss_pyr_5_val_V_ce0 : STD_LOGIC;
    signal grp_findScaleSpaceExtrem_fu_781_gauss_pyr_5_val_V_address1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_findScaleSpaceExtrem_fu_781_gauss_pyr_5_val_V_ce1 : STD_LOGIC;
    signal grp_findScaleSpaceExtrem_fu_781_dog_pyr_0_val_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_findScaleSpaceExtrem_fu_781_dog_pyr_0_val_V_ce0 : STD_LOGIC;
    signal grp_findScaleSpaceExtrem_fu_781_dog_pyr_0_val_V_address1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_findScaleSpaceExtrem_fu_781_dog_pyr_0_val_V_ce1 : STD_LOGIC;
    signal grp_findScaleSpaceExtrem_fu_781_dog_pyr_1_val_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_findScaleSpaceExtrem_fu_781_dog_pyr_1_val_V_ce0 : STD_LOGIC;
    signal grp_findScaleSpaceExtrem_fu_781_dog_pyr_1_val_V_address1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_findScaleSpaceExtrem_fu_781_dog_pyr_1_val_V_ce1 : STD_LOGIC;
    signal grp_findScaleSpaceExtrem_fu_781_dog_pyr_2_val_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_findScaleSpaceExtrem_fu_781_dog_pyr_2_val_V_ce0 : STD_LOGIC;
    signal grp_findScaleSpaceExtrem_fu_781_dog_pyr_2_val_V_address1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_findScaleSpaceExtrem_fu_781_dog_pyr_2_val_V_ce1 : STD_LOGIC;
    signal grp_findScaleSpaceExtrem_fu_781_dog_pyr_3_val_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_findScaleSpaceExtrem_fu_781_dog_pyr_3_val_V_ce0 : STD_LOGIC;
    signal grp_findScaleSpaceExtrem_fu_781_dog_pyr_3_val_V_address1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_findScaleSpaceExtrem_fu_781_dog_pyr_3_val_V_ce1 : STD_LOGIC;
    signal grp_findScaleSpaceExtrem_fu_781_dog_pyr_4_val_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_findScaleSpaceExtrem_fu_781_dog_pyr_4_val_V_ce0 : STD_LOGIC;
    signal grp_findScaleSpaceExtrem_fu_781_dog_pyr_4_val_V_address1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_findScaleSpaceExtrem_fu_781_dog_pyr_4_val_V_ce1 : STD_LOGIC;
    signal grp_findScaleSpaceExtrem_fu_781_keypoints_val_pt_x_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_findScaleSpaceExtrem_fu_781_keypoints_val_pt_x_ce0 : STD_LOGIC;
    signal grp_findScaleSpaceExtrem_fu_781_keypoints_val_pt_x_we0 : STD_LOGIC;
    signal grp_findScaleSpaceExtrem_fu_781_keypoints_val_pt_x_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_findScaleSpaceExtrem_fu_781_keypoints_val_pt_y_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_findScaleSpaceExtrem_fu_781_keypoints_val_pt_y_ce0 : STD_LOGIC;
    signal grp_findScaleSpaceExtrem_fu_781_keypoints_val_pt_y_we0 : STD_LOGIC;
    signal grp_findScaleSpaceExtrem_fu_781_keypoints_val_pt_y_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_findScaleSpaceExtrem_fu_781_keypoints_val_angle_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_findScaleSpaceExtrem_fu_781_keypoints_val_angle_V_ce0 : STD_LOGIC;
    signal grp_findScaleSpaceExtrem_fu_781_keypoints_val_angle_V_we0 : STD_LOGIC;
    signal grp_findScaleSpaceExtrem_fu_781_keypoints_val_angle_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_findScaleSpaceExtrem_fu_781_keypoints_val_sigma_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_findScaleSpaceExtrem_fu_781_keypoints_val_sigma_V_ce0 : STD_LOGIC;
    signal grp_findScaleSpaceExtrem_fu_781_keypoints_val_sigma_V_we0 : STD_LOGIC;
    signal grp_findScaleSpaceExtrem_fu_781_keypoints_val_sigma_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_findScaleSpaceExtrem_fu_781_keypoints_val_octave_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_findScaleSpaceExtrem_fu_781_keypoints_val_octave_ce0 : STD_LOGIC;
    signal grp_findScaleSpaceExtrem_fu_781_keypoints_val_octave_we0 : STD_LOGIC;
    signal grp_findScaleSpaceExtrem_fu_781_keypoints_val_octave_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_findScaleSpaceExtrem_fu_781_keypoints_val_layer_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_findScaleSpaceExtrem_fu_781_keypoints_val_layer_ce0 : STD_LOGIC;
    signal grp_findScaleSpaceExtrem_fu_781_keypoints_val_layer_we0 : STD_LOGIC;
    signal grp_findScaleSpaceExtrem_fu_781_keypoints_val_layer_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_calcSIFTDescriptor12_fu_852_ap_start : STD_LOGIC;
    signal grp_calcSIFTDescriptor12_fu_852_ap_done : STD_LOGIC;
    signal grp_calcSIFTDescriptor12_fu_852_ap_idle : STD_LOGIC;
    signal grp_calcSIFTDescriptor12_fu_852_ap_ready : STD_LOGIC;
    signal grp_calcSIFTDescriptor12_fu_852_img_0_val_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_calcSIFTDescriptor12_fu_852_img_0_val_V_ce0 : STD_LOGIC;
    signal grp_calcSIFTDescriptor12_fu_852_img_0_val_V_address1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_calcSIFTDescriptor12_fu_852_img_0_val_V_ce1 : STD_LOGIC;
    signal grp_calcSIFTDescriptor12_fu_852_img_1_val_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_calcSIFTDescriptor12_fu_852_img_1_val_V_ce0 : STD_LOGIC;
    signal grp_calcSIFTDescriptor12_fu_852_img_1_val_V_address1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_calcSIFTDescriptor12_fu_852_img_1_val_V_ce1 : STD_LOGIC;
    signal grp_calcSIFTDescriptor12_fu_852_img_2_val_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_calcSIFTDescriptor12_fu_852_img_2_val_V_ce0 : STD_LOGIC;
    signal grp_calcSIFTDescriptor12_fu_852_img_2_val_V_address1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_calcSIFTDescriptor12_fu_852_img_2_val_V_ce1 : STD_LOGIC;
    signal grp_calcSIFTDescriptor12_fu_852_img_3_val_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_calcSIFTDescriptor12_fu_852_img_3_val_V_ce0 : STD_LOGIC;
    signal grp_calcSIFTDescriptor12_fu_852_img_3_val_V_address1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_calcSIFTDescriptor12_fu_852_img_3_val_V_ce1 : STD_LOGIC;
    signal grp_calcSIFTDescriptor12_fu_852_img_4_val_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_calcSIFTDescriptor12_fu_852_img_4_val_V_ce0 : STD_LOGIC;
    signal grp_calcSIFTDescriptor12_fu_852_img_4_val_V_address1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_calcSIFTDescriptor12_fu_852_img_4_val_V_ce1 : STD_LOGIC;
    signal grp_calcSIFTDescriptor12_fu_852_img_5_val_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_calcSIFTDescriptor12_fu_852_img_5_val_V_ce0 : STD_LOGIC;
    signal grp_calcSIFTDescriptor12_fu_852_img_5_val_V_address1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_calcSIFTDescriptor12_fu_852_img_5_val_V_ce1 : STD_LOGIC;
    signal grp_calcSIFTDescriptor12_fu_852_descriptor_val_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_calcSIFTDescriptor12_fu_852_descriptor_val_ce0 : STD_LOGIC;
    signal grp_calcSIFTDescriptor12_fu_852_descriptor_val_we0 : STD_LOGIC;
    signal grp_calcSIFTDescriptor12_fu_852_descriptor_val_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_pow_generic_float_s_fu_887_ap_start : STD_LOGIC;
    signal grp_pow_generic_float_s_fu_887_ap_done : STD_LOGIC;
    signal grp_pow_generic_float_s_fu_887_ap_idle : STD_LOGIC;
    signal grp_pow_generic_float_s_fu_887_ap_ready : STD_LOGIC;
    signal grp_Resize_fu_908_ap_start : STD_LOGIC;
    signal grp_Resize_fu_908_src_val_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_Resize_fu_908_src_val_V_ce0 : STD_LOGIC;
    signal grp_Resize_fu_908_dst_val_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_Resize_fu_908_dst_val_V_ce0 : STD_LOGIC;
    signal grp_Resize_fu_908_dst_val_V_we0 : STD_LOGIC;
    signal grp_Resize_fu_908_dst_val_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Resize_fu_908_ap_return_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Resize_fu_908_ap_return_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_buildDoGPyramid_fu_922_ap_start : STD_LOGIC;
    signal grp_buildDoGPyramid_fu_922_gauss_pyr_0_val_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_buildDoGPyramid_fu_922_gauss_pyr_0_val_V_ce0 : STD_LOGIC;
    signal grp_buildDoGPyramid_fu_922_gauss_pyr_1_val_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_buildDoGPyramid_fu_922_gauss_pyr_1_val_V_ce0 : STD_LOGIC;
    signal grp_buildDoGPyramid_fu_922_gauss_pyr_2_val_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_buildDoGPyramid_fu_922_gauss_pyr_2_val_V_ce0 : STD_LOGIC;
    signal grp_buildDoGPyramid_fu_922_gauss_pyr_3_val_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_buildDoGPyramid_fu_922_gauss_pyr_3_val_V_ce0 : STD_LOGIC;
    signal grp_buildDoGPyramid_fu_922_gauss_pyr_4_val_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_buildDoGPyramid_fu_922_gauss_pyr_4_val_V_ce0 : STD_LOGIC;
    signal grp_buildDoGPyramid_fu_922_gauss_pyr_5_val_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_buildDoGPyramid_fu_922_gauss_pyr_5_val_V_ce0 : STD_LOGIC;
    signal grp_buildDoGPyramid_fu_922_dog_pyr_0_val_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_buildDoGPyramid_fu_922_dog_pyr_0_val_V_ce0 : STD_LOGIC;
    signal grp_buildDoGPyramid_fu_922_dog_pyr_0_val_V_we0 : STD_LOGIC;
    signal grp_buildDoGPyramid_fu_922_dog_pyr_0_val_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_buildDoGPyramid_fu_922_dog_pyr_1_val_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_buildDoGPyramid_fu_922_dog_pyr_1_val_V_ce0 : STD_LOGIC;
    signal grp_buildDoGPyramid_fu_922_dog_pyr_1_val_V_we0 : STD_LOGIC;
    signal grp_buildDoGPyramid_fu_922_dog_pyr_1_val_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_buildDoGPyramid_fu_922_dog_pyr_2_val_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_buildDoGPyramid_fu_922_dog_pyr_2_val_V_ce0 : STD_LOGIC;
    signal grp_buildDoGPyramid_fu_922_dog_pyr_2_val_V_we0 : STD_LOGIC;
    signal grp_buildDoGPyramid_fu_922_dog_pyr_2_val_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_buildDoGPyramid_fu_922_dog_pyr_3_val_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_buildDoGPyramid_fu_922_dog_pyr_3_val_V_ce0 : STD_LOGIC;
    signal grp_buildDoGPyramid_fu_922_dog_pyr_3_val_V_we0 : STD_LOGIC;
    signal grp_buildDoGPyramid_fu_922_dog_pyr_3_val_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_buildDoGPyramid_fu_922_dog_pyr_4_val_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_buildDoGPyramid_fu_922_dog_pyr_4_val_V_ce0 : STD_LOGIC;
    signal grp_buildDoGPyramid_fu_922_dog_pyr_4_val_V_we0 : STD_LOGIC;
    signal grp_buildDoGPyramid_fu_922_dog_pyr_4_val_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_buildDoGPyramid_fu_922_ap_return_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_buildDoGPyramid_fu_922_ap_return_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_buildDoGPyramid_fu_922_ap_return_2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_buildDoGPyramid_fu_922_ap_return_3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_buildDoGPyramid_fu_922_ap_return_4 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_buildDoGPyramid_fu_922_ap_return_5 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_buildDoGPyramid_fu_922_ap_return_6 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_buildDoGPyramid_fu_922_ap_return_7 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_buildDoGPyramid_fu_922_ap_return_8 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_buildDoGPyramid_fu_922_ap_return_9 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_reg_422 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_342_fu_1309_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_343_reg_433 : STD_LOGIC_VECTOR (2 downto 0);
    signal gauss_pyr_5_cols_2_reg_444 : STD_LOGIC_VECTOR (31 downto 0);
    signal gauss_pyr_4_cols_2_reg_454 : STD_LOGIC_VECTOR (31 downto 0);
    signal gauss_pyr_3_cols_2_reg_464 : STD_LOGIC_VECTOR (31 downto 0);
    signal gauss_pyr_2_cols_2_reg_474 : STD_LOGIC_VECTOR (31 downto 0);
    signal gauss_pyr_1_cols_2_reg_484 : STD_LOGIC_VECTOR (31 downto 0);
    signal gauss_pyr_0_cols_2_reg_494 : STD_LOGIC_VECTOR (31 downto 0);
    signal gauss_pyr_5_rows_2_reg_504 : STD_LOGIC_VECTOR (31 downto 0);
    signal gauss_pyr_4_rows_2_reg_514 : STD_LOGIC_VECTOR (31 downto 0);
    signal gauss_pyr_3_rows_2_reg_524 : STD_LOGIC_VECTOR (31 downto 0);
    signal gauss_pyr_2_rows_2_reg_534 : STD_LOGIC_VECTOR (31 downto 0);
    signal gauss_pyr_1_rows_2_reg_544 : STD_LOGIC_VECTOR (31 downto 0);
    signal gauss_pyr_0_rows_2_reg_554 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_cols_4_2_reg_564 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_cols_3_2_reg_574 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_cols_2_2_reg_584 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_cols_1_2_reg_594 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_cols_0_2_reg_604 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_rows_4_2_reg_614 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_rows_3_2_reg_624 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_rows_2_2_reg_634 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_rows_1_2_reg_644 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_rows_0_2_reg_654 : STD_LOGIC_VECTOR (31 downto 0);
    signal idx0_reg_664 : STD_LOGIC_VECTOR (31 downto 0);
    signal o_reg_676 : STD_LOGIC_VECTOR (30 downto 0);
    signal base_cols_1_reg_688 : STD_LOGIC_VECTOR (31 downto 0);
    signal base_rows_1_reg_698 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_i_reg_708 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state59 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state59 : signal is "none";
    signal grp_buildGaussianPyramid_fu_719_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal grp_GaussianBlur15_fu_772_ap_start_reg : STD_LOGIC := '0';
    signal tmp_347_fu_1973_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_348_fu_1984_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_findScaleSpaceExtrem_fu_781_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal grp_calcSIFTDescriptor12_fu_852_ap_start_reg : STD_LOGIC := '0';
    signal grp_pow_generic_float_s_fu_887_ap_start_reg : STD_LOGIC := '0';
    signal ap_NS_fsm : STD_LOGIC_VECTOR (58 downto 0);
    signal ap_NS_fsm_state38 : STD_LOGIC;
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal grp_Resize_fu_908_ap_start_reg : STD_LOGIC := '0';
    signal grp_buildDoGPyramid_fu_922_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal tmp_1686_i_i_fu_1733_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal gauss_pyr_0_rows_fu_170 : STD_LOGIC_VECTOR (31 downto 0);
    signal gauss_pyr_1_rows_fu_174 : STD_LOGIC_VECTOR (31 downto 0);
    signal gauss_pyr_2_rows_fu_178 : STD_LOGIC_VECTOR (31 downto 0);
    signal gauss_pyr_3_rows_fu_182 : STD_LOGIC_VECTOR (31 downto 0);
    signal gauss_pyr_4_rows_fu_186 : STD_LOGIC_VECTOR (31 downto 0);
    signal gauss_pyr_5_rows_fu_190 : STD_LOGIC_VECTOR (31 downto 0);
    signal gauss_pyr_0_cols_fu_194 : STD_LOGIC_VECTOR (31 downto 0);
    signal gauss_pyr_1_cols_fu_198 : STD_LOGIC_VECTOR (31 downto 0);
    signal gauss_pyr_2_cols_fu_202 : STD_LOGIC_VECTOR (31 downto 0);
    signal gauss_pyr_3_cols_fu_206 : STD_LOGIC_VECTOR (31 downto 0);
    signal gauss_pyr_4_cols_fu_210 : STD_LOGIC_VECTOR (31 downto 0);
    signal gauss_pyr_5_cols_fu_214 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_rows_fu_266 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_rows_1_fu_270 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_rows_2_fu_274 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_rows_3_fu_278 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_rows_4_fu_282 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_cols_fu_286 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_cols_1_fu_290 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_cols_2_fu_294 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_cols_3_fu_298 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_cols_4_fu_302 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal grp_fu_972_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_972_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state50 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state50 : signal is "none";
    signal grp_fu_981_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_985_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal loc_V_fu_1701_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal index_V_fu_1723_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_Result_s_fu_1739_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal one_half_i_i_cast_fu_1754_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_101_fu_1758_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal loc_V_11_fu_1763_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_1688_i_i_fu_1767_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_346_fu_1779_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal xs_sig_V_fu_1773_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Result_134_fu_1746_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_135_fu_1789_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp_v_fu_1797_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp1_fu_1808_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_fu_1813_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_fu_1804_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_103_fu_1826_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal loc_V_13_fu_1847_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_1701_i_i_i_fu_1851_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal loc_V_12_fu_1837_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_i_i_i_i_cast_fu_1865_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_assign_fu_1869_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_1702_i_i_i_fu_1883_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal isNeg_fu_1875_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1702_i_i_i_cast_fu_1889_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_assign_5_fu_1893_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_assign_6_i_i_i_ca_fu_1901_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sh_assign_6_i_i_i_ca_2_fu_1905_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_1701_i_i_i_cast1_fu_1861_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_1703_i_i_i_fu_1909_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_1704_i_i_i_fu_1913_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_1104_fu_1925_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1705_i_i_i_fu_1919_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_186_fu_1933_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_187_fu_1937_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_105_fu_1947_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_136_fu_1829_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_i_i_i_fu_1955_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal o_cast_fu_1969_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1113_fu_2117_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Val2_108_fu_2157_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal loc_V_15_fu_2179_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_1701_i_i_i_i_fu_2183_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal loc_V_14_fu_2169_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_i_i_i_i_cast_i_fu_2197_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_assign_6_fu_2201_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_1702_i_i_i_i_fu_2215_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal isNeg_1_fu_2207_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1702_i_i_i_cast_s_fu_2221_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_assign_7_fu_2225_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_assign_6_i_i_i_ca_3_fu_2233_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sh_assign_6_i_i_i_ca_4_fu_2237_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_1701_i_i_i_cast4_fu_2193_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_1703_i_i_i_i_fu_2241_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_1704_i_i_i_i_fu_2245_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_1108_fu_2257_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1705_i_i_i_i_fu_2251_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_190_fu_2265_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_191_fu_2269_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_110_fu_2279_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_137_fu_2161_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_i_i_i_i_fu_2287_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_s_fu_2301_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal loc_V_17_fu_2322_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_1701_i_i_i1_i_fu_2326_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal loc_V_16_fu_2312_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_i_i_i_i35_cast_i_fu_2340_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_assign_8_fu_2344_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_1702_i_i_i1_i_fu_2358_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal isNeg_2_fu_2350_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1702_i_i_i38_cas_fu_2364_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_assign_9_fu_2368_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_assign_6_i_i_i39_s_fu_2376_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sh_assign_6_i_i_i39_1_fu_2380_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_1701_i_i_i34_cas_fu_2336_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_1703_i_i_i1_i_fu_2384_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_1704_i_i_i1_i_fu_2388_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_1112_fu_2400_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1705_i_i_i1_i_fu_2394_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_194_fu_2408_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_195_fu_2412_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_114_fu_2422_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_138_fu_2304_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_i_i_i1_i_fu_2430_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_return_0_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_return_1_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";

    component buildGaussianPyramid IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        src_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        src_val_V_ce0 : OUT STD_LOGIC;
        src_val_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        src_rows_read : IN STD_LOGIC_VECTOR (31 downto 0);
        src_cols_read : IN STD_LOGIC_VECTOR (31 downto 0);
        gauss_pyr_0_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        gauss_pyr_0_val_V_ce0 : OUT STD_LOGIC;
        gauss_pyr_0_val_V_we0 : OUT STD_LOGIC;
        gauss_pyr_0_val_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        gauss_pyr_0_val_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        gauss_pyr_1_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        gauss_pyr_1_val_V_ce0 : OUT STD_LOGIC;
        gauss_pyr_1_val_V_q0 : IN STD_LOGIC_VECTOR (25 downto 0);
        gauss_pyr_1_val_V_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        gauss_pyr_1_val_V_ce1 : OUT STD_LOGIC;
        gauss_pyr_1_val_V_we1 : OUT STD_LOGIC;
        gauss_pyr_1_val_V_d1 : OUT STD_LOGIC_VECTOR (25 downto 0);
        gauss_pyr_2_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        gauss_pyr_2_val_V_ce0 : OUT STD_LOGIC;
        gauss_pyr_2_val_V_q0 : IN STD_LOGIC_VECTOR (25 downto 0);
        gauss_pyr_2_val_V_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        gauss_pyr_2_val_V_ce1 : OUT STD_LOGIC;
        gauss_pyr_2_val_V_we1 : OUT STD_LOGIC;
        gauss_pyr_2_val_V_d1 : OUT STD_LOGIC_VECTOR (25 downto 0);
        gauss_pyr_3_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        gauss_pyr_3_val_V_ce0 : OUT STD_LOGIC;
        gauss_pyr_3_val_V_q0 : IN STD_LOGIC_VECTOR (25 downto 0);
        gauss_pyr_3_val_V_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        gauss_pyr_3_val_V_ce1 : OUT STD_LOGIC;
        gauss_pyr_3_val_V_we1 : OUT STD_LOGIC;
        gauss_pyr_3_val_V_d1 : OUT STD_LOGIC_VECTOR (25 downto 0);
        gauss_pyr_4_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        gauss_pyr_4_val_V_ce0 : OUT STD_LOGIC;
        gauss_pyr_4_val_V_q0 : IN STD_LOGIC_VECTOR (25 downto 0);
        gauss_pyr_4_val_V_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        gauss_pyr_4_val_V_ce1 : OUT STD_LOGIC;
        gauss_pyr_4_val_V_we1 : OUT STD_LOGIC;
        gauss_pyr_4_val_V_d1 : OUT STD_LOGIC_VECTOR (25 downto 0);
        gauss_pyr_5_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        gauss_pyr_5_val_V_ce0 : OUT STD_LOGIC;
        gauss_pyr_5_val_V_we0 : OUT STD_LOGIC;
        gauss_pyr_5_val_V_d0 : OUT STD_LOGIC_VECTOR (25 downto 0);
        gauss_pyr_0_rows_read : IN STD_LOGIC_VECTOR (31 downto 0);
        gauss_pyr_1_rows_read : IN STD_LOGIC_VECTOR (31 downto 0);
        gauss_pyr_2_rows_read : IN STD_LOGIC_VECTOR (31 downto 0);
        gauss_pyr_3_rows_read : IN STD_LOGIC_VECTOR (31 downto 0);
        gauss_pyr_4_rows_read : IN STD_LOGIC_VECTOR (31 downto 0);
        gauss_pyr_5_rows_read : IN STD_LOGIC_VECTOR (31 downto 0);
        gauss_pyr_0_cols_read : IN STD_LOGIC_VECTOR (31 downto 0);
        gauss_pyr_1_cols_read : IN STD_LOGIC_VECTOR (31 downto 0);
        gauss_pyr_2_cols_read : IN STD_LOGIC_VECTOR (31 downto 0);
        gauss_pyr_3_cols_read : IN STD_LOGIC_VECTOR (31 downto 0);
        gauss_pyr_4_cols_read : IN STD_LOGIC_VECTOR (31 downto 0);
        gauss_pyr_5_cols_read : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component GaussianBlur15 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        src_val_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        src_val_ce0 : OUT STD_LOGIC;
        src_val_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        src_rows_read : IN STD_LOGIC_VECTOR (31 downto 0);
        src_cols_read : IN STD_LOGIC_VECTOR (31 downto 0);
        dst_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        dst_val_V_ce0 : OUT STD_LOGIC;
        dst_val_V_we0 : OUT STD_LOGIC;
        dst_val_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component findScaleSpaceExtrem IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        gauss_pyr_0_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        gauss_pyr_0_val_V_ce0 : OUT STD_LOGIC;
        gauss_pyr_0_val_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        gauss_pyr_0_val_V_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        gauss_pyr_0_val_V_ce1 : OUT STD_LOGIC;
        gauss_pyr_0_val_V_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        gauss_pyr_1_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        gauss_pyr_1_val_V_ce0 : OUT STD_LOGIC;
        gauss_pyr_1_val_V_q0 : IN STD_LOGIC_VECTOR (25 downto 0);
        gauss_pyr_1_val_V_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        gauss_pyr_1_val_V_ce1 : OUT STD_LOGIC;
        gauss_pyr_1_val_V_q1 : IN STD_LOGIC_VECTOR (25 downto 0);
        gauss_pyr_2_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        gauss_pyr_2_val_V_ce0 : OUT STD_LOGIC;
        gauss_pyr_2_val_V_q0 : IN STD_LOGIC_VECTOR (25 downto 0);
        gauss_pyr_2_val_V_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        gauss_pyr_2_val_V_ce1 : OUT STD_LOGIC;
        gauss_pyr_2_val_V_q1 : IN STD_LOGIC_VECTOR (25 downto 0);
        gauss_pyr_3_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        gauss_pyr_3_val_V_ce0 : OUT STD_LOGIC;
        gauss_pyr_3_val_V_q0 : IN STD_LOGIC_VECTOR (25 downto 0);
        gauss_pyr_3_val_V_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        gauss_pyr_3_val_V_ce1 : OUT STD_LOGIC;
        gauss_pyr_3_val_V_q1 : IN STD_LOGIC_VECTOR (25 downto 0);
        gauss_pyr_4_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        gauss_pyr_4_val_V_ce0 : OUT STD_LOGIC;
        gauss_pyr_4_val_V_q0 : IN STD_LOGIC_VECTOR (25 downto 0);
        gauss_pyr_4_val_V_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        gauss_pyr_4_val_V_ce1 : OUT STD_LOGIC;
        gauss_pyr_4_val_V_q1 : IN STD_LOGIC_VECTOR (25 downto 0);
        gauss_pyr_5_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        gauss_pyr_5_val_V_ce0 : OUT STD_LOGIC;
        gauss_pyr_5_val_V_q0 : IN STD_LOGIC_VECTOR (25 downto 0);
        gauss_pyr_5_val_V_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        gauss_pyr_5_val_V_ce1 : OUT STD_LOGIC;
        gauss_pyr_5_val_V_q1 : IN STD_LOGIC_VECTOR (25 downto 0);
        gauss_pyr_0_rows_read : IN STD_LOGIC_VECTOR (31 downto 0);
        gauss_pyr_1_rows_read : IN STD_LOGIC_VECTOR (31 downto 0);
        gauss_pyr_2_rows_read : IN STD_LOGIC_VECTOR (31 downto 0);
        gauss_pyr_3_rows_read : IN STD_LOGIC_VECTOR (31 downto 0);
        gauss_pyr_4_rows_read : IN STD_LOGIC_VECTOR (31 downto 0);
        gauss_pyr_5_rows_read : IN STD_LOGIC_VECTOR (31 downto 0);
        gauss_pyr_0_cols_read : IN STD_LOGIC_VECTOR (31 downto 0);
        gauss_pyr_1_cols_read : IN STD_LOGIC_VECTOR (31 downto 0);
        gauss_pyr_2_cols_read : IN STD_LOGIC_VECTOR (31 downto 0);
        gauss_pyr_3_cols_read : IN STD_LOGIC_VECTOR (31 downto 0);
        gauss_pyr_4_cols_read : IN STD_LOGIC_VECTOR (31 downto 0);
        gauss_pyr_5_cols_read : IN STD_LOGIC_VECTOR (31 downto 0);
        dog_pyr_0_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        dog_pyr_0_val_V_ce0 : OUT STD_LOGIC;
        dog_pyr_0_val_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        dog_pyr_0_val_V_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        dog_pyr_0_val_V_ce1 : OUT STD_LOGIC;
        dog_pyr_0_val_V_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        dog_pyr_1_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        dog_pyr_1_val_V_ce0 : OUT STD_LOGIC;
        dog_pyr_1_val_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        dog_pyr_1_val_V_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        dog_pyr_1_val_V_ce1 : OUT STD_LOGIC;
        dog_pyr_1_val_V_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        dog_pyr_2_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        dog_pyr_2_val_V_ce0 : OUT STD_LOGIC;
        dog_pyr_2_val_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        dog_pyr_2_val_V_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        dog_pyr_2_val_V_ce1 : OUT STD_LOGIC;
        dog_pyr_2_val_V_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        dog_pyr_3_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        dog_pyr_3_val_V_ce0 : OUT STD_LOGIC;
        dog_pyr_3_val_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        dog_pyr_3_val_V_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        dog_pyr_3_val_V_ce1 : OUT STD_LOGIC;
        dog_pyr_3_val_V_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        dog_pyr_4_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        dog_pyr_4_val_V_ce0 : OUT STD_LOGIC;
        dog_pyr_4_val_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        dog_pyr_4_val_V_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        dog_pyr_4_val_V_ce1 : OUT STD_LOGIC;
        dog_pyr_4_val_V_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        dog_pyr_0_rows_read : IN STD_LOGIC_VECTOR (31 downto 0);
        dog_pyr_0_cols_read : IN STD_LOGIC_VECTOR (31 downto 0);
        octave : IN STD_LOGIC_VECTOR (30 downto 0);
        keypoints_val_pt_x_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        keypoints_val_pt_x_ce0 : OUT STD_LOGIC;
        keypoints_val_pt_x_we0 : OUT STD_LOGIC;
        keypoints_val_pt_x_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        keypoints_val_pt_y_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        keypoints_val_pt_y_ce0 : OUT STD_LOGIC;
        keypoints_val_pt_y_we0 : OUT STD_LOGIC;
        keypoints_val_pt_y_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        keypoints_val_angle_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        keypoints_val_angle_V_ce0 : OUT STD_LOGIC;
        keypoints_val_angle_V_we0 : OUT STD_LOGIC;
        keypoints_val_angle_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        keypoints_val_sigma_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        keypoints_val_sigma_V_ce0 : OUT STD_LOGIC;
        keypoints_val_sigma_V_we0 : OUT STD_LOGIC;
        keypoints_val_sigma_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        keypoints_val_octave_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        keypoints_val_octave_ce0 : OUT STD_LOGIC;
        keypoints_val_octave_we0 : OUT STD_LOGIC;
        keypoints_val_octave_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        keypoints_val_layer_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        keypoints_val_layer_ce0 : OUT STD_LOGIC;
        keypoints_val_layer_we0 : OUT STD_LOGIC;
        keypoints_val_layer_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        keypoints_length_read : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component calcSIFTDescriptor12 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        img_0_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        img_0_val_V_ce0 : OUT STD_LOGIC;
        img_0_val_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        img_0_val_V_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        img_0_val_V_ce1 : OUT STD_LOGIC;
        img_0_val_V_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        img_1_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        img_1_val_V_ce0 : OUT STD_LOGIC;
        img_1_val_V_q0 : IN STD_LOGIC_VECTOR (25 downto 0);
        img_1_val_V_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        img_1_val_V_ce1 : OUT STD_LOGIC;
        img_1_val_V_q1 : IN STD_LOGIC_VECTOR (25 downto 0);
        img_2_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        img_2_val_V_ce0 : OUT STD_LOGIC;
        img_2_val_V_q0 : IN STD_LOGIC_VECTOR (25 downto 0);
        img_2_val_V_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        img_2_val_V_ce1 : OUT STD_LOGIC;
        img_2_val_V_q1 : IN STD_LOGIC_VECTOR (25 downto 0);
        img_3_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        img_3_val_V_ce0 : OUT STD_LOGIC;
        img_3_val_V_q0 : IN STD_LOGIC_VECTOR (25 downto 0);
        img_3_val_V_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        img_3_val_V_ce1 : OUT STD_LOGIC;
        img_3_val_V_q1 : IN STD_LOGIC_VECTOR (25 downto 0);
        img_4_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        img_4_val_V_ce0 : OUT STD_LOGIC;
        img_4_val_V_q0 : IN STD_LOGIC_VECTOR (25 downto 0);
        img_4_val_V_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        img_4_val_V_ce1 : OUT STD_LOGIC;
        img_4_val_V_q1 : IN STD_LOGIC_VECTOR (25 downto 0);
        img_5_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        img_5_val_V_ce0 : OUT STD_LOGIC;
        img_5_val_V_q0 : IN STD_LOGIC_VECTOR (25 downto 0);
        img_5_val_V_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        img_5_val_V_ce1 : OUT STD_LOGIC;
        img_5_val_V_q1 : IN STD_LOGIC_VECTOR (25 downto 0);
        img_val_V_offset : IN STD_LOGIC_VECTOR (7 downto 0);
        img_rows_read : IN STD_LOGIC_VECTOR (31 downto 0);
        img_cols_read : IN STD_LOGIC_VECTOR (31 downto 0);
        x0 : IN STD_LOGIC_VECTOR (31 downto 0);
        y0 : IN STD_LOGIC_VECTOR (31 downto 0);
        angle_V : IN STD_LOGIC_VECTOR (31 downto 0);
        sigma_V : IN STD_LOGIC_VECTOR (31 downto 0);
        descriptor_val_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        descriptor_val_ce0 : OUT STD_LOGIC;
        descriptor_val_we0 : OUT STD_LOGIC;
        descriptor_val_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        descriptor_val_offset : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component pow_generic_float_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        base_r : IN STD_LOGIC_VECTOR (31 downto 0);
        exp : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Resize IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        src_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        src_val_V_ce0 : OUT STD_LOGIC;
        src_val_V_q0 : IN STD_LOGIC_VECTOR (25 downto 0);
        src_rows_read : IN STD_LOGIC_VECTOR (31 downto 0);
        src_cols_read : IN STD_LOGIC_VECTOR (31 downto 0);
        dst_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        dst_val_V_ce0 : OUT STD_LOGIC;
        dst_val_V_we0 : OUT STD_LOGIC;
        dst_val_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component buildDoGPyramid IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        gauss_pyr_0_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        gauss_pyr_0_val_V_ce0 : OUT STD_LOGIC;
        gauss_pyr_0_val_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        gauss_pyr_1_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        gauss_pyr_1_val_V_ce0 : OUT STD_LOGIC;
        gauss_pyr_1_val_V_q0 : IN STD_LOGIC_VECTOR (25 downto 0);
        gauss_pyr_2_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        gauss_pyr_2_val_V_ce0 : OUT STD_LOGIC;
        gauss_pyr_2_val_V_q0 : IN STD_LOGIC_VECTOR (25 downto 0);
        gauss_pyr_3_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        gauss_pyr_3_val_V_ce0 : OUT STD_LOGIC;
        gauss_pyr_3_val_V_q0 : IN STD_LOGIC_VECTOR (25 downto 0);
        gauss_pyr_4_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        gauss_pyr_4_val_V_ce0 : OUT STD_LOGIC;
        gauss_pyr_4_val_V_q0 : IN STD_LOGIC_VECTOR (25 downto 0);
        gauss_pyr_5_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        gauss_pyr_5_val_V_ce0 : OUT STD_LOGIC;
        gauss_pyr_5_val_V_q0 : IN STD_LOGIC_VECTOR (25 downto 0);
        gauss_pyr_1_rows_read : IN STD_LOGIC_VECTOR (31 downto 0);
        gauss_pyr_2_rows_read : IN STD_LOGIC_VECTOR (31 downto 0);
        gauss_pyr_3_rows_read : IN STD_LOGIC_VECTOR (31 downto 0);
        gauss_pyr_4_rows_read : IN STD_LOGIC_VECTOR (31 downto 0);
        gauss_pyr_5_rows_read : IN STD_LOGIC_VECTOR (31 downto 0);
        gauss_pyr_1_cols_read : IN STD_LOGIC_VECTOR (31 downto 0);
        gauss_pyr_2_cols_read : IN STD_LOGIC_VECTOR (31 downto 0);
        gauss_pyr_3_cols_read : IN STD_LOGIC_VECTOR (31 downto 0);
        gauss_pyr_4_cols_read : IN STD_LOGIC_VECTOR (31 downto 0);
        gauss_pyr_5_cols_read : IN STD_LOGIC_VECTOR (31 downto 0);
        dog_pyr_0_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        dog_pyr_0_val_V_ce0 : OUT STD_LOGIC;
        dog_pyr_0_val_V_we0 : OUT STD_LOGIC;
        dog_pyr_0_val_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        dog_pyr_1_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        dog_pyr_1_val_V_ce0 : OUT STD_LOGIC;
        dog_pyr_1_val_V_we0 : OUT STD_LOGIC;
        dog_pyr_1_val_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        dog_pyr_2_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        dog_pyr_2_val_V_ce0 : OUT STD_LOGIC;
        dog_pyr_2_val_V_we0 : OUT STD_LOGIC;
        dog_pyr_2_val_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        dog_pyr_3_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        dog_pyr_3_val_V_ce0 : OUT STD_LOGIC;
        dog_pyr_3_val_V_we0 : OUT STD_LOGIC;
        dog_pyr_3_val_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        dog_pyr_4_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        dog_pyr_4_val_V_ce0 : OUT STD_LOGIC;
        dog_pyr_4_val_V_we0 : OUT STD_LOGIC;
        dog_pyr_4_val_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        dog_pyr_0_rows_read : IN STD_LOGIC_VECTOR (31 downto 0);
        dog_pyr_1_rows_read : IN STD_LOGIC_VECTOR (31 downto 0);
        dog_pyr_2_rows_read : IN STD_LOGIC_VECTOR (31 downto 0);
        dog_pyr_3_rows_read : IN STD_LOGIC_VECTOR (31 downto 0);
        dog_pyr_4_rows_read : IN STD_LOGIC_VECTOR (31 downto 0);
        dog_pyr_0_cols_read : IN STD_LOGIC_VECTOR (31 downto 0);
        dog_pyr_1_cols_read : IN STD_LOGIC_VECTOR (31 downto 0);
        dog_pyr_2_cols_read : IN STD_LOGIC_VECTOR (31 downto 0);
        dog_pyr_3_cols_read : IN STD_LOGIC_VECTOR (31 downto 0);
        dog_pyr_4_cols_read : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component SIFT2_Core_fadd_3fYi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component SIFT2_Core_fdiv_3g8j IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component SIFT2_Core_sitofpeOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component SIFT2_Core_sitofpbDo IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component SIFT2_Core_flog_3bEo IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component SIFT2_Core_mux_83Yie IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component SIFT2_Core_mux_63VhK_x_x IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component calcOrientationHi6jw IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (22 downto 0) );
    end component;


    component calcOrientationHi7jG IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component detect_base_val_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component detect_gauss_pyr_bsm IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component detect_gauss_pyr_btn IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (25 downto 0);
        address1 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (25 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component detect_gauss_pyr_bxn IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (25 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (25 downto 0);
        address1 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;



begin
    mask_table1688_U : component calcOrientationHi6jw
    generic map (
        DataWidth => 23,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => mask_table1688_address0,
        ce0 => mask_table1688_ce0,
        q0 => mask_table1688_q0);

    one_half_table2684_U : component calcOrientationHi7jG
    generic map (
        DataWidth => 24,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => one_half_table2684_address0,
        ce0 => one_half_table2684_ce0,
        q0 => one_half_table2684_q0);

    base_val_V_U : component detect_base_val_V
    generic map (
        DataWidth => 32,
        AddressRange => 65536,
        AddressWidth => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => base_val_V_address0,
        ce0 => base_val_V_ce0,
        we0 => base_val_V_we0,
        d0 => base_val_V_d0,
        q0 => base_val_V_q0);

    gauss_pyr_0_val_V_U : component detect_gauss_pyr_bsm
    generic map (
        DataWidth => 32,
        AddressRange => 65536,
        AddressWidth => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => gauss_pyr_0_val_V_address0,
        ce0 => gauss_pyr_0_val_V_ce0,
        we0 => gauss_pyr_0_val_V_we0,
        d0 => grp_buildGaussianPyramid_fu_719_gauss_pyr_0_val_V_d0,
        q0 => gauss_pyr_0_val_V_q0,
        address1 => gauss_pyr_0_val_V_address1,
        ce1 => gauss_pyr_0_val_V_ce1,
        q1 => gauss_pyr_0_val_V_q1);

    gauss_pyr_1_val_V_U : component detect_gauss_pyr_btn
    generic map (
        DataWidth => 26,
        AddressRange => 65536,
        AddressWidth => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => gauss_pyr_1_val_V_address0,
        ce0 => gauss_pyr_1_val_V_ce0,
        q0 => gauss_pyr_1_val_V_q0,
        address1 => gauss_pyr_1_val_V_address1,
        ce1 => gauss_pyr_1_val_V_ce1,
        we1 => gauss_pyr_1_val_V_we1,
        d1 => grp_buildGaussianPyramid_fu_719_gauss_pyr_1_val_V_d1,
        q1 => gauss_pyr_1_val_V_q1);

    gauss_pyr_2_val_V_U : component detect_gauss_pyr_btn
    generic map (
        DataWidth => 26,
        AddressRange => 65536,
        AddressWidth => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => gauss_pyr_2_val_V_address0,
        ce0 => gauss_pyr_2_val_V_ce0,
        q0 => gauss_pyr_2_val_V_q0,
        address1 => gauss_pyr_2_val_V_address1,
        ce1 => gauss_pyr_2_val_V_ce1,
        we1 => gauss_pyr_2_val_V_we1,
        d1 => grp_buildGaussianPyramid_fu_719_gauss_pyr_2_val_V_d1,
        q1 => gauss_pyr_2_val_V_q1);

    gauss_pyr_3_val_V_U : component detect_gauss_pyr_btn
    generic map (
        DataWidth => 26,
        AddressRange => 65536,
        AddressWidth => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => gauss_pyr_3_val_V_address0,
        ce0 => gauss_pyr_3_val_V_ce0,
        q0 => gauss_pyr_3_val_V_q0,
        address1 => gauss_pyr_3_val_V_address1,
        ce1 => gauss_pyr_3_val_V_ce1,
        we1 => gauss_pyr_3_val_V_we1,
        d1 => grp_buildGaussianPyramid_fu_719_gauss_pyr_3_val_V_d1,
        q1 => gauss_pyr_3_val_V_q1);

    gauss_pyr_4_val_V_U : component detect_gauss_pyr_btn
    generic map (
        DataWidth => 26,
        AddressRange => 65536,
        AddressWidth => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => gauss_pyr_4_val_V_address0,
        ce0 => gauss_pyr_4_val_V_ce0,
        q0 => gauss_pyr_4_val_V_q0,
        address1 => gauss_pyr_4_val_V_address1,
        ce1 => gauss_pyr_4_val_V_ce1,
        we1 => gauss_pyr_4_val_V_we1,
        d1 => grp_buildGaussianPyramid_fu_719_gauss_pyr_4_val_V_d1,
        q1 => gauss_pyr_4_val_V_q1);

    gauss_pyr_5_val_V_U : component detect_gauss_pyr_bxn
    generic map (
        DataWidth => 26,
        AddressRange => 65536,
        AddressWidth => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => gauss_pyr_5_val_V_address0,
        ce0 => gauss_pyr_5_val_V_ce0,
        we0 => gauss_pyr_5_val_V_we0,
        d0 => grp_buildGaussianPyramid_fu_719_gauss_pyr_5_val_V_d0,
        q0 => gauss_pyr_5_val_V_q0,
        address1 => gauss_pyr_5_val_V_address1,
        ce1 => gauss_pyr_5_val_V_ce1,
        q1 => gauss_pyr_5_val_V_q1);

    dog_pyr_0_val_V_U : component detect_gauss_pyr_bsm
    generic map (
        DataWidth => 32,
        AddressRange => 65536,
        AddressWidth => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dog_pyr_0_val_V_address0,
        ce0 => dog_pyr_0_val_V_ce0,
        we0 => dog_pyr_0_val_V_we0,
        d0 => grp_buildDoGPyramid_fu_922_dog_pyr_0_val_V_d0,
        q0 => dog_pyr_0_val_V_q0,
        address1 => grp_findScaleSpaceExtrem_fu_781_dog_pyr_0_val_V_address1,
        ce1 => dog_pyr_0_val_V_ce1,
        q1 => dog_pyr_0_val_V_q1);

    dog_pyr_1_val_V_U : component detect_gauss_pyr_bsm
    generic map (
        DataWidth => 32,
        AddressRange => 65536,
        AddressWidth => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dog_pyr_1_val_V_address0,
        ce0 => dog_pyr_1_val_V_ce0,
        we0 => dog_pyr_1_val_V_we0,
        d0 => grp_buildDoGPyramid_fu_922_dog_pyr_1_val_V_d0,
        q0 => dog_pyr_1_val_V_q0,
        address1 => grp_findScaleSpaceExtrem_fu_781_dog_pyr_1_val_V_address1,
        ce1 => dog_pyr_1_val_V_ce1,
        q1 => dog_pyr_1_val_V_q1);

    dog_pyr_2_val_V_U : component detect_gauss_pyr_bsm
    generic map (
        DataWidth => 32,
        AddressRange => 65536,
        AddressWidth => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dog_pyr_2_val_V_address0,
        ce0 => dog_pyr_2_val_V_ce0,
        we0 => dog_pyr_2_val_V_we0,
        d0 => grp_buildDoGPyramid_fu_922_dog_pyr_2_val_V_d0,
        q0 => dog_pyr_2_val_V_q0,
        address1 => grp_findScaleSpaceExtrem_fu_781_dog_pyr_2_val_V_address1,
        ce1 => dog_pyr_2_val_V_ce1,
        q1 => dog_pyr_2_val_V_q1);

    dog_pyr_3_val_V_U : component detect_gauss_pyr_bsm
    generic map (
        DataWidth => 32,
        AddressRange => 65536,
        AddressWidth => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dog_pyr_3_val_V_address0,
        ce0 => dog_pyr_3_val_V_ce0,
        we0 => dog_pyr_3_val_V_we0,
        d0 => grp_buildDoGPyramid_fu_922_dog_pyr_3_val_V_d0,
        q0 => dog_pyr_3_val_V_q0,
        address1 => grp_findScaleSpaceExtrem_fu_781_dog_pyr_3_val_V_address1,
        ce1 => dog_pyr_3_val_V_ce1,
        q1 => dog_pyr_3_val_V_q1);

    dog_pyr_4_val_V_U : component detect_gauss_pyr_bsm
    generic map (
        DataWidth => 32,
        AddressRange => 65536,
        AddressWidth => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dog_pyr_4_val_V_address0,
        ce0 => dog_pyr_4_val_V_ce0,
        we0 => dog_pyr_4_val_V_we0,
        d0 => grp_buildDoGPyramid_fu_922_dog_pyr_4_val_V_d0,
        q0 => dog_pyr_4_val_V_q0,
        address1 => grp_findScaleSpaceExtrem_fu_781_dog_pyr_4_val_V_address1,
        ce1 => dog_pyr_4_val_V_ce1,
        q1 => dog_pyr_4_val_V_q1);

    grp_buildGaussianPyramid_fu_719 : component buildGaussianPyramid
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_buildGaussianPyramid_fu_719_ap_start,
        ap_done => grp_buildGaussianPyramid_fu_719_ap_done,
        ap_idle => grp_buildGaussianPyramid_fu_719_ap_idle,
        ap_ready => grp_buildGaussianPyramid_fu_719_ap_ready,
        src_val_V_address0 => grp_buildGaussianPyramid_fu_719_src_val_V_address0,
        src_val_V_ce0 => grp_buildGaussianPyramid_fu_719_src_val_V_ce0,
        src_val_V_q0 => base_val_V_q0,
        src_rows_read => base_rows_1_reg_698,
        src_cols_read => base_cols_1_reg_688,
        gauss_pyr_0_val_V_address0 => grp_buildGaussianPyramid_fu_719_gauss_pyr_0_val_V_address0,
        gauss_pyr_0_val_V_ce0 => grp_buildGaussianPyramid_fu_719_gauss_pyr_0_val_V_ce0,
        gauss_pyr_0_val_V_we0 => grp_buildGaussianPyramid_fu_719_gauss_pyr_0_val_V_we0,
        gauss_pyr_0_val_V_d0 => grp_buildGaussianPyramid_fu_719_gauss_pyr_0_val_V_d0,
        gauss_pyr_0_val_V_q0 => gauss_pyr_0_val_V_q0,
        gauss_pyr_1_val_V_address0 => grp_buildGaussianPyramid_fu_719_gauss_pyr_1_val_V_address0,
        gauss_pyr_1_val_V_ce0 => grp_buildGaussianPyramid_fu_719_gauss_pyr_1_val_V_ce0,
        gauss_pyr_1_val_V_q0 => gauss_pyr_1_val_V_q0,
        gauss_pyr_1_val_V_address1 => grp_buildGaussianPyramid_fu_719_gauss_pyr_1_val_V_address1,
        gauss_pyr_1_val_V_ce1 => grp_buildGaussianPyramid_fu_719_gauss_pyr_1_val_V_ce1,
        gauss_pyr_1_val_V_we1 => grp_buildGaussianPyramid_fu_719_gauss_pyr_1_val_V_we1,
        gauss_pyr_1_val_V_d1 => grp_buildGaussianPyramid_fu_719_gauss_pyr_1_val_V_d1,
        gauss_pyr_2_val_V_address0 => grp_buildGaussianPyramid_fu_719_gauss_pyr_2_val_V_address0,
        gauss_pyr_2_val_V_ce0 => grp_buildGaussianPyramid_fu_719_gauss_pyr_2_val_V_ce0,
        gauss_pyr_2_val_V_q0 => gauss_pyr_2_val_V_q0,
        gauss_pyr_2_val_V_address1 => grp_buildGaussianPyramid_fu_719_gauss_pyr_2_val_V_address1,
        gauss_pyr_2_val_V_ce1 => grp_buildGaussianPyramid_fu_719_gauss_pyr_2_val_V_ce1,
        gauss_pyr_2_val_V_we1 => grp_buildGaussianPyramid_fu_719_gauss_pyr_2_val_V_we1,
        gauss_pyr_2_val_V_d1 => grp_buildGaussianPyramid_fu_719_gauss_pyr_2_val_V_d1,
        gauss_pyr_3_val_V_address0 => grp_buildGaussianPyramid_fu_719_gauss_pyr_3_val_V_address0,
        gauss_pyr_3_val_V_ce0 => grp_buildGaussianPyramid_fu_719_gauss_pyr_3_val_V_ce0,
        gauss_pyr_3_val_V_q0 => gauss_pyr_3_val_V_q0,
        gauss_pyr_3_val_V_address1 => grp_buildGaussianPyramid_fu_719_gauss_pyr_3_val_V_address1,
        gauss_pyr_3_val_V_ce1 => grp_buildGaussianPyramid_fu_719_gauss_pyr_3_val_V_ce1,
        gauss_pyr_3_val_V_we1 => grp_buildGaussianPyramid_fu_719_gauss_pyr_3_val_V_we1,
        gauss_pyr_3_val_V_d1 => grp_buildGaussianPyramid_fu_719_gauss_pyr_3_val_V_d1,
        gauss_pyr_4_val_V_address0 => grp_buildGaussianPyramid_fu_719_gauss_pyr_4_val_V_address0,
        gauss_pyr_4_val_V_ce0 => grp_buildGaussianPyramid_fu_719_gauss_pyr_4_val_V_ce0,
        gauss_pyr_4_val_V_q0 => gauss_pyr_4_val_V_q0,
        gauss_pyr_4_val_V_address1 => grp_buildGaussianPyramid_fu_719_gauss_pyr_4_val_V_address1,
        gauss_pyr_4_val_V_ce1 => grp_buildGaussianPyramid_fu_719_gauss_pyr_4_val_V_ce1,
        gauss_pyr_4_val_V_we1 => grp_buildGaussianPyramid_fu_719_gauss_pyr_4_val_V_we1,
        gauss_pyr_4_val_V_d1 => grp_buildGaussianPyramid_fu_719_gauss_pyr_4_val_V_d1,
        gauss_pyr_5_val_V_address0 => grp_buildGaussianPyramid_fu_719_gauss_pyr_5_val_V_address0,
        gauss_pyr_5_val_V_ce0 => grp_buildGaussianPyramid_fu_719_gauss_pyr_5_val_V_ce0,
        gauss_pyr_5_val_V_we0 => grp_buildGaussianPyramid_fu_719_gauss_pyr_5_val_V_we0,
        gauss_pyr_5_val_V_d0 => grp_buildGaussianPyramid_fu_719_gauss_pyr_5_val_V_d0,
        gauss_pyr_0_rows_read => gauss_pyr_0_rows_2_reg_554,
        gauss_pyr_1_rows_read => gauss_pyr_1_rows_2_reg_544,
        gauss_pyr_2_rows_read => gauss_pyr_2_rows_2_reg_534,
        gauss_pyr_3_rows_read => gauss_pyr_3_rows_2_reg_524,
        gauss_pyr_4_rows_read => gauss_pyr_4_rows_2_reg_514,
        gauss_pyr_5_rows_read => gauss_pyr_5_rows_2_reg_504,
        gauss_pyr_0_cols_read => gauss_pyr_0_cols_2_reg_494,
        gauss_pyr_1_cols_read => gauss_pyr_1_cols_2_reg_484,
        gauss_pyr_2_cols_read => gauss_pyr_2_cols_2_reg_474,
        gauss_pyr_3_cols_read => gauss_pyr_3_cols_2_reg_464,
        gauss_pyr_4_cols_read => gauss_pyr_4_cols_2_reg_454,
        gauss_pyr_5_cols_read => gauss_pyr_5_cols_2_reg_444,
        ap_return_0 => grp_buildGaussianPyramid_fu_719_ap_return_0,
        ap_return_1 => grp_buildGaussianPyramid_fu_719_ap_return_1,
        ap_return_2 => grp_buildGaussianPyramid_fu_719_ap_return_2,
        ap_return_3 => grp_buildGaussianPyramid_fu_719_ap_return_3,
        ap_return_4 => grp_buildGaussianPyramid_fu_719_ap_return_4,
        ap_return_5 => grp_buildGaussianPyramid_fu_719_ap_return_5,
        ap_return_6 => grp_buildGaussianPyramid_fu_719_ap_return_6,
        ap_return_7 => grp_buildGaussianPyramid_fu_719_ap_return_7,
        ap_return_8 => grp_buildGaussianPyramid_fu_719_ap_return_8,
        ap_return_9 => grp_buildGaussianPyramid_fu_719_ap_return_9,
        ap_return_10 => grp_buildGaussianPyramid_fu_719_ap_return_10,
        ap_return_11 => grp_buildGaussianPyramid_fu_719_ap_return_11);

    grp_GaussianBlur15_fu_772 : component GaussianBlur15
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_GaussianBlur15_fu_772_ap_start,
        ap_done => grp_GaussianBlur15_fu_772_ap_done,
        ap_idle => grp_GaussianBlur15_fu_772_ap_idle,
        ap_ready => grp_GaussianBlur15_fu_772_ap_ready,
        src_val_address0 => grp_GaussianBlur15_fu_772_src_val_address0,
        src_val_ce0 => grp_GaussianBlur15_fu_772_src_val_ce0,
        src_val_q0 => src_val_q0,
        src_rows_read => src_rows_read,
        src_cols_read => src_cols_read,
        dst_val_V_address0 => grp_GaussianBlur15_fu_772_dst_val_V_address0,
        dst_val_V_ce0 => grp_GaussianBlur15_fu_772_dst_val_V_ce0,
        dst_val_V_we0 => grp_GaussianBlur15_fu_772_dst_val_V_we0,
        dst_val_V_d0 => grp_GaussianBlur15_fu_772_dst_val_V_d0,
        ap_return_0 => grp_GaussianBlur15_fu_772_ap_return_0,
        ap_return_1 => grp_GaussianBlur15_fu_772_ap_return_1);

    grp_findScaleSpaceExtrem_fu_781 : component findScaleSpaceExtrem
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_findScaleSpaceExtrem_fu_781_ap_start,
        ap_done => grp_findScaleSpaceExtrem_fu_781_ap_done,
        ap_idle => grp_findScaleSpaceExtrem_fu_781_ap_idle,
        ap_ready => grp_findScaleSpaceExtrem_fu_781_ap_ready,
        gauss_pyr_0_val_V_address0 => grp_findScaleSpaceExtrem_fu_781_gauss_pyr_0_val_V_address0,
        gauss_pyr_0_val_V_ce0 => grp_findScaleSpaceExtrem_fu_781_gauss_pyr_0_val_V_ce0,
        gauss_pyr_0_val_V_q0 => gauss_pyr_0_val_V_q0,
        gauss_pyr_0_val_V_address1 => grp_findScaleSpaceExtrem_fu_781_gauss_pyr_0_val_V_address1,
        gauss_pyr_0_val_V_ce1 => grp_findScaleSpaceExtrem_fu_781_gauss_pyr_0_val_V_ce1,
        gauss_pyr_0_val_V_q1 => gauss_pyr_0_val_V_q1,
        gauss_pyr_1_val_V_address0 => grp_findScaleSpaceExtrem_fu_781_gauss_pyr_1_val_V_address0,
        gauss_pyr_1_val_V_ce0 => grp_findScaleSpaceExtrem_fu_781_gauss_pyr_1_val_V_ce0,
        gauss_pyr_1_val_V_q0 => gauss_pyr_1_val_V_q0,
        gauss_pyr_1_val_V_address1 => grp_findScaleSpaceExtrem_fu_781_gauss_pyr_1_val_V_address1,
        gauss_pyr_1_val_V_ce1 => grp_findScaleSpaceExtrem_fu_781_gauss_pyr_1_val_V_ce1,
        gauss_pyr_1_val_V_q1 => gauss_pyr_1_val_V_q1,
        gauss_pyr_2_val_V_address0 => grp_findScaleSpaceExtrem_fu_781_gauss_pyr_2_val_V_address0,
        gauss_pyr_2_val_V_ce0 => grp_findScaleSpaceExtrem_fu_781_gauss_pyr_2_val_V_ce0,
        gauss_pyr_2_val_V_q0 => gauss_pyr_2_val_V_q0,
        gauss_pyr_2_val_V_address1 => grp_findScaleSpaceExtrem_fu_781_gauss_pyr_2_val_V_address1,
        gauss_pyr_2_val_V_ce1 => grp_findScaleSpaceExtrem_fu_781_gauss_pyr_2_val_V_ce1,
        gauss_pyr_2_val_V_q1 => gauss_pyr_2_val_V_q1,
        gauss_pyr_3_val_V_address0 => grp_findScaleSpaceExtrem_fu_781_gauss_pyr_3_val_V_address0,
        gauss_pyr_3_val_V_ce0 => grp_findScaleSpaceExtrem_fu_781_gauss_pyr_3_val_V_ce0,
        gauss_pyr_3_val_V_q0 => gauss_pyr_3_val_V_q0,
        gauss_pyr_3_val_V_address1 => grp_findScaleSpaceExtrem_fu_781_gauss_pyr_3_val_V_address1,
        gauss_pyr_3_val_V_ce1 => grp_findScaleSpaceExtrem_fu_781_gauss_pyr_3_val_V_ce1,
        gauss_pyr_3_val_V_q1 => gauss_pyr_3_val_V_q1,
        gauss_pyr_4_val_V_address0 => grp_findScaleSpaceExtrem_fu_781_gauss_pyr_4_val_V_address0,
        gauss_pyr_4_val_V_ce0 => grp_findScaleSpaceExtrem_fu_781_gauss_pyr_4_val_V_ce0,
        gauss_pyr_4_val_V_q0 => gauss_pyr_4_val_V_q0,
        gauss_pyr_4_val_V_address1 => grp_findScaleSpaceExtrem_fu_781_gauss_pyr_4_val_V_address1,
        gauss_pyr_4_val_V_ce1 => grp_findScaleSpaceExtrem_fu_781_gauss_pyr_4_val_V_ce1,
        gauss_pyr_4_val_V_q1 => gauss_pyr_4_val_V_q1,
        gauss_pyr_5_val_V_address0 => grp_findScaleSpaceExtrem_fu_781_gauss_pyr_5_val_V_address0,
        gauss_pyr_5_val_V_ce0 => grp_findScaleSpaceExtrem_fu_781_gauss_pyr_5_val_V_ce0,
        gauss_pyr_5_val_V_q0 => gauss_pyr_5_val_V_q0,
        gauss_pyr_5_val_V_address1 => grp_findScaleSpaceExtrem_fu_781_gauss_pyr_5_val_V_address1,
        gauss_pyr_5_val_V_ce1 => grp_findScaleSpaceExtrem_fu_781_gauss_pyr_5_val_V_ce1,
        gauss_pyr_5_val_V_q1 => gauss_pyr_5_val_V_q1,
        gauss_pyr_0_rows_read => gauss_pyr_0_rows_1_reg_2890,
        gauss_pyr_1_rows_read => gauss_pyr_1_rows_1_reg_2882,
        gauss_pyr_2_rows_read => gauss_pyr_2_rows_1_reg_2874,
        gauss_pyr_3_rows_read => gauss_pyr_3_rows_1_reg_2866,
        gauss_pyr_4_rows_read => gauss_pyr_4_rows_1_reg_2858,
        gauss_pyr_5_rows_read => gauss_pyr_5_rows_1_reg_2850,
        gauss_pyr_0_cols_read => gauss_pyr_0_cols_1_reg_2897,
        gauss_pyr_1_cols_read => gauss_pyr_1_cols_1_reg_2842,
        gauss_pyr_2_cols_read => gauss_pyr_2_cols_1_reg_2834,
        gauss_pyr_3_cols_read => gauss_pyr_3_cols_1_reg_2826,
        gauss_pyr_4_cols_read => gauss_pyr_4_cols_1_reg_2818,
        gauss_pyr_5_cols_read => gauss_pyr_5_cols_1_reg_2810,
        dog_pyr_0_val_V_address0 => grp_findScaleSpaceExtrem_fu_781_dog_pyr_0_val_V_address0,
        dog_pyr_0_val_V_ce0 => grp_findScaleSpaceExtrem_fu_781_dog_pyr_0_val_V_ce0,
        dog_pyr_0_val_V_q0 => dog_pyr_0_val_V_q0,
        dog_pyr_0_val_V_address1 => grp_findScaleSpaceExtrem_fu_781_dog_pyr_0_val_V_address1,
        dog_pyr_0_val_V_ce1 => grp_findScaleSpaceExtrem_fu_781_dog_pyr_0_val_V_ce1,
        dog_pyr_0_val_V_q1 => dog_pyr_0_val_V_q1,
        dog_pyr_1_val_V_address0 => grp_findScaleSpaceExtrem_fu_781_dog_pyr_1_val_V_address0,
        dog_pyr_1_val_V_ce0 => grp_findScaleSpaceExtrem_fu_781_dog_pyr_1_val_V_ce0,
        dog_pyr_1_val_V_q0 => dog_pyr_1_val_V_q0,
        dog_pyr_1_val_V_address1 => grp_findScaleSpaceExtrem_fu_781_dog_pyr_1_val_V_address1,
        dog_pyr_1_val_V_ce1 => grp_findScaleSpaceExtrem_fu_781_dog_pyr_1_val_V_ce1,
        dog_pyr_1_val_V_q1 => dog_pyr_1_val_V_q1,
        dog_pyr_2_val_V_address0 => grp_findScaleSpaceExtrem_fu_781_dog_pyr_2_val_V_address0,
        dog_pyr_2_val_V_ce0 => grp_findScaleSpaceExtrem_fu_781_dog_pyr_2_val_V_ce0,
        dog_pyr_2_val_V_q0 => dog_pyr_2_val_V_q0,
        dog_pyr_2_val_V_address1 => grp_findScaleSpaceExtrem_fu_781_dog_pyr_2_val_V_address1,
        dog_pyr_2_val_V_ce1 => grp_findScaleSpaceExtrem_fu_781_dog_pyr_2_val_V_ce1,
        dog_pyr_2_val_V_q1 => dog_pyr_2_val_V_q1,
        dog_pyr_3_val_V_address0 => grp_findScaleSpaceExtrem_fu_781_dog_pyr_3_val_V_address0,
        dog_pyr_3_val_V_ce0 => grp_findScaleSpaceExtrem_fu_781_dog_pyr_3_val_V_ce0,
        dog_pyr_3_val_V_q0 => dog_pyr_3_val_V_q0,
        dog_pyr_3_val_V_address1 => grp_findScaleSpaceExtrem_fu_781_dog_pyr_3_val_V_address1,
        dog_pyr_3_val_V_ce1 => grp_findScaleSpaceExtrem_fu_781_dog_pyr_3_val_V_ce1,
        dog_pyr_3_val_V_q1 => dog_pyr_3_val_V_q1,
        dog_pyr_4_val_V_address0 => grp_findScaleSpaceExtrem_fu_781_dog_pyr_4_val_V_address0,
        dog_pyr_4_val_V_ce0 => grp_findScaleSpaceExtrem_fu_781_dog_pyr_4_val_V_ce0,
        dog_pyr_4_val_V_q0 => dog_pyr_4_val_V_q0,
        dog_pyr_4_val_V_address1 => grp_findScaleSpaceExtrem_fu_781_dog_pyr_4_val_V_address1,
        dog_pyr_4_val_V_ce1 => grp_findScaleSpaceExtrem_fu_781_dog_pyr_4_val_V_ce1,
        dog_pyr_4_val_V_q1 => dog_pyr_4_val_V_q1,
        dog_pyr_0_rows_read => dog_pyr_0_rows_reg_2904,
        dog_pyr_0_cols_read => dog_pyr_0_cols_reg_2930,
        octave => o_reg_676,
        keypoints_val_pt_x_address0 => grp_findScaleSpaceExtrem_fu_781_keypoints_val_pt_x_address0,
        keypoints_val_pt_x_ce0 => grp_findScaleSpaceExtrem_fu_781_keypoints_val_pt_x_ce0,
        keypoints_val_pt_x_we0 => grp_findScaleSpaceExtrem_fu_781_keypoints_val_pt_x_we0,
        keypoints_val_pt_x_d0 => grp_findScaleSpaceExtrem_fu_781_keypoints_val_pt_x_d0,
        keypoints_val_pt_y_address0 => grp_findScaleSpaceExtrem_fu_781_keypoints_val_pt_y_address0,
        keypoints_val_pt_y_ce0 => grp_findScaleSpaceExtrem_fu_781_keypoints_val_pt_y_ce0,
        keypoints_val_pt_y_we0 => grp_findScaleSpaceExtrem_fu_781_keypoints_val_pt_y_we0,
        keypoints_val_pt_y_d0 => grp_findScaleSpaceExtrem_fu_781_keypoints_val_pt_y_d0,
        keypoints_val_angle_V_address0 => grp_findScaleSpaceExtrem_fu_781_keypoints_val_angle_V_address0,
        keypoints_val_angle_V_ce0 => grp_findScaleSpaceExtrem_fu_781_keypoints_val_angle_V_ce0,
        keypoints_val_angle_V_we0 => grp_findScaleSpaceExtrem_fu_781_keypoints_val_angle_V_we0,
        keypoints_val_angle_V_d0 => grp_findScaleSpaceExtrem_fu_781_keypoints_val_angle_V_d0,
        keypoints_val_sigma_V_address0 => grp_findScaleSpaceExtrem_fu_781_keypoints_val_sigma_V_address0,
        keypoints_val_sigma_V_ce0 => grp_findScaleSpaceExtrem_fu_781_keypoints_val_sigma_V_ce0,
        keypoints_val_sigma_V_we0 => grp_findScaleSpaceExtrem_fu_781_keypoints_val_sigma_V_we0,
        keypoints_val_sigma_V_d0 => grp_findScaleSpaceExtrem_fu_781_keypoints_val_sigma_V_d0,
        keypoints_val_octave_address0 => grp_findScaleSpaceExtrem_fu_781_keypoints_val_octave_address0,
        keypoints_val_octave_ce0 => grp_findScaleSpaceExtrem_fu_781_keypoints_val_octave_ce0,
        keypoints_val_octave_we0 => grp_findScaleSpaceExtrem_fu_781_keypoints_val_octave_we0,
        keypoints_val_octave_d0 => grp_findScaleSpaceExtrem_fu_781_keypoints_val_octave_d0,
        keypoints_val_layer_address0 => grp_findScaleSpaceExtrem_fu_781_keypoints_val_layer_address0,
        keypoints_val_layer_ce0 => grp_findScaleSpaceExtrem_fu_781_keypoints_val_layer_ce0,
        keypoints_val_layer_we0 => grp_findScaleSpaceExtrem_fu_781_keypoints_val_layer_we0,
        keypoints_val_layer_d0 => grp_findScaleSpaceExtrem_fu_781_keypoints_val_layer_d0,
        keypoints_length_read => idx0_reg_664,
        ap_return => grp_findScaleSpaceExtrem_fu_781_ap_return);

    grp_calcSIFTDescriptor12_fu_852 : component calcSIFTDescriptor12
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_calcSIFTDescriptor12_fu_852_ap_start,
        ap_done => grp_calcSIFTDescriptor12_fu_852_ap_done,
        ap_idle => grp_calcSIFTDescriptor12_fu_852_ap_idle,
        ap_ready => grp_calcSIFTDescriptor12_fu_852_ap_ready,
        img_0_val_V_address0 => grp_calcSIFTDescriptor12_fu_852_img_0_val_V_address0,
        img_0_val_V_ce0 => grp_calcSIFTDescriptor12_fu_852_img_0_val_V_ce0,
        img_0_val_V_q0 => gauss_pyr_0_val_V_q0,
        img_0_val_V_address1 => grp_calcSIFTDescriptor12_fu_852_img_0_val_V_address1,
        img_0_val_V_ce1 => grp_calcSIFTDescriptor12_fu_852_img_0_val_V_ce1,
        img_0_val_V_q1 => gauss_pyr_0_val_V_q1,
        img_1_val_V_address0 => grp_calcSIFTDescriptor12_fu_852_img_1_val_V_address0,
        img_1_val_V_ce0 => grp_calcSIFTDescriptor12_fu_852_img_1_val_V_ce0,
        img_1_val_V_q0 => gauss_pyr_1_val_V_q0,
        img_1_val_V_address1 => grp_calcSIFTDescriptor12_fu_852_img_1_val_V_address1,
        img_1_val_V_ce1 => grp_calcSIFTDescriptor12_fu_852_img_1_val_V_ce1,
        img_1_val_V_q1 => gauss_pyr_1_val_V_q1,
        img_2_val_V_address0 => grp_calcSIFTDescriptor12_fu_852_img_2_val_V_address0,
        img_2_val_V_ce0 => grp_calcSIFTDescriptor12_fu_852_img_2_val_V_ce0,
        img_2_val_V_q0 => gauss_pyr_2_val_V_q0,
        img_2_val_V_address1 => grp_calcSIFTDescriptor12_fu_852_img_2_val_V_address1,
        img_2_val_V_ce1 => grp_calcSIFTDescriptor12_fu_852_img_2_val_V_ce1,
        img_2_val_V_q1 => gauss_pyr_2_val_V_q1,
        img_3_val_V_address0 => grp_calcSIFTDescriptor12_fu_852_img_3_val_V_address0,
        img_3_val_V_ce0 => grp_calcSIFTDescriptor12_fu_852_img_3_val_V_ce0,
        img_3_val_V_q0 => gauss_pyr_3_val_V_q0,
        img_3_val_V_address1 => grp_calcSIFTDescriptor12_fu_852_img_3_val_V_address1,
        img_3_val_V_ce1 => grp_calcSIFTDescriptor12_fu_852_img_3_val_V_ce1,
        img_3_val_V_q1 => gauss_pyr_3_val_V_q1,
        img_4_val_V_address0 => grp_calcSIFTDescriptor12_fu_852_img_4_val_V_address0,
        img_4_val_V_ce0 => grp_calcSIFTDescriptor12_fu_852_img_4_val_V_ce0,
        img_4_val_V_q0 => gauss_pyr_4_val_V_q0,
        img_4_val_V_address1 => grp_calcSIFTDescriptor12_fu_852_img_4_val_V_address1,
        img_4_val_V_ce1 => grp_calcSIFTDescriptor12_fu_852_img_4_val_V_ce1,
        img_4_val_V_q1 => gauss_pyr_4_val_V_q1,
        img_5_val_V_address0 => grp_calcSIFTDescriptor12_fu_852_img_5_val_V_address0,
        img_5_val_V_ce0 => grp_calcSIFTDescriptor12_fu_852_img_5_val_V_ce0,
        img_5_val_V_q0 => gauss_pyr_5_val_V_q0,
        img_5_val_V_address1 => grp_calcSIFTDescriptor12_fu_852_img_5_val_V_address1,
        img_5_val_V_ce1 => grp_calcSIFTDescriptor12_fu_852_img_5_val_V_ce1,
        img_5_val_V_q1 => gauss_pyr_5_val_V_q1,
        img_val_V_offset => keypoints_val_layer_1_reg_2988,
        img_rows_read => tmp_350_reg_2993,
        img_cols_read => tmp_351_reg_2998,
        x0 => p_Val2_118_reg_3064,
        y0 => p_Val2_119_reg_3069,
        angle_V => angle_V_reg_3074,
        sigma_V => sigma_V_reg_3079,
        descriptor_val_address0 => grp_calcSIFTDescriptor12_fu_852_descriptor_val_address0,
        descriptor_val_ce0 => grp_calcSIFTDescriptor12_fu_852_descriptor_val_ce0,
        descriptor_val_we0 => grp_calcSIFTDescriptor12_fu_852_descriptor_val_we0,
        descriptor_val_d0 => grp_calcSIFTDescriptor12_fu_852_descriptor_val_d0,
        descriptor_val_offset => i_i_reg_708);

    grp_pow_generic_float_s_fu_887 : component pow_generic_float_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_pow_generic_float_s_fu_887_ap_start,
        ap_done => grp_pow_generic_float_s_fu_887_ap_done,
        ap_idle => grp_pow_generic_float_s_fu_887_ap_idle,
        ap_ready => grp_pow_generic_float_s_fu_887_ap_ready,
        ap_ce => ap_const_logic_1,
        base_r => ap_const_lv32_40000000,
        exp => grp_fu_981_p1,
        ap_return => grp_pow_generic_float_s_fu_887_ap_return);

    grp_Resize_fu_908 : component Resize
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_Resize_fu_908_ap_start,
        ap_done => grp_Resize_fu_908_ap_done,
        ap_idle => grp_Resize_fu_908_ap_idle,
        ap_ready => grp_Resize_fu_908_ap_ready,
        src_val_V_address0 => grp_Resize_fu_908_src_val_V_address0,
        src_val_V_ce0 => grp_Resize_fu_908_src_val_V_ce0,
        src_val_V_q0 => gauss_pyr_3_val_V_q0,
        src_rows_read => gauss_pyr_3_rows_2_reg_524,
        src_cols_read => gauss_pyr_3_cols_2_reg_464,
        dst_val_V_address0 => grp_Resize_fu_908_dst_val_V_address0,
        dst_val_V_ce0 => grp_Resize_fu_908_dst_val_V_ce0,
        dst_val_V_we0 => grp_Resize_fu_908_dst_val_V_we0,
        dst_val_V_d0 => grp_Resize_fu_908_dst_val_V_d0,
        ap_return_0 => grp_Resize_fu_908_ap_return_0,
        ap_return_1 => grp_Resize_fu_908_ap_return_1);

    grp_buildDoGPyramid_fu_922 : component buildDoGPyramid
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_buildDoGPyramid_fu_922_ap_start,
        ap_done => grp_buildDoGPyramid_fu_922_ap_done,
        ap_idle => grp_buildDoGPyramid_fu_922_ap_idle,
        ap_ready => grp_buildDoGPyramid_fu_922_ap_ready,
        gauss_pyr_0_val_V_address0 => grp_buildDoGPyramid_fu_922_gauss_pyr_0_val_V_address0,
        gauss_pyr_0_val_V_ce0 => grp_buildDoGPyramid_fu_922_gauss_pyr_0_val_V_ce0,
        gauss_pyr_0_val_V_q0 => gauss_pyr_0_val_V_q0,
        gauss_pyr_1_val_V_address0 => grp_buildDoGPyramid_fu_922_gauss_pyr_1_val_V_address0,
        gauss_pyr_1_val_V_ce0 => grp_buildDoGPyramid_fu_922_gauss_pyr_1_val_V_ce0,
        gauss_pyr_1_val_V_q0 => gauss_pyr_1_val_V_q0,
        gauss_pyr_2_val_V_address0 => grp_buildDoGPyramid_fu_922_gauss_pyr_2_val_V_address0,
        gauss_pyr_2_val_V_ce0 => grp_buildDoGPyramid_fu_922_gauss_pyr_2_val_V_ce0,
        gauss_pyr_2_val_V_q0 => gauss_pyr_2_val_V_q0,
        gauss_pyr_3_val_V_address0 => grp_buildDoGPyramid_fu_922_gauss_pyr_3_val_V_address0,
        gauss_pyr_3_val_V_ce0 => grp_buildDoGPyramid_fu_922_gauss_pyr_3_val_V_ce0,
        gauss_pyr_3_val_V_q0 => gauss_pyr_3_val_V_q0,
        gauss_pyr_4_val_V_address0 => grp_buildDoGPyramid_fu_922_gauss_pyr_4_val_V_address0,
        gauss_pyr_4_val_V_ce0 => grp_buildDoGPyramid_fu_922_gauss_pyr_4_val_V_ce0,
        gauss_pyr_4_val_V_q0 => gauss_pyr_4_val_V_q0,
        gauss_pyr_5_val_V_address0 => grp_buildDoGPyramid_fu_922_gauss_pyr_5_val_V_address0,
        gauss_pyr_5_val_V_ce0 => grp_buildDoGPyramid_fu_922_gauss_pyr_5_val_V_ce0,
        gauss_pyr_5_val_V_q0 => gauss_pyr_5_val_V_q0,
        gauss_pyr_1_rows_read => gauss_pyr_1_rows_1_reg_2882,
        gauss_pyr_2_rows_read => gauss_pyr_2_rows_1_reg_2874,
        gauss_pyr_3_rows_read => gauss_pyr_3_rows_1_reg_2866,
        gauss_pyr_4_rows_read => gauss_pyr_4_rows_1_reg_2858,
        gauss_pyr_5_rows_read => gauss_pyr_5_rows_1_reg_2850,
        gauss_pyr_1_cols_read => gauss_pyr_1_cols_1_reg_2842,
        gauss_pyr_2_cols_read => gauss_pyr_2_cols_1_reg_2834,
        gauss_pyr_3_cols_read => gauss_pyr_3_cols_1_reg_2826,
        gauss_pyr_4_cols_read => gauss_pyr_4_cols_1_reg_2818,
        gauss_pyr_5_cols_read => gauss_pyr_5_cols_1_reg_2810,
        dog_pyr_0_val_V_address0 => grp_buildDoGPyramid_fu_922_dog_pyr_0_val_V_address0,
        dog_pyr_0_val_V_ce0 => grp_buildDoGPyramid_fu_922_dog_pyr_0_val_V_ce0,
        dog_pyr_0_val_V_we0 => grp_buildDoGPyramid_fu_922_dog_pyr_0_val_V_we0,
        dog_pyr_0_val_V_d0 => grp_buildDoGPyramid_fu_922_dog_pyr_0_val_V_d0,
        dog_pyr_1_val_V_address0 => grp_buildDoGPyramid_fu_922_dog_pyr_1_val_V_address0,
        dog_pyr_1_val_V_ce0 => grp_buildDoGPyramid_fu_922_dog_pyr_1_val_V_ce0,
        dog_pyr_1_val_V_we0 => grp_buildDoGPyramid_fu_922_dog_pyr_1_val_V_we0,
        dog_pyr_1_val_V_d0 => grp_buildDoGPyramid_fu_922_dog_pyr_1_val_V_d0,
        dog_pyr_2_val_V_address0 => grp_buildDoGPyramid_fu_922_dog_pyr_2_val_V_address0,
        dog_pyr_2_val_V_ce0 => grp_buildDoGPyramid_fu_922_dog_pyr_2_val_V_ce0,
        dog_pyr_2_val_V_we0 => grp_buildDoGPyramid_fu_922_dog_pyr_2_val_V_we0,
        dog_pyr_2_val_V_d0 => grp_buildDoGPyramid_fu_922_dog_pyr_2_val_V_d0,
        dog_pyr_3_val_V_address0 => grp_buildDoGPyramid_fu_922_dog_pyr_3_val_V_address0,
        dog_pyr_3_val_V_ce0 => grp_buildDoGPyramid_fu_922_dog_pyr_3_val_V_ce0,
        dog_pyr_3_val_V_we0 => grp_buildDoGPyramid_fu_922_dog_pyr_3_val_V_we0,
        dog_pyr_3_val_V_d0 => grp_buildDoGPyramid_fu_922_dog_pyr_3_val_V_d0,
        dog_pyr_4_val_V_address0 => grp_buildDoGPyramid_fu_922_dog_pyr_4_val_V_address0,
        dog_pyr_4_val_V_ce0 => grp_buildDoGPyramid_fu_922_dog_pyr_4_val_V_ce0,
        dog_pyr_4_val_V_we0 => grp_buildDoGPyramid_fu_922_dog_pyr_4_val_V_we0,
        dog_pyr_4_val_V_d0 => grp_buildDoGPyramid_fu_922_dog_pyr_4_val_V_d0,
        dog_pyr_0_rows_read => dog_pyr_rows_0_2_reg_654,
        dog_pyr_1_rows_read => dog_pyr_rows_1_2_reg_644,
        dog_pyr_2_rows_read => dog_pyr_rows_2_2_reg_634,
        dog_pyr_3_rows_read => dog_pyr_rows_3_2_reg_624,
        dog_pyr_4_rows_read => dog_pyr_rows_4_2_reg_614,
        dog_pyr_0_cols_read => dog_pyr_cols_0_2_reg_604,
        dog_pyr_1_cols_read => dog_pyr_cols_1_2_reg_594,
        dog_pyr_2_cols_read => dog_pyr_cols_2_2_reg_584,
        dog_pyr_3_cols_read => dog_pyr_cols_3_2_reg_574,
        dog_pyr_4_cols_read => dog_pyr_cols_4_2_reg_564,
        ap_return_0 => grp_buildDoGPyramid_fu_922_ap_return_0,
        ap_return_1 => grp_buildDoGPyramid_fu_922_ap_return_1,
        ap_return_2 => grp_buildDoGPyramid_fu_922_ap_return_2,
        ap_return_3 => grp_buildDoGPyramid_fu_922_ap_return_3,
        ap_return_4 => grp_buildDoGPyramid_fu_922_ap_return_4,
        ap_return_5 => grp_buildDoGPyramid_fu_922_ap_return_5,
        ap_return_6 => grp_buildDoGPyramid_fu_922_ap_return_6,
        ap_return_7 => grp_buildDoGPyramid_fu_922_ap_return_7,
        ap_return_8 => grp_buildDoGPyramid_fu_922_ap_return_8,
        ap_return_9 => grp_buildDoGPyramid_fu_922_ap_return_9);

    SIFT2_Core_fadd_3fYi_U1038 : component SIFT2_Core_fadd_3fYi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_01_i_i_reg_2764,
        din1 => ap_const_lv32_C0800000,
        ce => ap_const_logic_1,
        dout => grp_fu_967_p2);

    SIFT2_Core_fdiv_3g8j_U1039 : component SIFT2_Core_fdiv_3g8j
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_972_p0,
        din1 => grp_fu_972_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_972_p2);

    SIFT2_Core_fdiv_3g8j_U1040 : component SIFT2_Core_fdiv_3g8j
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_752_i_reg_3044,
        din1 => scale_reg_3038,
        ce => ap_const_logic_1,
        dout => grp_fu_977_p2);

    SIFT2_Core_sitofpeOg_U1041 : component SIFT2_Core_sitofpeOg
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_981_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_981_p1);

    SIFT2_Core_sitofpbDo_U1042 : component SIFT2_Core_sitofpbDo
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_985_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_985_p1);

    SIFT2_Core_flog_3bEo_U1043 : component SIFT2_Core_flog_3bEo
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_const_lv32_0,
        din1 => reg_993,
        ce => ap_const_logic_1,
        dout => grp_fu_988_p2);

    SIFT2_Core_mux_83Yie_U1044 : component SIFT2_Core_mux_83Yie
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_100,
        din1 => gauss_pyr_0_rows_fu_170,
        din2 => gauss_pyr_0_rows_fu_170,
        din3 => gauss_pyr_0_rows_fu_170,
        din4 => gauss_pyr_0_rows_fu_170,
        din5 => gauss_pyr_0_rows_fu_170,
        din6 => gauss_pyr_0_rows_fu_170,
        din7 => gauss_pyr_0_rows_fu_170,
        din8 => tmp_reg_422,
        dout => gauss_pyr_0_rows_s_fu_1045_p10);

    SIFT2_Core_mux_83Yie_U1045 : component SIFT2_Core_mux_83Yie
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => gauss_pyr_1_rows_fu_174,
        din1 => ap_const_lv32_100,
        din2 => gauss_pyr_1_rows_fu_174,
        din3 => gauss_pyr_1_rows_fu_174,
        din4 => gauss_pyr_1_rows_fu_174,
        din5 => gauss_pyr_1_rows_fu_174,
        din6 => gauss_pyr_1_rows_fu_174,
        din7 => gauss_pyr_1_rows_fu_174,
        din8 => tmp_reg_422,
        dout => gauss_pyr_1_rows_s_fu_1067_p10);

    SIFT2_Core_mux_83Yie_U1046 : component SIFT2_Core_mux_83Yie
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => gauss_pyr_2_rows_fu_178,
        din1 => gauss_pyr_2_rows_fu_178,
        din2 => ap_const_lv32_100,
        din3 => gauss_pyr_2_rows_fu_178,
        din4 => gauss_pyr_2_rows_fu_178,
        din5 => gauss_pyr_2_rows_fu_178,
        din6 => gauss_pyr_2_rows_fu_178,
        din7 => gauss_pyr_2_rows_fu_178,
        din8 => tmp_reg_422,
        dout => gauss_pyr_2_rows_s_fu_1089_p10);

    SIFT2_Core_mux_83Yie_U1047 : component SIFT2_Core_mux_83Yie
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => gauss_pyr_3_rows_fu_182,
        din1 => gauss_pyr_3_rows_fu_182,
        din2 => gauss_pyr_3_rows_fu_182,
        din3 => ap_const_lv32_100,
        din4 => gauss_pyr_3_rows_fu_182,
        din5 => gauss_pyr_3_rows_fu_182,
        din6 => gauss_pyr_3_rows_fu_182,
        din7 => gauss_pyr_3_rows_fu_182,
        din8 => tmp_reg_422,
        dout => gauss_pyr_3_rows_s_fu_1111_p10);

    SIFT2_Core_mux_83Yie_U1048 : component SIFT2_Core_mux_83Yie
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => gauss_pyr_4_rows_fu_186,
        din1 => gauss_pyr_4_rows_fu_186,
        din2 => gauss_pyr_4_rows_fu_186,
        din3 => gauss_pyr_4_rows_fu_186,
        din4 => ap_const_lv32_100,
        din5 => gauss_pyr_4_rows_fu_186,
        din6 => gauss_pyr_4_rows_fu_186,
        din7 => gauss_pyr_4_rows_fu_186,
        din8 => tmp_reg_422,
        dout => gauss_pyr_4_rows_s_fu_1133_p10);

    SIFT2_Core_mux_83Yie_U1049 : component SIFT2_Core_mux_83Yie
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => gauss_pyr_5_rows_fu_190,
        din1 => gauss_pyr_5_rows_fu_190,
        din2 => gauss_pyr_5_rows_fu_190,
        din3 => gauss_pyr_5_rows_fu_190,
        din4 => gauss_pyr_5_rows_fu_190,
        din5 => ap_const_lv32_100,
        din6 => ap_const_lv32_100,
        din7 => ap_const_lv32_100,
        din8 => tmp_reg_422,
        dout => gauss_pyr_5_rows_s_fu_1155_p10);

    SIFT2_Core_mux_83Yie_U1050 : component SIFT2_Core_mux_83Yie
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_100,
        din1 => gauss_pyr_0_cols_fu_194,
        din2 => gauss_pyr_0_cols_fu_194,
        din3 => gauss_pyr_0_cols_fu_194,
        din4 => gauss_pyr_0_cols_fu_194,
        din5 => gauss_pyr_0_cols_fu_194,
        din6 => gauss_pyr_0_cols_fu_194,
        din7 => gauss_pyr_0_cols_fu_194,
        din8 => tmp_reg_422,
        dout => gauss_pyr_0_cols_s_fu_1177_p10);

    SIFT2_Core_mux_83Yie_U1051 : component SIFT2_Core_mux_83Yie
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => gauss_pyr_1_cols_fu_198,
        din1 => ap_const_lv32_100,
        din2 => gauss_pyr_1_cols_fu_198,
        din3 => gauss_pyr_1_cols_fu_198,
        din4 => gauss_pyr_1_cols_fu_198,
        din5 => gauss_pyr_1_cols_fu_198,
        din6 => gauss_pyr_1_cols_fu_198,
        din7 => gauss_pyr_1_cols_fu_198,
        din8 => tmp_reg_422,
        dout => gauss_pyr_1_cols_s_fu_1199_p10);

    SIFT2_Core_mux_83Yie_U1052 : component SIFT2_Core_mux_83Yie
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => gauss_pyr_2_cols_fu_202,
        din1 => gauss_pyr_2_cols_fu_202,
        din2 => ap_const_lv32_100,
        din3 => gauss_pyr_2_cols_fu_202,
        din4 => gauss_pyr_2_cols_fu_202,
        din5 => gauss_pyr_2_cols_fu_202,
        din6 => gauss_pyr_2_cols_fu_202,
        din7 => gauss_pyr_2_cols_fu_202,
        din8 => tmp_reg_422,
        dout => gauss_pyr_2_cols_s_fu_1221_p10);

    SIFT2_Core_mux_83Yie_U1053 : component SIFT2_Core_mux_83Yie
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => gauss_pyr_3_cols_fu_206,
        din1 => gauss_pyr_3_cols_fu_206,
        din2 => gauss_pyr_3_cols_fu_206,
        din3 => ap_const_lv32_100,
        din4 => gauss_pyr_3_cols_fu_206,
        din5 => gauss_pyr_3_cols_fu_206,
        din6 => gauss_pyr_3_cols_fu_206,
        din7 => gauss_pyr_3_cols_fu_206,
        din8 => tmp_reg_422,
        dout => gauss_pyr_3_cols_s_fu_1243_p10);

    SIFT2_Core_mux_83Yie_U1054 : component SIFT2_Core_mux_83Yie
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => gauss_pyr_4_cols_fu_210,
        din1 => gauss_pyr_4_cols_fu_210,
        din2 => gauss_pyr_4_cols_fu_210,
        din3 => gauss_pyr_4_cols_fu_210,
        din4 => ap_const_lv32_100,
        din5 => gauss_pyr_4_cols_fu_210,
        din6 => gauss_pyr_4_cols_fu_210,
        din7 => gauss_pyr_4_cols_fu_210,
        din8 => tmp_reg_422,
        dout => gauss_pyr_4_cols_s_fu_1265_p10);

    SIFT2_Core_mux_83Yie_U1055 : component SIFT2_Core_mux_83Yie
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => gauss_pyr_5_cols_fu_214,
        din1 => gauss_pyr_5_cols_fu_214,
        din2 => gauss_pyr_5_cols_fu_214,
        din3 => gauss_pyr_5_cols_fu_214,
        din4 => gauss_pyr_5_cols_fu_214,
        din5 => ap_const_lv32_100,
        din6 => ap_const_lv32_100,
        din7 => ap_const_lv32_100,
        din8 => tmp_reg_422,
        dout => gauss_pyr_5_cols_s_fu_1287_p10);

    SIFT2_Core_mux_83Yie_U1056 : component SIFT2_Core_mux_83Yie
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_100,
        din1 => dog_pyr_rows_fu_266,
        din2 => dog_pyr_rows_fu_266,
        din3 => dog_pyr_rows_fu_266,
        din4 => dog_pyr_rows_fu_266,
        din5 => dog_pyr_rows_fu_266,
        din6 => dog_pyr_rows_fu_266,
        din7 => dog_pyr_rows_fu_266,
        din8 => tmp_343_reg_433,
        dout => dog_pyr_rows_0_1_fu_1411_p10);

    SIFT2_Core_mux_83Yie_U1057 : component SIFT2_Core_mux_83Yie
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => dog_pyr_rows_1_fu_270,
        din1 => ap_const_lv32_100,
        din2 => dog_pyr_rows_1_fu_270,
        din3 => dog_pyr_rows_1_fu_270,
        din4 => dog_pyr_rows_1_fu_270,
        din5 => dog_pyr_rows_1_fu_270,
        din6 => dog_pyr_rows_1_fu_270,
        din7 => dog_pyr_rows_1_fu_270,
        din8 => tmp_343_reg_433,
        dout => dog_pyr_rows_1_1_fu_1433_p10);

    SIFT2_Core_mux_83Yie_U1058 : component SIFT2_Core_mux_83Yie
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => dog_pyr_rows_2_fu_274,
        din1 => dog_pyr_rows_2_fu_274,
        din2 => ap_const_lv32_100,
        din3 => dog_pyr_rows_2_fu_274,
        din4 => dog_pyr_rows_2_fu_274,
        din5 => dog_pyr_rows_2_fu_274,
        din6 => dog_pyr_rows_2_fu_274,
        din7 => dog_pyr_rows_2_fu_274,
        din8 => tmp_343_reg_433,
        dout => dog_pyr_rows_2_1_fu_1455_p10);

    SIFT2_Core_mux_83Yie_U1059 : component SIFT2_Core_mux_83Yie
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => dog_pyr_rows_3_fu_278,
        din1 => dog_pyr_rows_3_fu_278,
        din2 => dog_pyr_rows_3_fu_278,
        din3 => ap_const_lv32_100,
        din4 => dog_pyr_rows_3_fu_278,
        din5 => dog_pyr_rows_3_fu_278,
        din6 => dog_pyr_rows_3_fu_278,
        din7 => dog_pyr_rows_3_fu_278,
        din8 => tmp_343_reg_433,
        dout => dog_pyr_rows_3_1_fu_1477_p10);

    SIFT2_Core_mux_83Yie_U1060 : component SIFT2_Core_mux_83Yie
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => dog_pyr_rows_4_fu_282,
        din1 => dog_pyr_rows_4_fu_282,
        din2 => dog_pyr_rows_4_fu_282,
        din3 => dog_pyr_rows_4_fu_282,
        din4 => ap_const_lv32_100,
        din5 => ap_const_lv32_100,
        din6 => ap_const_lv32_100,
        din7 => ap_const_lv32_100,
        din8 => tmp_343_reg_433,
        dout => dog_pyr_rows_4_1_fu_1499_p10);

    SIFT2_Core_mux_83Yie_U1061 : component SIFT2_Core_mux_83Yie
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_100,
        din1 => dog_pyr_cols_fu_286,
        din2 => dog_pyr_cols_fu_286,
        din3 => dog_pyr_cols_fu_286,
        din4 => dog_pyr_cols_fu_286,
        din5 => dog_pyr_cols_fu_286,
        din6 => dog_pyr_cols_fu_286,
        din7 => dog_pyr_cols_fu_286,
        din8 => tmp_343_reg_433,
        dout => dog_pyr_cols_0_1_fu_1521_p10);

    SIFT2_Core_mux_83Yie_U1062 : component SIFT2_Core_mux_83Yie
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => dog_pyr_cols_1_fu_290,
        din1 => ap_const_lv32_100,
        din2 => dog_pyr_cols_1_fu_290,
        din3 => dog_pyr_cols_1_fu_290,
        din4 => dog_pyr_cols_1_fu_290,
        din5 => dog_pyr_cols_1_fu_290,
        din6 => dog_pyr_cols_1_fu_290,
        din7 => dog_pyr_cols_1_fu_290,
        din8 => tmp_343_reg_433,
        dout => dog_pyr_cols_1_1_fu_1543_p10);

    SIFT2_Core_mux_83Yie_U1063 : component SIFT2_Core_mux_83Yie
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => dog_pyr_cols_2_fu_294,
        din1 => dog_pyr_cols_2_fu_294,
        din2 => ap_const_lv32_100,
        din3 => dog_pyr_cols_2_fu_294,
        din4 => dog_pyr_cols_2_fu_294,
        din5 => dog_pyr_cols_2_fu_294,
        din6 => dog_pyr_cols_2_fu_294,
        din7 => dog_pyr_cols_2_fu_294,
        din8 => tmp_343_reg_433,
        dout => dog_pyr_cols_2_1_fu_1565_p10);

    SIFT2_Core_mux_83Yie_U1064 : component SIFT2_Core_mux_83Yie
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => dog_pyr_cols_3_fu_298,
        din1 => dog_pyr_cols_3_fu_298,
        din2 => dog_pyr_cols_3_fu_298,
        din3 => ap_const_lv32_100,
        din4 => dog_pyr_cols_3_fu_298,
        din5 => dog_pyr_cols_3_fu_298,
        din6 => dog_pyr_cols_3_fu_298,
        din7 => dog_pyr_cols_3_fu_298,
        din8 => tmp_343_reg_433,
        dout => dog_pyr_cols_3_1_fu_1587_p10);

    SIFT2_Core_mux_83Yie_U1065 : component SIFT2_Core_mux_83Yie
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => dog_pyr_cols_4_fu_302,
        din1 => dog_pyr_cols_4_fu_302,
        din2 => dog_pyr_cols_4_fu_302,
        din3 => dog_pyr_cols_4_fu_302,
        din4 => ap_const_lv32_100,
        din5 => ap_const_lv32_100,
        din6 => ap_const_lv32_100,
        din7 => ap_const_lv32_100,
        din8 => tmp_343_reg_433,
        dout => dog_pyr_cols_4_1_fu_1609_p10);

    SIFT2_Core_mux_63VhK_x_x_U1066 : component SIFT2_Core_mux_63VhK_x_x
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => gauss_pyr_0_rows_1_reg_2890,
        din1 => gauss_pyr_1_rows_1_reg_2882,
        din2 => gauss_pyr_2_rows_1_reg_2874,
        din3 => gauss_pyr_3_rows_1_reg_2866,
        din4 => gauss_pyr_4_rows_1_reg_2858,
        din5 => gauss_pyr_5_rows_1_reg_2850,
        din6 => tmp_1113_fu_2117_p1,
        dout => tmp_350_fu_2121_p8);

    SIFT2_Core_mux_63VhK_x_x_U1067 : component SIFT2_Core_mux_63VhK_x_x
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => gauss_pyr_0_cols_1_reg_2897,
        din1 => gauss_pyr_1_cols_1_reg_2842,
        din2 => gauss_pyr_2_cols_1_reg_2834,
        din3 => gauss_pyr_3_cols_1_reg_2826,
        din4 => gauss_pyr_4_cols_1_reg_2818,
        din5 => gauss_pyr_5_cols_1_reg_2810,
        din6 => tmp_1113_fu_2117_p1,
        dout => tmp_351_fu_2133_p8);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_return_0_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_0_preg <= ap_const_lv32_0;
            else
                if (((tmp_347_fu_1973_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
                    ap_return_0_preg <= idx0_reg_664;
                end if; 
            end if;
        end if;
    end process;


    ap_return_1_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_1_preg <= ap_const_lv32_0;
            else
                if (((tmp_347_fu_1973_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
                    ap_return_1_preg <= idx0_reg_664;
                end if; 
            end if;
        end if;
    end process;


    grp_GaussianBlur15_fu_772_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_GaussianBlur15_fu_772_ap_start_reg <= ap_const_logic_0;
            else
                if (((tmp_348_fu_1984_p2 = ap_const_lv1_1) and (tmp_347_fu_1973_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
                    grp_GaussianBlur15_fu_772_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_GaussianBlur15_fu_772_ap_ready = ap_const_logic_1)) then 
                    grp_GaussianBlur15_fu_772_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_Resize_fu_908_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_Resize_fu_908_ap_start_reg <= ap_const_logic_0;
            else
                if (((tmp_348_fu_1984_p2 = ap_const_lv1_0) and (tmp_347_fu_1973_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
                    grp_Resize_fu_908_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_Resize_fu_908_ap_ready = ap_const_logic_1)) then 
                    grp_Resize_fu_908_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_buildDoGPyramid_fu_922_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_buildDoGPyramid_fu_922_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
                    grp_buildDoGPyramid_fu_922_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_buildDoGPyramid_fu_922_ap_ready = ap_const_logic_1)) then 
                    grp_buildDoGPyramid_fu_922_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_buildGaussianPyramid_fu_719_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_buildGaussianPyramid_fu_719_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
                    grp_buildGaussianPyramid_fu_719_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_buildGaussianPyramid_fu_719_ap_ready = ap_const_logic_1)) then 
                    grp_buildGaussianPyramid_fu_719_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_calcSIFTDescriptor12_fu_852_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_calcSIFTDescriptor12_fu_852_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state58)) then 
                    grp_calcSIFTDescriptor12_fu_852_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_calcSIFTDescriptor12_fu_852_ap_ready = ap_const_logic_1)) then 
                    grp_calcSIFTDescriptor12_fu_852_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_findScaleSpaceExtrem_fu_781_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_findScaleSpaceExtrem_fu_781_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
                    grp_findScaleSpaceExtrem_fu_781_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_findScaleSpaceExtrem_fu_781_ap_ready = ap_const_logic_1)) then 
                    grp_findScaleSpaceExtrem_fu_781_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_pow_generic_float_s_fu_887_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_pow_generic_float_s_fu_887_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state37) and (ap_const_logic_1 = ap_NS_fsm_state38))) then 
                    grp_pow_generic_float_s_fu_887_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_pow_generic_float_s_fu_887_ap_ready = ap_const_logic_1)) then 
                    grp_pow_generic_float_s_fu_887_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    base_cols_1_reg_688_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_Resize_fu_908_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
                base_cols_1_reg_688 <= grp_Resize_fu_908_ap_return_1;
            elsif (((grp_GaussianBlur15_fu_772_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state28))) then 
                base_cols_1_reg_688 <= grp_GaussianBlur15_fu_772_ap_return_1;
            end if; 
        end if;
    end process;

    base_rows_1_reg_698_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_Resize_fu_908_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
                base_rows_1_reg_698 <= grp_Resize_fu_908_ap_return_0;
            elsif (((grp_GaussianBlur15_fu_772_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state28))) then 
                base_rows_1_reg_698 <= grp_GaussianBlur15_fu_772_ap_return_0;
            end if; 
        end if;
    end process;

    dog_pyr_cols_0_2_reg_604_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i1_fu_2106_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state35))) then 
                dog_pyr_cols_0_2_reg_604 <= dog_pyr_0_cols_reg_2930;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
                dog_pyr_cols_0_2_reg_604 <= dog_pyr_cols_0_1_reg_2694;
            end if; 
        end if;
    end process;

    dog_pyr_cols_1_2_reg_594_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i1_fu_2106_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state35))) then 
                dog_pyr_cols_1_2_reg_594 <= dog_pyr_1_cols_reg_2936;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
                dog_pyr_cols_1_2_reg_594 <= dog_pyr_cols_1_1_reg_2699;
            end if; 
        end if;
    end process;

    dog_pyr_cols_2_2_reg_584_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i1_fu_2106_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state35))) then 
                dog_pyr_cols_2_2_reg_584 <= dog_pyr_2_cols_reg_2941;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
                dog_pyr_cols_2_2_reg_584 <= dog_pyr_cols_2_1_reg_2704;
            end if; 
        end if;
    end process;

    dog_pyr_cols_3_2_reg_574_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i1_fu_2106_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state35))) then 
                dog_pyr_cols_3_2_reg_574 <= dog_pyr_3_cols_reg_2946;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
                dog_pyr_cols_3_2_reg_574 <= dog_pyr_cols_3_1_reg_2709;
            end if; 
        end if;
    end process;

    dog_pyr_cols_4_2_reg_564_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i1_fu_2106_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state35))) then 
                dog_pyr_cols_4_2_reg_564 <= dog_pyr_4_cols_reg_2951;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
                dog_pyr_cols_4_2_reg_564 <= dog_pyr_cols_4_1_reg_2714;
            end if; 
        end if;
    end process;

    dog_pyr_rows_0_2_reg_654_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i1_fu_2106_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state35))) then 
                dog_pyr_rows_0_2_reg_654 <= dog_pyr_0_rows_reg_2904;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
                dog_pyr_rows_0_2_reg_654 <= dog_pyr_rows_0_1_reg_2669;
            end if; 
        end if;
    end process;

    dog_pyr_rows_1_2_reg_644_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i1_fu_2106_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state35))) then 
                dog_pyr_rows_1_2_reg_644 <= dog_pyr_1_rows_reg_2910;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
                dog_pyr_rows_1_2_reg_644 <= dog_pyr_rows_1_1_reg_2674;
            end if; 
        end if;
    end process;

    dog_pyr_rows_2_2_reg_634_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i1_fu_2106_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state35))) then 
                dog_pyr_rows_2_2_reg_634 <= dog_pyr_2_rows_reg_2915;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
                dog_pyr_rows_2_2_reg_634 <= dog_pyr_rows_2_1_reg_2679;
            end if; 
        end if;
    end process;

    dog_pyr_rows_3_2_reg_624_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i1_fu_2106_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state35))) then 
                dog_pyr_rows_3_2_reg_624 <= dog_pyr_3_rows_reg_2920;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
                dog_pyr_rows_3_2_reg_624 <= dog_pyr_rows_3_1_reg_2684;
            end if; 
        end if;
    end process;

    dog_pyr_rows_4_2_reg_614_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i1_fu_2106_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state35))) then 
                dog_pyr_rows_4_2_reg_614 <= dog_pyr_4_rows_reg_2925;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
                dog_pyr_rows_4_2_reg_614 <= dog_pyr_rows_4_1_reg_2689;
            end if; 
        end if;
    end process;

    gauss_pyr_0_cols_2_reg_494_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i1_fu_2106_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state35))) then 
                gauss_pyr_0_cols_2_reg_494 <= gauss_pyr_0_cols_1_reg_2897;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
                gauss_pyr_0_cols_2_reg_494 <= gauss_pyr_0_cols_s_reg_2571;
            end if; 
        end if;
    end process;

    gauss_pyr_0_rows_2_reg_554_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i1_fu_2106_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state35))) then 
                gauss_pyr_0_rows_2_reg_554 <= gauss_pyr_0_rows_1_reg_2890;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
                gauss_pyr_0_rows_2_reg_554 <= gauss_pyr_0_rows_s_reg_2541;
            end if; 
        end if;
    end process;

    gauss_pyr_1_cols_2_reg_484_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i1_fu_2106_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state35))) then 
                gauss_pyr_1_cols_2_reg_484 <= gauss_pyr_1_cols_1_reg_2842;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
                gauss_pyr_1_cols_2_reg_484 <= gauss_pyr_1_cols_s_reg_2576;
            end if; 
        end if;
    end process;

    gauss_pyr_1_rows_2_reg_544_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i1_fu_2106_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state35))) then 
                gauss_pyr_1_rows_2_reg_544 <= gauss_pyr_1_rows_1_reg_2882;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
                gauss_pyr_1_rows_2_reg_544 <= gauss_pyr_1_rows_s_reg_2546;
            end if; 
        end if;
    end process;

    gauss_pyr_2_cols_2_reg_474_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i1_fu_2106_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state35))) then 
                gauss_pyr_2_cols_2_reg_474 <= gauss_pyr_2_cols_1_reg_2834;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
                gauss_pyr_2_cols_2_reg_474 <= gauss_pyr_2_cols_s_reg_2581;
            end if; 
        end if;
    end process;

    gauss_pyr_2_rows_2_reg_534_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i1_fu_2106_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state35))) then 
                gauss_pyr_2_rows_2_reg_534 <= gauss_pyr_2_rows_1_reg_2874;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
                gauss_pyr_2_rows_2_reg_534 <= gauss_pyr_2_rows_s_reg_2551;
            end if; 
        end if;
    end process;

    gauss_pyr_3_cols_2_reg_464_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i1_fu_2106_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state35))) then 
                gauss_pyr_3_cols_2_reg_464 <= gauss_pyr_3_cols_1_reg_2826;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
                gauss_pyr_3_cols_2_reg_464 <= gauss_pyr_3_cols_s_reg_2586;
            end if; 
        end if;
    end process;

    gauss_pyr_3_rows_2_reg_524_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i1_fu_2106_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state35))) then 
                gauss_pyr_3_rows_2_reg_524 <= gauss_pyr_3_rows_1_reg_2866;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
                gauss_pyr_3_rows_2_reg_524 <= gauss_pyr_3_rows_s_reg_2556;
            end if; 
        end if;
    end process;

    gauss_pyr_4_cols_2_reg_454_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i1_fu_2106_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state35))) then 
                gauss_pyr_4_cols_2_reg_454 <= gauss_pyr_4_cols_1_reg_2818;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
                gauss_pyr_4_cols_2_reg_454 <= gauss_pyr_4_cols_s_reg_2591;
            end if; 
        end if;
    end process;

    gauss_pyr_4_rows_2_reg_514_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i1_fu_2106_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state35))) then 
                gauss_pyr_4_rows_2_reg_514 <= gauss_pyr_4_rows_1_reg_2858;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
                gauss_pyr_4_rows_2_reg_514 <= gauss_pyr_4_rows_s_reg_2561;
            end if; 
        end if;
    end process;

    gauss_pyr_5_cols_2_reg_444_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i1_fu_2106_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state35))) then 
                gauss_pyr_5_cols_2_reg_444 <= gauss_pyr_5_cols_1_reg_2810;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
                gauss_pyr_5_cols_2_reg_444 <= gauss_pyr_5_cols_s_reg_2596;
            end if; 
        end if;
    end process;

    gauss_pyr_5_rows_2_reg_504_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i1_fu_2106_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state35))) then 
                gauss_pyr_5_rows_2_reg_504 <= gauss_pyr_5_rows_1_reg_2850;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
                gauss_pyr_5_rows_2_reg_504 <= gauss_pyr_5_rows_s_reg_2566;
            end if; 
        end if;
    end process;

    i_i_reg_708_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_findScaleSpaceExtrem_fu_781_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state34))) then 
                i_i_reg_708 <= idx0_reg_664;
            elsif (((grp_calcSIFTDescriptor12_fu_852_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state59))) then 
                i_i_reg_708 <= i_reg_3084;
            end if; 
        end if;
    end process;

    idx0_reg_664_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i1_fu_2106_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state35))) then 
                idx0_reg_664 <= idx1_reg_2956;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
                idx0_reg_664 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    o_reg_676_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i1_fu_2106_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state35))) then 
                o_reg_676 <= o_1_reg_2782;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
                o_reg_676 <= ap_const_lv31_0;
            end if; 
        end if;
    end process;

    tmp_343_reg_433_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_342_fu_1309_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                tmp_343_reg_433 <= ap_const_lv3_0;
            elsif (((tmp_345_fu_1631_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                tmp_343_reg_433 <= tmp_344_fu_1405_p2;
            end if; 
        end if;
    end process;

    tmp_reg_422_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_342_fu_1309_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                tmp_reg_422 <= tmp_s_fu_1039_p2;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                tmp_reg_422 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state58)) then
                angle_V_reg_3074 <= keypoints_val_angle_V_q0;
                i_reg_3084 <= i_fu_2444_p2;
                sigma_V_reg_3079 <= keypoints_val_sigma_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_buildDoGPyramid_fu_922_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state32))) then
                dog_pyr_0_cols_reg_2930 <= grp_buildDoGPyramid_fu_922_ap_return_5;
                dog_pyr_0_rows_reg_2904 <= grp_buildDoGPyramid_fu_922_ap_return_0;
                dog_pyr_1_cols_reg_2936 <= grp_buildDoGPyramid_fu_922_ap_return_6;
                dog_pyr_1_rows_reg_2910 <= grp_buildDoGPyramid_fu_922_ap_return_1;
                dog_pyr_2_cols_reg_2941 <= grp_buildDoGPyramid_fu_922_ap_return_7;
                dog_pyr_2_rows_reg_2915 <= grp_buildDoGPyramid_fu_922_ap_return_2;
                dog_pyr_3_cols_reg_2946 <= grp_buildDoGPyramid_fu_922_ap_return_8;
                dog_pyr_3_rows_reg_2920 <= grp_buildDoGPyramid_fu_922_ap_return_3;
                dog_pyr_4_cols_reg_2951 <= grp_buildDoGPyramid_fu_922_ap_return_9;
                dog_pyr_4_rows_reg_2925 <= grp_buildDoGPyramid_fu_922_ap_return_4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                dog_pyr_cols_0_1_reg_2694 <= dog_pyr_cols_0_1_fu_1521_p10;
                dog_pyr_cols_1_1_reg_2699 <= dog_pyr_cols_1_1_fu_1543_p10;
                dog_pyr_cols_1_fu_290 <= dog_pyr_cols_1_1_fu_1543_p10;
                dog_pyr_cols_2_1_reg_2704 <= dog_pyr_cols_2_1_fu_1565_p10;
                dog_pyr_cols_2_fu_294 <= dog_pyr_cols_2_1_fu_1565_p10;
                dog_pyr_cols_3_1_reg_2709 <= dog_pyr_cols_3_1_fu_1587_p10;
                dog_pyr_cols_3_fu_298 <= dog_pyr_cols_3_1_fu_1587_p10;
                dog_pyr_cols_4_1_reg_2714 <= dog_pyr_cols_4_1_fu_1609_p10;
                dog_pyr_cols_4_fu_302 <= dog_pyr_cols_4_1_fu_1609_p10;
                dog_pyr_cols_fu_286 <= dog_pyr_cols_0_1_fu_1521_p10;
                dog_pyr_rows_0_1_reg_2669 <= dog_pyr_rows_0_1_fu_1411_p10;
                dog_pyr_rows_1_1_reg_2674 <= dog_pyr_rows_1_1_fu_1433_p10;
                dog_pyr_rows_1_fu_270 <= dog_pyr_rows_1_1_fu_1433_p10;
                dog_pyr_rows_2_1_reg_2679 <= dog_pyr_rows_2_1_fu_1455_p10;
                dog_pyr_rows_2_fu_274 <= dog_pyr_rows_2_1_fu_1455_p10;
                dog_pyr_rows_3_1_reg_2684 <= dog_pyr_rows_3_1_fu_1477_p10;
                dog_pyr_rows_3_fu_278 <= dog_pyr_rows_3_1_fu_1477_p10;
                dog_pyr_rows_4_1_reg_2689 <= dog_pyr_rows_4_1_fu_1499_p10;
                dog_pyr_rows_4_fu_282 <= dog_pyr_rows_4_1_fu_1499_p10;
                dog_pyr_rows_fu_266 <= dog_pyr_rows_0_1_fu_1411_p10;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_buildGaussianPyramid_fu_719_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state30))) then
                gauss_pyr_0_cols_1_reg_2897 <= grp_buildGaussianPyramid_fu_719_ap_return_11;
                gauss_pyr_0_rows_1_reg_2890 <= grp_buildGaussianPyramid_fu_719_ap_return_10;
                gauss_pyr_1_cols_1_reg_2842 <= grp_buildGaussianPyramid_fu_719_ap_return_5;
                gauss_pyr_1_rows_1_reg_2882 <= grp_buildGaussianPyramid_fu_719_ap_return_0;
                gauss_pyr_2_cols_1_reg_2834 <= grp_buildGaussianPyramid_fu_719_ap_return_6;
                gauss_pyr_2_rows_1_reg_2874 <= grp_buildGaussianPyramid_fu_719_ap_return_1;
                gauss_pyr_3_cols_1_reg_2826 <= grp_buildGaussianPyramid_fu_719_ap_return_7;
                gauss_pyr_3_rows_1_reg_2866 <= grp_buildGaussianPyramid_fu_719_ap_return_2;
                gauss_pyr_4_cols_1_reg_2818 <= grp_buildGaussianPyramid_fu_719_ap_return_8;
                gauss_pyr_4_rows_1_reg_2858 <= grp_buildGaussianPyramid_fu_719_ap_return_3;
                gauss_pyr_5_cols_1_reg_2810 <= grp_buildGaussianPyramid_fu_719_ap_return_9;
                gauss_pyr_5_rows_1_reg_2850 <= grp_buildGaussianPyramid_fu_719_ap_return_4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                gauss_pyr_0_cols_fu_194 <= gauss_pyr_0_cols_s_fu_1177_p10;
                gauss_pyr_0_cols_s_reg_2571 <= gauss_pyr_0_cols_s_fu_1177_p10;
                gauss_pyr_0_rows_fu_170 <= gauss_pyr_0_rows_s_fu_1045_p10;
                gauss_pyr_0_rows_s_reg_2541 <= gauss_pyr_0_rows_s_fu_1045_p10;
                gauss_pyr_1_cols_fu_198 <= gauss_pyr_1_cols_s_fu_1199_p10;
                gauss_pyr_1_cols_s_reg_2576 <= gauss_pyr_1_cols_s_fu_1199_p10;
                gauss_pyr_1_rows_fu_174 <= gauss_pyr_1_rows_s_fu_1067_p10;
                gauss_pyr_1_rows_s_reg_2546 <= gauss_pyr_1_rows_s_fu_1067_p10;
                gauss_pyr_2_cols_fu_202 <= gauss_pyr_2_cols_s_fu_1221_p10;
                gauss_pyr_2_cols_s_reg_2581 <= gauss_pyr_2_cols_s_fu_1221_p10;
                gauss_pyr_2_rows_fu_178 <= gauss_pyr_2_rows_s_fu_1089_p10;
                gauss_pyr_2_rows_s_reg_2551 <= gauss_pyr_2_rows_s_fu_1089_p10;
                gauss_pyr_3_cols_fu_206 <= gauss_pyr_3_cols_s_fu_1243_p10;
                gauss_pyr_3_cols_s_reg_2586 <= gauss_pyr_3_cols_s_fu_1243_p10;
                gauss_pyr_3_rows_fu_182 <= gauss_pyr_3_rows_s_fu_1111_p10;
                gauss_pyr_3_rows_s_reg_2556 <= gauss_pyr_3_rows_s_fu_1111_p10;
                gauss_pyr_4_cols_fu_210 <= gauss_pyr_4_cols_s_fu_1265_p10;
                gauss_pyr_4_cols_s_reg_2591 <= gauss_pyr_4_cols_s_fu_1265_p10;
                gauss_pyr_4_rows_fu_186 <= gauss_pyr_4_rows_s_fu_1133_p10;
                gauss_pyr_4_rows_s_reg_2561 <= gauss_pyr_4_rows_s_fu_1133_p10;
                gauss_pyr_5_cols_fu_214 <= gauss_pyr_5_cols_s_fu_1287_p10;
                gauss_pyr_5_cols_s_reg_2596 <= gauss_pyr_5_cols_s_fu_1287_p10;
                gauss_pyr_5_rows_fu_190 <= gauss_pyr_5_rows_s_fu_1155_p10;
                gauss_pyr_5_rows_s_reg_2566 <= gauss_pyr_5_rows_s_fu_1155_p10;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_findScaleSpaceExtrem_fu_781_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state34))) then
                idx1_reg_2956 <= grp_findScaleSpaceExtrem_fu_781_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state36)) then
                keypoints_val_layer_1_reg_2988 <= keypoints_val_layer_q0;
                keypoints_val_octave_3_reg_2983 <= keypoints_val_octave_q0;
                tmp_350_reg_2993 <= tmp_350_fu_2121_p8;
                tmp_351_reg_2998 <= tmp_351_fu_2133_p8;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state47)) then
                keypoints_val_pt_x_l_reg_3018 <= keypoints_val_pt_x_q0;
                keypoints_val_pt_y_l_reg_3023 <= keypoints_val_pt_y_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state26)) then
                o_1_reg_2782 <= o_1_fu_1978_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then
                p_01_i_i_reg_2764 <= p_01_i_i_fu_1818_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state25)) then
                p_Val2_117_reg_2774 <= p_Val2_117_fu_1961_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state57)) then
                p_Val2_118_reg_3064 <= p_Val2_118_fu_2293_p3;
                p_Val2_119_reg_3069 <= p_Val2_119_fu_2436_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state5))) then
                reg_993 <= grp_fu_981_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state18))) then
                reg_999 <= grp_fu_972_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state49)) then
                scale_reg_3038 <= grp_pow_generic_float_s_fu_887_ap_return;
                tmp_752_i_reg_3044 <= grp_fu_985_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then
                t_V_15_reg_2737 <= t_V_15_fu_1697_p1;
                tmp_1685_i_i_reg_2749 <= tmp_1685_i_i_fu_1717_p2;
                tmp_i_i1_reg_2743 <= tmp_i_i1_fu_1711_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i1_fu_2106_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state35))) then
                tmp_748_i_reg_2965 <= tmp_748_i_fu_2111_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                tmp_i_i_reg_2732 <= grp_fu_988_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_345_fu_1631_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                tmp_i_reg_2722 <= tmp_i_fu_1687_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state24)) then
                x_assign_63_reg_2769 <= grp_fu_967_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state56)) then
                x_assign_65_reg_3049 <= grp_fu_977_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state3, tmp_345_fu_1631_p2, ap_CS_fsm_state26, ap_CS_fsm_state27, grp_Resize_fu_908_ap_done, ap_CS_fsm_state28, grp_GaussianBlur15_fu_772_ap_done, ap_CS_fsm_state30, grp_buildGaussianPyramid_fu_719_ap_done, ap_CS_fsm_state32, grp_buildDoGPyramid_fu_922_ap_done, ap_CS_fsm_state34, grp_findScaleSpaceExtrem_fu_781_ap_done, ap_CS_fsm_state35, tmp_i1_fu_2106_p2, grp_calcSIFTDescriptor12_fu_852_ap_done, tmp_342_fu_1309_p2, ap_CS_fsm_state59, tmp_347_fu_1973_p2, tmp_348_fu_1984_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((tmp_342_fu_1309_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((tmp_345_fu_1631_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                if (((tmp_347_fu_1973_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state26))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif (((tmp_348_fu_1984_p2 = ap_const_lv1_1) and (tmp_347_fu_1973_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then
                    ap_NS_fsm <= ap_ST_fsm_state28;
                else
                    ap_NS_fsm <= ap_ST_fsm_state27;
                end if;
            when ap_ST_fsm_state27 => 
                if (((grp_Resize_fu_908_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then
                    ap_NS_fsm <= ap_ST_fsm_state29;
                else
                    ap_NS_fsm <= ap_ST_fsm_state27;
                end if;
            when ap_ST_fsm_state28 => 
                if (((grp_GaussianBlur15_fu_772_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state28))) then
                    ap_NS_fsm <= ap_ST_fsm_state29;
                else
                    ap_NS_fsm <= ap_ST_fsm_state28;
                end if;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                if (((grp_buildGaussianPyramid_fu_719_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state30))) then
                    ap_NS_fsm <= ap_ST_fsm_state31;
                else
                    ap_NS_fsm <= ap_ST_fsm_state30;
                end if;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                if (((grp_buildDoGPyramid_fu_922_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state32))) then
                    ap_NS_fsm <= ap_ST_fsm_state33;
                else
                    ap_NS_fsm <= ap_ST_fsm_state32;
                end if;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                if (((grp_findScaleSpaceExtrem_fu_781_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state34))) then
                    ap_NS_fsm <= ap_ST_fsm_state35;
                else
                    ap_NS_fsm <= ap_ST_fsm_state34;
                end if;
            when ap_ST_fsm_state35 => 
                if (((tmp_i1_fu_2106_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state35))) then
                    ap_NS_fsm <= ap_ST_fsm_state26;
                else
                    ap_NS_fsm <= ap_ST_fsm_state36;
                end if;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                ap_NS_fsm <= ap_ST_fsm_state53;
            when ap_ST_fsm_state53 => 
                ap_NS_fsm <= ap_ST_fsm_state54;
            when ap_ST_fsm_state54 => 
                ap_NS_fsm <= ap_ST_fsm_state55;
            when ap_ST_fsm_state55 => 
                ap_NS_fsm <= ap_ST_fsm_state56;
            when ap_ST_fsm_state56 => 
                ap_NS_fsm <= ap_ST_fsm_state57;
            when ap_ST_fsm_state57 => 
                ap_NS_fsm <= ap_ST_fsm_state58;
            when ap_ST_fsm_state58 => 
                ap_NS_fsm <= ap_ST_fsm_state59;
            when ap_ST_fsm_state59 => 
                if (((grp_calcSIFTDescriptor12_fu_852_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state59))) then
                    ap_NS_fsm <= ap_ST_fsm_state35;
                else
                    ap_NS_fsm <= ap_ST_fsm_state59;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state38 <= ap_CS_fsm(37);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state46 <= ap_CS_fsm(45);
    ap_CS_fsm_state47 <= ap_CS_fsm(46);
    ap_CS_fsm_state48 <= ap_CS_fsm(47);
    ap_CS_fsm_state49 <= ap_CS_fsm(48);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state50 <= ap_CS_fsm(49);
    ap_CS_fsm_state56 <= ap_CS_fsm(55);
    ap_CS_fsm_state57 <= ap_CS_fsm(56);
    ap_CS_fsm_state58 <= ap_CS_fsm(57);
    ap_CS_fsm_state59 <= ap_CS_fsm(58);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_NS_fsm_state38 <= ap_NS_fsm(37);

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state26, tmp_347_fu_1973_p2)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((tmp_347_fu_1973_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state26)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state26, tmp_347_fu_1973_p2)
    begin
        if (((tmp_347_fu_1973_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_0_assign_proc : process(ap_CS_fsm_state26, idx0_reg_664, tmp_347_fu_1973_p2, ap_return_0_preg)
    begin
        if (((tmp_347_fu_1973_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            ap_return_0 <= idx0_reg_664;
        else 
            ap_return_0 <= ap_return_0_preg;
        end if; 
    end process;


    ap_return_1_assign_proc : process(ap_CS_fsm_state26, idx0_reg_664, tmp_347_fu_1973_p2, ap_return_1_preg)
    begin
        if (((tmp_347_fu_1973_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            ap_return_1 <= idx0_reg_664;
        else 
            ap_return_1 <= ap_return_1_preg;
        end if; 
    end process;


    base_val_V_address0_assign_proc : process(ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state30, grp_buildGaussianPyramid_fu_719_src_val_V_address0, grp_GaussianBlur15_fu_772_dst_val_V_address0, grp_Resize_fu_908_dst_val_V_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            base_val_V_address0 <= grp_Resize_fu_908_dst_val_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            base_val_V_address0 <= grp_GaussianBlur15_fu_772_dst_val_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            base_val_V_address0 <= grp_buildGaussianPyramid_fu_719_src_val_V_address0;
        else 
            base_val_V_address0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    base_val_V_ce0_assign_proc : process(ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state30, grp_buildGaussianPyramid_fu_719_src_val_V_ce0, grp_GaussianBlur15_fu_772_dst_val_V_ce0, grp_Resize_fu_908_dst_val_V_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            base_val_V_ce0 <= grp_Resize_fu_908_dst_val_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            base_val_V_ce0 <= grp_GaussianBlur15_fu_772_dst_val_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            base_val_V_ce0 <= grp_buildGaussianPyramid_fu_719_src_val_V_ce0;
        else 
            base_val_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    base_val_V_d0_assign_proc : process(ap_CS_fsm_state27, ap_CS_fsm_state28, grp_GaussianBlur15_fu_772_dst_val_V_d0, grp_Resize_fu_908_dst_val_V_d0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            base_val_V_d0 <= grp_Resize_fu_908_dst_val_V_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            base_val_V_d0 <= grp_GaussianBlur15_fu_772_dst_val_V_d0;
        else 
            base_val_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    base_val_V_we0_assign_proc : process(ap_CS_fsm_state27, ap_CS_fsm_state28, grp_GaussianBlur15_fu_772_dst_val_V_we0, grp_Resize_fu_908_dst_val_V_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            base_val_V_we0 <= grp_Resize_fu_908_dst_val_V_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            base_val_V_we0 <= grp_GaussianBlur15_fu_772_dst_val_V_we0;
        else 
            base_val_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    descriptors_val_val_address0 <= grp_calcSIFTDescriptor12_fu_852_descriptor_val_address0;
    descriptors_val_val_ce0 <= grp_calcSIFTDescriptor12_fu_852_descriptor_val_ce0;
    descriptors_val_val_d0 <= grp_calcSIFTDescriptor12_fu_852_descriptor_val_d0;
    descriptors_val_val_we0 <= grp_calcSIFTDescriptor12_fu_852_descriptor_val_we0;

    dog_pyr_0_val_V_address0_assign_proc : process(ap_CS_fsm_state32, ap_CS_fsm_state34, grp_findScaleSpaceExtrem_fu_781_dog_pyr_0_val_V_address0, grp_buildDoGPyramid_fu_922_dog_pyr_0_val_V_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            dog_pyr_0_val_V_address0 <= grp_buildDoGPyramid_fu_922_dog_pyr_0_val_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            dog_pyr_0_val_V_address0 <= grp_findScaleSpaceExtrem_fu_781_dog_pyr_0_val_V_address0;
        else 
            dog_pyr_0_val_V_address0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dog_pyr_0_val_V_ce0_assign_proc : process(ap_CS_fsm_state32, ap_CS_fsm_state34, grp_findScaleSpaceExtrem_fu_781_dog_pyr_0_val_V_ce0, grp_buildDoGPyramid_fu_922_dog_pyr_0_val_V_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            dog_pyr_0_val_V_ce0 <= grp_buildDoGPyramid_fu_922_dog_pyr_0_val_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            dog_pyr_0_val_V_ce0 <= grp_findScaleSpaceExtrem_fu_781_dog_pyr_0_val_V_ce0;
        else 
            dog_pyr_0_val_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dog_pyr_0_val_V_ce1_assign_proc : process(ap_CS_fsm_state34, grp_findScaleSpaceExtrem_fu_781_dog_pyr_0_val_V_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            dog_pyr_0_val_V_ce1 <= grp_findScaleSpaceExtrem_fu_781_dog_pyr_0_val_V_ce1;
        else 
            dog_pyr_0_val_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dog_pyr_0_val_V_we0_assign_proc : process(ap_CS_fsm_state32, grp_buildDoGPyramid_fu_922_dog_pyr_0_val_V_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            dog_pyr_0_val_V_we0 <= grp_buildDoGPyramid_fu_922_dog_pyr_0_val_V_we0;
        else 
            dog_pyr_0_val_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dog_pyr_1_val_V_address0_assign_proc : process(ap_CS_fsm_state32, ap_CS_fsm_state34, grp_findScaleSpaceExtrem_fu_781_dog_pyr_1_val_V_address0, grp_buildDoGPyramid_fu_922_dog_pyr_1_val_V_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            dog_pyr_1_val_V_address0 <= grp_buildDoGPyramid_fu_922_dog_pyr_1_val_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            dog_pyr_1_val_V_address0 <= grp_findScaleSpaceExtrem_fu_781_dog_pyr_1_val_V_address0;
        else 
            dog_pyr_1_val_V_address0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dog_pyr_1_val_V_ce0_assign_proc : process(ap_CS_fsm_state32, ap_CS_fsm_state34, grp_findScaleSpaceExtrem_fu_781_dog_pyr_1_val_V_ce0, grp_buildDoGPyramid_fu_922_dog_pyr_1_val_V_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            dog_pyr_1_val_V_ce0 <= grp_buildDoGPyramid_fu_922_dog_pyr_1_val_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            dog_pyr_1_val_V_ce0 <= grp_findScaleSpaceExtrem_fu_781_dog_pyr_1_val_V_ce0;
        else 
            dog_pyr_1_val_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dog_pyr_1_val_V_ce1_assign_proc : process(ap_CS_fsm_state34, grp_findScaleSpaceExtrem_fu_781_dog_pyr_1_val_V_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            dog_pyr_1_val_V_ce1 <= grp_findScaleSpaceExtrem_fu_781_dog_pyr_1_val_V_ce1;
        else 
            dog_pyr_1_val_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dog_pyr_1_val_V_we0_assign_proc : process(ap_CS_fsm_state32, grp_buildDoGPyramid_fu_922_dog_pyr_1_val_V_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            dog_pyr_1_val_V_we0 <= grp_buildDoGPyramid_fu_922_dog_pyr_1_val_V_we0;
        else 
            dog_pyr_1_val_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dog_pyr_2_val_V_address0_assign_proc : process(ap_CS_fsm_state32, ap_CS_fsm_state34, grp_findScaleSpaceExtrem_fu_781_dog_pyr_2_val_V_address0, grp_buildDoGPyramid_fu_922_dog_pyr_2_val_V_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            dog_pyr_2_val_V_address0 <= grp_buildDoGPyramid_fu_922_dog_pyr_2_val_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            dog_pyr_2_val_V_address0 <= grp_findScaleSpaceExtrem_fu_781_dog_pyr_2_val_V_address0;
        else 
            dog_pyr_2_val_V_address0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dog_pyr_2_val_V_ce0_assign_proc : process(ap_CS_fsm_state32, ap_CS_fsm_state34, grp_findScaleSpaceExtrem_fu_781_dog_pyr_2_val_V_ce0, grp_buildDoGPyramid_fu_922_dog_pyr_2_val_V_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            dog_pyr_2_val_V_ce0 <= grp_buildDoGPyramid_fu_922_dog_pyr_2_val_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            dog_pyr_2_val_V_ce0 <= grp_findScaleSpaceExtrem_fu_781_dog_pyr_2_val_V_ce0;
        else 
            dog_pyr_2_val_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dog_pyr_2_val_V_ce1_assign_proc : process(ap_CS_fsm_state34, grp_findScaleSpaceExtrem_fu_781_dog_pyr_2_val_V_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            dog_pyr_2_val_V_ce1 <= grp_findScaleSpaceExtrem_fu_781_dog_pyr_2_val_V_ce1;
        else 
            dog_pyr_2_val_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dog_pyr_2_val_V_we0_assign_proc : process(ap_CS_fsm_state32, grp_buildDoGPyramid_fu_922_dog_pyr_2_val_V_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            dog_pyr_2_val_V_we0 <= grp_buildDoGPyramid_fu_922_dog_pyr_2_val_V_we0;
        else 
            dog_pyr_2_val_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dog_pyr_3_val_V_address0_assign_proc : process(ap_CS_fsm_state32, ap_CS_fsm_state34, grp_findScaleSpaceExtrem_fu_781_dog_pyr_3_val_V_address0, grp_buildDoGPyramid_fu_922_dog_pyr_3_val_V_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            dog_pyr_3_val_V_address0 <= grp_buildDoGPyramid_fu_922_dog_pyr_3_val_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            dog_pyr_3_val_V_address0 <= grp_findScaleSpaceExtrem_fu_781_dog_pyr_3_val_V_address0;
        else 
            dog_pyr_3_val_V_address0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dog_pyr_3_val_V_ce0_assign_proc : process(ap_CS_fsm_state32, ap_CS_fsm_state34, grp_findScaleSpaceExtrem_fu_781_dog_pyr_3_val_V_ce0, grp_buildDoGPyramid_fu_922_dog_pyr_3_val_V_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            dog_pyr_3_val_V_ce0 <= grp_buildDoGPyramid_fu_922_dog_pyr_3_val_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            dog_pyr_3_val_V_ce0 <= grp_findScaleSpaceExtrem_fu_781_dog_pyr_3_val_V_ce0;
        else 
            dog_pyr_3_val_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dog_pyr_3_val_V_ce1_assign_proc : process(ap_CS_fsm_state34, grp_findScaleSpaceExtrem_fu_781_dog_pyr_3_val_V_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            dog_pyr_3_val_V_ce1 <= grp_findScaleSpaceExtrem_fu_781_dog_pyr_3_val_V_ce1;
        else 
            dog_pyr_3_val_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dog_pyr_3_val_V_we0_assign_proc : process(ap_CS_fsm_state32, grp_buildDoGPyramid_fu_922_dog_pyr_3_val_V_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            dog_pyr_3_val_V_we0 <= grp_buildDoGPyramid_fu_922_dog_pyr_3_val_V_we0;
        else 
            dog_pyr_3_val_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dog_pyr_4_val_V_address0_assign_proc : process(ap_CS_fsm_state32, ap_CS_fsm_state34, grp_findScaleSpaceExtrem_fu_781_dog_pyr_4_val_V_address0, grp_buildDoGPyramid_fu_922_dog_pyr_4_val_V_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            dog_pyr_4_val_V_address0 <= grp_buildDoGPyramid_fu_922_dog_pyr_4_val_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            dog_pyr_4_val_V_address0 <= grp_findScaleSpaceExtrem_fu_781_dog_pyr_4_val_V_address0;
        else 
            dog_pyr_4_val_V_address0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dog_pyr_4_val_V_ce0_assign_proc : process(ap_CS_fsm_state32, ap_CS_fsm_state34, grp_findScaleSpaceExtrem_fu_781_dog_pyr_4_val_V_ce0, grp_buildDoGPyramid_fu_922_dog_pyr_4_val_V_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            dog_pyr_4_val_V_ce0 <= grp_buildDoGPyramid_fu_922_dog_pyr_4_val_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            dog_pyr_4_val_V_ce0 <= grp_findScaleSpaceExtrem_fu_781_dog_pyr_4_val_V_ce0;
        else 
            dog_pyr_4_val_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dog_pyr_4_val_V_ce1_assign_proc : process(ap_CS_fsm_state34, grp_findScaleSpaceExtrem_fu_781_dog_pyr_4_val_V_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            dog_pyr_4_val_V_ce1 <= grp_findScaleSpaceExtrem_fu_781_dog_pyr_4_val_V_ce1;
        else 
            dog_pyr_4_val_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dog_pyr_4_val_V_we0_assign_proc : process(ap_CS_fsm_state32, grp_buildDoGPyramid_fu_922_dog_pyr_4_val_V_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            dog_pyr_4_val_V_we0 <= grp_buildDoGPyramid_fu_922_dog_pyr_4_val_V_we0;
        else 
            dog_pyr_4_val_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    gauss_pyr_0_val_V_address0_assign_proc : process(ap_CS_fsm_state30, ap_CS_fsm_state32, ap_CS_fsm_state34, grp_buildGaussianPyramid_fu_719_gauss_pyr_0_val_V_address0, grp_findScaleSpaceExtrem_fu_781_gauss_pyr_0_val_V_address0, grp_calcSIFTDescriptor12_fu_852_img_0_val_V_address0, grp_buildDoGPyramid_fu_922_gauss_pyr_0_val_V_address0, ap_CS_fsm_state59)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            gauss_pyr_0_val_V_address0 <= grp_buildDoGPyramid_fu_922_gauss_pyr_0_val_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            gauss_pyr_0_val_V_address0 <= grp_calcSIFTDescriptor12_fu_852_img_0_val_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            gauss_pyr_0_val_V_address0 <= grp_findScaleSpaceExtrem_fu_781_gauss_pyr_0_val_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            gauss_pyr_0_val_V_address0 <= grp_buildGaussianPyramid_fu_719_gauss_pyr_0_val_V_address0;
        else 
            gauss_pyr_0_val_V_address0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gauss_pyr_0_val_V_address1_assign_proc : process(ap_CS_fsm_state34, grp_findScaleSpaceExtrem_fu_781_gauss_pyr_0_val_V_address1, grp_calcSIFTDescriptor12_fu_852_img_0_val_V_address1, ap_CS_fsm_state59)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            gauss_pyr_0_val_V_address1 <= grp_calcSIFTDescriptor12_fu_852_img_0_val_V_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            gauss_pyr_0_val_V_address1 <= grp_findScaleSpaceExtrem_fu_781_gauss_pyr_0_val_V_address1;
        else 
            gauss_pyr_0_val_V_address1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gauss_pyr_0_val_V_ce0_assign_proc : process(ap_CS_fsm_state30, ap_CS_fsm_state32, ap_CS_fsm_state34, grp_buildGaussianPyramid_fu_719_gauss_pyr_0_val_V_ce0, grp_findScaleSpaceExtrem_fu_781_gauss_pyr_0_val_V_ce0, grp_calcSIFTDescriptor12_fu_852_img_0_val_V_ce0, grp_buildDoGPyramid_fu_922_gauss_pyr_0_val_V_ce0, ap_CS_fsm_state59)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            gauss_pyr_0_val_V_ce0 <= grp_buildDoGPyramid_fu_922_gauss_pyr_0_val_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            gauss_pyr_0_val_V_ce0 <= grp_calcSIFTDescriptor12_fu_852_img_0_val_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            gauss_pyr_0_val_V_ce0 <= grp_findScaleSpaceExtrem_fu_781_gauss_pyr_0_val_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            gauss_pyr_0_val_V_ce0 <= grp_buildGaussianPyramid_fu_719_gauss_pyr_0_val_V_ce0;
        else 
            gauss_pyr_0_val_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    gauss_pyr_0_val_V_ce1_assign_proc : process(ap_CS_fsm_state34, grp_findScaleSpaceExtrem_fu_781_gauss_pyr_0_val_V_ce1, grp_calcSIFTDescriptor12_fu_852_img_0_val_V_ce1, ap_CS_fsm_state59)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            gauss_pyr_0_val_V_ce1 <= grp_calcSIFTDescriptor12_fu_852_img_0_val_V_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            gauss_pyr_0_val_V_ce1 <= grp_findScaleSpaceExtrem_fu_781_gauss_pyr_0_val_V_ce1;
        else 
            gauss_pyr_0_val_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    gauss_pyr_0_val_V_we0_assign_proc : process(ap_CS_fsm_state30, grp_buildGaussianPyramid_fu_719_gauss_pyr_0_val_V_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            gauss_pyr_0_val_V_we0 <= grp_buildGaussianPyramid_fu_719_gauss_pyr_0_val_V_we0;
        else 
            gauss_pyr_0_val_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    gauss_pyr_1_val_V_address0_assign_proc : process(ap_CS_fsm_state30, ap_CS_fsm_state32, ap_CS_fsm_state34, grp_buildGaussianPyramid_fu_719_gauss_pyr_1_val_V_address0, grp_findScaleSpaceExtrem_fu_781_gauss_pyr_1_val_V_address0, grp_calcSIFTDescriptor12_fu_852_img_1_val_V_address0, grp_buildDoGPyramid_fu_922_gauss_pyr_1_val_V_address0, ap_CS_fsm_state59)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            gauss_pyr_1_val_V_address0 <= grp_buildDoGPyramid_fu_922_gauss_pyr_1_val_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            gauss_pyr_1_val_V_address0 <= grp_calcSIFTDescriptor12_fu_852_img_1_val_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            gauss_pyr_1_val_V_address0 <= grp_findScaleSpaceExtrem_fu_781_gauss_pyr_1_val_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            gauss_pyr_1_val_V_address0 <= grp_buildGaussianPyramid_fu_719_gauss_pyr_1_val_V_address0;
        else 
            gauss_pyr_1_val_V_address0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gauss_pyr_1_val_V_address1_assign_proc : process(ap_CS_fsm_state30, ap_CS_fsm_state34, grp_buildGaussianPyramid_fu_719_gauss_pyr_1_val_V_address1, grp_findScaleSpaceExtrem_fu_781_gauss_pyr_1_val_V_address1, grp_calcSIFTDescriptor12_fu_852_img_1_val_V_address1, ap_CS_fsm_state59)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            gauss_pyr_1_val_V_address1 <= grp_calcSIFTDescriptor12_fu_852_img_1_val_V_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            gauss_pyr_1_val_V_address1 <= grp_findScaleSpaceExtrem_fu_781_gauss_pyr_1_val_V_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            gauss_pyr_1_val_V_address1 <= grp_buildGaussianPyramid_fu_719_gauss_pyr_1_val_V_address1;
        else 
            gauss_pyr_1_val_V_address1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gauss_pyr_1_val_V_ce0_assign_proc : process(ap_CS_fsm_state30, ap_CS_fsm_state32, ap_CS_fsm_state34, grp_buildGaussianPyramid_fu_719_gauss_pyr_1_val_V_ce0, grp_findScaleSpaceExtrem_fu_781_gauss_pyr_1_val_V_ce0, grp_calcSIFTDescriptor12_fu_852_img_1_val_V_ce0, grp_buildDoGPyramid_fu_922_gauss_pyr_1_val_V_ce0, ap_CS_fsm_state59)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            gauss_pyr_1_val_V_ce0 <= grp_buildDoGPyramid_fu_922_gauss_pyr_1_val_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            gauss_pyr_1_val_V_ce0 <= grp_calcSIFTDescriptor12_fu_852_img_1_val_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            gauss_pyr_1_val_V_ce0 <= grp_findScaleSpaceExtrem_fu_781_gauss_pyr_1_val_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            gauss_pyr_1_val_V_ce0 <= grp_buildGaussianPyramid_fu_719_gauss_pyr_1_val_V_ce0;
        else 
            gauss_pyr_1_val_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    gauss_pyr_1_val_V_ce1_assign_proc : process(ap_CS_fsm_state30, ap_CS_fsm_state34, grp_buildGaussianPyramid_fu_719_gauss_pyr_1_val_V_ce1, grp_findScaleSpaceExtrem_fu_781_gauss_pyr_1_val_V_ce1, grp_calcSIFTDescriptor12_fu_852_img_1_val_V_ce1, ap_CS_fsm_state59)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            gauss_pyr_1_val_V_ce1 <= grp_calcSIFTDescriptor12_fu_852_img_1_val_V_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            gauss_pyr_1_val_V_ce1 <= grp_findScaleSpaceExtrem_fu_781_gauss_pyr_1_val_V_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            gauss_pyr_1_val_V_ce1 <= grp_buildGaussianPyramid_fu_719_gauss_pyr_1_val_V_ce1;
        else 
            gauss_pyr_1_val_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    gauss_pyr_1_val_V_we1_assign_proc : process(ap_CS_fsm_state30, grp_buildGaussianPyramid_fu_719_gauss_pyr_1_val_V_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            gauss_pyr_1_val_V_we1 <= grp_buildGaussianPyramid_fu_719_gauss_pyr_1_val_V_we1;
        else 
            gauss_pyr_1_val_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    gauss_pyr_2_val_V_address0_assign_proc : process(ap_CS_fsm_state30, ap_CS_fsm_state32, ap_CS_fsm_state34, grp_buildGaussianPyramid_fu_719_gauss_pyr_2_val_V_address0, grp_findScaleSpaceExtrem_fu_781_gauss_pyr_2_val_V_address0, grp_calcSIFTDescriptor12_fu_852_img_2_val_V_address0, grp_buildDoGPyramid_fu_922_gauss_pyr_2_val_V_address0, ap_CS_fsm_state59)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            gauss_pyr_2_val_V_address0 <= grp_buildDoGPyramid_fu_922_gauss_pyr_2_val_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            gauss_pyr_2_val_V_address0 <= grp_calcSIFTDescriptor12_fu_852_img_2_val_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            gauss_pyr_2_val_V_address0 <= grp_findScaleSpaceExtrem_fu_781_gauss_pyr_2_val_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            gauss_pyr_2_val_V_address0 <= grp_buildGaussianPyramid_fu_719_gauss_pyr_2_val_V_address0;
        else 
            gauss_pyr_2_val_V_address0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gauss_pyr_2_val_V_address1_assign_proc : process(ap_CS_fsm_state30, ap_CS_fsm_state34, grp_buildGaussianPyramid_fu_719_gauss_pyr_2_val_V_address1, grp_findScaleSpaceExtrem_fu_781_gauss_pyr_2_val_V_address1, grp_calcSIFTDescriptor12_fu_852_img_2_val_V_address1, ap_CS_fsm_state59)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            gauss_pyr_2_val_V_address1 <= grp_calcSIFTDescriptor12_fu_852_img_2_val_V_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            gauss_pyr_2_val_V_address1 <= grp_findScaleSpaceExtrem_fu_781_gauss_pyr_2_val_V_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            gauss_pyr_2_val_V_address1 <= grp_buildGaussianPyramid_fu_719_gauss_pyr_2_val_V_address1;
        else 
            gauss_pyr_2_val_V_address1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gauss_pyr_2_val_V_ce0_assign_proc : process(ap_CS_fsm_state30, ap_CS_fsm_state32, ap_CS_fsm_state34, grp_buildGaussianPyramid_fu_719_gauss_pyr_2_val_V_ce0, grp_findScaleSpaceExtrem_fu_781_gauss_pyr_2_val_V_ce0, grp_calcSIFTDescriptor12_fu_852_img_2_val_V_ce0, grp_buildDoGPyramid_fu_922_gauss_pyr_2_val_V_ce0, ap_CS_fsm_state59)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            gauss_pyr_2_val_V_ce0 <= grp_buildDoGPyramid_fu_922_gauss_pyr_2_val_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            gauss_pyr_2_val_V_ce0 <= grp_calcSIFTDescriptor12_fu_852_img_2_val_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            gauss_pyr_2_val_V_ce0 <= grp_findScaleSpaceExtrem_fu_781_gauss_pyr_2_val_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            gauss_pyr_2_val_V_ce0 <= grp_buildGaussianPyramid_fu_719_gauss_pyr_2_val_V_ce0;
        else 
            gauss_pyr_2_val_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    gauss_pyr_2_val_V_ce1_assign_proc : process(ap_CS_fsm_state30, ap_CS_fsm_state34, grp_buildGaussianPyramid_fu_719_gauss_pyr_2_val_V_ce1, grp_findScaleSpaceExtrem_fu_781_gauss_pyr_2_val_V_ce1, grp_calcSIFTDescriptor12_fu_852_img_2_val_V_ce1, ap_CS_fsm_state59)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            gauss_pyr_2_val_V_ce1 <= grp_calcSIFTDescriptor12_fu_852_img_2_val_V_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            gauss_pyr_2_val_V_ce1 <= grp_findScaleSpaceExtrem_fu_781_gauss_pyr_2_val_V_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            gauss_pyr_2_val_V_ce1 <= grp_buildGaussianPyramid_fu_719_gauss_pyr_2_val_V_ce1;
        else 
            gauss_pyr_2_val_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    gauss_pyr_2_val_V_we1_assign_proc : process(ap_CS_fsm_state30, grp_buildGaussianPyramid_fu_719_gauss_pyr_2_val_V_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            gauss_pyr_2_val_V_we1 <= grp_buildGaussianPyramid_fu_719_gauss_pyr_2_val_V_we1;
        else 
            gauss_pyr_2_val_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    gauss_pyr_3_val_V_address0_assign_proc : process(ap_CS_fsm_state27, ap_CS_fsm_state30, ap_CS_fsm_state32, ap_CS_fsm_state34, grp_buildGaussianPyramid_fu_719_gauss_pyr_3_val_V_address0, grp_findScaleSpaceExtrem_fu_781_gauss_pyr_3_val_V_address0, grp_calcSIFTDescriptor12_fu_852_img_3_val_V_address0, grp_Resize_fu_908_src_val_V_address0, grp_buildDoGPyramid_fu_922_gauss_pyr_3_val_V_address0, ap_CS_fsm_state59)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            gauss_pyr_3_val_V_address0 <= grp_buildDoGPyramid_fu_922_gauss_pyr_3_val_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            gauss_pyr_3_val_V_address0 <= grp_Resize_fu_908_src_val_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            gauss_pyr_3_val_V_address0 <= grp_calcSIFTDescriptor12_fu_852_img_3_val_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            gauss_pyr_3_val_V_address0 <= grp_findScaleSpaceExtrem_fu_781_gauss_pyr_3_val_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            gauss_pyr_3_val_V_address0 <= grp_buildGaussianPyramid_fu_719_gauss_pyr_3_val_V_address0;
        else 
            gauss_pyr_3_val_V_address0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gauss_pyr_3_val_V_address1_assign_proc : process(ap_CS_fsm_state30, ap_CS_fsm_state34, grp_buildGaussianPyramid_fu_719_gauss_pyr_3_val_V_address1, grp_findScaleSpaceExtrem_fu_781_gauss_pyr_3_val_V_address1, grp_calcSIFTDescriptor12_fu_852_img_3_val_V_address1, ap_CS_fsm_state59)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            gauss_pyr_3_val_V_address1 <= grp_calcSIFTDescriptor12_fu_852_img_3_val_V_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            gauss_pyr_3_val_V_address1 <= grp_findScaleSpaceExtrem_fu_781_gauss_pyr_3_val_V_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            gauss_pyr_3_val_V_address1 <= grp_buildGaussianPyramid_fu_719_gauss_pyr_3_val_V_address1;
        else 
            gauss_pyr_3_val_V_address1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gauss_pyr_3_val_V_ce0_assign_proc : process(ap_CS_fsm_state27, ap_CS_fsm_state30, ap_CS_fsm_state32, ap_CS_fsm_state34, grp_buildGaussianPyramid_fu_719_gauss_pyr_3_val_V_ce0, grp_findScaleSpaceExtrem_fu_781_gauss_pyr_3_val_V_ce0, grp_calcSIFTDescriptor12_fu_852_img_3_val_V_ce0, grp_Resize_fu_908_src_val_V_ce0, grp_buildDoGPyramid_fu_922_gauss_pyr_3_val_V_ce0, ap_CS_fsm_state59)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            gauss_pyr_3_val_V_ce0 <= grp_buildDoGPyramid_fu_922_gauss_pyr_3_val_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            gauss_pyr_3_val_V_ce0 <= grp_Resize_fu_908_src_val_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            gauss_pyr_3_val_V_ce0 <= grp_calcSIFTDescriptor12_fu_852_img_3_val_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            gauss_pyr_3_val_V_ce0 <= grp_findScaleSpaceExtrem_fu_781_gauss_pyr_3_val_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            gauss_pyr_3_val_V_ce0 <= grp_buildGaussianPyramid_fu_719_gauss_pyr_3_val_V_ce0;
        else 
            gauss_pyr_3_val_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    gauss_pyr_3_val_V_ce1_assign_proc : process(ap_CS_fsm_state30, ap_CS_fsm_state34, grp_buildGaussianPyramid_fu_719_gauss_pyr_3_val_V_ce1, grp_findScaleSpaceExtrem_fu_781_gauss_pyr_3_val_V_ce1, grp_calcSIFTDescriptor12_fu_852_img_3_val_V_ce1, ap_CS_fsm_state59)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            gauss_pyr_3_val_V_ce1 <= grp_calcSIFTDescriptor12_fu_852_img_3_val_V_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            gauss_pyr_3_val_V_ce1 <= grp_findScaleSpaceExtrem_fu_781_gauss_pyr_3_val_V_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            gauss_pyr_3_val_V_ce1 <= grp_buildGaussianPyramid_fu_719_gauss_pyr_3_val_V_ce1;
        else 
            gauss_pyr_3_val_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    gauss_pyr_3_val_V_we1_assign_proc : process(ap_CS_fsm_state30, grp_buildGaussianPyramid_fu_719_gauss_pyr_3_val_V_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            gauss_pyr_3_val_V_we1 <= grp_buildGaussianPyramid_fu_719_gauss_pyr_3_val_V_we1;
        else 
            gauss_pyr_3_val_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    gauss_pyr_4_val_V_address0_assign_proc : process(ap_CS_fsm_state30, ap_CS_fsm_state32, ap_CS_fsm_state34, grp_buildGaussianPyramid_fu_719_gauss_pyr_4_val_V_address0, grp_findScaleSpaceExtrem_fu_781_gauss_pyr_4_val_V_address0, grp_calcSIFTDescriptor12_fu_852_img_4_val_V_address0, grp_buildDoGPyramid_fu_922_gauss_pyr_4_val_V_address0, ap_CS_fsm_state59)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            gauss_pyr_4_val_V_address0 <= grp_buildDoGPyramid_fu_922_gauss_pyr_4_val_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            gauss_pyr_4_val_V_address0 <= grp_calcSIFTDescriptor12_fu_852_img_4_val_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            gauss_pyr_4_val_V_address0 <= grp_findScaleSpaceExtrem_fu_781_gauss_pyr_4_val_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            gauss_pyr_4_val_V_address0 <= grp_buildGaussianPyramid_fu_719_gauss_pyr_4_val_V_address0;
        else 
            gauss_pyr_4_val_V_address0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gauss_pyr_4_val_V_address1_assign_proc : process(ap_CS_fsm_state30, ap_CS_fsm_state34, grp_buildGaussianPyramid_fu_719_gauss_pyr_4_val_V_address1, grp_findScaleSpaceExtrem_fu_781_gauss_pyr_4_val_V_address1, grp_calcSIFTDescriptor12_fu_852_img_4_val_V_address1, ap_CS_fsm_state59)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            gauss_pyr_4_val_V_address1 <= grp_calcSIFTDescriptor12_fu_852_img_4_val_V_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            gauss_pyr_4_val_V_address1 <= grp_findScaleSpaceExtrem_fu_781_gauss_pyr_4_val_V_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            gauss_pyr_4_val_V_address1 <= grp_buildGaussianPyramid_fu_719_gauss_pyr_4_val_V_address1;
        else 
            gauss_pyr_4_val_V_address1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gauss_pyr_4_val_V_ce0_assign_proc : process(ap_CS_fsm_state30, ap_CS_fsm_state32, ap_CS_fsm_state34, grp_buildGaussianPyramid_fu_719_gauss_pyr_4_val_V_ce0, grp_findScaleSpaceExtrem_fu_781_gauss_pyr_4_val_V_ce0, grp_calcSIFTDescriptor12_fu_852_img_4_val_V_ce0, grp_buildDoGPyramid_fu_922_gauss_pyr_4_val_V_ce0, ap_CS_fsm_state59)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            gauss_pyr_4_val_V_ce0 <= grp_buildDoGPyramid_fu_922_gauss_pyr_4_val_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            gauss_pyr_4_val_V_ce0 <= grp_calcSIFTDescriptor12_fu_852_img_4_val_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            gauss_pyr_4_val_V_ce0 <= grp_findScaleSpaceExtrem_fu_781_gauss_pyr_4_val_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            gauss_pyr_4_val_V_ce0 <= grp_buildGaussianPyramid_fu_719_gauss_pyr_4_val_V_ce0;
        else 
            gauss_pyr_4_val_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    gauss_pyr_4_val_V_ce1_assign_proc : process(ap_CS_fsm_state30, ap_CS_fsm_state34, grp_buildGaussianPyramid_fu_719_gauss_pyr_4_val_V_ce1, grp_findScaleSpaceExtrem_fu_781_gauss_pyr_4_val_V_ce1, grp_calcSIFTDescriptor12_fu_852_img_4_val_V_ce1, ap_CS_fsm_state59)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            gauss_pyr_4_val_V_ce1 <= grp_calcSIFTDescriptor12_fu_852_img_4_val_V_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            gauss_pyr_4_val_V_ce1 <= grp_findScaleSpaceExtrem_fu_781_gauss_pyr_4_val_V_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            gauss_pyr_4_val_V_ce1 <= grp_buildGaussianPyramid_fu_719_gauss_pyr_4_val_V_ce1;
        else 
            gauss_pyr_4_val_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    gauss_pyr_4_val_V_we1_assign_proc : process(ap_CS_fsm_state30, grp_buildGaussianPyramid_fu_719_gauss_pyr_4_val_V_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            gauss_pyr_4_val_V_we1 <= grp_buildGaussianPyramid_fu_719_gauss_pyr_4_val_V_we1;
        else 
            gauss_pyr_4_val_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    gauss_pyr_5_val_V_address0_assign_proc : process(ap_CS_fsm_state30, ap_CS_fsm_state32, ap_CS_fsm_state34, grp_buildGaussianPyramid_fu_719_gauss_pyr_5_val_V_address0, grp_findScaleSpaceExtrem_fu_781_gauss_pyr_5_val_V_address0, grp_calcSIFTDescriptor12_fu_852_img_5_val_V_address0, grp_buildDoGPyramid_fu_922_gauss_pyr_5_val_V_address0, ap_CS_fsm_state59)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            gauss_pyr_5_val_V_address0 <= grp_buildDoGPyramid_fu_922_gauss_pyr_5_val_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            gauss_pyr_5_val_V_address0 <= grp_calcSIFTDescriptor12_fu_852_img_5_val_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            gauss_pyr_5_val_V_address0 <= grp_findScaleSpaceExtrem_fu_781_gauss_pyr_5_val_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            gauss_pyr_5_val_V_address0 <= grp_buildGaussianPyramid_fu_719_gauss_pyr_5_val_V_address0;
        else 
            gauss_pyr_5_val_V_address0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gauss_pyr_5_val_V_address1_assign_proc : process(ap_CS_fsm_state34, grp_findScaleSpaceExtrem_fu_781_gauss_pyr_5_val_V_address1, grp_calcSIFTDescriptor12_fu_852_img_5_val_V_address1, ap_CS_fsm_state59)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            gauss_pyr_5_val_V_address1 <= grp_calcSIFTDescriptor12_fu_852_img_5_val_V_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            gauss_pyr_5_val_V_address1 <= grp_findScaleSpaceExtrem_fu_781_gauss_pyr_5_val_V_address1;
        else 
            gauss_pyr_5_val_V_address1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gauss_pyr_5_val_V_ce0_assign_proc : process(ap_CS_fsm_state30, ap_CS_fsm_state32, ap_CS_fsm_state34, grp_buildGaussianPyramid_fu_719_gauss_pyr_5_val_V_ce0, grp_findScaleSpaceExtrem_fu_781_gauss_pyr_5_val_V_ce0, grp_calcSIFTDescriptor12_fu_852_img_5_val_V_ce0, grp_buildDoGPyramid_fu_922_gauss_pyr_5_val_V_ce0, ap_CS_fsm_state59)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            gauss_pyr_5_val_V_ce0 <= grp_buildDoGPyramid_fu_922_gauss_pyr_5_val_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            gauss_pyr_5_val_V_ce0 <= grp_calcSIFTDescriptor12_fu_852_img_5_val_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            gauss_pyr_5_val_V_ce0 <= grp_findScaleSpaceExtrem_fu_781_gauss_pyr_5_val_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            gauss_pyr_5_val_V_ce0 <= grp_buildGaussianPyramid_fu_719_gauss_pyr_5_val_V_ce0;
        else 
            gauss_pyr_5_val_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    gauss_pyr_5_val_V_ce1_assign_proc : process(ap_CS_fsm_state34, grp_findScaleSpaceExtrem_fu_781_gauss_pyr_5_val_V_ce1, grp_calcSIFTDescriptor12_fu_852_img_5_val_V_ce1, ap_CS_fsm_state59)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            gauss_pyr_5_val_V_ce1 <= grp_calcSIFTDescriptor12_fu_852_img_5_val_V_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            gauss_pyr_5_val_V_ce1 <= grp_findScaleSpaceExtrem_fu_781_gauss_pyr_5_val_V_ce1;
        else 
            gauss_pyr_5_val_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    gauss_pyr_5_val_V_we0_assign_proc : process(ap_CS_fsm_state30, grp_buildGaussianPyramid_fu_719_gauss_pyr_5_val_V_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            gauss_pyr_5_val_V_we0 <= grp_buildGaussianPyramid_fu_719_gauss_pyr_5_val_V_we0;
        else 
            gauss_pyr_5_val_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_GaussianBlur15_fu_772_ap_start <= grp_GaussianBlur15_fu_772_ap_start_reg;
    grp_Resize_fu_908_ap_start <= grp_Resize_fu_908_ap_start_reg;
    grp_buildDoGPyramid_fu_922_ap_start <= grp_buildDoGPyramid_fu_922_ap_start_reg;
    grp_buildGaussianPyramid_fu_719_ap_start <= grp_buildGaussianPyramid_fu_719_ap_start_reg;
    grp_calcSIFTDescriptor12_fu_852_ap_start <= grp_calcSIFTDescriptor12_fu_852_ap_start_reg;
    grp_findScaleSpaceExtrem_fu_781_ap_start <= grp_findScaleSpaceExtrem_fu_781_ap_start_reg;

    grp_fu_972_p0_assign_proc : process(reg_993, tmp_i_i_reg_2732, ap_CS_fsm_state12, ap_CS_fsm_state50)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
            grp_fu_972_p0 <= reg_993;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_fu_972_p0 <= tmp_i_i_reg_2732;
        else 
            grp_fu_972_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_972_p1_assign_proc : process(scale_reg_3038, ap_CS_fsm_state12, ap_CS_fsm_state50)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
            grp_fu_972_p1 <= scale_reg_3038;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_fu_972_p1 <= ap_const_lv32_3F317218;
        else 
            grp_fu_972_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_981_p0_assign_proc : process(tmp_i_201_fu_1691_p3, ap_CS_fsm_state4, y_assign1_fu_2145_p1, ap_CS_fsm_state37, tmp_750_i1_fu_2149_p1, ap_CS_fsm_state48)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            grp_fu_981_p0 <= tmp_750_i1_fu_2149_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            grp_fu_981_p0 <= y_assign1_fu_2145_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_981_p0 <= tmp_i_201_fu_1691_p3;
        else 
            grp_fu_981_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

        grp_fu_985_p0 <= std_logic_vector(IEEE.numeric_std.resize(signed(keypoints_val_pt_y_l_reg_3023),32));

    grp_pow_generic_float_s_fu_887_ap_start <= grp_pow_generic_float_s_fu_887_ap_start_reg;
    i_fu_2444_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(i_i_reg_708));
    index_V_fu_1723_p4 <= t_V_15_fu_1697_p1(27 downto 23);
    isNeg_1_fu_2207_p3 <= sh_assign_6_fu_2201_p2(8 downto 8);
    isNeg_2_fu_2350_p3 <= sh_assign_8_fu_2344_p2(8 downto 8);
    isNeg_fu_1875_p3 <= sh_assign_fu_1869_p2(8 downto 8);

    keypoints_val_angle_V_address0_assign_proc : process(ap_CS_fsm_state34, tmp_748_i_reg_2965, ap_CS_fsm_state57, grp_findScaleSpaceExtrem_fu_781_keypoints_val_angle_V_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            keypoints_val_angle_V_address0 <= tmp_748_i_reg_2965(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            keypoints_val_angle_V_address0 <= grp_findScaleSpaceExtrem_fu_781_keypoints_val_angle_V_address0;
        else 
            keypoints_val_angle_V_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    keypoints_val_angle_V_ce0_assign_proc : process(ap_CS_fsm_state34, ap_CS_fsm_state57, grp_findScaleSpaceExtrem_fu_781_keypoints_val_angle_V_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            keypoints_val_angle_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            keypoints_val_angle_V_ce0 <= grp_findScaleSpaceExtrem_fu_781_keypoints_val_angle_V_ce0;
        else 
            keypoints_val_angle_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    keypoints_val_angle_V_d0 <= grp_findScaleSpaceExtrem_fu_781_keypoints_val_angle_V_d0;

    keypoints_val_angle_V_we0_assign_proc : process(ap_CS_fsm_state34, grp_findScaleSpaceExtrem_fu_781_keypoints_val_angle_V_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            keypoints_val_angle_V_we0 <= grp_findScaleSpaceExtrem_fu_781_keypoints_val_angle_V_we0;
        else 
            keypoints_val_angle_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    keypoints_val_layer_address0_assign_proc : process(ap_CS_fsm_state34, tmp_748_i_fu_2111_p1, ap_CS_fsm_state35, grp_findScaleSpaceExtrem_fu_781_keypoints_val_layer_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            keypoints_val_layer_address0 <= tmp_748_i_fu_2111_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            keypoints_val_layer_address0 <= grp_findScaleSpaceExtrem_fu_781_keypoints_val_layer_address0;
        else 
            keypoints_val_layer_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    keypoints_val_layer_ce0_assign_proc : process(ap_CS_fsm_state34, ap_CS_fsm_state35, grp_findScaleSpaceExtrem_fu_781_keypoints_val_layer_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            keypoints_val_layer_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            keypoints_val_layer_ce0 <= grp_findScaleSpaceExtrem_fu_781_keypoints_val_layer_ce0;
        else 
            keypoints_val_layer_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    keypoints_val_layer_d0 <= grp_findScaleSpaceExtrem_fu_781_keypoints_val_layer_d0;

    keypoints_val_layer_we0_assign_proc : process(ap_CS_fsm_state34, grp_findScaleSpaceExtrem_fu_781_keypoints_val_layer_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            keypoints_val_layer_we0 <= grp_findScaleSpaceExtrem_fu_781_keypoints_val_layer_we0;
        else 
            keypoints_val_layer_we0 <= ap_const_logic_0;
        end if; 
    end process;


    keypoints_val_octave_address0_assign_proc : process(ap_CS_fsm_state34, tmp_748_i_fu_2111_p1, ap_CS_fsm_state35, grp_findScaleSpaceExtrem_fu_781_keypoints_val_octave_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            keypoints_val_octave_address0 <= tmp_748_i_fu_2111_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            keypoints_val_octave_address0 <= grp_findScaleSpaceExtrem_fu_781_keypoints_val_octave_address0;
        else 
            keypoints_val_octave_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    keypoints_val_octave_ce0_assign_proc : process(ap_CS_fsm_state34, ap_CS_fsm_state35, grp_findScaleSpaceExtrem_fu_781_keypoints_val_octave_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            keypoints_val_octave_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            keypoints_val_octave_ce0 <= grp_findScaleSpaceExtrem_fu_781_keypoints_val_octave_ce0;
        else 
            keypoints_val_octave_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    keypoints_val_octave_d0 <= grp_findScaleSpaceExtrem_fu_781_keypoints_val_octave_d0;

    keypoints_val_octave_we0_assign_proc : process(ap_CS_fsm_state34, grp_findScaleSpaceExtrem_fu_781_keypoints_val_octave_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            keypoints_val_octave_we0 <= grp_findScaleSpaceExtrem_fu_781_keypoints_val_octave_we0;
        else 
            keypoints_val_octave_we0 <= ap_const_logic_0;
        end if; 
    end process;


    keypoints_val_pt_x_address0_assign_proc : process(ap_CS_fsm_state34, tmp_748_i_reg_2965, ap_CS_fsm_state46, grp_findScaleSpaceExtrem_fu_781_keypoints_val_pt_x_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            keypoints_val_pt_x_address0 <= tmp_748_i_reg_2965(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            keypoints_val_pt_x_address0 <= grp_findScaleSpaceExtrem_fu_781_keypoints_val_pt_x_address0;
        else 
            keypoints_val_pt_x_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    keypoints_val_pt_x_ce0_assign_proc : process(ap_CS_fsm_state34, ap_CS_fsm_state46, grp_findScaleSpaceExtrem_fu_781_keypoints_val_pt_x_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            keypoints_val_pt_x_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            keypoints_val_pt_x_ce0 <= grp_findScaleSpaceExtrem_fu_781_keypoints_val_pt_x_ce0;
        else 
            keypoints_val_pt_x_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    keypoints_val_pt_x_d0 <= grp_findScaleSpaceExtrem_fu_781_keypoints_val_pt_x_d0;

    keypoints_val_pt_x_we0_assign_proc : process(ap_CS_fsm_state34, grp_findScaleSpaceExtrem_fu_781_keypoints_val_pt_x_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            keypoints_val_pt_x_we0 <= grp_findScaleSpaceExtrem_fu_781_keypoints_val_pt_x_we0;
        else 
            keypoints_val_pt_x_we0 <= ap_const_logic_0;
        end if; 
    end process;


    keypoints_val_pt_y_address0_assign_proc : process(ap_CS_fsm_state34, tmp_748_i_reg_2965, ap_CS_fsm_state46, grp_findScaleSpaceExtrem_fu_781_keypoints_val_pt_y_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            keypoints_val_pt_y_address0 <= tmp_748_i_reg_2965(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            keypoints_val_pt_y_address0 <= grp_findScaleSpaceExtrem_fu_781_keypoints_val_pt_y_address0;
        else 
            keypoints_val_pt_y_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    keypoints_val_pt_y_ce0_assign_proc : process(ap_CS_fsm_state34, ap_CS_fsm_state46, grp_findScaleSpaceExtrem_fu_781_keypoints_val_pt_y_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            keypoints_val_pt_y_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            keypoints_val_pt_y_ce0 <= grp_findScaleSpaceExtrem_fu_781_keypoints_val_pt_y_ce0;
        else 
            keypoints_val_pt_y_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    keypoints_val_pt_y_d0 <= grp_findScaleSpaceExtrem_fu_781_keypoints_val_pt_y_d0;

    keypoints_val_pt_y_we0_assign_proc : process(ap_CS_fsm_state34, grp_findScaleSpaceExtrem_fu_781_keypoints_val_pt_y_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            keypoints_val_pt_y_we0 <= grp_findScaleSpaceExtrem_fu_781_keypoints_val_pt_y_we0;
        else 
            keypoints_val_pt_y_we0 <= ap_const_logic_0;
        end if; 
    end process;


    keypoints_val_sigma_V_address0_assign_proc : process(ap_CS_fsm_state34, tmp_748_i_reg_2965, ap_CS_fsm_state57, grp_findScaleSpaceExtrem_fu_781_keypoints_val_sigma_V_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            keypoints_val_sigma_V_address0 <= tmp_748_i_reg_2965(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            keypoints_val_sigma_V_address0 <= grp_findScaleSpaceExtrem_fu_781_keypoints_val_sigma_V_address0;
        else 
            keypoints_val_sigma_V_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    keypoints_val_sigma_V_ce0_assign_proc : process(ap_CS_fsm_state34, ap_CS_fsm_state57, grp_findScaleSpaceExtrem_fu_781_keypoints_val_sigma_V_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            keypoints_val_sigma_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            keypoints_val_sigma_V_ce0 <= grp_findScaleSpaceExtrem_fu_781_keypoints_val_sigma_V_ce0;
        else 
            keypoints_val_sigma_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    keypoints_val_sigma_V_d0 <= grp_findScaleSpaceExtrem_fu_781_keypoints_val_sigma_V_d0;

    keypoints_val_sigma_V_we0_assign_proc : process(ap_CS_fsm_state34, grp_findScaleSpaceExtrem_fu_781_keypoints_val_sigma_V_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            keypoints_val_sigma_V_we0 <= grp_findScaleSpaceExtrem_fu_781_keypoints_val_sigma_V_we0;
        else 
            keypoints_val_sigma_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    loc_V_11_fu_1763_p1 <= p_Val2_101_fu_1758_p2(23 - 1 downto 0);
    loc_V_12_fu_1837_p4 <= p_Val2_103_fu_1826_p1(30 downto 23);
    loc_V_13_fu_1847_p1 <= p_Val2_103_fu_1826_p1(23 - 1 downto 0);
    loc_V_14_fu_2169_p4 <= p_Val2_108_fu_2157_p1(30 downto 23);
    loc_V_15_fu_2179_p1 <= p_Val2_108_fu_2157_p1(23 - 1 downto 0);
    loc_V_16_fu_2312_p4 <= p_Val2_s_fu_2301_p1(30 downto 23);
    loc_V_17_fu_2322_p1 <= p_Val2_s_fu_2301_p1(23 - 1 downto 0);
    loc_V_fu_1701_p4 <= t_V_15_fu_1697_p1(30 downto 23);
    mask_table1688_address0 <= tmp_1686_i_i_fu_1733_p1(5 - 1 downto 0);

    mask_table1688_ce0_assign_proc : process(ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            mask_table1688_ce0 <= ap_const_logic_1;
        else 
            mask_table1688_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    o_1_fu_1978_p2 <= std_logic_vector(unsigned(o_reg_676) + unsigned(ap_const_lv31_1));
    o_cast_fu_1969_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(o_reg_676),32));
    one_half_i_i_cast_fu_1754_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(one_half_table2684_q0),32));
    one_half_table2684_address0 <= tmp_1686_i_i_fu_1733_p1(5 - 1 downto 0);

    one_half_table2684_ce0_assign_proc : process(ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            one_half_table2684_ce0 <= ap_const_logic_1;
        else 
            one_half_table2684_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_01_i_i_fu_1818_p3 <= 
        reg_999 when (sel_tmp2_fu_1813_p2(0) = '1') else 
        sel_tmp_fu_1804_p1;
    p_Result_134_fu_1746_p3 <= (p_Result_s_fu_1739_p3 & ap_const_lv31_0);
    p_Result_135_fu_1789_p3 <= (tmp_346_fu_1779_p4 & xs_sig_V_fu_1773_p2);
    p_Result_136_fu_1829_p3 <= p_Val2_103_fu_1826_p1(31 downto 31);
    p_Result_137_fu_2161_p3 <= p_Val2_108_fu_2157_p1(31 downto 31);
    p_Result_138_fu_2304_p3 <= p_Val2_s_fu_2301_p1(31 downto 31);
    p_Result_s_fu_1739_p3 <= t_V_15_reg_2737(31 downto 31);
    p_Val2_101_fu_1758_p2 <= std_logic_vector(unsigned(t_V_15_reg_2737) + unsigned(one_half_i_i_cast_fu_1754_p1));
    p_Val2_103_fu_1826_p1 <= x_assign_63_reg_2769;
    p_Val2_105_fu_1947_p3 <= 
        tmp_186_fu_1933_p1 when (isNeg_fu_1875_p3(0) = '1') else 
        tmp_187_fu_1937_p4;
    p_Val2_108_fu_2157_p1 <= reg_999;
    p_Val2_110_fu_2279_p3 <= 
        tmp_190_fu_2265_p1 when (isNeg_1_fu_2207_p3(0) = '1') else 
        tmp_191_fu_2269_p4;
    p_Val2_114_fu_2422_p3 <= 
        tmp_194_fu_2408_p1 when (isNeg_2_fu_2350_p3(0) = '1') else 
        tmp_195_fu_2412_p4;
    p_Val2_117_fu_1961_p3 <= 
        p_Val2_i_i_i_fu_1955_p2 when (p_Result_136_fu_1829_p3(0) = '1') else 
        p_Val2_105_fu_1947_p3;
    p_Val2_118_fu_2293_p3 <= 
        p_Val2_i_i_i_i_fu_2287_p2 when (p_Result_137_fu_2161_p3(0) = '1') else 
        p_Val2_110_fu_2279_p3;
    p_Val2_119_fu_2436_p3 <= 
        p_Val2_i_i_i1_i_fu_2430_p2 when (p_Result_138_fu_2304_p3(0) = '1') else 
        p_Val2_114_fu_2422_p3;
    p_Val2_i_i_i1_i_fu_2430_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(p_Val2_114_fu_2422_p3));
    p_Val2_i_i_i_fu_1955_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(p_Val2_105_fu_1947_p3));
    p_Val2_i_i_i_i_fu_2287_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(p_Val2_110_fu_2279_p3));
    p_Val2_s_fu_2301_p1 <= x_assign_65_reg_3049;
    sel_tmp1_fu_1808_p2 <= (tmp_i_i1_reg_2743 xor ap_const_lv1_1);
    sel_tmp2_fu_1813_p2 <= (tmp_1685_i_i_reg_2749 and sel_tmp1_fu_1808_p2);
    sel_tmp_fu_1804_p1 <= sel_tmp_v_fu_1797_p3;
    sel_tmp_v_fu_1797_p3 <= 
        p_Result_134_fu_1746_p3 when (tmp_i_i1_reg_2743(0) = '1') else 
        p_Result_135_fu_1789_p3;
    sh_assign_5_fu_1893_p3 <= 
        tmp_1702_i_i_i_cast_fu_1889_p1 when (isNeg_fu_1875_p3(0) = '1') else 
        sh_assign_fu_1869_p2;
    sh_assign_6_fu_2201_p2 <= std_logic_vector(signed(ap_const_lv9_181) + signed(tmp_i_i_i_i_cast_i_fu_2197_p1));
        sh_assign_6_i_i_i39_1_fu_2380_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_assign_9_fu_2368_p3),25));

        sh_assign_6_i_i_i39_s_fu_2376_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_assign_9_fu_2368_p3),32));

        sh_assign_6_i_i_i_ca_2_fu_1905_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_assign_5_fu_1893_p3),25));

        sh_assign_6_i_i_i_ca_3_fu_2233_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_assign_7_fu_2225_p3),32));

        sh_assign_6_i_i_i_ca_4_fu_2237_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_assign_7_fu_2225_p3),25));

        sh_assign_6_i_i_i_ca_fu_1901_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_assign_5_fu_1893_p3),32));

    sh_assign_7_fu_2225_p3 <= 
        tmp_1702_i_i_i_cast_s_fu_2221_p1 when (isNeg_1_fu_2207_p3(0) = '1') else 
        sh_assign_6_fu_2201_p2;
    sh_assign_8_fu_2344_p2 <= std_logic_vector(signed(ap_const_lv9_181) + signed(tmp_i_i_i_i35_cast_i_fu_2340_p1));
    sh_assign_9_fu_2368_p3 <= 
        tmp_1702_i_i_i38_cas_fu_2364_p1 when (isNeg_2_fu_2350_p3(0) = '1') else 
        sh_assign_8_fu_2344_p2;
    sh_assign_fu_1869_p2 <= std_logic_vector(signed(ap_const_lv9_181) + signed(tmp_i_i_i_i_cast_fu_1865_p1));
    src_val_address0 <= grp_GaussianBlur15_fu_772_src_val_address0;
    src_val_ce0 <= grp_GaussianBlur15_fu_772_src_val_ce0;
    t_V_15_fu_1697_p1 <= reg_999;
    tmp_1104_fu_1925_p3 <= tmp_1704_i_i_i_fu_1913_p2(24 downto 24);
    tmp_1108_fu_2257_p3 <= tmp_1704_i_i_i_i_fu_2245_p2(24 downto 24);
    tmp_1112_fu_2400_p3 <= tmp_1704_i_i_i1_i_fu_2388_p2(24 downto 24);
    tmp_1113_fu_2117_p1 <= keypoints_val_layer_q0(3 - 1 downto 0);
    tmp_1685_i_i_fu_1717_p2 <= "1" when (unsigned(loc_V_fu_1701_p4) > unsigned(ap_const_lv8_96)) else "0";
    tmp_1686_i_i_fu_1733_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(index_V_fu_1723_p4),64));
    tmp_1688_i_i_fu_1767_p2 <= (mask_table1688_q0 xor ap_const_lv23_7FFFFF);
    tmp_1701_i_i_i1_i_fu_2326_p4 <= ((ap_const_lv1_1 & loc_V_17_fu_2322_p1) & ap_const_lv1_0);
    tmp_1701_i_i_i34_cas_fu_2336_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1701_i_i_i1_i_fu_2326_p4),79));
    tmp_1701_i_i_i_cast1_fu_1861_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1701_i_i_i_fu_1851_p4),79));
    tmp_1701_i_i_i_cast4_fu_2193_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1701_i_i_i_i_fu_2183_p4),79));
    tmp_1701_i_i_i_fu_1851_p4 <= ((ap_const_lv1_1 & loc_V_13_fu_1847_p1) & ap_const_lv1_0);
    tmp_1701_i_i_i_i_fu_2183_p4 <= ((ap_const_lv1_1 & loc_V_15_fu_2179_p1) & ap_const_lv1_0);
    tmp_1702_i_i_i1_i_fu_2358_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) - unsigned(loc_V_16_fu_2312_p4));
        tmp_1702_i_i_i38_cas_fu_2364_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_1702_i_i_i1_i_fu_2358_p2),9));

        tmp_1702_i_i_i_cast_fu_1889_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_1702_i_i_i_fu_1883_p2),9));

        tmp_1702_i_i_i_cast_s_fu_2221_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_1702_i_i_i_i_fu_2215_p2),9));

    tmp_1702_i_i_i_fu_1883_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) - unsigned(loc_V_12_fu_1837_p4));
    tmp_1702_i_i_i_i_fu_2215_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) - unsigned(loc_V_14_fu_2169_p4));
    tmp_1703_i_i_i1_i_fu_2384_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_assign_6_i_i_i39_s_fu_2376_p1),79));
    tmp_1703_i_i_i_fu_1909_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_assign_6_i_i_i_ca_fu_1901_p1),79));
    tmp_1703_i_i_i_i_fu_2241_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_assign_6_i_i_i_ca_3_fu_2233_p1),79));
    tmp_1704_i_i_i1_i_fu_2388_p2 <= std_logic_vector(shift_right(unsigned(tmp_1701_i_i_i1_i_fu_2326_p4),to_integer(unsigned('0' & sh_assign_6_i_i_i39_1_fu_2380_p1(25-1 downto 0)))));
    tmp_1704_i_i_i_fu_1913_p2 <= std_logic_vector(shift_right(unsigned(tmp_1701_i_i_i_fu_1851_p4),to_integer(unsigned('0' & sh_assign_6_i_i_i_ca_2_fu_1905_p1(25-1 downto 0)))));
    tmp_1704_i_i_i_i_fu_2245_p2 <= std_logic_vector(shift_right(unsigned(tmp_1701_i_i_i_i_fu_2183_p4),to_integer(unsigned('0' & sh_assign_6_i_i_i_ca_4_fu_2237_p1(25-1 downto 0)))));
    tmp_1705_i_i_i1_i_fu_2394_p2 <= std_logic_vector(shift_left(unsigned(tmp_1701_i_i_i34_cas_fu_2336_p1),to_integer(unsigned('0' & tmp_1703_i_i_i1_i_fu_2384_p1(31-1 downto 0)))));
    tmp_1705_i_i_i_fu_1919_p2 <= std_logic_vector(shift_left(unsigned(tmp_1701_i_i_i_cast1_fu_1861_p1),to_integer(unsigned('0' & tmp_1703_i_i_i_fu_1909_p1(31-1 downto 0)))));
    tmp_1705_i_i_i_i_fu_2251_p2 <= std_logic_vector(shift_left(unsigned(tmp_1701_i_i_i_cast4_fu_2193_p1),to_integer(unsigned('0' & tmp_1703_i_i_i_i_fu_2241_p1(31-1 downto 0)))));
    tmp_186_fu_1933_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1104_fu_1925_p3),32));
    tmp_187_fu_1937_p4 <= tmp_1705_i_i_i_fu_1919_p2(55 downto 24);
    tmp_190_fu_2265_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1108_fu_2257_p3),32));
    tmp_191_fu_2269_p4 <= tmp_1705_i_i_i_i_fu_2251_p2(55 downto 24);
    tmp_194_fu_2408_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1112_fu_2400_p3),32));
    tmp_195_fu_2412_p4 <= tmp_1705_i_i_i1_i_fu_2394_p2(55 downto 24);
    tmp_342_fu_1309_p2 <= "1" when (tmp_reg_422 = ap_const_lv3_5) else "0";
    tmp_344_fu_1405_p2 <= std_logic_vector(unsigned(tmp_343_reg_433) + unsigned(ap_const_lv3_1));
    tmp_345_fu_1631_p2 <= "1" when (tmp_343_reg_433 = ap_const_lv3_4) else "0";
    tmp_346_fu_1779_p4 <= p_Val2_101_fu_1758_p2(31 downto 23);
    tmp_347_fu_1973_p2 <= "1" when (signed(o_cast_fu_1969_p1) < signed(p_Val2_117_reg_2774)) else "0";
    tmp_348_fu_1984_p2 <= "1" when (o_reg_676 = ap_const_lv31_0) else "0";
        tmp_748_i_fu_2111_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(i_i_reg_708),64));

        tmp_750_i1_fu_2149_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(keypoints_val_pt_x_l_reg_3018),32));

    tmp_i1_fu_2106_p2 <= "1" when (signed(i_i_reg_708) < signed(idx1_reg_2956)) else "0";
    tmp_i_201_fu_1691_p3 <= 
        src_rows_read when (tmp_i_reg_2722(0) = '1') else 
        src_cols_read;
    tmp_i_fu_1687_p2 <= "1" when (signed(src_rows_read) < signed(src_cols_read)) else "0";
    tmp_i_i1_fu_1711_p2 <= "1" when (unsigned(loc_V_fu_1701_p4) < unsigned(ap_const_lv8_7E)) else "0";
    tmp_i_i_i_i35_cast_i_fu_2340_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loc_V_16_fu_2312_p4),9));
    tmp_i_i_i_i_cast_fu_1865_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loc_V_12_fu_1837_p4),9));
    tmp_i_i_i_i_cast_i_fu_2197_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loc_V_14_fu_2169_p4),9));
    tmp_s_fu_1039_p2 <= std_logic_vector(unsigned(tmp_reg_422) + unsigned(ap_const_lv3_1));
    xs_sig_V_fu_1773_p2 <= (tmp_1688_i_i_fu_1767_p2 and loc_V_11_fu_1763_p1);
        y_assign1_fu_2145_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(keypoints_val_octave_3_reg_2983),32));

end behav;
