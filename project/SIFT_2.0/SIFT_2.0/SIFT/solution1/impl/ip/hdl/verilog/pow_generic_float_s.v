// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module pow_generic_float_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ap_ce,
        base_r,
        exp,
        ap_return
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   ap_ce;
input  [31:0] base_r;
input  [31:0] exp;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_idle_pp0;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
reg    ap_block_pp0_stage0_11001;
wire   [5:0] pow_reduce_anonymo_7_address0;
reg    pow_reduce_anonymo_7_ce0;
wire   [5:0] pow_reduce_anonymo_7_q0;
wire   [5:0] pow_reduce_anonymo_6_address0;
reg    pow_reduce_anonymo_6_ce0;
wire   [55:0] pow_reduce_anonymo_6_q0;
wire   [3:0] pow_reduce_anonymo_9_address0;
reg    pow_reduce_anonymo_9_ce0;
wire   [51:0] pow_reduce_anonymo_9_q0;
wire   [5:0] pow_reduce_anonymo_10_address0;
reg    pow_reduce_anonymo_10_ce0;
wire   [48:0] pow_reduce_anonymo_10_q0;
wire   [5:0] pow_reduce_anonymo_8_address0;
reg    pow_reduce_anonymo_8_ce0;
wire   [43:0] pow_reduce_anonymo_8_q0;
wire   [8:0] pow_reduce_anonymo_11_address0;
reg    pow_reduce_anonymo_11_ce0;
wire   [26:0] pow_reduce_anonymo_11_q0;
wire   [4:0] pow_reduce_anonymo_address0;
reg    pow_reduce_anonymo_ce0;
wire   [7:0] pow_reduce_anonymo_q0;
reg   [31:0] exp_read_reg_2221;
reg   [31:0] exp_read_reg_2221_pp0_iter1_reg;
reg   [31:0] exp_read_reg_2221_pp0_iter2_reg;
reg   [31:0] exp_read_reg_2221_pp0_iter3_reg;
reg   [31:0] exp_read_reg_2221_pp0_iter4_reg;
reg   [31:0] exp_read_reg_2221_pp0_iter5_reg;
reg   [0:0] p_Result_s_reg_2226;
reg   [0:0] p_Result_s_reg_2226_pp0_iter1_reg;
reg   [0:0] p_Result_s_reg_2226_pp0_iter2_reg;
reg   [0:0] p_Result_s_reg_2226_pp0_iter3_reg;
reg   [0:0] p_Result_s_reg_2226_pp0_iter4_reg;
reg   [0:0] p_Result_s_reg_2226_pp0_iter5_reg;
reg   [7:0] loc_V_reg_2232;
reg   [7:0] loc_V_reg_2232_pp0_iter1_reg;
reg   [7:0] loc_V_reg_2232_pp0_iter2_reg;
reg   [7:0] loc_V_reg_2232_pp0_iter3_reg;
wire   [22:0] loc_V_4_fu_415_p1;
reg   [22:0] loc_V_4_reg_2239;
reg   [0:0] tmp_139_reg_2247;
reg   [0:0] tmp_139_reg_2247_pp0_iter1_reg;
reg   [0:0] tmp_139_reg_2247_pp0_iter2_reg;
reg   [0:0] tmp_139_reg_2247_pp0_iter3_reg;
wire   [0:0] tmp_27_fu_443_p2;
reg   [0:0] tmp_27_reg_2263;
reg   [0:0] tmp_27_reg_2263_pp0_iter2_reg;
reg   [0:0] tmp_27_reg_2263_pp0_iter3_reg;
reg   [0:0] tmp_27_reg_2263_pp0_iter4_reg;
reg   [0:0] tmp_27_reg_2263_pp0_iter5_reg;
wire   [0:0] tmp_i2_fu_448_p2;
reg   [0:0] tmp_i2_reg_2269;
reg   [0:0] tmp_i2_reg_2269_pp0_iter2_reg;
reg   [0:0] tmp_i2_reg_2269_pp0_iter3_reg;
reg   [0:0] tmp_i2_reg_2269_pp0_iter4_reg;
reg   [0:0] tmp_i2_reg_2269_pp0_iter5_reg;
reg   [55:0] log_sum_V_reg_2274;
reg   [55:0] log_sum_V_reg_2274_pp0_iter2_reg;
reg   [55:0] log_sum_V_reg_2274_pp0_iter3_reg;
reg   [55:0] log_sum_V_reg_2274_pp0_iter4_reg;
wire   [24:0] p_Val2_2_fu_484_p2;
reg   [24:0] p_Val2_2_reg_2279;
reg   [3:0] p_Val2_s_reg_2284;
reg   [3:0] p_Val2_s_reg_2284_pp0_iter2_reg;
reg   [3:0] p_Val2_s_reg_2284_pp0_iter3_reg;
wire   [44:0] p_Val2_21_fu_560_p2;
reg   [44:0] p_Val2_21_reg_2290;
reg   [40:0] p_Val2_56_reg_2295;
reg   [5:0] p_Val2_72_reg_2301;
reg   [5:0] p_Val2_72_reg_2301_pp0_iter3_reg;
reg   [34:0] tmp_112_reg_2307;
reg   [43:0] p_Val2_58_reg_2312;
reg   [5:0] p_Val2_73_reg_2318;
reg   [37:0] tmp_113_reg_2324;
wire   [0:0] tmp_s_fu_730_p2;
reg   [0:0] tmp_s_reg_2329;
reg   [0:0] tmp_s_reg_2329_pp0_iter5_reg;
wire   [0:0] tmp_i1_194_fu_736_p2;
reg   [0:0] tmp_i1_194_reg_2334;
reg   [0:0] tmp_i1_194_reg_2334_pp0_iter5_reg;
wire   [0:0] tmp_31_fu_741_p2;
reg   [0:0] tmp_31_reg_2340;
reg   [0:0] tmp_31_reg_2340_pp0_iter5_reg;
reg   [0:0] tmp_136_reg_2347;
reg   [0:0] tmp_136_reg_2347_pp0_iter5_reg;
reg   [0:0] tmp_138_reg_2352;
reg   [0:0] tmp_138_reg_2352_pp0_iter5_reg;
wire   [8:0] b_exp_2_fu_768_p3;
reg   [8:0] b_exp_2_reg_2358;
reg   [38:0] tmp_114_reg_2378;
reg   [22:0] ssdm_int_V_write_ass_3_reg_2383;
reg   [39:0] tmp_60_reg_2388;
wire   [65:0] p_Val2_22_fu_981_p2;
reg   [65:0] p_Val2_22_reg_2393;
wire   [7:0] loc_V_5_fu_998_p4;
reg   [7:0] loc_V_5_reg_2398;
wire   [8:0] m_exp_fu_1016_p2;
reg   [8:0] m_exp_reg_2403;
wire   [0:0] x_is_n1_fu_1043_p2;
reg   [0:0] x_is_n1_reg_2409;
reg   [0:0] x_is_n1_reg_2409_pp0_iter7_reg;
reg   [0:0] x_is_n1_reg_2409_pp0_iter8_reg;
reg   [0:0] x_is_n1_reg_2409_pp0_iter9_reg;
reg   [0:0] x_is_n1_reg_2409_pp0_iter10_reg;
wire   [0:0] isNeg_fu_1141_p3;
reg   [0:0] isNeg_reg_2415;
wire   [0:0] tmp_38_fu_1167_p2;
reg   [0:0] tmp_38_reg_2422;
reg   [0:0] tmp_38_reg_2422_pp0_iter7_reg;
reg   [0:0] tmp_38_reg_2422_pp0_iter8_reg;
reg   [0:0] tmp_38_reg_2422_pp0_iter9_reg;
reg   [0:0] tmp_38_reg_2422_pp0_iter10_reg;
wire   [0:0] tmp_50_fu_1223_p2;
reg   [0:0] tmp_50_reg_2429;
reg   [0:0] tmp_50_reg_2429_pp0_iter7_reg;
reg   [0:0] tmp_50_reg_2429_pp0_iter8_reg;
reg   [0:0] tmp_50_reg_2429_pp0_iter9_reg;
reg   [0:0] tmp_50_reg_2429_pp0_iter10_reg;
wire   [0:0] tmp_54_fu_1258_p2;
reg   [0:0] tmp_54_reg_2435;
reg   [0:0] tmp_54_reg_2435_pp0_iter7_reg;
reg   [0:0] tmp_54_reg_2435_pp0_iter8_reg;
reg   [0:0] tmp_54_reg_2435_pp0_iter9_reg;
reg   [0:0] tmp_54_reg_2435_pp0_iter10_reg;
wire   [0:0] r_sign_fu_1318_p2;
reg   [0:0] r_sign_reg_2443;
reg   [0:0] r_sign_reg_2443_pp0_iter7_reg;
reg   [0:0] r_sign_reg_2443_pp0_iter8_reg;
reg   [0:0] r_sign_reg_2443_pp0_iter9_reg;
reg   [0:0] r_sign_reg_2443_pp0_iter10_reg;
wire   [0:0] tmp_66_fu_1372_p2;
reg   [0:0] tmp_66_reg_2451;
reg   [0:0] tmp_66_reg_2451_pp0_iter7_reg;
reg   [0:0] tmp_66_reg_2451_pp0_iter8_reg;
reg   [0:0] tmp_66_reg_2451_pp0_iter9_reg;
reg   [0:0] tmp_66_reg_2451_pp0_iter10_reg;
wire   [0:0] tmp_73_fu_1426_p2;
reg   [0:0] tmp_73_reg_2457;
reg   [0:0] tmp_73_reg_2457_pp0_iter7_reg;
reg   [0:0] tmp_73_reg_2457_pp0_iter8_reg;
reg   [0:0] tmp_73_reg_2457_pp0_iter9_reg;
reg   [0:0] tmp_73_reg_2457_pp0_iter10_reg;
wire   [66:0] p_Val2_10_fu_1488_p2;
reg   [66:0] p_Val2_10_reg_2463;
reg   [0:0] tmp_152_reg_2471;
reg   [0:0] tmp_152_reg_2471_pp0_iter7_reg;
reg   [0:0] tmp_152_reg_2471_pp0_iter8_reg;
reg   [0:0] tmp_152_reg_2471_pp0_iter9_reg;
reg   [0:0] tmp_152_reg_2471_pp0_iter10_reg;
reg   [35:0] p_Val2_12_reg_2477;
reg   [35:0] p_Val2_12_reg_2477_pp0_iter8_reg;
reg  signed [12:0] p_Val2_13_reg_2482;
reg   [0:0] tmp_144_reg_2487;
wire   [0:0] tmp_115_fu_1629_p2;
reg   [0:0] tmp_115_reg_2492;
reg   [0:0] tmp_115_reg_2492_pp0_iter8_reg;
reg   [0:0] tmp_115_reg_2492_pp0_iter9_reg;
reg   [0:0] tmp_115_reg_2492_pp0_iter10_reg;
wire  signed [9:0] r_exp_V_3_fu_1687_p3;
reg  signed [9:0] r_exp_V_3_reg_2497;
reg  signed [9:0] r_exp_V_3_reg_2497_pp0_iter9_reg;
reg  signed [9:0] r_exp_V_3_reg_2497_pp0_iter10_reg;
wire   [17:0] p_Val2_63_fu_1737_p1;
reg   [17:0] p_Val2_63_reg_2504;
reg   [26:0] p_Val2_65_reg_2519;
wire   [35:0] p_Val2_19_fu_2215_p2;
reg   [35:0] p_Val2_19_reg_2524;
reg    ap_block_pp0_stage0_subdone;
wire   [63:0] tmp_76_fu_437_p1;
wire   [63:0] tmp_175_i_i_fu_775_p1;
wire   [63:0] tmp_167_i_i_fu_779_p1;
wire   [63:0] tmp_183_i_i_fu_845_p1;
wire   [63:0] tmp_103_fu_1741_p1;
wire   [63:0] tmp_i2_196_fu_1756_p1;
wire   [31:0] p_Val2_46_fu_393_p1;
wire   [5:0] index0_V_fu_427_p4;
wire   [23:0] tmp_74_fu_462_p3;
wire   [24:0] tmp_77_fu_469_p1;
wire   [24:0] p_Result_77_fu_453_p4;
wire   [5:0] p_Val2_2_fu_484_p0;
wire  signed [24:0] tmp_75_fu_473_p3;
wire   [42:0] sf_fu_512_p4;
wire   [0:0] tmp_141_fu_504_p3;
wire   [43:0] tmp_95_fu_522_p4;
wire   [43:0] tmp_99_fu_532_p1;
wire   [20:0] tmp_140_fu_500_p1;
wire   [42:0] tmp_170_i_i_fu_544_p3;
wire   [43:0] p_Val2_7_fu_536_p3;
wire   [44:0] tmp_170_i_i_cast_fu_552_p1;
wire   [44:0] tmp_171_i_i_fu_556_p1;
wire   [38:0] p_Val2_6_fu_566_p3;
wire   [3:0] p_Val2_26_fu_580_p0;
wire   [38:0] p_Val2_26_fu_580_p1;
wire   [42:0] p_Val2_26_fu_580_p2;
wire   [45:0] tmp_172_i_i_fu_586_p1;
wire   [45:0] tmp_173_i_i_fu_589_p1;
wire   [45:0] p_Val2_27_fu_593_p2;
wire   [48:0] tmp_161_i_i_fu_636_p3;
wire   [48:0] p_Val2_29_fu_629_p3;
wire   [49:0] tmp_162_i_i_fu_647_p1;
wire   [49:0] tmp_161_i_i_cast_fu_643_p1;
wire   [5:0] p_Val2_31_fu_663_p0;
wire   [40:0] p_Val2_31_fu_663_p1;
wire   [49:0] p_Val2_30_fu_651_p2;
wire   [46:0] p_Val2_31_fu_663_p2;
wire   [47:0] tmp_165_i_i_fu_673_p3;
wire   [50:0] tmp_163_i_i_fu_669_p1;
wire   [50:0] tmp_165_i_i_cast_fu_681_p1;
wire   [50:0] p_Val2_32_fu_685_p2;
wire   [8:0] tmp_i_cast_fu_721_p1;
wire   [8:0] b_exp_fu_724_p2;
wire   [8:0] b_exp_1_fu_762_p2;
wire   [61:0] tmp_177_i_i_fu_790_p3;
wire   [56:0] p_Val2_34_fu_783_p3;
wire   [62:0] tmp_178_i_i_fu_801_p1;
wire   [62:0] tmp_177_i_i_cast_fu_797_p1;
wire   [5:0] p_Val2_36_fu_817_p0;
wire   [43:0] p_Val2_36_fu_817_p1;
wire   [62:0] p_Val2_35_fu_805_p2;
wire   [49:0] p_Val2_36_fu_817_p2;
wire   [55:0] tmp_181_i_i_fu_827_p3;
wire   [63:0] tmp_179_i_i_fu_823_p1;
wire   [63:0] tmp_181_i_i_cast_fu_835_p1;
wire   [63:0] p_Val2_37_fu_839_p2;
wire  signed [8:0] p_Val2_3_fu_872_p1;
wire   [55:0] ssdm_int_V_write_ass_fu_878_p1;
wire   [49:0] ssdm_int_V_write_ass_2_fu_886_p1;
wire   [49:0] ssdm_int_V_write_ass_1_fu_882_p1;
wire   [49:0] tmp58_fu_895_p2;
wire   [55:0] tmp57_fu_890_p2;
wire   [55:0] tmp93_cast_fu_901_p1;
wire   [55:0] log_sum_V_1_fu_905_p2;
wire   [22:0] r_V_fu_918_p0;
wire   [45:0] OP1_V_6_cast_fu_915_p1;
wire   [22:0] r_V_fu_918_p1;
wire   [45:0] r_V_fu_918_p2;
wire   [62:0] tmp_79_fu_934_p3;
wire   [44:0] tmp_78_fu_924_p4;
wire   [63:0] tmp_90_cast_fu_941_p1;
wire   [63:0] tmp_91_cast_fu_945_p1;
wire   [63:0] p_Val2_8_fu_949_p2;
wire   [51:0] p_Val2_3_fu_872_p2;
wire   [63:0] tmp_80_fu_965_p3;
wire  signed [64:0] p_Val2_i_cast_fu_911_p1;
wire  signed [65:0] tmp_93_cast_fu_973_p1;
wire   [65:0] tmp_81_fu_977_p1;
wire   [31:0] p_Val2_44_fu_987_p1;
wire   [8:0] tmp_i105_cast_fu_1012_p1;
wire   [0:0] x_is_1_fu_1028_p2;
wire   [0:0] not_Result_i_fu_1032_p2;
wire   [22:0] loc_V_6_fu_1008_p1;
wire   [0:0] tmp_i_fu_1048_p2;
wire   [0:0] tmp_i_193_fu_1054_p2;
wire   [0:0] tmp_i1_fu_1066_p2;
wire   [0:0] tmp_1692_i1_fu_1082_p2;
wire   [0:0] tmp35_fu_1086_p2;
wire   [0:0] x_is_neg_demorgan_fu_1092_p2;
wire   [4:0] tmp_130_fu_1103_p4;
wire   [4:0] tmp_131_fu_1113_p2;
wire   [22:0] tmp_132_fu_1119_p1;
wire   [22:0] tmp_133_fu_1123_p2;
wire   [22:0] p_Result_74_fu_1129_p2;
wire   [0:0] phitmp_fu_1135_p2;
wire   [0:0] tmp_1692_i_fu_1060_p2;
wire   [0:0] x_is_p1_fu_1037_p2;
wire   [0:0] tmp_37_fu_1155_p2;
wire   [0:0] tmp37_fu_1161_p2;
wire   [0:0] tmp_fu_1022_p2;
wire   [0:0] x_is_neg_fu_1097_p2;
wire   [0:0] tmp_44_fu_1173_p2;
wire   [0:0] tmp36_fu_1149_p2;
wire   [0:0] tmp_39_fu_1185_p2;
wire   [0:0] tmp40_fu_1191_p2;
wire   [0:0] tmp38_fu_1179_p2;
wire   [0:0] tmp_1691_i_fu_1072_p2;
wire   [0:0] tmp_48_fu_1197_p2;
wire   [0:0] tmp41_fu_1203_p2;
wire   [0:0] tmp_1691_i1_fu_1078_p2;
wire   [0:0] tmp_62_fu_1209_p2;
wire   [31:0] tmp_49_fu_1215_p3;
wire   [0:0] p_Result_47_fu_990_p3;
wire   [0:0] not_Result_i1_fu_1229_p2;
wire   [8:0] bvh_d_index_fu_1270_p2;
wire  signed [31:0] index_assign_cast_fu_1276_p1;
wire   [0:0] tmp_52_fu_1252_p2;
wire   [0:0] tmp_55_fu_1264_p2;
wire   [0:0] y_is_odd_fu_1280_p3;
wire   [0:0] sel_tmp4_fu_1288_p2;
wire   [0:0] tmp43_fu_1300_p2;
wire   [0:0] tmp42_fu_1294_p2;
wire   [0:0] sel_tmp6_fu_1306_p2;
wire   [0:0] y_is_odd_1_fu_1312_p2;
wire   [0:0] y_is_pinf_fu_1235_p2;
wire   [0:0] rev_fu_1247_p2;
wire   [0:0] y_is_ninf_fu_1241_p2;
wire   [0:0] tmp_63_fu_1335_p2;
wire   [0:0] tmp_64_fu_1340_p2;
wire   [0:0] tmp_58_fu_1324_p2;
wire   [0:0] tmp_61_fu_1330_p2;
wire   [0:0] tmp48_fu_1352_p2;
wire   [0:0] tmp47_fu_1346_p2;
wire   [0:0] tmp_53_fu_1358_p2;
wire   [31:0] tmp_65_fu_1364_p3;
wire   [0:0] tmp_70_fu_1394_p2;
wire   [0:0] tmp_69_fu_1389_p2;
wire   [0:0] tmp_67_fu_1378_p2;
wire   [0:0] tmp_68_fu_1383_p2;
wire   [0:0] tmp55_fu_1406_p2;
wire   [0:0] tmp54_fu_1400_p2;
wire   [0:0] tmp_71_fu_1412_p2;
wire   [31:0] tmp_72_fu_1418_p3;
wire  signed [64:0] p_Val2_9_fu_1432_p1;
wire   [66:0] tmp_83_fu_1438_p1;
wire   [66:0] tmp_82_fu_1435_p1;
wire   [66:0] p_Val2_23_fu_1442_p2;
wire   [24:0] p_Result_79_fu_1458_p3;
wire   [24:0] p_Val2_s_195_fu_1466_p2;
wire   [42:0] tmp_85_fu_1448_p4;
wire   [24:0] p_Val2_24_fu_1472_p3;
wire  signed [24:0] p_Val2_10_fu_1488_p0;
wire  signed [42:0] p_Val2_10_fu_1488_p1;
wire  signed [7:0] sh_assign_3_fu_1502_p2;
wire  signed [8:0] sh_assign_4_cast1_fu_1507_p1;
wire   [8:0] sh_assign_2_fu_1515_p3;
wire  signed [31:0] sh_assign_3_cast_fu_1521_p1;
wire   [66:0] tmp_86_fu_1525_p1;
wire   [66:0] tmp_87_fu_1529_p2;
wire   [66:0] tmp_88_fu_1534_p2;
wire   [66:0] p_Val2_11_fu_1539_p3;
wire   [65:0] tmp_142_fu_1546_p1;
wire   [65:0] tmp_90_fu_1550_p1;
wire   [65:0] tmp_91_fu_1554_p2;
wire   [65:0] tmp_92_fu_1560_p2;
wire  signed [31:0] sh_assign_4_cast_fu_1511_p1;
wire   [66:0] tmp_94_fu_1580_p1;
wire   [0:0] tmp_143_fu_1573_p3;
wire   [66:0] p_Val2_25_fu_1584_p2;
wire   [66:0] p_Val2_39_in_in_fu_1589_p3;
wire   [65:0] m_fix_back_V_fu_1566_p3;
wire  signed [66:0] tmp_100_fu_1625_p1;
wire  signed [15:0] tmp_96_fu_1637_p3;
wire  signed [24:0] grp_fu_2204_p3;
wire   [14:0] tmp_146_fu_1664_p1;
wire   [9:0] tmp_97_fu_1648_p4;
wire   [0:0] tmp_98_fu_1667_p2;
wire   [9:0] ret_V_5_fu_1673_p2;
wire   [0:0] tmp_145_fu_1657_p3;
wire   [9:0] p_s_fu_1679_p3;
wire  signed [9:0] p_Val2_15_fu_1698_p1;
wire   [44:0] p_Val2_15_fu_1698_p2;
wire   [35:0] p_Val2_16_fu_1704_p4;
wire  signed [36:0] tmp_101_fu_1714_p1;
wire  signed [36:0] tmp_102_fu_1717_p1;
wire   [36:0] p_Val2_17_fu_1721_p2;
wire   [8:0] m_diff_hi_V_fu_1727_p4;
wire   [4:0] Z2_ind_V_fu_1746_p4;
wire   [18:0] tmp_25_i_fu_1764_p1;
wire   [18:0] tmp_i3_fu_1761_p1;
wire   [18:0] p_Val2_39_fu_1768_p2;
wire   [17:0] tmp_105_fu_1784_p4;
wire   [17:0] exp_Z1P_m_1_V_fu_1774_p4;
wire   [27:0] tmp_106_fu_1823_p1;
wire   [27:0] p_Val2_18_fu_1826_p2;
wire   [26:0] tmp_148_fu_1843_p1;
wire   [25:0] tmp_149_fu_1858_p1;
wire   [44:0] tmp_145_cast_fu_1840_p1;
wire   [44:0] tmp_107_fu_1832_p3;
wire   [42:0] tmp_111_fu_1870_p1;
wire   [42:0] tmp_110_fu_1862_p3;
wire   [43:0] tmp_109_fu_1855_p1;
wire   [43:0] tmp_108_fu_1847_p3;
wire   [44:0] p_Val2_20_fu_1873_p2;
wire   [0:0] tmp_150_fu_1891_p3;
wire   [9:0] r_exp_V_fu_1899_p2;
wire   [9:0] r_exp_V_2_fu_1904_p3;
wire   [2:0] tmp_151_fu_1911_p4;
wire   [0:0] icmp_fu_1921_p2;
wire   [43:0] p_Val2_20_cast_fu_1885_p2;
wire   [42:0] p_Val2_20_cast2_fu_1879_p2;
wire   [22:0] tmp_117_fu_1938_p4;
wire   [22:0] tmp_118_fu_1948_p4;
wire   [7:0] tmp_153_fu_1966_p1;
wire   [7:0] out_exp_V_fu_1970_p2;
wire   [22:0] loc_V_7_fu_1958_p3;
wire   [31:0] p_Result_80_fu_1976_p4;
wire   [0:0] sel_tmp17_demorgan_fu_1992_p2;
wire   [31:0] sel_tmp14_fu_1985_p3;
wire   [0:0] sel_tmp19_fu_2004_p2;
wire   [0:0] sel_tmp20_fu_2009_p2;
wire   [0:0] sel_tmp21_fu_2014_p2;
wire   [31:0] p_Result_75_fu_1802_p3;
wire   [31:0] sel_tmp18_fu_1996_p3;
wire   [0:0] sel_tmp25_fu_2027_p2;
wire   [0:0] sel_tmp26_fu_2032_p2;
wire   [0:0] sel_tmp27_fu_2038_p2;
wire   [0:0] sel_tmp28_fu_2043_p2;
wire   [31:0] p_Result_76_fu_1809_p3;
wire   [31:0] sel_tmp22_fu_2019_p3;
wire   [0:0] sel_tmp34_fu_2057_p2;
wire   [0:0] sel_tmp35_fu_2062_p2;
wire   [0:0] sel_tmp36_fu_2067_p2;
wire   [31:0] p_Result_78_fu_1816_p3;
wire   [31:0] sel_tmp29_fu_2049_p3;
wire   [0:0] or_cond1_fu_1927_p2;
wire   [0:0] sel_tmp47_fu_2096_p2;
wire   [0:0] sel_tmp46_fu_2091_p2;
wire   [0:0] sel_tmp48_fu_2101_p2;
wire   [0:0] sel_tmp49_fu_2107_p2;
wire   [0:0] sel_tmp44_fu_2086_p2;
wire   [0:0] tmp94_fu_2113_p2;
wire   [0:0] sel_tmp43_fu_2081_p2;
wire   [0:0] sel_tmp50_fu_2119_p2;
wire   [31:0] sel_tmp37_fu_2073_p3;
wire   [0:0] tmp95_fu_2133_p2;
wire   [0:0] sel_tmp63_fu_2138_p2;
wire   [31:0] sel_tmp51_fu_2125_p3;
wire   [0:0] sel_tmp_fu_2152_p2;
wire   [0:0] sel_tmp76_demorgan_fu_2163_p2;
wire   [0:0] sel_tmp71_fu_2158_p2;
wire   [0:0] sel_tmp72_fu_2168_p2;
wire   [0:0] tmp_116_fu_1932_p2;
wire   [0:0] sel_tmp73_fu_2174_p2;
wire   [0:0] tmp96_fu_2180_p2;
wire   [0:0] sel_tmp74_fu_2186_p2;
wire   [31:0] sel_tmp64_fu_2144_p3;
wire   [31:0] p_1_in_fu_2192_p3;
wire   [12:0] grp_fu_2204_p0;
wire   [17:0] p_Val2_19_fu_2215_p0;
wire   [17:0] p_Val2_19_fu_2215_p1;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to10;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire   [35:0] p_Val2_19_fu_2215_p00;
wire   [35:0] p_Val2_19_fu_2215_p10;
wire   [42:0] p_Val2_26_fu_580_p00;
wire   [42:0] p_Val2_26_fu_580_p10;
wire   [24:0] p_Val2_2_fu_484_p00;
wire   [46:0] p_Val2_31_fu_663_p00;
wire   [46:0] p_Val2_31_fu_663_p10;
wire   [49:0] p_Val2_36_fu_817_p00;
wire   [49:0] p_Val2_36_fu_817_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
end

pow_generic_floatyd2 #(
    .DataWidth( 6 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
pow_reduce_anonymo_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(pow_reduce_anonymo_7_address0),
    .ce0(pow_reduce_anonymo_7_ce0),
    .q0(pow_reduce_anonymo_7_q0)
);

pow_generic_floatzec #(
    .DataWidth( 56 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
pow_reduce_anonymo_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(pow_reduce_anonymo_6_address0),
    .ce0(pow_reduce_anonymo_6_ce0),
    .q0(pow_reduce_anonymo_6_q0)
);

pow_generic_floatAem #(
    .DataWidth( 52 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
pow_reduce_anonymo_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(pow_reduce_anonymo_9_address0),
    .ce0(pow_reduce_anonymo_9_ce0),
    .q0(pow_reduce_anonymo_9_q0)
);

pow_generic_floatBew #(
    .DataWidth( 49 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
pow_reduce_anonymo_10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(pow_reduce_anonymo_10_address0),
    .ce0(pow_reduce_anonymo_10_ce0),
    .q0(pow_reduce_anonymo_10_q0)
);

pow_generic_floatCeG #(
    .DataWidth( 44 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
pow_reduce_anonymo_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(pow_reduce_anonymo_8_address0),
    .ce0(pow_reduce_anonymo_8_ce0),
    .q0(pow_reduce_anonymo_8_q0)
);

pow_generic_floatDeQ #(
    .DataWidth( 27 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
pow_reduce_anonymo_11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(pow_reduce_anonymo_11_address0),
    .ce0(pow_reduce_anonymo_11_ce0),
    .q0(pow_reduce_anonymo_11_q0)
);

pow_generic_floatEe0 #(
    .DataWidth( 8 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
pow_reduce_anonymo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(pow_reduce_anonymo_address0),
    .ce0(pow_reduce_anonymo_ce0),
    .q0(pow_reduce_anonymo_q0)
);

SIFT2_Core_mac_muFfa #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 25 ))
SIFT2_Core_mac_muFfa_U455(
    .din0(grp_fu_2204_p0),
    .din1(p_Val2_13_reg_2482),
    .din2(tmp_96_fu_1637_p3),
    .dout(grp_fu_2204_p3)
);

SIFT2_Core_mul_muGfk #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 36 ))
SIFT2_Core_mul_muGfk_U456(
    .din0(p_Val2_19_fu_2215_p0),
    .din1(p_Val2_19_fu_2215_p1),
    .dout(p_Val2_19_fu_2215_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        b_exp_2_reg_2358 <= b_exp_2_fu_768_p3;
        exp_read_reg_2221_pp0_iter2_reg <= exp_read_reg_2221_pp0_iter1_reg;
        exp_read_reg_2221_pp0_iter3_reg <= exp_read_reg_2221_pp0_iter2_reg;
        exp_read_reg_2221_pp0_iter4_reg <= exp_read_reg_2221_pp0_iter3_reg;
        exp_read_reg_2221_pp0_iter5_reg <= exp_read_reg_2221_pp0_iter4_reg;
        isNeg_reg_2415 <= m_exp_fu_1016_p2[32'd8];
        loc_V_5_reg_2398 <= {{p_Val2_44_fu_987_p1[30:23]}};
        loc_V_reg_2232_pp0_iter2_reg <= loc_V_reg_2232_pp0_iter1_reg;
        loc_V_reg_2232_pp0_iter3_reg <= loc_V_reg_2232_pp0_iter2_reg;
        log_sum_V_reg_2274_pp0_iter2_reg <= log_sum_V_reg_2274;
        log_sum_V_reg_2274_pp0_iter3_reg <= log_sum_V_reg_2274_pp0_iter2_reg;
        log_sum_V_reg_2274_pp0_iter4_reg <= log_sum_V_reg_2274_pp0_iter3_reg;
        m_exp_reg_2403 <= m_exp_fu_1016_p2;
        p_Result_s_reg_2226_pp0_iter2_reg <= p_Result_s_reg_2226_pp0_iter1_reg;
        p_Result_s_reg_2226_pp0_iter3_reg <= p_Result_s_reg_2226_pp0_iter2_reg;
        p_Result_s_reg_2226_pp0_iter4_reg <= p_Result_s_reg_2226_pp0_iter3_reg;
        p_Result_s_reg_2226_pp0_iter5_reg <= p_Result_s_reg_2226_pp0_iter4_reg;
        p_Val2_10_reg_2463 <= p_Val2_10_fu_1488_p2;
        p_Val2_12_reg_2477 <= {{p_Val2_39_in_in_fu_1589_p3[65:30]}};
        p_Val2_12_reg_2477_pp0_iter8_reg <= p_Val2_12_reg_2477;
        p_Val2_13_reg_2482 <= {{p_Val2_39_in_in_fu_1589_p3[65:53]}};
        p_Val2_19_reg_2524 <= p_Val2_19_fu_2215_p2;
        p_Val2_22_reg_2393 <= p_Val2_22_fu_981_p2;
        p_Val2_56_reg_2295 <= {{p_Val2_27_fu_593_p2[43:3]}};
        p_Val2_58_reg_2312 <= {{p_Val2_32_fu_685_p2[49:6]}};
        p_Val2_63_reg_2504 <= p_Val2_63_fu_1737_p1;
        p_Val2_65_reg_2519 <= pow_reduce_anonymo_11_q0;
        p_Val2_72_reg_2301 <= {{p_Val2_27_fu_593_p2[43:38]}};
        p_Val2_72_reg_2301_pp0_iter3_reg <= p_Val2_72_reg_2301;
        p_Val2_73_reg_2318 <= {{p_Val2_32_fu_685_p2[49:44]}};
        p_Val2_s_reg_2284_pp0_iter2_reg <= p_Val2_s_reg_2284;
        p_Val2_s_reg_2284_pp0_iter3_reg <= p_Val2_s_reg_2284_pp0_iter2_reg;
        r_exp_V_3_reg_2497 <= r_exp_V_3_fu_1687_p3;
        r_exp_V_3_reg_2497_pp0_iter10_reg <= r_exp_V_3_reg_2497_pp0_iter9_reg;
        r_exp_V_3_reg_2497_pp0_iter9_reg <= r_exp_V_3_reg_2497;
        r_sign_reg_2443 <= r_sign_fu_1318_p2;
        r_sign_reg_2443_pp0_iter10_reg <= r_sign_reg_2443_pp0_iter9_reg;
        r_sign_reg_2443_pp0_iter7_reg <= r_sign_reg_2443;
        r_sign_reg_2443_pp0_iter8_reg <= r_sign_reg_2443_pp0_iter7_reg;
        r_sign_reg_2443_pp0_iter9_reg <= r_sign_reg_2443_pp0_iter8_reg;
        ssdm_int_V_write_ass_3_reg_2383 <= {{p_Val2_37_fu_839_p2[62:40]}};
        tmp_112_reg_2307 <= {{p_Val2_27_fu_593_p2[37:3]}};
        tmp_113_reg_2324 <= {{p_Val2_32_fu_685_p2[43:6]}};
        tmp_114_reg_2378 <= {{p_Val2_37_fu_839_p2[62:24]}};
        tmp_115_reg_2492 <= tmp_115_fu_1629_p2;
        tmp_115_reg_2492_pp0_iter10_reg <= tmp_115_reg_2492_pp0_iter9_reg;
        tmp_115_reg_2492_pp0_iter8_reg <= tmp_115_reg_2492;
        tmp_115_reg_2492_pp0_iter9_reg <= tmp_115_reg_2492_pp0_iter8_reg;
        tmp_136_reg_2347 <= b_exp_fu_724_p2[32'd8];
        tmp_136_reg_2347_pp0_iter5_reg <= tmp_136_reg_2347;
        tmp_138_reg_2352 <= b_exp_fu_724_p2[32'd8];
        tmp_138_reg_2352_pp0_iter5_reg <= tmp_138_reg_2352;
        tmp_139_reg_2247_pp0_iter2_reg <= tmp_139_reg_2247_pp0_iter1_reg;
        tmp_139_reg_2247_pp0_iter3_reg <= tmp_139_reg_2247_pp0_iter2_reg;
        tmp_144_reg_2487 <= p_Val2_39_in_in_fu_1589_p3[32'd65];
        tmp_152_reg_2471 <= p_Val2_10_fu_1488_p2[32'd66];
        tmp_152_reg_2471_pp0_iter10_reg <= tmp_152_reg_2471_pp0_iter9_reg;
        tmp_152_reg_2471_pp0_iter7_reg <= tmp_152_reg_2471;
        tmp_152_reg_2471_pp0_iter8_reg <= tmp_152_reg_2471_pp0_iter7_reg;
        tmp_152_reg_2471_pp0_iter9_reg <= tmp_152_reg_2471_pp0_iter8_reg;
        tmp_27_reg_2263_pp0_iter2_reg <= tmp_27_reg_2263;
        tmp_27_reg_2263_pp0_iter3_reg <= tmp_27_reg_2263_pp0_iter2_reg;
        tmp_27_reg_2263_pp0_iter4_reg <= tmp_27_reg_2263_pp0_iter3_reg;
        tmp_27_reg_2263_pp0_iter5_reg <= tmp_27_reg_2263_pp0_iter4_reg;
        tmp_31_reg_2340 <= tmp_31_fu_741_p2;
        tmp_31_reg_2340_pp0_iter5_reg <= tmp_31_reg_2340;
        tmp_38_reg_2422 <= tmp_38_fu_1167_p2;
        tmp_38_reg_2422_pp0_iter10_reg <= tmp_38_reg_2422_pp0_iter9_reg;
        tmp_38_reg_2422_pp0_iter7_reg <= tmp_38_reg_2422;
        tmp_38_reg_2422_pp0_iter8_reg <= tmp_38_reg_2422_pp0_iter7_reg;
        tmp_38_reg_2422_pp0_iter9_reg <= tmp_38_reg_2422_pp0_iter8_reg;
        tmp_50_reg_2429 <= tmp_50_fu_1223_p2;
        tmp_50_reg_2429_pp0_iter10_reg <= tmp_50_reg_2429_pp0_iter9_reg;
        tmp_50_reg_2429_pp0_iter7_reg <= tmp_50_reg_2429;
        tmp_50_reg_2429_pp0_iter8_reg <= tmp_50_reg_2429_pp0_iter7_reg;
        tmp_50_reg_2429_pp0_iter9_reg <= tmp_50_reg_2429_pp0_iter8_reg;
        tmp_54_reg_2435 <= tmp_54_fu_1258_p2;
        tmp_54_reg_2435_pp0_iter10_reg <= tmp_54_reg_2435_pp0_iter9_reg;
        tmp_54_reg_2435_pp0_iter7_reg <= tmp_54_reg_2435;
        tmp_54_reg_2435_pp0_iter8_reg <= tmp_54_reg_2435_pp0_iter7_reg;
        tmp_54_reg_2435_pp0_iter9_reg <= tmp_54_reg_2435_pp0_iter8_reg;
        tmp_60_reg_2388 <= {{p_Val2_8_fu_949_p2[63:24]}};
        tmp_66_reg_2451 <= tmp_66_fu_1372_p2;
        tmp_66_reg_2451_pp0_iter10_reg <= tmp_66_reg_2451_pp0_iter9_reg;
        tmp_66_reg_2451_pp0_iter7_reg <= tmp_66_reg_2451;
        tmp_66_reg_2451_pp0_iter8_reg <= tmp_66_reg_2451_pp0_iter7_reg;
        tmp_66_reg_2451_pp0_iter9_reg <= tmp_66_reg_2451_pp0_iter8_reg;
        tmp_73_reg_2457 <= tmp_73_fu_1426_p2;
        tmp_73_reg_2457_pp0_iter10_reg <= tmp_73_reg_2457_pp0_iter9_reg;
        tmp_73_reg_2457_pp0_iter7_reg <= tmp_73_reg_2457;
        tmp_73_reg_2457_pp0_iter8_reg <= tmp_73_reg_2457_pp0_iter7_reg;
        tmp_73_reg_2457_pp0_iter9_reg <= tmp_73_reg_2457_pp0_iter8_reg;
        tmp_i1_194_reg_2334 <= tmp_i1_194_fu_736_p2;
        tmp_i1_194_reg_2334_pp0_iter5_reg <= tmp_i1_194_reg_2334;
        tmp_i2_reg_2269_pp0_iter2_reg <= tmp_i2_reg_2269;
        tmp_i2_reg_2269_pp0_iter3_reg <= tmp_i2_reg_2269_pp0_iter2_reg;
        tmp_i2_reg_2269_pp0_iter4_reg <= tmp_i2_reg_2269_pp0_iter3_reg;
        tmp_i2_reg_2269_pp0_iter5_reg <= tmp_i2_reg_2269_pp0_iter4_reg;
        tmp_s_reg_2329 <= tmp_s_fu_730_p2;
        tmp_s_reg_2329_pp0_iter5_reg <= tmp_s_reg_2329;
        x_is_n1_reg_2409 <= x_is_n1_fu_1043_p2;
        x_is_n1_reg_2409_pp0_iter10_reg <= x_is_n1_reg_2409_pp0_iter9_reg;
        x_is_n1_reg_2409_pp0_iter7_reg <= x_is_n1_reg_2409;
        x_is_n1_reg_2409_pp0_iter8_reg <= x_is_n1_reg_2409_pp0_iter7_reg;
        x_is_n1_reg_2409_pp0_iter9_reg <= x_is_n1_reg_2409_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_read_reg_2221 <= exp;
        exp_read_reg_2221_pp0_iter1_reg <= exp_read_reg_2221;
        loc_V_4_reg_2239 <= loc_V_4_fu_415_p1;
        loc_V_reg_2232 <= {{p_Val2_46_fu_393_p1[30:23]}};
        loc_V_reg_2232_pp0_iter1_reg <= loc_V_reg_2232;
        log_sum_V_reg_2274 <= pow_reduce_anonymo_6_q0;
        p_Result_s_reg_2226 <= p_Val2_46_fu_393_p1[32'd31];
        p_Result_s_reg_2226_pp0_iter1_reg <= p_Result_s_reg_2226;
        p_Val2_21_reg_2290[44 : 13] <= p_Val2_21_fu_560_p2[44 : 13];
        p_Val2_2_reg_2279 <= p_Val2_2_fu_484_p2;
        p_Val2_s_reg_2284 <= {{p_Val2_2_fu_484_p2[24:21]}};
        tmp_139_reg_2247 <= p_Val2_46_fu_393_p1[32'd22];
        tmp_139_reg_2247_pp0_iter1_reg <= tmp_139_reg_2247;
        tmp_27_reg_2263 <= tmp_27_fu_443_p2;
        tmp_i2_reg_2269 <= tmp_i2_fu_448_p2;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to10 = 1'b1;
    end else begin
        ap_idle_pp0_0to10 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to10 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        pow_reduce_anonymo_10_ce0 = 1'b1;
    end else begin
        pow_reduce_anonymo_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        pow_reduce_anonymo_11_ce0 = 1'b1;
    end else begin
        pow_reduce_anonymo_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        pow_reduce_anonymo_6_ce0 = 1'b1;
    end else begin
        pow_reduce_anonymo_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        pow_reduce_anonymo_7_ce0 = 1'b1;
    end else begin
        pow_reduce_anonymo_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        pow_reduce_anonymo_8_ce0 = 1'b1;
    end else begin
        pow_reduce_anonymo_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        pow_reduce_anonymo_9_ce0 = 1'b1;
    end else begin
        pow_reduce_anonymo_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        pow_reduce_anonymo_ce0 = 1'b1;
    end else begin
        pow_reduce_anonymo_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign OP1_V_6_cast_fu_915_p1 = ssdm_int_V_write_ass_3_reg_2383;

assign Z2_ind_V_fu_1746_p4 = {{p_Val2_17_fu_1721_p2[17:13]}};

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((1'b0 == ap_ce) | ((ap_start == 1'b0) & (ap_start == 1'b1)));
end

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start == 1'b0);
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_return = p_1_in_fu_2192_p3;

assign b_exp_1_fu_762_p2 = ($signed(9'd386) + $signed(tmp_i_cast_fu_721_p1));

assign b_exp_2_fu_768_p3 = ((tmp_139_reg_2247_pp0_iter3_reg[0:0] === 1'b1) ? b_exp_1_fu_762_p2 : b_exp_fu_724_p2);

assign b_exp_fu_724_p2 = ($signed(9'd385) + $signed(tmp_i_cast_fu_721_p1));

assign bvh_d_index_fu_1270_p2 = (9'd150 - tmp_i105_cast_fu_1012_p1);

assign exp_Z1P_m_1_V_fu_1774_p4 = {{p_Val2_39_fu_1768_p2[18:1]}};

assign grp_fu_2204_p0 = 25'd2954;

assign icmp_fu_1921_p2 = (($signed(tmp_151_fu_1911_p4) > $signed(3'd0)) ? 1'b1 : 1'b0);

assign index0_V_fu_427_p4 = {{p_Val2_46_fu_393_p1[22:17]}};

assign index_assign_cast_fu_1276_p1 = $signed(bvh_d_index_fu_1270_p2);

assign isNeg_fu_1141_p3 = m_exp_fu_1016_p2[32'd8];

assign loc_V_4_fu_415_p1 = p_Val2_46_fu_393_p1[22:0];

assign loc_V_5_fu_998_p4 = {{p_Val2_44_fu_987_p1[30:23]}};

assign loc_V_6_fu_1008_p1 = p_Val2_44_fu_987_p1[22:0];

assign loc_V_7_fu_1958_p3 = ((tmp_150_fu_1891_p3[0:0] === 1'b1) ? tmp_117_fu_1938_p4 : tmp_118_fu_1948_p4);

assign log_sum_V_1_fu_905_p2 = (tmp57_fu_890_p2 + tmp93_cast_fu_901_p1);

assign m_diff_hi_V_fu_1727_p4 = {{p_Val2_17_fu_1721_p2[26:18]}};

assign m_exp_fu_1016_p2 = ($signed(9'd385) + $signed(tmp_i105_cast_fu_1012_p1));

assign m_fix_back_V_fu_1566_p3 = ((isNeg_reg_2415[0:0] === 1'b1) ? tmp_91_fu_1554_p2 : tmp_92_fu_1560_p2);

assign not_Result_i1_fu_1229_p2 = (p_Result_47_fu_990_p3 ^ 1'd1);

assign not_Result_i_fu_1032_p2 = (p_Result_s_reg_2226_pp0_iter5_reg ^ 1'd1);

assign or_cond1_fu_1927_p2 = (tmp_115_reg_2492_pp0_iter10_reg | icmp_fu_1921_p2);

assign out_exp_V_fu_1970_p2 = (8'd127 + tmp_153_fu_1966_p1);

assign p_1_in_fu_2192_p3 = ((sel_tmp74_fu_2186_p2[0:0] === 1'b1) ? p_Result_78_fu_1816_p3 : sel_tmp64_fu_2144_p3);

assign p_Result_47_fu_990_p3 = p_Val2_44_fu_987_p1[32'd31];

assign p_Result_74_fu_1129_p2 = (tmp_133_fu_1123_p2 & loc_V_6_fu_1008_p1);

assign p_Result_75_fu_1802_p3 = {{r_sign_reg_2443_pp0_iter10_reg}, {31'd1065353216}};

assign p_Result_76_fu_1809_p3 = {{r_sign_reg_2443_pp0_iter10_reg}, {31'd2139095040}};

assign p_Result_77_fu_453_p4 = {{{{1'd1}, {loc_V_4_reg_2239}}}, {1'd0}};

assign p_Result_78_fu_1816_p3 = {{r_sign_reg_2443_pp0_iter10_reg}, {31'd0}};

assign p_Result_79_fu_1458_p3 = {{2'd1}, {loc_V_6_fu_1008_p1}};

assign p_Result_80_fu_1976_p4 = {{{r_sign_reg_2443_pp0_iter10_reg}, {out_exp_V_fu_1970_p2}}, {loc_V_7_fu_1958_p3}};

assign p_Val2_10_fu_1488_p0 = p_Val2_24_fu_1472_p3;

assign p_Val2_10_fu_1488_p1 = tmp_85_fu_1448_p4;

assign p_Val2_10_fu_1488_p2 = ($signed(p_Val2_10_fu_1488_p0) * $signed(p_Val2_10_fu_1488_p1));

assign p_Val2_11_fu_1539_p3 = ((isNeg_reg_2415[0:0] === 1'b1) ? tmp_87_fu_1529_p2 : tmp_88_fu_1534_p2);

assign p_Val2_15_fu_1698_p1 = r_exp_V_3_reg_2497;

assign p_Val2_15_fu_1698_p2 = ($signed({{1'b0}, {45'd47632711549}}) * $signed(p_Val2_15_fu_1698_p1));

assign p_Val2_16_fu_1704_p4 = {{p_Val2_15_fu_1698_p2[44:9]}};

assign p_Val2_17_fu_1721_p2 = ($signed(tmp_101_fu_1714_p1) - $signed(tmp_102_fu_1717_p1));

assign p_Val2_18_fu_1826_p2 = (28'd4 + tmp_106_fu_1823_p1);

assign p_Val2_19_fu_2215_p0 = p_Val2_19_fu_2215_p00;

assign p_Val2_19_fu_2215_p00 = tmp_105_fu_1784_p4;

assign p_Val2_19_fu_2215_p1 = p_Val2_19_fu_2215_p10;

assign p_Val2_19_fu_2215_p10 = exp_Z1P_m_1_V_fu_1774_p4;

assign p_Val2_20_cast2_fu_1879_p2 = (tmp_111_fu_1870_p1 + tmp_110_fu_1862_p3);

assign p_Val2_20_cast_fu_1885_p2 = (tmp_109_fu_1855_p1 + tmp_108_fu_1847_p3);

assign p_Val2_20_fu_1873_p2 = (tmp_145_cast_fu_1840_p1 + tmp_107_fu_1832_p3);

assign p_Val2_21_fu_560_p2 = (tmp_170_i_i_cast_fu_552_p1 + tmp_171_i_i_fu_556_p1);

assign p_Val2_22_fu_981_p2 = ($signed(tmp_93_cast_fu_973_p1) + $signed(tmp_81_fu_977_p1));

assign p_Val2_23_fu_1442_p2 = (tmp_83_fu_1438_p1 + tmp_82_fu_1435_p1);

assign p_Val2_24_fu_1472_p3 = ((p_Result_47_fu_990_p3[0:0] === 1'b1) ? p_Val2_s_195_fu_1466_p2 : p_Result_79_fu_1458_p3);

assign p_Val2_25_fu_1584_p2 = $signed(p_Val2_10_reg_2463) >>> tmp_94_fu_1580_p1;

assign p_Val2_26_fu_580_p0 = p_Val2_26_fu_580_p00;

assign p_Val2_26_fu_580_p00 = p_Val2_s_reg_2284;

assign p_Val2_26_fu_580_p1 = p_Val2_26_fu_580_p10;

assign p_Val2_26_fu_580_p10 = p_Val2_6_fu_566_p3;

assign p_Val2_26_fu_580_p2 = (p_Val2_26_fu_580_p0 * p_Val2_26_fu_580_p1);

assign p_Val2_27_fu_593_p2 = (tmp_172_i_i_fu_586_p1 - tmp_173_i_i_fu_589_p1);

assign p_Val2_29_fu_629_p3 = {{8'd128}, {p_Val2_56_reg_2295}};

assign p_Val2_2_fu_484_p0 = p_Val2_2_fu_484_p00;

assign p_Val2_2_fu_484_p00 = pow_reduce_anonymo_7_q0;

assign p_Val2_2_fu_484_p2 = ($signed({{1'b0}, {p_Val2_2_fu_484_p0}}) * $signed(tmp_75_fu_473_p3));

assign p_Val2_30_fu_651_p2 = (tmp_162_i_i_fu_647_p1 + tmp_161_i_i_cast_fu_643_p1);

assign p_Val2_31_fu_663_p0 = p_Val2_31_fu_663_p00;

assign p_Val2_31_fu_663_p00 = p_Val2_72_reg_2301;

assign p_Val2_31_fu_663_p1 = p_Val2_31_fu_663_p10;

assign p_Val2_31_fu_663_p10 = p_Val2_56_reg_2295;

assign p_Val2_31_fu_663_p2 = (p_Val2_31_fu_663_p0 * p_Val2_31_fu_663_p1);

assign p_Val2_32_fu_685_p2 = (tmp_163_i_i_fu_669_p1 - tmp_165_i_i_cast_fu_681_p1);

assign p_Val2_34_fu_783_p3 = {{13'd4096}, {p_Val2_58_reg_2312}};

assign p_Val2_35_fu_805_p2 = (tmp_178_i_i_fu_801_p1 + tmp_177_i_i_cast_fu_797_p1);

assign p_Val2_36_fu_817_p0 = p_Val2_36_fu_817_p00;

assign p_Val2_36_fu_817_p00 = p_Val2_73_reg_2318;

assign p_Val2_36_fu_817_p1 = p_Val2_36_fu_817_p10;

assign p_Val2_36_fu_817_p10 = p_Val2_58_reg_2312;

assign p_Val2_36_fu_817_p2 = (p_Val2_36_fu_817_p0 * p_Val2_36_fu_817_p1);

assign p_Val2_37_fu_839_p2 = (tmp_179_i_i_fu_823_p1 - tmp_181_i_i_cast_fu_835_p1);

assign p_Val2_39_fu_1768_p2 = (tmp_25_i_fu_1764_p1 + tmp_i3_fu_1761_p1);

assign p_Val2_39_in_in_fu_1589_p3 = ((tmp_143_fu_1573_p3[0:0] === 1'b1) ? p_Val2_25_fu_1584_p2 : p_Val2_11_fu_1539_p3);

assign p_Val2_3_fu_872_p1 = b_exp_2_reg_2358;

assign p_Val2_3_fu_872_p2 = ($signed({{1'b0}, {52'd12193974156572}}) * $signed(p_Val2_3_fu_872_p1));

assign p_Val2_44_fu_987_p1 = exp_read_reg_2221_pp0_iter5_reg;

assign p_Val2_46_fu_393_p1 = base_r;

assign p_Val2_63_fu_1737_p1 = p_Val2_17_fu_1721_p2[17:0];

assign p_Val2_6_fu_566_p3 = {{p_Val2_2_reg_2279}, {14'd0}};

assign p_Val2_7_fu_536_p3 = ((tmp_141_fu_504_p3[0:0] === 1'b1) ? tmp_95_fu_522_p4 : tmp_99_fu_532_p1);

assign p_Val2_8_fu_949_p2 = (tmp_90_cast_fu_941_p1 - tmp_91_cast_fu_945_p1);

assign p_Val2_9_fu_1432_p1 = $signed(tmp_60_reg_2388);

assign p_Val2_i_cast_fu_911_p1 = $signed(log_sum_V_1_fu_905_p2);

assign p_Val2_s_195_fu_1466_p2 = (25'd0 - p_Result_79_fu_1458_p3);

assign p_s_fu_1679_p3 = ((tmp_98_fu_1667_p2[0:0] === 1'b1) ? tmp_97_fu_1648_p4 : ret_V_5_fu_1673_p2);

assign phitmp_fu_1135_p2 = ((p_Result_74_fu_1129_p2 != 23'd0) ? 1'b1 : 1'b0);

assign pow_reduce_anonymo_10_address0 = tmp_167_i_i_fu_779_p1;

assign pow_reduce_anonymo_11_address0 = tmp_103_fu_1741_p1;

assign pow_reduce_anonymo_6_address0 = tmp_76_fu_437_p1;

assign pow_reduce_anonymo_7_address0 = tmp_76_fu_437_p1;

assign pow_reduce_anonymo_8_address0 = tmp_183_i_i_fu_845_p1;

assign pow_reduce_anonymo_9_address0 = tmp_175_i_i_fu_775_p1;

assign pow_reduce_anonymo_address0 = tmp_i2_196_fu_1756_p1;

assign r_V_fu_918_p0 = OP1_V_6_cast_fu_915_p1;

assign r_V_fu_918_p1 = OP1_V_6_cast_fu_915_p1;

assign r_V_fu_918_p2 = (r_V_fu_918_p0 * r_V_fu_918_p1);

assign r_exp_V_2_fu_1904_p3 = ((tmp_150_fu_1891_p3[0:0] === 1'b1) ? r_exp_V_3_reg_2497_pp0_iter10_reg : r_exp_V_fu_1899_p2);

assign r_exp_V_3_fu_1687_p3 = ((tmp_145_fu_1657_p3[0:0] === 1'b1) ? p_s_fu_1679_p3 : tmp_97_fu_1648_p4);

assign r_exp_V_fu_1899_p2 = ($signed(10'd1023) + $signed(r_exp_V_3_reg_2497_pp0_iter10_reg));

assign r_sign_fu_1318_p2 = (y_is_odd_1_fu_1312_p2 & x_is_neg_fu_1097_p2);

assign ret_V_5_fu_1673_p2 = (10'd1 + tmp_97_fu_1648_p4);

assign rev_fu_1247_p2 = (tmp_136_reg_2347_pp0_iter5_reg ^ 1'd1);

assign sel_tmp14_fu_1985_p3 = ((tmp_38_reg_2422_pp0_iter10_reg[0:0] === 1'b1) ? 32'd1065353216 : p_Result_80_fu_1976_p4);

assign sel_tmp17_demorgan_fu_1992_p2 = (tmp_50_reg_2429_pp0_iter10_reg | tmp_38_reg_2422_pp0_iter10_reg);

assign sel_tmp18_fu_1996_p3 = ((sel_tmp17_demorgan_fu_1992_p2[0:0] === 1'b1) ? sel_tmp14_fu_1985_p3 : 32'd2147483647);

assign sel_tmp19_fu_2004_p2 = (tmp_38_reg_2422_pp0_iter10_reg ^ 1'd1);

assign sel_tmp20_fu_2009_p2 = (tmp_50_reg_2429_pp0_iter10_reg & sel_tmp19_fu_2004_p2);

assign sel_tmp21_fu_2014_p2 = (x_is_n1_reg_2409_pp0_iter10_reg & sel_tmp20_fu_2009_p2);

assign sel_tmp22_fu_2019_p3 = ((sel_tmp21_fu_2014_p2[0:0] === 1'b1) ? p_Result_75_fu_1802_p3 : sel_tmp18_fu_1996_p3);

assign sel_tmp25_fu_2027_p2 = (x_is_n1_reg_2409_pp0_iter10_reg ^ 1'd1);

assign sel_tmp26_fu_2032_p2 = (sel_tmp25_fu_2027_p2 & sel_tmp20_fu_2009_p2);

assign sel_tmp27_fu_2038_p2 = (tmp_66_reg_2451_pp0_iter10_reg ^ 1'd1);

assign sel_tmp28_fu_2043_p2 = (sel_tmp27_fu_2038_p2 & sel_tmp26_fu_2032_p2);

assign sel_tmp29_fu_2049_p3 = ((sel_tmp28_fu_2043_p2[0:0] === 1'b1) ? p_Result_76_fu_1809_p3 : sel_tmp22_fu_2019_p3);

assign sel_tmp34_fu_2057_p2 = (tmp_66_reg_2451_pp0_iter10_reg & sel_tmp26_fu_2032_p2);

assign sel_tmp35_fu_2062_p2 = (tmp_73_reg_2457_pp0_iter10_reg ^ 1'd1);

assign sel_tmp36_fu_2067_p2 = (sel_tmp35_fu_2062_p2 & sel_tmp34_fu_2057_p2);

assign sel_tmp37_fu_2073_p3 = ((sel_tmp36_fu_2067_p2[0:0] === 1'b1) ? p_Result_78_fu_1816_p3 : sel_tmp29_fu_2049_p3);

assign sel_tmp43_fu_2081_p2 = (tmp_73_reg_2457_pp0_iter10_reg & sel_tmp34_fu_2057_p2);

assign sel_tmp44_fu_2086_p2 = (tmp_152_reg_2471_pp0_iter10_reg ^ 1'd1);

assign sel_tmp46_fu_2091_p2 = (tmp_54_reg_2435_pp0_iter10_reg & or_cond1_fu_1927_p2);

assign sel_tmp47_fu_2096_p2 = (tmp_54_reg_2435_pp0_iter10_reg ^ 1'd1);

assign sel_tmp48_fu_2101_p2 = (sel_tmp47_fu_2096_p2 & icmp_fu_1921_p2);

assign sel_tmp49_fu_2107_p2 = (sel_tmp48_fu_2101_p2 | sel_tmp46_fu_2091_p2);

assign sel_tmp4_fu_1288_p2 = (tmp_52_fu_1252_p2 ^ 1'd1);

assign sel_tmp50_fu_2119_p2 = (tmp94_fu_2113_p2 & sel_tmp43_fu_2081_p2);

assign sel_tmp51_fu_2125_p3 = ((sel_tmp50_fu_2119_p2[0:0] === 1'b1) ? p_Result_76_fu_1809_p3 : sel_tmp37_fu_2073_p3);

assign sel_tmp63_fu_2138_p2 = (tmp95_fu_2133_p2 & sel_tmp43_fu_2081_p2);

assign sel_tmp64_fu_2144_p3 = ((sel_tmp63_fu_2138_p2[0:0] === 1'b1) ? p_Result_78_fu_1816_p3 : sel_tmp51_fu_2125_p3);

assign sel_tmp6_fu_1306_p2 = (tmp43_fu_1300_p2 & tmp42_fu_1294_p2);

assign sel_tmp71_fu_2158_p2 = (tmp_54_reg_2435_pp0_iter10_reg & sel_tmp_fu_2152_p2);

assign sel_tmp72_fu_2168_p2 = (sel_tmp76_demorgan_fu_2163_p2 ^ 1'd1);

assign sel_tmp73_fu_2174_p2 = (sel_tmp72_fu_2168_p2 | sel_tmp71_fu_2158_p2);

assign sel_tmp74_fu_2186_p2 = (tmp96_fu_2180_p2 & sel_tmp43_fu_2081_p2);

assign sel_tmp76_demorgan_fu_2163_p2 = (tmp_54_reg_2435_pp0_iter10_reg | icmp_fu_1921_p2);

assign sel_tmp_fu_2152_p2 = (or_cond1_fu_1927_p2 ^ 1'd1);

assign sf_fu_512_p4 = {{{{5'd16}, {p_Val2_2_fu_484_p2}}}, {13'd0}};

assign sh_assign_2_fu_1515_p3 = ((isNeg_reg_2415[0:0] === 1'b1) ? sh_assign_4_cast1_fu_1507_p1 : m_exp_reg_2403);

assign sh_assign_3_cast_fu_1521_p1 = $signed(sh_assign_2_fu_1515_p3);

assign sh_assign_3_fu_1502_p2 = (8'd127 - loc_V_5_reg_2398);

assign sh_assign_4_cast1_fu_1507_p1 = sh_assign_3_fu_1502_p2;

assign sh_assign_4_cast_fu_1511_p1 = sh_assign_3_fu_1502_p2;

assign ssdm_int_V_write_ass_1_fu_882_p1 = pow_reduce_anonymo_10_q0;

assign ssdm_int_V_write_ass_2_fu_886_p1 = pow_reduce_anonymo_8_q0;

assign ssdm_int_V_write_ass_fu_878_p1 = pow_reduce_anonymo_9_q0;

assign tmp35_fu_1086_p2 = (tmp_1692_i1_fu_1082_p2 | not_Result_i_fu_1032_p2);

assign tmp36_fu_1149_p2 = (phitmp_fu_1135_p2 | isNeg_fu_1141_p3);

assign tmp37_fu_1161_p2 = (x_is_p1_fu_1037_p2 | tmp_37_fu_1155_p2);

assign tmp38_fu_1179_p2 = (x_is_neg_fu_1097_p2 & tmp_44_fu_1173_p2);

assign tmp40_fu_1191_p2 = (tmp_39_fu_1185_p2 & tmp36_fu_1149_p2);

assign tmp41_fu_1203_p2 = (tmp_48_fu_1197_p2 | tmp_1691_i_fu_1072_p2);

assign tmp42_fu_1294_p2 = (tmp_55_fu_1264_p2 & tmp_54_fu_1258_p2);

assign tmp43_fu_1300_p2 = (y_is_odd_fu_1280_p3 & sel_tmp4_fu_1288_p2);

assign tmp47_fu_1346_p2 = (tmp_64_fu_1340_p2 | tmp_63_fu_1335_p2);

assign tmp48_fu_1352_p2 = (tmp_61_fu_1330_p2 | tmp_58_fu_1324_p2);

assign tmp54_fu_1400_p2 = (tmp_70_fu_1394_p2 | tmp_69_fu_1389_p2);

assign tmp55_fu_1406_p2 = (tmp_68_fu_1383_p2 | tmp_67_fu_1378_p2);

assign tmp57_fu_890_p2 = (ssdm_int_V_write_ass_fu_878_p1 + log_sum_V_reg_2274_pp0_iter4_reg);

assign tmp58_fu_895_p2 = (ssdm_int_V_write_ass_2_fu_886_p1 + ssdm_int_V_write_ass_1_fu_882_p1);

assign tmp93_cast_fu_901_p1 = tmp58_fu_895_p2;

assign tmp94_fu_2113_p2 = (sel_tmp49_fu_2107_p2 & sel_tmp44_fu_2086_p2);

assign tmp95_fu_2133_p2 = (tmp_152_reg_2471_pp0_iter10_reg & sel_tmp49_fu_2107_p2);

assign tmp96_fu_2180_p2 = (tmp_116_fu_1932_p2 & sel_tmp73_fu_2174_p2);

assign tmp_100_fu_1625_p1 = $signed(m_fix_back_V_fu_1566_p3);

assign tmp_101_fu_1714_p1 = $signed(p_Val2_12_reg_2477_pp0_iter8_reg);

assign tmp_102_fu_1717_p1 = $signed(p_Val2_16_fu_1704_p4);

assign tmp_103_fu_1741_p1 = m_diff_hi_V_fu_1727_p4;

assign tmp_105_fu_1784_p4 = {{pow_reduce_anonymo_11_q0[26:9]}};

assign tmp_106_fu_1823_p1 = p_Val2_65_reg_2519;

assign tmp_107_fu_1832_p3 = {{p_Val2_18_fu_1826_p2}, {17'd0}};

assign tmp_108_fu_1847_p3 = {{tmp_148_fu_1843_p1}, {17'd0}};

assign tmp_109_fu_1855_p1 = p_Val2_19_reg_2524;

assign tmp_110_fu_1862_p3 = {{tmp_149_fu_1858_p1}, {17'd0}};

assign tmp_111_fu_1870_p1 = p_Val2_19_reg_2524;

assign tmp_115_fu_1629_p2 = ((tmp_100_fu_1625_p1 != p_Val2_10_reg_2463) ? 1'b1 : 1'b0);

assign tmp_116_fu_1932_p2 = (($signed(r_exp_V_2_fu_1904_p3) < $signed(10'd898)) ? 1'b1 : 1'b0);

assign tmp_117_fu_1938_p4 = {{p_Val2_20_cast_fu_1885_p2[42:20]}};

assign tmp_118_fu_1948_p4 = {{p_Val2_20_cast2_fu_1879_p2[41:19]}};

assign tmp_130_fu_1103_p4 = {{p_Val2_44_fu_987_p1[27:23]}};

assign tmp_131_fu_1113_p2 = (5'd1 + tmp_130_fu_1103_p4);

assign tmp_132_fu_1119_p1 = tmp_131_fu_1113_p2;

assign tmp_133_fu_1123_p2 = 23'd8388607 >> tmp_132_fu_1119_p1;

assign tmp_140_fu_500_p1 = p_Val2_2_fu_484_p2[20:0];

assign tmp_141_fu_504_p3 = p_Val2_2_fu_484_p2[32'd24];

assign tmp_142_fu_1546_p1 = p_Val2_11_fu_1539_p3[65:0];

assign tmp_143_fu_1573_p3 = m_exp_reg_2403[32'd8];

assign tmp_145_cast_fu_1840_p1 = p_Val2_19_reg_2524;

assign tmp_145_fu_1657_p3 = grp_fu_2204_p3[32'd24];

assign tmp_146_fu_1664_p1 = grp_fu_2204_p3[14:0];

assign tmp_148_fu_1843_p1 = p_Val2_18_fu_1826_p2[26:0];

assign tmp_149_fu_1858_p1 = p_Val2_18_fu_1826_p2[25:0];

assign tmp_150_fu_1891_p3 = p_Val2_20_fu_1873_p2[32'd43];

assign tmp_151_fu_1911_p4 = {{r_exp_V_2_fu_1904_p3[9:7]}};

assign tmp_153_fu_1966_p1 = r_exp_V_2_fu_1904_p3[7:0];

assign tmp_161_i_i_cast_fu_643_p1 = tmp_161_i_i_fu_636_p3;

assign tmp_161_i_i_fu_636_p3 = {{tmp_112_reg_2307}, {14'd0}};

assign tmp_162_i_i_fu_647_p1 = p_Val2_29_fu_629_p3;

assign tmp_163_i_i_fu_669_p1 = p_Val2_30_fu_651_p2;

assign tmp_165_i_i_cast_fu_681_p1 = tmp_165_i_i_fu_673_p3;

assign tmp_165_i_i_fu_673_p3 = {{p_Val2_31_fu_663_p2}, {1'd0}};

assign tmp_167_i_i_fu_779_p1 = p_Val2_72_reg_2301_pp0_iter3_reg;

assign tmp_1691_i1_fu_1078_p2 = (tmp_i2_reg_2269_pp0_iter5_reg & tmp_i1_194_reg_2334_pp0_iter5_reg);

assign tmp_1691_i_fu_1072_p2 = (tmp_i_fu_1048_p2 & tmp_i1_fu_1066_p2);

assign tmp_1692_i1_fu_1082_p2 = (tmp_i1_194_reg_2334_pp0_iter5_reg & tmp_27_reg_2263_pp0_iter5_reg);

assign tmp_1692_i_fu_1060_p2 = (tmp_i_fu_1048_p2 & tmp_i_193_fu_1054_p2);

assign tmp_170_i_i_cast_fu_552_p1 = tmp_170_i_i_fu_544_p3;

assign tmp_170_i_i_fu_544_p3 = {{tmp_140_fu_500_p1}, {22'd0}};

assign tmp_171_i_i_fu_556_p1 = p_Val2_7_fu_536_p3;

assign tmp_172_i_i_fu_586_p1 = p_Val2_21_reg_2290;

assign tmp_173_i_i_fu_589_p1 = p_Val2_26_fu_580_p2;

assign tmp_175_i_i_fu_775_p1 = p_Val2_s_reg_2284_pp0_iter3_reg;

assign tmp_177_i_i_cast_fu_797_p1 = tmp_177_i_i_fu_790_p3;

assign tmp_177_i_i_fu_790_p3 = {{tmp_113_reg_2324}, {24'd0}};

assign tmp_178_i_i_fu_801_p1 = p_Val2_34_fu_783_p3;

assign tmp_179_i_i_fu_823_p1 = p_Val2_35_fu_805_p2;

assign tmp_181_i_i_cast_fu_835_p1 = tmp_181_i_i_fu_827_p3;

assign tmp_181_i_i_fu_827_p3 = {{p_Val2_36_fu_817_p2}, {6'd0}};

assign tmp_183_i_i_fu_845_p1 = p_Val2_73_reg_2318;

assign tmp_25_i_fu_1764_p1 = pow_reduce_anonymo_q0;

assign tmp_27_fu_443_p2 = ((loc_V_4_reg_2239 == 23'd0) ? 1'b1 : 1'b0);

assign tmp_31_fu_741_p2 = ((loc_V_reg_2232_pp0_iter3_reg == 8'd0) ? 1'b1 : 1'b0);

assign tmp_37_fu_1155_p2 = (x_is_n1_fu_1043_p2 & tmp_1692_i_fu_1060_p2);

assign tmp_38_fu_1167_p2 = (tmp_fu_1022_p2 | tmp37_fu_1161_p2);

assign tmp_39_fu_1185_p2 = (($signed(m_exp_fu_1016_p2) < $signed(9'd23)) ? 1'b1 : 1'b0);

assign tmp_44_fu_1173_p2 = (tmp_1692_i_fu_1060_p2 ^ 1'd1);

assign tmp_48_fu_1197_p2 = (tmp40_fu_1191_p2 & tmp38_fu_1179_p2);

assign tmp_49_fu_1215_p3 = {{31'd0}, {tmp_62_fu_1209_p2}};

assign tmp_50_fu_1223_p2 = ((tmp_49_fu_1215_p3 == 32'd0) ? 1'b1 : 1'b0);

assign tmp_52_fu_1252_p2 = ((m_exp_fu_1016_p2 == 9'd0) ? 1'b1 : 1'b0);

assign tmp_53_fu_1358_p2 = (tmp48_fu_1352_p2 | tmp47_fu_1346_p2);

assign tmp_54_fu_1258_p2 = (($signed(m_exp_fu_1016_p2) > $signed(9'd0)) ? 1'b1 : 1'b0);

assign tmp_55_fu_1264_p2 = (($signed(m_exp_fu_1016_p2) < $signed(9'd24)) ? 1'b1 : 1'b0);

assign tmp_58_fu_1324_p2 = (y_is_pinf_fu_1235_p2 & rev_fu_1247_p2);

assign tmp_61_fu_1330_p2 = (y_is_ninf_fu_1241_p2 & tmp_138_reg_2352_pp0_iter5_reg);

assign tmp_62_fu_1209_p2 = (tmp_1691_i1_fu_1078_p2 | tmp41_fu_1203_p2);

assign tmp_63_fu_1335_p2 = (tmp_31_reg_2340_pp0_iter5_reg & p_Result_47_fu_990_p3);

assign tmp_64_fu_1340_p2 = (tmp_1692_i1_fu_1082_p2 & not_Result_i1_fu_1229_p2);

assign tmp_65_fu_1364_p3 = {{31'd0}, {tmp_53_fu_1358_p2}};

assign tmp_66_fu_1372_p2 = ((tmp_65_fu_1364_p3 == 32'd0) ? 1'b1 : 1'b0);

assign tmp_67_fu_1378_p2 = (y_is_pinf_fu_1235_p2 & tmp_138_reg_2352_pp0_iter5_reg);

assign tmp_68_fu_1383_p2 = (y_is_ninf_fu_1241_p2 & rev_fu_1247_p2);

assign tmp_69_fu_1389_p2 = (tmp_31_reg_2340_pp0_iter5_reg & not_Result_i1_fu_1229_p2);

assign tmp_70_fu_1394_p2 = (tmp_1692_i1_fu_1082_p2 & p_Result_47_fu_990_p3);

assign tmp_71_fu_1412_p2 = (tmp55_fu_1406_p2 | tmp54_fu_1400_p2);

assign tmp_72_fu_1418_p3 = {{31'd0}, {tmp_71_fu_1412_p2}};

assign tmp_73_fu_1426_p2 = ((tmp_72_fu_1418_p3 == 32'd0) ? 1'b1 : 1'b0);

assign tmp_74_fu_462_p3 = {{1'd1}, {loc_V_4_reg_2239}};

assign tmp_75_fu_473_p3 = ((tmp_139_reg_2247[0:0] === 1'b1) ? tmp_77_fu_469_p1 : p_Result_77_fu_453_p4);

assign tmp_76_fu_437_p1 = index0_V_fu_427_p4;

assign tmp_77_fu_469_p1 = tmp_74_fu_462_p3;

assign tmp_78_fu_924_p4 = {{r_V_fu_918_p2[45:1]}};

assign tmp_79_fu_934_p3 = {{tmp_114_reg_2378}, {24'd0}};

assign tmp_80_fu_965_p3 = {{p_Val2_3_fu_872_p2}, {12'd0}};

assign tmp_81_fu_977_p1 = $unsigned(p_Val2_i_cast_fu_911_p1);

assign tmp_82_fu_1435_p1 = p_Val2_22_reg_2393;

assign tmp_83_fu_1438_p1 = $unsigned(p_Val2_9_fu_1432_p1);

assign tmp_85_fu_1448_p4 = {{p_Val2_23_fu_1442_p2[64:22]}};

assign tmp_86_fu_1525_p1 = $unsigned(sh_assign_3_cast_fu_1521_p1);

assign tmp_87_fu_1529_p2 = $signed(p_Val2_10_reg_2463) >>> tmp_86_fu_1525_p1;

assign tmp_88_fu_1534_p2 = p_Val2_10_reg_2463 << tmp_86_fu_1525_p1;

assign tmp_90_cast_fu_941_p1 = tmp_79_fu_934_p3;

assign tmp_90_fu_1550_p1 = $unsigned(sh_assign_3_cast_fu_1521_p1);

assign tmp_91_cast_fu_945_p1 = tmp_78_fu_924_p4;

assign tmp_91_fu_1554_p2 = tmp_142_fu_1546_p1 << tmp_90_fu_1550_p1;

assign tmp_92_fu_1560_p2 = $signed(tmp_142_fu_1546_p1) >>> tmp_90_fu_1550_p1;

assign tmp_93_cast_fu_973_p1 = $signed(tmp_80_fu_965_p3);

assign tmp_94_fu_1580_p1 = $unsigned(sh_assign_4_cast_fu_1511_p1);

assign tmp_95_fu_522_p4 = {{{{5'd16}, {p_Val2_2_fu_484_p2}}}, {14'd0}};

assign tmp_96_fu_1637_p3 = {{tmp_144_reg_2487}, {15'd16384}};

assign tmp_97_fu_1648_p4 = {{grp_fu_2204_p3[24:15]}};

assign tmp_98_fu_1667_p2 = ((tmp_146_fu_1664_p1 == 15'd0) ? 1'b1 : 1'b0);

assign tmp_99_fu_532_p1 = sf_fu_512_p4;

assign tmp_fu_1022_p2 = ((loc_V_5_fu_998_p4 == 8'd0) ? 1'b1 : 1'b0);

assign tmp_i105_cast_fu_1012_p1 = loc_V_5_fu_998_p4;

assign tmp_i1_194_fu_736_p2 = ((loc_V_reg_2232_pp0_iter3_reg == 8'd255) ? 1'b1 : 1'b0);

assign tmp_i1_fu_1066_p2 = ((loc_V_6_fu_1008_p1 != 23'd0) ? 1'b1 : 1'b0);

assign tmp_i2_196_fu_1756_p1 = Z2_ind_V_fu_1746_p4;

assign tmp_i2_fu_448_p2 = ((loc_V_4_reg_2239 != 23'd0) ? 1'b1 : 1'b0);

assign tmp_i3_fu_1761_p1 = p_Val2_63_reg_2504;

assign tmp_i_193_fu_1054_p2 = ((loc_V_6_fu_1008_p1 == 23'd0) ? 1'b1 : 1'b0);

assign tmp_i_cast_fu_721_p1 = loc_V_reg_2232_pp0_iter3_reg;

assign tmp_i_fu_1048_p2 = ((loc_V_5_fu_998_p4 == 8'd255) ? 1'b1 : 1'b0);

assign tmp_s_fu_730_p2 = ((b_exp_fu_724_p2 == 9'd0) ? 1'b1 : 1'b0);

assign x_is_1_fu_1028_p2 = (tmp_s_reg_2329_pp0_iter5_reg & tmp_27_reg_2263_pp0_iter5_reg);

assign x_is_n1_fu_1043_p2 = (x_is_1_fu_1028_p2 & p_Result_s_reg_2226_pp0_iter5_reg);

assign x_is_neg_demorgan_fu_1092_p2 = (tmp_31_reg_2340_pp0_iter5_reg | tmp35_fu_1086_p2);

assign x_is_neg_fu_1097_p2 = (x_is_neg_demorgan_fu_1092_p2 ^ 1'd1);

assign x_is_p1_fu_1037_p2 = (x_is_1_fu_1028_p2 & not_Result_i_fu_1032_p2);

assign y_is_ninf_fu_1241_p2 = (tmp_1692_i_fu_1060_p2 & p_Result_47_fu_990_p3);

assign y_is_odd_1_fu_1312_p2 = (tmp_52_fu_1252_p2 | sel_tmp6_fu_1306_p2);

assign y_is_odd_fu_1280_p3 = loc_V_6_fu_1008_p1[index_assign_cast_fu_1276_p1];

assign y_is_pinf_fu_1235_p2 = (tmp_1692_i_fu_1060_p2 & not_Result_i1_fu_1229_p2);

always @ (posedge ap_clk) begin
    p_Val2_21_reg_2290[12:0] <= 13'b0000000000000;
end

endmodule //pow_generic_float_s
