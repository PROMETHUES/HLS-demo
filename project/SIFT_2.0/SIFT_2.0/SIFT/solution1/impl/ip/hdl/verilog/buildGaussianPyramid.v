// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module buildGaussianPyramid (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        src_val_V_address0,
        src_val_V_ce0,
        src_val_V_q0,
        src_rows_read,
        src_cols_read,
        gauss_pyr_0_val_V_address0,
        gauss_pyr_0_val_V_ce0,
        gauss_pyr_0_val_V_we0,
        gauss_pyr_0_val_V_d0,
        gauss_pyr_0_val_V_q0,
        gauss_pyr_1_val_V_address0,
        gauss_pyr_1_val_V_ce0,
        gauss_pyr_1_val_V_q0,
        gauss_pyr_1_val_V_address1,
        gauss_pyr_1_val_V_ce1,
        gauss_pyr_1_val_V_we1,
        gauss_pyr_1_val_V_d1,
        gauss_pyr_2_val_V_address0,
        gauss_pyr_2_val_V_ce0,
        gauss_pyr_2_val_V_q0,
        gauss_pyr_2_val_V_address1,
        gauss_pyr_2_val_V_ce1,
        gauss_pyr_2_val_V_we1,
        gauss_pyr_2_val_V_d1,
        gauss_pyr_3_val_V_address0,
        gauss_pyr_3_val_V_ce0,
        gauss_pyr_3_val_V_q0,
        gauss_pyr_3_val_V_address1,
        gauss_pyr_3_val_V_ce1,
        gauss_pyr_3_val_V_we1,
        gauss_pyr_3_val_V_d1,
        gauss_pyr_4_val_V_address0,
        gauss_pyr_4_val_V_ce0,
        gauss_pyr_4_val_V_q0,
        gauss_pyr_4_val_V_address1,
        gauss_pyr_4_val_V_ce1,
        gauss_pyr_4_val_V_we1,
        gauss_pyr_4_val_V_d1,
        gauss_pyr_5_val_V_address0,
        gauss_pyr_5_val_V_ce0,
        gauss_pyr_5_val_V_we0,
        gauss_pyr_5_val_V_d0,
        gauss_pyr_0_rows_read,
        gauss_pyr_1_rows_read,
        gauss_pyr_2_rows_read,
        gauss_pyr_3_rows_read,
        gauss_pyr_4_rows_read,
        gauss_pyr_5_rows_read,
        gauss_pyr_0_cols_read,
        gauss_pyr_1_cols_read,
        gauss_pyr_2_cols_read,
        gauss_pyr_3_cols_read,
        gauss_pyr_4_cols_read,
        gauss_pyr_5_cols_read,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8,
        ap_return_9,
        ap_return_10,
        ap_return_11
);

parameter    ap_ST_fsm_state1 = 39'd1;
parameter    ap_ST_fsm_state2 = 39'd2;
parameter    ap_ST_fsm_state3 = 39'd4;
parameter    ap_ST_fsm_state4 = 39'd8;
parameter    ap_ST_fsm_state5 = 39'd16;
parameter    ap_ST_fsm_state6 = 39'd32;
parameter    ap_ST_fsm_state7 = 39'd64;
parameter    ap_ST_fsm_state8 = 39'd128;
parameter    ap_ST_fsm_state9 = 39'd256;
parameter    ap_ST_fsm_state10 = 39'd512;
parameter    ap_ST_fsm_state11 = 39'd1024;
parameter    ap_ST_fsm_state12 = 39'd2048;
parameter    ap_ST_fsm_state13 = 39'd4096;
parameter    ap_ST_fsm_state14 = 39'd8192;
parameter    ap_ST_fsm_state15 = 39'd16384;
parameter    ap_ST_fsm_state16 = 39'd32768;
parameter    ap_ST_fsm_state17 = 39'd65536;
parameter    ap_ST_fsm_state18 = 39'd131072;
parameter    ap_ST_fsm_state19 = 39'd262144;
parameter    ap_ST_fsm_state20 = 39'd524288;
parameter    ap_ST_fsm_state21 = 39'd1048576;
parameter    ap_ST_fsm_state22 = 39'd2097152;
parameter    ap_ST_fsm_state23 = 39'd4194304;
parameter    ap_ST_fsm_state24 = 39'd8388608;
parameter    ap_ST_fsm_state25 = 39'd16777216;
parameter    ap_ST_fsm_state26 = 39'd33554432;
parameter    ap_ST_fsm_state27 = 39'd67108864;
parameter    ap_ST_fsm_state28 = 39'd134217728;
parameter    ap_ST_fsm_state29 = 39'd268435456;
parameter    ap_ST_fsm_state30 = 39'd536870912;
parameter    ap_ST_fsm_state31 = 39'd1073741824;
parameter    ap_ST_fsm_state32 = 39'd2147483648;
parameter    ap_ST_fsm_state33 = 39'd4294967296;
parameter    ap_ST_fsm_state34 = 39'd8589934592;
parameter    ap_ST_fsm_state35 = 39'd17179869184;
parameter    ap_ST_fsm_state36 = 39'd34359738368;
parameter    ap_ST_fsm_state37 = 39'd68719476736;
parameter    ap_ST_fsm_pp0_stage0 = 39'd137438953472;
parameter    ap_ST_fsm_state40 = 39'd274877906944;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [15:0] src_val_V_address0;
output   src_val_V_ce0;
input  [31:0] src_val_V_q0;
input  [31:0] src_rows_read;
input  [31:0] src_cols_read;
output  [15:0] gauss_pyr_0_val_V_address0;
output   gauss_pyr_0_val_V_ce0;
output   gauss_pyr_0_val_V_we0;
output  [31:0] gauss_pyr_0_val_V_d0;
input  [31:0] gauss_pyr_0_val_V_q0;
output  [15:0] gauss_pyr_1_val_V_address0;
output   gauss_pyr_1_val_V_ce0;
input  [25:0] gauss_pyr_1_val_V_q0;
output  [15:0] gauss_pyr_1_val_V_address1;
output   gauss_pyr_1_val_V_ce1;
output   gauss_pyr_1_val_V_we1;
output  [25:0] gauss_pyr_1_val_V_d1;
output  [15:0] gauss_pyr_2_val_V_address0;
output   gauss_pyr_2_val_V_ce0;
input  [25:0] gauss_pyr_2_val_V_q0;
output  [15:0] gauss_pyr_2_val_V_address1;
output   gauss_pyr_2_val_V_ce1;
output   gauss_pyr_2_val_V_we1;
output  [25:0] gauss_pyr_2_val_V_d1;
output  [15:0] gauss_pyr_3_val_V_address0;
output   gauss_pyr_3_val_V_ce0;
input  [25:0] gauss_pyr_3_val_V_q0;
output  [15:0] gauss_pyr_3_val_V_address1;
output   gauss_pyr_3_val_V_ce1;
output   gauss_pyr_3_val_V_we1;
output  [25:0] gauss_pyr_3_val_V_d1;
output  [15:0] gauss_pyr_4_val_V_address0;
output   gauss_pyr_4_val_V_ce0;
input  [25:0] gauss_pyr_4_val_V_q0;
output  [15:0] gauss_pyr_4_val_V_address1;
output   gauss_pyr_4_val_V_ce1;
output   gauss_pyr_4_val_V_we1;
output  [25:0] gauss_pyr_4_val_V_d1;
output  [15:0] gauss_pyr_5_val_V_address0;
output   gauss_pyr_5_val_V_ce0;
output   gauss_pyr_5_val_V_we0;
output  [25:0] gauss_pyr_5_val_V_d0;
input  [31:0] gauss_pyr_0_rows_read;
input  [31:0] gauss_pyr_1_rows_read;
input  [31:0] gauss_pyr_2_rows_read;
input  [31:0] gauss_pyr_3_rows_read;
input  [31:0] gauss_pyr_4_rows_read;
input  [31:0] gauss_pyr_5_rows_read;
input  [31:0] gauss_pyr_0_cols_read;
input  [31:0] gauss_pyr_1_cols_read;
input  [31:0] gauss_pyr_2_cols_read;
input  [31:0] gauss_pyr_3_cols_read;
input  [31:0] gauss_pyr_4_cols_read;
input  [31:0] gauss_pyr_5_cols_read;
output  [31:0] ap_return_0;
output  [31:0] ap_return_1;
output  [31:0] ap_return_2;
output  [31:0] ap_return_3;
output  [31:0] ap_return_4;
output  [31:0] ap_return_5;
output  [31:0] ap_return_6;
output  [31:0] ap_return_7;
output  [31:0] ap_return_8;
output  [31:0] ap_return_9;
output  [31:0] ap_return_10;
output  [31:0] ap_return_11;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg src_val_V_ce0;
reg[15:0] gauss_pyr_0_val_V_address0;
reg gauss_pyr_0_val_V_ce0;
reg gauss_pyr_0_val_V_we0;

(* fsm_encoding = "none" *) reg   [38:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [30:0] j_i_reg_435;
wire   [2:0] tmp_s_fu_571_p2;
reg   [2:0] tmp_s_reg_1563;
wire    ap_CS_fsm_state2;
wire   [0:0] exitcond3_fu_565_p2;
wire    ap_CS_fsm_state3;
wire   [31:0] grp_pow_generic_float_s_fu_474_ap_return;
reg   [31:0] v_assign_7_reg_1669;
wire    ap_CS_fsm_state15;
wire   [0:0] isneg_fu_639_p3;
reg   [0:0] isneg_reg_1674;
wire    ap_CS_fsm_state16;
wire   [53:0] man_V_30_fu_683_p3;
reg   [53:0] man_V_30_reg_1679;
wire   [0:0] tmp_589_fu_691_p2;
reg   [0:0] tmp_589_reg_1684;
wire   [0:0] tmp_590_fu_703_p2;
reg   [0:0] tmp_590_reg_1690;
wire  signed [11:0] sh_amt_fu_721_p3;
reg  signed [11:0] sh_amt_reg_1696;
wire   [0:0] tmp_593_fu_729_p2;
reg   [0:0] tmp_593_reg_1702;
wire   [31:0] tmp_1310_fu_735_p1;
reg   [31:0] tmp_1310_reg_1708;
wire   [0:0] icmp_fu_749_p2;
reg   [0:0] icmp_reg_1714;
reg   [31:0] tmp_598_reg_1719;
wire    ap_CS_fsm_state17;
wire  signed [47:0] OP1_V_34_cast_fu_916_p1;
reg  signed [47:0] OP1_V_34_cast_reg_1724;
wire    ap_CS_fsm_state18;
reg   [31:0] tmp_599_reg_1730;
reg   [31:0] this_assign_s_reg_1735;
wire    ap_CS_fsm_state19;
wire   [23:0] grp_sqrt_fixed_32_16_s_fu_469_ap_return;
reg   [23:0] agg_result_V_i_reg_1740;
wire    ap_CS_fsm_state29;
wire   [2:0] i_16_fu_973_p2;
wire    ap_CS_fsm_state30;
wire   [2:0] i_17_fu_985_p2;
reg   [2:0] i_17_reg_1753;
wire    ap_CS_fsm_state31;
wire   [0:0] tmp_601_fu_991_p2;
reg   [0:0] tmp_601_reg_1758;
wire   [0:0] exitcond_fu_979_p2;
wire   [0:0] tmp_604_fu_1098_p2;
reg   [0:0] tmp_604_reg_1767;
wire    ap_CS_fsm_state32;
wire   [0:0] is_neg_fu_1104_p3;
reg   [0:0] is_neg_reg_1772;
wire   [31:0] tmp32_V_76_fu_1148_p2;
reg   [31:0] tmp32_V_76_reg_1777;
wire   [7:0] tmp_1314_fu_1154_p1;
reg   [7:0] tmp_1314_reg_1782;
wire   [31:0] tmp32_V_fu_1158_p1;
reg   [31:0] tmp32_V_reg_1787;
wire    ap_CS_fsm_state34;
reg   [7:0] p_Result_s_218_reg_1792;
reg   [31:0] gauss_pyr_rows6_load_1_reg_1797;
wire    ap_CS_fsm_state35;
reg   [31:0] gauss_pyr_rows7_load_1_reg_1808;
reg   [31:0] gauss_pyr_rows9_load_1_reg_1819;
reg   [31:0] gauss_pyr_rows8_load_1_reg_1830;
wire   [2:0] tmp_602_fu_1172_p2;
reg   [2:0] tmp_602_reg_1841;
wire   [31:0] p_03_i_fu_1221_p3;
reg   [31:0] p_03_i_reg_1846;
wire   [31:0] gauss_pyr_rows_addr6_fu_1230_p10;
reg   [31:0] gauss_pyr_rows_addr6_reg_1852;
wire   [31:0] gauss_pyr_cols_addr1_fu_1253_p10;
reg   [31:0] gauss_pyr_cols_addr1_reg_1857;
wire   [0:0] tmp_i_fu_1428_p2;
wire    ap_CS_fsm_state37;
wire   [30:0] i_18_fu_1433_p2;
reg   [30:0] i_18_reg_1866;
wire   [17:0] tmp_277_cast_fu_1443_p3;
reg   [17:0] tmp_277_cast_reg_1871;
wire   [0:0] tmp_1677_i_fu_1463_p2;
reg   [0:0] tmp_1677_i_reg_1876;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state38_pp0_stage0_iter0;
wire    ap_block_state39_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [30:0] j_fu_1468_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [63:0] tmp_278_cast_fu_1483_p1;
reg   [63:0] tmp_278_cast_reg_1885;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state38;
reg    ap_enable_reg_pp0_iter1;
reg   [2:0] sig_V_address0;
reg    sig_V_ce0;
reg    sig_V_we0;
reg   [24:0] sig_V_d0;
wire   [24:0] sig_V_q0;
wire    grp_GaussianBlur_fu_446_ap_start;
wire    grp_GaussianBlur_fu_446_ap_done;
wire    grp_GaussianBlur_fu_446_ap_idle;
wire    grp_GaussianBlur_fu_446_ap_ready;
wire   [15:0] grp_GaussianBlur_fu_446_src_0_val_V_address0;
wire    grp_GaussianBlur_fu_446_src_0_val_V_ce0;
wire   [15:0] grp_GaussianBlur_fu_446_src_1_val_V_address0;
wire    grp_GaussianBlur_fu_446_src_1_val_V_ce0;
wire   [15:0] grp_GaussianBlur_fu_446_src_1_val_V_address1;
wire    grp_GaussianBlur_fu_446_src_1_val_V_ce1;
wire    grp_GaussianBlur_fu_446_src_1_val_V_we1;
wire   [25:0] grp_GaussianBlur_fu_446_src_1_val_V_d1;
wire   [15:0] grp_GaussianBlur_fu_446_src_2_val_V_address0;
wire    grp_GaussianBlur_fu_446_src_2_val_V_ce0;
wire   [15:0] grp_GaussianBlur_fu_446_src_2_val_V_address1;
wire    grp_GaussianBlur_fu_446_src_2_val_V_ce1;
wire    grp_GaussianBlur_fu_446_src_2_val_V_we1;
wire   [25:0] grp_GaussianBlur_fu_446_src_2_val_V_d1;
wire   [15:0] grp_GaussianBlur_fu_446_src_3_val_V_address0;
wire    grp_GaussianBlur_fu_446_src_3_val_V_ce0;
wire   [15:0] grp_GaussianBlur_fu_446_src_3_val_V_address1;
wire    grp_GaussianBlur_fu_446_src_3_val_V_ce1;
wire    grp_GaussianBlur_fu_446_src_3_val_V_we1;
wire   [25:0] grp_GaussianBlur_fu_446_src_3_val_V_d1;
wire   [15:0] grp_GaussianBlur_fu_446_src_4_val_V_address0;
wire    grp_GaussianBlur_fu_446_src_4_val_V_ce0;
wire   [15:0] grp_GaussianBlur_fu_446_src_4_val_V_address1;
wire    grp_GaussianBlur_fu_446_src_4_val_V_ce1;
wire    grp_GaussianBlur_fu_446_src_4_val_V_we1;
wire   [25:0] grp_GaussianBlur_fu_446_src_4_val_V_d1;
wire   [15:0] grp_GaussianBlur_fu_446_dst_5_val_V_address0;
wire    grp_GaussianBlur_fu_446_dst_5_val_V_ce0;
wire    grp_GaussianBlur_fu_446_dst_5_val_V_we0;
wire   [25:0] grp_GaussianBlur_fu_446_dst_5_val_V_d0;
wire   [31:0] grp_GaussianBlur_fu_446_ap_return_0;
wire   [31:0] grp_GaussianBlur_fu_446_ap_return_1;
wire    grp_pow_generic_float_s_fu_474_ap_start;
wire    grp_pow_generic_float_s_fu_474_ap_done;
wire    grp_pow_generic_float_s_fu_474_ap_idle;
wire    grp_pow_generic_float_s_fu_474_ap_ready;
reg   [2:0] i_reg_400;
reg   [2:0] i1_reg_412;
wire    ap_CS_fsm_state36;
reg    ap_block_state36_on_subcall_done;
reg   [30:0] i_i_reg_424;
wire    ap_CS_fsm_state40;
reg    grp_GaussianBlur_fu_446_ap_start_reg;
wire    ap_CS_fsm_state20;
reg    grp_pow_generic_float_s_fu_474_ap_start_reg;
reg   [38:0] ap_NS_fsm;
wire    ap_NS_fsm_state4;
wire    ap_CS_fsm_state4;
wire   [31:0] grp_fu_498_p1;
wire   [63:0] tmp_600_fu_964_p1;
wire   [63:0] tmp_603_fu_997_p1;
wire    ap_block_pp0_stage0;
reg   [31:0] gauss_pyr_cols_fu_204;
reg   [31:0] gauss_pyr_rows_fu_208;
reg   [31:0] gauss_pyr_cols15_s_fu_212;
reg   [0:0] write_flag1_fu_216;
reg   [31:0] gauss_pyr_cols4_fu_220;
reg   [31:0] gauss_pyr_cols3_fu_224;
reg   [31:0] gauss_pyr_cols2_fu_228;
reg   [31:0] gauss_pyr_cols1_fu_232;
reg   [31:0] gauss_pyr_rows6_fu_236;
wire   [31:0] gauss_pyr_rows6_1_fu_1280_p10;
reg   [31:0] gauss_pyr_rows10_s_fu_240;
wire   [31:0] gauss_pyr_rows10_1_fu_1296_p10;
reg   [31:0] gauss_pyr_rows7_fu_244;
wire   [31:0] gauss_pyr_rows7_1_fu_1319_p10;
reg   [0:0] write_flag_fu_248;
wire   [0:0] write_flag_1_fu_1335_p10;
reg   [31:0] gauss_pyr_rows9_fu_252;
wire   [31:0] gauss_pyr_rows9_1_fu_1358_p10;
reg   [31:0] gauss_pyr_rows8_fu_256;
wire   [31:0] gauss_pyr_rows8_1_fu_1374_p10;
wire   [24:0] p_trunc_ext_cast_fu_969_p1;
wire    ap_CS_fsm_state33;
wire   [31:0] grp_fu_498_p0;
wire   [63:0] d_assign_s_fu_502_p1;
wire   [63:0] ireg_V_fu_631_p1;
wire   [10:0] exp_tmp_V_fu_647_p4;
wire   [51:0] tmp_1309_fu_661_p1;
wire   [52:0] tmp_588_fu_665_p3;
wire   [53:0] p_Result_s_fu_673_p1;
wire   [53:0] man_V_29_fu_677_p2;
wire   [62:0] tmp_fu_635_p1;
wire   [11:0] tmp_587_fu_657_p1;
wire   [11:0] F2_fu_697_p2;
wire   [11:0] tmp_591_fu_709_p2;
wire   [11:0] tmp_592_fu_715_p2;
wire   [6:0] tmp_1311_fu_739_p4;
wire  signed [31:0] sh_amt_7_cast_fu_755_p1;
wire   [53:0] tmp_595_fu_763_p1;
wire   [53:0] tmp_596_fu_767_p2;
wire   [0:0] sel_tmp1_fu_788_p2;
wire   [0:0] sel_tmp6_demorgan_fu_798_p2;
wire   [0:0] sel_tmp6_fu_802_p2;
wire   [0:0] tmp_594_fu_758_p2;
wire   [0:0] sel_tmp7_fu_808_p2;
wire   [0:0] sel_tmp8_fu_813_p2;
wire   [0:0] sel_tmp21_demorgan_fu_831_p2;
wire   [0:0] sel_tmp21_fu_836_p2;
wire   [0:0] sel_tmp22_fu_842_p2;
wire   [31:0] tmp_597_fu_783_p2;
wire   [31:0] tmp_1312_fu_772_p1;
wire   [0:0] sel_tmp15_fu_825_p2;
wire   [0:0] sel_tmp9_fu_819_p2;
wire   [31:0] storemerge_fu_776_p3;
wire   [0:0] sel_tmp2_fu_793_p2;
wire   [0:0] or_cond_fu_855_p2;
wire   [31:0] newSel_fu_847_p3;
wire   [31:0] newSel25_fu_861_p3;
wire   [0:0] or_cond3_fu_868_p2;
wire   [0:0] or_cond4_fu_882_p2;
wire   [31:0] newSel26_fu_874_p3;
wire   [31:0] newSel27_fu_888_p3;
wire  signed [31:0] p_Val2_191_fu_900_p1;
wire   [47:0] p_Val2_191_fu_900_p2;
wire  signed [31:0] p_Val2_192_fu_919_p1;
wire   [47:0] p_Val2_192_fu_919_p2;
wire  signed [31:0] tmp_834_cast_fu_938_p0;
wire  signed [47:0] tmp_10_fu_935_p1;
wire  signed [31:0] tmp_834_cast_fu_938_p1;
wire  signed [31:0] tmp_835_cast_fu_944_p0;
wire  signed [31:0] tmp_835_cast_fu_944_p1;
wire   [47:0] tmp_834_cast_fu_938_p2;
wire   [47:0] tmp_835_cast_fu_944_p2;
wire   [47:0] p_Val2_193_fu_948_p2;
wire   [31:0] gauss_pyr_5_rows_wr_fu_1008_p3;
wire   [31:0] gauss_pyr_5_cols_wr_fu_1015_p3;
wire  signed [24:0] p_Val2_321_cast_fu_1094_p0;
wire  signed [24:0] tmp_604_fu_1098_p0;
wire  signed [24:0] is_neg_fu_1104_p1;
wire  signed [25:0] p_Val2_321_cast_fu_1094_p1;
wire   [25:0] tmp_605_fu_1112_p2;
wire   [25:0] p_Val2_195_fu_1118_p3;
wire  signed [31:0] p_Val2_cast_fu_1126_p1;
reg   [31:0] p_Result_203_fu_1130_p4;
reg   [31:0] num_zeros_fu_1140_p3;
wire   [31:0] grp_fu_495_p1;
wire   [0:0] tmp_606_fu_1179_p2;
wire   [7:0] tmp_607_fu_1184_p2;
wire   [7:0] tmp_608_fu_1189_p1;
wire   [7:0] p_Repl2_81_trunc_fu_1193_p2;
wire   [8:0] tmp_609_fu_1199_p3;
wire   [31:0] p_Result_204_fu_1206_p5;
wire   [31:0] f_25_fu_1217_p1;
wire   [31:0] i_i_cast_fu_1424_p1;
wire   [9:0] tmp_1315_fu_1439_p1;
wire   [31:0] j_i_cast_fu_1459_p1;
wire   [17:0] tmp_1316_fu_1474_p1;
wire   [17:0] tmp_278_fu_1478_p2;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 39'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 grp_GaussianBlur_fu_446_ap_start_reg = 1'b0;
#0 grp_pow_generic_float_s_fu_474_ap_start_reg = 1'b0;
end

buildGaussianPyraWhU #(
    .DataWidth( 25 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
sig_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sig_V_address0),
    .ce0(sig_V_ce0),
    .we0(sig_V_we0),
    .d0(sig_V_d0),
    .q0(sig_V_q0)
);

GaussianBlur grp_GaussianBlur_fu_446(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_GaussianBlur_fu_446_ap_start),
    .ap_done(grp_GaussianBlur_fu_446_ap_done),
    .ap_idle(grp_GaussianBlur_fu_446_ap_idle),
    .ap_ready(grp_GaussianBlur_fu_446_ap_ready),
    .src_0_val_V_address0(grp_GaussianBlur_fu_446_src_0_val_V_address0),
    .src_0_val_V_ce0(grp_GaussianBlur_fu_446_src_0_val_V_ce0),
    .src_0_val_V_q0(gauss_pyr_0_val_V_q0),
    .src_1_val_V_address0(grp_GaussianBlur_fu_446_src_1_val_V_address0),
    .src_1_val_V_ce0(grp_GaussianBlur_fu_446_src_1_val_V_ce0),
    .src_1_val_V_q0(gauss_pyr_1_val_V_q0),
    .src_1_val_V_address1(grp_GaussianBlur_fu_446_src_1_val_V_address1),
    .src_1_val_V_ce1(grp_GaussianBlur_fu_446_src_1_val_V_ce1),
    .src_1_val_V_we1(grp_GaussianBlur_fu_446_src_1_val_V_we1),
    .src_1_val_V_d1(grp_GaussianBlur_fu_446_src_1_val_V_d1),
    .src_2_val_V_address0(grp_GaussianBlur_fu_446_src_2_val_V_address0),
    .src_2_val_V_ce0(grp_GaussianBlur_fu_446_src_2_val_V_ce0),
    .src_2_val_V_q0(gauss_pyr_2_val_V_q0),
    .src_2_val_V_address1(grp_GaussianBlur_fu_446_src_2_val_V_address1),
    .src_2_val_V_ce1(grp_GaussianBlur_fu_446_src_2_val_V_ce1),
    .src_2_val_V_we1(grp_GaussianBlur_fu_446_src_2_val_V_we1),
    .src_2_val_V_d1(grp_GaussianBlur_fu_446_src_2_val_V_d1),
    .src_3_val_V_address0(grp_GaussianBlur_fu_446_src_3_val_V_address0),
    .src_3_val_V_ce0(grp_GaussianBlur_fu_446_src_3_val_V_ce0),
    .src_3_val_V_q0(gauss_pyr_3_val_V_q0),
    .src_3_val_V_address1(grp_GaussianBlur_fu_446_src_3_val_V_address1),
    .src_3_val_V_ce1(grp_GaussianBlur_fu_446_src_3_val_V_ce1),
    .src_3_val_V_we1(grp_GaussianBlur_fu_446_src_3_val_V_we1),
    .src_3_val_V_d1(grp_GaussianBlur_fu_446_src_3_val_V_d1),
    .src_4_val_V_address0(grp_GaussianBlur_fu_446_src_4_val_V_address0),
    .src_4_val_V_ce0(grp_GaussianBlur_fu_446_src_4_val_V_ce0),
    .src_4_val_V_q0(gauss_pyr_4_val_V_q0),
    .src_4_val_V_address1(grp_GaussianBlur_fu_446_src_4_val_V_address1),
    .src_4_val_V_ce1(grp_GaussianBlur_fu_446_src_4_val_V_ce1),
    .src_4_val_V_we1(grp_GaussianBlur_fu_446_src_4_val_V_we1),
    .src_4_val_V_d1(grp_GaussianBlur_fu_446_src_4_val_V_d1),
    .src_val_V_offset(tmp_602_reg_1841),
    .src_rows_read(gauss_pyr_rows_addr6_reg_1852),
    .src_cols_read(gauss_pyr_cols_addr1_reg_1857),
    .dst_5_val_V_address0(grp_GaussianBlur_fu_446_dst_5_val_V_address0),
    .dst_5_val_V_ce0(grp_GaussianBlur_fu_446_dst_5_val_V_ce0),
    .dst_5_val_V_we0(grp_GaussianBlur_fu_446_dst_5_val_V_we0),
    .dst_5_val_V_d0(grp_GaussianBlur_fu_446_dst_5_val_V_d0),
    .dst_val_V_offset(i1_reg_412),
    .sigmaX(p_03_i_reg_1846),
    .sigmaY(p_03_i_reg_1846),
    .ap_return_0(grp_GaussianBlur_fu_446_ap_return_0),
    .ap_return_1(grp_GaussianBlur_fu_446_ap_return_1)
);

sqrt_fixed_32_16_s grp_sqrt_fixed_32_16_s_fu_469(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .x_V(this_assign_s_reg_1735),
    .ap_return(grp_sqrt_fixed_32_16_s_fu_469_ap_return)
);

pow_generic_float_s grp_pow_generic_float_s_fu_474(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_pow_generic_float_s_fu_474_ap_start),
    .ap_done(grp_pow_generic_float_s_fu_474_ap_done),
    .ap_idle(grp_pow_generic_float_s_fu_474_ap_idle),
    .ap_ready(grp_pow_generic_float_s_fu_474_ap_ready),
    .ap_ce(1'b1),
    .base_r(32'd1067533568),
    .exp(grp_fu_498_p1),
    .ap_return(grp_pow_generic_float_s_fu_474_ap_return)
);

SIFT2_Core_uitofpXh4 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
SIFT2_Core_uitofpXh4_U719(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp32_V_76_reg_1777),
    .ce(1'b1),
    .dout(grp_fu_495_p1)
);

SIFT2_Core_sitofpeOg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
SIFT2_Core_sitofpeOg_U720(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_498_p0),
    .ce(1'b1),
    .dout(grp_fu_498_p1)
);

SIFT2_Core_fpext_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
SIFT2_Core_fpext_hbi_U721(
    .din0(v_assign_7_reg_1669),
    .dout(d_assign_s_fu_502_p1)
);

SIFT2_Core_mux_83Yie #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
SIFT2_Core_mux_83Yie_U722(
    .din0(gauss_pyr_rows_fu_208),
    .din1(gauss_pyr_rows6_fu_236),
    .din2(gauss_pyr_rows7_fu_244),
    .din3(gauss_pyr_rows8_fu_256),
    .din4(gauss_pyr_rows9_fu_252),
    .din5(gauss_pyr_rows9_fu_252),
    .din6(gauss_pyr_rows9_fu_252),
    .din7(gauss_pyr_rows9_fu_252),
    .din8(tmp_602_fu_1172_p2),
    .dout(gauss_pyr_rows_addr6_fu_1230_p10)
);

SIFT2_Core_mux_83Yie #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
SIFT2_Core_mux_83Yie_U723(
    .din0(gauss_pyr_cols_fu_204),
    .din1(gauss_pyr_cols1_fu_232),
    .din2(gauss_pyr_cols2_fu_228),
    .din3(gauss_pyr_cols3_fu_224),
    .din4(gauss_pyr_cols4_fu_220),
    .din5(gauss_pyr_cols4_fu_220),
    .din6(gauss_pyr_cols4_fu_220),
    .din7(gauss_pyr_cols4_fu_220),
    .din8(tmp_602_fu_1172_p2),
    .dout(gauss_pyr_cols_addr1_fu_1253_p10)
);

SIFT2_Core_mux_83Yie #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
SIFT2_Core_mux_83Yie_U724(
    .din0(gauss_pyr_rows6_load_1_reg_1797),
    .din1(grp_GaussianBlur_fu_446_ap_return_0),
    .din2(gauss_pyr_rows6_load_1_reg_1797),
    .din3(gauss_pyr_rows6_load_1_reg_1797),
    .din4(gauss_pyr_rows6_load_1_reg_1797),
    .din5(gauss_pyr_rows6_load_1_reg_1797),
    .din6(gauss_pyr_rows6_load_1_reg_1797),
    .din7(gauss_pyr_rows6_load_1_reg_1797),
    .din8(i1_reg_412),
    .dout(gauss_pyr_rows6_1_fu_1280_p10)
);

SIFT2_Core_mux_83Yie #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
SIFT2_Core_mux_83Yie_U725(
    .din0(grp_GaussianBlur_fu_446_ap_return_0),
    .din1(gauss_pyr_rows10_s_fu_240),
    .din2(gauss_pyr_rows10_s_fu_240),
    .din3(gauss_pyr_rows10_s_fu_240),
    .din4(gauss_pyr_rows10_s_fu_240),
    .din5(grp_GaussianBlur_fu_446_ap_return_0),
    .din6(grp_GaussianBlur_fu_446_ap_return_0),
    .din7(grp_GaussianBlur_fu_446_ap_return_0),
    .din8(i1_reg_412),
    .dout(gauss_pyr_rows10_1_fu_1296_p10)
);

SIFT2_Core_mux_83Yie #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
SIFT2_Core_mux_83Yie_U726(
    .din0(gauss_pyr_rows7_load_1_reg_1808),
    .din1(gauss_pyr_rows7_load_1_reg_1808),
    .din2(grp_GaussianBlur_fu_446_ap_return_0),
    .din3(gauss_pyr_rows7_load_1_reg_1808),
    .din4(gauss_pyr_rows7_load_1_reg_1808),
    .din5(gauss_pyr_rows7_load_1_reg_1808),
    .din6(gauss_pyr_rows7_load_1_reg_1808),
    .din7(gauss_pyr_rows7_load_1_reg_1808),
    .din8(i1_reg_412),
    .dout(gauss_pyr_rows7_1_fu_1319_p10)
);

SIFT2_Core_mux_83Zio #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 1 ))
SIFT2_Core_mux_83Zio_U727(
    .din0(1'd1),
    .din1(write_flag_fu_248),
    .din2(write_flag_fu_248),
    .din3(write_flag_fu_248),
    .din4(write_flag_fu_248),
    .din5(1'd1),
    .din6(1'd1),
    .din7(1'd1),
    .din8(i1_reg_412),
    .dout(write_flag_1_fu_1335_p10)
);

SIFT2_Core_mux_83Yie #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
SIFT2_Core_mux_83Yie_U728(
    .din0(gauss_pyr_rows9_load_1_reg_1819),
    .din1(gauss_pyr_rows9_load_1_reg_1819),
    .din2(gauss_pyr_rows9_load_1_reg_1819),
    .din3(gauss_pyr_rows9_load_1_reg_1819),
    .din4(grp_GaussianBlur_fu_446_ap_return_0),
    .din5(gauss_pyr_rows9_load_1_reg_1819),
    .din6(gauss_pyr_rows9_load_1_reg_1819),
    .din7(gauss_pyr_rows9_load_1_reg_1819),
    .din8(i1_reg_412),
    .dout(gauss_pyr_rows9_1_fu_1358_p10)
);

SIFT2_Core_mux_83Yie #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
SIFT2_Core_mux_83Yie_U729(
    .din0(gauss_pyr_rows8_load_1_reg_1830),
    .din1(gauss_pyr_rows8_load_1_reg_1830),
    .din2(gauss_pyr_rows8_load_1_reg_1830),
    .din3(grp_GaussianBlur_fu_446_ap_return_0),
    .din4(gauss_pyr_rows8_load_1_reg_1830),
    .din5(gauss_pyr_rows8_load_1_reg_1830),
    .din6(gauss_pyr_rows8_load_1_reg_1830),
    .din7(gauss_pyr_rows8_load_1_reg_1830),
    .din8(i1_reg_412),
    .dout(gauss_pyr_rows8_1_fu_1374_p10)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state38) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((tmp_i_fu_1428_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state37))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state38))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state38);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((tmp_i_fu_1428_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state37))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_GaussianBlur_fu_446_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state35)) begin
            grp_GaussianBlur_fu_446_ap_start_reg <= 1'b1;
        end else if ((grp_GaussianBlur_fu_446_ap_ready == 1'b1)) begin
            grp_GaussianBlur_fu_446_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_pow_generic_float_s_fu_474_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_NS_fsm_state4) & (1'b1 == ap_CS_fsm_state3))) begin
            grp_pow_generic_float_s_fu_474_ap_start_reg <= 1'b1;
        end else if ((grp_pow_generic_float_s_fu_474_ap_ready == 1'b1)) begin
            grp_pow_generic_float_s_fu_474_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state36_on_subcall_done) & (i1_reg_412 == 3'd1) & (1'b1 == ap_CS_fsm_state36) & (tmp_601_reg_1758 == 1'd0))) begin
        gauss_pyr_cols1_fu_232 <= grp_GaussianBlur_fu_446_ap_return_1;
    end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond3_fu_565_p2 == 1'd1))) begin
        gauss_pyr_cols1_fu_232 <= gauss_pyr_1_cols_read;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state36_on_subcall_done) & (i1_reg_412 == 3'd2) & (1'b1 == ap_CS_fsm_state36) & (tmp_601_reg_1758 == 1'd0))) begin
        gauss_pyr_cols2_fu_228 <= grp_GaussianBlur_fu_446_ap_return_1;
    end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond3_fu_565_p2 == 1'd1))) begin
        gauss_pyr_cols2_fu_228 <= gauss_pyr_2_cols_read;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state36_on_subcall_done) & (i1_reg_412 == 3'd3) & (1'b1 == ap_CS_fsm_state36) & (tmp_601_reg_1758 == 1'd0))) begin
        gauss_pyr_cols3_fu_224 <= grp_GaussianBlur_fu_446_ap_return_1;
    end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond3_fu_565_p2 == 1'd1))) begin
        gauss_pyr_cols3_fu_224 <= gauss_pyr_3_cols_read;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state36_on_subcall_done) & (i1_reg_412 == 3'd4) & (1'b1 == ap_CS_fsm_state36) & (tmp_601_reg_1758 == 1'd0))) begin
        gauss_pyr_cols4_fu_220 <= grp_GaussianBlur_fu_446_ap_return_1;
    end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond3_fu_565_p2 == 1'd1))) begin
        gauss_pyr_cols4_fu_220 <= gauss_pyr_4_cols_read;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state37) & (tmp_i_fu_1428_p2 == 1'd0))) begin
        gauss_pyr_cols_fu_204 <= src_cols_read;
    end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond3_fu_565_p2 == 1'd1))) begin
        gauss_pyr_cols_fu_204 <= gauss_pyr_0_cols_read;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_state36_on_subcall_done) & (i1_reg_412 == 3'd4) & (1'b1 == ap_CS_fsm_state36) & (tmp_601_reg_1758 == 1'd0)) | ((1'b0 == ap_block_state36_on_subcall_done) & (i1_reg_412 == 3'd3) & (1'b1 == ap_CS_fsm_state36) & (tmp_601_reg_1758 == 1'd0)) | ((1'b0 == ap_block_state36_on_subcall_done) & (i1_reg_412 == 3'd2) & (1'b1 == ap_CS_fsm_state36) & (tmp_601_reg_1758 == 1'd0)) | (~(i1_reg_412 == 3'd4) & ~(i1_reg_412 == 3'd3) & ~(i1_reg_412 == 3'd2) & ~(i1_reg_412 == 3'd1) & (1'b0 == ap_block_state36_on_subcall_done) & (1'b1 == ap_CS_fsm_state36) & (tmp_601_reg_1758 == 1'd0)) | ((1'b0 == ap_block_state36_on_subcall_done) & (i1_reg_412 == 3'd1) & (1'b1 == ap_CS_fsm_state36) & (tmp_601_reg_1758 == 1'd0)))) begin
        gauss_pyr_rows6_fu_236 <= gauss_pyr_rows6_1_fu_1280_p10;
    end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond3_fu_565_p2 == 1'd1))) begin
        gauss_pyr_rows6_fu_236 <= gauss_pyr_1_rows_read;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_state36_on_subcall_done) & (i1_reg_412 == 3'd4) & (1'b1 == ap_CS_fsm_state36) & (tmp_601_reg_1758 == 1'd0)) | ((1'b0 == ap_block_state36_on_subcall_done) & (i1_reg_412 == 3'd3) & (1'b1 == ap_CS_fsm_state36) & (tmp_601_reg_1758 == 1'd0)) | ((1'b0 == ap_block_state36_on_subcall_done) & (i1_reg_412 == 3'd2) & (1'b1 == ap_CS_fsm_state36) & (tmp_601_reg_1758 == 1'd0)) | (~(i1_reg_412 == 3'd4) & ~(i1_reg_412 == 3'd3) & ~(i1_reg_412 == 3'd2) & ~(i1_reg_412 == 3'd1) & (1'b0 == ap_block_state36_on_subcall_done) & (1'b1 == ap_CS_fsm_state36) & (tmp_601_reg_1758 == 1'd0)) | ((1'b0 == ap_block_state36_on_subcall_done) & (i1_reg_412 == 3'd1) & (1'b1 == ap_CS_fsm_state36) & (tmp_601_reg_1758 == 1'd0)))) begin
        gauss_pyr_rows7_fu_244 <= gauss_pyr_rows7_1_fu_1319_p10;
    end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond3_fu_565_p2 == 1'd1))) begin
        gauss_pyr_rows7_fu_244 <= gauss_pyr_2_rows_read;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_state36_on_subcall_done) & (i1_reg_412 == 3'd4) & (1'b1 == ap_CS_fsm_state36) & (tmp_601_reg_1758 == 1'd0)) | ((1'b0 == ap_block_state36_on_subcall_done) & (i1_reg_412 == 3'd3) & (1'b1 == ap_CS_fsm_state36) & (tmp_601_reg_1758 == 1'd0)) | ((1'b0 == ap_block_state36_on_subcall_done) & (i1_reg_412 == 3'd2) & (1'b1 == ap_CS_fsm_state36) & (tmp_601_reg_1758 == 1'd0)) | (~(i1_reg_412 == 3'd4) & ~(i1_reg_412 == 3'd3) & ~(i1_reg_412 == 3'd2) & ~(i1_reg_412 == 3'd1) & (1'b0 == ap_block_state36_on_subcall_done) & (1'b1 == ap_CS_fsm_state36) & (tmp_601_reg_1758 == 1'd0)) | ((1'b0 == ap_block_state36_on_subcall_done) & (i1_reg_412 == 3'd1) & (1'b1 == ap_CS_fsm_state36) & (tmp_601_reg_1758 == 1'd0)))) begin
        gauss_pyr_rows8_fu_256 <= gauss_pyr_rows8_1_fu_1374_p10;
    end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond3_fu_565_p2 == 1'd1))) begin
        gauss_pyr_rows8_fu_256 <= gauss_pyr_3_rows_read;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_state36_on_subcall_done) & (i1_reg_412 == 3'd4) & (1'b1 == ap_CS_fsm_state36) & (tmp_601_reg_1758 == 1'd0)) | ((1'b0 == ap_block_state36_on_subcall_done) & (i1_reg_412 == 3'd3) & (1'b1 == ap_CS_fsm_state36) & (tmp_601_reg_1758 == 1'd0)) | ((1'b0 == ap_block_state36_on_subcall_done) & (i1_reg_412 == 3'd2) & (1'b1 == ap_CS_fsm_state36) & (tmp_601_reg_1758 == 1'd0)) | (~(i1_reg_412 == 3'd4) & ~(i1_reg_412 == 3'd3) & ~(i1_reg_412 == 3'd2) & ~(i1_reg_412 == 3'd1) & (1'b0 == ap_block_state36_on_subcall_done) & (1'b1 == ap_CS_fsm_state36) & (tmp_601_reg_1758 == 1'd0)) | ((1'b0 == ap_block_state36_on_subcall_done) & (i1_reg_412 == 3'd1) & (1'b1 == ap_CS_fsm_state36) & (tmp_601_reg_1758 == 1'd0)))) begin
        gauss_pyr_rows9_fu_252 <= gauss_pyr_rows9_1_fu_1358_p10;
    end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond3_fu_565_p2 == 1'd1))) begin
        gauss_pyr_rows9_fu_252 <= gauss_pyr_4_rows_read;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state37) & (tmp_i_fu_1428_p2 == 1'd0))) begin
        gauss_pyr_rows_fu_208 <= src_rows_read;
    end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond3_fu_565_p2 == 1'd1))) begin
        gauss_pyr_rows_fu_208 <= gauss_pyr_0_rows_read;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state36_on_subcall_done) & (1'b1 == ap_CS_fsm_state36))) begin
        i1_reg_412 <= i_17_reg_1753;
    end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond3_fu_565_p2 == 1'd1))) begin
        i1_reg_412 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_601_fu_991_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31) & (exitcond_fu_979_p2 == 1'd0))) begin
        i_i_reg_424 <= 31'd0;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        i_i_reg_424 <= i_18_reg_1866;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        i_reg_400 <= i_16_fu_973_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_400 <= 3'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_i_fu_1428_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state37))) begin
        j_i_reg_435 <= 31'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_1677_i_fu_1463_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_i_reg_435 <= j_fu_1468_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(i1_reg_412 == 3'd4) & ~(i1_reg_412 == 3'd3) & ~(i1_reg_412 == 3'd2) & ~(i1_reg_412 == 3'd1) & (1'b0 == ap_block_state36_on_subcall_done) & (1'b1 == ap_CS_fsm_state36) & (tmp_601_reg_1758 == 1'd0))) begin
        write_flag1_fu_216 <= 1'd1;
    end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond3_fu_565_p2 == 1'd1))) begin
        write_flag1_fu_216 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_state36_on_subcall_done) & (i1_reg_412 == 3'd4) & (1'b1 == ap_CS_fsm_state36) & (tmp_601_reg_1758 == 1'd0)) | ((1'b0 == ap_block_state36_on_subcall_done) & (i1_reg_412 == 3'd3) & (1'b1 == ap_CS_fsm_state36) & (tmp_601_reg_1758 == 1'd0)) | ((1'b0 == ap_block_state36_on_subcall_done) & (i1_reg_412 == 3'd2) & (1'b1 == ap_CS_fsm_state36) & (tmp_601_reg_1758 == 1'd0)) | (~(i1_reg_412 == 3'd4) & ~(i1_reg_412 == 3'd3) & ~(i1_reg_412 == 3'd2) & ~(i1_reg_412 == 3'd1) & (1'b0 == ap_block_state36_on_subcall_done) & (1'b1 == ap_CS_fsm_state36) & (tmp_601_reg_1758 == 1'd0)) | ((1'b0 == ap_block_state36_on_subcall_done) & (i1_reg_412 == 3'd1) & (1'b1 == ap_CS_fsm_state36) & (tmp_601_reg_1758 == 1'd0)))) begin
        write_flag_fu_248 <= write_flag_1_fu_1335_p10;
    end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond3_fu_565_p2 == 1'd1))) begin
        write_flag_fu_248 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        OP1_V_34_cast_reg_1724 <= OP1_V_34_cast_fu_916_p1;
        tmp_599_reg_1730 <= {{p_Val2_192_fu_919_p2[47:16]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        agg_result_V_i_reg_1740 <= grp_sqrt_fixed_32_16_s_fu_469_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((~(i1_reg_412 == 3'd4) & ~(i1_reg_412 == 3'd3) & ~(i1_reg_412 == 3'd2) & ~(i1_reg_412 == 3'd1) & (1'b0 == ap_block_state36_on_subcall_done) & (1'b1 == ap_CS_fsm_state36) & (tmp_601_reg_1758 == 1'd0))) begin
        gauss_pyr_cols15_s_fu_212 <= grp_GaussianBlur_fu_446_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        gauss_pyr_cols_addr1_reg_1857 <= gauss_pyr_cols_addr1_fu_1253_p10;
        gauss_pyr_rows6_load_1_reg_1797 <= gauss_pyr_rows6_fu_236;
        gauss_pyr_rows7_load_1_reg_1808 <= gauss_pyr_rows7_fu_244;
        gauss_pyr_rows8_load_1_reg_1830 <= gauss_pyr_rows8_fu_256;
        gauss_pyr_rows9_load_1_reg_1819 <= gauss_pyr_rows9_fu_252;
        gauss_pyr_rows_addr6_reg_1852 <= gauss_pyr_rows_addr6_fu_1230_p10;
        p_03_i_reg_1846 <= p_03_i_fu_1221_p3;
        tmp_602_reg_1841 <= tmp_602_fu_1172_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_state36_on_subcall_done) & (i1_reg_412 == 3'd4) & (1'b1 == ap_CS_fsm_state36) & (tmp_601_reg_1758 == 1'd0)) | ((1'b0 == ap_block_state36_on_subcall_done) & (i1_reg_412 == 3'd3) & (1'b1 == ap_CS_fsm_state36) & (tmp_601_reg_1758 == 1'd0)) | ((1'b0 == ap_block_state36_on_subcall_done) & (i1_reg_412 == 3'd2) & (1'b1 == ap_CS_fsm_state36) & (tmp_601_reg_1758 == 1'd0)) | (~(i1_reg_412 == 3'd4) & ~(i1_reg_412 == 3'd3) & ~(i1_reg_412 == 3'd2) & ~(i1_reg_412 == 3'd1) & (1'b0 == ap_block_state36_on_subcall_done) & (1'b1 == ap_CS_fsm_state36) & (tmp_601_reg_1758 == 1'd0)) | ((1'b0 == ap_block_state36_on_subcall_done) & (i1_reg_412 == 3'd1) & (1'b1 == ap_CS_fsm_state36) & (tmp_601_reg_1758 == 1'd0)))) begin
        gauss_pyr_rows10_s_fu_240 <= gauss_pyr_rows10_1_fu_1296_p10;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        i_17_reg_1753 <= i_17_fu_985_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        i_18_reg_1866 <= i_18_fu_1433_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        icmp_reg_1714 <= icmp_fu_749_p2;
        isneg_reg_1674 <= ireg_V_fu_631_p1[32'd63];
        man_V_30_reg_1679 <= man_V_30_fu_683_p3;
        sh_amt_reg_1696 <= sh_amt_fu_721_p3;
        tmp_1310_reg_1708 <= tmp_1310_fu_735_p1;
        tmp_589_reg_1684 <= tmp_589_fu_691_p2;
        tmp_590_reg_1690 <= tmp_590_fu_703_p2;
        tmp_593_reg_1702 <= tmp_593_fu_729_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        is_neg_reg_1772 <= is_neg_fu_1104_p1[32'd24];
        tmp32_V_76_reg_1777 <= tmp32_V_76_fu_1148_p2;
        tmp_1314_reg_1782 <= tmp_1314_fu_1154_p1;
        tmp_604_reg_1767 <= tmp_604_fu_1098_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state34) & (tmp_604_reg_1767 == 1'd0))) begin
        p_Result_s_218_reg_1792 <= {{tmp32_V_fu_1158_p1[30:23]}};
        tmp32_V_reg_1787 <= tmp32_V_fu_1158_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        this_assign_s_reg_1735 <= {{p_Val2_193_fu_948_p2[47:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_1677_i_reg_1876 <= tmp_1677_i_fu_1463_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_i_fu_1428_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state37))) begin
        tmp_277_cast_reg_1871[17 : 8] <= tmp_277_cast_fu_1443_p3[17 : 8];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_1677_i_fu_1463_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_278_cast_reg_1885[17 : 0] <= tmp_278_cast_fu_1483_p1[17 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        tmp_598_reg_1719 <= {{p_Val2_191_fu_900_p2[47:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state31) & (exitcond_fu_979_p2 == 1'd0))) begin
        tmp_601_reg_1758 <= tmp_601_fu_991_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond3_fu_565_p2 == 1'd0))) begin
        tmp_s_reg_1563 <= tmp_s_fu_571_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        v_assign_7_reg_1669 <= grp_pow_generic_float_s_fu_474_ap_return;
    end
end

always @ (*) begin
    if ((tmp_1677_i_fu_1463_p2 == 1'd0)) begin
        ap_condition_pp0_exit_iter0_state38 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state38 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((exitcond_fu_979_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_fu_979_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        gauss_pyr_0_val_V_address0 = tmp_278_cast_reg_1885;
    end else if (((1'b1 == ap_CS_fsm_state36) & (tmp_601_reg_1758 == 1'd0))) begin
        gauss_pyr_0_val_V_address0 = grp_GaussianBlur_fu_446_src_0_val_V_address0;
    end else begin
        gauss_pyr_0_val_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        gauss_pyr_0_val_V_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state36) & (tmp_601_reg_1758 == 1'd0))) begin
        gauss_pyr_0_val_V_ce0 = grp_GaussianBlur_fu_446_src_0_val_V_ce0;
    end else begin
        gauss_pyr_0_val_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_1677_i_reg_1876 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        gauss_pyr_0_val_V_we0 = 1'b1;
    end else begin
        gauss_pyr_0_val_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        sig_V_address0 = tmp_603_fu_997_p1;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        sig_V_address0 = tmp_600_fu_964_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        sig_V_address0 = 64'd0;
    end else begin
        sig_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        sig_V_ce0 = 1'b1;
    end else begin
        sig_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        sig_V_d0 = p_trunc_ext_cast_fu_969_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        sig_V_d0 = 25'd104857;
    end else begin
        sig_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        sig_V_we0 = 1'b1;
    end else begin
        sig_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        src_val_V_ce0 = 1'b1;
    end else begin
        src_val_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (exitcond3_fu_565_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state31 : begin
            if (((exitcond_fu_979_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((tmp_601_fu_991_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31) & (exitcond_fu_979_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            if (((1'b0 == ap_block_state36_on_subcall_done) & (1'b1 == ap_CS_fsm_state36))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end
        end
        ap_ST_fsm_state37 : begin
            if (((1'b1 == ap_CS_fsm_state37) & (tmp_i_fu_1428_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_1677_i_fu_1463_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_1677_i_fu_1463_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_fu_697_p2 = (12'd1075 - tmp_587_fu_657_p1);

assign OP1_V_34_cast_fu_916_p1 = $signed(tmp_598_reg_1719);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd38];

assign ap_NS_fsm_state4 = ap_NS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state36_on_subcall_done = ((grp_GaussianBlur_fu_446_ap_done == 1'b0) & (tmp_601_reg_1758 == 1'd0));
end

assign ap_block_state38_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_return_0 = gauss_pyr_rows6_fu_236;

assign ap_return_1 = gauss_pyr_rows7_fu_244;

assign ap_return_10 = gauss_pyr_rows_fu_208;

assign ap_return_11 = gauss_pyr_cols_fu_204;

assign ap_return_2 = gauss_pyr_rows8_fu_256;

assign ap_return_3 = gauss_pyr_rows9_fu_252;

assign ap_return_4 = gauss_pyr_5_rows_wr_fu_1008_p3;

assign ap_return_5 = gauss_pyr_cols1_fu_232;

assign ap_return_6 = gauss_pyr_cols2_fu_228;

assign ap_return_7 = gauss_pyr_cols3_fu_224;

assign ap_return_8 = gauss_pyr_cols4_fu_220;

assign ap_return_9 = gauss_pyr_5_cols_wr_fu_1015_p3;

assign exitcond3_fu_565_p2 = ((i_reg_400 == 3'd6) ? 1'b1 : 1'b0);

assign exitcond_fu_979_p2 = ((i1_reg_412 == 3'd6) ? 1'b1 : 1'b0);

assign exp_tmp_V_fu_647_p4 = {{ireg_V_fu_631_p1[62:52]}};

assign f_25_fu_1217_p1 = p_Result_204_fu_1206_p5;

assign gauss_pyr_0_val_V_d0 = src_val_V_q0;

assign gauss_pyr_1_val_V_address0 = grp_GaussianBlur_fu_446_src_1_val_V_address0;

assign gauss_pyr_1_val_V_address1 = grp_GaussianBlur_fu_446_src_1_val_V_address1;

assign gauss_pyr_1_val_V_ce0 = grp_GaussianBlur_fu_446_src_1_val_V_ce0;

assign gauss_pyr_1_val_V_ce1 = grp_GaussianBlur_fu_446_src_1_val_V_ce1;

assign gauss_pyr_1_val_V_d1 = grp_GaussianBlur_fu_446_src_1_val_V_d1;

assign gauss_pyr_1_val_V_we1 = grp_GaussianBlur_fu_446_src_1_val_V_we1;

assign gauss_pyr_2_val_V_address0 = grp_GaussianBlur_fu_446_src_2_val_V_address0;

assign gauss_pyr_2_val_V_address1 = grp_GaussianBlur_fu_446_src_2_val_V_address1;

assign gauss_pyr_2_val_V_ce0 = grp_GaussianBlur_fu_446_src_2_val_V_ce0;

assign gauss_pyr_2_val_V_ce1 = grp_GaussianBlur_fu_446_src_2_val_V_ce1;

assign gauss_pyr_2_val_V_d1 = grp_GaussianBlur_fu_446_src_2_val_V_d1;

assign gauss_pyr_2_val_V_we1 = grp_GaussianBlur_fu_446_src_2_val_V_we1;

assign gauss_pyr_3_val_V_address0 = grp_GaussianBlur_fu_446_src_3_val_V_address0;

assign gauss_pyr_3_val_V_address1 = grp_GaussianBlur_fu_446_src_3_val_V_address1;

assign gauss_pyr_3_val_V_ce0 = grp_GaussianBlur_fu_446_src_3_val_V_ce0;

assign gauss_pyr_3_val_V_ce1 = grp_GaussianBlur_fu_446_src_3_val_V_ce1;

assign gauss_pyr_3_val_V_d1 = grp_GaussianBlur_fu_446_src_3_val_V_d1;

assign gauss_pyr_3_val_V_we1 = grp_GaussianBlur_fu_446_src_3_val_V_we1;

assign gauss_pyr_4_val_V_address0 = grp_GaussianBlur_fu_446_src_4_val_V_address0;

assign gauss_pyr_4_val_V_address1 = grp_GaussianBlur_fu_446_src_4_val_V_address1;

assign gauss_pyr_4_val_V_ce0 = grp_GaussianBlur_fu_446_src_4_val_V_ce0;

assign gauss_pyr_4_val_V_ce1 = grp_GaussianBlur_fu_446_src_4_val_V_ce1;

assign gauss_pyr_4_val_V_d1 = grp_GaussianBlur_fu_446_src_4_val_V_d1;

assign gauss_pyr_4_val_V_we1 = grp_GaussianBlur_fu_446_src_4_val_V_we1;

assign gauss_pyr_5_cols_wr_fu_1015_p3 = ((write_flag1_fu_216[0:0] === 1'b1) ? gauss_pyr_cols15_s_fu_212 : gauss_pyr_5_cols_read);

assign gauss_pyr_5_rows_wr_fu_1008_p3 = ((write_flag_fu_248[0:0] === 1'b1) ? gauss_pyr_rows10_s_fu_240 : gauss_pyr_5_rows_read);

assign gauss_pyr_5_val_V_address0 = grp_GaussianBlur_fu_446_dst_5_val_V_address0;

assign gauss_pyr_5_val_V_ce0 = grp_GaussianBlur_fu_446_dst_5_val_V_ce0;

assign gauss_pyr_5_val_V_d0 = grp_GaussianBlur_fu_446_dst_5_val_V_d0;

assign gauss_pyr_5_val_V_we0 = grp_GaussianBlur_fu_446_dst_5_val_V_we0;

assign grp_GaussianBlur_fu_446_ap_start = grp_GaussianBlur_fu_446_ap_start_reg;

assign grp_fu_498_p0 = tmp_s_reg_1563;

assign grp_pow_generic_float_s_fu_474_ap_start = grp_pow_generic_float_s_fu_474_ap_start_reg;

assign i_16_fu_973_p2 = (3'd1 + i_reg_400);

assign i_17_fu_985_p2 = (i1_reg_412 + 3'd1);

assign i_18_fu_1433_p2 = (i_i_reg_424 + 31'd1);

assign i_i_cast_fu_1424_p1 = i_i_reg_424;

assign icmp_fu_749_p2 = ((tmp_1311_fu_739_p4 == 7'd0) ? 1'b1 : 1'b0);

assign ireg_V_fu_631_p1 = d_assign_s_fu_502_p1;

assign is_neg_fu_1104_p1 = sig_V_q0;

assign is_neg_fu_1104_p3 = is_neg_fu_1104_p1[32'd24];

assign isneg_fu_639_p3 = ireg_V_fu_631_p1[32'd63];

assign j_fu_1468_p2 = (j_i_reg_435 + 31'd1);

assign j_i_cast_fu_1459_p1 = j_i_reg_435;

assign man_V_29_fu_677_p2 = (54'd0 - p_Result_s_fu_673_p1);

assign man_V_30_fu_683_p3 = ((isneg_fu_639_p3[0:0] === 1'b1) ? man_V_29_fu_677_p2 : p_Result_s_fu_673_p1);

assign newSel25_fu_861_p3 = ((sel_tmp9_fu_819_p2[0:0] === 1'b1) ? storemerge_fu_776_p3 : tmp_1310_reg_1708);

assign newSel26_fu_874_p3 = ((or_cond_fu_855_p2[0:0] === 1'b1) ? newSel_fu_847_p3 : newSel25_fu_861_p3);

assign newSel27_fu_888_p3 = ((or_cond4_fu_882_p2[0:0] === 1'b1) ? newSel26_fu_874_p3 : 32'd0);

assign newSel_fu_847_p3 = ((sel_tmp22_fu_842_p2[0:0] === 1'b1) ? tmp_597_fu_783_p2 : tmp_1312_fu_772_p1);


always @ (p_Result_203_fu_1130_p4) begin
    if (p_Result_203_fu_1130_p4[0] == 1'b1) begin
        num_zeros_fu_1140_p3 = 32'd0;
    end else if (p_Result_203_fu_1130_p4[1] == 1'b1) begin
        num_zeros_fu_1140_p3 = 32'd1;
    end else if (p_Result_203_fu_1130_p4[2] == 1'b1) begin
        num_zeros_fu_1140_p3 = 32'd2;
    end else if (p_Result_203_fu_1130_p4[3] == 1'b1) begin
        num_zeros_fu_1140_p3 = 32'd3;
    end else if (p_Result_203_fu_1130_p4[4] == 1'b1) begin
        num_zeros_fu_1140_p3 = 32'd4;
    end else if (p_Result_203_fu_1130_p4[5] == 1'b1) begin
        num_zeros_fu_1140_p3 = 32'd5;
    end else if (p_Result_203_fu_1130_p4[6] == 1'b1) begin
        num_zeros_fu_1140_p3 = 32'd6;
    end else if (p_Result_203_fu_1130_p4[7] == 1'b1) begin
        num_zeros_fu_1140_p3 = 32'd7;
    end else if (p_Result_203_fu_1130_p4[8] == 1'b1) begin
        num_zeros_fu_1140_p3 = 32'd8;
    end else if (p_Result_203_fu_1130_p4[9] == 1'b1) begin
        num_zeros_fu_1140_p3 = 32'd9;
    end else if (p_Result_203_fu_1130_p4[10] == 1'b1) begin
        num_zeros_fu_1140_p3 = 32'd10;
    end else if (p_Result_203_fu_1130_p4[11] == 1'b1) begin
        num_zeros_fu_1140_p3 = 32'd11;
    end else if (p_Result_203_fu_1130_p4[12] == 1'b1) begin
        num_zeros_fu_1140_p3 = 32'd12;
    end else if (p_Result_203_fu_1130_p4[13] == 1'b1) begin
        num_zeros_fu_1140_p3 = 32'd13;
    end else if (p_Result_203_fu_1130_p4[14] == 1'b1) begin
        num_zeros_fu_1140_p3 = 32'd14;
    end else if (p_Result_203_fu_1130_p4[15] == 1'b1) begin
        num_zeros_fu_1140_p3 = 32'd15;
    end else if (p_Result_203_fu_1130_p4[16] == 1'b1) begin
        num_zeros_fu_1140_p3 = 32'd16;
    end else if (p_Result_203_fu_1130_p4[17] == 1'b1) begin
        num_zeros_fu_1140_p3 = 32'd17;
    end else if (p_Result_203_fu_1130_p4[18] == 1'b1) begin
        num_zeros_fu_1140_p3 = 32'd18;
    end else if (p_Result_203_fu_1130_p4[19] == 1'b1) begin
        num_zeros_fu_1140_p3 = 32'd19;
    end else if (p_Result_203_fu_1130_p4[20] == 1'b1) begin
        num_zeros_fu_1140_p3 = 32'd20;
    end else if (p_Result_203_fu_1130_p4[21] == 1'b1) begin
        num_zeros_fu_1140_p3 = 32'd21;
    end else if (p_Result_203_fu_1130_p4[22] == 1'b1) begin
        num_zeros_fu_1140_p3 = 32'd22;
    end else if (p_Result_203_fu_1130_p4[23] == 1'b1) begin
        num_zeros_fu_1140_p3 = 32'd23;
    end else if (p_Result_203_fu_1130_p4[24] == 1'b1) begin
        num_zeros_fu_1140_p3 = 32'd24;
    end else if (p_Result_203_fu_1130_p4[25] == 1'b1) begin
        num_zeros_fu_1140_p3 = 32'd25;
    end else if (p_Result_203_fu_1130_p4[26] == 1'b1) begin
        num_zeros_fu_1140_p3 = 32'd26;
    end else if (p_Result_203_fu_1130_p4[27] == 1'b1) begin
        num_zeros_fu_1140_p3 = 32'd27;
    end else if (p_Result_203_fu_1130_p4[28] == 1'b1) begin
        num_zeros_fu_1140_p3 = 32'd28;
    end else if (p_Result_203_fu_1130_p4[29] == 1'b1) begin
        num_zeros_fu_1140_p3 = 32'd29;
    end else if (p_Result_203_fu_1130_p4[30] == 1'b1) begin
        num_zeros_fu_1140_p3 = 32'd30;
    end else if (p_Result_203_fu_1130_p4[31] == 1'b1) begin
        num_zeros_fu_1140_p3 = 32'd31;
    end else begin
        num_zeros_fu_1140_p3 = 32'd32;
    end
end

assign or_cond3_fu_868_p2 = (sel_tmp9_fu_819_p2 | sel_tmp2_fu_793_p2);

assign or_cond4_fu_882_p2 = (or_cond_fu_855_p2 | or_cond3_fu_868_p2);

assign or_cond_fu_855_p2 = (sel_tmp22_fu_842_p2 | sel_tmp15_fu_825_p2);

assign p_03_i_fu_1221_p3 = ((tmp_604_reg_1767[0:0] === 1'b1) ? 32'd0 : f_25_fu_1217_p1);

assign p_Repl2_81_trunc_fu_1193_p2 = (tmp_607_fu_1184_p2 + tmp_608_fu_1189_p1);

integer ap_tvar_int_0;

always @ (p_Val2_cast_fu_1126_p1) begin
    for (ap_tvar_int_0 = 32 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 31 - 0) begin
            p_Result_203_fu_1130_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_203_fu_1130_p4[ap_tvar_int_0] = p_Val2_cast_fu_1126_p1[31 - ap_tvar_int_0];
        end
    end
end

assign p_Result_204_fu_1206_p5 = {{tmp_609_fu_1199_p3}, {tmp32_V_reg_1787[22:0]}};

assign p_Result_s_fu_673_p1 = tmp_588_fu_665_p3;

assign p_Val2_191_fu_900_p1 = newSel27_fu_888_p3;

assign p_Val2_191_fu_900_p2 = ($signed({{1'b0}, {48'd104857}}) * $signed(p_Val2_191_fu_900_p1));

assign p_Val2_192_fu_919_p1 = tmp_598_reg_1719;

assign p_Val2_192_fu_919_p2 = ($signed({{1'b0}, {48'd82570}}) * $signed(p_Val2_192_fu_919_p1));

assign p_Val2_193_fu_948_p2 = (tmp_834_cast_fu_938_p2 - tmp_835_cast_fu_944_p2);

assign p_Val2_195_fu_1118_p3 = ((is_neg_fu_1104_p3[0:0] === 1'b1) ? tmp_605_fu_1112_p2 : p_Val2_321_cast_fu_1094_p1);

assign p_Val2_321_cast_fu_1094_p0 = sig_V_q0;

assign p_Val2_321_cast_fu_1094_p1 = p_Val2_321_cast_fu_1094_p0;

assign p_Val2_cast_fu_1126_p1 = $signed(p_Val2_195_fu_1118_p3);

assign p_trunc_ext_cast_fu_969_p1 = agg_result_V_i_reg_1740;

assign sel_tmp15_fu_825_p2 = (tmp_594_fu_758_p2 & sel_tmp7_fu_808_p2);

assign sel_tmp1_fu_788_p2 = (tmp_589_reg_1684 ^ 1'd1);

assign sel_tmp21_demorgan_fu_831_p2 = (tmp_590_reg_1690 | sel_tmp6_demorgan_fu_798_p2);

assign sel_tmp21_fu_836_p2 = (sel_tmp21_demorgan_fu_831_p2 ^ 1'd1);

assign sel_tmp22_fu_842_p2 = (sel_tmp21_fu_836_p2 & icmp_reg_1714);

assign sel_tmp2_fu_793_p2 = (tmp_593_reg_1702 & sel_tmp1_fu_788_p2);

assign sel_tmp6_demorgan_fu_798_p2 = (tmp_593_reg_1702 | tmp_589_reg_1684);

assign sel_tmp6_fu_802_p2 = (sel_tmp6_demorgan_fu_798_p2 ^ 1'd1);

assign sel_tmp7_fu_808_p2 = (tmp_590_reg_1690 & sel_tmp6_fu_802_p2);

assign sel_tmp8_fu_813_p2 = (tmp_594_fu_758_p2 ^ 1'd1);

assign sel_tmp9_fu_819_p2 = (sel_tmp8_fu_813_p2 & sel_tmp7_fu_808_p2);

assign sh_amt_7_cast_fu_755_p1 = sh_amt_reg_1696;

assign sh_amt_fu_721_p3 = ((tmp_590_fu_703_p2[0:0] === 1'b1) ? tmp_591_fu_709_p2 : tmp_592_fu_715_p2);

assign src_val_V_address0 = tmp_278_cast_fu_1483_p1;

assign storemerge_fu_776_p3 = ((isneg_reg_1674[0:0] === 1'b1) ? 32'd4294967295 : 32'd0);

assign tmp32_V_76_fu_1148_p2 = p_Val2_cast_fu_1126_p1 << num_zeros_fu_1140_p3;

assign tmp32_V_fu_1158_p1 = grp_fu_495_p1;

assign tmp_10_fu_935_p1 = $signed(tmp_599_reg_1730);

assign tmp_1309_fu_661_p1 = ireg_V_fu_631_p1[51:0];

assign tmp_1310_fu_735_p1 = man_V_30_fu_683_p3[31:0];

assign tmp_1311_fu_739_p4 = {{sh_amt_fu_721_p3[11:5]}};

assign tmp_1312_fu_772_p1 = tmp_596_fu_767_p2[31:0];

assign tmp_1314_fu_1154_p1 = num_zeros_fu_1140_p3[7:0];

assign tmp_1315_fu_1439_p1 = i_i_reg_424[9:0];

assign tmp_1316_fu_1474_p1 = j_i_reg_435[17:0];

assign tmp_1677_i_fu_1463_p2 = (($signed(j_i_cast_fu_1459_p1) < $signed(src_cols_read)) ? 1'b1 : 1'b0);

assign tmp_277_cast_fu_1443_p3 = {{tmp_1315_fu_1439_p1}, {8'd0}};

assign tmp_278_cast_fu_1483_p1 = tmp_278_fu_1478_p2;

assign tmp_278_fu_1478_p2 = (tmp_277_cast_reg_1871 + tmp_1316_fu_1474_p1);

assign tmp_587_fu_657_p1 = exp_tmp_V_fu_647_p4;

assign tmp_588_fu_665_p3 = {{1'd1}, {tmp_1309_fu_661_p1}};

assign tmp_589_fu_691_p2 = ((tmp_fu_635_p1 == 63'd0) ? 1'b1 : 1'b0);

assign tmp_590_fu_703_p2 = (($signed(F2_fu_697_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign tmp_591_fu_709_p2 = ($signed(12'd4080) + $signed(F2_fu_697_p2));

assign tmp_592_fu_715_p2 = (12'd16 - F2_fu_697_p2);

assign tmp_593_fu_729_p2 = ((F2_fu_697_p2 == 12'd16) ? 1'b1 : 1'b0);

assign tmp_594_fu_758_p2 = ((sh_amt_reg_1696 < 12'd54) ? 1'b1 : 1'b0);

assign tmp_595_fu_763_p1 = $unsigned(sh_amt_7_cast_fu_755_p1);

assign tmp_596_fu_767_p2 = $signed(man_V_30_reg_1679) >>> tmp_595_fu_763_p1;

assign tmp_597_fu_783_p2 = tmp_1310_reg_1708 << sh_amt_7_cast_fu_755_p1;

assign tmp_600_fu_964_p1 = i_reg_400;

assign tmp_601_fu_991_p2 = ((i1_reg_412 == 3'd0) ? 1'b1 : 1'b0);

assign tmp_602_fu_1172_p2 = ($signed(3'd7) + $signed(i1_reg_412));

assign tmp_603_fu_997_p1 = i1_reg_412;

assign tmp_604_fu_1098_p0 = sig_V_q0;

assign tmp_604_fu_1098_p2 = ((tmp_604_fu_1098_p0 == 25'd0) ? 1'b1 : 1'b0);

assign tmp_605_fu_1112_p2 = ($signed(26'd0) - $signed(p_Val2_321_cast_fu_1094_p1));

assign tmp_606_fu_1179_p2 = ((p_Result_s_218_reg_1792 != 8'd158) ? 1'b1 : 1'b0);

assign tmp_607_fu_1184_p2 = ($signed(8'd142) - $signed(tmp_1314_reg_1782));

assign tmp_608_fu_1189_p1 = tmp_606_fu_1179_p2;

assign tmp_609_fu_1199_p3 = {{is_neg_reg_1772}, {p_Repl2_81_trunc_fu_1193_p2}};

assign tmp_834_cast_fu_938_p0 = tmp_10_fu_935_p1;

assign tmp_834_cast_fu_938_p1 = tmp_10_fu_935_p1;

assign tmp_834_cast_fu_938_p2 = ($signed(tmp_834_cast_fu_938_p0) * $signed(tmp_834_cast_fu_938_p1));

assign tmp_835_cast_fu_944_p0 = OP1_V_34_cast_reg_1724;

assign tmp_835_cast_fu_944_p1 = OP1_V_34_cast_reg_1724;

assign tmp_835_cast_fu_944_p2 = ($signed(tmp_835_cast_fu_944_p0) * $signed(tmp_835_cast_fu_944_p1));

assign tmp_fu_635_p1 = ireg_V_fu_631_p1[62:0];

assign tmp_i_fu_1428_p2 = (($signed(i_i_cast_fu_1424_p1) < $signed(src_rows_read)) ? 1'b1 : 1'b0);

assign tmp_s_fu_571_p2 = ($signed(3'd7) + $signed(i_reg_400));

always @ (posedge ap_clk) begin
    tmp_277_cast_reg_1871[7:0] <= 8'b00000000;
    tmp_278_cast_reg_1885[63:18] <= 46'b0000000000000000000000000000000000000000000000;
end

endmodule //buildGaussianPyramid
