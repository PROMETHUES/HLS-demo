-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Result2Array2D_511_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    keypoints_val_pt_x_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    keypoints_val_pt_x_ce0 : OUT STD_LOGIC;
    keypoints_val_pt_x_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    keypoints_val_pt_y_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    keypoints_val_pt_y_ce0 : OUT STD_LOGIC;
    keypoints_val_pt_y_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    keypoints_length_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    keypoints_length_empty_n : IN STD_LOGIC;
    keypoints_length_read : OUT STD_LOGIC;
    dst_val_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    dst_val_ce0 : OUT STD_LOGIC;
    dst_val_we0 : OUT STD_LOGIC;
    dst_val_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_val_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    dst_val_ce1 : OUT STD_LOGIC;
    dst_val_we1 : OUT STD_LOGIC;
    dst_val_d1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of Result2Array2D_511_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv11_7FC : STD_LOGIC_VECTOR (10 downto 0) := "11111111100";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal keypoints_length_blk_n : STD_LOGIC;
    signal j_i_reg_214 : STD_LOGIC_VECTOR (7 downto 0);
    signal length_reg_569 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal tmp_fu_244_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_reg_574 : STD_LOGIC_VECTOR (7 downto 0);
    signal exitcond4_i_fu_248_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal i_fu_254_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_reg_583 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_i_fu_264_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_i_reg_588 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_339_cast_fu_280_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_339_cast_reg_593 : STD_LOGIC_VECTOR (12 downto 0);
    signal exitcond_i_fu_288_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_605 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal j_fu_294_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal j_reg_609 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal icmp_fu_322_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_614 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_226_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1019_i_reg_618 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_231_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1026_i_reg_622 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_236_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1034_i_reg_626 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal i_i_reg_203 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_phi_mux_j_i_phi_fu_218_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal tmp_1041_i_fu_344_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1023_i_fu_349_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_345_cast_fu_374_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_344_cast_fu_399_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_342_cast_fu_424_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_340_cast_fu_438_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_347_cast_fu_470_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_346_cast_fu_489_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_343_cast_fu_522_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_341_cast_fu_541_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal y_1_fu_86 : STD_LOGIC_VECTOR (15 downto 0);
    signal x_1_fu_90 : STD_LOGIC_VECTOR (15 downto 0);
    signal length_1_fu_94 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1650_fu_475_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1649_fu_527_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal byte_fu_300_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_1646_fu_260_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_338_fu_272_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal j_cast3_i_fu_284_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal idx_fu_307_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_1648_fu_312_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_1018_i_fu_328_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_741_i_fu_334_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_1040_i_cast_fu_365_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_345_fu_369_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_1037_i_cast_fu_390_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_344_fu_394_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_1029_i_cast_fu_415_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_342_fu_419_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_1021_i_cast_fu_429_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_340_fu_433_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_1046_i_cast_fu_461_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_347_fu_465_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_1043_i_cast_fu_480_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_346_fu_484_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_1033_i_cast_fu_513_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_343_fu_517_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_1025_i_cast_fu_532_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_341_fu_536_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_492 : BOOLEAN;
    signal ap_condition_495 : BOOLEAN;
    signal ap_condition_263 : BOOLEAN;
    signal ap_condition_503 : BOOLEAN;
    signal ap_condition_506 : BOOLEAN;
    signal ap_condition_501 : BOOLEAN;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((exitcond4_i_fu_248_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((exitcond4_i_fu_248_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state3);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((exitcond4_i_fu_248_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_i_reg_203_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                i_i_reg_203 <= i_reg_583;
            elsif ((not(((ap_start = ap_const_logic_0) or (keypoints_length_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_i_reg_203 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    j_i_reg_214_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond4_i_fu_248_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                j_i_reg_214 <= ap_const_lv8_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_i_reg_605 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                j_i_reg_214 <= j_reg_609;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                exitcond_i_reg_605 <= exitcond_i_fu_288_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_reg_583 <= i_fu_254_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_i_fu_288_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_reg_614 <= icmp_fu_322_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                j_reg_609 <= j_fu_294_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_i_fu_288_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (grp_fu_226_p2 = ap_const_lv1_1) and (icmp_fu_322_p2 = ap_const_lv1_1))) then
                length_1_fu_94 <= length_reg_569;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (keypoints_length_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                length_reg_569 <= keypoints_length_dout;
                tmp_reg_574 <= tmp_fu_244_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_i_fu_288_p2 = ap_const_lv1_0) and (icmp_fu_322_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                tmp_1019_i_reg_618 <= grp_fu_226_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_i_fu_288_p2 = ap_const_lv1_0) and (grp_fu_226_p2 = ap_const_lv1_0) and (icmp_fu_322_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                tmp_1026_i_reg_622 <= grp_fu_231_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_i_fu_288_p2 = ap_const_lv1_0) and (grp_fu_231_p2 = ap_const_lv1_0) and (grp_fu_226_p2 = ap_const_lv1_0) and (icmp_fu_322_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                tmp_1034_i_reg_626 <= grp_fu_236_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond4_i_fu_248_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    tmp_339_cast_reg_593(11 downto 7) <= tmp_339_cast_fu_280_p1(11 downto 7);
                    tmp_i_reg_588(10 downto 7) <= tmp_i_fu_264_p3(10 downto 7);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_reg_614 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (tmp_1019_i_reg_618 = ap_const_lv1_1))) then
                x_1_fu_90 <= keypoints_val_pt_x_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_1026_i_reg_622 = ap_const_lv1_0) and (tmp_1019_i_reg_618 = ap_const_lv1_0) and (icmp_reg_614 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (tmp_1034_i_reg_626 = ap_const_lv1_1))) then
                y_1_fu_86 <= keypoints_val_pt_y_q0;
            end if;
        end if;
    end process;
    tmp_i_reg_588(6 downto 0) <= "0000000";
    tmp_339_cast_reg_593(6 downto 0) <= "0000000";
    tmp_339_cast_reg_593(12) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, keypoints_length_empty_n, exitcond4_i_fu_248_p2, ap_CS_fsm_state2, exitcond_i_fu_288_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (keypoints_length_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((exitcond4_i_fu_248_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((exitcond_i_fu_288_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((exitcond_i_fu_288_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state5 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, keypoints_length_empty_n)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (keypoints_length_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_263_assign_proc : process(exitcond_i_fu_288_p2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_fu_322_p2, ap_block_pp0_stage0)
    begin
                ap_condition_263 <= ((exitcond_i_fu_288_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_fu_322_p2 = ap_const_lv1_1));
    end process;


    ap_condition_492_assign_proc : process(grp_fu_226_p2, grp_fu_231_p2, grp_fu_236_p2)
    begin
                ap_condition_492 <= ((grp_fu_236_p2 = ap_const_lv1_0) and (grp_fu_231_p2 = ap_const_lv1_0) and (grp_fu_226_p2 = ap_const_lv1_0));
    end process;


    ap_condition_495_assign_proc : process(grp_fu_226_p2, grp_fu_231_p2, grp_fu_236_p2)
    begin
                ap_condition_495 <= ((grp_fu_231_p2 = ap_const_lv1_0) and (grp_fu_226_p2 = ap_const_lv1_0) and (grp_fu_236_p2 = ap_const_lv1_1));
    end process;


    ap_condition_501_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_reg_614, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
                ap_condition_501 <= ((icmp_reg_614 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0));
    end process;


    ap_condition_503_assign_proc : process(tmp_1019_i_reg_618, tmp_1026_i_reg_622, tmp_1034_i_reg_626)
    begin
                ap_condition_503 <= ((tmp_1034_i_reg_626 = ap_const_lv1_0) and (tmp_1026_i_reg_622 = ap_const_lv1_0) and (tmp_1019_i_reg_618 = ap_const_lv1_0));
    end process;


    ap_condition_506_assign_proc : process(tmp_1019_i_reg_618, tmp_1026_i_reg_622, tmp_1034_i_reg_626)
    begin
                ap_condition_506 <= ((tmp_1026_i_reg_622 = ap_const_lv1_0) and (tmp_1019_i_reg_618 = ap_const_lv1_0) and (tmp_1034_i_reg_626 = ap_const_lv1_1));
    end process;


    ap_condition_pp0_exit_iter0_state3_assign_proc : process(exitcond_i_fu_288_p2)
    begin
        if ((exitcond_i_fu_288_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, exitcond4_i_fu_248_p2, ap_CS_fsm_state2)
    begin
        if (((exitcond4_i_fu_248_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_j_i_phi_fu_218_p4_assign_proc : process(j_i_reg_214, exitcond_i_reg_605, ap_CS_fsm_pp0_stage0, j_reg_609, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((exitcond_i_reg_605 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_j_i_phi_fu_218_p4 <= j_reg_609;
        else 
            ap_phi_mux_j_i_phi_fu_218_p4 <= j_i_reg_214;
        end if; 
    end process;


    ap_ready_assign_proc : process(exitcond4_i_fu_248_p2, ap_CS_fsm_state2)
    begin
        if (((exitcond4_i_fu_248_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    byte_fu_300_p1 <= ap_phi_mux_j_i_phi_fu_218_p4(2 - 1 downto 0);

    dst_val_address0_assign_proc : process(grp_fu_226_p2, grp_fu_231_p2, tmp_345_cast_fu_374_p1, tmp_344_cast_fu_399_p1, tmp_342_cast_fu_424_p1, tmp_340_cast_fu_438_p1, ap_condition_492, ap_condition_495, ap_condition_263)
    begin
        if ((ap_const_boolean_1 = ap_condition_263)) then
            if ((grp_fu_226_p2 = ap_const_lv1_1)) then 
                dst_val_address0 <= tmp_340_cast_fu_438_p1(11 - 1 downto 0);
            elsif (((grp_fu_226_p2 = ap_const_lv1_0) and (grp_fu_231_p2 = ap_const_lv1_1))) then 
                dst_val_address0 <= tmp_342_cast_fu_424_p1(11 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_495)) then 
                dst_val_address0 <= tmp_344_cast_fu_399_p1(11 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_492)) then 
                dst_val_address0 <= tmp_345_cast_fu_374_p1(11 - 1 downto 0);
            else 
                dst_val_address0 <= "XXXXXXXXXXX";
            end if;
        else 
            dst_val_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    dst_val_address1_assign_proc : process(tmp_1019_i_reg_618, tmp_1026_i_reg_622, tmp_347_cast_fu_470_p1, tmp_346_cast_fu_489_p1, tmp_343_cast_fu_522_p1, tmp_341_cast_fu_541_p1, ap_condition_503, ap_condition_506, ap_condition_501)
    begin
        if ((ap_const_boolean_1 = ap_condition_501)) then
            if ((tmp_1019_i_reg_618 = ap_const_lv1_1)) then 
                dst_val_address1 <= tmp_341_cast_fu_541_p1(11 - 1 downto 0);
            elsif (((tmp_1019_i_reg_618 = ap_const_lv1_0) and (tmp_1026_i_reg_622 = ap_const_lv1_1))) then 
                dst_val_address1 <= tmp_343_cast_fu_522_p1(11 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_506)) then 
                dst_val_address1 <= tmp_346_cast_fu_489_p1(11 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_503)) then 
                dst_val_address1 <= tmp_347_cast_fu_470_p1(11 - 1 downto 0);
            else 
                dst_val_address1 <= "XXXXXXXXXXX";
            end if;
        else 
            dst_val_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    dst_val_ce0_assign_proc : process(exitcond_i_fu_288_p2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, icmp_fu_322_p2, grp_fu_226_p2, grp_fu_231_p2, grp_fu_236_p2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_i_fu_288_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (grp_fu_226_p2 = ap_const_lv1_1) and (icmp_fu_322_p2 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_i_fu_288_p2 = ap_const_lv1_0) and (grp_fu_226_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (grp_fu_231_p2 = ap_const_lv1_1) and (icmp_fu_322_p2 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_i_fu_288_p2 = ap_const_lv1_0) and (grp_fu_236_p2 = ap_const_lv1_0) and (grp_fu_231_p2 = ap_const_lv1_0) and (grp_fu_226_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_fu_322_p2 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_i_fu_288_p2 = ap_const_lv1_0) and (grp_fu_231_p2 = ap_const_lv1_0) and (grp_fu_226_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (grp_fu_236_p2 = ap_const_lv1_1) and (icmp_fu_322_p2 = ap_const_lv1_1)))) then 
            dst_val_ce0 <= ap_const_logic_1;
        else 
            dst_val_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dst_val_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_reg_614, tmp_1019_i_reg_618, tmp_1026_i_reg_622, tmp_1034_i_reg_626, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_reg_614 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (tmp_1019_i_reg_618 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_1019_i_reg_618 = ap_const_lv1_0) and (icmp_reg_614 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (tmp_1026_i_reg_622 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_1026_i_reg_622 = ap_const_lv1_0) and (tmp_1019_i_reg_618 = ap_const_lv1_0) and (icmp_reg_614 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (tmp_1034_i_reg_626 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_1034_i_reg_626 = ap_const_lv1_0) and (tmp_1026_i_reg_622 = ap_const_lv1_0) and (tmp_1019_i_reg_618 = ap_const_lv1_0) and (icmp_reg_614 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then 
            dst_val_ce1 <= ap_const_logic_1;
        else 
            dst_val_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dst_val_d0_assign_proc : process(tmp_reg_574, grp_fu_226_p2, grp_fu_231_p2, length_1_fu_94, ap_condition_492, ap_condition_495, ap_condition_263)
    begin
        if ((ap_const_boolean_1 = ap_condition_263)) then
            if ((grp_fu_226_p2 = ap_const_lv1_1)) then 
                dst_val_d0 <= tmp_reg_574;
            elsif (((grp_fu_226_p2 = ap_const_lv1_0) and (grp_fu_231_p2 = ap_const_lv1_1))) then 
                dst_val_d0 <= length_1_fu_94(15 downto 8);
            elsif ((ap_const_boolean_1 = ap_condition_495)) then 
                dst_val_d0 <= length_1_fu_94(23 downto 16);
            elsif ((ap_const_boolean_1 = ap_condition_492)) then 
                dst_val_d0 <= length_1_fu_94(31 downto 24);
            else 
                dst_val_d0 <= "XXXXXXXX";
            end if;
        else 
            dst_val_d0 <= "XXXXXXXX";
        end if; 
    end process;


    dst_val_d1_assign_proc : process(tmp_1019_i_reg_618, tmp_1026_i_reg_622, y_1_fu_86, x_1_fu_90, tmp_1650_fu_475_p1, tmp_1649_fu_527_p1, ap_condition_503, ap_condition_506, ap_condition_501)
    begin
        if ((ap_const_boolean_1 = ap_condition_501)) then
            if ((tmp_1019_i_reg_618 = ap_const_lv1_1)) then 
                dst_val_d1 <= tmp_1649_fu_527_p1;
            elsif (((tmp_1019_i_reg_618 = ap_const_lv1_0) and (tmp_1026_i_reg_622 = ap_const_lv1_1))) then 
                dst_val_d1 <= x_1_fu_90(15 downto 8);
            elsif ((ap_const_boolean_1 = ap_condition_506)) then 
                dst_val_d1 <= tmp_1650_fu_475_p1;
            elsif ((ap_const_boolean_1 = ap_condition_503)) then 
                dst_val_d1 <= y_1_fu_86(15 downto 8);
            else 
                dst_val_d1 <= "XXXXXXXX";
            end if;
        else 
            dst_val_d1 <= "XXXXXXXX";
        end if; 
    end process;


    dst_val_we0_assign_proc : process(exitcond_i_fu_288_p2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, icmp_fu_322_p2, grp_fu_226_p2, grp_fu_231_p2, grp_fu_236_p2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_i_fu_288_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (grp_fu_226_p2 = ap_const_lv1_1) and (icmp_fu_322_p2 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_i_fu_288_p2 = ap_const_lv1_0) and (grp_fu_226_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (grp_fu_231_p2 = ap_const_lv1_1) and (icmp_fu_322_p2 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_i_fu_288_p2 = ap_const_lv1_0) and (grp_fu_236_p2 = ap_const_lv1_0) and (grp_fu_231_p2 = ap_const_lv1_0) and (grp_fu_226_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_fu_322_p2 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_i_fu_288_p2 = ap_const_lv1_0) and (grp_fu_231_p2 = ap_const_lv1_0) and (grp_fu_226_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (grp_fu_236_p2 = ap_const_lv1_1) and (icmp_fu_322_p2 = ap_const_lv1_1)))) then 
            dst_val_we0 <= ap_const_logic_1;
        else 
            dst_val_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dst_val_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_reg_614, tmp_1019_i_reg_618, tmp_1026_i_reg_622, tmp_1034_i_reg_626, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_reg_614 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (tmp_1019_i_reg_618 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_1019_i_reg_618 = ap_const_lv1_0) and (icmp_reg_614 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (tmp_1026_i_reg_622 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_1026_i_reg_622 = ap_const_lv1_0) and (tmp_1019_i_reg_618 = ap_const_lv1_0) and (icmp_reg_614 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (tmp_1034_i_reg_626 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_1034_i_reg_626 = ap_const_lv1_0) and (tmp_1026_i_reg_622 = ap_const_lv1_0) and (tmp_1019_i_reg_618 = ap_const_lv1_0) and (icmp_reg_614 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then 
            dst_val_we1 <= ap_const_logic_1;
        else 
            dst_val_we1 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond4_i_fu_248_p2 <= "1" when (i_i_reg_203 = ap_const_lv5_10) else "0";
    exitcond_i_fu_288_p2 <= "1" when (ap_phi_mux_j_i_phi_fu_218_p4 = ap_const_lv8_80) else "0";
    grp_fu_226_p2 <= "1" when (byte_fu_300_p1 = ap_const_lv2_0) else "0";
    grp_fu_231_p2 <= "1" when (byte_fu_300_p1 = ap_const_lv2_1) else "0";
    grp_fu_236_p2 <= "1" when (byte_fu_300_p1 = ap_const_lv2_2) else "0";
    i_fu_254_p2 <= std_logic_vector(unsigned(i_i_reg_203) + unsigned(ap_const_lv5_1));
    icmp_fu_322_p2 <= "1" when (tmp_1648_fu_312_p4 = ap_const_lv9_0) else "0";
    idx_fu_307_p2 <= std_logic_vector(unsigned(tmp_i_reg_588) + unsigned(j_cast3_i_fu_284_p1));
    j_cast3_i_fu_284_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_j_i_phi_fu_218_p4),11));
    j_fu_294_p2 <= std_logic_vector(unsigned(ap_phi_mux_j_i_phi_fu_218_p4) + unsigned(ap_const_lv8_1));

    keypoints_length_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, keypoints_length_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            keypoints_length_blk_n <= keypoints_length_empty_n;
        else 
            keypoints_length_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    keypoints_length_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, keypoints_length_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (keypoints_length_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            keypoints_length_read <= ap_const_logic_1;
        else 
            keypoints_length_read <= ap_const_logic_0;
        end if; 
    end process;

    keypoints_val_pt_x_address0 <= tmp_1023_i_fu_349_p1(9 - 1 downto 0);

    keypoints_val_pt_x_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            keypoints_val_pt_x_ce0 <= ap_const_logic_1;
        else 
            keypoints_val_pt_x_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    keypoints_val_pt_y_address0 <= tmp_1041_i_fu_344_p1(9 - 1 downto 0);

    keypoints_val_pt_y_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            keypoints_val_pt_y_ce0 <= ap_const_logic_1;
        else 
            keypoints_val_pt_y_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_1018_i_fu_328_p2 <= std_logic_vector(unsigned(idx_fu_307_p2) + unsigned(ap_const_lv11_7FC));
    tmp_1021_i_cast_fu_429_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_j_i_phi_fu_218_p4),13));
    tmp_1023_i_fu_349_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_741_i_fu_334_p4),64));
    tmp_1025_i_cast_fu_532_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_i_reg_214),13));
    tmp_1029_i_cast_fu_415_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_j_i_phi_fu_218_p4),13));
    tmp_1033_i_cast_fu_513_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_i_reg_214),13));
    tmp_1037_i_cast_fu_390_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_j_i_phi_fu_218_p4),13));
    tmp_1040_i_cast_fu_365_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_j_i_phi_fu_218_p4),13));
    tmp_1041_i_fu_344_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_741_i_fu_334_p4),64));
    tmp_1043_i_cast_fu_480_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_i_reg_214),13));
    tmp_1046_i_cast_fu_461_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_i_reg_214),13));
    tmp_1646_fu_260_p1 <= i_i_reg_203(4 - 1 downto 0);
    tmp_1648_fu_312_p4 <= idx_fu_307_p2(10 downto 2);
    tmp_1649_fu_527_p1 <= keypoints_val_pt_x_q0(8 - 1 downto 0);
    tmp_1650_fu_475_p1 <= keypoints_val_pt_y_q0(8 - 1 downto 0);
    tmp_338_fu_272_p3 <= (i_i_reg_203 & ap_const_lv7_0);
    tmp_339_cast_fu_280_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_338_fu_272_p3),13));
    tmp_340_cast_fu_438_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_340_fu_433_p2),64));
    tmp_340_fu_433_p2 <= std_logic_vector(unsigned(tmp_339_cast_reg_593) + unsigned(tmp_1021_i_cast_fu_429_p1));
    tmp_341_cast_fu_541_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_341_fu_536_p2),64));
    tmp_341_fu_536_p2 <= std_logic_vector(unsigned(tmp_339_cast_reg_593) + unsigned(tmp_1025_i_cast_fu_532_p1));
    tmp_342_cast_fu_424_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_342_fu_419_p2),64));
    tmp_342_fu_419_p2 <= std_logic_vector(unsigned(tmp_1029_i_cast_fu_415_p1) + unsigned(tmp_339_cast_reg_593));
    tmp_343_cast_fu_522_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_343_fu_517_p2),64));
    tmp_343_fu_517_p2 <= std_logic_vector(unsigned(tmp_339_cast_reg_593) + unsigned(tmp_1033_i_cast_fu_513_p1));
    tmp_344_cast_fu_399_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_344_fu_394_p2),64));
    tmp_344_fu_394_p2 <= std_logic_vector(unsigned(tmp_1037_i_cast_fu_390_p1) + unsigned(tmp_339_cast_reg_593));
    tmp_345_cast_fu_374_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_345_fu_369_p2),64));
    tmp_345_fu_369_p2 <= std_logic_vector(unsigned(tmp_339_cast_reg_593) + unsigned(tmp_1040_i_cast_fu_365_p1));
    tmp_346_cast_fu_489_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_346_fu_484_p2),64));
    tmp_346_fu_484_p2 <= std_logic_vector(unsigned(tmp_339_cast_reg_593) + unsigned(tmp_1043_i_cast_fu_480_p1));
    tmp_347_cast_fu_470_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_347_fu_465_p2),64));
    tmp_347_fu_465_p2 <= std_logic_vector(unsigned(tmp_339_cast_reg_593) + unsigned(tmp_1046_i_cast_fu_461_p1));
    tmp_741_i_fu_334_p4 <= tmp_1018_i_fu_328_p2(10 downto 2);
    tmp_fu_244_p1 <= keypoints_length_dout(8 - 1 downto 0);
    tmp_i_fu_264_p3 <= (tmp_1646_fu_260_p1 & ap_const_lv7_0);
end behav;
