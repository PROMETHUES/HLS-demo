// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _scaled_fixed2ieee_HH_
#define _scaled_fixed2ieee_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "scaled_fixed2ieeebck.h"
#include "scaled_fixed2ieee_c.h"

namespace ap_rtl {

struct scaled_fixed2ieee : public sc_module {
    // Port declarations 9
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<29> > in_V;
    sc_in< sc_lv<9> > prescale;
    sc_out< sc_lv<32> > ap_return;


    // Module declarations
    scaled_fixed2ieee(sc_module_name name);
    SC_HAS_PROCESS(scaled_fixed2ieee);

    ~scaled_fixed2ieee();

    sc_trace_file* mVcdFile;

    scaled_fixed2ieeebck* out_bits_V_U;
    scaled_fixed2ieee_c* c_U;
    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<2> > i_fu_277_p2;
    sc_signal< sc_lv<2> > i_reg_486;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<64> > tmp_4_fu_283_p1;
    sc_signal< sc_lv<64> > tmp_4_reg_491;
    sc_signal< sc_lv<1> > exitcond_fu_271_p2;
    sc_signal< sc_lv<1> > tmp_119_fu_307_p3;
    sc_signal< sc_lv<1> > tmp_119_reg_501;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<2> > i_1_fu_315_p2;
    sc_signal< sc_lv<2> > i_1_reg_505;
    sc_signal< sc_lv<32> > shift_2_fu_326_p2;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<29> > in_shift_V_fu_379_p3;
    sc_signal< sc_lv<1> > out_bits_V_address0;
    sc_signal< sc_logic > out_bits_V_ce0;
    sc_signal< sc_logic > out_bits_V_we0;
    sc_signal< sc_lv<32> > out_bits_V_d0;
    sc_signal< sc_lv<32> > out_bits_V_q0;
    sc_signal< sc_lv<1> > out_bits_V_address1;
    sc_signal< sc_logic > out_bits_V_ce1;
    sc_signal< sc_logic > out_bits_V_we1;
    sc_signal< sc_lv<32> > out_bits_V_d1;
    sc_signal< sc_lv<1> > c_address0;
    sc_signal< sc_logic > c_ce0;
    sc_signal< sc_logic > c_we0;
    sc_signal< sc_lv<32> > c_d0;
    sc_signal< sc_lv<32> > c_q0;
    sc_signal< sc_lv<2> > i1_reg_151;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<29> > in_shift_reg_162;
    sc_signal< sc_lv<1> > tmp_11_fu_388_p2;
    sc_signal< sc_lv<32> > shift_reg_172;
    sc_signal< sc_lv<2> > i2_reg_184;
    sc_signal< sc_lv<29> > ap_phi_mux_p_Val2_in_phi_fu_198_p4;
    sc_signal< sc_lv<29> > p_Val2_in_reg_195;
    sc_signal< sc_lv<32> > ap_phi_mux_shift_1_phi_fu_208_p4;
    sc_signal< sc_lv<32> > shift_1_reg_205;
    sc_signal< sc_lv<64> > tmp_6_fu_321_p1;
    sc_signal< sc_lv<16> > p_Result_5_fu_215_p4;
    sc_signal< sc_lv<17> > tmp_fu_225_p3;
    sc_signal< sc_lv<13> > tmp_118_fu_246_p1;
    sc_signal< sc_lv<14> > tmp_60_fu_250_p3;
    sc_signal< sc_lv<32> > p_Result_s_fu_288_p4;
    sc_signal< sc_lv<1> > isNeg_fu_333_p3;
    sc_signal< sc_lv<32> > tmp_7_fu_341_p2;
    sc_signal< sc_lv<32> > tmp_8_fu_355_p1;
    sc_signal< sc_lv<32> > sh_assign_1_fu_347_p3;
    sc_signal< sc_lv<32> > tmp_10_fu_365_p2;
    sc_signal< sc_lv<32> > tmp_9_fu_359_p2;
    sc_signal< sc_lv<29> > tmp_121_fu_371_p1;
    sc_signal< sc_lv<29> > tmp_122_fu_375_p1;
    sc_signal< sc_lv<9> > tmp_12_fu_394_p2;
    sc_signal< sc_lv<32> > tmp_12_cast_fu_399_p1;
    sc_signal< sc_lv<32> > newexp_fu_403_p2;
    sc_signal< sc_lv<1> > tmp_124_fu_409_p3;
    sc_signal< sc_lv<1> > tmp_14_fu_417_p2;
    sc_signal< sc_lv<1> > or_cond_fu_422_p2;
    sc_signal< sc_lv<23> > phitmp5_fu_432_p4;
    sc_signal< sc_lv<8> > tmp_125_fu_428_p1;
    sc_signal< sc_lv<8> > out_exp_V_fu_450_p3;
    sc_signal< sc_lv<23> > p_Val2_36_fu_442_p3;
    sc_signal< sc_lv<32> > p_Result_32_fu_458_p4;
    sc_signal< sc_lv<32> > result_write_assign_fu_468_p1;
    sc_signal< sc_lv<32> > ap_return_preg;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_fsm_state1;
    static const sc_lv<5> ap_ST_fsm_state2;
    static const sc_lv<5> ap_ST_fsm_state3;
    static const sc_lv<5> ap_ST_fsm_state4;
    static const sc_lv<5> ap_ST_fsm_state5;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_1C;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<9> ap_const_lv9_7F;
    static const sc_lv<29> ap_const_lv29_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_1B;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_phi_mux_p_Val2_in_phi_fu_198_p4();
    void thread_ap_phi_mux_shift_1_phi_fu_208_p4();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_c_address0();
    void thread_c_ce0();
    void thread_c_d0();
    void thread_c_we0();
    void thread_exitcond_fu_271_p2();
    void thread_i_1_fu_315_p2();
    void thread_i_fu_277_p2();
    void thread_in_shift_V_fu_379_p3();
    void thread_isNeg_fu_333_p3();
    void thread_newexp_fu_403_p2();
    void thread_or_cond_fu_422_p2();
    void thread_out_bits_V_address0();
    void thread_out_bits_V_address1();
    void thread_out_bits_V_ce0();
    void thread_out_bits_V_ce1();
    void thread_out_bits_V_d0();
    void thread_out_bits_V_d1();
    void thread_out_bits_V_we0();
    void thread_out_bits_V_we1();
    void thread_out_exp_V_fu_450_p3();
    void thread_p_Result_32_fu_458_p4();
    void thread_p_Result_5_fu_215_p4();
    void thread_p_Result_s_fu_288_p4();
    void thread_p_Val2_36_fu_442_p3();
    void thread_phitmp5_fu_432_p4();
    void thread_result_write_assign_fu_468_p1();
    void thread_sh_assign_1_fu_347_p3();
    void thread_shift_2_fu_326_p2();
    void thread_tmp_10_fu_365_p2();
    void thread_tmp_118_fu_246_p1();
    void thread_tmp_119_fu_307_p3();
    void thread_tmp_11_fu_388_p2();
    void thread_tmp_121_fu_371_p1();
    void thread_tmp_122_fu_375_p1();
    void thread_tmp_124_fu_409_p3();
    void thread_tmp_125_fu_428_p1();
    void thread_tmp_12_cast_fu_399_p1();
    void thread_tmp_12_fu_394_p2();
    void thread_tmp_14_fu_417_p2();
    void thread_tmp_4_fu_283_p1();
    void thread_tmp_60_fu_250_p3();
    void thread_tmp_6_fu_321_p1();
    void thread_tmp_7_fu_341_p2();
    void thread_tmp_8_fu_355_p1();
    void thread_tmp_9_fu_359_p2();
    void thread_tmp_fu_225_p3();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
