// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "compute.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic compute::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic compute::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<5> compute::ap_ST_fsm_state1 = "1";
const sc_lv<5> compute::ap_ST_fsm_state2 = "10";
const sc_lv<5> compute::ap_ST_fsm_state3 = "100";
const sc_lv<5> compute::ap_ST_fsm_state4 = "1000";
const sc_lv<5> compute::ap_ST_fsm_state5 = "10000";
const sc_lv<32> compute::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> compute::ap_const_lv32_4 = "100";
const sc_lv<32> compute::ap_const_lv32_1 = "1";
const sc_lv<1> compute::ap_const_lv1_0 = "0";
const sc_lv<1> compute::ap_const_lv1_1 = "1";
const sc_lv<32> compute::ap_const_lv32_3 = "11";
const sc_lv<2> compute::ap_const_lv2_0 = "00";
const sc_lv<32> compute::ap_const_lv32_2 = "10";
const bool compute::ap_const_boolean_0 = false;
const sc_lv<2> compute::ap_const_lv2_2 = "10";
const sc_lv<2> compute::ap_const_lv2_1 = "1";
const sc_lv<32> compute::ap_const_lv32_3F = "111111";
const sc_lv<32> compute::ap_const_lv32_34 = "110100";
const sc_lv<32> compute::ap_const_lv32_3E = "111110";
const sc_lv<63> compute::ap_const_lv63_0 = "000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<54> compute::ap_const_lv54_0 = "000000000000000000000000000000000000000000000000000000";
const sc_lv<12> compute::ap_const_lv12_433 = "10000110011";
const sc_lv<12> compute::ap_const_lv12_10 = "10000";
const sc_lv<12> compute::ap_const_lv12_FF0 = "111111110000";
const sc_lv<12> compute::ap_const_lv12_36 = "110110";
const sc_lv<32> compute::ap_const_lv32_5 = "101";
const sc_lv<32> compute::ap_const_lv32_B = "1011";
const sc_lv<7> compute::ap_const_lv7_0 = "0000000";
const sc_lv<32> compute::ap_const_lv32_FFFFFFFF = "11111111111111111111111111111111";
const bool compute::ap_const_boolean_1 = true;

compute::compute(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_detect_fu_268 = new detect("grp_detect_fu_268");
    grp_detect_fu_268->ap_clk(ap_clk);
    grp_detect_fu_268->ap_rst(ap_rst);
    grp_detect_fu_268->ap_start(grp_detect_fu_268_ap_start);
    grp_detect_fu_268->ap_done(grp_detect_fu_268_ap_done);
    grp_detect_fu_268->ap_idle(grp_detect_fu_268_ap_idle);
    grp_detect_fu_268->ap_ready(grp_detect_fu_268_ap_ready);
    grp_detect_fu_268->src_val_address0(grp_detect_fu_268_src_val_address0);
    grp_detect_fu_268->src_val_ce0(grp_detect_fu_268_src_val_ce0);
    grp_detect_fu_268->src_val_q0(grp_detect_fu_268_src_val_q0);
    grp_detect_fu_268->src_rows_read(grp_detect_fu_268_src_rows_read);
    grp_detect_fu_268->src_cols_read(grp_detect_fu_268_src_cols_read);
    grp_detect_fu_268->keypoints_val_pt_x_address0(grp_detect_fu_268_keypoints_val_pt_x_address0);
    grp_detect_fu_268->keypoints_val_pt_x_ce0(grp_detect_fu_268_keypoints_val_pt_x_ce0);
    grp_detect_fu_268->keypoints_val_pt_x_we0(grp_detect_fu_268_keypoints_val_pt_x_we0);
    grp_detect_fu_268->keypoints_val_pt_x_d0(grp_detect_fu_268_keypoints_val_pt_x_d0);
    grp_detect_fu_268->keypoints_val_pt_x_q0(grp_detect_fu_268_keypoints_val_pt_x_q0);
    grp_detect_fu_268->keypoints_val_pt_y_address0(grp_detect_fu_268_keypoints_val_pt_y_address0);
    grp_detect_fu_268->keypoints_val_pt_y_ce0(grp_detect_fu_268_keypoints_val_pt_y_ce0);
    grp_detect_fu_268->keypoints_val_pt_y_we0(grp_detect_fu_268_keypoints_val_pt_y_we0);
    grp_detect_fu_268->keypoints_val_pt_y_d0(grp_detect_fu_268_keypoints_val_pt_y_d0);
    grp_detect_fu_268->keypoints_val_pt_y_q0(grp_detect_fu_268_keypoints_val_pt_y_q0);
    grp_detect_fu_268->keypoints_val_angle_V_address0(grp_detect_fu_268_keypoints_val_angle_V_address0);
    grp_detect_fu_268->keypoints_val_angle_V_ce0(grp_detect_fu_268_keypoints_val_angle_V_ce0);
    grp_detect_fu_268->keypoints_val_angle_V_we0(grp_detect_fu_268_keypoints_val_angle_V_we0);
    grp_detect_fu_268->keypoints_val_angle_V_d0(grp_detect_fu_268_keypoints_val_angle_V_d0);
    grp_detect_fu_268->keypoints_val_angle_V_q0(grp_detect_fu_268_keypoints_val_angle_V_q0);
    grp_detect_fu_268->keypoints_val_sigma_V_address0(grp_detect_fu_268_keypoints_val_sigma_V_address0);
    grp_detect_fu_268->keypoints_val_sigma_V_ce0(grp_detect_fu_268_keypoints_val_sigma_V_ce0);
    grp_detect_fu_268->keypoints_val_sigma_V_we0(grp_detect_fu_268_keypoints_val_sigma_V_we0);
    grp_detect_fu_268->keypoints_val_sigma_V_d0(grp_detect_fu_268_keypoints_val_sigma_V_d0);
    grp_detect_fu_268->keypoints_val_sigma_V_q0(grp_detect_fu_268_keypoints_val_sigma_V_q0);
    grp_detect_fu_268->keypoints_val_octave_address0(grp_detect_fu_268_keypoints_val_octave_address0);
    grp_detect_fu_268->keypoints_val_octave_ce0(grp_detect_fu_268_keypoints_val_octave_ce0);
    grp_detect_fu_268->keypoints_val_octave_we0(grp_detect_fu_268_keypoints_val_octave_we0);
    grp_detect_fu_268->keypoints_val_octave_d0(grp_detect_fu_268_keypoints_val_octave_d0);
    grp_detect_fu_268->keypoints_val_octave_q0(grp_detect_fu_268_keypoints_val_octave_q0);
    grp_detect_fu_268->keypoints_val_layer_address0(grp_detect_fu_268_keypoints_val_layer_address0);
    grp_detect_fu_268->keypoints_val_layer_ce0(grp_detect_fu_268_keypoints_val_layer_ce0);
    grp_detect_fu_268->keypoints_val_layer_we0(grp_detect_fu_268_keypoints_val_layer_we0);
    grp_detect_fu_268->keypoints_val_layer_d0(grp_detect_fu_268_keypoints_val_layer_d0);
    grp_detect_fu_268->keypoints_val_layer_q0(grp_detect_fu_268_keypoints_val_layer_q0);
    grp_detect_fu_268->descriptors_val_val_address0(grp_detect_fu_268_descriptors_val_val_address0);
    grp_detect_fu_268->descriptors_val_val_ce0(grp_detect_fu_268_descriptors_val_val_ce0);
    grp_detect_fu_268->descriptors_val_val_we0(grp_detect_fu_268_descriptors_val_val_we0);
    grp_detect_fu_268->descriptors_val_val_d0(grp_detect_fu_268_descriptors_val_val_d0);
    grp_detect_fu_268->ap_return_0(grp_detect_fu_268_ap_return_0);
    grp_detect_fu_268->ap_return_1(grp_detect_fu_268_ap_return_1);
    grp_match_511_s_fu_340 = new match_511_s("grp_match_511_s_fu_340");
    grp_match_511_s_fu_340->ap_clk(ap_clk);
    grp_match_511_s_fu_340->ap_rst(ap_rst);
    grp_match_511_s_fu_340->ap_start(grp_match_511_s_fu_340_ap_start);
    grp_match_511_s_fu_340->ap_done(grp_match_511_s_fu_340_ap_done);
    grp_match_511_s_fu_340->ap_idle(grp_match_511_s_fu_340_ap_idle);
    grp_match_511_s_fu_340->ap_ready(grp_match_511_s_fu_340_ap_ready);
    grp_match_511_s_fu_340->descriptors0_val_val_address0(grp_match_511_s_fu_340_descriptors0_val_val_address0);
    grp_match_511_s_fu_340->descriptors0_val_val_ce0(grp_match_511_s_fu_340_descriptors0_val_val_ce0);
    grp_match_511_s_fu_340->descriptors0_val_val_q0(descriptors0_val_val_q0);
    grp_match_511_s_fu_340->descriptors0_length_read(descriptors0_length_s_fu_176);
    grp_match_511_s_fu_340->descriptors1_val_val_address0(grp_match_511_s_fu_340_descriptors1_val_val_address0);
    grp_match_511_s_fu_340->descriptors1_val_val_ce0(grp_match_511_s_fu_340_descriptors1_val_val_ce0);
    grp_match_511_s_fu_340->descriptors1_val_val_q0(descriptors1_val_val_q0);
    grp_match_511_s_fu_340->descriptors1_length_read(descriptors1_length_s_fu_172);
    grp_match_511_s_fu_340->thresh_V(newSel17_reg_813);
    grp_match_511_s_fu_340->matches_val_idx0_address0(grp_match_511_s_fu_340_matches_val_idx0_address0);
    grp_match_511_s_fu_340->matches_val_idx0_ce0(grp_match_511_s_fu_340_matches_val_idx0_ce0);
    grp_match_511_s_fu_340->matches_val_idx0_we0(grp_match_511_s_fu_340_matches_val_idx0_we0);
    grp_match_511_s_fu_340->matches_val_idx0_d0(grp_match_511_s_fu_340_matches_val_idx0_d0);
    grp_match_511_s_fu_340->matches_val_idx1_address0(grp_match_511_s_fu_340_matches_val_idx1_address0);
    grp_match_511_s_fu_340->matches_val_idx1_ce0(grp_match_511_s_fu_340_matches_val_idx1_ce0);
    grp_match_511_s_fu_340->matches_val_idx1_we0(grp_match_511_s_fu_340_matches_val_idx1_we0);
    grp_match_511_s_fu_340->matches_val_idx1_d0(grp_match_511_s_fu_340_matches_val_idx1_d0);
    grp_match_511_s_fu_340->matches_length_read(matches_length_read_reg_764);
    grp_match_511_s_fu_340->ap_return(grp_match_511_s_fu_340_ap_return);
    SIFT2_Core_fpext_hbi_U1095 = new SIFT2_Core_fpext_hbi<1,1,32,64>("SIFT2_Core_fpext_hbi_U1095");
    SIFT2_Core_fpext_hbi_U1095->din0(thresh_read_reg_759);
    SIFT2_Core_fpext_hbi_U1095->dout(d_assign_fu_357_p1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_F2_fu_495_p2);
    sensitive << ( tmp_i_fu_468_p1 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( src0_rows_empty_n );
    sensitive << ( src0_cols_empty_n );
    sensitive << ( src1_rows_empty_n );
    sensitive << ( src1_cols_empty_n );
    sensitive << ( thresh_empty_n );
    sensitive << ( descriptors0_length_empty_n );
    sensitive << ( descriptors1_length_empty_n );
    sensitive << ( matches_length_empty_n );

    SC_METHOD(thread_ap_block_state3_on_subcall_done);
    sensitive << ( tmp_422_i_reg_777 );
    sensitive << ( grp_detect_fu_268_ap_done );

    SC_METHOD(thread_ap_block_state5);
    sensitive << ( keypoints0_length_out_full_n );
    sensitive << ( keypoints1_length_out_full_n );
    sensitive << ( matches_length_out_full_n );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( keypoints0_length_out_full_n );
    sensitive << ( keypoints1_length_out_full_n );
    sensitive << ( matches_length_out_full_n );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_match_511_s_fu_340_ap_done );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( keypoints0_length_out_full_n );
    sensitive << ( keypoints1_length_out_full_n );
    sensitive << ( matches_length_out_full_n );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_match_511_s_fu_340_ap_done );

    SC_METHOD(thread_descriptors0_length_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( descriptors0_length_empty_n );

    SC_METHOD(thread_descriptors0_length_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( src0_rows_empty_n );
    sensitive << ( src0_cols_empty_n );
    sensitive << ( src1_rows_empty_n );
    sensitive << ( src1_cols_empty_n );
    sensitive << ( thresh_empty_n );
    sensitive << ( descriptors0_length_empty_n );
    sensitive << ( descriptors1_length_empty_n );
    sensitive << ( matches_length_empty_n );

    SC_METHOD(thread_descriptors0_val_val_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_422_i_reg_777 );
    sensitive << ( grp_detect_fu_268_descriptors_val_val_address0 );
    sensitive << ( grp_match_511_s_fu_340_descriptors0_val_val_address0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_descriptors0_val_val_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_422_i_reg_777 );
    sensitive << ( grp_detect_fu_268_descriptors_val_val_ce0 );
    sensitive << ( grp_match_511_s_fu_340_descriptors0_val_val_ce0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_descriptors0_val_val_d0);
    sensitive << ( tmp_422_i_reg_777 );
    sensitive << ( grp_detect_fu_268_descriptors_val_val_d0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_descriptors0_val_val_we0);
    sensitive << ( tmp_422_i_reg_777 );
    sensitive << ( grp_detect_fu_268_descriptors_val_val_we0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_descriptors1_length_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( descriptors1_length_empty_n );

    SC_METHOD(thread_descriptors1_length_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( src0_rows_empty_n );
    sensitive << ( src0_cols_empty_n );
    sensitive << ( src1_rows_empty_n );
    sensitive << ( src1_cols_empty_n );
    sensitive << ( thresh_empty_n );
    sensitive << ( descriptors0_length_empty_n );
    sensitive << ( descriptors1_length_empty_n );
    sensitive << ( matches_length_empty_n );

    SC_METHOD(thread_descriptors1_val_val_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_422_i_reg_777 );
    sensitive << ( grp_detect_fu_268_descriptors_val_val_address0 );
    sensitive << ( grp_match_511_s_fu_340_descriptors1_val_val_address0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_descriptors1_val_val_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_422_i_reg_777 );
    sensitive << ( grp_detect_fu_268_descriptors_val_val_ce0 );
    sensitive << ( grp_match_511_s_fu_340_descriptors1_val_val_ce0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_descriptors1_val_val_d0);
    sensitive << ( tmp_422_i_reg_777 );
    sensitive << ( grp_detect_fu_268_descriptors_val_val_d0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_descriptors1_val_val_we0);
    sensitive << ( tmp_422_i_reg_777 );
    sensitive << ( grp_detect_fu_268_descriptors_val_val_we0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_exitcond_i_fu_386_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_i_reg_257 );

    SC_METHOD(thread_extLd1_fu_372_p1);
    sensitive << ( descriptors1_length_dout );

    SC_METHOD(thread_extLd_fu_368_p1);
    sensitive << ( descriptors0_length_dout );

    SC_METHOD(thread_grp_detect_fu_268_ap_start);
    sensitive << ( grp_detect_fu_268_ap_start_reg );

    SC_METHOD(thread_grp_detect_fu_268_keypoints_val_angle_V_q0);
    sensitive << ( keypoints0_val_angle_V_q0 );
    sensitive << ( keypoints1_val_angle_V_q0 );
    sensitive << ( tmp_422_i_reg_777 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_grp_detect_fu_268_keypoints_val_layer_q0);
    sensitive << ( keypoints0_val_layer_q0 );
    sensitive << ( keypoints1_val_layer_q0 );
    sensitive << ( tmp_422_i_reg_777 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_grp_detect_fu_268_keypoints_val_octave_q0);
    sensitive << ( keypoints0_val_octave_q0 );
    sensitive << ( keypoints1_val_octave_q0 );
    sensitive << ( tmp_422_i_reg_777 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_grp_detect_fu_268_keypoints_val_pt_x_q0);
    sensitive << ( keypoints0_val_pt_x_q0 );
    sensitive << ( keypoints1_val_pt_x_q0 );
    sensitive << ( tmp_422_i_reg_777 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_grp_detect_fu_268_keypoints_val_pt_y_q0);
    sensitive << ( keypoints0_val_pt_y_q0 );
    sensitive << ( keypoints1_val_pt_y_q0 );
    sensitive << ( tmp_422_i_reg_777 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_grp_detect_fu_268_keypoints_val_sigma_V_q0);
    sensitive << ( keypoints0_val_sigma_V_q0 );
    sensitive << ( keypoints1_val_sigma_V_q0 );
    sensitive << ( tmp_422_i_reg_777 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_grp_detect_fu_268_src_cols_read);
    sensitive << ( src0_cols_read_reg_744 );
    sensitive << ( src1_cols_read_reg_754 );
    sensitive << ( tmp_422_i_reg_777 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_grp_detect_fu_268_src_rows_read);
    sensitive << ( src0_rows_read_reg_739 );
    sensitive << ( src1_rows_read_reg_749 );
    sensitive << ( tmp_422_i_reg_777 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_grp_detect_fu_268_src_val_q0);
    sensitive << ( src0_val_q0 );
    sensitive << ( src1_val_q0 );
    sensitive << ( tmp_422_i_reg_777 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_grp_match_511_s_fu_340_ap_start);
    sensitive << ( grp_match_511_s_fu_340_ap_start_reg );

    SC_METHOD(thread_i_fu_392_p2);
    sensitive << ( i_i_reg_257 );

    SC_METHOD(thread_icmp_fu_557_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_1117_fu_547_p4 );

    SC_METHOD(thread_ireg_V_fu_404_p1);
    sensitive << ( d_assign_fu_357_p1 );

    SC_METHOD(thread_keypoints0_length_out_blk_n);
    sensitive << ( keypoints0_length_out_full_n );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_keypoints0_length_out_din);
    sensitive << ( keypoints0_length_out_full_n );
    sensitive << ( keypoints1_length_out_full_n );
    sensitive << ( matches_length_out_full_n );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_match_511_s_fu_340_ap_done );
    sensitive << ( keypoints0_length_dc_2_fu_184 );

    SC_METHOD(thread_keypoints0_length_out_write);
    sensitive << ( keypoints0_length_out_full_n );
    sensitive << ( keypoints1_length_out_full_n );
    sensitive << ( matches_length_out_full_n );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_match_511_s_fu_340_ap_done );

    SC_METHOD(thread_keypoints0_val_angle_V_address0);
    sensitive << ( tmp_422_i_reg_777 );
    sensitive << ( grp_detect_fu_268_keypoints_val_angle_V_address0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_keypoints0_val_angle_V_ce0);
    sensitive << ( tmp_422_i_reg_777 );
    sensitive << ( grp_detect_fu_268_keypoints_val_angle_V_ce0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_keypoints0_val_angle_V_d0);
    sensitive << ( tmp_422_i_reg_777 );
    sensitive << ( grp_detect_fu_268_keypoints_val_angle_V_d0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_keypoints0_val_angle_V_we0);
    sensitive << ( tmp_422_i_reg_777 );
    sensitive << ( grp_detect_fu_268_keypoints_val_angle_V_we0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_keypoints0_val_layer_address0);
    sensitive << ( tmp_422_i_reg_777 );
    sensitive << ( grp_detect_fu_268_keypoints_val_layer_address0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_keypoints0_val_layer_ce0);
    sensitive << ( tmp_422_i_reg_777 );
    sensitive << ( grp_detect_fu_268_keypoints_val_layer_ce0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_keypoints0_val_layer_d0);
    sensitive << ( tmp_422_i_reg_777 );
    sensitive << ( grp_detect_fu_268_keypoints_val_layer_d0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_keypoints0_val_layer_we0);
    sensitive << ( tmp_422_i_reg_777 );
    sensitive << ( grp_detect_fu_268_keypoints_val_layer_we0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_keypoints0_val_octave_address0);
    sensitive << ( tmp_422_i_reg_777 );
    sensitive << ( grp_detect_fu_268_keypoints_val_octave_address0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_keypoints0_val_octave_ce0);
    sensitive << ( tmp_422_i_reg_777 );
    sensitive << ( grp_detect_fu_268_keypoints_val_octave_ce0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_keypoints0_val_octave_d0);
    sensitive << ( tmp_422_i_reg_777 );
    sensitive << ( grp_detect_fu_268_keypoints_val_octave_d0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_keypoints0_val_octave_we0);
    sensitive << ( tmp_422_i_reg_777 );
    sensitive << ( grp_detect_fu_268_keypoints_val_octave_we0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_keypoints0_val_pt_x_address0);
    sensitive << ( tmp_422_i_reg_777 );
    sensitive << ( grp_detect_fu_268_keypoints_val_pt_x_address0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_keypoints0_val_pt_x_ce0);
    sensitive << ( tmp_422_i_reg_777 );
    sensitive << ( grp_detect_fu_268_keypoints_val_pt_x_ce0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_keypoints0_val_pt_x_d0);
    sensitive << ( tmp_422_i_reg_777 );
    sensitive << ( grp_detect_fu_268_keypoints_val_pt_x_d0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_keypoints0_val_pt_x_we0);
    sensitive << ( tmp_422_i_reg_777 );
    sensitive << ( grp_detect_fu_268_keypoints_val_pt_x_we0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_keypoints0_val_pt_y_address0);
    sensitive << ( tmp_422_i_reg_777 );
    sensitive << ( grp_detect_fu_268_keypoints_val_pt_y_address0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_keypoints0_val_pt_y_ce0);
    sensitive << ( tmp_422_i_reg_777 );
    sensitive << ( grp_detect_fu_268_keypoints_val_pt_y_ce0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_keypoints0_val_pt_y_d0);
    sensitive << ( tmp_422_i_reg_777 );
    sensitive << ( grp_detect_fu_268_keypoints_val_pt_y_d0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_keypoints0_val_pt_y_we0);
    sensitive << ( tmp_422_i_reg_777 );
    sensitive << ( grp_detect_fu_268_keypoints_val_pt_y_we0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_keypoints0_val_sigma_V_address0);
    sensitive << ( tmp_422_i_reg_777 );
    sensitive << ( grp_detect_fu_268_keypoints_val_sigma_V_address0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_keypoints0_val_sigma_V_ce0);
    sensitive << ( tmp_422_i_reg_777 );
    sensitive << ( grp_detect_fu_268_keypoints_val_sigma_V_ce0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_keypoints0_val_sigma_V_d0);
    sensitive << ( tmp_422_i_reg_777 );
    sensitive << ( grp_detect_fu_268_keypoints_val_sigma_V_d0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_keypoints0_val_sigma_V_we0);
    sensitive << ( tmp_422_i_reg_777 );
    sensitive << ( grp_detect_fu_268_keypoints_val_sigma_V_we0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_keypoints1_length_out_blk_n);
    sensitive << ( keypoints1_length_out_full_n );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_keypoints1_length_out_din);
    sensitive << ( keypoints0_length_out_full_n );
    sensitive << ( keypoints1_length_out_full_n );
    sensitive << ( matches_length_out_full_n );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_match_511_s_fu_340_ap_done );
    sensitive << ( keypoints1_length_dc_2_fu_180 );

    SC_METHOD(thread_keypoints1_length_out_write);
    sensitive << ( keypoints0_length_out_full_n );
    sensitive << ( keypoints1_length_out_full_n );
    sensitive << ( matches_length_out_full_n );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_match_511_s_fu_340_ap_done );

    SC_METHOD(thread_keypoints1_val_angle_V_address0);
    sensitive << ( tmp_422_i_reg_777 );
    sensitive << ( grp_detect_fu_268_keypoints_val_angle_V_address0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_keypoints1_val_angle_V_ce0);
    sensitive << ( tmp_422_i_reg_777 );
    sensitive << ( grp_detect_fu_268_keypoints_val_angle_V_ce0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_keypoints1_val_angle_V_d0);
    sensitive << ( tmp_422_i_reg_777 );
    sensitive << ( grp_detect_fu_268_keypoints_val_angle_V_d0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_keypoints1_val_angle_V_we0);
    sensitive << ( tmp_422_i_reg_777 );
    sensitive << ( grp_detect_fu_268_keypoints_val_angle_V_we0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_keypoints1_val_layer_address0);
    sensitive << ( tmp_422_i_reg_777 );
    sensitive << ( grp_detect_fu_268_keypoints_val_layer_address0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_keypoints1_val_layer_ce0);
    sensitive << ( tmp_422_i_reg_777 );
    sensitive << ( grp_detect_fu_268_keypoints_val_layer_ce0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_keypoints1_val_layer_d0);
    sensitive << ( tmp_422_i_reg_777 );
    sensitive << ( grp_detect_fu_268_keypoints_val_layer_d0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_keypoints1_val_layer_we0);
    sensitive << ( tmp_422_i_reg_777 );
    sensitive << ( grp_detect_fu_268_keypoints_val_layer_we0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_keypoints1_val_octave_address0);
    sensitive << ( tmp_422_i_reg_777 );
    sensitive << ( grp_detect_fu_268_keypoints_val_octave_address0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_keypoints1_val_octave_ce0);
    sensitive << ( tmp_422_i_reg_777 );
    sensitive << ( grp_detect_fu_268_keypoints_val_octave_ce0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_keypoints1_val_octave_d0);
    sensitive << ( tmp_422_i_reg_777 );
    sensitive << ( grp_detect_fu_268_keypoints_val_octave_d0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_keypoints1_val_octave_we0);
    sensitive << ( tmp_422_i_reg_777 );
    sensitive << ( grp_detect_fu_268_keypoints_val_octave_we0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_keypoints1_val_pt_x_address0);
    sensitive << ( tmp_422_i_reg_777 );
    sensitive << ( grp_detect_fu_268_keypoints_val_pt_x_address0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_keypoints1_val_pt_x_ce0);
    sensitive << ( tmp_422_i_reg_777 );
    sensitive << ( grp_detect_fu_268_keypoints_val_pt_x_ce0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_keypoints1_val_pt_x_d0);
    sensitive << ( tmp_422_i_reg_777 );
    sensitive << ( grp_detect_fu_268_keypoints_val_pt_x_d0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_keypoints1_val_pt_x_we0);
    sensitive << ( tmp_422_i_reg_777 );
    sensitive << ( grp_detect_fu_268_keypoints_val_pt_x_we0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_keypoints1_val_pt_y_address0);
    sensitive << ( tmp_422_i_reg_777 );
    sensitive << ( grp_detect_fu_268_keypoints_val_pt_y_address0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_keypoints1_val_pt_y_ce0);
    sensitive << ( tmp_422_i_reg_777 );
    sensitive << ( grp_detect_fu_268_keypoints_val_pt_y_ce0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_keypoints1_val_pt_y_d0);
    sensitive << ( tmp_422_i_reg_777 );
    sensitive << ( grp_detect_fu_268_keypoints_val_pt_y_d0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_keypoints1_val_pt_y_we0);
    sensitive << ( tmp_422_i_reg_777 );
    sensitive << ( grp_detect_fu_268_keypoints_val_pt_y_we0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_keypoints1_val_sigma_V_address0);
    sensitive << ( tmp_422_i_reg_777 );
    sensitive << ( grp_detect_fu_268_keypoints_val_sigma_V_address0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_keypoints1_val_sigma_V_ce0);
    sensitive << ( tmp_422_i_reg_777 );
    sensitive << ( grp_detect_fu_268_keypoints_val_sigma_V_ce0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_keypoints1_val_sigma_V_d0);
    sensitive << ( tmp_422_i_reg_777 );
    sensitive << ( grp_detect_fu_268_keypoints_val_sigma_V_d0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_keypoints1_val_sigma_V_we0);
    sensitive << ( tmp_422_i_reg_777 );
    sensitive << ( grp_detect_fu_268_keypoints_val_sigma_V_we0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_man_V_5_fu_482_p2);
    sensitive << ( p_Result_s_fu_478_p1 );

    SC_METHOD(thread_man_V_6_fu_488_p3);
    sensitive << ( isneg_reg_781 );
    sensitive << ( p_Result_s_fu_478_p1 );
    sensitive << ( man_V_5_fu_482_p2 );

    SC_METHOD(thread_matches_length_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( matches_length_empty_n );

    SC_METHOD(thread_matches_length_out_blk_n);
    sensitive << ( matches_length_out_full_n );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_matches_length_out_din);
    sensitive << ( keypoints0_length_out_full_n );
    sensitive << ( keypoints1_length_out_full_n );
    sensitive << ( matches_length_out_full_n );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_match_511_s_fu_340_ap_done );
    sensitive << ( grp_match_511_s_fu_340_ap_return );

    SC_METHOD(thread_matches_length_out_write);
    sensitive << ( keypoints0_length_out_full_n );
    sensitive << ( keypoints1_length_out_full_n );
    sensitive << ( matches_length_out_full_n );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_match_511_s_fu_340_ap_done );

    SC_METHOD(thread_matches_length_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( src0_rows_empty_n );
    sensitive << ( src0_cols_empty_n );
    sensitive << ( src1_rows_empty_n );
    sensitive << ( src1_cols_empty_n );
    sensitive << ( thresh_empty_n );
    sensitive << ( descriptors0_length_empty_n );
    sensitive << ( descriptors1_length_empty_n );
    sensitive << ( matches_length_empty_n );

    SC_METHOD(thread_matches_val_idx0_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_match_511_s_fu_340_matches_val_idx0_address0 );

    SC_METHOD(thread_matches_val_idx0_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_match_511_s_fu_340_matches_val_idx0_ce0 );

    SC_METHOD(thread_matches_val_idx0_d0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_match_511_s_fu_340_matches_val_idx0_d0 );

    SC_METHOD(thread_matches_val_idx0_we0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_match_511_s_fu_340_matches_val_idx0_we0 );

    SC_METHOD(thread_matches_val_idx1_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_match_511_s_fu_340_matches_val_idx1_address0 );

    SC_METHOD(thread_matches_val_idx1_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_match_511_s_fu_340_matches_val_idx1_ce0 );

    SC_METHOD(thread_matches_val_idx1_d0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_match_511_s_fu_340_matches_val_idx1_d0 );

    SC_METHOD(thread_matches_val_idx1_we0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_match_511_s_fu_340_matches_val_idx1_we0 );

    SC_METHOD(thread_newSel15_fu_668_p3);
    sensitive << ( tmp_1116_fu_537_p1 );
    sensitive << ( sel_tmp9_fu_624_p2 );
    sensitive << ( tmp_435_i_fu_577_p3 );

    SC_METHOD(thread_newSel16_fu_682_p3);
    sensitive << ( or_cond_fu_662_p2 );
    sensitive << ( newSel_fu_654_p3 );
    sensitive << ( newSel15_fu_668_p3 );

    SC_METHOD(thread_newSel17_fu_696_p3);
    sensitive << ( or_cond4_fu_690_p2 );
    sensitive << ( newSel16_fu_682_p3 );

    SC_METHOD(thread_newSel_fu_654_p3);
    sensitive << ( sel_tmp22_fu_648_p2 );
    sensitive << ( tmp_436_i_fu_584_p2 );
    sensitive << ( tmp_1118_fu_573_p1 );

    SC_METHOD(thread_or_cond3_fu_676_p2);
    sensitive << ( sel_tmp9_fu_624_p2 );
    sensitive << ( sel_tmp2_fu_595_p2 );

    SC_METHOD(thread_or_cond4_fu_690_p2);
    sensitive << ( or_cond_fu_662_p2 );
    sensitive << ( or_cond3_fu_676_p2 );

    SC_METHOD(thread_or_cond_fu_662_p2);
    sensitive << ( sel_tmp22_fu_648_p2 );
    sensitive << ( sel_tmp15_fu_630_p2 );

    SC_METHOD(thread_p_Result_s_fu_478_p1);
    sensitive << ( tmp_i_204_fu_471_p3 );

    SC_METHOD(thread_sel_tmp15_fu_630_p2);
    sensitive << ( tmp_429_i_fu_541_p2 );
    sensitive << ( sel_tmp7_fu_612_p2 );

    SC_METHOD(thread_sel_tmp1_fu_590_p2);
    sensitive << ( tmp_421_i_reg_797 );

    SC_METHOD(thread_sel_tmp21_demorgan_fu_636_p2);
    sensitive << ( tmp_424_i_fu_501_p2 );
    sensitive << ( sel_tmp6_demorgan_fu_601_p2 );

    SC_METHOD(thread_sel_tmp21_fu_642_p2);
    sensitive << ( sel_tmp21_demorgan_fu_636_p2 );

    SC_METHOD(thread_sel_tmp22_fu_648_p2);
    sensitive << ( icmp_fu_557_p2 );
    sensitive << ( sel_tmp21_fu_642_p2 );

    SC_METHOD(thread_sel_tmp2_fu_595_p2);
    sensitive << ( tmp_427_i_fu_531_p2 );
    sensitive << ( sel_tmp1_fu_590_p2 );

    SC_METHOD(thread_sel_tmp6_demorgan_fu_601_p2);
    sensitive << ( tmp_421_i_reg_797 );
    sensitive << ( tmp_427_i_fu_531_p2 );

    SC_METHOD(thread_sel_tmp6_fu_606_p2);
    sensitive << ( sel_tmp6_demorgan_fu_601_p2 );

    SC_METHOD(thread_sel_tmp7_fu_612_p2);
    sensitive << ( tmp_424_i_fu_501_p2 );
    sensitive << ( sel_tmp6_fu_606_p2 );

    SC_METHOD(thread_sel_tmp8_fu_618_p2);
    sensitive << ( tmp_429_i_fu_541_p2 );

    SC_METHOD(thread_sel_tmp9_fu_624_p2);
    sensitive << ( sel_tmp7_fu_612_p2 );
    sensitive << ( sel_tmp8_fu_618_p2 );

    SC_METHOD(thread_sh_amt_cast_i_fu_527_p1);
    sensitive << ( sh_amt_fu_519_p3 );

    SC_METHOD(thread_sh_amt_fu_519_p3);
    sensitive << ( tmp_424_i_fu_501_p2 );
    sensitive << ( tmp_425_i_fu_507_p2 );
    sensitive << ( tmp_426_i_fu_513_p2 );

    SC_METHOD(thread_src0_cols_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( src0_cols_empty_n );

    SC_METHOD(thread_src0_cols_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( src0_rows_empty_n );
    sensitive << ( src0_cols_empty_n );
    sensitive << ( src1_rows_empty_n );
    sensitive << ( src1_cols_empty_n );
    sensitive << ( thresh_empty_n );
    sensitive << ( descriptors0_length_empty_n );
    sensitive << ( descriptors1_length_empty_n );
    sensitive << ( matches_length_empty_n );

    SC_METHOD(thread_src0_rows_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( src0_rows_empty_n );

    SC_METHOD(thread_src0_rows_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( src0_rows_empty_n );
    sensitive << ( src0_cols_empty_n );
    sensitive << ( src1_rows_empty_n );
    sensitive << ( src1_cols_empty_n );
    sensitive << ( thresh_empty_n );
    sensitive << ( descriptors0_length_empty_n );
    sensitive << ( descriptors1_length_empty_n );
    sensitive << ( matches_length_empty_n );

    SC_METHOD(thread_src0_val_address0);
    sensitive << ( tmp_422_i_reg_777 );
    sensitive << ( grp_detect_fu_268_src_val_address0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_src0_val_ce0);
    sensitive << ( tmp_422_i_reg_777 );
    sensitive << ( grp_detect_fu_268_src_val_ce0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_src1_cols_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( src1_cols_empty_n );

    SC_METHOD(thread_src1_cols_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( src0_rows_empty_n );
    sensitive << ( src0_cols_empty_n );
    sensitive << ( src1_rows_empty_n );
    sensitive << ( src1_cols_empty_n );
    sensitive << ( thresh_empty_n );
    sensitive << ( descriptors0_length_empty_n );
    sensitive << ( descriptors1_length_empty_n );
    sensitive << ( matches_length_empty_n );

    SC_METHOD(thread_src1_rows_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( src1_rows_empty_n );

    SC_METHOD(thread_src1_rows_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( src0_rows_empty_n );
    sensitive << ( src0_cols_empty_n );
    sensitive << ( src1_rows_empty_n );
    sensitive << ( src1_cols_empty_n );
    sensitive << ( thresh_empty_n );
    sensitive << ( descriptors0_length_empty_n );
    sensitive << ( descriptors1_length_empty_n );
    sensitive << ( matches_length_empty_n );

    SC_METHOD(thread_src1_val_address0);
    sensitive << ( tmp_422_i_reg_777 );
    sensitive << ( grp_detect_fu_268_src_val_address0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_src1_val_ce0);
    sensitive << ( tmp_422_i_reg_777 );
    sensitive << ( grp_detect_fu_268_src_val_ce0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_thresh_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( thresh_empty_n );

    SC_METHOD(thread_thresh_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( src0_rows_empty_n );
    sensitive << ( src0_cols_empty_n );
    sensitive << ( src1_rows_empty_n );
    sensitive << ( src1_cols_empty_n );
    sensitive << ( thresh_empty_n );
    sensitive << ( descriptors0_length_empty_n );
    sensitive << ( descriptors1_length_empty_n );
    sensitive << ( matches_length_empty_n );

    SC_METHOD(thread_tmp_1115_fu_430_p1);
    sensitive << ( ireg_V_fu_404_p1 );

    SC_METHOD(thread_tmp_1116_fu_537_p1);
    sensitive << ( man_V_6_fu_488_p3 );

    SC_METHOD(thread_tmp_1117_fu_547_p4);
    sensitive << ( sh_amt_fu_519_p3 );

    SC_METHOD(thread_tmp_1118_fu_573_p1);
    sensitive << ( tmp_433_i_fu_567_p2 );

    SC_METHOD(thread_tmp_421_i_fu_434_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_i_fu_386_p2 );
    sensitive << ( tmp_fu_408_p1 );

    SC_METHOD(thread_tmp_422_i_fu_398_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_i_fu_386_p2 );
    sensitive << ( i_i_reg_257 );

    SC_METHOD(thread_tmp_424_i_fu_501_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( F2_fu_495_p2 );

    SC_METHOD(thread_tmp_425_i_fu_507_p2);
    sensitive << ( F2_fu_495_p2 );

    SC_METHOD(thread_tmp_426_i_fu_513_p2);
    sensitive << ( F2_fu_495_p2 );

    SC_METHOD(thread_tmp_427_i_fu_531_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( F2_fu_495_p2 );

    SC_METHOD(thread_tmp_429_i_fu_541_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( sh_amt_fu_519_p3 );

    SC_METHOD(thread_tmp_432_i_fu_563_p1);
    sensitive << ( sh_amt_cast_i_fu_527_p1 );

    SC_METHOD(thread_tmp_433_i_fu_567_p2);
    sensitive << ( man_V_6_fu_488_p3 );
    sensitive << ( tmp_432_i_fu_563_p1 );

    SC_METHOD(thread_tmp_435_i_fu_577_p3);
    sensitive << ( isneg_reg_781 );

    SC_METHOD(thread_tmp_436_i_fu_584_p2);
    sensitive << ( sh_amt_cast_i_fu_527_p1 );
    sensitive << ( tmp_1116_fu_537_p1 );

    SC_METHOD(thread_tmp_fu_408_p1);
    sensitive << ( ireg_V_fu_404_p1 );

    SC_METHOD(thread_tmp_i_204_fu_471_p3);
    sensitive << ( tmp_1115_reg_792 );

    SC_METHOD(thread_tmp_i_fu_468_p1);
    sensitive << ( exp_tmp_V_reg_787 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( src0_rows_empty_n );
    sensitive << ( src0_cols_empty_n );
    sensitive << ( src1_rows_empty_n );
    sensitive << ( src1_cols_empty_n );
    sensitive << ( thresh_empty_n );
    sensitive << ( descriptors0_length_empty_n );
    sensitive << ( descriptors1_length_empty_n );
    sensitive << ( matches_length_empty_n );
    sensitive << ( keypoints0_length_out_full_n );
    sensitive << ( keypoints1_length_out_full_n );
    sensitive << ( matches_length_out_full_n );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_i_fu_386_p2 );
    sensitive << ( grp_match_511_s_fu_340_ap_done );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_block_state3_on_subcall_done );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "00001";
    grp_detect_fu_268_ap_start_reg = SC_LOGIC_0;
    grp_match_511_s_fu_340_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "compute_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, src0_val_address0, "(port)src0_val_address0");
    sc_trace(mVcdFile, src0_val_ce0, "(port)src0_val_ce0");
    sc_trace(mVcdFile, src0_val_q0, "(port)src0_val_q0");
    sc_trace(mVcdFile, src0_rows_dout, "(port)src0_rows_dout");
    sc_trace(mVcdFile, src0_rows_empty_n, "(port)src0_rows_empty_n");
    sc_trace(mVcdFile, src0_rows_read, "(port)src0_rows_read");
    sc_trace(mVcdFile, src0_cols_dout, "(port)src0_cols_dout");
    sc_trace(mVcdFile, src0_cols_empty_n, "(port)src0_cols_empty_n");
    sc_trace(mVcdFile, src0_cols_read, "(port)src0_cols_read");
    sc_trace(mVcdFile, src1_val_address0, "(port)src1_val_address0");
    sc_trace(mVcdFile, src1_val_ce0, "(port)src1_val_ce0");
    sc_trace(mVcdFile, src1_val_q0, "(port)src1_val_q0");
    sc_trace(mVcdFile, src1_rows_dout, "(port)src1_rows_dout");
    sc_trace(mVcdFile, src1_rows_empty_n, "(port)src1_rows_empty_n");
    sc_trace(mVcdFile, src1_rows_read, "(port)src1_rows_read");
    sc_trace(mVcdFile, src1_cols_dout, "(port)src1_cols_dout");
    sc_trace(mVcdFile, src1_cols_empty_n, "(port)src1_cols_empty_n");
    sc_trace(mVcdFile, src1_cols_read, "(port)src1_cols_read");
    sc_trace(mVcdFile, thresh_dout, "(port)thresh_dout");
    sc_trace(mVcdFile, thresh_empty_n, "(port)thresh_empty_n");
    sc_trace(mVcdFile, thresh_read, "(port)thresh_read");
    sc_trace(mVcdFile, keypoints0_val_pt_x_address0, "(port)keypoints0_val_pt_x_address0");
    sc_trace(mVcdFile, keypoints0_val_pt_x_ce0, "(port)keypoints0_val_pt_x_ce0");
    sc_trace(mVcdFile, keypoints0_val_pt_x_we0, "(port)keypoints0_val_pt_x_we0");
    sc_trace(mVcdFile, keypoints0_val_pt_x_d0, "(port)keypoints0_val_pt_x_d0");
    sc_trace(mVcdFile, keypoints0_val_pt_x_q0, "(port)keypoints0_val_pt_x_q0");
    sc_trace(mVcdFile, keypoints0_val_pt_y_address0, "(port)keypoints0_val_pt_y_address0");
    sc_trace(mVcdFile, keypoints0_val_pt_y_ce0, "(port)keypoints0_val_pt_y_ce0");
    sc_trace(mVcdFile, keypoints0_val_pt_y_we0, "(port)keypoints0_val_pt_y_we0");
    sc_trace(mVcdFile, keypoints0_val_pt_y_d0, "(port)keypoints0_val_pt_y_d0");
    sc_trace(mVcdFile, keypoints0_val_pt_y_q0, "(port)keypoints0_val_pt_y_q0");
    sc_trace(mVcdFile, keypoints0_val_angle_V_address0, "(port)keypoints0_val_angle_V_address0");
    sc_trace(mVcdFile, keypoints0_val_angle_V_ce0, "(port)keypoints0_val_angle_V_ce0");
    sc_trace(mVcdFile, keypoints0_val_angle_V_we0, "(port)keypoints0_val_angle_V_we0");
    sc_trace(mVcdFile, keypoints0_val_angle_V_d0, "(port)keypoints0_val_angle_V_d0");
    sc_trace(mVcdFile, keypoints0_val_angle_V_q0, "(port)keypoints0_val_angle_V_q0");
    sc_trace(mVcdFile, keypoints0_val_sigma_V_address0, "(port)keypoints0_val_sigma_V_address0");
    sc_trace(mVcdFile, keypoints0_val_sigma_V_ce0, "(port)keypoints0_val_sigma_V_ce0");
    sc_trace(mVcdFile, keypoints0_val_sigma_V_we0, "(port)keypoints0_val_sigma_V_we0");
    sc_trace(mVcdFile, keypoints0_val_sigma_V_d0, "(port)keypoints0_val_sigma_V_d0");
    sc_trace(mVcdFile, keypoints0_val_sigma_V_q0, "(port)keypoints0_val_sigma_V_q0");
    sc_trace(mVcdFile, keypoints0_val_octave_address0, "(port)keypoints0_val_octave_address0");
    sc_trace(mVcdFile, keypoints0_val_octave_ce0, "(port)keypoints0_val_octave_ce0");
    sc_trace(mVcdFile, keypoints0_val_octave_we0, "(port)keypoints0_val_octave_we0");
    sc_trace(mVcdFile, keypoints0_val_octave_d0, "(port)keypoints0_val_octave_d0");
    sc_trace(mVcdFile, keypoints0_val_octave_q0, "(port)keypoints0_val_octave_q0");
    sc_trace(mVcdFile, keypoints0_val_layer_address0, "(port)keypoints0_val_layer_address0");
    sc_trace(mVcdFile, keypoints0_val_layer_ce0, "(port)keypoints0_val_layer_ce0");
    sc_trace(mVcdFile, keypoints0_val_layer_we0, "(port)keypoints0_val_layer_we0");
    sc_trace(mVcdFile, keypoints0_val_layer_d0, "(port)keypoints0_val_layer_d0");
    sc_trace(mVcdFile, keypoints0_val_layer_q0, "(port)keypoints0_val_layer_q0");
    sc_trace(mVcdFile, keypoints1_val_pt_x_address0, "(port)keypoints1_val_pt_x_address0");
    sc_trace(mVcdFile, keypoints1_val_pt_x_ce0, "(port)keypoints1_val_pt_x_ce0");
    sc_trace(mVcdFile, keypoints1_val_pt_x_we0, "(port)keypoints1_val_pt_x_we0");
    sc_trace(mVcdFile, keypoints1_val_pt_x_d0, "(port)keypoints1_val_pt_x_d0");
    sc_trace(mVcdFile, keypoints1_val_pt_x_q0, "(port)keypoints1_val_pt_x_q0");
    sc_trace(mVcdFile, keypoints1_val_pt_y_address0, "(port)keypoints1_val_pt_y_address0");
    sc_trace(mVcdFile, keypoints1_val_pt_y_ce0, "(port)keypoints1_val_pt_y_ce0");
    sc_trace(mVcdFile, keypoints1_val_pt_y_we0, "(port)keypoints1_val_pt_y_we0");
    sc_trace(mVcdFile, keypoints1_val_pt_y_d0, "(port)keypoints1_val_pt_y_d0");
    sc_trace(mVcdFile, keypoints1_val_pt_y_q0, "(port)keypoints1_val_pt_y_q0");
    sc_trace(mVcdFile, keypoints1_val_angle_V_address0, "(port)keypoints1_val_angle_V_address0");
    sc_trace(mVcdFile, keypoints1_val_angle_V_ce0, "(port)keypoints1_val_angle_V_ce0");
    sc_trace(mVcdFile, keypoints1_val_angle_V_we0, "(port)keypoints1_val_angle_V_we0");
    sc_trace(mVcdFile, keypoints1_val_angle_V_d0, "(port)keypoints1_val_angle_V_d0");
    sc_trace(mVcdFile, keypoints1_val_angle_V_q0, "(port)keypoints1_val_angle_V_q0");
    sc_trace(mVcdFile, keypoints1_val_sigma_V_address0, "(port)keypoints1_val_sigma_V_address0");
    sc_trace(mVcdFile, keypoints1_val_sigma_V_ce0, "(port)keypoints1_val_sigma_V_ce0");
    sc_trace(mVcdFile, keypoints1_val_sigma_V_we0, "(port)keypoints1_val_sigma_V_we0");
    sc_trace(mVcdFile, keypoints1_val_sigma_V_d0, "(port)keypoints1_val_sigma_V_d0");
    sc_trace(mVcdFile, keypoints1_val_sigma_V_q0, "(port)keypoints1_val_sigma_V_q0");
    sc_trace(mVcdFile, keypoints1_val_octave_address0, "(port)keypoints1_val_octave_address0");
    sc_trace(mVcdFile, keypoints1_val_octave_ce0, "(port)keypoints1_val_octave_ce0");
    sc_trace(mVcdFile, keypoints1_val_octave_we0, "(port)keypoints1_val_octave_we0");
    sc_trace(mVcdFile, keypoints1_val_octave_d0, "(port)keypoints1_val_octave_d0");
    sc_trace(mVcdFile, keypoints1_val_octave_q0, "(port)keypoints1_val_octave_q0");
    sc_trace(mVcdFile, keypoints1_val_layer_address0, "(port)keypoints1_val_layer_address0");
    sc_trace(mVcdFile, keypoints1_val_layer_ce0, "(port)keypoints1_val_layer_ce0");
    sc_trace(mVcdFile, keypoints1_val_layer_we0, "(port)keypoints1_val_layer_we0");
    sc_trace(mVcdFile, keypoints1_val_layer_d0, "(port)keypoints1_val_layer_d0");
    sc_trace(mVcdFile, keypoints1_val_layer_q0, "(port)keypoints1_val_layer_q0");
    sc_trace(mVcdFile, descriptors0_val_val_address0, "(port)descriptors0_val_val_address0");
    sc_trace(mVcdFile, descriptors0_val_val_ce0, "(port)descriptors0_val_val_ce0");
    sc_trace(mVcdFile, descriptors0_val_val_we0, "(port)descriptors0_val_val_we0");
    sc_trace(mVcdFile, descriptors0_val_val_d0, "(port)descriptors0_val_val_d0");
    sc_trace(mVcdFile, descriptors0_val_val_q0, "(port)descriptors0_val_val_q0");
    sc_trace(mVcdFile, descriptors0_length_dout, "(port)descriptors0_length_dout");
    sc_trace(mVcdFile, descriptors0_length_empty_n, "(port)descriptors0_length_empty_n");
    sc_trace(mVcdFile, descriptors0_length_read, "(port)descriptors0_length_read");
    sc_trace(mVcdFile, descriptors1_val_val_address0, "(port)descriptors1_val_val_address0");
    sc_trace(mVcdFile, descriptors1_val_val_ce0, "(port)descriptors1_val_val_ce0");
    sc_trace(mVcdFile, descriptors1_val_val_we0, "(port)descriptors1_val_val_we0");
    sc_trace(mVcdFile, descriptors1_val_val_d0, "(port)descriptors1_val_val_d0");
    sc_trace(mVcdFile, descriptors1_val_val_q0, "(port)descriptors1_val_val_q0");
    sc_trace(mVcdFile, descriptors1_length_dout, "(port)descriptors1_length_dout");
    sc_trace(mVcdFile, descriptors1_length_empty_n, "(port)descriptors1_length_empty_n");
    sc_trace(mVcdFile, descriptors1_length_read, "(port)descriptors1_length_read");
    sc_trace(mVcdFile, matches_val_idx0_address0, "(port)matches_val_idx0_address0");
    sc_trace(mVcdFile, matches_val_idx0_ce0, "(port)matches_val_idx0_ce0");
    sc_trace(mVcdFile, matches_val_idx0_we0, "(port)matches_val_idx0_we0");
    sc_trace(mVcdFile, matches_val_idx0_d0, "(port)matches_val_idx0_d0");
    sc_trace(mVcdFile, matches_val_idx1_address0, "(port)matches_val_idx1_address0");
    sc_trace(mVcdFile, matches_val_idx1_ce0, "(port)matches_val_idx1_ce0");
    sc_trace(mVcdFile, matches_val_idx1_we0, "(port)matches_val_idx1_we0");
    sc_trace(mVcdFile, matches_val_idx1_d0, "(port)matches_val_idx1_d0");
    sc_trace(mVcdFile, matches_length_dout, "(port)matches_length_dout");
    sc_trace(mVcdFile, matches_length_empty_n, "(port)matches_length_empty_n");
    sc_trace(mVcdFile, matches_length_read, "(port)matches_length_read");
    sc_trace(mVcdFile, keypoints0_length_out_din, "(port)keypoints0_length_out_din");
    sc_trace(mVcdFile, keypoints0_length_out_full_n, "(port)keypoints0_length_out_full_n");
    sc_trace(mVcdFile, keypoints0_length_out_write, "(port)keypoints0_length_out_write");
    sc_trace(mVcdFile, keypoints1_length_out_din, "(port)keypoints1_length_out_din");
    sc_trace(mVcdFile, keypoints1_length_out_full_n, "(port)keypoints1_length_out_full_n");
    sc_trace(mVcdFile, keypoints1_length_out_write, "(port)keypoints1_length_out_write");
    sc_trace(mVcdFile, matches_length_out_din, "(port)matches_length_out_din");
    sc_trace(mVcdFile, matches_length_out_full_n, "(port)matches_length_out_full_n");
    sc_trace(mVcdFile, matches_length_out_write, "(port)matches_length_out_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, src0_rows_blk_n, "src0_rows_blk_n");
    sc_trace(mVcdFile, src0_cols_blk_n, "src0_cols_blk_n");
    sc_trace(mVcdFile, src1_rows_blk_n, "src1_rows_blk_n");
    sc_trace(mVcdFile, src1_cols_blk_n, "src1_cols_blk_n");
    sc_trace(mVcdFile, thresh_blk_n, "thresh_blk_n");
    sc_trace(mVcdFile, descriptors0_length_blk_n, "descriptors0_length_blk_n");
    sc_trace(mVcdFile, descriptors1_length_blk_n, "descriptors1_length_blk_n");
    sc_trace(mVcdFile, matches_length_blk_n, "matches_length_blk_n");
    sc_trace(mVcdFile, keypoints0_length_out_blk_n, "keypoints0_length_out_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, keypoints1_length_out_blk_n, "keypoints1_length_out_blk_n");
    sc_trace(mVcdFile, matches_length_out_blk_n, "matches_length_out_blk_n");
    sc_trace(mVcdFile, src0_rows_read_reg_739, "src0_rows_read_reg_739");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, src0_cols_read_reg_744, "src0_cols_read_reg_744");
    sc_trace(mVcdFile, src1_rows_read_reg_749, "src1_rows_read_reg_749");
    sc_trace(mVcdFile, src1_cols_read_reg_754, "src1_cols_read_reg_754");
    sc_trace(mVcdFile, thresh_read_reg_759, "thresh_read_reg_759");
    sc_trace(mVcdFile, matches_length_read_reg_764, "matches_length_read_reg_764");
    sc_trace(mVcdFile, i_fu_392_p2, "i_fu_392_p2");
    sc_trace(mVcdFile, i_reg_772, "i_reg_772");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_422_i_fu_398_p2, "tmp_422_i_fu_398_p2");
    sc_trace(mVcdFile, tmp_422_i_reg_777, "tmp_422_i_reg_777");
    sc_trace(mVcdFile, exitcond_i_fu_386_p2, "exitcond_i_fu_386_p2");
    sc_trace(mVcdFile, isneg_reg_781, "isneg_reg_781");
    sc_trace(mVcdFile, exp_tmp_V_reg_787, "exp_tmp_V_reg_787");
    sc_trace(mVcdFile, tmp_1115_fu_430_p1, "tmp_1115_fu_430_p1");
    sc_trace(mVcdFile, tmp_1115_reg_792, "tmp_1115_reg_792");
    sc_trace(mVcdFile, tmp_421_i_fu_434_p2, "tmp_421_i_fu_434_p2");
    sc_trace(mVcdFile, tmp_421_i_reg_797, "tmp_421_i_reg_797");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, newSel17_fu_696_p3, "newSel17_fu_696_p3");
    sc_trace(mVcdFile, newSel17_reg_813, "newSel17_reg_813");
    sc_trace(mVcdFile, grp_detect_fu_268_ap_start, "grp_detect_fu_268_ap_start");
    sc_trace(mVcdFile, grp_detect_fu_268_ap_done, "grp_detect_fu_268_ap_done");
    sc_trace(mVcdFile, grp_detect_fu_268_ap_idle, "grp_detect_fu_268_ap_idle");
    sc_trace(mVcdFile, grp_detect_fu_268_ap_ready, "grp_detect_fu_268_ap_ready");
    sc_trace(mVcdFile, grp_detect_fu_268_src_val_address0, "grp_detect_fu_268_src_val_address0");
    sc_trace(mVcdFile, grp_detect_fu_268_src_val_ce0, "grp_detect_fu_268_src_val_ce0");
    sc_trace(mVcdFile, grp_detect_fu_268_src_val_q0, "grp_detect_fu_268_src_val_q0");
    sc_trace(mVcdFile, grp_detect_fu_268_src_rows_read, "grp_detect_fu_268_src_rows_read");
    sc_trace(mVcdFile, grp_detect_fu_268_src_cols_read, "grp_detect_fu_268_src_cols_read");
    sc_trace(mVcdFile, grp_detect_fu_268_keypoints_val_pt_x_address0, "grp_detect_fu_268_keypoints_val_pt_x_address0");
    sc_trace(mVcdFile, grp_detect_fu_268_keypoints_val_pt_x_ce0, "grp_detect_fu_268_keypoints_val_pt_x_ce0");
    sc_trace(mVcdFile, grp_detect_fu_268_keypoints_val_pt_x_we0, "grp_detect_fu_268_keypoints_val_pt_x_we0");
    sc_trace(mVcdFile, grp_detect_fu_268_keypoints_val_pt_x_d0, "grp_detect_fu_268_keypoints_val_pt_x_d0");
    sc_trace(mVcdFile, grp_detect_fu_268_keypoints_val_pt_x_q0, "grp_detect_fu_268_keypoints_val_pt_x_q0");
    sc_trace(mVcdFile, grp_detect_fu_268_keypoints_val_pt_y_address0, "grp_detect_fu_268_keypoints_val_pt_y_address0");
    sc_trace(mVcdFile, grp_detect_fu_268_keypoints_val_pt_y_ce0, "grp_detect_fu_268_keypoints_val_pt_y_ce0");
    sc_trace(mVcdFile, grp_detect_fu_268_keypoints_val_pt_y_we0, "grp_detect_fu_268_keypoints_val_pt_y_we0");
    sc_trace(mVcdFile, grp_detect_fu_268_keypoints_val_pt_y_d0, "grp_detect_fu_268_keypoints_val_pt_y_d0");
    sc_trace(mVcdFile, grp_detect_fu_268_keypoints_val_pt_y_q0, "grp_detect_fu_268_keypoints_val_pt_y_q0");
    sc_trace(mVcdFile, grp_detect_fu_268_keypoints_val_angle_V_address0, "grp_detect_fu_268_keypoints_val_angle_V_address0");
    sc_trace(mVcdFile, grp_detect_fu_268_keypoints_val_angle_V_ce0, "grp_detect_fu_268_keypoints_val_angle_V_ce0");
    sc_trace(mVcdFile, grp_detect_fu_268_keypoints_val_angle_V_we0, "grp_detect_fu_268_keypoints_val_angle_V_we0");
    sc_trace(mVcdFile, grp_detect_fu_268_keypoints_val_angle_V_d0, "grp_detect_fu_268_keypoints_val_angle_V_d0");
    sc_trace(mVcdFile, grp_detect_fu_268_keypoints_val_angle_V_q0, "grp_detect_fu_268_keypoints_val_angle_V_q0");
    sc_trace(mVcdFile, grp_detect_fu_268_keypoints_val_sigma_V_address0, "grp_detect_fu_268_keypoints_val_sigma_V_address0");
    sc_trace(mVcdFile, grp_detect_fu_268_keypoints_val_sigma_V_ce0, "grp_detect_fu_268_keypoints_val_sigma_V_ce0");
    sc_trace(mVcdFile, grp_detect_fu_268_keypoints_val_sigma_V_we0, "grp_detect_fu_268_keypoints_val_sigma_V_we0");
    sc_trace(mVcdFile, grp_detect_fu_268_keypoints_val_sigma_V_d0, "grp_detect_fu_268_keypoints_val_sigma_V_d0");
    sc_trace(mVcdFile, grp_detect_fu_268_keypoints_val_sigma_V_q0, "grp_detect_fu_268_keypoints_val_sigma_V_q0");
    sc_trace(mVcdFile, grp_detect_fu_268_keypoints_val_octave_address0, "grp_detect_fu_268_keypoints_val_octave_address0");
    sc_trace(mVcdFile, grp_detect_fu_268_keypoints_val_octave_ce0, "grp_detect_fu_268_keypoints_val_octave_ce0");
    sc_trace(mVcdFile, grp_detect_fu_268_keypoints_val_octave_we0, "grp_detect_fu_268_keypoints_val_octave_we0");
    sc_trace(mVcdFile, grp_detect_fu_268_keypoints_val_octave_d0, "grp_detect_fu_268_keypoints_val_octave_d0");
    sc_trace(mVcdFile, grp_detect_fu_268_keypoints_val_octave_q0, "grp_detect_fu_268_keypoints_val_octave_q0");
    sc_trace(mVcdFile, grp_detect_fu_268_keypoints_val_layer_address0, "grp_detect_fu_268_keypoints_val_layer_address0");
    sc_trace(mVcdFile, grp_detect_fu_268_keypoints_val_layer_ce0, "grp_detect_fu_268_keypoints_val_layer_ce0");
    sc_trace(mVcdFile, grp_detect_fu_268_keypoints_val_layer_we0, "grp_detect_fu_268_keypoints_val_layer_we0");
    sc_trace(mVcdFile, grp_detect_fu_268_keypoints_val_layer_d0, "grp_detect_fu_268_keypoints_val_layer_d0");
    sc_trace(mVcdFile, grp_detect_fu_268_keypoints_val_layer_q0, "grp_detect_fu_268_keypoints_val_layer_q0");
    sc_trace(mVcdFile, grp_detect_fu_268_descriptors_val_val_address0, "grp_detect_fu_268_descriptors_val_val_address0");
    sc_trace(mVcdFile, grp_detect_fu_268_descriptors_val_val_ce0, "grp_detect_fu_268_descriptors_val_val_ce0");
    sc_trace(mVcdFile, grp_detect_fu_268_descriptors_val_val_we0, "grp_detect_fu_268_descriptors_val_val_we0");
    sc_trace(mVcdFile, grp_detect_fu_268_descriptors_val_val_d0, "grp_detect_fu_268_descriptors_val_val_d0");
    sc_trace(mVcdFile, grp_detect_fu_268_ap_return_0, "grp_detect_fu_268_ap_return_0");
    sc_trace(mVcdFile, grp_detect_fu_268_ap_return_1, "grp_detect_fu_268_ap_return_1");
    sc_trace(mVcdFile, grp_match_511_s_fu_340_ap_start, "grp_match_511_s_fu_340_ap_start");
    sc_trace(mVcdFile, grp_match_511_s_fu_340_ap_done, "grp_match_511_s_fu_340_ap_done");
    sc_trace(mVcdFile, grp_match_511_s_fu_340_ap_idle, "grp_match_511_s_fu_340_ap_idle");
    sc_trace(mVcdFile, grp_match_511_s_fu_340_ap_ready, "grp_match_511_s_fu_340_ap_ready");
    sc_trace(mVcdFile, grp_match_511_s_fu_340_descriptors0_val_val_address0, "grp_match_511_s_fu_340_descriptors0_val_val_address0");
    sc_trace(mVcdFile, grp_match_511_s_fu_340_descriptors0_val_val_ce0, "grp_match_511_s_fu_340_descriptors0_val_val_ce0");
    sc_trace(mVcdFile, grp_match_511_s_fu_340_descriptors1_val_val_address0, "grp_match_511_s_fu_340_descriptors1_val_val_address0");
    sc_trace(mVcdFile, grp_match_511_s_fu_340_descriptors1_val_val_ce0, "grp_match_511_s_fu_340_descriptors1_val_val_ce0");
    sc_trace(mVcdFile, grp_match_511_s_fu_340_matches_val_idx0_address0, "grp_match_511_s_fu_340_matches_val_idx0_address0");
    sc_trace(mVcdFile, grp_match_511_s_fu_340_matches_val_idx0_ce0, "grp_match_511_s_fu_340_matches_val_idx0_ce0");
    sc_trace(mVcdFile, grp_match_511_s_fu_340_matches_val_idx0_we0, "grp_match_511_s_fu_340_matches_val_idx0_we0");
    sc_trace(mVcdFile, grp_match_511_s_fu_340_matches_val_idx0_d0, "grp_match_511_s_fu_340_matches_val_idx0_d0");
    sc_trace(mVcdFile, grp_match_511_s_fu_340_matches_val_idx1_address0, "grp_match_511_s_fu_340_matches_val_idx1_address0");
    sc_trace(mVcdFile, grp_match_511_s_fu_340_matches_val_idx1_ce0, "grp_match_511_s_fu_340_matches_val_idx1_ce0");
    sc_trace(mVcdFile, grp_match_511_s_fu_340_matches_val_idx1_we0, "grp_match_511_s_fu_340_matches_val_idx1_we0");
    sc_trace(mVcdFile, grp_match_511_s_fu_340_matches_val_idx1_d0, "grp_match_511_s_fu_340_matches_val_idx1_d0");
    sc_trace(mVcdFile, grp_match_511_s_fu_340_ap_return, "grp_match_511_s_fu_340_ap_return");
    sc_trace(mVcdFile, i_i_reg_257, "i_i_reg_257");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, ap_block_state3_on_subcall_done, "ap_block_state3_on_subcall_done");
    sc_trace(mVcdFile, grp_detect_fu_268_ap_start_reg, "grp_detect_fu_268_ap_start_reg");
    sc_trace(mVcdFile, grp_match_511_s_fu_340_ap_start_reg, "grp_match_511_s_fu_340_ap_start_reg");
    sc_trace(mVcdFile, ap_block_state5, "ap_block_state5");
    sc_trace(mVcdFile, descriptors1_length_s_fu_172, "descriptors1_length_s_fu_172");
    sc_trace(mVcdFile, extLd1_fu_372_p1, "extLd1_fu_372_p1");
    sc_trace(mVcdFile, descriptors0_length_s_fu_176, "descriptors0_length_s_fu_176");
    sc_trace(mVcdFile, extLd_fu_368_p1, "extLd_fu_368_p1");
    sc_trace(mVcdFile, keypoints1_length_dc_2_fu_180, "keypoints1_length_dc_2_fu_180");
    sc_trace(mVcdFile, keypoints0_length_dc_2_fu_184, "keypoints0_length_dc_2_fu_184");
    sc_trace(mVcdFile, d_assign_fu_357_p1, "d_assign_fu_357_p1");
    sc_trace(mVcdFile, ireg_V_fu_404_p1, "ireg_V_fu_404_p1");
    sc_trace(mVcdFile, tmp_fu_408_p1, "tmp_fu_408_p1");
    sc_trace(mVcdFile, tmp_i_204_fu_471_p3, "tmp_i_204_fu_471_p3");
    sc_trace(mVcdFile, p_Result_s_fu_478_p1, "p_Result_s_fu_478_p1");
    sc_trace(mVcdFile, man_V_5_fu_482_p2, "man_V_5_fu_482_p2");
    sc_trace(mVcdFile, tmp_i_fu_468_p1, "tmp_i_fu_468_p1");
    sc_trace(mVcdFile, F2_fu_495_p2, "F2_fu_495_p2");
    sc_trace(mVcdFile, tmp_424_i_fu_501_p2, "tmp_424_i_fu_501_p2");
    sc_trace(mVcdFile, tmp_425_i_fu_507_p2, "tmp_425_i_fu_507_p2");
    sc_trace(mVcdFile, tmp_426_i_fu_513_p2, "tmp_426_i_fu_513_p2");
    sc_trace(mVcdFile, sh_amt_fu_519_p3, "sh_amt_fu_519_p3");
    sc_trace(mVcdFile, man_V_6_fu_488_p3, "man_V_6_fu_488_p3");
    sc_trace(mVcdFile, tmp_1117_fu_547_p4, "tmp_1117_fu_547_p4");
    sc_trace(mVcdFile, sh_amt_cast_i_fu_527_p1, "sh_amt_cast_i_fu_527_p1");
    sc_trace(mVcdFile, tmp_432_i_fu_563_p1, "tmp_432_i_fu_563_p1");
    sc_trace(mVcdFile, tmp_433_i_fu_567_p2, "tmp_433_i_fu_567_p2");
    sc_trace(mVcdFile, tmp_1116_fu_537_p1, "tmp_1116_fu_537_p1");
    sc_trace(mVcdFile, tmp_427_i_fu_531_p2, "tmp_427_i_fu_531_p2");
    sc_trace(mVcdFile, sel_tmp1_fu_590_p2, "sel_tmp1_fu_590_p2");
    sc_trace(mVcdFile, sel_tmp6_demorgan_fu_601_p2, "sel_tmp6_demorgan_fu_601_p2");
    sc_trace(mVcdFile, sel_tmp6_fu_606_p2, "sel_tmp6_fu_606_p2");
    sc_trace(mVcdFile, tmp_429_i_fu_541_p2, "tmp_429_i_fu_541_p2");
    sc_trace(mVcdFile, sel_tmp7_fu_612_p2, "sel_tmp7_fu_612_p2");
    sc_trace(mVcdFile, sel_tmp8_fu_618_p2, "sel_tmp8_fu_618_p2");
    sc_trace(mVcdFile, sel_tmp21_demorgan_fu_636_p2, "sel_tmp21_demorgan_fu_636_p2");
    sc_trace(mVcdFile, icmp_fu_557_p2, "icmp_fu_557_p2");
    sc_trace(mVcdFile, sel_tmp21_fu_642_p2, "sel_tmp21_fu_642_p2");
    sc_trace(mVcdFile, sel_tmp22_fu_648_p2, "sel_tmp22_fu_648_p2");
    sc_trace(mVcdFile, tmp_436_i_fu_584_p2, "tmp_436_i_fu_584_p2");
    sc_trace(mVcdFile, tmp_1118_fu_573_p1, "tmp_1118_fu_573_p1");
    sc_trace(mVcdFile, sel_tmp15_fu_630_p2, "sel_tmp15_fu_630_p2");
    sc_trace(mVcdFile, sel_tmp9_fu_624_p2, "sel_tmp9_fu_624_p2");
    sc_trace(mVcdFile, tmp_435_i_fu_577_p3, "tmp_435_i_fu_577_p3");
    sc_trace(mVcdFile, sel_tmp2_fu_595_p2, "sel_tmp2_fu_595_p2");
    sc_trace(mVcdFile, or_cond_fu_662_p2, "or_cond_fu_662_p2");
    sc_trace(mVcdFile, newSel_fu_654_p3, "newSel_fu_654_p3");
    sc_trace(mVcdFile, newSel15_fu_668_p3, "newSel15_fu_668_p3");
    sc_trace(mVcdFile, or_cond3_fu_676_p2, "or_cond3_fu_676_p2");
    sc_trace(mVcdFile, or_cond4_fu_690_p2, "or_cond4_fu_690_p2");
    sc_trace(mVcdFile, newSel16_fu_682_p3, "newSel16_fu_682_p3");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

compute::~compute() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete grp_detect_fu_268;
    delete grp_match_511_s_fu_340;
    delete SIFT2_Core_fpext_hbi_U1095;
}

void compute::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((!(esl_seteq<1,1,1>(grp_match_511_s_fu_340_ap_done.read(), ap_const_logic_0) || esl_seteq<1,1,1>(matches_length_out_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(keypoints1_length_out_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(keypoints0_length_out_full_n.read(), ap_const_logic_0)) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_422_i_reg_777.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state3_on_subcall_done.read()))) {
        descriptors0_length_s_fu_176 = grp_detect_fu_268_ap_return_0.read();
    } else if ((!(esl_seteq<1,1,1>(thresh_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(src1_cols_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(src1_rows_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(src0_cols_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(src0_rows_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(matches_length_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(descriptors1_length_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(descriptors0_length_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        descriptors0_length_s_fu_176 = extLd_fu_368_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_422_i_reg_777.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state3_on_subcall_done.read()))) {
        descriptors1_length_s_fu_172 = grp_detect_fu_268_ap_return_0.read();
    } else if ((!(esl_seteq<1,1,1>(thresh_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(src1_cols_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(src1_rows_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(src0_cols_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(src0_rows_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(matches_length_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(descriptors1_length_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(descriptors0_length_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        descriptors1_length_s_fu_172 = extLd1_fu_372_p1.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_detect_fu_268_ap_start_reg = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
              esl_seteq<1,1,1>(exitcond_i_fu_386_p2.read(), ap_const_lv1_0) && 
              esl_seteq<1,1,1>(tmp_422_i_fu_398_p2.read(), ap_const_lv1_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
              esl_seteq<1,1,1>(exitcond_i_fu_386_p2.read(), ap_const_lv1_0) && 
              esl_seteq<1,1,1>(tmp_422_i_fu_398_p2.read(), ap_const_lv1_1)))) {
            grp_detect_fu_268_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_detect_fu_268_ap_ready.read())) {
            grp_detect_fu_268_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_match_511_s_fu_340_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
            grp_match_511_s_fu_340_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_match_511_s_fu_340_ap_ready.read())) {
            grp_match_511_s_fu_340_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state3_on_subcall_done.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        i_i_reg_257 = i_reg_772.read();
    } else if ((!(esl_seteq<1,1,1>(thresh_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(src1_cols_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(src1_rows_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(src0_cols_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(src0_rows_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(matches_length_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(descriptors1_length_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(descriptors0_length_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        i_i_reg_257 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(exitcond_i_fu_386_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        exp_tmp_V_reg_787 = ireg_V_fu_404_p1.read().range(62, 52);
        isneg_reg_781 = ireg_V_fu_404_p1.read().range(63, 63);
        tmp_1115_reg_792 = tmp_1115_fu_430_p1.read();
        tmp_421_i_reg_797 = tmp_421_i_fu_434_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_reg_772 = i_fu_392_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(tmp_422_i_reg_777.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state3_on_subcall_done.read()))) {
        keypoints0_length_dc_2_fu_184 = grp_detect_fu_268_ap_return_1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(tmp_422_i_reg_777.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state3_on_subcall_done.read()))) {
        keypoints1_length_dc_2_fu_180 = grp_detect_fu_268_ap_return_1.read();
    }
    if ((!(esl_seteq<1,1,1>(thresh_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(src1_cols_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(src1_rows_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(src0_cols_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(src0_rows_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(matches_length_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(descriptors1_length_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(descriptors0_length_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        matches_length_read_reg_764 = matches_length_dout.read();
        src0_cols_read_reg_744 = src0_cols_dout.read();
        src0_rows_read_reg_739 = src0_rows_dout.read();
        src1_cols_read_reg_754 = src1_cols_dout.read();
        src1_rows_read_reg_749 = src1_rows_dout.read();
        thresh_read_reg_759 = thresh_dout.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        newSel17_reg_813 = newSel17_fu_696_p3.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_i_fu_386_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        tmp_422_i_reg_777 = tmp_422_i_fu_398_p2.read();
    }
}

void compute::thread_F2_fu_495_p2() {
    F2_fu_495_p2 = (!ap_const_lv12_433.is_01() || !tmp_i_fu_468_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(ap_const_lv12_433) - sc_biguint<12>(tmp_i_fu_468_p1.read()));
}

void compute::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void compute::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void compute::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void compute::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void compute::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void compute::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(thresh_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(src1_cols_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(src1_rows_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(src0_cols_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(src0_rows_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(matches_length_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(descriptors1_length_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(descriptors0_length_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void compute::thread_ap_block_state3_on_subcall_done() {
    ap_block_state3_on_subcall_done = ((esl_seteq<1,1,1>(ap_const_logic_0, grp_detect_fu_268_ap_done.read()) && 
  esl_seteq<1,1,1>(tmp_422_i_reg_777.read(), ap_const_lv1_0)) || (esl_seteq<1,1,1>(ap_const_logic_0, grp_detect_fu_268_ap_done.read()) && 
  esl_seteq<1,1,1>(tmp_422_i_reg_777.read(), ap_const_lv1_1)));
}

void compute::thread_ap_block_state5() {
    ap_block_state5 = (esl_seteq<1,1,1>(keypoints0_length_out_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(keypoints1_length_out_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(matches_length_out_full_n.read(), ap_const_logic_0));
}

void compute::thread_ap_done() {
    if ((!(esl_seteq<1,1,1>(grp_match_511_s_fu_340_ap_done.read(), ap_const_logic_0) || esl_seteq<1,1,1>(matches_length_out_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(keypoints1_length_out_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(keypoints0_length_out_full_n.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void compute::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void compute::thread_ap_ready() {
    if ((!(esl_seteq<1,1,1>(grp_match_511_s_fu_340_ap_done.read(), ap_const_logic_0) || esl_seteq<1,1,1>(matches_length_out_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(keypoints1_length_out_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(keypoints0_length_out_full_n.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void compute::thread_descriptors0_length_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        descriptors0_length_blk_n = descriptors0_length_empty_n.read();
    } else {
        descriptors0_length_blk_n = ap_const_logic_1;
    }
}

void compute::thread_descriptors0_length_read() {
    if ((!(esl_seteq<1,1,1>(thresh_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(src1_cols_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(src1_rows_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(src0_cols_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(src0_rows_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(matches_length_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(descriptors1_length_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(descriptors0_length_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        descriptors0_length_read = ap_const_logic_1;
    } else {
        descriptors0_length_read = ap_const_logic_0;
    }
}

void compute::thread_descriptors0_val_val_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        descriptors0_val_val_address0 = grp_match_511_s_fu_340_descriptors0_val_val_address0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(tmp_422_i_reg_777.read(), ap_const_lv1_1))) {
        descriptors0_val_val_address0 = grp_detect_fu_268_descriptors_val_val_address0.read();
    } else {
        descriptors0_val_val_address0 = "XXXXXXXXXXXXXXXX";
    }
}

void compute::thread_descriptors0_val_val_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        descriptors0_val_val_ce0 = grp_match_511_s_fu_340_descriptors0_val_val_ce0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(tmp_422_i_reg_777.read(), ap_const_lv1_1))) {
        descriptors0_val_val_ce0 = grp_detect_fu_268_descriptors_val_val_ce0.read();
    } else {
        descriptors0_val_val_ce0 = ap_const_logic_0;
    }
}

void compute::thread_descriptors0_val_val_d0() {
    descriptors0_val_val_d0 = grp_detect_fu_268_descriptors_val_val_d0.read();
}

void compute::thread_descriptors0_val_val_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_422_i_reg_777.read(), ap_const_lv1_1))) {
        descriptors0_val_val_we0 = grp_detect_fu_268_descriptors_val_val_we0.read();
    } else {
        descriptors0_val_val_we0 = ap_const_logic_0;
    }
}

void compute::thread_descriptors1_length_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        descriptors1_length_blk_n = descriptors1_length_empty_n.read();
    } else {
        descriptors1_length_blk_n = ap_const_logic_1;
    }
}

void compute::thread_descriptors1_length_read() {
    if ((!(esl_seteq<1,1,1>(thresh_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(src1_cols_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(src1_rows_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(src0_cols_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(src0_rows_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(matches_length_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(descriptors1_length_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(descriptors0_length_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        descriptors1_length_read = ap_const_logic_1;
    } else {
        descriptors1_length_read = ap_const_logic_0;
    }
}

void compute::thread_descriptors1_val_val_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        descriptors1_val_val_address0 = grp_match_511_s_fu_340_descriptors1_val_val_address0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(tmp_422_i_reg_777.read(), ap_const_lv1_0))) {
        descriptors1_val_val_address0 = grp_detect_fu_268_descriptors_val_val_address0.read();
    } else {
        descriptors1_val_val_address0 = "XXXXXXXXXXXXXXXX";
    }
}

void compute::thread_descriptors1_val_val_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        descriptors1_val_val_ce0 = grp_match_511_s_fu_340_descriptors1_val_val_ce0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(tmp_422_i_reg_777.read(), ap_const_lv1_0))) {
        descriptors1_val_val_ce0 = grp_detect_fu_268_descriptors_val_val_ce0.read();
    } else {
        descriptors1_val_val_ce0 = ap_const_logic_0;
    }
}

void compute::thread_descriptors1_val_val_d0() {
    descriptors1_val_val_d0 = grp_detect_fu_268_descriptors_val_val_d0.read();
}

void compute::thread_descriptors1_val_val_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_422_i_reg_777.read(), ap_const_lv1_0))) {
        descriptors1_val_val_we0 = grp_detect_fu_268_descriptors_val_val_we0.read();
    } else {
        descriptors1_val_val_we0 = ap_const_logic_0;
    }
}

void compute::thread_exitcond_i_fu_386_p2() {
    exitcond_i_fu_386_p2 = (!i_i_reg_257.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(i_i_reg_257.read() == ap_const_lv2_2);
}

void compute::thread_extLd1_fu_372_p1() {
    extLd1_fu_372_p1 = esl_zext<32,1>(descriptors1_length_dout.read());
}

void compute::thread_extLd_fu_368_p1() {
    extLd_fu_368_p1 = esl_zext<32,1>(descriptors0_length_dout.read());
}

void compute::thread_grp_detect_fu_268_ap_start() {
    grp_detect_fu_268_ap_start = grp_detect_fu_268_ap_start_reg.read();
}

void compute::thread_grp_detect_fu_268_keypoints_val_angle_V_q0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        if (esl_seteq<1,1,1>(tmp_422_i_reg_777.read(), ap_const_lv1_1)) {
            grp_detect_fu_268_keypoints_val_angle_V_q0 = keypoints0_val_angle_V_q0.read();
        } else if (esl_seteq<1,1,1>(tmp_422_i_reg_777.read(), ap_const_lv1_0)) {
            grp_detect_fu_268_keypoints_val_angle_V_q0 = keypoints1_val_angle_V_q0.read();
        } else {
            grp_detect_fu_268_keypoints_val_angle_V_q0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
        }
    } else {
        grp_detect_fu_268_keypoints_val_angle_V_q0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void compute::thread_grp_detect_fu_268_keypoints_val_layer_q0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        if (esl_seteq<1,1,1>(tmp_422_i_reg_777.read(), ap_const_lv1_1)) {
            grp_detect_fu_268_keypoints_val_layer_q0 = keypoints0_val_layer_q0.read();
        } else if (esl_seteq<1,1,1>(tmp_422_i_reg_777.read(), ap_const_lv1_0)) {
            grp_detect_fu_268_keypoints_val_layer_q0 = keypoints1_val_layer_q0.read();
        } else {
            grp_detect_fu_268_keypoints_val_layer_q0 =  (sc_lv<8>) ("XXXXXXXX");
        }
    } else {
        grp_detect_fu_268_keypoints_val_layer_q0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void compute::thread_grp_detect_fu_268_keypoints_val_octave_q0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        if (esl_seteq<1,1,1>(tmp_422_i_reg_777.read(), ap_const_lv1_1)) {
            grp_detect_fu_268_keypoints_val_octave_q0 = keypoints0_val_octave_q0.read();
        } else if (esl_seteq<1,1,1>(tmp_422_i_reg_777.read(), ap_const_lv1_0)) {
            grp_detect_fu_268_keypoints_val_octave_q0 = keypoints1_val_octave_q0.read();
        } else {
            grp_detect_fu_268_keypoints_val_octave_q0 =  (sc_lv<8>) ("XXXXXXXX");
        }
    } else {
        grp_detect_fu_268_keypoints_val_octave_q0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void compute::thread_grp_detect_fu_268_keypoints_val_pt_x_q0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        if (esl_seteq<1,1,1>(tmp_422_i_reg_777.read(), ap_const_lv1_1)) {
            grp_detect_fu_268_keypoints_val_pt_x_q0 = keypoints0_val_pt_x_q0.read();
        } else if (esl_seteq<1,1,1>(tmp_422_i_reg_777.read(), ap_const_lv1_0)) {
            grp_detect_fu_268_keypoints_val_pt_x_q0 = keypoints1_val_pt_x_q0.read();
        } else {
            grp_detect_fu_268_keypoints_val_pt_x_q0 = "XXXXXXXXXXXXXXXX";
        }
    } else {
        grp_detect_fu_268_keypoints_val_pt_x_q0 = "XXXXXXXXXXXXXXXX";
    }
}

void compute::thread_grp_detect_fu_268_keypoints_val_pt_y_q0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        if (esl_seteq<1,1,1>(tmp_422_i_reg_777.read(), ap_const_lv1_1)) {
            grp_detect_fu_268_keypoints_val_pt_y_q0 = keypoints0_val_pt_y_q0.read();
        } else if (esl_seteq<1,1,1>(tmp_422_i_reg_777.read(), ap_const_lv1_0)) {
            grp_detect_fu_268_keypoints_val_pt_y_q0 = keypoints1_val_pt_y_q0.read();
        } else {
            grp_detect_fu_268_keypoints_val_pt_y_q0 = "XXXXXXXXXXXXXXXX";
        }
    } else {
        grp_detect_fu_268_keypoints_val_pt_y_q0 = "XXXXXXXXXXXXXXXX";
    }
}

void compute::thread_grp_detect_fu_268_keypoints_val_sigma_V_q0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        if (esl_seteq<1,1,1>(tmp_422_i_reg_777.read(), ap_const_lv1_1)) {
            grp_detect_fu_268_keypoints_val_sigma_V_q0 = keypoints0_val_sigma_V_q0.read();
        } else if (esl_seteq<1,1,1>(tmp_422_i_reg_777.read(), ap_const_lv1_0)) {
            grp_detect_fu_268_keypoints_val_sigma_V_q0 = keypoints1_val_sigma_V_q0.read();
        } else {
            grp_detect_fu_268_keypoints_val_sigma_V_q0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
        }
    } else {
        grp_detect_fu_268_keypoints_val_sigma_V_q0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void compute::thread_grp_detect_fu_268_src_cols_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        if (esl_seteq<1,1,1>(tmp_422_i_reg_777.read(), ap_const_lv1_1)) {
            grp_detect_fu_268_src_cols_read = src0_cols_read_reg_744.read();
        } else if (esl_seteq<1,1,1>(tmp_422_i_reg_777.read(), ap_const_lv1_0)) {
            grp_detect_fu_268_src_cols_read = src1_cols_read_reg_754.read();
        } else {
            grp_detect_fu_268_src_cols_read =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
        }
    } else {
        grp_detect_fu_268_src_cols_read =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void compute::thread_grp_detect_fu_268_src_rows_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        if (esl_seteq<1,1,1>(tmp_422_i_reg_777.read(), ap_const_lv1_1)) {
            grp_detect_fu_268_src_rows_read = src0_rows_read_reg_739.read();
        } else if (esl_seteq<1,1,1>(tmp_422_i_reg_777.read(), ap_const_lv1_0)) {
            grp_detect_fu_268_src_rows_read = src1_rows_read_reg_749.read();
        } else {
            grp_detect_fu_268_src_rows_read =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
        }
    } else {
        grp_detect_fu_268_src_rows_read =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void compute::thread_grp_detect_fu_268_src_val_q0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        if (esl_seteq<1,1,1>(tmp_422_i_reg_777.read(), ap_const_lv1_1)) {
            grp_detect_fu_268_src_val_q0 = src0_val_q0.read();
        } else if (esl_seteq<1,1,1>(tmp_422_i_reg_777.read(), ap_const_lv1_0)) {
            grp_detect_fu_268_src_val_q0 = src1_val_q0.read();
        } else {
            grp_detect_fu_268_src_val_q0 =  (sc_lv<8>) ("XXXXXXXX");
        }
    } else {
        grp_detect_fu_268_src_val_q0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void compute::thread_grp_match_511_s_fu_340_ap_start() {
    grp_match_511_s_fu_340_ap_start = grp_match_511_s_fu_340_ap_start_reg.read();
}

void compute::thread_i_fu_392_p2() {
    i_fu_392_p2 = (!i_i_reg_257.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(i_i_reg_257.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void compute::thread_icmp_fu_557_p2() {
    icmp_fu_557_p2 = (!tmp_1117_fu_547_p4.read().is_01() || !ap_const_lv7_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_1117_fu_547_p4.read() == ap_const_lv7_0);
}

void compute::thread_ireg_V_fu_404_p1() {
    ireg_V_fu_404_p1 = d_assign_fu_357_p1.read();
}

void compute::thread_keypoints0_length_out_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        keypoints0_length_out_blk_n = keypoints0_length_out_full_n.read();
    } else {
        keypoints0_length_out_blk_n = ap_const_logic_1;
    }
}

void compute::thread_keypoints0_length_out_din() {
    keypoints0_length_out_din = keypoints0_length_dc_2_fu_184.read();
}

void compute::thread_keypoints0_length_out_write() {
    if ((!(esl_seteq<1,1,1>(grp_match_511_s_fu_340_ap_done.read(), ap_const_logic_0) || esl_seteq<1,1,1>(matches_length_out_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(keypoints1_length_out_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(keypoints0_length_out_full_n.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        keypoints0_length_out_write = ap_const_logic_1;
    } else {
        keypoints0_length_out_write = ap_const_logic_0;
    }
}

void compute::thread_keypoints0_val_angle_V_address0() {
    keypoints0_val_angle_V_address0 = grp_detect_fu_268_keypoints_val_angle_V_address0.read();
}

void compute::thread_keypoints0_val_angle_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_422_i_reg_777.read(), ap_const_lv1_1))) {
        keypoints0_val_angle_V_ce0 = grp_detect_fu_268_keypoints_val_angle_V_ce0.read();
    } else {
        keypoints0_val_angle_V_ce0 = ap_const_logic_0;
    }
}

void compute::thread_keypoints0_val_angle_V_d0() {
    keypoints0_val_angle_V_d0 = grp_detect_fu_268_keypoints_val_angle_V_d0.read();
}

void compute::thread_keypoints0_val_angle_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_422_i_reg_777.read(), ap_const_lv1_1))) {
        keypoints0_val_angle_V_we0 = grp_detect_fu_268_keypoints_val_angle_V_we0.read();
    } else {
        keypoints0_val_angle_V_we0 = ap_const_logic_0;
    }
}

void compute::thread_keypoints0_val_layer_address0() {
    keypoints0_val_layer_address0 = grp_detect_fu_268_keypoints_val_layer_address0.read();
}

void compute::thread_keypoints0_val_layer_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_422_i_reg_777.read(), ap_const_lv1_1))) {
        keypoints0_val_layer_ce0 = grp_detect_fu_268_keypoints_val_layer_ce0.read();
    } else {
        keypoints0_val_layer_ce0 = ap_const_logic_0;
    }
}

void compute::thread_keypoints0_val_layer_d0() {
    keypoints0_val_layer_d0 = grp_detect_fu_268_keypoints_val_layer_d0.read();
}

void compute::thread_keypoints0_val_layer_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_422_i_reg_777.read(), ap_const_lv1_1))) {
        keypoints0_val_layer_we0 = grp_detect_fu_268_keypoints_val_layer_we0.read();
    } else {
        keypoints0_val_layer_we0 = ap_const_logic_0;
    }
}

void compute::thread_keypoints0_val_octave_address0() {
    keypoints0_val_octave_address0 = grp_detect_fu_268_keypoints_val_octave_address0.read();
}

void compute::thread_keypoints0_val_octave_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_422_i_reg_777.read(), ap_const_lv1_1))) {
        keypoints0_val_octave_ce0 = grp_detect_fu_268_keypoints_val_octave_ce0.read();
    } else {
        keypoints0_val_octave_ce0 = ap_const_logic_0;
    }
}

void compute::thread_keypoints0_val_octave_d0() {
    keypoints0_val_octave_d0 = grp_detect_fu_268_keypoints_val_octave_d0.read();
}

void compute::thread_keypoints0_val_octave_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_422_i_reg_777.read(), ap_const_lv1_1))) {
        keypoints0_val_octave_we0 = grp_detect_fu_268_keypoints_val_octave_we0.read();
    } else {
        keypoints0_val_octave_we0 = ap_const_logic_0;
    }
}

void compute::thread_keypoints0_val_pt_x_address0() {
    keypoints0_val_pt_x_address0 = grp_detect_fu_268_keypoints_val_pt_x_address0.read();
}

void compute::thread_keypoints0_val_pt_x_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_422_i_reg_777.read(), ap_const_lv1_1))) {
        keypoints0_val_pt_x_ce0 = grp_detect_fu_268_keypoints_val_pt_x_ce0.read();
    } else {
        keypoints0_val_pt_x_ce0 = ap_const_logic_0;
    }
}

void compute::thread_keypoints0_val_pt_x_d0() {
    keypoints0_val_pt_x_d0 = grp_detect_fu_268_keypoints_val_pt_x_d0.read();
}

void compute::thread_keypoints0_val_pt_x_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_422_i_reg_777.read(), ap_const_lv1_1))) {
        keypoints0_val_pt_x_we0 = grp_detect_fu_268_keypoints_val_pt_x_we0.read();
    } else {
        keypoints0_val_pt_x_we0 = ap_const_logic_0;
    }
}

void compute::thread_keypoints0_val_pt_y_address0() {
    keypoints0_val_pt_y_address0 = grp_detect_fu_268_keypoints_val_pt_y_address0.read();
}

void compute::thread_keypoints0_val_pt_y_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_422_i_reg_777.read(), ap_const_lv1_1))) {
        keypoints0_val_pt_y_ce0 = grp_detect_fu_268_keypoints_val_pt_y_ce0.read();
    } else {
        keypoints0_val_pt_y_ce0 = ap_const_logic_0;
    }
}

void compute::thread_keypoints0_val_pt_y_d0() {
    keypoints0_val_pt_y_d0 = grp_detect_fu_268_keypoints_val_pt_y_d0.read();
}

void compute::thread_keypoints0_val_pt_y_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_422_i_reg_777.read(), ap_const_lv1_1))) {
        keypoints0_val_pt_y_we0 = grp_detect_fu_268_keypoints_val_pt_y_we0.read();
    } else {
        keypoints0_val_pt_y_we0 = ap_const_logic_0;
    }
}

void compute::thread_keypoints0_val_sigma_V_address0() {
    keypoints0_val_sigma_V_address0 = grp_detect_fu_268_keypoints_val_sigma_V_address0.read();
}

void compute::thread_keypoints0_val_sigma_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_422_i_reg_777.read(), ap_const_lv1_1))) {
        keypoints0_val_sigma_V_ce0 = grp_detect_fu_268_keypoints_val_sigma_V_ce0.read();
    } else {
        keypoints0_val_sigma_V_ce0 = ap_const_logic_0;
    }
}

void compute::thread_keypoints0_val_sigma_V_d0() {
    keypoints0_val_sigma_V_d0 = grp_detect_fu_268_keypoints_val_sigma_V_d0.read();
}

void compute::thread_keypoints0_val_sigma_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_422_i_reg_777.read(), ap_const_lv1_1))) {
        keypoints0_val_sigma_V_we0 = grp_detect_fu_268_keypoints_val_sigma_V_we0.read();
    } else {
        keypoints0_val_sigma_V_we0 = ap_const_logic_0;
    }
}

void compute::thread_keypoints1_length_out_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        keypoints1_length_out_blk_n = keypoints1_length_out_full_n.read();
    } else {
        keypoints1_length_out_blk_n = ap_const_logic_1;
    }
}

void compute::thread_keypoints1_length_out_din() {
    keypoints1_length_out_din = keypoints1_length_dc_2_fu_180.read();
}

void compute::thread_keypoints1_length_out_write() {
    if ((!(esl_seteq<1,1,1>(grp_match_511_s_fu_340_ap_done.read(), ap_const_logic_0) || esl_seteq<1,1,1>(matches_length_out_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(keypoints1_length_out_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(keypoints0_length_out_full_n.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        keypoints1_length_out_write = ap_const_logic_1;
    } else {
        keypoints1_length_out_write = ap_const_logic_0;
    }
}

void compute::thread_keypoints1_val_angle_V_address0() {
    keypoints1_val_angle_V_address0 = grp_detect_fu_268_keypoints_val_angle_V_address0.read();
}

void compute::thread_keypoints1_val_angle_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_422_i_reg_777.read(), ap_const_lv1_0))) {
        keypoints1_val_angle_V_ce0 = grp_detect_fu_268_keypoints_val_angle_V_ce0.read();
    } else {
        keypoints1_val_angle_V_ce0 = ap_const_logic_0;
    }
}

void compute::thread_keypoints1_val_angle_V_d0() {
    keypoints1_val_angle_V_d0 = grp_detect_fu_268_keypoints_val_angle_V_d0.read();
}

void compute::thread_keypoints1_val_angle_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_422_i_reg_777.read(), ap_const_lv1_0))) {
        keypoints1_val_angle_V_we0 = grp_detect_fu_268_keypoints_val_angle_V_we0.read();
    } else {
        keypoints1_val_angle_V_we0 = ap_const_logic_0;
    }
}

void compute::thread_keypoints1_val_layer_address0() {
    keypoints1_val_layer_address0 = grp_detect_fu_268_keypoints_val_layer_address0.read();
}

void compute::thread_keypoints1_val_layer_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_422_i_reg_777.read(), ap_const_lv1_0))) {
        keypoints1_val_layer_ce0 = grp_detect_fu_268_keypoints_val_layer_ce0.read();
    } else {
        keypoints1_val_layer_ce0 = ap_const_logic_0;
    }
}

void compute::thread_keypoints1_val_layer_d0() {
    keypoints1_val_layer_d0 = grp_detect_fu_268_keypoints_val_layer_d0.read();
}

void compute::thread_keypoints1_val_layer_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_422_i_reg_777.read(), ap_const_lv1_0))) {
        keypoints1_val_layer_we0 = grp_detect_fu_268_keypoints_val_layer_we0.read();
    } else {
        keypoints1_val_layer_we0 = ap_const_logic_0;
    }
}

void compute::thread_keypoints1_val_octave_address0() {
    keypoints1_val_octave_address0 = grp_detect_fu_268_keypoints_val_octave_address0.read();
}

void compute::thread_keypoints1_val_octave_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_422_i_reg_777.read(), ap_const_lv1_0))) {
        keypoints1_val_octave_ce0 = grp_detect_fu_268_keypoints_val_octave_ce0.read();
    } else {
        keypoints1_val_octave_ce0 = ap_const_logic_0;
    }
}

void compute::thread_keypoints1_val_octave_d0() {
    keypoints1_val_octave_d0 = grp_detect_fu_268_keypoints_val_octave_d0.read();
}

void compute::thread_keypoints1_val_octave_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_422_i_reg_777.read(), ap_const_lv1_0))) {
        keypoints1_val_octave_we0 = grp_detect_fu_268_keypoints_val_octave_we0.read();
    } else {
        keypoints1_val_octave_we0 = ap_const_logic_0;
    }
}

void compute::thread_keypoints1_val_pt_x_address0() {
    keypoints1_val_pt_x_address0 = grp_detect_fu_268_keypoints_val_pt_x_address0.read();
}

void compute::thread_keypoints1_val_pt_x_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_422_i_reg_777.read(), ap_const_lv1_0))) {
        keypoints1_val_pt_x_ce0 = grp_detect_fu_268_keypoints_val_pt_x_ce0.read();
    } else {
        keypoints1_val_pt_x_ce0 = ap_const_logic_0;
    }
}

void compute::thread_keypoints1_val_pt_x_d0() {
    keypoints1_val_pt_x_d0 = grp_detect_fu_268_keypoints_val_pt_x_d0.read();
}

void compute::thread_keypoints1_val_pt_x_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_422_i_reg_777.read(), ap_const_lv1_0))) {
        keypoints1_val_pt_x_we0 = grp_detect_fu_268_keypoints_val_pt_x_we0.read();
    } else {
        keypoints1_val_pt_x_we0 = ap_const_logic_0;
    }
}

void compute::thread_keypoints1_val_pt_y_address0() {
    keypoints1_val_pt_y_address0 = grp_detect_fu_268_keypoints_val_pt_y_address0.read();
}

void compute::thread_keypoints1_val_pt_y_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_422_i_reg_777.read(), ap_const_lv1_0))) {
        keypoints1_val_pt_y_ce0 = grp_detect_fu_268_keypoints_val_pt_y_ce0.read();
    } else {
        keypoints1_val_pt_y_ce0 = ap_const_logic_0;
    }
}

void compute::thread_keypoints1_val_pt_y_d0() {
    keypoints1_val_pt_y_d0 = grp_detect_fu_268_keypoints_val_pt_y_d0.read();
}

void compute::thread_keypoints1_val_pt_y_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_422_i_reg_777.read(), ap_const_lv1_0))) {
        keypoints1_val_pt_y_we0 = grp_detect_fu_268_keypoints_val_pt_y_we0.read();
    } else {
        keypoints1_val_pt_y_we0 = ap_const_logic_0;
    }
}

void compute::thread_keypoints1_val_sigma_V_address0() {
    keypoints1_val_sigma_V_address0 = grp_detect_fu_268_keypoints_val_sigma_V_address0.read();
}

void compute::thread_keypoints1_val_sigma_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_422_i_reg_777.read(), ap_const_lv1_0))) {
        keypoints1_val_sigma_V_ce0 = grp_detect_fu_268_keypoints_val_sigma_V_ce0.read();
    } else {
        keypoints1_val_sigma_V_ce0 = ap_const_logic_0;
    }
}

void compute::thread_keypoints1_val_sigma_V_d0() {
    keypoints1_val_sigma_V_d0 = grp_detect_fu_268_keypoints_val_sigma_V_d0.read();
}

void compute::thread_keypoints1_val_sigma_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_422_i_reg_777.read(), ap_const_lv1_0))) {
        keypoints1_val_sigma_V_we0 = grp_detect_fu_268_keypoints_val_sigma_V_we0.read();
    } else {
        keypoints1_val_sigma_V_we0 = ap_const_logic_0;
    }
}

void compute::thread_man_V_5_fu_482_p2() {
    man_V_5_fu_482_p2 = (!ap_const_lv54_0.is_01() || !p_Result_s_fu_478_p1.read().is_01())? sc_lv<54>(): (sc_biguint<54>(ap_const_lv54_0) - sc_biguint<54>(p_Result_s_fu_478_p1.read()));
}

void compute::thread_man_V_6_fu_488_p3() {
    man_V_6_fu_488_p3 = (!isneg_reg_781.read()[0].is_01())? sc_lv<54>(): ((isneg_reg_781.read()[0].to_bool())? man_V_5_fu_482_p2.read(): p_Result_s_fu_478_p1.read());
}

void compute::thread_matches_length_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        matches_length_blk_n = matches_length_empty_n.read();
    } else {
        matches_length_blk_n = ap_const_logic_1;
    }
}

void compute::thread_matches_length_out_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        matches_length_out_blk_n = matches_length_out_full_n.read();
    } else {
        matches_length_out_blk_n = ap_const_logic_1;
    }
}

void compute::thread_matches_length_out_din() {
    matches_length_out_din = grp_match_511_s_fu_340_ap_return.read();
}

void compute::thread_matches_length_out_write() {
    if ((!(esl_seteq<1,1,1>(grp_match_511_s_fu_340_ap_done.read(), ap_const_logic_0) || esl_seteq<1,1,1>(matches_length_out_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(keypoints1_length_out_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(keypoints0_length_out_full_n.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        matches_length_out_write = ap_const_logic_1;
    } else {
        matches_length_out_write = ap_const_logic_0;
    }
}

void compute::thread_matches_length_read() {
    if ((!(esl_seteq<1,1,1>(thresh_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(src1_cols_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(src1_rows_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(src0_cols_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(src0_rows_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(matches_length_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(descriptors1_length_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(descriptors0_length_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        matches_length_read = ap_const_logic_1;
    } else {
        matches_length_read = ap_const_logic_0;
    }
}

void compute::thread_matches_val_idx0_address0() {
    matches_val_idx0_address0 = grp_match_511_s_fu_340_matches_val_idx0_address0.read();
}

void compute::thread_matches_val_idx0_ce0() {
    matches_val_idx0_ce0 = grp_match_511_s_fu_340_matches_val_idx0_ce0.read();
}

void compute::thread_matches_val_idx0_d0() {
    matches_val_idx0_d0 = grp_match_511_s_fu_340_matches_val_idx0_d0.read();
}

void compute::thread_matches_val_idx0_we0() {
    matches_val_idx0_we0 = grp_match_511_s_fu_340_matches_val_idx0_we0.read();
}

void compute::thread_matches_val_idx1_address0() {
    matches_val_idx1_address0 = grp_match_511_s_fu_340_matches_val_idx1_address0.read();
}

void compute::thread_matches_val_idx1_ce0() {
    matches_val_idx1_ce0 = grp_match_511_s_fu_340_matches_val_idx1_ce0.read();
}

void compute::thread_matches_val_idx1_d0() {
    matches_val_idx1_d0 = grp_match_511_s_fu_340_matches_val_idx1_d0.read();
}

void compute::thread_matches_val_idx1_we0() {
    matches_val_idx1_we0 = grp_match_511_s_fu_340_matches_val_idx1_we0.read();
}

void compute::thread_newSel15_fu_668_p3() {
    newSel15_fu_668_p3 = (!sel_tmp9_fu_624_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp9_fu_624_p2.read()[0].to_bool())? tmp_435_i_fu_577_p3.read(): tmp_1116_fu_537_p1.read());
}

void compute::thread_newSel16_fu_682_p3() {
    newSel16_fu_682_p3 = (!or_cond_fu_662_p2.read()[0].is_01())? sc_lv<32>(): ((or_cond_fu_662_p2.read()[0].to_bool())? newSel_fu_654_p3.read(): newSel15_fu_668_p3.read());
}

void compute::thread_newSel17_fu_696_p3() {
    newSel17_fu_696_p3 = (!or_cond4_fu_690_p2.read()[0].is_01())? sc_lv<32>(): ((or_cond4_fu_690_p2.read()[0].to_bool())? newSel16_fu_682_p3.read(): ap_const_lv32_0);
}

void compute::thread_newSel_fu_654_p3() {
    newSel_fu_654_p3 = (!sel_tmp22_fu_648_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp22_fu_648_p2.read()[0].to_bool())? tmp_436_i_fu_584_p2.read(): tmp_1118_fu_573_p1.read());
}

void compute::thread_or_cond3_fu_676_p2() {
    or_cond3_fu_676_p2 = (sel_tmp9_fu_624_p2.read() | sel_tmp2_fu_595_p2.read());
}

void compute::thread_or_cond4_fu_690_p2() {
    or_cond4_fu_690_p2 = (or_cond_fu_662_p2.read() | or_cond3_fu_676_p2.read());
}

void compute::thread_or_cond_fu_662_p2() {
    or_cond_fu_662_p2 = (sel_tmp22_fu_648_p2.read() | sel_tmp15_fu_630_p2.read());
}

void compute::thread_p_Result_s_fu_478_p1() {
    p_Result_s_fu_478_p1 = esl_zext<54,53>(tmp_i_204_fu_471_p3.read());
}

void compute::thread_sel_tmp15_fu_630_p2() {
    sel_tmp15_fu_630_p2 = (sel_tmp7_fu_612_p2.read() & tmp_429_i_fu_541_p2.read());
}

void compute::thread_sel_tmp1_fu_590_p2() {
    sel_tmp1_fu_590_p2 = (tmp_421_i_reg_797.read() ^ ap_const_lv1_1);
}

void compute::thread_sel_tmp21_demorgan_fu_636_p2() {
    sel_tmp21_demorgan_fu_636_p2 = (sel_tmp6_demorgan_fu_601_p2.read() | tmp_424_i_fu_501_p2.read());
}

void compute::thread_sel_tmp21_fu_642_p2() {
    sel_tmp21_fu_642_p2 = (sel_tmp21_demorgan_fu_636_p2.read() ^ ap_const_lv1_1);
}

void compute::thread_sel_tmp22_fu_648_p2() {
    sel_tmp22_fu_648_p2 = (icmp_fu_557_p2.read() & sel_tmp21_fu_642_p2.read());
}

void compute::thread_sel_tmp2_fu_595_p2() {
    sel_tmp2_fu_595_p2 = (tmp_427_i_fu_531_p2.read() & sel_tmp1_fu_590_p2.read());
}

void compute::thread_sel_tmp6_demorgan_fu_601_p2() {
    sel_tmp6_demorgan_fu_601_p2 = (tmp_421_i_reg_797.read() | tmp_427_i_fu_531_p2.read());
}

void compute::thread_sel_tmp6_fu_606_p2() {
    sel_tmp6_fu_606_p2 = (sel_tmp6_demorgan_fu_601_p2.read() ^ ap_const_lv1_1);
}

void compute::thread_sel_tmp7_fu_612_p2() {
    sel_tmp7_fu_612_p2 = (tmp_424_i_fu_501_p2.read() & sel_tmp6_fu_606_p2.read());
}

void compute::thread_sel_tmp8_fu_618_p2() {
    sel_tmp8_fu_618_p2 = (tmp_429_i_fu_541_p2.read() ^ ap_const_lv1_1);
}

void compute::thread_sel_tmp9_fu_624_p2() {
    sel_tmp9_fu_624_p2 = (sel_tmp7_fu_612_p2.read() & sel_tmp8_fu_618_p2.read());
}

void compute::thread_sh_amt_cast_i_fu_527_p1() {
    sh_amt_cast_i_fu_527_p1 = esl_sext<32,12>(sh_amt_fu_519_p3.read());
}

void compute::thread_sh_amt_fu_519_p3() {
    sh_amt_fu_519_p3 = (!tmp_424_i_fu_501_p2.read()[0].is_01())? sc_lv<12>(): ((tmp_424_i_fu_501_p2.read()[0].to_bool())? tmp_425_i_fu_507_p2.read(): tmp_426_i_fu_513_p2.read());
}

void compute::thread_src0_cols_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        src0_cols_blk_n = src0_cols_empty_n.read();
    } else {
        src0_cols_blk_n = ap_const_logic_1;
    }
}

void compute::thread_src0_cols_read() {
    if ((!(esl_seteq<1,1,1>(thresh_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(src1_cols_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(src1_rows_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(src0_cols_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(src0_rows_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(matches_length_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(descriptors1_length_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(descriptors0_length_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        src0_cols_read = ap_const_logic_1;
    } else {
        src0_cols_read = ap_const_logic_0;
    }
}

void compute::thread_src0_rows_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        src0_rows_blk_n = src0_rows_empty_n.read();
    } else {
        src0_rows_blk_n = ap_const_logic_1;
    }
}

void compute::thread_src0_rows_read() {
    if ((!(esl_seteq<1,1,1>(thresh_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(src1_cols_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(src1_rows_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(src0_cols_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(src0_rows_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(matches_length_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(descriptors1_length_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(descriptors0_length_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        src0_rows_read = ap_const_logic_1;
    } else {
        src0_rows_read = ap_const_logic_0;
    }
}

void compute::thread_src0_val_address0() {
    src0_val_address0 = grp_detect_fu_268_src_val_address0.read();
}

void compute::thread_src0_val_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_422_i_reg_777.read(), ap_const_lv1_1))) {
        src0_val_ce0 = grp_detect_fu_268_src_val_ce0.read();
    } else {
        src0_val_ce0 = ap_const_logic_0;
    }
}

void compute::thread_src1_cols_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        src1_cols_blk_n = src1_cols_empty_n.read();
    } else {
        src1_cols_blk_n = ap_const_logic_1;
    }
}

void compute::thread_src1_cols_read() {
    if ((!(esl_seteq<1,1,1>(thresh_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(src1_cols_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(src1_rows_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(src0_cols_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(src0_rows_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(matches_length_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(descriptors1_length_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(descriptors0_length_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        src1_cols_read = ap_const_logic_1;
    } else {
        src1_cols_read = ap_const_logic_0;
    }
}

void compute::thread_src1_rows_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        src1_rows_blk_n = src1_rows_empty_n.read();
    } else {
        src1_rows_blk_n = ap_const_logic_1;
    }
}

void compute::thread_src1_rows_read() {
    if ((!(esl_seteq<1,1,1>(thresh_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(src1_cols_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(src1_rows_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(src0_cols_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(src0_rows_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(matches_length_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(descriptors1_length_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(descriptors0_length_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        src1_rows_read = ap_const_logic_1;
    } else {
        src1_rows_read = ap_const_logic_0;
    }
}

void compute::thread_src1_val_address0() {
    src1_val_address0 = grp_detect_fu_268_src_val_address0.read();
}

void compute::thread_src1_val_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_422_i_reg_777.read(), ap_const_lv1_0))) {
        src1_val_ce0 = grp_detect_fu_268_src_val_ce0.read();
    } else {
        src1_val_ce0 = ap_const_logic_0;
    }
}

void compute::thread_thresh_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        thresh_blk_n = thresh_empty_n.read();
    } else {
        thresh_blk_n = ap_const_logic_1;
    }
}

void compute::thread_thresh_read() {
    if ((!(esl_seteq<1,1,1>(thresh_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(src1_cols_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(src1_rows_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(src0_cols_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(src0_rows_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(matches_length_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(descriptors1_length_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(descriptors0_length_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        thresh_read = ap_const_logic_1;
    } else {
        thresh_read = ap_const_logic_0;
    }
}

void compute::thread_tmp_1115_fu_430_p1() {
    tmp_1115_fu_430_p1 = ireg_V_fu_404_p1.read().range(52-1, 0);
}

void compute::thread_tmp_1116_fu_537_p1() {
    tmp_1116_fu_537_p1 = man_V_6_fu_488_p3.read().range(32-1, 0);
}

void compute::thread_tmp_1117_fu_547_p4() {
    tmp_1117_fu_547_p4 = sh_amt_fu_519_p3.read().range(11, 5);
}

void compute::thread_tmp_1118_fu_573_p1() {
    tmp_1118_fu_573_p1 = tmp_433_i_fu_567_p2.read().range(32-1, 0);
}

void compute::thread_tmp_421_i_fu_434_p2() {
    tmp_421_i_fu_434_p2 = (!tmp_fu_408_p1.read().is_01() || !ap_const_lv63_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_fu_408_p1.read() == ap_const_lv63_0);
}

void compute::thread_tmp_422_i_fu_398_p2() {
    tmp_422_i_fu_398_p2 = (!i_i_reg_257.read().is_01() || !ap_const_lv2_0.is_01())? sc_lv<1>(): sc_lv<1>(i_i_reg_257.read() == ap_const_lv2_0);
}

void compute::thread_tmp_424_i_fu_501_p2() {
    tmp_424_i_fu_501_p2 = (!F2_fu_495_p2.read().is_01() || !ap_const_lv12_10.is_01())? sc_lv<1>(): (sc_bigint<12>(F2_fu_495_p2.read()) > sc_bigint<12>(ap_const_lv12_10));
}

void compute::thread_tmp_425_i_fu_507_p2() {
    tmp_425_i_fu_507_p2 = (!ap_const_lv12_FF0.is_01() || !F2_fu_495_p2.read().is_01())? sc_lv<12>(): (sc_bigint<12>(ap_const_lv12_FF0) + sc_biguint<12>(F2_fu_495_p2.read()));
}

void compute::thread_tmp_426_i_fu_513_p2() {
    tmp_426_i_fu_513_p2 = (!ap_const_lv12_10.is_01() || !F2_fu_495_p2.read().is_01())? sc_lv<12>(): (sc_biguint<12>(ap_const_lv12_10) - sc_biguint<12>(F2_fu_495_p2.read()));
}

void compute::thread_tmp_427_i_fu_531_p2() {
    tmp_427_i_fu_531_p2 = (!F2_fu_495_p2.read().is_01() || !ap_const_lv12_10.is_01())? sc_lv<1>(): sc_lv<1>(F2_fu_495_p2.read() == ap_const_lv12_10);
}

void compute::thread_tmp_429_i_fu_541_p2() {
    tmp_429_i_fu_541_p2 = (!sh_amt_fu_519_p3.read().is_01() || !ap_const_lv12_36.is_01())? sc_lv<1>(): (sc_biguint<12>(sh_amt_fu_519_p3.read()) < sc_biguint<12>(ap_const_lv12_36));
}

void compute::thread_tmp_432_i_fu_563_p1() {
    tmp_432_i_fu_563_p1 = esl_zext<54,32>(sh_amt_cast_i_fu_527_p1.read());
}

void compute::thread_tmp_433_i_fu_567_p2() {
    tmp_433_i_fu_567_p2 = (!man_V_6_fu_488_p3.read().is_01() || !tmp_432_i_fu_563_p1.read().is_01())? sc_lv<54>(): sc_bigint<54>(man_V_6_fu_488_p3.read()) >> (unsigned short)tmp_432_i_fu_563_p1.read().to_uint();
}

void compute::thread_tmp_435_i_fu_577_p3() {
    tmp_435_i_fu_577_p3 = (!isneg_reg_781.read()[0].is_01())? sc_lv<32>(): ((isneg_reg_781.read()[0].to_bool())? ap_const_lv32_FFFFFFFF: ap_const_lv32_0);
}

void compute::thread_tmp_436_i_fu_584_p2() {
    tmp_436_i_fu_584_p2 = (!sh_amt_cast_i_fu_527_p1.read().is_01())? sc_lv<32>(): tmp_1116_fu_537_p1.read() << (unsigned short)sh_amt_cast_i_fu_527_p1.read().to_uint();
}

void compute::thread_tmp_fu_408_p1() {
    tmp_fu_408_p1 = ireg_V_fu_404_p1.read().range(63-1, 0);
}

void compute::thread_tmp_i_204_fu_471_p3() {
    tmp_i_204_fu_471_p3 = esl_concat<1,52>(ap_const_lv1_1, tmp_1115_reg_792.read());
}

void compute::thread_tmp_i_fu_468_p1() {
    tmp_i_fu_468_p1 = esl_zext<12,11>(exp_tmp_V_reg_787.read());
}

void compute::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((!(esl_seteq<1,1,1>(thresh_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(src1_cols_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(src1_rows_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(src0_cols_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(src0_rows_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(matches_length_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(descriptors1_length_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(descriptors0_length_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(exitcond_i_fu_386_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state3_on_subcall_done.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            if ((!(esl_seteq<1,1,1>(grp_match_511_s_fu_340_ap_done.read(), ap_const_logic_0) || esl_seteq<1,1,1>(matches_length_out_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(keypoints1_length_out_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(keypoints0_length_out_full_n.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<5>) ("XXXXX");
            break;
    }
}

}

