// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Result2Array2D_511_1_HH_
#define _Result2Array2D_511_1_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct Result2Array2D_511_1 : public sc_module {
    // Port declarations 24
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<9> > keypoints_val_pt_x_address0;
    sc_out< sc_logic > keypoints_val_pt_x_ce0;
    sc_in< sc_lv<16> > keypoints_val_pt_x_q0;
    sc_out< sc_lv<9> > keypoints_val_pt_y_address0;
    sc_out< sc_logic > keypoints_val_pt_y_ce0;
    sc_in< sc_lv<16> > keypoints_val_pt_y_q0;
    sc_in< sc_lv<32> > keypoints_length_dout;
    sc_in< sc_logic > keypoints_length_empty_n;
    sc_out< sc_logic > keypoints_length_read;
    sc_out< sc_lv<11> > dst_val_address0;
    sc_out< sc_logic > dst_val_ce0;
    sc_out< sc_logic > dst_val_we0;
    sc_out< sc_lv<8> > dst_val_d0;
    sc_out< sc_lv<11> > dst_val_address1;
    sc_out< sc_logic > dst_val_ce1;
    sc_out< sc_logic > dst_val_we1;
    sc_out< sc_lv<8> > dst_val_d1;


    // Module declarations
    Result2Array2D_511_1(sc_module_name name);
    SC_HAS_PROCESS(Result2Array2D_511_1);

    ~Result2Array2D_511_1();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > keypoints_length_blk_n;
    sc_signal< sc_lv<8> > j_i_reg_214;
    sc_signal< sc_lv<32> > length_reg_569;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<8> > tmp_fu_244_p1;
    sc_signal< sc_lv<8> > tmp_reg_574;
    sc_signal< sc_lv<1> > exitcond4_i_fu_248_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<5> > i_fu_254_p2;
    sc_signal< sc_lv<5> > i_reg_583;
    sc_signal< sc_lv<11> > tmp_i_fu_264_p3;
    sc_signal< sc_lv<11> > tmp_i_reg_588;
    sc_signal< sc_lv<13> > tmp_339_cast_fu_280_p1;
    sc_signal< sc_lv<13> > tmp_339_cast_reg_593;
    sc_signal< sc_lv<1> > exitcond_i_fu_288_p2;
    sc_signal< sc_lv<1> > exitcond_i_reg_605;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<8> > j_fu_294_p2;
    sc_signal< sc_lv<8> > j_reg_609;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<1> > icmp_fu_322_p2;
    sc_signal< sc_lv<1> > icmp_reg_614;
    sc_signal< sc_lv<1> > grp_fu_226_p2;
    sc_signal< sc_lv<1> > tmp_1019_i_reg_618;
    sc_signal< sc_lv<1> > grp_fu_231_p2;
    sc_signal< sc_lv<1> > tmp_1026_i_reg_622;
    sc_signal< sc_lv<1> > grp_fu_236_p2;
    sc_signal< sc_lv<1> > tmp_1034_i_reg_626;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_lv<5> > i_i_reg_203;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<8> > ap_phi_mux_j_i_phi_fu_218_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<64> > tmp_1041_i_fu_344_p1;
    sc_signal< sc_lv<64> > tmp_1023_i_fu_349_p1;
    sc_signal< sc_lv<64> > tmp_345_cast_fu_374_p1;
    sc_signal< sc_lv<64> > tmp_344_cast_fu_399_p1;
    sc_signal< sc_lv<64> > tmp_342_cast_fu_424_p1;
    sc_signal< sc_lv<64> > tmp_340_cast_fu_438_p1;
    sc_signal< sc_lv<64> > tmp_347_cast_fu_470_p1;
    sc_signal< sc_lv<64> > tmp_346_cast_fu_489_p1;
    sc_signal< sc_lv<64> > tmp_343_cast_fu_522_p1;
    sc_signal< sc_lv<64> > tmp_341_cast_fu_541_p1;
    sc_signal< sc_lv<16> > y_1_fu_86;
    sc_signal< sc_lv<16> > x_1_fu_90;
    sc_signal< sc_lv<32> > length_1_fu_94;
    sc_signal< sc_lv<8> > tmp_1650_fu_475_p1;
    sc_signal< sc_lv<8> > tmp_1649_fu_527_p1;
    sc_signal< sc_lv<2> > byte_fu_300_p1;
    sc_signal< sc_lv<4> > tmp_1646_fu_260_p1;
    sc_signal< sc_lv<12> > tmp_338_fu_272_p3;
    sc_signal< sc_lv<11> > j_cast3_i_fu_284_p1;
    sc_signal< sc_lv<11> > idx_fu_307_p2;
    sc_signal< sc_lv<9> > tmp_1648_fu_312_p4;
    sc_signal< sc_lv<11> > tmp_1018_i_fu_328_p2;
    sc_signal< sc_lv<9> > tmp_741_i_fu_334_p4;
    sc_signal< sc_lv<13> > tmp_1040_i_cast_fu_365_p1;
    sc_signal< sc_lv<13> > tmp_345_fu_369_p2;
    sc_signal< sc_lv<13> > tmp_1037_i_cast_fu_390_p1;
    sc_signal< sc_lv<13> > tmp_344_fu_394_p2;
    sc_signal< sc_lv<13> > tmp_1029_i_cast_fu_415_p1;
    sc_signal< sc_lv<13> > tmp_342_fu_419_p2;
    sc_signal< sc_lv<13> > tmp_1021_i_cast_fu_429_p1;
    sc_signal< sc_lv<13> > tmp_340_fu_433_p2;
    sc_signal< sc_lv<13> > tmp_1046_i_cast_fu_461_p1;
    sc_signal< sc_lv<13> > tmp_347_fu_465_p2;
    sc_signal< sc_lv<13> > tmp_1043_i_cast_fu_480_p1;
    sc_signal< sc_lv<13> > tmp_346_fu_484_p2;
    sc_signal< sc_lv<13> > tmp_1033_i_cast_fu_513_p1;
    sc_signal< sc_lv<13> > tmp_343_fu_517_p2;
    sc_signal< sc_lv<13> > tmp_1025_i_cast_fu_532_p1;
    sc_signal< sc_lv<13> > tmp_341_fu_536_p2;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< bool > ap_condition_492;
    sc_signal< bool > ap_condition_495;
    sc_signal< bool > ap_condition_263;
    sc_signal< bool > ap_condition_503;
    sc_signal< bool > ap_condition_506;
    sc_signal< bool > ap_condition_501;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_state2;
    static const sc_lv<4> ap_ST_fsm_pp0_stage0;
    static const sc_lv<4> ap_ST_fsm_state5;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<8> ap_const_lv8_80;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<11> ap_const_lv11_7FC;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_F;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state5();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state3_pp0_stage0_iter0();
    void thread_ap_block_state4_pp0_stage0_iter1();
    void thread_ap_condition_263();
    void thread_ap_condition_492();
    void thread_ap_condition_495();
    void thread_ap_condition_501();
    void thread_ap_condition_503();
    void thread_ap_condition_506();
    void thread_ap_condition_pp0_exit_iter0_state3();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_j_i_phi_fu_218_p4();
    void thread_ap_ready();
    void thread_byte_fu_300_p1();
    void thread_dst_val_address0();
    void thread_dst_val_address1();
    void thread_dst_val_ce0();
    void thread_dst_val_ce1();
    void thread_dst_val_d0();
    void thread_dst_val_d1();
    void thread_dst_val_we0();
    void thread_dst_val_we1();
    void thread_exitcond4_i_fu_248_p2();
    void thread_exitcond_i_fu_288_p2();
    void thread_grp_fu_226_p2();
    void thread_grp_fu_231_p2();
    void thread_grp_fu_236_p2();
    void thread_i_fu_254_p2();
    void thread_icmp_fu_322_p2();
    void thread_idx_fu_307_p2();
    void thread_j_cast3_i_fu_284_p1();
    void thread_j_fu_294_p2();
    void thread_keypoints_length_blk_n();
    void thread_keypoints_length_read();
    void thread_keypoints_val_pt_x_address0();
    void thread_keypoints_val_pt_x_ce0();
    void thread_keypoints_val_pt_y_address0();
    void thread_keypoints_val_pt_y_ce0();
    void thread_tmp_1018_i_fu_328_p2();
    void thread_tmp_1021_i_cast_fu_429_p1();
    void thread_tmp_1023_i_fu_349_p1();
    void thread_tmp_1025_i_cast_fu_532_p1();
    void thread_tmp_1029_i_cast_fu_415_p1();
    void thread_tmp_1033_i_cast_fu_513_p1();
    void thread_tmp_1037_i_cast_fu_390_p1();
    void thread_tmp_1040_i_cast_fu_365_p1();
    void thread_tmp_1041_i_fu_344_p1();
    void thread_tmp_1043_i_cast_fu_480_p1();
    void thread_tmp_1046_i_cast_fu_461_p1();
    void thread_tmp_1646_fu_260_p1();
    void thread_tmp_1648_fu_312_p4();
    void thread_tmp_1649_fu_527_p1();
    void thread_tmp_1650_fu_475_p1();
    void thread_tmp_338_fu_272_p3();
    void thread_tmp_339_cast_fu_280_p1();
    void thread_tmp_340_cast_fu_438_p1();
    void thread_tmp_340_fu_433_p2();
    void thread_tmp_341_cast_fu_541_p1();
    void thread_tmp_341_fu_536_p2();
    void thread_tmp_342_cast_fu_424_p1();
    void thread_tmp_342_fu_419_p2();
    void thread_tmp_343_cast_fu_522_p1();
    void thread_tmp_343_fu_517_p2();
    void thread_tmp_344_cast_fu_399_p1();
    void thread_tmp_344_fu_394_p2();
    void thread_tmp_345_cast_fu_374_p1();
    void thread_tmp_345_fu_369_p2();
    void thread_tmp_346_cast_fu_489_p1();
    void thread_tmp_346_fu_484_p2();
    void thread_tmp_347_cast_fu_470_p1();
    void thread_tmp_347_fu_465_p2();
    void thread_tmp_741_i_fu_334_p4();
    void thread_tmp_fu_244_p1();
    void thread_tmp_i_fu_264_p3();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
