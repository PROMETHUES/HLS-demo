// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Resize (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        src_val_V_address0,
        src_val_V_ce0,
        src_val_V_q0,
        src_rows_read,
        src_cols_read,
        dst_val_V_address0,
        dst_val_V_ce0,
        dst_val_V_we0,
        dst_val_V_d0,
        ap_return_0,
        ap_return_1
);

parameter    ap_ST_fsm_state1 = 10'd1;
parameter    ap_ST_fsm_state2 = 10'd2;
parameter    ap_ST_fsm_state3 = 10'd4;
parameter    ap_ST_fsm_state4 = 10'd8;
parameter    ap_ST_fsm_state5 = 10'd16;
parameter    ap_ST_fsm_state6 = 10'd32;
parameter    ap_ST_fsm_state7 = 10'd64;
parameter    ap_ST_fsm_state8 = 10'd128;
parameter    ap_ST_fsm_pp0_stage0 = 10'd256;
parameter    ap_ST_fsm_state11 = 10'd512;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [15:0] src_val_V_address0;
output   src_val_V_ce0;
input  [25:0] src_val_V_q0;
input  [31:0] src_rows_read;
input  [31:0] src_cols_read;
output  [15:0] dst_val_V_address0;
output   dst_val_V_ce0;
output   dst_val_V_we0;
output  [31:0] dst_val_V_d0;
output  [31:0] ap_return_0;
output  [31:0] ap_return_1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg src_val_V_ce0;
reg dst_val_V_ce0;
reg dst_val_V_we0;

(* fsm_encoding = "none" *) reg   [9:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [4:0] mask_table1687_address0;
reg    mask_table1687_ce0;
wire   [22:0] mask_table1687_q0;
wire   [4:0] mask_table1687_address1;
reg    mask_table1687_ce1;
wire   [22:0] mask_table1687_q1;
wire   [4:0] one_half_table2683_address0;
reg    one_half_table2683_ce0;
wire   [23:0] one_half_table2683_q0;
wire   [4:0] one_half_table2683_address1;
reg    one_half_table2683_ce1;
wire   [23:0] one_half_table2683_q1;
reg   [30:0] i_op_assign_9_reg_209;
wire   [17:0] tmp_1674_fu_238_p1;
reg   [17:0] tmp_1674_reg_1000;
wire   [31:0] grp_fu_230_p1;
reg   [31:0] tmp_reg_1005;
wire    ap_CS_fsm_state2;
wire   [31:0] grp_fu_234_p1;
reg   [31:0] tmp_s_reg_1010;
wire   [31:0] grp_fu_220_p2;
reg   [31:0] x_assign_reg_1015;
wire    ap_CS_fsm_state4;
wire   [31:0] grp_fu_225_p2;
reg   [31:0] x_assign_80_reg_1021;
wire   [31:0] t_V_61_fu_242_p1;
reg   [31:0] t_V_61_reg_1027;
wire    ap_CS_fsm_state5;
wire   [0:0] tmp_i_i_fu_255_p2;
reg   [0:0] tmp_i_i_reg_1033;
wire   [0:0] tmp_1685_i_i_fu_261_p2;
reg   [0:0] tmp_1685_i_i_reg_1039;
wire   [31:0] t_V_64_fu_283_p1;
reg   [31:0] t_V_64_reg_1054;
wire   [0:0] tmp_i_i4_fu_296_p2;
reg   [0:0] tmp_i_i4_reg_1060;
wire   [0:0] tmp_1685_i_i6_fu_302_p2;
reg   [0:0] tmp_1685_i_i6_reg_1066;
wire   [31:0] x_assign_s_fu_403_p3;
reg   [31:0] x_assign_s_reg_1081;
wire    ap_CS_fsm_state6;
wire   [31:0] x_assign_81_fu_489_p3;
reg   [31:0] x_assign_81_reg_1086;
wire   [31:0] p_Val2_318_fu_631_p3;
reg   [31:0] p_Val2_318_reg_1091;
wire    ap_CS_fsm_state7;
wire   [31:0] p_Val2_319_fu_774_p3;
reg   [31:0] p_Val2_319_reg_1097;
wire   [0:0] tmp_819_fu_786_p2;
wire    ap_CS_fsm_state8;
wire   [30:0] i_fu_791_p2;
reg   [30:0] i_reg_1107;
wire   [17:0] tmp_377_cast_fu_801_p3;
reg   [17:0] tmp_377_cast_reg_1112;
wire   [31:0] r_V_fu_821_p2;
reg   [31:0] r_V_reg_1117;
wire   [0:0] tmp_820_fu_841_p2;
reg   [0:0] tmp_820_reg_1123;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state9_pp0_stage0_iter0;
wire    ap_block_state10_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [30:0] j_fu_846_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [17:0] tmp_379_fu_856_p2;
reg   [17:0] tmp_379_reg_1132;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state9;
reg    ap_enable_reg_pp0_iter1;
reg   [30:0] i_op_assign_reg_198;
wire    ap_CS_fsm_state11;
wire   [63:0] tmp_1686_i_i_fu_277_p1;
wire   [63:0] tmp_1686_i_i8_fu_318_p1;
wire  signed [63:0] tmp_384_cast_fu_973_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] tmp_379_cast_fu_978_p1;
wire    ap_CS_fsm_state3;
wire   [7:0] loc_V_fu_245_p4;
wire   [4:0] index_V_fu_267_p4;
wire   [7:0] loc_V_52_fu_286_p4;
wire   [4:0] index_V_7_fu_308_p4;
wire   [0:0] p_Result_s_fu_324_p3;
wire   [31:0] one_half_i_cast_i_fu_339_p1;
wire   [31:0] p_Val2_296_fu_343_p2;
wire   [22:0] loc_V_49_fu_348_p1;
wire   [22:0] tmp_1688_i_i_fu_352_p2;
wire   [8:0] tmp_447_fu_364_p4;
wire   [22:0] xs_sig_V_fu_358_p2;
wire   [31:0] p_Result_382_fu_331_p3;
wire   [31:0] p_Result_383_fu_374_p3;
wire   [31:0] sel_tmp_v_i_fu_382_p3;
wire   [0:0] sel_tmp1_i_fu_393_p2;
wire   [0:0] sel_tmp2_i_fu_398_p2;
wire   [31:0] sel_tmp_i_fu_389_p1;
wire   [0:0] p_Result_371_fu_410_p3;
wire   [31:0] one_half_i_cast_i5_fu_425_p1;
wire   [31:0] p_Val2_308_fu_429_p2;
wire   [22:0] loc_V_53_fu_434_p1;
wire   [22:0] tmp_1688_i_i5_fu_438_p2;
wire   [8:0] tmp_451_fu_450_p4;
wire   [22:0] xs_sig_V_5_fu_444_p2;
wire   [31:0] p_Result_385_fu_417_p3;
wire   [31:0] p_Result_386_fu_460_p3;
wire   [31:0] sel_tmp_v_i5_fu_468_p3;
wire   [0:0] sel_tmp1_i5_fu_479_p2;
wire   [0:0] sel_tmp2_i5_fu_484_p2;
wire   [31:0] sel_tmp_i5_fu_475_p1;
wire   [31:0] p_Val2_298_fu_496_p1;
wire   [22:0] loc_V_51_fu_517_p1;
wire   [24:0] tmp_1701_i_i_i_fu_521_p4;
wire   [7:0] loc_V_50_fu_507_p4;
wire   [8:0] tmp_i_i_i_i_cast_fu_535_p1;
wire   [8:0] sh_assign_fu_539_p2;
wire   [7:0] tmp_1702_i_i_i_fu_553_p2;
wire   [0:0] isNeg_fu_545_p3;
wire  signed [8:0] tmp_1702_i_i_i_cast_fu_559_p1;
wire  signed [8:0] sh_assign_s_fu_563_p3;
wire  signed [31:0] sh_assign_6_i_i_i_ca_fu_571_p1;
wire  signed [24:0] sh_assign_6_i_i_i_ca_8_fu_575_p1;
wire   [78:0] tmp_1701_i_i_i_cast6_fu_531_p1;
wire   [78:0] tmp_1703_i_i_i_fu_579_p1;
wire   [24:0] tmp_1704_i_i_i_fu_583_p2;
wire   [0:0] tmp_1667_fu_595_p3;
wire   [78:0] tmp_1705_i_i_i_fu_589_p2;
wire   [31:0] tmp_369_fu_603_p1;
wire   [31:0] tmp_370_fu_607_p4;
wire   [31:0] p_Val2_300_fu_617_p3;
wire   [0:0] p_Result_384_fu_499_p3;
wire   [31:0] p_Val2_i_i_i_fu_625_p2;
wire   [31:0] p_Val2_310_fu_639_p1;
wire   [22:0] loc_V_55_fu_660_p1;
wire   [24:0] tmp_1701_i_i_i7_fu_664_p4;
wire   [7:0] loc_V_54_fu_650_p4;
wire   [8:0] tmp_i_i_i_i8_cast_fu_678_p1;
wire   [8:0] sh_assign_9_fu_682_p2;
wire   [7:0] tmp_1702_i_i_i4_fu_696_p2;
wire   [0:0] isNeg_7_fu_688_p3;
wire  signed [8:0] tmp_1702_i_i_i11_cas_fu_702_p1;
wire  signed [8:0] sh_assign_1_fu_706_p3;
wire  signed [31:0] sh_assign_6_i_i_i12_s_fu_714_p1;
wire  signed [24:0] sh_assign_6_i_i_i12_1_fu_718_p1;
wire   [78:0] tmp_1701_i_i_i7_cast_fu_674_p1;
wire   [78:0] tmp_1703_i_i_i4_fu_722_p1;
wire   [24:0] tmp_1704_i_i_i4_fu_726_p2;
wire   [0:0] tmp_1673_fu_738_p3;
wire   [78:0] tmp_1705_i_i_i4_fu_732_p2;
wire   [31:0] tmp_373_fu_746_p1;
wire   [31:0] tmp_374_fu_750_p4;
wire   [31:0] p_Val2_312_fu_760_p3;
wire   [0:0] p_Result_387_fu_642_p3;
wire   [31:0] p_Val2_i_i_i6_fu_768_p2;
wire   [31:0] i_op_assign_cast_fu_782_p1;
wire   [9:0] tmp_1675_fu_797_p1;
wire   [14:0] tmp_1676_fu_809_p1;
wire   [31:0] p_Val2_s_fu_813_p3;
wire   [31:0] i_op_assign_11_cast_fu_837_p1;
wire   [17:0] tmp_1677_fu_852_p1;
wire   [14:0] tmp_1678_fu_861_p1;
wire   [15:0] tmp_452_fu_873_p4;
wire   [31:0] p_Val2_316_fu_865_p3;
wire   [31:0] r_V_39_fu_886_p2;
wire   [15:0] tmp_453_fu_892_p4;
wire   [31:0] r0_fu_882_p1;
wire   [0:0] slt_fu_906_p2;
wire   [31:0] c0_fu_902_p1;
wire   [0:0] tmp_821_fu_917_p2;
wire   [17:0] tmp_1679_fu_922_p1;
wire   [17:0] tmp_1680_fu_926_p2;
wire   [0:0] rev6_fu_911_p2;
wire   [9:0] tmp_1682_fu_939_p1;
wire   [9:0] tmp_1683_fu_942_p4;
wire   [9:0] tmp_1684_fu_951_p3;
wire   [17:0] tmp_383_cast_fu_959_p3;
wire   [17:0] tmp_1681_fu_931_p3;
wire   [17:0] tmp_384_fu_967_p2;
reg   [9:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 10'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

Resize_mask_tablebkb #(
    .DataWidth( 23 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
mask_table1687_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mask_table1687_address0),
    .ce0(mask_table1687_ce0),
    .q0(mask_table1687_q0),
    .address1(mask_table1687_address1),
    .ce1(mask_table1687_ce1),
    .q1(mask_table1687_q1)
);

Resize_one_half_tcud #(
    .DataWidth( 24 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
one_half_table2683_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(one_half_table2683_address0),
    .ce0(one_half_table2683_ce0),
    .q0(one_half_table2683_q0),
    .address1(one_half_table2683_address1),
    .ce1(one_half_table2683_ce1),
    .q1(one_half_table2683_q1)
);

SIFT2_Core_fmul_3dEe #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
SIFT2_Core_fmul_3dEe_U50(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_reg_1005),
    .din1(32'd1056964608),
    .ce(1'b1),
    .dout(grp_fu_220_p2)
);

SIFT2_Core_fmul_3dEe #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
SIFT2_Core_fmul_3dEe_U51(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_s_reg_1010),
    .din1(32'd1056964608),
    .ce(1'b1),
    .dout(grp_fu_225_p2)
);

SIFT2_Core_sitofpeOg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
SIFT2_Core_sitofpeOg_U52(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(src_rows_read),
    .ce(1'b1),
    .dout(grp_fu_230_p1)
);

SIFT2_Core_sitofpeOg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
SIFT2_Core_sitofpeOg_U53(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(src_cols_read),
    .ce(1'b1),
    .dout(grp_fu_234_p1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state9) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state8) & (tmp_819_fu_786_p2 == 1'd1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state9) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state9);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state8) & (tmp_819_fu_786_p2 == 1'd1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (tmp_819_fu_786_p2 == 1'd1))) begin
        i_op_assign_9_reg_209 <= 31'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_820_fu_841_p2 == 1'd1))) begin
        i_op_assign_9_reg_209 <= j_fu_846_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        i_op_assign_reg_198 <= i_reg_1107;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        i_op_assign_reg_198 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        i_reg_1107 <= i_fu_791_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        p_Val2_318_reg_1091 <= p_Val2_318_fu_631_p3;
        p_Val2_319_reg_1097 <= p_Val2_319_fu_774_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (tmp_819_fu_786_p2 == 1'd1))) begin
        r_V_reg_1117[31 : 17] <= r_V_fu_821_p2[31 : 17];
        tmp_377_cast_reg_1112[17 : 8] <= tmp_377_cast_fu_801_p3[17 : 8];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        t_V_61_reg_1027 <= t_V_61_fu_242_p1;
        t_V_64_reg_1054 <= t_V_64_fu_283_p1;
        tmp_1685_i_i6_reg_1066 <= tmp_1685_i_i6_fu_302_p2;
        tmp_1685_i_i_reg_1039 <= tmp_1685_i_i_fu_261_p2;
        tmp_i_i4_reg_1060 <= tmp_i_i4_fu_296_p2;
        tmp_i_i_reg_1033 <= tmp_i_i_fu_255_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        tmp_1674_reg_1000 <= tmp_1674_fu_238_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_820_fu_841_p2 == 1'd1))) begin
        tmp_379_reg_1132 <= tmp_379_fu_856_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_820_reg_1123 <= tmp_820_fu_841_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        tmp_reg_1005 <= grp_fu_230_p1;
        tmp_s_reg_1010 <= grp_fu_234_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        x_assign_80_reg_1021 <= grp_fu_225_p2;
        x_assign_reg_1015 <= grp_fu_220_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        x_assign_81_reg_1086 <= x_assign_81_fu_489_p3;
        x_assign_s_reg_1081 <= x_assign_s_fu_403_p3;
    end
end

always @ (*) begin
    if ((tmp_820_fu_841_p2 == 1'd0)) begin
        ap_condition_pp0_exit_iter0_state9 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state9 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state8) & (tmp_819_fu_786_p2 == 1'd0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) & (tmp_819_fu_786_p2 == 1'd0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dst_val_V_ce0 = 1'b1;
    end else begin
        dst_val_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_820_reg_1123 == 1'd1))) begin
        dst_val_V_we0 = 1'b1;
    end else begin
        dst_val_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        mask_table1687_ce0 = 1'b1;
    end else begin
        mask_table1687_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        mask_table1687_ce1 = 1'b1;
    end else begin
        mask_table1687_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        one_half_table2683_ce0 = 1'b1;
    end else begin
        one_half_table2683_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        one_half_table2683_ce1 = 1'b1;
    end else begin
        one_half_table2683_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_val_V_ce0 = 1'b1;
    end else begin
        src_val_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (tmp_819_fu_786_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (tmp_820_fu_841_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (tmp_820_fu_841_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_return_0 = p_Val2_318_reg_1091;

assign ap_return_1 = p_Val2_319_reg_1097;

assign c0_fu_902_p1 = tmp_453_fu_892_p4;

assign dst_val_V_address0 = tmp_379_cast_fu_978_p1;

assign dst_val_V_d0 = $signed(src_val_V_q0);

assign i_fu_791_p2 = (i_op_assign_reg_198 + 31'd1);

assign i_op_assign_11_cast_fu_837_p1 = i_op_assign_9_reg_209;

assign i_op_assign_cast_fu_782_p1 = i_op_assign_reg_198;

assign index_V_7_fu_308_p4 = {{t_V_64_fu_283_p1[27:23]}};

assign index_V_fu_267_p4 = {{t_V_61_fu_242_p1[27:23]}};

assign isNeg_7_fu_688_p3 = sh_assign_9_fu_682_p2[32'd8];

assign isNeg_fu_545_p3 = sh_assign_fu_539_p2[32'd8];

assign j_fu_846_p2 = (i_op_assign_9_reg_209 + 31'd1);

assign loc_V_49_fu_348_p1 = p_Val2_296_fu_343_p2[22:0];

assign loc_V_50_fu_507_p4 = {{p_Val2_298_fu_496_p1[30:23]}};

assign loc_V_51_fu_517_p1 = p_Val2_298_fu_496_p1[22:0];

assign loc_V_52_fu_286_p4 = {{t_V_64_fu_283_p1[30:23]}};

assign loc_V_53_fu_434_p1 = p_Val2_308_fu_429_p2[22:0];

assign loc_V_54_fu_650_p4 = {{p_Val2_310_fu_639_p1[30:23]}};

assign loc_V_55_fu_660_p1 = p_Val2_310_fu_639_p1[22:0];

assign loc_V_fu_245_p4 = {{t_V_61_fu_242_p1[30:23]}};

assign mask_table1687_address0 = tmp_1686_i_i_fu_277_p1;

assign mask_table1687_address1 = tmp_1686_i_i8_fu_318_p1;

assign one_half_i_cast_i5_fu_425_p1 = one_half_table2683_q1;

assign one_half_i_cast_i_fu_339_p1 = one_half_table2683_q0;

assign one_half_table2683_address0 = tmp_1686_i_i_fu_277_p1;

assign one_half_table2683_address1 = tmp_1686_i_i8_fu_318_p1;

assign p_Result_371_fu_410_p3 = t_V_64_reg_1054[32'd31];

assign p_Result_382_fu_331_p3 = {{p_Result_s_fu_324_p3}, {31'd0}};

assign p_Result_383_fu_374_p3 = {{tmp_447_fu_364_p4}, {xs_sig_V_fu_358_p2}};

assign p_Result_384_fu_499_p3 = p_Val2_298_fu_496_p1[32'd31];

assign p_Result_385_fu_417_p3 = {{p_Result_371_fu_410_p3}, {31'd0}};

assign p_Result_386_fu_460_p3 = {{tmp_451_fu_450_p4}, {xs_sig_V_5_fu_444_p2}};

assign p_Result_387_fu_642_p3 = p_Val2_310_fu_639_p1[32'd31];

assign p_Result_s_fu_324_p3 = t_V_61_reg_1027[32'd31];

assign p_Val2_296_fu_343_p2 = (t_V_61_reg_1027 + one_half_i_cast_i_fu_339_p1);

assign p_Val2_298_fu_496_p1 = x_assign_s_reg_1081;

assign p_Val2_300_fu_617_p3 = ((isNeg_fu_545_p3[0:0] === 1'b1) ? tmp_369_fu_603_p1 : tmp_370_fu_607_p4);

assign p_Val2_308_fu_429_p2 = (t_V_64_reg_1054 + one_half_i_cast_i5_fu_425_p1);

assign p_Val2_310_fu_639_p1 = x_assign_81_reg_1086;

assign p_Val2_312_fu_760_p3 = ((isNeg_7_fu_688_p3[0:0] === 1'b1) ? tmp_373_fu_746_p1 : tmp_374_fu_750_p4);

assign p_Val2_316_fu_865_p3 = {{tmp_1678_fu_861_p1}, {17'd0}};

assign p_Val2_318_fu_631_p3 = ((p_Result_384_fu_499_p3[0:0] === 1'b1) ? p_Val2_i_i_i_fu_625_p2 : p_Val2_300_fu_617_p3);

assign p_Val2_319_fu_774_p3 = ((p_Result_387_fu_642_p3[0:0] === 1'b1) ? p_Val2_i_i_i6_fu_768_p2 : p_Val2_312_fu_760_p3);

assign p_Val2_i_i_i6_fu_768_p2 = (32'd0 - p_Val2_312_fu_760_p3);

assign p_Val2_i_i_i_fu_625_p2 = (32'd0 - p_Val2_300_fu_617_p3);

assign p_Val2_s_fu_813_p3 = {{tmp_1676_fu_809_p1}, {17'd0}};

assign r0_fu_882_p1 = tmp_452_fu_873_p4;

assign r_V_39_fu_886_p2 = (p_Val2_316_fu_865_p3 | 32'd32768);

assign r_V_fu_821_p2 = (p_Val2_s_fu_813_p3 | 32'd32768);

assign rev6_fu_911_p2 = (slt_fu_906_p2 ^ 1'd1);

assign sel_tmp1_i5_fu_479_p2 = (tmp_i_i4_reg_1060 ^ 1'd1);

assign sel_tmp1_i_fu_393_p2 = (tmp_i_i_reg_1033 ^ 1'd1);

assign sel_tmp2_i5_fu_484_p2 = (tmp_1685_i_i6_reg_1066 & sel_tmp1_i5_fu_479_p2);

assign sel_tmp2_i_fu_398_p2 = (tmp_1685_i_i_reg_1039 & sel_tmp1_i_fu_393_p2);

assign sel_tmp_i5_fu_475_p1 = sel_tmp_v_i5_fu_468_p3;

assign sel_tmp_i_fu_389_p1 = sel_tmp_v_i_fu_382_p3;

assign sel_tmp_v_i5_fu_468_p3 = ((tmp_i_i4_reg_1060[0:0] === 1'b1) ? p_Result_385_fu_417_p3 : p_Result_386_fu_460_p3);

assign sel_tmp_v_i_fu_382_p3 = ((tmp_i_i_reg_1033[0:0] === 1'b1) ? p_Result_382_fu_331_p3 : p_Result_383_fu_374_p3);

assign sh_assign_1_fu_706_p3 = ((isNeg_7_fu_688_p3[0:0] === 1'b1) ? tmp_1702_i_i_i11_cas_fu_702_p1 : sh_assign_9_fu_682_p2);

assign sh_assign_6_i_i_i12_1_fu_718_p1 = sh_assign_1_fu_706_p3;

assign sh_assign_6_i_i_i12_s_fu_714_p1 = sh_assign_1_fu_706_p3;

assign sh_assign_6_i_i_i_ca_8_fu_575_p1 = sh_assign_s_fu_563_p3;

assign sh_assign_6_i_i_i_ca_fu_571_p1 = sh_assign_s_fu_563_p3;

assign sh_assign_9_fu_682_p2 = ($signed(9'd385) + $signed(tmp_i_i_i_i8_cast_fu_678_p1));

assign sh_assign_fu_539_p2 = ($signed(9'd385) + $signed(tmp_i_i_i_i_cast_fu_535_p1));

assign sh_assign_s_fu_563_p3 = ((isNeg_fu_545_p3[0:0] === 1'b1) ? tmp_1702_i_i_i_cast_fu_559_p1 : sh_assign_fu_539_p2);

assign slt_fu_906_p2 = (($signed(r0_fu_882_p1) < $signed(src_rows_read)) ? 1'b1 : 1'b0);

assign src_val_V_address0 = tmp_384_cast_fu_973_p1;

assign t_V_61_fu_242_p1 = x_assign_reg_1015;

assign t_V_64_fu_283_p1 = x_assign_80_reg_1021;

assign tmp_1667_fu_595_p3 = tmp_1704_i_i_i_fu_583_p2[32'd24];

assign tmp_1673_fu_738_p3 = tmp_1704_i_i_i4_fu_726_p2[32'd24];

assign tmp_1674_fu_238_p1 = src_cols_read[17:0];

assign tmp_1675_fu_797_p1 = i_op_assign_reg_198[9:0];

assign tmp_1676_fu_809_p1 = i_op_assign_reg_198[14:0];

assign tmp_1677_fu_852_p1 = i_op_assign_9_reg_209[17:0];

assign tmp_1678_fu_861_p1 = i_op_assign_9_reg_209[14:0];

assign tmp_1679_fu_922_p1 = tmp_453_fu_892_p4;

assign tmp_1680_fu_926_p2 = ($signed(18'd262143) + $signed(tmp_1674_reg_1000));

assign tmp_1681_fu_931_p3 = ((tmp_821_fu_917_p2[0:0] === 1'b1) ? tmp_1679_fu_922_p1 : tmp_1680_fu_926_p2);

assign tmp_1682_fu_939_p1 = src_rows_read[9:0];

assign tmp_1683_fu_942_p4 = {{r_V_reg_1117[25:16]}};

assign tmp_1684_fu_951_p3 = ((rev6_fu_911_p2[0:0] === 1'b1) ? tmp_1682_fu_939_p1 : tmp_1683_fu_942_p4);

assign tmp_1685_i_i6_fu_302_p2 = ((loc_V_52_fu_286_p4 > 8'd150) ? 1'b1 : 1'b0);

assign tmp_1685_i_i_fu_261_p2 = ((loc_V_fu_245_p4 > 8'd150) ? 1'b1 : 1'b0);

assign tmp_1686_i_i8_fu_318_p1 = index_V_7_fu_308_p4;

assign tmp_1686_i_i_fu_277_p1 = index_V_fu_267_p4;

assign tmp_1688_i_i5_fu_438_p2 = (mask_table1687_q1 ^ 23'd8388607);

assign tmp_1688_i_i_fu_352_p2 = (mask_table1687_q0 ^ 23'd8388607);

assign tmp_1701_i_i_i7_cast_fu_674_p1 = tmp_1701_i_i_i7_fu_664_p4;

assign tmp_1701_i_i_i7_fu_664_p4 = {{{{1'd1}, {loc_V_55_fu_660_p1}}}, {1'd0}};

assign tmp_1701_i_i_i_cast6_fu_531_p1 = tmp_1701_i_i_i_fu_521_p4;

assign tmp_1701_i_i_i_fu_521_p4 = {{{{1'd1}, {loc_V_51_fu_517_p1}}}, {1'd0}};

assign tmp_1702_i_i_i11_cas_fu_702_p1 = $signed(tmp_1702_i_i_i4_fu_696_p2);

assign tmp_1702_i_i_i4_fu_696_p2 = (8'd127 - loc_V_54_fu_650_p4);

assign tmp_1702_i_i_i_cast_fu_559_p1 = $signed(tmp_1702_i_i_i_fu_553_p2);

assign tmp_1702_i_i_i_fu_553_p2 = (8'd127 - loc_V_50_fu_507_p4);

assign tmp_1703_i_i_i4_fu_722_p1 = $unsigned(sh_assign_6_i_i_i12_s_fu_714_p1);

assign tmp_1703_i_i_i_fu_579_p1 = $unsigned(sh_assign_6_i_i_i_ca_fu_571_p1);

assign tmp_1704_i_i_i4_fu_726_p2 = tmp_1701_i_i_i7_fu_664_p4 >> sh_assign_6_i_i_i12_1_fu_718_p1;

assign tmp_1704_i_i_i_fu_583_p2 = tmp_1701_i_i_i_fu_521_p4 >> sh_assign_6_i_i_i_ca_8_fu_575_p1;

assign tmp_1705_i_i_i4_fu_732_p2 = tmp_1701_i_i_i7_cast_fu_674_p1 << tmp_1703_i_i_i4_fu_722_p1;

assign tmp_1705_i_i_i_fu_589_p2 = tmp_1701_i_i_i_cast6_fu_531_p1 << tmp_1703_i_i_i_fu_579_p1;

assign tmp_369_fu_603_p1 = tmp_1667_fu_595_p3;

assign tmp_370_fu_607_p4 = {{tmp_1705_i_i_i_fu_589_p2[55:24]}};

assign tmp_373_fu_746_p1 = tmp_1673_fu_738_p3;

assign tmp_374_fu_750_p4 = {{tmp_1705_i_i_i4_fu_732_p2[55:24]}};

assign tmp_377_cast_fu_801_p3 = {{tmp_1675_fu_797_p1}, {8'd0}};

assign tmp_379_cast_fu_978_p1 = tmp_379_reg_1132;

assign tmp_379_fu_856_p2 = (tmp_377_cast_reg_1112 + tmp_1677_fu_852_p1);

assign tmp_383_cast_fu_959_p3 = {{tmp_1684_fu_951_p3}, {8'd0}};

assign tmp_384_cast_fu_973_p1 = $signed(tmp_384_fu_967_p2);

assign tmp_384_fu_967_p2 = (tmp_383_cast_fu_959_p3 + tmp_1681_fu_931_p3);

assign tmp_447_fu_364_p4 = {{p_Val2_296_fu_343_p2[31:23]}};

assign tmp_451_fu_450_p4 = {{p_Val2_308_fu_429_p2[31:23]}};

assign tmp_452_fu_873_p4 = {{r_V_reg_1117[31:16]}};

assign tmp_453_fu_892_p4 = {{r_V_39_fu_886_p2[31:16]}};

assign tmp_819_fu_786_p2 = (($signed(i_op_assign_cast_fu_782_p1) < $signed(p_Val2_318_reg_1091)) ? 1'b1 : 1'b0);

assign tmp_820_fu_841_p2 = (($signed(i_op_assign_11_cast_fu_837_p1) < $signed(p_Val2_319_reg_1097)) ? 1'b1 : 1'b0);

assign tmp_821_fu_917_p2 = (($signed(c0_fu_902_p1) < $signed(src_cols_read)) ? 1'b1 : 1'b0);

assign tmp_i_i4_fu_296_p2 = ((loc_V_52_fu_286_p4 < 8'd126) ? 1'b1 : 1'b0);

assign tmp_i_i_fu_255_p2 = ((loc_V_fu_245_p4 < 8'd126) ? 1'b1 : 1'b0);

assign tmp_i_i_i_i8_cast_fu_678_p1 = loc_V_54_fu_650_p4;

assign tmp_i_i_i_i_cast_fu_535_p1 = loc_V_50_fu_507_p4;

assign x_assign_81_fu_489_p3 = ((sel_tmp2_i5_fu_484_p2[0:0] === 1'b1) ? x_assign_80_reg_1021 : sel_tmp_i5_fu_475_p1);

assign x_assign_s_fu_403_p3 = ((sel_tmp2_i_fu_398_p2[0:0] === 1'b1) ? x_assign_reg_1015 : sel_tmp_i_fu_389_p1);

assign xs_sig_V_5_fu_444_p2 = (tmp_1688_i_i5_fu_438_p2 & loc_V_53_fu_434_p1);

assign xs_sig_V_fu_358_p2 = (tmp_1688_i_i_fu_352_p2 & loc_V_49_fu_348_p1);

always @ (posedge ap_clk) begin
    tmp_377_cast_reg_1112[7:0] <= 8'b00000000;
    r_V_reg_1117[16:0] <= 17'b01000000000000000;
end

endmodule //Resize
