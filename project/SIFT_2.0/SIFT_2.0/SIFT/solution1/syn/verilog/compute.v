// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module compute (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        src0_val_address0,
        src0_val_ce0,
        src0_val_q0,
        src0_rows_dout,
        src0_rows_empty_n,
        src0_rows_read,
        src0_cols_dout,
        src0_cols_empty_n,
        src0_cols_read,
        src1_val_address0,
        src1_val_ce0,
        src1_val_q0,
        src1_rows_dout,
        src1_rows_empty_n,
        src1_rows_read,
        src1_cols_dout,
        src1_cols_empty_n,
        src1_cols_read,
        thresh_dout,
        thresh_empty_n,
        thresh_read,
        keypoints0_val_pt_x_address0,
        keypoints0_val_pt_x_ce0,
        keypoints0_val_pt_x_we0,
        keypoints0_val_pt_x_d0,
        keypoints0_val_pt_x_q0,
        keypoints0_val_pt_y_address0,
        keypoints0_val_pt_y_ce0,
        keypoints0_val_pt_y_we0,
        keypoints0_val_pt_y_d0,
        keypoints0_val_pt_y_q0,
        keypoints0_val_angle_V_address0,
        keypoints0_val_angle_V_ce0,
        keypoints0_val_angle_V_we0,
        keypoints0_val_angle_V_d0,
        keypoints0_val_angle_V_q0,
        keypoints0_val_sigma_V_address0,
        keypoints0_val_sigma_V_ce0,
        keypoints0_val_sigma_V_we0,
        keypoints0_val_sigma_V_d0,
        keypoints0_val_sigma_V_q0,
        keypoints0_val_octave_address0,
        keypoints0_val_octave_ce0,
        keypoints0_val_octave_we0,
        keypoints0_val_octave_d0,
        keypoints0_val_octave_q0,
        keypoints0_val_layer_address0,
        keypoints0_val_layer_ce0,
        keypoints0_val_layer_we0,
        keypoints0_val_layer_d0,
        keypoints0_val_layer_q0,
        keypoints1_val_pt_x_address0,
        keypoints1_val_pt_x_ce0,
        keypoints1_val_pt_x_we0,
        keypoints1_val_pt_x_d0,
        keypoints1_val_pt_x_q0,
        keypoints1_val_pt_y_address0,
        keypoints1_val_pt_y_ce0,
        keypoints1_val_pt_y_we0,
        keypoints1_val_pt_y_d0,
        keypoints1_val_pt_y_q0,
        keypoints1_val_angle_V_address0,
        keypoints1_val_angle_V_ce0,
        keypoints1_val_angle_V_we0,
        keypoints1_val_angle_V_d0,
        keypoints1_val_angle_V_q0,
        keypoints1_val_sigma_V_address0,
        keypoints1_val_sigma_V_ce0,
        keypoints1_val_sigma_V_we0,
        keypoints1_val_sigma_V_d0,
        keypoints1_val_sigma_V_q0,
        keypoints1_val_octave_address0,
        keypoints1_val_octave_ce0,
        keypoints1_val_octave_we0,
        keypoints1_val_octave_d0,
        keypoints1_val_octave_q0,
        keypoints1_val_layer_address0,
        keypoints1_val_layer_ce0,
        keypoints1_val_layer_we0,
        keypoints1_val_layer_d0,
        keypoints1_val_layer_q0,
        descriptors0_val_val_address0,
        descriptors0_val_val_ce0,
        descriptors0_val_val_we0,
        descriptors0_val_val_d0,
        descriptors0_val_val_q0,
        descriptors0_length_dout,
        descriptors0_length_empty_n,
        descriptors0_length_read,
        descriptors1_val_val_address0,
        descriptors1_val_val_ce0,
        descriptors1_val_val_we0,
        descriptors1_val_val_d0,
        descriptors1_val_val_q0,
        descriptors1_length_dout,
        descriptors1_length_empty_n,
        descriptors1_length_read,
        matches_val_idx0_address0,
        matches_val_idx0_ce0,
        matches_val_idx0_we0,
        matches_val_idx0_d0,
        matches_val_idx1_address0,
        matches_val_idx1_ce0,
        matches_val_idx1_we0,
        matches_val_idx1_d0,
        matches_length_dout,
        matches_length_empty_n,
        matches_length_read,
        keypoints0_length_out_din,
        keypoints0_length_out_full_n,
        keypoints0_length_out_write,
        keypoints1_length_out_din,
        keypoints1_length_out_full_n,
        keypoints1_length_out_write,
        matches_length_out_din,
        matches_length_out_full_n,
        matches_length_out_write
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_state3 = 5'd4;
parameter    ap_ST_fsm_state4 = 5'd8;
parameter    ap_ST_fsm_state5 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [15:0] src0_val_address0;
output   src0_val_ce0;
input  [7:0] src0_val_q0;
input  [31:0] src0_rows_dout;
input   src0_rows_empty_n;
output   src0_rows_read;
input  [31:0] src0_cols_dout;
input   src0_cols_empty_n;
output   src0_cols_read;
output  [15:0] src1_val_address0;
output   src1_val_ce0;
input  [7:0] src1_val_q0;
input  [31:0] src1_rows_dout;
input   src1_rows_empty_n;
output   src1_rows_read;
input  [31:0] src1_cols_dout;
input   src1_cols_empty_n;
output   src1_cols_read;
input  [31:0] thresh_dout;
input   thresh_empty_n;
output   thresh_read;
output  [8:0] keypoints0_val_pt_x_address0;
output   keypoints0_val_pt_x_ce0;
output   keypoints0_val_pt_x_we0;
output  [15:0] keypoints0_val_pt_x_d0;
input  [15:0] keypoints0_val_pt_x_q0;
output  [8:0] keypoints0_val_pt_y_address0;
output   keypoints0_val_pt_y_ce0;
output   keypoints0_val_pt_y_we0;
output  [15:0] keypoints0_val_pt_y_d0;
input  [15:0] keypoints0_val_pt_y_q0;
output  [8:0] keypoints0_val_angle_V_address0;
output   keypoints0_val_angle_V_ce0;
output   keypoints0_val_angle_V_we0;
output  [31:0] keypoints0_val_angle_V_d0;
input  [31:0] keypoints0_val_angle_V_q0;
output  [8:0] keypoints0_val_sigma_V_address0;
output   keypoints0_val_sigma_V_ce0;
output   keypoints0_val_sigma_V_we0;
output  [31:0] keypoints0_val_sigma_V_d0;
input  [31:0] keypoints0_val_sigma_V_q0;
output  [8:0] keypoints0_val_octave_address0;
output   keypoints0_val_octave_ce0;
output   keypoints0_val_octave_we0;
output  [7:0] keypoints0_val_octave_d0;
input  [7:0] keypoints0_val_octave_q0;
output  [8:0] keypoints0_val_layer_address0;
output   keypoints0_val_layer_ce0;
output   keypoints0_val_layer_we0;
output  [7:0] keypoints0_val_layer_d0;
input  [7:0] keypoints0_val_layer_q0;
output  [8:0] keypoints1_val_pt_x_address0;
output   keypoints1_val_pt_x_ce0;
output   keypoints1_val_pt_x_we0;
output  [15:0] keypoints1_val_pt_x_d0;
input  [15:0] keypoints1_val_pt_x_q0;
output  [8:0] keypoints1_val_pt_y_address0;
output   keypoints1_val_pt_y_ce0;
output   keypoints1_val_pt_y_we0;
output  [15:0] keypoints1_val_pt_y_d0;
input  [15:0] keypoints1_val_pt_y_q0;
output  [8:0] keypoints1_val_angle_V_address0;
output   keypoints1_val_angle_V_ce0;
output   keypoints1_val_angle_V_we0;
output  [31:0] keypoints1_val_angle_V_d0;
input  [31:0] keypoints1_val_angle_V_q0;
output  [8:0] keypoints1_val_sigma_V_address0;
output   keypoints1_val_sigma_V_ce0;
output   keypoints1_val_sigma_V_we0;
output  [31:0] keypoints1_val_sigma_V_d0;
input  [31:0] keypoints1_val_sigma_V_q0;
output  [8:0] keypoints1_val_octave_address0;
output   keypoints1_val_octave_ce0;
output   keypoints1_val_octave_we0;
output  [7:0] keypoints1_val_octave_d0;
input  [7:0] keypoints1_val_octave_q0;
output  [8:0] keypoints1_val_layer_address0;
output   keypoints1_val_layer_ce0;
output   keypoints1_val_layer_we0;
output  [7:0] keypoints1_val_layer_d0;
input  [7:0] keypoints1_val_layer_q0;
output  [15:0] descriptors0_val_val_address0;
output   descriptors0_val_val_ce0;
output   descriptors0_val_val_we0;
output  [7:0] descriptors0_val_val_d0;
input  [7:0] descriptors0_val_val_q0;
input  [0:0] descriptors0_length_dout;
input   descriptors0_length_empty_n;
output   descriptors0_length_read;
output  [15:0] descriptors1_val_val_address0;
output   descriptors1_val_val_ce0;
output   descriptors1_val_val_we0;
output  [7:0] descriptors1_val_val_d0;
input  [7:0] descriptors1_val_val_q0;
input  [0:0] descriptors1_length_dout;
input   descriptors1_length_empty_n;
output   descriptors1_length_read;
output  [8:0] matches_val_idx0_address0;
output   matches_val_idx0_ce0;
output   matches_val_idx0_we0;
output  [15:0] matches_val_idx0_d0;
output  [8:0] matches_val_idx1_address0;
output   matches_val_idx1_ce0;
output   matches_val_idx1_we0;
output  [15:0] matches_val_idx1_d0;
input  [0:0] matches_length_dout;
input   matches_length_empty_n;
output   matches_length_read;
output  [31:0] keypoints0_length_out_din;
input   keypoints0_length_out_full_n;
output   keypoints0_length_out_write;
output  [31:0] keypoints1_length_out_din;
input   keypoints1_length_out_full_n;
output   keypoints1_length_out_write;
output  [31:0] matches_length_out_din;
input   matches_length_out_full_n;
output   matches_length_out_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg src0_val_ce0;
reg src0_rows_read;
reg src0_cols_read;
reg src1_val_ce0;
reg src1_rows_read;
reg src1_cols_read;
reg thresh_read;
reg keypoints0_val_pt_x_ce0;
reg keypoints0_val_pt_x_we0;
reg keypoints0_val_pt_y_ce0;
reg keypoints0_val_pt_y_we0;
reg keypoints0_val_angle_V_ce0;
reg keypoints0_val_angle_V_we0;
reg keypoints0_val_sigma_V_ce0;
reg keypoints0_val_sigma_V_we0;
reg keypoints0_val_octave_ce0;
reg keypoints0_val_octave_we0;
reg keypoints0_val_layer_ce0;
reg keypoints0_val_layer_we0;
reg keypoints1_val_pt_x_ce0;
reg keypoints1_val_pt_x_we0;
reg keypoints1_val_pt_y_ce0;
reg keypoints1_val_pt_y_we0;
reg keypoints1_val_angle_V_ce0;
reg keypoints1_val_angle_V_we0;
reg keypoints1_val_sigma_V_ce0;
reg keypoints1_val_sigma_V_we0;
reg keypoints1_val_octave_ce0;
reg keypoints1_val_octave_we0;
reg keypoints1_val_layer_ce0;
reg keypoints1_val_layer_we0;
reg[15:0] descriptors0_val_val_address0;
reg descriptors0_val_val_ce0;
reg descriptors0_val_val_we0;
reg descriptors0_length_read;
reg[15:0] descriptors1_val_val_address0;
reg descriptors1_val_val_ce0;
reg descriptors1_val_val_we0;
reg descriptors1_length_read;
reg matches_length_read;
reg keypoints0_length_out_write;
reg keypoints1_length_out_write;
reg matches_length_out_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    src0_rows_blk_n;
reg    src0_cols_blk_n;
reg    src1_rows_blk_n;
reg    src1_cols_blk_n;
reg    thresh_blk_n;
reg    descriptors0_length_blk_n;
reg    descriptors1_length_blk_n;
reg    matches_length_blk_n;
reg    keypoints0_length_out_blk_n;
wire    ap_CS_fsm_state5;
reg    keypoints1_length_out_blk_n;
reg    matches_length_out_blk_n;
reg   [31:0] src0_rows_read_reg_739;
reg    ap_block_state1;
reg   [31:0] src0_cols_read_reg_744;
reg   [31:0] src1_rows_read_reg_749;
reg   [31:0] src1_cols_read_reg_754;
reg   [31:0] thresh_read_reg_759;
reg   [0:0] matches_length_read_reg_764;
wire   [1:0] i_fu_392_p2;
reg   [1:0] i_reg_772;
wire    ap_CS_fsm_state2;
wire   [0:0] tmp_422_i_fu_398_p2;
reg   [0:0] tmp_422_i_reg_777;
wire   [0:0] exitcond_i_fu_386_p2;
reg   [0:0] isneg_reg_781;
reg   [10:0] exp_tmp_V_reg_787;
wire   [51:0] tmp_1115_fu_430_p1;
reg   [51:0] tmp_1115_reg_792;
wire   [0:0] tmp_421_i_fu_434_p2;
reg   [0:0] tmp_421_i_reg_797;
wire    ap_CS_fsm_state4;
wire   [31:0] newSel17_fu_696_p3;
reg   [31:0] newSel17_reg_813;
wire    grp_detect_fu_268_ap_start;
wire    grp_detect_fu_268_ap_done;
wire    grp_detect_fu_268_ap_idle;
wire    grp_detect_fu_268_ap_ready;
wire   [15:0] grp_detect_fu_268_src_val_address0;
wire    grp_detect_fu_268_src_val_ce0;
reg   [7:0] grp_detect_fu_268_src_val_q0;
reg   [31:0] grp_detect_fu_268_src_rows_read;
reg   [31:0] grp_detect_fu_268_src_cols_read;
wire   [8:0] grp_detect_fu_268_keypoints_val_pt_x_address0;
wire    grp_detect_fu_268_keypoints_val_pt_x_ce0;
wire    grp_detect_fu_268_keypoints_val_pt_x_we0;
wire   [15:0] grp_detect_fu_268_keypoints_val_pt_x_d0;
reg   [15:0] grp_detect_fu_268_keypoints_val_pt_x_q0;
wire   [8:0] grp_detect_fu_268_keypoints_val_pt_y_address0;
wire    grp_detect_fu_268_keypoints_val_pt_y_ce0;
wire    grp_detect_fu_268_keypoints_val_pt_y_we0;
wire   [15:0] grp_detect_fu_268_keypoints_val_pt_y_d0;
reg   [15:0] grp_detect_fu_268_keypoints_val_pt_y_q0;
wire   [8:0] grp_detect_fu_268_keypoints_val_angle_V_address0;
wire    grp_detect_fu_268_keypoints_val_angle_V_ce0;
wire    grp_detect_fu_268_keypoints_val_angle_V_we0;
wire   [31:0] grp_detect_fu_268_keypoints_val_angle_V_d0;
reg   [31:0] grp_detect_fu_268_keypoints_val_angle_V_q0;
wire   [8:0] grp_detect_fu_268_keypoints_val_sigma_V_address0;
wire    grp_detect_fu_268_keypoints_val_sigma_V_ce0;
wire    grp_detect_fu_268_keypoints_val_sigma_V_we0;
wire   [31:0] grp_detect_fu_268_keypoints_val_sigma_V_d0;
reg   [31:0] grp_detect_fu_268_keypoints_val_sigma_V_q0;
wire   [8:0] grp_detect_fu_268_keypoints_val_octave_address0;
wire    grp_detect_fu_268_keypoints_val_octave_ce0;
wire    grp_detect_fu_268_keypoints_val_octave_we0;
wire   [7:0] grp_detect_fu_268_keypoints_val_octave_d0;
reg   [7:0] grp_detect_fu_268_keypoints_val_octave_q0;
wire   [8:0] grp_detect_fu_268_keypoints_val_layer_address0;
wire    grp_detect_fu_268_keypoints_val_layer_ce0;
wire    grp_detect_fu_268_keypoints_val_layer_we0;
wire   [7:0] grp_detect_fu_268_keypoints_val_layer_d0;
reg   [7:0] grp_detect_fu_268_keypoints_val_layer_q0;
wire   [15:0] grp_detect_fu_268_descriptors_val_val_address0;
wire    grp_detect_fu_268_descriptors_val_val_ce0;
wire    grp_detect_fu_268_descriptors_val_val_we0;
wire   [7:0] grp_detect_fu_268_descriptors_val_val_d0;
wire   [31:0] grp_detect_fu_268_ap_return_0;
wire   [31:0] grp_detect_fu_268_ap_return_1;
wire    grp_match_511_s_fu_340_ap_start;
wire    grp_match_511_s_fu_340_ap_done;
wire    grp_match_511_s_fu_340_ap_idle;
wire    grp_match_511_s_fu_340_ap_ready;
wire   [15:0] grp_match_511_s_fu_340_descriptors0_val_val_address0;
wire    grp_match_511_s_fu_340_descriptors0_val_val_ce0;
wire   [15:0] grp_match_511_s_fu_340_descriptors1_val_val_address0;
wire    grp_match_511_s_fu_340_descriptors1_val_val_ce0;
wire   [8:0] grp_match_511_s_fu_340_matches_val_idx0_address0;
wire    grp_match_511_s_fu_340_matches_val_idx0_ce0;
wire    grp_match_511_s_fu_340_matches_val_idx0_we0;
wire   [15:0] grp_match_511_s_fu_340_matches_val_idx0_d0;
wire   [8:0] grp_match_511_s_fu_340_matches_val_idx1_address0;
wire    grp_match_511_s_fu_340_matches_val_idx1_ce0;
wire    grp_match_511_s_fu_340_matches_val_idx1_we0;
wire   [15:0] grp_match_511_s_fu_340_matches_val_idx1_d0;
wire   [31:0] grp_match_511_s_fu_340_ap_return;
reg   [1:0] i_i_reg_257;
wire    ap_CS_fsm_state3;
reg    ap_block_state3_on_subcall_done;
reg    grp_detect_fu_268_ap_start_reg;
reg    grp_match_511_s_fu_340_ap_start_reg;
reg    ap_block_state5;
reg   [31:0] descriptors1_length_s_fu_172;
wire   [31:0] extLd1_fu_372_p1;
reg   [31:0] descriptors0_length_s_fu_176;
wire   [31:0] extLd_fu_368_p1;
reg   [31:0] keypoints1_length_dc_2_fu_180;
reg   [31:0] keypoints0_length_dc_2_fu_184;
wire   [63:0] d_assign_fu_357_p1;
wire   [63:0] ireg_V_fu_404_p1;
wire   [62:0] tmp_fu_408_p1;
wire   [52:0] tmp_i_204_fu_471_p3;
wire   [53:0] p_Result_s_fu_478_p1;
wire   [53:0] man_V_5_fu_482_p2;
wire   [11:0] tmp_i_fu_468_p1;
wire   [11:0] F2_fu_495_p2;
wire   [0:0] tmp_424_i_fu_501_p2;
wire   [11:0] tmp_425_i_fu_507_p2;
wire   [11:0] tmp_426_i_fu_513_p2;
wire  signed [11:0] sh_amt_fu_519_p3;
wire   [53:0] man_V_6_fu_488_p3;
wire   [6:0] tmp_1117_fu_547_p4;
wire  signed [31:0] sh_amt_cast_i_fu_527_p1;
wire   [53:0] tmp_432_i_fu_563_p1;
wire   [53:0] tmp_433_i_fu_567_p2;
wire   [31:0] tmp_1116_fu_537_p1;
wire   [0:0] tmp_427_i_fu_531_p2;
wire   [0:0] sel_tmp1_fu_590_p2;
wire   [0:0] sel_tmp6_demorgan_fu_601_p2;
wire   [0:0] sel_tmp6_fu_606_p2;
wire   [0:0] tmp_429_i_fu_541_p2;
wire   [0:0] sel_tmp7_fu_612_p2;
wire   [0:0] sel_tmp8_fu_618_p2;
wire   [0:0] sel_tmp21_demorgan_fu_636_p2;
wire   [0:0] icmp_fu_557_p2;
wire   [0:0] sel_tmp21_fu_642_p2;
wire   [0:0] sel_tmp22_fu_648_p2;
wire   [31:0] tmp_436_i_fu_584_p2;
wire   [31:0] tmp_1118_fu_573_p1;
wire   [0:0] sel_tmp15_fu_630_p2;
wire   [0:0] sel_tmp9_fu_624_p2;
wire   [31:0] tmp_435_i_fu_577_p3;
wire   [0:0] sel_tmp2_fu_595_p2;
wire   [0:0] or_cond_fu_662_p2;
wire   [31:0] newSel_fu_654_p3;
wire   [31:0] newSel15_fu_668_p3;
wire   [0:0] or_cond3_fu_676_p2;
wire   [0:0] or_cond4_fu_690_p2;
wire   [31:0] newSel16_fu_682_p3;
reg   [4:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 5'd1;
#0 grp_detect_fu_268_ap_start_reg = 1'b0;
#0 grp_match_511_s_fu_340_ap_start_reg = 1'b0;
end

detect grp_detect_fu_268(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_detect_fu_268_ap_start),
    .ap_done(grp_detect_fu_268_ap_done),
    .ap_idle(grp_detect_fu_268_ap_idle),
    .ap_ready(grp_detect_fu_268_ap_ready),
    .src_val_address0(grp_detect_fu_268_src_val_address0),
    .src_val_ce0(grp_detect_fu_268_src_val_ce0),
    .src_val_q0(grp_detect_fu_268_src_val_q0),
    .src_rows_read(grp_detect_fu_268_src_rows_read),
    .src_cols_read(grp_detect_fu_268_src_cols_read),
    .keypoints_val_pt_x_address0(grp_detect_fu_268_keypoints_val_pt_x_address0),
    .keypoints_val_pt_x_ce0(grp_detect_fu_268_keypoints_val_pt_x_ce0),
    .keypoints_val_pt_x_we0(grp_detect_fu_268_keypoints_val_pt_x_we0),
    .keypoints_val_pt_x_d0(grp_detect_fu_268_keypoints_val_pt_x_d0),
    .keypoints_val_pt_x_q0(grp_detect_fu_268_keypoints_val_pt_x_q0),
    .keypoints_val_pt_y_address0(grp_detect_fu_268_keypoints_val_pt_y_address0),
    .keypoints_val_pt_y_ce0(grp_detect_fu_268_keypoints_val_pt_y_ce0),
    .keypoints_val_pt_y_we0(grp_detect_fu_268_keypoints_val_pt_y_we0),
    .keypoints_val_pt_y_d0(grp_detect_fu_268_keypoints_val_pt_y_d0),
    .keypoints_val_pt_y_q0(grp_detect_fu_268_keypoints_val_pt_y_q0),
    .keypoints_val_angle_V_address0(grp_detect_fu_268_keypoints_val_angle_V_address0),
    .keypoints_val_angle_V_ce0(grp_detect_fu_268_keypoints_val_angle_V_ce0),
    .keypoints_val_angle_V_we0(grp_detect_fu_268_keypoints_val_angle_V_we0),
    .keypoints_val_angle_V_d0(grp_detect_fu_268_keypoints_val_angle_V_d0),
    .keypoints_val_angle_V_q0(grp_detect_fu_268_keypoints_val_angle_V_q0),
    .keypoints_val_sigma_V_address0(grp_detect_fu_268_keypoints_val_sigma_V_address0),
    .keypoints_val_sigma_V_ce0(grp_detect_fu_268_keypoints_val_sigma_V_ce0),
    .keypoints_val_sigma_V_we0(grp_detect_fu_268_keypoints_val_sigma_V_we0),
    .keypoints_val_sigma_V_d0(grp_detect_fu_268_keypoints_val_sigma_V_d0),
    .keypoints_val_sigma_V_q0(grp_detect_fu_268_keypoints_val_sigma_V_q0),
    .keypoints_val_octave_address0(grp_detect_fu_268_keypoints_val_octave_address0),
    .keypoints_val_octave_ce0(grp_detect_fu_268_keypoints_val_octave_ce0),
    .keypoints_val_octave_we0(grp_detect_fu_268_keypoints_val_octave_we0),
    .keypoints_val_octave_d0(grp_detect_fu_268_keypoints_val_octave_d0),
    .keypoints_val_octave_q0(grp_detect_fu_268_keypoints_val_octave_q0),
    .keypoints_val_layer_address0(grp_detect_fu_268_keypoints_val_layer_address0),
    .keypoints_val_layer_ce0(grp_detect_fu_268_keypoints_val_layer_ce0),
    .keypoints_val_layer_we0(grp_detect_fu_268_keypoints_val_layer_we0),
    .keypoints_val_layer_d0(grp_detect_fu_268_keypoints_val_layer_d0),
    .keypoints_val_layer_q0(grp_detect_fu_268_keypoints_val_layer_q0),
    .descriptors_val_val_address0(grp_detect_fu_268_descriptors_val_val_address0),
    .descriptors_val_val_ce0(grp_detect_fu_268_descriptors_val_val_ce0),
    .descriptors_val_val_we0(grp_detect_fu_268_descriptors_val_val_we0),
    .descriptors_val_val_d0(grp_detect_fu_268_descriptors_val_val_d0),
    .ap_return_0(grp_detect_fu_268_ap_return_0),
    .ap_return_1(grp_detect_fu_268_ap_return_1)
);

match_511_s grp_match_511_s_fu_340(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_match_511_s_fu_340_ap_start),
    .ap_done(grp_match_511_s_fu_340_ap_done),
    .ap_idle(grp_match_511_s_fu_340_ap_idle),
    .ap_ready(grp_match_511_s_fu_340_ap_ready),
    .descriptors0_val_val_address0(grp_match_511_s_fu_340_descriptors0_val_val_address0),
    .descriptors0_val_val_ce0(grp_match_511_s_fu_340_descriptors0_val_val_ce0),
    .descriptors0_val_val_q0(descriptors0_val_val_q0),
    .descriptors0_length_read(descriptors0_length_s_fu_176),
    .descriptors1_val_val_address0(grp_match_511_s_fu_340_descriptors1_val_val_address0),
    .descriptors1_val_val_ce0(grp_match_511_s_fu_340_descriptors1_val_val_ce0),
    .descriptors1_val_val_q0(descriptors1_val_val_q0),
    .descriptors1_length_read(descriptors1_length_s_fu_172),
    .thresh_V(newSel17_reg_813),
    .matches_val_idx0_address0(grp_match_511_s_fu_340_matches_val_idx0_address0),
    .matches_val_idx0_ce0(grp_match_511_s_fu_340_matches_val_idx0_ce0),
    .matches_val_idx0_we0(grp_match_511_s_fu_340_matches_val_idx0_we0),
    .matches_val_idx0_d0(grp_match_511_s_fu_340_matches_val_idx0_d0),
    .matches_val_idx1_address0(grp_match_511_s_fu_340_matches_val_idx1_address0),
    .matches_val_idx1_ce0(grp_match_511_s_fu_340_matches_val_idx1_ce0),
    .matches_val_idx1_we0(grp_match_511_s_fu_340_matches_val_idx1_we0),
    .matches_val_idx1_d0(grp_match_511_s_fu_340_matches_val_idx1_d0),
    .matches_length_read(matches_length_read_reg_764),
    .ap_return(grp_match_511_s_fu_340_ap_return)
);

SIFT2_Core_fpext_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
SIFT2_Core_fpext_hbi_U1095(
    .din0(thresh_read_reg_759),
    .dout(d_assign_fu_357_p1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((grp_match_511_s_fu_340_ap_done == 1'b0) | (matches_length_out_full_n == 1'b0) | (keypoints1_length_out_full_n == 1'b0) | (keypoints0_length_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_detect_fu_268_ap_start_reg <= 1'b0;
    end else begin
        if ((((exitcond_i_fu_386_p2 == 1'd0) & (tmp_422_i_fu_398_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((exitcond_i_fu_386_p2 == 1'd0) & (tmp_422_i_fu_398_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
            grp_detect_fu_268_ap_start_reg <= 1'b1;
        end else if ((grp_detect_fu_268_ap_ready == 1'b1)) begin
            grp_detect_fu_268_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_match_511_s_fu_340_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            grp_match_511_s_fu_340_ap_start_reg <= 1'b1;
        end else if ((grp_match_511_s_fu_340_ap_ready == 1'b1)) begin
            grp_match_511_s_fu_340_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state3_on_subcall_done) & (tmp_422_i_reg_777 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        descriptors0_length_s_fu_176 <= grp_detect_fu_268_ap_return_0;
    end else if ((~((thresh_empty_n == 1'b0) | (src1_cols_empty_n == 1'b0) | (src1_rows_empty_n == 1'b0) | (src0_cols_empty_n == 1'b0) | (src0_rows_empty_n == 1'b0) | (matches_length_empty_n == 1'b0) | (descriptors1_length_empty_n == 1'b0) | (descriptors0_length_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        descriptors0_length_s_fu_176 <= extLd_fu_368_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state3_on_subcall_done) & (tmp_422_i_reg_777 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        descriptors1_length_s_fu_172 <= grp_detect_fu_268_ap_return_0;
    end else if ((~((thresh_empty_n == 1'b0) | (src1_cols_empty_n == 1'b0) | (src1_rows_empty_n == 1'b0) | (src0_cols_empty_n == 1'b0) | (src0_rows_empty_n == 1'b0) | (matches_length_empty_n == 1'b0) | (descriptors1_length_empty_n == 1'b0) | (descriptors0_length_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        descriptors1_length_s_fu_172 <= extLd1_fu_372_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state3_on_subcall_done) & (1'b1 == ap_CS_fsm_state3))) begin
        i_i_reg_257 <= i_reg_772;
    end else if ((~((thresh_empty_n == 1'b0) | (src1_cols_empty_n == 1'b0) | (src1_rows_empty_n == 1'b0) | (src0_cols_empty_n == 1'b0) | (src0_rows_empty_n == 1'b0) | (matches_length_empty_n == 1'b0) | (descriptors1_length_empty_n == 1'b0) | (descriptors0_length_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_i_reg_257 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_fu_386_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        exp_tmp_V_reg_787 <= {{ireg_V_fu_404_p1[62:52]}};
        isneg_reg_781 <= ireg_V_fu_404_p1[32'd63];
        tmp_1115_reg_792 <= tmp_1115_fu_430_p1;
        tmp_421_i_reg_797 <= tmp_421_i_fu_434_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_reg_772 <= i_fu_392_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state3_on_subcall_done) & (tmp_422_i_reg_777 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        keypoints0_length_dc_2_fu_184 <= grp_detect_fu_268_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state3_on_subcall_done) & (tmp_422_i_reg_777 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        keypoints1_length_dc_2_fu_180 <= grp_detect_fu_268_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((thresh_empty_n == 1'b0) | (src1_cols_empty_n == 1'b0) | (src1_rows_empty_n == 1'b0) | (src0_cols_empty_n == 1'b0) | (src0_rows_empty_n == 1'b0) | (matches_length_empty_n == 1'b0) | (descriptors1_length_empty_n == 1'b0) | (descriptors0_length_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        matches_length_read_reg_764 <= matches_length_dout;
        src0_cols_read_reg_744 <= src0_cols_dout;
        src0_rows_read_reg_739 <= src0_rows_dout;
        src1_cols_read_reg_754 <= src1_cols_dout;
        src1_rows_read_reg_749 <= src1_rows_dout;
        thresh_read_reg_759 <= thresh_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        newSel17_reg_813 <= newSel17_fu_696_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_fu_386_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_422_i_reg_777 <= tmp_422_i_fu_398_p2;
    end
end

always @ (*) begin
    if ((~((grp_match_511_s_fu_340_ap_done == 1'b0) | (matches_length_out_full_n == 1'b0) | (keypoints1_length_out_full_n == 1'b0) | (keypoints0_length_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((grp_match_511_s_fu_340_ap_done == 1'b0) | (matches_length_out_full_n == 1'b0) | (keypoints1_length_out_full_n == 1'b0) | (keypoints0_length_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        descriptors0_length_blk_n = descriptors0_length_empty_n;
    end else begin
        descriptors0_length_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((thresh_empty_n == 1'b0) | (src1_cols_empty_n == 1'b0) | (src1_rows_empty_n == 1'b0) | (src0_cols_empty_n == 1'b0) | (src0_rows_empty_n == 1'b0) | (matches_length_empty_n == 1'b0) | (descriptors1_length_empty_n == 1'b0) | (descriptors0_length_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        descriptors0_length_read = 1'b1;
    end else begin
        descriptors0_length_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        descriptors0_val_val_address0 = grp_match_511_s_fu_340_descriptors0_val_val_address0;
    end else if (((tmp_422_i_reg_777 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        descriptors0_val_val_address0 = grp_detect_fu_268_descriptors_val_val_address0;
    end else begin
        descriptors0_val_val_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        descriptors0_val_val_ce0 = grp_match_511_s_fu_340_descriptors0_val_val_ce0;
    end else if (((tmp_422_i_reg_777 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        descriptors0_val_val_ce0 = grp_detect_fu_268_descriptors_val_val_ce0;
    end else begin
        descriptors0_val_val_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_422_i_reg_777 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        descriptors0_val_val_we0 = grp_detect_fu_268_descriptors_val_val_we0;
    end else begin
        descriptors0_val_val_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        descriptors1_length_blk_n = descriptors1_length_empty_n;
    end else begin
        descriptors1_length_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((thresh_empty_n == 1'b0) | (src1_cols_empty_n == 1'b0) | (src1_rows_empty_n == 1'b0) | (src0_cols_empty_n == 1'b0) | (src0_rows_empty_n == 1'b0) | (matches_length_empty_n == 1'b0) | (descriptors1_length_empty_n == 1'b0) | (descriptors0_length_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        descriptors1_length_read = 1'b1;
    end else begin
        descriptors1_length_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        descriptors1_val_val_address0 = grp_match_511_s_fu_340_descriptors1_val_val_address0;
    end else if (((tmp_422_i_reg_777 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        descriptors1_val_val_address0 = grp_detect_fu_268_descriptors_val_val_address0;
    end else begin
        descriptors1_val_val_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        descriptors1_val_val_ce0 = grp_match_511_s_fu_340_descriptors1_val_val_ce0;
    end else if (((tmp_422_i_reg_777 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        descriptors1_val_val_ce0 = grp_detect_fu_268_descriptors_val_val_ce0;
    end else begin
        descriptors1_val_val_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_422_i_reg_777 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        descriptors1_val_val_we0 = grp_detect_fu_268_descriptors_val_val_we0;
    end else begin
        descriptors1_val_val_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        if ((tmp_422_i_reg_777 == 1'd1)) begin
            grp_detect_fu_268_keypoints_val_angle_V_q0 = keypoints0_val_angle_V_q0;
        end else if ((tmp_422_i_reg_777 == 1'd0)) begin
            grp_detect_fu_268_keypoints_val_angle_V_q0 = keypoints1_val_angle_V_q0;
        end else begin
            grp_detect_fu_268_keypoints_val_angle_V_q0 = 'bx;
        end
    end else begin
        grp_detect_fu_268_keypoints_val_angle_V_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        if ((tmp_422_i_reg_777 == 1'd1)) begin
            grp_detect_fu_268_keypoints_val_layer_q0 = keypoints0_val_layer_q0;
        end else if ((tmp_422_i_reg_777 == 1'd0)) begin
            grp_detect_fu_268_keypoints_val_layer_q0 = keypoints1_val_layer_q0;
        end else begin
            grp_detect_fu_268_keypoints_val_layer_q0 = 'bx;
        end
    end else begin
        grp_detect_fu_268_keypoints_val_layer_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        if ((tmp_422_i_reg_777 == 1'd1)) begin
            grp_detect_fu_268_keypoints_val_octave_q0 = keypoints0_val_octave_q0;
        end else if ((tmp_422_i_reg_777 == 1'd0)) begin
            grp_detect_fu_268_keypoints_val_octave_q0 = keypoints1_val_octave_q0;
        end else begin
            grp_detect_fu_268_keypoints_val_octave_q0 = 'bx;
        end
    end else begin
        grp_detect_fu_268_keypoints_val_octave_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        if ((tmp_422_i_reg_777 == 1'd1)) begin
            grp_detect_fu_268_keypoints_val_pt_x_q0 = keypoints0_val_pt_x_q0;
        end else if ((tmp_422_i_reg_777 == 1'd0)) begin
            grp_detect_fu_268_keypoints_val_pt_x_q0 = keypoints1_val_pt_x_q0;
        end else begin
            grp_detect_fu_268_keypoints_val_pt_x_q0 = 'bx;
        end
    end else begin
        grp_detect_fu_268_keypoints_val_pt_x_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        if ((tmp_422_i_reg_777 == 1'd1)) begin
            grp_detect_fu_268_keypoints_val_pt_y_q0 = keypoints0_val_pt_y_q0;
        end else if ((tmp_422_i_reg_777 == 1'd0)) begin
            grp_detect_fu_268_keypoints_val_pt_y_q0 = keypoints1_val_pt_y_q0;
        end else begin
            grp_detect_fu_268_keypoints_val_pt_y_q0 = 'bx;
        end
    end else begin
        grp_detect_fu_268_keypoints_val_pt_y_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        if ((tmp_422_i_reg_777 == 1'd1)) begin
            grp_detect_fu_268_keypoints_val_sigma_V_q0 = keypoints0_val_sigma_V_q0;
        end else if ((tmp_422_i_reg_777 == 1'd0)) begin
            grp_detect_fu_268_keypoints_val_sigma_V_q0 = keypoints1_val_sigma_V_q0;
        end else begin
            grp_detect_fu_268_keypoints_val_sigma_V_q0 = 'bx;
        end
    end else begin
        grp_detect_fu_268_keypoints_val_sigma_V_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        if ((tmp_422_i_reg_777 == 1'd1)) begin
            grp_detect_fu_268_src_cols_read = src0_cols_read_reg_744;
        end else if ((tmp_422_i_reg_777 == 1'd0)) begin
            grp_detect_fu_268_src_cols_read = src1_cols_read_reg_754;
        end else begin
            grp_detect_fu_268_src_cols_read = 'bx;
        end
    end else begin
        grp_detect_fu_268_src_cols_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        if ((tmp_422_i_reg_777 == 1'd1)) begin
            grp_detect_fu_268_src_rows_read = src0_rows_read_reg_739;
        end else if ((tmp_422_i_reg_777 == 1'd0)) begin
            grp_detect_fu_268_src_rows_read = src1_rows_read_reg_749;
        end else begin
            grp_detect_fu_268_src_rows_read = 'bx;
        end
    end else begin
        grp_detect_fu_268_src_rows_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        if ((tmp_422_i_reg_777 == 1'd1)) begin
            grp_detect_fu_268_src_val_q0 = src0_val_q0;
        end else if ((tmp_422_i_reg_777 == 1'd0)) begin
            grp_detect_fu_268_src_val_q0 = src1_val_q0;
        end else begin
            grp_detect_fu_268_src_val_q0 = 'bx;
        end
    end else begin
        grp_detect_fu_268_src_val_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        keypoints0_length_out_blk_n = keypoints0_length_out_full_n;
    end else begin
        keypoints0_length_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((grp_match_511_s_fu_340_ap_done == 1'b0) | (matches_length_out_full_n == 1'b0) | (keypoints1_length_out_full_n == 1'b0) | (keypoints0_length_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5))) begin
        keypoints0_length_out_write = 1'b1;
    end else begin
        keypoints0_length_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_422_i_reg_777 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        keypoints0_val_angle_V_ce0 = grp_detect_fu_268_keypoints_val_angle_V_ce0;
    end else begin
        keypoints0_val_angle_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_422_i_reg_777 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        keypoints0_val_angle_V_we0 = grp_detect_fu_268_keypoints_val_angle_V_we0;
    end else begin
        keypoints0_val_angle_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_422_i_reg_777 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        keypoints0_val_layer_ce0 = grp_detect_fu_268_keypoints_val_layer_ce0;
    end else begin
        keypoints0_val_layer_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_422_i_reg_777 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        keypoints0_val_layer_we0 = grp_detect_fu_268_keypoints_val_layer_we0;
    end else begin
        keypoints0_val_layer_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_422_i_reg_777 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        keypoints0_val_octave_ce0 = grp_detect_fu_268_keypoints_val_octave_ce0;
    end else begin
        keypoints0_val_octave_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_422_i_reg_777 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        keypoints0_val_octave_we0 = grp_detect_fu_268_keypoints_val_octave_we0;
    end else begin
        keypoints0_val_octave_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_422_i_reg_777 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        keypoints0_val_pt_x_ce0 = grp_detect_fu_268_keypoints_val_pt_x_ce0;
    end else begin
        keypoints0_val_pt_x_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_422_i_reg_777 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        keypoints0_val_pt_x_we0 = grp_detect_fu_268_keypoints_val_pt_x_we0;
    end else begin
        keypoints0_val_pt_x_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_422_i_reg_777 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        keypoints0_val_pt_y_ce0 = grp_detect_fu_268_keypoints_val_pt_y_ce0;
    end else begin
        keypoints0_val_pt_y_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_422_i_reg_777 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        keypoints0_val_pt_y_we0 = grp_detect_fu_268_keypoints_val_pt_y_we0;
    end else begin
        keypoints0_val_pt_y_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_422_i_reg_777 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        keypoints0_val_sigma_V_ce0 = grp_detect_fu_268_keypoints_val_sigma_V_ce0;
    end else begin
        keypoints0_val_sigma_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_422_i_reg_777 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        keypoints0_val_sigma_V_we0 = grp_detect_fu_268_keypoints_val_sigma_V_we0;
    end else begin
        keypoints0_val_sigma_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        keypoints1_length_out_blk_n = keypoints1_length_out_full_n;
    end else begin
        keypoints1_length_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((grp_match_511_s_fu_340_ap_done == 1'b0) | (matches_length_out_full_n == 1'b0) | (keypoints1_length_out_full_n == 1'b0) | (keypoints0_length_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5))) begin
        keypoints1_length_out_write = 1'b1;
    end else begin
        keypoints1_length_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_422_i_reg_777 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        keypoints1_val_angle_V_ce0 = grp_detect_fu_268_keypoints_val_angle_V_ce0;
    end else begin
        keypoints1_val_angle_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_422_i_reg_777 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        keypoints1_val_angle_V_we0 = grp_detect_fu_268_keypoints_val_angle_V_we0;
    end else begin
        keypoints1_val_angle_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_422_i_reg_777 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        keypoints1_val_layer_ce0 = grp_detect_fu_268_keypoints_val_layer_ce0;
    end else begin
        keypoints1_val_layer_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_422_i_reg_777 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        keypoints1_val_layer_we0 = grp_detect_fu_268_keypoints_val_layer_we0;
    end else begin
        keypoints1_val_layer_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_422_i_reg_777 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        keypoints1_val_octave_ce0 = grp_detect_fu_268_keypoints_val_octave_ce0;
    end else begin
        keypoints1_val_octave_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_422_i_reg_777 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        keypoints1_val_octave_we0 = grp_detect_fu_268_keypoints_val_octave_we0;
    end else begin
        keypoints1_val_octave_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_422_i_reg_777 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        keypoints1_val_pt_x_ce0 = grp_detect_fu_268_keypoints_val_pt_x_ce0;
    end else begin
        keypoints1_val_pt_x_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_422_i_reg_777 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        keypoints1_val_pt_x_we0 = grp_detect_fu_268_keypoints_val_pt_x_we0;
    end else begin
        keypoints1_val_pt_x_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_422_i_reg_777 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        keypoints1_val_pt_y_ce0 = grp_detect_fu_268_keypoints_val_pt_y_ce0;
    end else begin
        keypoints1_val_pt_y_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_422_i_reg_777 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        keypoints1_val_pt_y_we0 = grp_detect_fu_268_keypoints_val_pt_y_we0;
    end else begin
        keypoints1_val_pt_y_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_422_i_reg_777 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        keypoints1_val_sigma_V_ce0 = grp_detect_fu_268_keypoints_val_sigma_V_ce0;
    end else begin
        keypoints1_val_sigma_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_422_i_reg_777 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        keypoints1_val_sigma_V_we0 = grp_detect_fu_268_keypoints_val_sigma_V_we0;
    end else begin
        keypoints1_val_sigma_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        matches_length_blk_n = matches_length_empty_n;
    end else begin
        matches_length_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        matches_length_out_blk_n = matches_length_out_full_n;
    end else begin
        matches_length_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((grp_match_511_s_fu_340_ap_done == 1'b0) | (matches_length_out_full_n == 1'b0) | (keypoints1_length_out_full_n == 1'b0) | (keypoints0_length_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5))) begin
        matches_length_out_write = 1'b1;
    end else begin
        matches_length_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((thresh_empty_n == 1'b0) | (src1_cols_empty_n == 1'b0) | (src1_rows_empty_n == 1'b0) | (src0_cols_empty_n == 1'b0) | (src0_rows_empty_n == 1'b0) | (matches_length_empty_n == 1'b0) | (descriptors1_length_empty_n == 1'b0) | (descriptors0_length_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        matches_length_read = 1'b1;
    end else begin
        matches_length_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        src0_cols_blk_n = src0_cols_empty_n;
    end else begin
        src0_cols_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((thresh_empty_n == 1'b0) | (src1_cols_empty_n == 1'b0) | (src1_rows_empty_n == 1'b0) | (src0_cols_empty_n == 1'b0) | (src0_rows_empty_n == 1'b0) | (matches_length_empty_n == 1'b0) | (descriptors1_length_empty_n == 1'b0) | (descriptors0_length_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        src0_cols_read = 1'b1;
    end else begin
        src0_cols_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        src0_rows_blk_n = src0_rows_empty_n;
    end else begin
        src0_rows_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((thresh_empty_n == 1'b0) | (src1_cols_empty_n == 1'b0) | (src1_rows_empty_n == 1'b0) | (src0_cols_empty_n == 1'b0) | (src0_rows_empty_n == 1'b0) | (matches_length_empty_n == 1'b0) | (descriptors1_length_empty_n == 1'b0) | (descriptors0_length_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        src0_rows_read = 1'b1;
    end else begin
        src0_rows_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_422_i_reg_777 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        src0_val_ce0 = grp_detect_fu_268_src_val_ce0;
    end else begin
        src0_val_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        src1_cols_blk_n = src1_cols_empty_n;
    end else begin
        src1_cols_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((thresh_empty_n == 1'b0) | (src1_cols_empty_n == 1'b0) | (src1_rows_empty_n == 1'b0) | (src0_cols_empty_n == 1'b0) | (src0_rows_empty_n == 1'b0) | (matches_length_empty_n == 1'b0) | (descriptors1_length_empty_n == 1'b0) | (descriptors0_length_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        src1_cols_read = 1'b1;
    end else begin
        src1_cols_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        src1_rows_blk_n = src1_rows_empty_n;
    end else begin
        src1_rows_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((thresh_empty_n == 1'b0) | (src1_cols_empty_n == 1'b0) | (src1_rows_empty_n == 1'b0) | (src0_cols_empty_n == 1'b0) | (src0_rows_empty_n == 1'b0) | (matches_length_empty_n == 1'b0) | (descriptors1_length_empty_n == 1'b0) | (descriptors0_length_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        src1_rows_read = 1'b1;
    end else begin
        src1_rows_read = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_422_i_reg_777 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        src1_val_ce0 = grp_detect_fu_268_src_val_ce0;
    end else begin
        src1_val_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        thresh_blk_n = thresh_empty_n;
    end else begin
        thresh_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((thresh_empty_n == 1'b0) | (src1_cols_empty_n == 1'b0) | (src1_rows_empty_n == 1'b0) | (src0_cols_empty_n == 1'b0) | (src0_rows_empty_n == 1'b0) | (matches_length_empty_n == 1'b0) | (descriptors1_length_empty_n == 1'b0) | (descriptors0_length_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        thresh_read = 1'b1;
    end else begin
        thresh_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((thresh_empty_n == 1'b0) | (src1_cols_empty_n == 1'b0) | (src1_rows_empty_n == 1'b0) | (src0_cols_empty_n == 1'b0) | (src0_rows_empty_n == 1'b0) | (matches_length_empty_n == 1'b0) | (descriptors1_length_empty_n == 1'b0) | (descriptors0_length_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond_i_fu_386_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b0 == ap_block_state3_on_subcall_done) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if ((~((grp_match_511_s_fu_340_ap_done == 1'b0) | (matches_length_out_full_n == 1'b0) | (keypoints1_length_out_full_n == 1'b0) | (keypoints0_length_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_fu_495_p2 = (12'd1075 - tmp_i_fu_468_p1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

always @ (*) begin
    ap_block_state1 = ((thresh_empty_n == 1'b0) | (src1_cols_empty_n == 1'b0) | (src1_rows_empty_n == 1'b0) | (src0_cols_empty_n == 1'b0) | (src0_rows_empty_n == 1'b0) | (matches_length_empty_n == 1'b0) | (descriptors1_length_empty_n == 1'b0) | (descriptors0_length_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state3_on_subcall_done = (((grp_detect_fu_268_ap_done == 1'b0) & (tmp_422_i_reg_777 == 1'd1)) | ((grp_detect_fu_268_ap_done == 1'b0) & (tmp_422_i_reg_777 == 1'd0)));
end

always @ (*) begin
    ap_block_state5 = ((matches_length_out_full_n == 1'b0) | (keypoints1_length_out_full_n == 1'b0) | (keypoints0_length_out_full_n == 1'b0));
end

assign descriptors0_val_val_d0 = grp_detect_fu_268_descriptors_val_val_d0;

assign descriptors1_val_val_d0 = grp_detect_fu_268_descriptors_val_val_d0;

assign exitcond_i_fu_386_p2 = ((i_i_reg_257 == 2'd2) ? 1'b1 : 1'b0);

assign extLd1_fu_372_p1 = descriptors1_length_dout;

assign extLd_fu_368_p1 = descriptors0_length_dout;

assign grp_detect_fu_268_ap_start = grp_detect_fu_268_ap_start_reg;

assign grp_match_511_s_fu_340_ap_start = grp_match_511_s_fu_340_ap_start_reg;

assign i_fu_392_p2 = (i_i_reg_257 + 2'd1);

assign icmp_fu_557_p2 = ((tmp_1117_fu_547_p4 == 7'd0) ? 1'b1 : 1'b0);

assign ireg_V_fu_404_p1 = d_assign_fu_357_p1;

assign keypoints0_length_out_din = keypoints0_length_dc_2_fu_184;

assign keypoints0_val_angle_V_address0 = grp_detect_fu_268_keypoints_val_angle_V_address0;

assign keypoints0_val_angle_V_d0 = grp_detect_fu_268_keypoints_val_angle_V_d0;

assign keypoints0_val_layer_address0 = grp_detect_fu_268_keypoints_val_layer_address0;

assign keypoints0_val_layer_d0 = grp_detect_fu_268_keypoints_val_layer_d0;

assign keypoints0_val_octave_address0 = grp_detect_fu_268_keypoints_val_octave_address0;

assign keypoints0_val_octave_d0 = grp_detect_fu_268_keypoints_val_octave_d0;

assign keypoints0_val_pt_x_address0 = grp_detect_fu_268_keypoints_val_pt_x_address0;

assign keypoints0_val_pt_x_d0 = grp_detect_fu_268_keypoints_val_pt_x_d0;

assign keypoints0_val_pt_y_address0 = grp_detect_fu_268_keypoints_val_pt_y_address0;

assign keypoints0_val_pt_y_d0 = grp_detect_fu_268_keypoints_val_pt_y_d0;

assign keypoints0_val_sigma_V_address0 = grp_detect_fu_268_keypoints_val_sigma_V_address0;

assign keypoints0_val_sigma_V_d0 = grp_detect_fu_268_keypoints_val_sigma_V_d0;

assign keypoints1_length_out_din = keypoints1_length_dc_2_fu_180;

assign keypoints1_val_angle_V_address0 = grp_detect_fu_268_keypoints_val_angle_V_address0;

assign keypoints1_val_angle_V_d0 = grp_detect_fu_268_keypoints_val_angle_V_d0;

assign keypoints1_val_layer_address0 = grp_detect_fu_268_keypoints_val_layer_address0;

assign keypoints1_val_layer_d0 = grp_detect_fu_268_keypoints_val_layer_d0;

assign keypoints1_val_octave_address0 = grp_detect_fu_268_keypoints_val_octave_address0;

assign keypoints1_val_octave_d0 = grp_detect_fu_268_keypoints_val_octave_d0;

assign keypoints1_val_pt_x_address0 = grp_detect_fu_268_keypoints_val_pt_x_address0;

assign keypoints1_val_pt_x_d0 = grp_detect_fu_268_keypoints_val_pt_x_d0;

assign keypoints1_val_pt_y_address0 = grp_detect_fu_268_keypoints_val_pt_y_address0;

assign keypoints1_val_pt_y_d0 = grp_detect_fu_268_keypoints_val_pt_y_d0;

assign keypoints1_val_sigma_V_address0 = grp_detect_fu_268_keypoints_val_sigma_V_address0;

assign keypoints1_val_sigma_V_d0 = grp_detect_fu_268_keypoints_val_sigma_V_d0;

assign man_V_5_fu_482_p2 = (54'd0 - p_Result_s_fu_478_p1);

assign man_V_6_fu_488_p3 = ((isneg_reg_781[0:0] === 1'b1) ? man_V_5_fu_482_p2 : p_Result_s_fu_478_p1);

assign matches_length_out_din = grp_match_511_s_fu_340_ap_return;

assign matches_val_idx0_address0 = grp_match_511_s_fu_340_matches_val_idx0_address0;

assign matches_val_idx0_ce0 = grp_match_511_s_fu_340_matches_val_idx0_ce0;

assign matches_val_idx0_d0 = grp_match_511_s_fu_340_matches_val_idx0_d0;

assign matches_val_idx0_we0 = grp_match_511_s_fu_340_matches_val_idx0_we0;

assign matches_val_idx1_address0 = grp_match_511_s_fu_340_matches_val_idx1_address0;

assign matches_val_idx1_ce0 = grp_match_511_s_fu_340_matches_val_idx1_ce0;

assign matches_val_idx1_d0 = grp_match_511_s_fu_340_matches_val_idx1_d0;

assign matches_val_idx1_we0 = grp_match_511_s_fu_340_matches_val_idx1_we0;

assign newSel15_fu_668_p3 = ((sel_tmp9_fu_624_p2[0:0] === 1'b1) ? tmp_435_i_fu_577_p3 : tmp_1116_fu_537_p1);

assign newSel16_fu_682_p3 = ((or_cond_fu_662_p2[0:0] === 1'b1) ? newSel_fu_654_p3 : newSel15_fu_668_p3);

assign newSel17_fu_696_p3 = ((or_cond4_fu_690_p2[0:0] === 1'b1) ? newSel16_fu_682_p3 : 32'd0);

assign newSel_fu_654_p3 = ((sel_tmp22_fu_648_p2[0:0] === 1'b1) ? tmp_436_i_fu_584_p2 : tmp_1118_fu_573_p1);

assign or_cond3_fu_676_p2 = (sel_tmp9_fu_624_p2 | sel_tmp2_fu_595_p2);

assign or_cond4_fu_690_p2 = (or_cond_fu_662_p2 | or_cond3_fu_676_p2);

assign or_cond_fu_662_p2 = (sel_tmp22_fu_648_p2 | sel_tmp15_fu_630_p2);

assign p_Result_s_fu_478_p1 = tmp_i_204_fu_471_p3;

assign sel_tmp15_fu_630_p2 = (tmp_429_i_fu_541_p2 & sel_tmp7_fu_612_p2);

assign sel_tmp1_fu_590_p2 = (tmp_421_i_reg_797 ^ 1'd1);

assign sel_tmp21_demorgan_fu_636_p2 = (tmp_424_i_fu_501_p2 | sel_tmp6_demorgan_fu_601_p2);

assign sel_tmp21_fu_642_p2 = (sel_tmp21_demorgan_fu_636_p2 ^ 1'd1);

assign sel_tmp22_fu_648_p2 = (sel_tmp21_fu_642_p2 & icmp_fu_557_p2);

assign sel_tmp2_fu_595_p2 = (tmp_427_i_fu_531_p2 & sel_tmp1_fu_590_p2);

assign sel_tmp6_demorgan_fu_601_p2 = (tmp_427_i_fu_531_p2 | tmp_421_i_reg_797);

assign sel_tmp6_fu_606_p2 = (sel_tmp6_demorgan_fu_601_p2 ^ 1'd1);

assign sel_tmp7_fu_612_p2 = (tmp_424_i_fu_501_p2 & sel_tmp6_fu_606_p2);

assign sel_tmp8_fu_618_p2 = (tmp_429_i_fu_541_p2 ^ 1'd1);

assign sel_tmp9_fu_624_p2 = (sel_tmp8_fu_618_p2 & sel_tmp7_fu_612_p2);

assign sh_amt_cast_i_fu_527_p1 = sh_amt_fu_519_p3;

assign sh_amt_fu_519_p3 = ((tmp_424_i_fu_501_p2[0:0] === 1'b1) ? tmp_425_i_fu_507_p2 : tmp_426_i_fu_513_p2);

assign src0_val_address0 = grp_detect_fu_268_src_val_address0;

assign src1_val_address0 = grp_detect_fu_268_src_val_address0;

assign tmp_1115_fu_430_p1 = ireg_V_fu_404_p1[51:0];

assign tmp_1116_fu_537_p1 = man_V_6_fu_488_p3[31:0];

assign tmp_1117_fu_547_p4 = {{sh_amt_fu_519_p3[11:5]}};

assign tmp_1118_fu_573_p1 = tmp_433_i_fu_567_p2[31:0];

assign tmp_421_i_fu_434_p2 = ((tmp_fu_408_p1 == 63'd0) ? 1'b1 : 1'b0);

assign tmp_422_i_fu_398_p2 = ((i_i_reg_257 == 2'd0) ? 1'b1 : 1'b0);

assign tmp_424_i_fu_501_p2 = (($signed(F2_fu_495_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign tmp_425_i_fu_507_p2 = ($signed(12'd4080) + $signed(F2_fu_495_p2));

assign tmp_426_i_fu_513_p2 = (12'd16 - F2_fu_495_p2);

assign tmp_427_i_fu_531_p2 = ((F2_fu_495_p2 == 12'd16) ? 1'b1 : 1'b0);

assign tmp_429_i_fu_541_p2 = ((sh_amt_fu_519_p3 < 12'd54) ? 1'b1 : 1'b0);

assign tmp_432_i_fu_563_p1 = $unsigned(sh_amt_cast_i_fu_527_p1);

assign tmp_433_i_fu_567_p2 = $signed(man_V_6_fu_488_p3) >>> tmp_432_i_fu_563_p1;

assign tmp_435_i_fu_577_p3 = ((isneg_reg_781[0:0] === 1'b1) ? 32'd4294967295 : 32'd0);

assign tmp_436_i_fu_584_p2 = tmp_1116_fu_537_p1 << sh_amt_cast_i_fu_527_p1;

assign tmp_fu_408_p1 = ireg_V_fu_404_p1[62:0];

assign tmp_i_204_fu_471_p3 = {{1'd1}, {tmp_1115_reg_792}};

assign tmp_i_fu_468_p1 = exp_tmp_V_reg_787;

endmodule //compute
