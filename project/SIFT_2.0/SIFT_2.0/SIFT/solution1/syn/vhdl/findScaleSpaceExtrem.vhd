-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity findScaleSpaceExtrem is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    gauss_pyr_0_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    gauss_pyr_0_val_V_ce0 : OUT STD_LOGIC;
    gauss_pyr_0_val_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    gauss_pyr_0_val_V_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    gauss_pyr_0_val_V_ce1 : OUT STD_LOGIC;
    gauss_pyr_0_val_V_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    gauss_pyr_1_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    gauss_pyr_1_val_V_ce0 : OUT STD_LOGIC;
    gauss_pyr_1_val_V_q0 : IN STD_LOGIC_VECTOR (25 downto 0);
    gauss_pyr_1_val_V_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    gauss_pyr_1_val_V_ce1 : OUT STD_LOGIC;
    gauss_pyr_1_val_V_q1 : IN STD_LOGIC_VECTOR (25 downto 0);
    gauss_pyr_2_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    gauss_pyr_2_val_V_ce0 : OUT STD_LOGIC;
    gauss_pyr_2_val_V_q0 : IN STD_LOGIC_VECTOR (25 downto 0);
    gauss_pyr_2_val_V_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    gauss_pyr_2_val_V_ce1 : OUT STD_LOGIC;
    gauss_pyr_2_val_V_q1 : IN STD_LOGIC_VECTOR (25 downto 0);
    gauss_pyr_3_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    gauss_pyr_3_val_V_ce0 : OUT STD_LOGIC;
    gauss_pyr_3_val_V_q0 : IN STD_LOGIC_VECTOR (25 downto 0);
    gauss_pyr_3_val_V_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    gauss_pyr_3_val_V_ce1 : OUT STD_LOGIC;
    gauss_pyr_3_val_V_q1 : IN STD_LOGIC_VECTOR (25 downto 0);
    gauss_pyr_4_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    gauss_pyr_4_val_V_ce0 : OUT STD_LOGIC;
    gauss_pyr_4_val_V_q0 : IN STD_LOGIC_VECTOR (25 downto 0);
    gauss_pyr_4_val_V_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    gauss_pyr_4_val_V_ce1 : OUT STD_LOGIC;
    gauss_pyr_4_val_V_q1 : IN STD_LOGIC_VECTOR (25 downto 0);
    gauss_pyr_5_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    gauss_pyr_5_val_V_ce0 : OUT STD_LOGIC;
    gauss_pyr_5_val_V_q0 : IN STD_LOGIC_VECTOR (25 downto 0);
    gauss_pyr_5_val_V_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    gauss_pyr_5_val_V_ce1 : OUT STD_LOGIC;
    gauss_pyr_5_val_V_q1 : IN STD_LOGIC_VECTOR (25 downto 0);
    gauss_pyr_0_rows_read : IN STD_LOGIC_VECTOR (31 downto 0);
    gauss_pyr_1_rows_read : IN STD_LOGIC_VECTOR (31 downto 0);
    gauss_pyr_2_rows_read : IN STD_LOGIC_VECTOR (31 downto 0);
    gauss_pyr_3_rows_read : IN STD_LOGIC_VECTOR (31 downto 0);
    gauss_pyr_4_rows_read : IN STD_LOGIC_VECTOR (31 downto 0);
    gauss_pyr_5_rows_read : IN STD_LOGIC_VECTOR (31 downto 0);
    gauss_pyr_0_cols_read : IN STD_LOGIC_VECTOR (31 downto 0);
    gauss_pyr_1_cols_read : IN STD_LOGIC_VECTOR (31 downto 0);
    gauss_pyr_2_cols_read : IN STD_LOGIC_VECTOR (31 downto 0);
    gauss_pyr_3_cols_read : IN STD_LOGIC_VECTOR (31 downto 0);
    gauss_pyr_4_cols_read : IN STD_LOGIC_VECTOR (31 downto 0);
    gauss_pyr_5_cols_read : IN STD_LOGIC_VECTOR (31 downto 0);
    dog_pyr_0_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    dog_pyr_0_val_V_ce0 : OUT STD_LOGIC;
    dog_pyr_0_val_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    dog_pyr_0_val_V_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    dog_pyr_0_val_V_ce1 : OUT STD_LOGIC;
    dog_pyr_0_val_V_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    dog_pyr_1_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    dog_pyr_1_val_V_ce0 : OUT STD_LOGIC;
    dog_pyr_1_val_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    dog_pyr_1_val_V_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    dog_pyr_1_val_V_ce1 : OUT STD_LOGIC;
    dog_pyr_1_val_V_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    dog_pyr_2_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    dog_pyr_2_val_V_ce0 : OUT STD_LOGIC;
    dog_pyr_2_val_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    dog_pyr_2_val_V_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    dog_pyr_2_val_V_ce1 : OUT STD_LOGIC;
    dog_pyr_2_val_V_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    dog_pyr_3_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    dog_pyr_3_val_V_ce0 : OUT STD_LOGIC;
    dog_pyr_3_val_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    dog_pyr_3_val_V_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    dog_pyr_3_val_V_ce1 : OUT STD_LOGIC;
    dog_pyr_3_val_V_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    dog_pyr_4_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    dog_pyr_4_val_V_ce0 : OUT STD_LOGIC;
    dog_pyr_4_val_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    dog_pyr_4_val_V_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    dog_pyr_4_val_V_ce1 : OUT STD_LOGIC;
    dog_pyr_4_val_V_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    dog_pyr_0_rows_read : IN STD_LOGIC_VECTOR (31 downto 0);
    dog_pyr_0_cols_read : IN STD_LOGIC_VECTOR (31 downto 0);
    octave : IN STD_LOGIC_VECTOR (30 downto 0);
    keypoints_val_pt_x_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    keypoints_val_pt_x_ce0 : OUT STD_LOGIC;
    keypoints_val_pt_x_we0 : OUT STD_LOGIC;
    keypoints_val_pt_x_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    keypoints_val_pt_y_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    keypoints_val_pt_y_ce0 : OUT STD_LOGIC;
    keypoints_val_pt_y_we0 : OUT STD_LOGIC;
    keypoints_val_pt_y_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    keypoints_val_angle_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    keypoints_val_angle_V_ce0 : OUT STD_LOGIC;
    keypoints_val_angle_V_we0 : OUT STD_LOGIC;
    keypoints_val_angle_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    keypoints_val_sigma_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    keypoints_val_sigma_V_ce0 : OUT STD_LOGIC;
    keypoints_val_sigma_V_we0 : OUT STD_LOGIC;
    keypoints_val_sigma_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    keypoints_val_octave_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    keypoints_val_octave_ce0 : OUT STD_LOGIC;
    keypoints_val_octave_we0 : OUT STD_LOGIC;
    keypoints_val_octave_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    keypoints_val_layer_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    keypoints_val_layer_ce0 : OUT STD_LOGIC;
    keypoints_val_layer_we0 : OUT STD_LOGIC;
    keypoints_val_layer_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    keypoints_length_read : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of findScaleSpaceExtrem is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (72 downto 0) := "0000000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (72 downto 0) := "0000000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (72 downto 0) := "0000000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (72 downto 0) := "0000000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (72 downto 0) := "0000001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (72 downto 0) := "0000010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (72 downto 0) := "0000100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (72 downto 0) := "0001000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state90 : STD_LOGIC_VECTOR (72 downto 0) := "0010000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state91 : STD_LOGIC_VECTOR (72 downto 0) := "0100000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state92 : STD_LOGIC_VECTOR (72 downto 0) := "1000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_44 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000100";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv32_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000010";
    constant ap_const_lv32_43 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000011";
    constant ap_const_lv32_45 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000101";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv31_5 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000101";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_46 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000110";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_FFFFFFFB : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111011";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv10_3FF : STD_LOGIC_VECTOR (9 downto 0) := "1111111111";
    constant ap_const_lv31_1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_const_lv32_10000 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000010000000000000000";
    constant ap_const_lv18_3FFFF : STD_LOGIC_VECTOR (17 downto 0) := "111111111111111111";
    constant ap_const_lv18_1 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv50_0 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000000000000000000000000000000";
    constant ap_const_lv27_0 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    constant ap_const_lv6_21 : STD_LOGIC_VECTOR (5 downto 0) := "100001";
    constant ap_const_lv8_9E : STD_LOGIC_VECTOR (7 downto 0) := "10011110";
    constant ap_const_lv8_7E : STD_LOGIC_VECTOR (7 downto 0) := "01111110";
    constant ap_const_lv8_96 : STD_LOGIC_VECTOR (7 downto 0) := "10010110";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv23_7FFFFF : STD_LOGIC_VECTOR (22 downto 0) := "11111111111111111111111";
    constant ap_const_lv9_181 : STD_LOGIC_VECTOR (8 downto 0) := "110000001";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv48_CCCC : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000000000001100110011001100";
    constant ap_const_lv6_24 : STD_LOGIC_VECTOR (5 downto 0) := "100100";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv6_3F : STD_LOGIC_VECTOR (5 downto 0) := "111111";
    constant ap_const_lv6_23 : STD_LOGIC_VECTOR (5 downto 0) := "100011";
    constant ap_const_lv31_7FFFFFFF : STD_LOGIC_VECTOR (30 downto 0) := "1111111111111111111111111111111";
    constant ap_const_lv26_0 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000000000";
    constant ap_const_lv31_1F : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000011111";
    constant ap_const_lv35_0 : STD_LOGIC_VECTOR (34 downto 0) := "00000000000000000000000000000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv64_FFFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv7_61 : STD_LOGIC_VECTOR (6 downto 0) := "1100001";
    constant ap_const_lv7_7F : STD_LOGIC_VECTOR (6 downto 0) := "1111111";
    constant ap_const_lv8_70 : STD_LOGIC_VECTOR (7 downto 0) := "01110000";
    constant ap_const_lv8_6F : STD_LOGIC_VECTOR (7 downto 0) := "01101111";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_433 : STD_LOGIC_VECTOR (11 downto 0) := "010000110011";
    constant ap_const_lv12_10 : STD_LOGIC_VECTOR (11 downto 0) := "000000010000";
    constant ap_const_lv12_FF0 : STD_LOGIC_VECTOR (11 downto 0) := "111111110000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_36 : STD_LOGIC_VECTOR (11 downto 0) := "000000110110";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_240000 : STD_LOGIC_VECTOR (31 downto 0) := "00000000001001000000000000000000";
    constant ap_const_lv31_7FDC0000 : STD_LOGIC_VECTOR (30 downto 0) := "1111111110111000000000000000000";
    constant ap_const_lv41_168 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000000101101000";
    constant ap_const_lv83_38E38E38E39 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000000000000000000000000000000111000111000111000111000111000111000111001";
    constant ap_const_lv83_0 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_52 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010010";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (72 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal mask_table1686_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal mask_table1686_ce0 : STD_LOGIC;
    signal mask_table1686_q0 : STD_LOGIC_VECTOR (22 downto 0);
    signal one_half_table2682_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal one_half_table2682_ce0 : STD_LOGIC;
    signal one_half_table2682_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Val2_48_reg_1248 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_48_reg_1248_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state69_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state71_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state73_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state75_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state77_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state79_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state81_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state83_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state85_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state87_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state89_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal p_Val2_48_reg_1248_pp0_iter2_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_48_reg_1248_pp0_iter3_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_48_reg_1248_pp0_iter4_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_48_reg_1248_pp0_iter5_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_48_reg_1248_pp0_iter6_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_48_reg_1248_pp0_iter7_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_48_reg_1248_pp0_iter8_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal reg_1372 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal reg_1376 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1380 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1384 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal reg_1388 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1392 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1396 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal reg_1400 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1404 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1408 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal reg_1412 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1416 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1420 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal reg_1424 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1428 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1432 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal reg_1436 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1440 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1444 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal reg_1448 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1452 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1456 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal reg_1460 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1464 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1468 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_CS_fsm_state42 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal tmp_s_fu_1472_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_reg_4806 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_235_fu_1478_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_235_reg_4811 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_fu_1495_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal l_reg_4819 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal exitcond2_fu_1489_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp26_fu_1501_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp26_reg_4824 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp28_fu_1507_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp28_reg_4880 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_152_cast_fu_1526_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_152_cast_reg_4939 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_236_fu_1517_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_154_cast_fu_1544_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_154_cast_reg_4948 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_fu_1552_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal r_reg_4957 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_156_cast_fu_1562_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_156_cast_reg_4962 : STD_LOGIC_VECTOR (17 downto 0);
    signal dog_pyr_0_val_V_add_reg_4974 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal tmp_237_fu_1574_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal dog_pyr_0_val_V_add_1_reg_4979 : STD_LOGIC_VECTOR (15 downto 0);
    signal dog_pyr_0_val_V_add_2_reg_4984 : STD_LOGIC_VECTOR (15 downto 0);
    signal dog_pyr_1_val_V_add_reg_4989 : STD_LOGIC_VECTOR (15 downto 0);
    signal dog_pyr_1_val_V_add_1_reg_4994 : STD_LOGIC_VECTOR (15 downto 0);
    signal dog_pyr_1_val_V_add_2_reg_4999 : STD_LOGIC_VECTOR (15 downto 0);
    signal dog_pyr_2_val_V_add_reg_5004 : STD_LOGIC_VECTOR (15 downto 0);
    signal dog_pyr_2_val_V_add_1_reg_5009 : STD_LOGIC_VECTOR (15 downto 0);
    signal dog_pyr_2_val_V_add_2_reg_5014 : STD_LOGIC_VECTOR (15 downto 0);
    signal dog_pyr_3_val_V_add_reg_5019 : STD_LOGIC_VECTOR (15 downto 0);
    signal dog_pyr_3_val_V_add_1_reg_5024 : STD_LOGIC_VECTOR (15 downto 0);
    signal dog_pyr_3_val_V_add_2_reg_5029 : STD_LOGIC_VECTOR (15 downto 0);
    signal dog_pyr_4_val_V_add_reg_5034 : STD_LOGIC_VECTOR (15 downto 0);
    signal dog_pyr_4_val_V_add_1_reg_5039 : STD_LOGIC_VECTOR (15 downto 0);
    signal dog_pyr_4_val_V_add_2_reg_5044 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1024_fu_1673_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_1024_reg_5055 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal tmp_239_fu_1657_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_240_fu_1663_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal dog_pyr_0_val_V_add_3_reg_5061 : STD_LOGIC_VECTOR (15 downto 0);
    signal dog_pyr_4_val_V_add_3_reg_5081 : STD_LOGIC_VECTOR (15 downto 0);
    signal dog_pyr_0_val_V_add_4_reg_5086 : STD_LOGIC_VECTOR (15 downto 0);
    signal dog_pyr_0_val_V_add_5_reg_5091 : STD_LOGIC_VECTOR (15 downto 0);
    signal dog_pyr_1_val_V_add_4_reg_5096 : STD_LOGIC_VECTOR (15 downto 0);
    signal dog_pyr_1_val_V_add_5_reg_5101 : STD_LOGIC_VECTOR (15 downto 0);
    signal dog_pyr_2_val_V_add_4_reg_5106 : STD_LOGIC_VECTOR (15 downto 0);
    signal dog_pyr_2_val_V_add_5_reg_5111 : STD_LOGIC_VECTOR (15 downto 0);
    signal dog_pyr_3_val_V_add_4_reg_5116 : STD_LOGIC_VECTOR (15 downto 0);
    signal dog_pyr_3_val_V_add_5_reg_5121 : STD_LOGIC_VECTOR (15 downto 0);
    signal dog_pyr_4_val_V_add_4_reg_5126 : STD_LOGIC_VECTOR (15 downto 0);
    signal dog_pyr_4_val_V_add_5_reg_5131 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1026_fu_1743_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_1026_reg_5139 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_241_fu_1733_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal dog_pyr_0_val_V_add_6_reg_5145 : STD_LOGIC_VECTOR (15 downto 0);
    signal dog_pyr_4_val_V_add_6_reg_5165 : STD_LOGIC_VECTOR (15 downto 0);
    signal dog_pyr_0_val_V_add_7_reg_5170 : STD_LOGIC_VECTOR (15 downto 0);
    signal dog_pyr_0_val_V_add_8_reg_5175 : STD_LOGIC_VECTOR (15 downto 0);
    signal dog_pyr_1_val_V_add_7_reg_5180 : STD_LOGIC_VECTOR (15 downto 0);
    signal dog_pyr_1_val_V_add_8_reg_5185 : STD_LOGIC_VECTOR (15 downto 0);
    signal dog_pyr_2_val_V_add_7_reg_5190 : STD_LOGIC_VECTOR (15 downto 0);
    signal dog_pyr_2_val_V_add_8_reg_5195 : STD_LOGIC_VECTOR (15 downto 0);
    signal dog_pyr_3_val_V_add_7_reg_5200 : STD_LOGIC_VECTOR (15 downto 0);
    signal dog_pyr_3_val_V_add_8_reg_5205 : STD_LOGIC_VECTOR (15 downto 0);
    signal dog_pyr_4_val_V_add_7_reg_5210 : STD_LOGIC_VECTOR (15 downto 0);
    signal dog_pyr_4_val_V_add_8_reg_5215 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1029_fu_2301_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_1029_reg_5298 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal tmp_1027_fu_2289_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal dog_pyr_0_val_V_add_9_reg_5304 : STD_LOGIC_VECTOR (15 downto 0);
    signal dog_pyr_4_val_V_add_9_reg_5324 : STD_LOGIC_VECTOR (15 downto 0);
    signal dog_pyr_0_val_V_add_10_reg_5329 : STD_LOGIC_VECTOR (15 downto 0);
    signal dog_pyr_0_val_V_add_11_reg_5334 : STD_LOGIC_VECTOR (15 downto 0);
    signal dog_pyr_1_val_V_add_10_reg_5339 : STD_LOGIC_VECTOR (15 downto 0);
    signal dog_pyr_1_val_V_add_11_reg_5344 : STD_LOGIC_VECTOR (15 downto 0);
    signal dog_pyr_2_val_V_add_10_reg_5349 : STD_LOGIC_VECTOR (15 downto 0);
    signal dog_pyr_2_val_V_add_11_reg_5354 : STD_LOGIC_VECTOR (15 downto 0);
    signal dog_pyr_3_val_V_add_10_reg_5359 : STD_LOGIC_VECTOR (15 downto 0);
    signal dog_pyr_3_val_V_add_11_reg_5364 : STD_LOGIC_VECTOR (15 downto 0);
    signal dog_pyr_4_val_V_add_10_reg_5369 : STD_LOGIC_VECTOR (15 downto 0);
    signal dog_pyr_4_val_V_add_11_reg_5374 : STD_LOGIC_VECTOR (15 downto 0);
    signal dog_pyr_0_val_V_add_12_reg_5382 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_271_fu_2361_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_170_fu_2391_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_170_reg_5387 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_171_fu_2396_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_171_reg_5392 : STD_LOGIC_VECTOR (17 downto 0);
    signal dog_pyr_4_val_V_add_12_reg_5412 : STD_LOGIC_VECTOR (15 downto 0);
    signal dog_pyr_0_val_V_add_13_reg_5417 : STD_LOGIC_VECTOR (15 downto 0);
    signal dog_pyr_0_val_V_add_14_reg_5422 : STD_LOGIC_VECTOR (15 downto 0);
    signal dog_pyr_1_val_V_add_13_reg_5427 : STD_LOGIC_VECTOR (15 downto 0);
    signal dog_pyr_1_val_V_add_14_reg_5432 : STD_LOGIC_VECTOR (15 downto 0);
    signal dog_pyr_2_val_V_add_13_reg_5437 : STD_LOGIC_VECTOR (15 downto 0);
    signal dog_pyr_2_val_V_add_14_reg_5442 : STD_LOGIC_VECTOR (15 downto 0);
    signal dog_pyr_3_val_V_add_13_reg_5447 : STD_LOGIC_VECTOR (15 downto 0);
    signal dog_pyr_3_val_V_add_14_reg_5452 : STD_LOGIC_VECTOR (15 downto 0);
    signal dog_pyr_4_val_V_add_13_reg_5457 : STD_LOGIC_VECTOR (15 downto 0);
    signal dog_pyr_4_val_V_add_14_reg_5462 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state59 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state59 : signal is "none";
    signal layer_1_reg_5575 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state60 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state60 : signal is "none";
    signal grp_adjustLocalExtrema_fu_1288_ap_idle : STD_LOGIC;
    signal grp_adjustLocalExtrema_fu_1288_ap_ready : STD_LOGIC;
    signal grp_adjustLocalExtrema_fu_1288_ap_done : STD_LOGIC;
    signal r0_1_reg_5581 : STD_LOGIC_VECTOR (31 downto 0);
    signal c0_1_reg_5586 : STD_LOGIC_VECTOR (31 downto 0);
    signal kpt_pt_x_reg_5591 : STD_LOGIC_VECTOR (15 downto 0);
    signal kpt_pt_y_reg_5597 : STD_LOGIC_VECTOR (15 downto 0);
    signal kpt_sigma_V_reg_5603 : STD_LOGIC_VECTOR (31 downto 0);
    signal kpt_response_V_reg_5611 : STD_LOGIC_VECTOR (31 downto 0);
    signal kpt_octave_reg_5616 : STD_LOGIC_VECTOR (7 downto 0);
    signal kpt_layer_reg_5622 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_s_fu_3015_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_s_reg_5628 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state61 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state61 : signal is "none";
    signal tmp_1033_fu_3059_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal tmp_1033_reg_5633 : STD_LOGIC_VECTOR (49 downto 0);
    signal tmp_297_fu_3063_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_297_reg_5639 : STD_LOGIC_VECTOR (0 downto 0);
    signal is_neg_reg_5644 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_301_fu_3080_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_301_reg_5650 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_302_fu_3092_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_302_reg_5655 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1036_fu_3141_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1036_reg_5660 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state62 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state62 : signal is "none";
    signal tmp32_V_5_fu_3207_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_5_reg_5665 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_20_fu_3215_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_20_reg_5670 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state64 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state64 : signal is "none";
    signal p_Result_s_reg_5675 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_assign_fu_3271_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_reg_5680 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state65 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state65 : signal is "none";
    signal t_V_11_fu_3278_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_V_11_reg_5685 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i_i_fu_3292_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_reg_5691 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1685_i_i_fu_3298_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1685_i_i_reg_5697 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_104_reg_5712 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state66 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state66 : signal is "none";
    signal p_Val2_45_fu_3528_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_45_reg_5717 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_95_fu_3541_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_95_reg_5723 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state67 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state67 : signal is "none";
    signal mag_thr_V_reg_5728 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state68 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state68 : signal is "none";
    signal grp_calcOrientationHist_fu_1260_ap_idle : STD_LOGIC;
    signal grp_calcOrientationHist_fu_1260_ap_ready : STD_LOGIC;
    signal grp_calcOrientationHist_fu_1260_ap_done : STD_LOGIC;
    signal exitcond_fu_3568_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_5733 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_fu_3574_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal j_reg_5737 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal hist_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal hist_V_load_reg_5748 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state70_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state72_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state74_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state76_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_state78_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_state80_pp0_stage1_iter5 : BOOLEAN;
    signal ap_block_state82_pp0_stage1_iter6 : BOOLEAN;
    signal ap_block_state84_pp0_stage1_iter7 : BOOLEAN;
    signal ap_block_state86_pp0_stage1_iter8 : BOOLEAN;
    signal ap_block_state88_pp0_stage1_iter9 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal tmp_308_fu_3605_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_308_reg_5755 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_308_reg_5755_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_308_reg_5755_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_308_reg_5755_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_308_reg_5755_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_308_reg_5755_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_308_reg_5755_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_308_reg_5755_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_308_reg_5755_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_308_reg_5755_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_88_reg_5764 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal tmp_310_fu_3628_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_310_reg_5770 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_310_reg_5770_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_310_reg_5770_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_310_reg_5770_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_310_reg_5770_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_310_reg_5770_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_310_reg_5770_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_310_reg_5770_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_310_reg_5770_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_312_fu_3638_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_312_reg_5779 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_312_reg_5779_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_312_reg_5779_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_312_reg_5779_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_312_reg_5779_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_312_reg_5779_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_312_reg_5779_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_312_reg_5779_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_312_reg_5779_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_315_fu_3660_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_315_reg_5783 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_315_reg_5783_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal is_neg_1_fu_3665_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal is_neg_1_reg_5788 : STD_LOGIC_VECTOR (0 downto 0);
    signal is_neg_1_reg_5788_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_90_fu_3679_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_90_reg_5793 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_76_cast_fu_3687_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal p_Val2_76_cast_reg_5798 : STD_LOGIC_VECTOR (32 downto 0);
    signal num_zeros_1_fu_3717_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal num_zeros_1_reg_5804 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_fu_3742_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal r_V_reg_5809 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_320_fu_3748_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_320_reg_5814 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_320_reg_5814_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_320_reg_5814_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal is_neg_2_reg_5819 : STD_LOGIC_VECTOR (0 downto 0);
    signal is_neg_2_reg_5819_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal is_neg_2_reg_5819_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal msb_idx_1_fu_3762_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal msb_idx_1_reg_5825 : STD_LOGIC_VECTOR (31 downto 0);
    signal msb_idx_1_reg_5825_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_11_fu_3878_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_11_reg_5830 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_92_fu_3899_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal p_Val2_92_reg_5835 : STD_LOGIC_VECTOR (34 downto 0);
    signal msb_idx_3_fu_3986_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal msb_idx_3_reg_5841 : STD_LOGIC_VECTOR (31 downto 0);
    signal msb_idx_3_reg_5841_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1071_fu_3992_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_1071_reg_5846 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_1072_reg_5851 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp32_V_17_fu_4110_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_17_reg_5856 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_21_fu_4118_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_21_reg_5861 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_8_reg_5866 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_03_i1_fu_4176_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_03_i1_reg_5871 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_22_fu_4183_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_22_reg_5876 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_13_reg_5881 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_03_i2_fu_4241_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_03_i2_reg_5886 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1335_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal v_assign_reg_5891 : STD_LOGIC_VECTOR (31 downto 0);
    signal isneg_reg_5896 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1088_fu_4278_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_1088_reg_5902 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_331_fu_4282_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_331_reg_5907 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_332_fu_4294_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_332_reg_5913 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_amt_fu_4312_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_reg_5919 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_335_fu_4320_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_335_reg_5925 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp32_fu_4336_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp32_reg_5931 : STD_LOGIC_VECTOR (0 downto 0);
    signal storemerge4_fu_4574_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal storemerge4_reg_5936 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_s_fu_4585_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal r_V_s_reg_5941 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_1094_reg_5946 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1097_fu_4641_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1097_reg_5952 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1098_fu_4645_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1098_reg_5957 : STD_LOGIC_VECTOR (31 downto 0);
    signal c_fu_4682_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state92 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state92 : signal is "none";
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state69 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal hist_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal hist_V_ce0 : STD_LOGIC;
    signal hist_V_we0 : STD_LOGIC;
    signal hist_V_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal hist_V_ce1 : STD_LOGIC;
    signal hist_V_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_calcOrientationHist_fu_1260_ap_start : STD_LOGIC;
    signal grp_calcOrientationHist_fu_1260_img_0_val_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_calcOrientationHist_fu_1260_img_0_val_V_ce0 : STD_LOGIC;
    signal grp_calcOrientationHist_fu_1260_img_0_val_V_address1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_calcOrientationHist_fu_1260_img_0_val_V_ce1 : STD_LOGIC;
    signal grp_calcOrientationHist_fu_1260_img_1_val_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_calcOrientationHist_fu_1260_img_1_val_V_ce0 : STD_LOGIC;
    signal grp_calcOrientationHist_fu_1260_img_1_val_V_address1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_calcOrientationHist_fu_1260_img_1_val_V_ce1 : STD_LOGIC;
    signal grp_calcOrientationHist_fu_1260_img_2_val_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_calcOrientationHist_fu_1260_img_2_val_V_ce0 : STD_LOGIC;
    signal grp_calcOrientationHist_fu_1260_img_2_val_V_address1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_calcOrientationHist_fu_1260_img_2_val_V_ce1 : STD_LOGIC;
    signal grp_calcOrientationHist_fu_1260_img_3_val_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_calcOrientationHist_fu_1260_img_3_val_V_ce0 : STD_LOGIC;
    signal grp_calcOrientationHist_fu_1260_img_3_val_V_address1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_calcOrientationHist_fu_1260_img_3_val_V_ce1 : STD_LOGIC;
    signal grp_calcOrientationHist_fu_1260_img_4_val_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_calcOrientationHist_fu_1260_img_4_val_V_ce0 : STD_LOGIC;
    signal grp_calcOrientationHist_fu_1260_img_4_val_V_address1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_calcOrientationHist_fu_1260_img_4_val_V_ce1 : STD_LOGIC;
    signal grp_calcOrientationHist_fu_1260_img_5_val_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_calcOrientationHist_fu_1260_img_5_val_V_ce0 : STD_LOGIC;
    signal grp_calcOrientationHist_fu_1260_img_5_val_V_address1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_calcOrientationHist_fu_1260_img_5_val_V_ce1 : STD_LOGIC;
    signal grp_calcOrientationHist_fu_1260_hist_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_calcOrientationHist_fu_1260_hist_V_ce0 : STD_LOGIC;
    signal grp_calcOrientationHist_fu_1260_hist_V_we0 : STD_LOGIC;
    signal grp_calcOrientationHist_fu_1260_hist_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_calcOrientationHist_fu_1260_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_adjustLocalExtrema_fu_1288_ap_start : STD_LOGIC;
    signal grp_adjustLocalExtrema_fu_1288_dog_pyr_0_val_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_adjustLocalExtrema_fu_1288_dog_pyr_0_val_V_ce0 : STD_LOGIC;
    signal grp_adjustLocalExtrema_fu_1288_dog_pyr_0_val_V_address1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_adjustLocalExtrema_fu_1288_dog_pyr_0_val_V_ce1 : STD_LOGIC;
    signal grp_adjustLocalExtrema_fu_1288_dog_pyr_1_val_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_adjustLocalExtrema_fu_1288_dog_pyr_1_val_V_ce0 : STD_LOGIC;
    signal grp_adjustLocalExtrema_fu_1288_dog_pyr_1_val_V_address1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_adjustLocalExtrema_fu_1288_dog_pyr_1_val_V_ce1 : STD_LOGIC;
    signal grp_adjustLocalExtrema_fu_1288_dog_pyr_2_val_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_adjustLocalExtrema_fu_1288_dog_pyr_2_val_V_ce0 : STD_LOGIC;
    signal grp_adjustLocalExtrema_fu_1288_dog_pyr_2_val_V_address1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_adjustLocalExtrema_fu_1288_dog_pyr_2_val_V_ce1 : STD_LOGIC;
    signal grp_adjustLocalExtrema_fu_1288_dog_pyr_3_val_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_adjustLocalExtrema_fu_1288_dog_pyr_3_val_V_ce0 : STD_LOGIC;
    signal grp_adjustLocalExtrema_fu_1288_dog_pyr_3_val_V_address1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_adjustLocalExtrema_fu_1288_dog_pyr_3_val_V_ce1 : STD_LOGIC;
    signal grp_adjustLocalExtrema_fu_1288_dog_pyr_4_val_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_adjustLocalExtrema_fu_1288_dog_pyr_4_val_V_ce0 : STD_LOGIC;
    signal grp_adjustLocalExtrema_fu_1288_dog_pyr_4_val_V_address1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_adjustLocalExtrema_fu_1288_dog_pyr_4_val_V_ce1 : STD_LOGIC;
    signal grp_adjustLocalExtrema_fu_1288_ap_return_0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_adjustLocalExtrema_fu_1288_ap_return_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_adjustLocalExtrema_fu_1288_ap_return_2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_adjustLocalExtrema_fu_1288_ap_return_3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_adjustLocalExtrema_fu_1288_ap_return_4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_adjustLocalExtrema_fu_1288_ap_return_5 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_adjustLocalExtrema_fu_1288_ap_return_6 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_adjustLocalExtrema_fu_1288_ap_return_7 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_adjustLocalExtrema_fu_1288_ap_return_8 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_adjustLocalExtrema_fu_1288_ap_return_9 : STD_LOGIC_VECTOR (7 downto 0);
    signal layer_reg_1197 : STD_LOGIC_VECTOR (2 downto 0);
    signal r0_reg_1209 : STD_LOGIC_VECTOR (30 downto 0);
    signal c0_reg_1221 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_phi_mux_val_V_phi_fu_1236_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal val_V_reg_1233 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_p_Val2_48_phi_fu_1252_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal grp_calcOrientationHist_fu_1260_ap_start_reg : STD_LOGIC := '0';
    signal grp_adjustLocalExtrema_fu_1288_ap_start_reg : STD_LOGIC := '0';
    signal tmp_157_cast_fu_1588_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_158_cast_fu_1602_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_159_cast_fu_1616_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_160_cast_fu_1684_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_161_cast_fu_1697_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_162_cast_fu_1710_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_163_cast_fu_1754_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_164_cast_fu_1767_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_165_cast_fu_1780_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_166_cast_fu_2312_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_167_cast_fu_2325_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_168_cast_fu_2338_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_169_cast_fu_2382_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_170_cast_fu_2401_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_171_cast_fu_2409_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1686_i_i_fu_3314_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_307_fu_3580_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_309_fu_3610_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal tmp_311_fu_3633_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_i_fu_4667_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal keypoints_length_fu_370 : STD_LOGIC_VECTOR (31 downto 0);
    signal vector_length_write_s_fu_4661_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal kpt_layer_1_fu_374 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_252_fu_2941_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state90 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state90 : signal is "none";
    signal kpt_octave_1_fu_378 : STD_LOGIC_VECTOR (7 downto 0);
    signal kpt_pt_x_1_fu_382 : STD_LOGIC_VECTOR (15 downto 0);
    signal kpt_pt_y_1_fu_386 : STD_LOGIC_VECTOR (15 downto 0);
    signal kpt_sigma_V_1_fu_390 : STD_LOGIC_VECTOR (31 downto 0);
    signal kpt_response_V_1_fu_394 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_CS_fsm_state41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal ap_CS_fsm_state50 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state50 : signal is "none";
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal ap_CS_fsm_state43 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state43 : signal is "none";
    signal ap_CS_fsm_state44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal ap_CS_fsm_state45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal ap_CS_fsm_state46 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state46 : signal is "none";
    signal ap_CS_fsm_state47 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state47 : signal is "none";
    signal ap_CS_fsm_state48 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state48 : signal is "none";
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal ap_CS_fsm_state49 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state49 : signal is "none";
    signal ap_CS_fsm_state51 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state51 : signal is "none";
    signal ap_CS_fsm_state52 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state52 : signal is "none";
    signal ap_CS_fsm_state53 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state53 : signal is "none";
    signal ap_CS_fsm_state54 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state54 : signal is "none";
    signal ap_CS_fsm_state55 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state55 : signal is "none";
    signal ap_CS_fsm_state56 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state56 : signal is "none";
    signal ap_CS_fsm_state57 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state57 : signal is "none";
    signal grp_fu_1339_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state63 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state63 : signal is "none";
    signal r0_cast_fu_1513_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1016_fu_1522_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_1017_fu_1534_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_1018_fu_1538_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_1019_fu_1558_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal c0_cast_fu_1570_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1020_fu_1579_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_157_fu_1583_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_158_fu_1597_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_159_fu_1611_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_41_fu_1625_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1022_fu_1641_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_99_fu_1631_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal agg_result_V_i_i_fu_1649_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1023_fu_1669_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_160_fu_1679_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_161_fu_1693_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_162_fu_1706_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sel_tmp27_fu_1719_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_val_V_load_p_fu_1726_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1025_fu_1739_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_163_fu_1749_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_164_fu_1763_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_165_fu_1776_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sel_tmp37_fu_1789_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_val_V_load_1_fu_1796_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp47_fu_1809_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_val_V_load_2_fu_1816_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp57_fu_1829_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_val_V_load_3_fu_1836_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp67_fu_1849_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_val_V_load_4_fu_1856_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp77_fu_1869_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_val_V_load_5_fu_1876_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp87_fu_1889_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_val_V_load_6_fu_1896_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp97_fu_1909_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_val_V_load_7_fu_1916_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp107_fu_1929_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_val_V_load_8_fu_1936_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp117_fu_1949_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_val_V_load_9_fu_1956_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp127_fu_1969_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_val_V_load_1_1_fu_1976_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp137_fu_1989_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_val_V_load_1_2_fu_1996_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp147_fu_2009_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_val_V_load_1_3_fu_2016_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp157_fu_2029_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_val_V_load_1_4_fu_2036_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp167_fu_2049_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_val_V_load_1_5_fu_2056_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp177_fu_2069_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_val_V_load_1_6_fu_2076_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp187_fu_2089_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_val_V_load_1_7_fu_2096_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp197_fu_2109_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_val_V_load_1_8_fu_2116_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp207_fu_2129_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_val_V_load_1_9_fu_2136_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp217_fu_2149_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_val_V_load_1_10_fu_2156_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp227_fu_2169_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_val_V_load_2_1_fu_2176_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp237_fu_2189_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_val_V_load_2_2_fu_2196_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp247_fu_2209_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_val_V_load_2_3_fu_2216_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp257_fu_2229_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_val_V_load_2_4_fu_2236_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp267_fu_2249_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_val_V_load_2_5_fu_2256_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal sel_tmp277_fu_2269_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_val_V_load_2_6_fu_2276_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1028_fu_2297_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_166_fu_2307_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_167_fu_2321_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_168_fu_2334_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sel_tmp32_fu_2347_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_val_V_load_2_7_fu_2354_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1030_fu_2367_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_1031_fu_2371_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_169_fu_2377_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sel_tmp42_fu_2417_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_val_V_load_2_8_fu_2424_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp52_fu_2437_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_val_V_load_2_9_fu_2444_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp62_fu_2457_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_val_V_load_2_10_fu_2464_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp72_fu_2477_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_val_V_load_3_1_fu_2484_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp82_fu_2497_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_val_V_load_3_2_fu_2504_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp92_fu_2517_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_val_V_load_3_3_fu_2524_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp102_fu_2537_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_val_V_load_3_4_fu_2544_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp112_fu_2557_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_val_V_load_3_5_fu_2564_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp122_fu_2577_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_val_V_load_3_6_fu_2584_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp132_fu_2597_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_val_V_load_3_7_fu_2604_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp142_fu_2617_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_val_V_load_3_8_fu_2624_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp152_fu_2637_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_val_V_load_3_9_fu_2644_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp162_fu_2657_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_val_V_load_3_10_fu_2664_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp172_fu_2677_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_val_V_load_4_1_fu_2684_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp182_fu_2697_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_val_V_load_4_2_fu_2704_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp192_fu_2717_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_val_V_load_4_3_fu_2724_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp202_fu_2737_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_val_V_load_4_4_fu_2744_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp212_fu_2757_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_val_V_load_4_5_fu_2764_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp222_fu_2777_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_val_V_load_4_6_fu_2784_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp232_fu_2797_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_val_V_load_4_7_fu_2804_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp242_fu_2817_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_val_V_load_4_8_fu_2824_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp252_fu_2837_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_val_V_load_4_9_fu_2844_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp262_fu_2857_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_val_V_load_4_10_fu_2864_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp272_fu_2877_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_val_V_load_5_1_fu_2884_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state58 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state58 : signal is "none";
    signal sel_tmp282_fu_2897_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal dog_pyr_val_V_load_5_2_fu_2904_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1032_fu_2987_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_shl3_fu_2998_p3 : STD_LOGIC_VECTOR (46 downto 0);
    signal p_shl2_fu_2990_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_shl3_cast_fu_3005_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_s_fu_3009_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_shl_fu_3025_p3 : STD_LOGIC_VECTOR (49 downto 0);
    signal p_shl4_fu_3037_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_shl_cast_fu_3033_p1 : STD_LOGIC_VECTOR (50 downto 0);
    signal p_shl4_cast_fu_3049_p1 : STD_LOGIC_VECTOR (50 downto 0);
    signal p_Val2_28_fu_3053_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal p_shl4_cast1_fu_3045_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal tmp_1050_fu_3077_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_332_cast_fu_3104_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal p_Val2_76_fu_3109_p3 : STD_LOGIC_VECTOR (49 downto 0);
    signal p_Val2_68_cast_fu_3115_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_100_fu_3119_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_298_fu_3129_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal num_zeros_fu_3137_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal msb_idx_fu_3145_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1037_fu_3151_p4 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp32_V_fu_3167_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_299_fu_3171_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1039_fu_3183_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1040_fu_3187_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1041_fu_3193_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1042_fu_3197_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_fu_3161_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp32_V_3_fu_3177_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_4_fu_3203_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1339_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_300_fu_3229_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_254_fu_3234_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_255_fu_3239_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Repl2_34_trunc_fu_3243_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_256_fu_3249_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_101_fu_3256_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal f_fu_3267_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal loc_V_fu_3282_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal index_V_fu_3304_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_Result_s_198_fu_3320_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal one_half_i_i_cast_fu_3335_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_43_fu_3339_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal loc_V_8_fu_3344_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_1688_i_i_fu_3348_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_fu_3360_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal xs_sig_V_fu_3354_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Result_102_fu_3327_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_103_fu_3370_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp287_v_fu_3378_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp288_fu_3389_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp289_fu_3394_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp287_fu_3385_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_s_fu_3399_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_84_fu_3406_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal loc_V_10_fu_3428_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_1701_i_i_i_fu_3432_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal loc_V_9_fu_3418_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_i_i_i_i_cast_fu_3446_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_assign_fu_3450_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_1702_i_i_i_fu_3464_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal isNeg_fu_3456_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1702_i_i_i_cast_fu_3470_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_assign_4_fu_3474_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_assign_6_i_i_i_ca_fu_3482_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sh_assign_6_i_i_i_ca_1_fu_3486_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_1701_i_i_i_cast9_fu_3442_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_1703_i_i_i_fu_3490_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_1704_i_i_i_fu_3494_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_1049_fu_3506_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1705_i_i_i_fu_3500_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_176_fu_3514_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_177_fu_3518_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_i_i_i_fu_3536_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_30_fu_3552_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_30_fu_3552_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_304_fu_3585_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_305_fu_3591_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal left_fu_3597_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_306_fu_3615_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_310_fu_3628_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal right_fu_3621_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_312_fu_3638_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_313_fu_3643_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_313_fu_3643_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_314_fu_3647_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal p_Val2_31_fu_3650_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_315_fu_3660_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1051_fu_3656_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_354_cast_fu_3673_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_105_fu_3691_p4 : STD_LOGIC_VECTOR (32 downto 0);
    signal p_Result_106_fu_3701_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_316_fu_3709_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_33_fu_3721_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal p_Val2_34_fu_3727_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_365_cast_fu_3734_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_366_cast_fu_3738_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_1055_fu_3771_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1054_fu_3767_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal msb_idx_2_fu_3779_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_1056_fu_3787_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_317_fu_3803_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_358_cast_fu_3809_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1057_fu_3818_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1058_fu_3822_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1060_fu_3834_p4 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_1061_fu_3843_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1059_fu_3828_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1063_fu_3856_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1062_fu_3849_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_1064_fu_3864_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_1065_fu_3868_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal icmp24_fu_3797_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp32_V_8_fu_3813_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_10_fu_3874_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_35_fu_3886_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp_321_fu_3893_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp_322_fu_3906_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Result_10_fu_3916_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_323_fu_3920_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_11_fu_3938_p4 : STD_LOGIC_VECTOR (32 downto 0);
    signal p_Result_108_fu_3948_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_325_fu_3960_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1070_fu_3968_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1069_fu_3928_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_324_fu_3932_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal NZeros_fu_3972_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal num_zeros_2_fu_3978_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal msb_idx_4_fu_4007_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_1073_fu_4013_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_326_fu_4032_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp32_V_14_fu_4029_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_373_cast_fu_4038_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1075_fu_4048_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_81_cast_fu_4004_p1 : STD_LOGIC_VECTOR (96 downto 0);
    signal tmp_1076_fu_4052_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1078_fu_4064_p4 : STD_LOGIC_VECTOR (96 downto 0);
    signal tmp_1079_fu_4074_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_1077_fu_4058_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_1081_fu_4088_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_1080_fu_4080_p3 : STD_LOGIC_VECTOR (96 downto 0);
    signal tmp_1082_fu_4096_p1 : STD_LOGIC_VECTOR (96 downto 0);
    signal tmp_1083_fu_4100_p2 : STD_LOGIC_VECTOR (96 downto 0);
    signal icmp29_fu_4023_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp32_V_15_fu_4042_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_16_fu_4106_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_318_fu_4132_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_cast_cast_fu_4140_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1067_fu_4137_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Repl2_37_trunc_fu_4148_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_319_fu_4154_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_107_fu_4161_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal f_3_fu_4172_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_327_fu_4197_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp12_cast_cast_fu_4205_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1085_fu_4202_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Repl2_41_trunc_fu_4213_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_328_fu_4219_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_109_fu_4226_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal f_5_fu_4237_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal d_assign_fu_1342_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ireg_V_fu_4248_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_tmp_V_fu_4264_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_1086_fu_4252_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_329_fu_4274_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_fu_4288_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_333_fu_4300_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_334_fu_4306_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_1090_fu_4326_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_330_fu_4342_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal p_Result_110_fu_4349_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_3_fu_4353_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_4_fu_4359_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal sh_amt_cast_fu_4366_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_337_fu_4378_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_338_fu_4382_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_1089_fu_4369_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp1_fu_4405_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_demorgan_fu_4415_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_fu_4419_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_336_fu_4373_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_fu_4425_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_fu_4430_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp21_demorgan_fu_4448_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp21_fu_4453_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp22_fu_4459_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_339_fu_4399_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1091_fu_4388_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp15_fu_4442_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp9_fu_4436_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal storemerge_fu_4392_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp2_fu_4410_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_fu_4472_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel_fu_4464_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel13_fu_4478_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_cond1_fu_4486_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_fu_4500_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel14_fu_4492_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_340_fu_4514_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_397_cast_fu_4522_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_47_fu_4506_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_38_fu_4526_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1092_fu_4532_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_341_fu_4550_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_53_cast_fu_4556_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Val2_265_Val2_s_fu_4562_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_1093_fu_4536_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_s_199_fu_4544_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_265_Val2_1_fu_4570_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_s_fu_4585_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_fu_4602_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal mul_fu_4602_p2 : STD_LOGIC_VECTOR (82 downto 0);
    signal neg_mul_fu_4608_p2 : STD_LOGIC_VECTOR (82 downto 0);
    signal tmp_1095_fu_4614_p4 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp_1096_fu_4624_p4 : STD_LOGIC_VECTOR (35 downto 0);
    signal p_v_v_fu_4634_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal neg_ti_fu_4649_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal vector_length_write_s_fu_4661_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i_fu_4667_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_242_fu_1803_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_243_fu_1823_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_244_fu_1843_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_245_fu_1863_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_246_fu_1883_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_247_fu_1903_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_248_fu_1923_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_249_fu_1943_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_250_fu_1963_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_251_fu_1983_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_253_fu_2003_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_257_fu_2023_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_258_fu_2043_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_259_fu_2063_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_260_fu_2083_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_261_fu_2103_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_262_fu_2123_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_263_fu_2143_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_264_fu_2163_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_265_fu_2183_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_266_fu_2203_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_267_fu_2223_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_268_fu_2243_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_269_fu_2263_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_270_fu_2283_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_272_fu_2431_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_273_fu_2451_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_274_fu_2471_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_275_fu_2491_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_276_fu_2511_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_277_fu_2531_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_278_fu_2551_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_279_fu_2571_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_280_fu_2591_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_281_fu_2611_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_282_fu_2631_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_283_fu_2651_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_284_fu_2671_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_285_fu_2691_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_286_fu_2711_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_287_fu_2731_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_288_fu_2751_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_289_fu_2771_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_290_fu_2791_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_291_fu_2811_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_292_fu_2831_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_293_fu_2851_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_294_fu_2871_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_295_fu_2891_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_296_fu_2911_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (72 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component calcOrientationHist IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        img_0_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        img_0_val_V_ce0 : OUT STD_LOGIC;
        img_0_val_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        img_0_val_V_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        img_0_val_V_ce1 : OUT STD_LOGIC;
        img_0_val_V_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        img_1_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        img_1_val_V_ce0 : OUT STD_LOGIC;
        img_1_val_V_q0 : IN STD_LOGIC_VECTOR (25 downto 0);
        img_1_val_V_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        img_1_val_V_ce1 : OUT STD_LOGIC;
        img_1_val_V_q1 : IN STD_LOGIC_VECTOR (25 downto 0);
        img_2_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        img_2_val_V_ce0 : OUT STD_LOGIC;
        img_2_val_V_q0 : IN STD_LOGIC_VECTOR (25 downto 0);
        img_2_val_V_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        img_2_val_V_ce1 : OUT STD_LOGIC;
        img_2_val_V_q1 : IN STD_LOGIC_VECTOR (25 downto 0);
        img_3_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        img_3_val_V_ce0 : OUT STD_LOGIC;
        img_3_val_V_q0 : IN STD_LOGIC_VECTOR (25 downto 0);
        img_3_val_V_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        img_3_val_V_ce1 : OUT STD_LOGIC;
        img_3_val_V_q1 : IN STD_LOGIC_VECTOR (25 downto 0);
        img_4_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        img_4_val_V_ce0 : OUT STD_LOGIC;
        img_4_val_V_q0 : IN STD_LOGIC_VECTOR (25 downto 0);
        img_4_val_V_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        img_4_val_V_ce1 : OUT STD_LOGIC;
        img_4_val_V_q1 : IN STD_LOGIC_VECTOR (25 downto 0);
        img_5_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        img_5_val_V_ce0 : OUT STD_LOGIC;
        img_5_val_V_q0 : IN STD_LOGIC_VECTOR (25 downto 0);
        img_5_val_V_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        img_5_val_V_ce1 : OUT STD_LOGIC;
        img_5_val_V_q1 : IN STD_LOGIC_VECTOR (25 downto 0);
        img_val_V_offset : IN STD_LOGIC_VECTOR (31 downto 0);
        img_rows_read : IN STD_LOGIC_VECTOR (31 downto 0);
        img_cols_read : IN STD_LOGIC_VECTOR (31 downto 0);
        r0 : IN STD_LOGIC_VECTOR (31 downto 0);
        c0 : IN STD_LOGIC_VECTOR (31 downto 0);
        radius : IN STD_LOGIC_VECTOR (31 downto 0);
        sigma_V : IN STD_LOGIC_VECTOR (31 downto 0);
        hist_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        hist_V_ce0 : OUT STD_LOGIC;
        hist_V_we0 : OUT STD_LOGIC;
        hist_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component adjustLocalExtrema IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        dog_pyr_0_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        dog_pyr_0_val_V_ce0 : OUT STD_LOGIC;
        dog_pyr_0_val_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        dog_pyr_0_val_V_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        dog_pyr_0_val_V_ce1 : OUT STD_LOGIC;
        dog_pyr_0_val_V_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        dog_pyr_1_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        dog_pyr_1_val_V_ce0 : OUT STD_LOGIC;
        dog_pyr_1_val_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        dog_pyr_1_val_V_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        dog_pyr_1_val_V_ce1 : OUT STD_LOGIC;
        dog_pyr_1_val_V_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        dog_pyr_2_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        dog_pyr_2_val_V_ce0 : OUT STD_LOGIC;
        dog_pyr_2_val_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        dog_pyr_2_val_V_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        dog_pyr_2_val_V_ce1 : OUT STD_LOGIC;
        dog_pyr_2_val_V_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        dog_pyr_3_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        dog_pyr_3_val_V_ce0 : OUT STD_LOGIC;
        dog_pyr_3_val_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        dog_pyr_3_val_V_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        dog_pyr_3_val_V_ce1 : OUT STD_LOGIC;
        dog_pyr_3_val_V_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        dog_pyr_4_val_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        dog_pyr_4_val_V_ce0 : OUT STD_LOGIC;
        dog_pyr_4_val_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        dog_pyr_4_val_V_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        dog_pyr_4_val_V_ce1 : OUT STD_LOGIC;
        dog_pyr_4_val_V_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        dog_pyr_0_rows_read : IN STD_LOGIC_VECTOR (31 downto 0);
        dog_pyr_0_cols_read : IN STD_LOGIC_VECTOR (31 downto 0);
        octave : IN STD_LOGIC_VECTOR (30 downto 0);
        layer_read : IN STD_LOGIC_VECTOR (2 downto 0);
        r_read : IN STD_LOGIC_VECTOR (30 downto 0);
        c_read : IN STD_LOGIC_VECTOR (30 downto 0);
        kpt_pt_x_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kpt_pt_y_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kpt_sigma_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        kpt_response_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        kpt_octave_read : IN STD_LOGIC_VECTOR (7 downto 0);
        kpt_layer_read : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component SIFT2_Core_fdiv_3g8j IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component SIFT2_Core_uitofpXh4 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component SIFT2_Core_fpext_hbi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component SIFT2_Core_mux_63VhK_x_x IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component calcOrientationHi6jw IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (22 downto 0) );
    end component;


    component calcOrientationHi7jG IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component findScaleSpaceExtbbk IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    mask_table1686_U : component calcOrientationHi6jw
    generic map (
        DataWidth => 23,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => mask_table1686_address0,
        ce0 => mask_table1686_ce0,
        q0 => mask_table1686_q0);

    one_half_table2682_U : component calcOrientationHi7jG
    generic map (
        DataWidth => 24,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => one_half_table2682_address0,
        ce0 => one_half_table2682_ce0,
        q0 => one_half_table2682_q0);

    hist_V_U : component findScaleSpaceExtbbk
    generic map (
        DataWidth => 32,
        AddressRange => 36,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => hist_V_address0,
        ce0 => hist_V_ce0,
        we0 => hist_V_we0,
        d0 => grp_calcOrientationHist_fu_1260_hist_V_d0,
        q0 => hist_V_q0,
        address1 => hist_V_address1,
        ce1 => hist_V_ce1,
        q1 => hist_V_q1);

    grp_calcOrientationHist_fu_1260 : component calcOrientationHist
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_calcOrientationHist_fu_1260_ap_start,
        ap_done => grp_calcOrientationHist_fu_1260_ap_done,
        ap_idle => grp_calcOrientationHist_fu_1260_ap_idle,
        ap_ready => grp_calcOrientationHist_fu_1260_ap_ready,
        img_0_val_V_address0 => grp_calcOrientationHist_fu_1260_img_0_val_V_address0,
        img_0_val_V_ce0 => grp_calcOrientationHist_fu_1260_img_0_val_V_ce0,
        img_0_val_V_q0 => gauss_pyr_0_val_V_q0,
        img_0_val_V_address1 => grp_calcOrientationHist_fu_1260_img_0_val_V_address1,
        img_0_val_V_ce1 => grp_calcOrientationHist_fu_1260_img_0_val_V_ce1,
        img_0_val_V_q1 => gauss_pyr_0_val_V_q1,
        img_1_val_V_address0 => grp_calcOrientationHist_fu_1260_img_1_val_V_address0,
        img_1_val_V_ce0 => grp_calcOrientationHist_fu_1260_img_1_val_V_ce0,
        img_1_val_V_q0 => gauss_pyr_1_val_V_q0,
        img_1_val_V_address1 => grp_calcOrientationHist_fu_1260_img_1_val_V_address1,
        img_1_val_V_ce1 => grp_calcOrientationHist_fu_1260_img_1_val_V_ce1,
        img_1_val_V_q1 => gauss_pyr_1_val_V_q1,
        img_2_val_V_address0 => grp_calcOrientationHist_fu_1260_img_2_val_V_address0,
        img_2_val_V_ce0 => grp_calcOrientationHist_fu_1260_img_2_val_V_ce0,
        img_2_val_V_q0 => gauss_pyr_2_val_V_q0,
        img_2_val_V_address1 => grp_calcOrientationHist_fu_1260_img_2_val_V_address1,
        img_2_val_V_ce1 => grp_calcOrientationHist_fu_1260_img_2_val_V_ce1,
        img_2_val_V_q1 => gauss_pyr_2_val_V_q1,
        img_3_val_V_address0 => grp_calcOrientationHist_fu_1260_img_3_val_V_address0,
        img_3_val_V_ce0 => grp_calcOrientationHist_fu_1260_img_3_val_V_ce0,
        img_3_val_V_q0 => gauss_pyr_3_val_V_q0,
        img_3_val_V_address1 => grp_calcOrientationHist_fu_1260_img_3_val_V_address1,
        img_3_val_V_ce1 => grp_calcOrientationHist_fu_1260_img_3_val_V_ce1,
        img_3_val_V_q1 => gauss_pyr_3_val_V_q1,
        img_4_val_V_address0 => grp_calcOrientationHist_fu_1260_img_4_val_V_address0,
        img_4_val_V_ce0 => grp_calcOrientationHist_fu_1260_img_4_val_V_ce0,
        img_4_val_V_q0 => gauss_pyr_4_val_V_q0,
        img_4_val_V_address1 => grp_calcOrientationHist_fu_1260_img_4_val_V_address1,
        img_4_val_V_ce1 => grp_calcOrientationHist_fu_1260_img_4_val_V_ce1,
        img_4_val_V_q1 => gauss_pyr_4_val_V_q1,
        img_5_val_V_address0 => grp_calcOrientationHist_fu_1260_img_5_val_V_address0,
        img_5_val_V_ce0 => grp_calcOrientationHist_fu_1260_img_5_val_V_ce0,
        img_5_val_V_q0 => gauss_pyr_5_val_V_q0,
        img_5_val_V_address1 => grp_calcOrientationHist_fu_1260_img_5_val_V_address1,
        img_5_val_V_ce1 => grp_calcOrientationHist_fu_1260_img_5_val_V_ce1,
        img_5_val_V_q1 => gauss_pyr_5_val_V_q1,
        img_val_V_offset => layer_1_reg_5575,
        img_rows_read => tmp_301_reg_5650,
        img_cols_read => tmp_302_reg_5655,
        r0 => r0_1_reg_5581,
        c0 => c0_1_reg_5586,
        radius => p_Val2_95_reg_5723,
        sigma_V => p_s_reg_5628,
        hist_V_address0 => grp_calcOrientationHist_fu_1260_hist_V_address0,
        hist_V_ce0 => grp_calcOrientationHist_fu_1260_hist_V_ce0,
        hist_V_we0 => grp_calcOrientationHist_fu_1260_hist_V_we0,
        hist_V_d0 => grp_calcOrientationHist_fu_1260_hist_V_d0,
        ap_return => grp_calcOrientationHist_fu_1260_ap_return);

    grp_adjustLocalExtrema_fu_1288 : component adjustLocalExtrema
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_adjustLocalExtrema_fu_1288_ap_start,
        ap_done => grp_adjustLocalExtrema_fu_1288_ap_done,
        ap_idle => grp_adjustLocalExtrema_fu_1288_ap_idle,
        ap_ready => grp_adjustLocalExtrema_fu_1288_ap_ready,
        dog_pyr_0_val_V_address0 => grp_adjustLocalExtrema_fu_1288_dog_pyr_0_val_V_address0,
        dog_pyr_0_val_V_ce0 => grp_adjustLocalExtrema_fu_1288_dog_pyr_0_val_V_ce0,
        dog_pyr_0_val_V_q0 => dog_pyr_0_val_V_q0,
        dog_pyr_0_val_V_address1 => grp_adjustLocalExtrema_fu_1288_dog_pyr_0_val_V_address1,
        dog_pyr_0_val_V_ce1 => grp_adjustLocalExtrema_fu_1288_dog_pyr_0_val_V_ce1,
        dog_pyr_0_val_V_q1 => dog_pyr_0_val_V_q1,
        dog_pyr_1_val_V_address0 => grp_adjustLocalExtrema_fu_1288_dog_pyr_1_val_V_address0,
        dog_pyr_1_val_V_ce0 => grp_adjustLocalExtrema_fu_1288_dog_pyr_1_val_V_ce0,
        dog_pyr_1_val_V_q0 => dog_pyr_1_val_V_q0,
        dog_pyr_1_val_V_address1 => grp_adjustLocalExtrema_fu_1288_dog_pyr_1_val_V_address1,
        dog_pyr_1_val_V_ce1 => grp_adjustLocalExtrema_fu_1288_dog_pyr_1_val_V_ce1,
        dog_pyr_1_val_V_q1 => dog_pyr_1_val_V_q1,
        dog_pyr_2_val_V_address0 => grp_adjustLocalExtrema_fu_1288_dog_pyr_2_val_V_address0,
        dog_pyr_2_val_V_ce0 => grp_adjustLocalExtrema_fu_1288_dog_pyr_2_val_V_ce0,
        dog_pyr_2_val_V_q0 => dog_pyr_2_val_V_q0,
        dog_pyr_2_val_V_address1 => grp_adjustLocalExtrema_fu_1288_dog_pyr_2_val_V_address1,
        dog_pyr_2_val_V_ce1 => grp_adjustLocalExtrema_fu_1288_dog_pyr_2_val_V_ce1,
        dog_pyr_2_val_V_q1 => dog_pyr_2_val_V_q1,
        dog_pyr_3_val_V_address0 => grp_adjustLocalExtrema_fu_1288_dog_pyr_3_val_V_address0,
        dog_pyr_3_val_V_ce0 => grp_adjustLocalExtrema_fu_1288_dog_pyr_3_val_V_ce0,
        dog_pyr_3_val_V_q0 => dog_pyr_3_val_V_q0,
        dog_pyr_3_val_V_address1 => grp_adjustLocalExtrema_fu_1288_dog_pyr_3_val_V_address1,
        dog_pyr_3_val_V_ce1 => grp_adjustLocalExtrema_fu_1288_dog_pyr_3_val_V_ce1,
        dog_pyr_3_val_V_q1 => dog_pyr_3_val_V_q1,
        dog_pyr_4_val_V_address0 => grp_adjustLocalExtrema_fu_1288_dog_pyr_4_val_V_address0,
        dog_pyr_4_val_V_ce0 => grp_adjustLocalExtrema_fu_1288_dog_pyr_4_val_V_ce0,
        dog_pyr_4_val_V_q0 => dog_pyr_4_val_V_q0,
        dog_pyr_4_val_V_address1 => grp_adjustLocalExtrema_fu_1288_dog_pyr_4_val_V_address1,
        dog_pyr_4_val_V_ce1 => grp_adjustLocalExtrema_fu_1288_dog_pyr_4_val_V_ce1,
        dog_pyr_4_val_V_q1 => dog_pyr_4_val_V_q1,
        dog_pyr_0_rows_read => dog_pyr_0_rows_read,
        dog_pyr_0_cols_read => dog_pyr_0_cols_read,
        octave => octave,
        layer_read => layer_reg_1197,
        r_read => r0_reg_1209,
        c_read => c0_reg_1221,
        kpt_pt_x_read => kpt_pt_x_1_fu_382,
        kpt_pt_y_read => kpt_pt_y_1_fu_386,
        kpt_sigma_V_read => kpt_sigma_V_1_fu_390,
        kpt_response_V_read => kpt_response_V_1_fu_394,
        kpt_octave_read => kpt_octave_1_fu_378,
        kpt_layer_read => kpt_layer_1_fu_374,
        ap_return_0 => grp_adjustLocalExtrema_fu_1288_ap_return_0,
        ap_return_1 => grp_adjustLocalExtrema_fu_1288_ap_return_1,
        ap_return_2 => grp_adjustLocalExtrema_fu_1288_ap_return_2,
        ap_return_3 => grp_adjustLocalExtrema_fu_1288_ap_return_3,
        ap_return_4 => grp_adjustLocalExtrema_fu_1288_ap_return_4,
        ap_return_5 => grp_adjustLocalExtrema_fu_1288_ap_return_5,
        ap_return_6 => grp_adjustLocalExtrema_fu_1288_ap_return_6,
        ap_return_7 => grp_adjustLocalExtrema_fu_1288_ap_return_7,
        ap_return_8 => grp_adjustLocalExtrema_fu_1288_ap_return_8,
        ap_return_9 => grp_adjustLocalExtrema_fu_1288_ap_return_9);

    SIFT2_Core_fdiv_3g8j_U944 : component SIFT2_Core_fdiv_3g8j
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_03_i1_reg_5871,
        din1 => p_03_i2_reg_5886,
        ce => ap_const_logic_1,
        dout => grp_fu_1335_p2);

    SIFT2_Core_uitofpXh4_U945 : component SIFT2_Core_uitofpXh4
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1339_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_1339_p1);

    SIFT2_Core_fpext_hbi_U946 : component SIFT2_Core_fpext_hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => v_assign_reg_5891,
        dout => d_assign_fu_1342_p1);

    SIFT2_Core_mux_63VhK_x_x_U947 : component SIFT2_Core_mux_63VhK_x_x
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => gauss_pyr_0_rows_read,
        din1 => gauss_pyr_1_rows_read,
        din2 => gauss_pyr_2_rows_read,
        din3 => gauss_pyr_3_rows_read,
        din4 => gauss_pyr_4_rows_read,
        din5 => gauss_pyr_5_rows_read,
        din6 => tmp_1050_fu_3077_p1,
        dout => tmp_301_fu_3080_p8);

    SIFT2_Core_mux_63VhK_x_x_U948 : component SIFT2_Core_mux_63VhK_x_x
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => gauss_pyr_0_cols_read,
        din1 => gauss_pyr_1_cols_read,
        din2 => gauss_pyr_2_cols_read,
        din3 => gauss_pyr_3_cols_read,
        din4 => gauss_pyr_4_cols_read,
        din5 => gauss_pyr_5_cols_read,
        din6 => tmp_1050_fu_3077_p1,
        dout => tmp_302_fu_3092_p8);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state69) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((grp_calcOrientationHist_fu_1260_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state68))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state69)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state69);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)))) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                elsif (((grp_calcOrientationHist_fu_1260_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state68))) then 
                    ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    grp_adjustLocalExtrema_fu_1288_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_adjustLocalExtrema_fu_1288_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
                    grp_adjustLocalExtrema_fu_1288_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_adjustLocalExtrema_fu_1288_ap_ready = ap_const_logic_1)) then 
                    grp_adjustLocalExtrema_fu_1288_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_calcOrientationHist_fu_1260_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_calcOrientationHist_fu_1260_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
                    grp_calcOrientationHist_fu_1260_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_calcOrientationHist_fu_1260_ap_ready = ap_const_logic_1)) then 
                    grp_calcOrientationHist_fu_1260_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    c0_reg_1221_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state92)) then 
                c0_reg_1221 <= c_fu_4682_p2;
            elsif (((tmp_236_fu_1517_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                c0_reg_1221 <= ap_const_lv31_5;
            end if; 
        end if;
    end process;

    keypoints_length_fu_370_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_312_reg_5779_pp0_iter9_reg = ap_const_lv1_1) and (tmp_310_reg_5770_pp0_iter9_reg = ap_const_lv1_1) and (tmp_308_reg_5755_pp0_iter9_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then 
                keypoints_length_fu_370 <= vector_length_write_s_fu_4661_p2;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                keypoints_length_fu_370 <= keypoints_length_read;
            end if; 
        end if;
    end process;

    kpt_layer_1_fu_374_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state90)) then 
                kpt_layer_1_fu_374 <= kpt_layer_reg_5622;
            elsif (((grp_adjustLocalExtrema_fu_1288_ap_done = ap_const_logic_1) and (tmp_252_fu_2941_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state60))) then 
                kpt_layer_1_fu_374 <= grp_adjustLocalExtrema_fu_1288_ap_return_9;
            end if; 
        end if;
    end process;

    kpt_octave_1_fu_378_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state90)) then 
                kpt_octave_1_fu_378 <= kpt_octave_reg_5616;
            elsif (((grp_adjustLocalExtrema_fu_1288_ap_done = ap_const_logic_1) and (tmp_252_fu_2941_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state60))) then 
                kpt_octave_1_fu_378 <= grp_adjustLocalExtrema_fu_1288_ap_return_8;
            end if; 
        end if;
    end process;

    kpt_pt_x_1_fu_382_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state90)) then 
                kpt_pt_x_1_fu_382 <= kpt_pt_x_reg_5591;
            elsif (((grp_adjustLocalExtrema_fu_1288_ap_done = ap_const_logic_1) and (tmp_252_fu_2941_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state60))) then 
                kpt_pt_x_1_fu_382 <= grp_adjustLocalExtrema_fu_1288_ap_return_4;
            end if; 
        end if;
    end process;

    kpt_pt_y_1_fu_386_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state90)) then 
                kpt_pt_y_1_fu_386 <= kpt_pt_y_reg_5597;
            elsif (((grp_adjustLocalExtrema_fu_1288_ap_done = ap_const_logic_1) and (tmp_252_fu_2941_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state60))) then 
                kpt_pt_y_1_fu_386 <= grp_adjustLocalExtrema_fu_1288_ap_return_5;
            end if; 
        end if;
    end process;

    kpt_response_V_1_fu_394_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state90)) then 
                kpt_response_V_1_fu_394 <= kpt_response_V_reg_5611;
            elsif (((grp_adjustLocalExtrema_fu_1288_ap_done = ap_const_logic_1) and (tmp_252_fu_2941_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state60))) then 
                kpt_response_V_1_fu_394 <= grp_adjustLocalExtrema_fu_1288_ap_return_7;
            end if; 
        end if;
    end process;

    kpt_sigma_V_1_fu_390_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state90)) then 
                kpt_sigma_V_1_fu_390 <= kpt_sigma_V_reg_5603;
            elsif (((grp_adjustLocalExtrema_fu_1288_ap_done = ap_const_logic_1) and (tmp_252_fu_2941_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state60))) then 
                kpt_sigma_V_1_fu_390 <= grp_adjustLocalExtrema_fu_1288_ap_return_6;
            end if; 
        end if;
    end process;

    layer_reg_1197_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_236_fu_1517_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                layer_reg_1197 <= l_reg_4819;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                layer_reg_1197 <= ap_const_lv3_1;
            end if; 
        end if;
    end process;

    p_Val2_48_reg_1248_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_reg_5733 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                p_Val2_48_reg_1248 <= j_reg_5737;
            elsif (((grp_calcOrientationHist_fu_1260_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state68))) then 
                p_Val2_48_reg_1248 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    r0_reg_1209_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_237_fu_1574_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                r0_reg_1209 <= r_reg_4957;
            elsif (((exitcond2_fu_1489_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                r0_reg_1209 <= ap_const_lv31_5;
            end if; 
        end if;
    end process;

    val_V_reg_1233_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                if ((not((layer_reg_1197 = ap_const_lv3_2)) and not((layer_reg_1197 = ap_const_lv3_1)))) then 
                    val_V_reg_1233 <= dog_pyr_3_val_V_q0;
                elsif ((layer_reg_1197 = ap_const_lv3_2)) then 
                    val_V_reg_1233 <= dog_pyr_2_val_V_q0;
                elsif ((layer_reg_1197 = ap_const_lv3_1)) then 
                    val_V_reg_1233 <= dog_pyr_1_val_V_q0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_adjustLocalExtrema_fu_1288_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state60))) then
                c0_1_reg_5586 <= grp_adjustLocalExtrema_fu_1288_ap_return_3;
                kpt_layer_reg_5622 <= grp_adjustLocalExtrema_fu_1288_ap_return_9;
                kpt_octave_reg_5616 <= grp_adjustLocalExtrema_fu_1288_ap_return_8;
                kpt_pt_x_reg_5591 <= grp_adjustLocalExtrema_fu_1288_ap_return_4;
                kpt_pt_y_reg_5597 <= grp_adjustLocalExtrema_fu_1288_ap_return_5;
                kpt_response_V_reg_5611 <= grp_adjustLocalExtrema_fu_1288_ap_return_7;
                kpt_sigma_V_reg_5603 <= grp_adjustLocalExtrema_fu_1288_ap_return_6;
                layer_1_reg_5575 <= grp_adjustLocalExtrema_fu_1288_ap_return_1;
                r0_1_reg_5581 <= grp_adjustLocalExtrema_fu_1288_ap_return_2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((sel_tmp26_reg_4824 = ap_const_lv1_1) and (sel_tmp28_reg_4880 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state33))) then
                dog_pyr_0_val_V_add_10_reg_5329 <= tmp_167_cast_fu_2325_p1(16 - 1 downto 0);
                dog_pyr_0_val_V_add_11_reg_5334 <= tmp_168_cast_fu_2338_p1(16 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((sel_tmp26_reg_4824 = ap_const_lv1_1) and (tmp_271_fu_2361_p2 = ap_const_lv1_0) and (sel_tmp28_reg_4880 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state33))) then
                dog_pyr_0_val_V_add_12_reg_5382 <= tmp_169_cast_fu_2382_p1(16 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((sel_tmp26_reg_4824 = ap_const_lv1_1) and (sel_tmp28_reg_4880 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state34))) then
                dog_pyr_0_val_V_add_13_reg_5417 <= tmp_170_cast_fu_2401_p1(16 - 1 downto 0);
                dog_pyr_0_val_V_add_14_reg_5422 <= tmp_171_cast_fu_2409_p1(16 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_237_fu_1574_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                dog_pyr_0_val_V_add_1_reg_4979 <= tmp_158_cast_fu_1602_p1(16 - 1 downto 0);
                dog_pyr_0_val_V_add_2_reg_4984 <= tmp_159_cast_fu_1616_p1(16 - 1 downto 0);
                dog_pyr_0_val_V_add_reg_4974 <= tmp_157_cast_fu_1588_p1(16 - 1 downto 0);
                dog_pyr_1_val_V_add_1_reg_4994 <= tmp_158_cast_fu_1602_p1(16 - 1 downto 0);
                dog_pyr_1_val_V_add_2_reg_4999 <= tmp_159_cast_fu_1616_p1(16 - 1 downto 0);
                dog_pyr_1_val_V_add_reg_4989 <= tmp_157_cast_fu_1588_p1(16 - 1 downto 0);
                dog_pyr_2_val_V_add_1_reg_5009 <= tmp_158_cast_fu_1602_p1(16 - 1 downto 0);
                dog_pyr_2_val_V_add_2_reg_5014 <= tmp_159_cast_fu_1616_p1(16 - 1 downto 0);
                dog_pyr_2_val_V_add_reg_5004 <= tmp_157_cast_fu_1588_p1(16 - 1 downto 0);
                dog_pyr_3_val_V_add_1_reg_5024 <= tmp_158_cast_fu_1602_p1(16 - 1 downto 0);
                dog_pyr_3_val_V_add_2_reg_5029 <= tmp_159_cast_fu_1616_p1(16 - 1 downto 0);
                dog_pyr_3_val_V_add_reg_5019 <= tmp_157_cast_fu_1588_p1(16 - 1 downto 0);
                dog_pyr_4_val_V_add_1_reg_5039 <= tmp_158_cast_fu_1602_p1(16 - 1 downto 0);
                dog_pyr_4_val_V_add_2_reg_5044 <= tmp_159_cast_fu_1616_p1(16 - 1 downto 0);
                dog_pyr_4_val_V_add_reg_5034 <= tmp_157_cast_fu_1588_p1(16 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_240_fu_1663_p2 = ap_const_lv1_1) and (tmp_239_fu_1657_p2 = ap_const_lv1_1) and (sel_tmp26_reg_4824 = ap_const_lv1_1) and (sel_tmp28_reg_4880 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                dog_pyr_0_val_V_add_3_reg_5061 <= tmp_160_cast_fu_1684_p1(16 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((sel_tmp26_reg_4824 = ap_const_lv1_1) and (sel_tmp28_reg_4880 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                dog_pyr_0_val_V_add_4_reg_5086 <= tmp_161_cast_fu_1697_p1(16 - 1 downto 0);
                dog_pyr_0_val_V_add_5_reg_5091 <= tmp_162_cast_fu_1710_p1(16 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((sel_tmp26_reg_4824 = ap_const_lv1_1) and (tmp_241_fu_1733_p2 = ap_const_lv1_0) and (sel_tmp28_reg_4880 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                dog_pyr_0_val_V_add_6_reg_5145 <= tmp_163_cast_fu_1754_p1(16 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((sel_tmp26_reg_4824 = ap_const_lv1_1) and (sel_tmp28_reg_4880 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                dog_pyr_0_val_V_add_7_reg_5170 <= tmp_164_cast_fu_1767_p1(16 - 1 downto 0);
                dog_pyr_0_val_V_add_8_reg_5175 <= tmp_165_cast_fu_1780_p1(16 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_1027_fu_2289_p3 = ap_const_lv1_1) and (sel_tmp26_reg_4824 = ap_const_lv1_1) and (sel_tmp28_reg_4880 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state32))) then
                dog_pyr_0_val_V_add_9_reg_5304 <= tmp_166_cast_fu_2312_p1(16 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state33)) then
                dog_pyr_1_val_V_add_10_reg_5339 <= tmp_167_cast_fu_2325_p1(16 - 1 downto 0);
                dog_pyr_1_val_V_add_11_reg_5344 <= tmp_168_cast_fu_2338_p1(16 - 1 downto 0);
                dog_pyr_2_val_V_add_10_reg_5349 <= tmp_167_cast_fu_2325_p1(16 - 1 downto 0);
                dog_pyr_2_val_V_add_11_reg_5354 <= tmp_168_cast_fu_2338_p1(16 - 1 downto 0);
                dog_pyr_3_val_V_add_10_reg_5359 <= tmp_167_cast_fu_2325_p1(16 - 1 downto 0);
                dog_pyr_3_val_V_add_11_reg_5364 <= tmp_168_cast_fu_2338_p1(16 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state34)) then
                dog_pyr_1_val_V_add_13_reg_5427 <= tmp_170_cast_fu_2401_p1(16 - 1 downto 0);
                dog_pyr_1_val_V_add_14_reg_5432 <= tmp_171_cast_fu_2409_p1(16 - 1 downto 0);
                dog_pyr_2_val_V_add_13_reg_5437 <= tmp_170_cast_fu_2401_p1(16 - 1 downto 0);
                dog_pyr_2_val_V_add_14_reg_5442 <= tmp_171_cast_fu_2409_p1(16 - 1 downto 0);
                dog_pyr_3_val_V_add_13_reg_5447 <= tmp_170_cast_fu_2401_p1(16 - 1 downto 0);
                dog_pyr_3_val_V_add_14_reg_5452 <= tmp_171_cast_fu_2409_p1(16 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                dog_pyr_1_val_V_add_4_reg_5096 <= tmp_161_cast_fu_1697_p1(16 - 1 downto 0);
                dog_pyr_1_val_V_add_5_reg_5101 <= tmp_162_cast_fu_1710_p1(16 - 1 downto 0);
                dog_pyr_2_val_V_add_4_reg_5106 <= tmp_161_cast_fu_1697_p1(16 - 1 downto 0);
                dog_pyr_2_val_V_add_5_reg_5111 <= tmp_162_cast_fu_1710_p1(16 - 1 downto 0);
                dog_pyr_3_val_V_add_4_reg_5116 <= tmp_161_cast_fu_1697_p1(16 - 1 downto 0);
                dog_pyr_3_val_V_add_5_reg_5121 <= tmp_162_cast_fu_1710_p1(16 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                dog_pyr_1_val_V_add_7_reg_5180 <= tmp_164_cast_fu_1767_p1(16 - 1 downto 0);
                dog_pyr_1_val_V_add_8_reg_5185 <= tmp_165_cast_fu_1780_p1(16 - 1 downto 0);
                dog_pyr_2_val_V_add_7_reg_5190 <= tmp_164_cast_fu_1767_p1(16 - 1 downto 0);
                dog_pyr_2_val_V_add_8_reg_5195 <= tmp_165_cast_fu_1780_p1(16 - 1 downto 0);
                dog_pyr_3_val_V_add_7_reg_5200 <= tmp_164_cast_fu_1767_p1(16 - 1 downto 0);
                dog_pyr_3_val_V_add_8_reg_5205 <= tmp_165_cast_fu_1780_p1(16 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((sel_tmp28_reg_4880 = ap_const_lv1_0) and (sel_tmp26_reg_4824 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state33))) then
                dog_pyr_4_val_V_add_10_reg_5369 <= tmp_167_cast_fu_2325_p1(16 - 1 downto 0);
                dog_pyr_4_val_V_add_11_reg_5374 <= tmp_168_cast_fu_2338_p1(16 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_271_fu_2361_p2 = ap_const_lv1_0) and (sel_tmp28_reg_4880 = ap_const_lv1_0) and (sel_tmp26_reg_4824 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state33))) then
                dog_pyr_4_val_V_add_12_reg_5412 <= tmp_169_cast_fu_2382_p1(16 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((sel_tmp28_reg_4880 = ap_const_lv1_0) and (sel_tmp26_reg_4824 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state34))) then
                dog_pyr_4_val_V_add_13_reg_5457 <= tmp_170_cast_fu_2401_p1(16 - 1 downto 0);
                dog_pyr_4_val_V_add_14_reg_5462 <= tmp_171_cast_fu_2409_p1(16 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_240_fu_1663_p2 = ap_const_lv1_1) and (tmp_239_fu_1657_p2 = ap_const_lv1_1) and (sel_tmp28_reg_4880 = ap_const_lv1_0) and (sel_tmp26_reg_4824 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                dog_pyr_4_val_V_add_3_reg_5081 <= tmp_160_cast_fu_1684_p1(16 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((sel_tmp28_reg_4880 = ap_const_lv1_0) and (sel_tmp26_reg_4824 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                dog_pyr_4_val_V_add_4_reg_5126 <= tmp_161_cast_fu_1697_p1(16 - 1 downto 0);
                dog_pyr_4_val_V_add_5_reg_5131 <= tmp_162_cast_fu_1710_p1(16 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_241_fu_1733_p2 = ap_const_lv1_0) and (sel_tmp28_reg_4880 = ap_const_lv1_0) and (sel_tmp26_reg_4824 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                dog_pyr_4_val_V_add_6_reg_5165 <= tmp_163_cast_fu_1754_p1(16 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((sel_tmp28_reg_4880 = ap_const_lv1_0) and (sel_tmp26_reg_4824 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                dog_pyr_4_val_V_add_7_reg_5210 <= tmp_164_cast_fu_1767_p1(16 - 1 downto 0);
                dog_pyr_4_val_V_add_8_reg_5215 <= tmp_165_cast_fu_1780_p1(16 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_1027_fu_2289_p3 = ap_const_lv1_1) and (sel_tmp28_reg_4880 = ap_const_lv1_0) and (sel_tmp26_reg_4824 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state32))) then
                dog_pyr_4_val_V_add_9_reg_5324 <= tmp_166_cast_fu_2312_p1(16 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                exitcond_reg_5733 <= exitcond_fu_3568_p2;
                msb_idx_1_reg_5825_pp0_iter3_reg <= msb_idx_1_reg_5825;
                msb_idx_3_reg_5841_pp0_iter3_reg <= msb_idx_3_reg_5841;
                p_Val2_48_reg_1248_pp0_iter1_reg <= p_Val2_48_reg_1248;
                p_Val2_48_reg_1248_pp0_iter2_reg <= p_Val2_48_reg_1248_pp0_iter1_reg;
                p_Val2_48_reg_1248_pp0_iter3_reg <= p_Val2_48_reg_1248_pp0_iter2_reg;
                p_Val2_48_reg_1248_pp0_iter4_reg <= p_Val2_48_reg_1248_pp0_iter3_reg;
                p_Val2_48_reg_1248_pp0_iter5_reg <= p_Val2_48_reg_1248_pp0_iter4_reg;
                p_Val2_48_reg_1248_pp0_iter6_reg <= p_Val2_48_reg_1248_pp0_iter5_reg;
                p_Val2_48_reg_1248_pp0_iter7_reg <= p_Val2_48_reg_1248_pp0_iter6_reg;
                p_Val2_48_reg_1248_pp0_iter8_reg <= p_Val2_48_reg_1248_pp0_iter7_reg;
                tmp_310_reg_5770_pp0_iter2_reg <= tmp_310_reg_5770;
                tmp_310_reg_5770_pp0_iter3_reg <= tmp_310_reg_5770_pp0_iter2_reg;
                tmp_310_reg_5770_pp0_iter4_reg <= tmp_310_reg_5770_pp0_iter3_reg;
                tmp_310_reg_5770_pp0_iter5_reg <= tmp_310_reg_5770_pp0_iter4_reg;
                tmp_310_reg_5770_pp0_iter6_reg <= tmp_310_reg_5770_pp0_iter5_reg;
                tmp_310_reg_5770_pp0_iter7_reg <= tmp_310_reg_5770_pp0_iter6_reg;
                tmp_310_reg_5770_pp0_iter8_reg <= tmp_310_reg_5770_pp0_iter7_reg;
                tmp_310_reg_5770_pp0_iter9_reg <= tmp_310_reg_5770_pp0_iter8_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (exitcond_reg_5733 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                hist_V_load_reg_5748 <= hist_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_312_reg_5779_pp0_iter7_reg = ap_const_lv1_1) and (tmp_310_reg_5770_pp0_iter7_reg = ap_const_lv1_1) and (tmp_308_reg_5755_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp32_reg_5931 <= icmp32_fu_4336_p2;
                isneg_reg_5896 <= ireg_V_fu_4248_p1(63 downto 63);
                sh_amt_reg_5919 <= sh_amt_fu_4312_p3;
                tmp_1088_reg_5902 <= tmp_1088_fu_4278_p1;
                tmp_331_reg_5907 <= tmp_331_fu_4282_p2;
                tmp_332_reg_5913 <= tmp_332_fu_4294_p2;
                tmp_335_reg_5925 <= tmp_335_fu_4320_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (tmp_312_fu_3638_p2 = ap_const_lv1_1) and (tmp_310_reg_5770 = ap_const_lv1_1) and (tmp_308_reg_5755 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                is_neg_1_reg_5788 <= p_Val2_31_fu_3650_p2(32 downto 32);
                is_neg_2_reg_5819 <= r_V_fu_3742_p2(33 downto 33);
                num_zeros_1_reg_5804 <= num_zeros_1_fu_3717_p1;
                    p_Val2_76_cast_reg_5798(31 downto 0) <= p_Val2_76_cast_fu_3687_p1(31 downto 0);
                p_Val2_90_reg_5793 <= p_Val2_90_fu_3679_p3;
                r_V_reg_5809 <= r_V_fu_3742_p2;
                tmp_315_reg_5783 <= tmp_315_fu_3660_p2;
                tmp_320_reg_5814 <= tmp_320_fu_3748_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                is_neg_1_reg_5788_pp0_iter2_reg <= is_neg_1_reg_5788;
                is_neg_2_reg_5819_pp0_iter2_reg <= is_neg_2_reg_5819;
                is_neg_2_reg_5819_pp0_iter3_reg <= is_neg_2_reg_5819_pp0_iter2_reg;
                tmp_308_reg_5755_pp0_iter1_reg <= tmp_308_reg_5755;
                tmp_308_reg_5755_pp0_iter2_reg <= tmp_308_reg_5755_pp0_iter1_reg;
                tmp_308_reg_5755_pp0_iter3_reg <= tmp_308_reg_5755_pp0_iter2_reg;
                tmp_308_reg_5755_pp0_iter4_reg <= tmp_308_reg_5755_pp0_iter3_reg;
                tmp_308_reg_5755_pp0_iter5_reg <= tmp_308_reg_5755_pp0_iter4_reg;
                tmp_308_reg_5755_pp0_iter6_reg <= tmp_308_reg_5755_pp0_iter5_reg;
                tmp_308_reg_5755_pp0_iter7_reg <= tmp_308_reg_5755_pp0_iter6_reg;
                tmp_308_reg_5755_pp0_iter8_reg <= tmp_308_reg_5755_pp0_iter7_reg;
                tmp_308_reg_5755_pp0_iter9_reg <= tmp_308_reg_5755_pp0_iter8_reg;
                tmp_312_reg_5779_pp0_iter2_reg <= tmp_312_reg_5779;
                tmp_312_reg_5779_pp0_iter3_reg <= tmp_312_reg_5779_pp0_iter2_reg;
                tmp_312_reg_5779_pp0_iter4_reg <= tmp_312_reg_5779_pp0_iter3_reg;
                tmp_312_reg_5779_pp0_iter5_reg <= tmp_312_reg_5779_pp0_iter4_reg;
                tmp_312_reg_5779_pp0_iter6_reg <= tmp_312_reg_5779_pp0_iter5_reg;
                tmp_312_reg_5779_pp0_iter7_reg <= tmp_312_reg_5779_pp0_iter6_reg;
                tmp_312_reg_5779_pp0_iter8_reg <= tmp_312_reg_5779_pp0_iter7_reg;
                tmp_312_reg_5779_pp0_iter9_reg <= tmp_312_reg_5779_pp0_iter8_reg;
                tmp_315_reg_5783_pp0_iter2_reg <= tmp_315_reg_5783;
                tmp_320_reg_5814_pp0_iter2_reg <= tmp_320_reg_5814;
                tmp_320_reg_5814_pp0_iter3_reg <= tmp_320_reg_5814_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state61)) then
                is_neg_reg_5644 <= p_Val2_28_fu_3053_p2(50 downto 50);
                p_s_reg_5628 <= p_Val2_s_fu_3009_p2(47 downto 16);
                    tmp_1033_reg_5633(49 downto 16) <= tmp_1033_fu_3059_p1(49 downto 16);
                tmp_297_reg_5639 <= tmp_297_fu_3063_p2;
                tmp_301_reg_5650 <= tmp_301_fu_3080_p8;
                tmp_302_reg_5655 <= tmp_302_fu_3092_p8;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                j_reg_5737 <= j_fu_3574_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond2_fu_1489_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                l_reg_4819 <= l_fu_1495_p2;
                sel_tmp26_reg_4824 <= sel_tmp26_fu_1501_p2;
                sel_tmp28_reg_4880 <= sel_tmp28_fu_1507_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_calcOrientationHist_fu_1260_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state68))) then
                mag_thr_V_reg_5728 <= p_Val2_30_fu_3552_p2(47 downto 16);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_312_reg_5779 = ap_const_lv1_1) and (tmp_310_reg_5770 = ap_const_lv1_1) and (tmp_315_reg_5783 = ap_const_lv1_0) and (tmp_308_reg_5755_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                msb_idx_1_reg_5825 <= msb_idx_1_fu_3762_p2;
                tmp32_V_11_reg_5830 <= tmp32_V_11_fu_3878_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_312_reg_5779 = ap_const_lv1_1) and (tmp_310_reg_5770 = ap_const_lv1_1) and (tmp_320_reg_5814 = ap_const_lv1_0) and (tmp_308_reg_5755_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                msb_idx_3_reg_5841 <= msb_idx_3_fu_3986_p2;
                    p_Val2_92_reg_5835(34 downto 1) <= p_Val2_92_fu_3899_p3(34 downto 1);
                tmp_1071_reg_5846 <= tmp_1071_fu_3992_p1;
                tmp_1072_reg_5851 <= msb_idx_3_fu_3986_p2(31 downto 31);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (tmp_312_reg_5779_pp0_iter2_reg = ap_const_lv1_1) and (tmp_310_reg_5770_pp0_iter3_reg = ap_const_lv1_1) and (tmp_308_reg_5755_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                p_03_i1_reg_5871 <= p_03_i1_fu_4176_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_312_reg_5779_pp0_iter3_reg = ap_const_lv1_1) and (tmp_310_reg_5770_pp0_iter3_reg = ap_const_lv1_1) and (tmp_308_reg_5755_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                p_03_i2_reg_5886 <= p_03_i2_fu_4241_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state66)) then
                p_Result_104_reg_5712 <= p_Val2_84_fu_3406_p1(31 downto 31);
                p_Val2_45_reg_5717 <= p_Val2_45_fu_3528_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (tmp_312_reg_5779_pp0_iter2_reg = ap_const_lv1_1) and (tmp_310_reg_5770_pp0_iter3_reg = ap_const_lv1_1) and (tmp_320_reg_5814_pp0_iter2_reg = ap_const_lv1_0) and (tmp_308_reg_5755_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                p_Result_13_reg_5881 <= tmp32_V_22_fu_4183_p1(30 downto 23);
                tmp32_V_22_reg_5876 <= tmp32_V_22_fu_4183_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_312_reg_5779_pp0_iter2_reg = ap_const_lv1_1) and (tmp_310_reg_5770_pp0_iter2_reg = ap_const_lv1_1) and (tmp_315_reg_5783_pp0_iter2_reg = ap_const_lv1_0) and (tmp_308_reg_5755_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                p_Result_8_reg_5866 <= tmp32_V_21_fu_4118_p1(30 downto 23);
                tmp32_V_21_reg_5861 <= tmp32_V_21_fu_4118_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_297_reg_5639 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state64))) then
                p_Result_s_reg_5675 <= tmp32_V_20_fu_3215_p1(30 downto 23);
                tmp32_V_20_reg_5670 <= tmp32_V_20_fu_3215_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_308_reg_5755 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                p_Val2_88_reg_5764 <= hist_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state67)) then
                p_Val2_95_reg_5723 <= p_Val2_95_fu_3541_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_312_reg_5779_pp0_iter8_reg = ap_const_lv1_1) and (tmp_310_reg_5770_pp0_iter8_reg = ap_const_lv1_1) and (tmp_308_reg_5755_pp0_iter8_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                r_V_s_reg_5941 <= r_V_s_fu_4585_p2;
                tmp_1094_reg_5946 <= r_V_s_fu_4585_p2(40 downto 40);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_236_fu_1517_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                r_reg_4957 <= r_fu_1552_p2;
                    tmp_152_cast_reg_4939(17 downto 8) <= tmp_152_cast_fu_1526_p3(17 downto 8);
                    tmp_154_cast_reg_4948(17 downto 8) <= tmp_154_cast_fu_1544_p3(17 downto 8);
                    tmp_156_cast_reg_4962(17 downto 8) <= tmp_156_cast_fu_1562_p3(17 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state6))) then
                reg_1372 <= dog_pyr_3_val_V_q0;
                reg_1376 <= dog_pyr_1_val_V_q0;
                reg_1380 <= dog_pyr_2_val_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state7))) then
                reg_1384 <= dog_pyr_3_val_V_q0;
                reg_1388 <= dog_pyr_1_val_V_q0;
                reg_1392 <= dog_pyr_2_val_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state8))) then
                reg_1396 <= dog_pyr_3_val_V_q0;
                reg_1400 <= dog_pyr_1_val_V_q0;
                reg_1404 <= dog_pyr_2_val_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state9))) then
                reg_1408 <= dog_pyr_3_val_V_q0;
                reg_1412 <= dog_pyr_1_val_V_q0;
                reg_1416 <= dog_pyr_2_val_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state10))) then
                reg_1420 <= dog_pyr_3_val_V_q0;
                reg_1424 <= dog_pyr_1_val_V_q0;
                reg_1428 <= dog_pyr_2_val_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state11))) then
                reg_1432 <= dog_pyr_3_val_V_q0;
                reg_1436 <= dog_pyr_1_val_V_q0;
                reg_1440 <= dog_pyr_2_val_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state12))) then
                reg_1444 <= dog_pyr_3_val_V_q0;
                reg_1448 <= dog_pyr_1_val_V_q0;
                reg_1452 <= dog_pyr_2_val_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state13))) then
                reg_1456 <= dog_pyr_3_val_V_q0;
                reg_1460 <= dog_pyr_1_val_V_q0;
                reg_1464 <= dog_pyr_2_val_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state15))) then
                reg_1468 <= dog_pyr_2_val_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (tmp_312_reg_5779_pp0_iter7_reg = ap_const_lv1_1) and (tmp_310_reg_5770_pp0_iter8_reg = ap_const_lv1_1) and (tmp_308_reg_5755_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                storemerge4_reg_5936 <= storemerge4_fu_4574_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state65)) then
                t_V_11_reg_5685 <= t_V_11_fu_3278_p1;
                tmp_1685_i_i_reg_5697 <= tmp_1685_i_i_fu_3298_p2;
                tmp_i_i_reg_5691 <= tmp_i_i_fu_3292_p2;
                x_assign_reg_5680 <= x_assign_fu_3271_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (tmp_312_reg_5779 = ap_const_lv1_1) and (tmp_310_reg_5770_pp0_iter2_reg = ap_const_lv1_1) and (tmp_320_reg_5814 = ap_const_lv1_0) and (tmp_308_reg_5755_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                tmp32_V_17_reg_5856 <= tmp32_V_17_fu_4110_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_297_reg_5639 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state62))) then
                tmp32_V_5_reg_5665 <= tmp32_V_5_fu_3207_p3;
                tmp_1036_reg_5660 <= tmp_1036_fu_3141_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_240_fu_1663_p2 = ap_const_lv1_1) and (tmp_239_fu_1657_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                tmp_1024_reg_5055 <= tmp_1024_fu_1673_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_241_fu_1733_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                tmp_1026_reg_5139 <= tmp_1026_fu_1743_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_1027_fu_2289_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state32))) then
                tmp_1029_reg_5298 <= tmp_1029_fu_2301_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (tmp_312_reg_5779_pp0_iter8_reg = ap_const_lv1_1) and (tmp_310_reg_5770_pp0_iter9_reg = ap_const_lv1_1) and (tmp_1094_reg_5946 = ap_const_lv1_1) and (tmp_308_reg_5755_pp0_iter8_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                tmp_1097_reg_5952 <= tmp_1097_fu_4641_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (tmp_312_reg_5779_pp0_iter8_reg = ap_const_lv1_1) and (tmp_310_reg_5770_pp0_iter9_reg = ap_const_lv1_1) and (tmp_308_reg_5755_pp0_iter8_reg = ap_const_lv1_0) and (tmp_1094_reg_5946 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                tmp_1098_reg_5957 <= tmp_1098_fu_4645_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_271_fu_2361_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state33))) then
                tmp_170_reg_5387 <= tmp_170_fu_2391_p2;
                tmp_171_reg_5392 <= tmp_171_fu_2396_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                tmp_235_reg_4811 <= tmp_235_fu_1478_p2;
                tmp_s_reg_4806 <= tmp_s_fu_1472_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (exitcond_reg_5733 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                tmp_308_reg_5755 <= tmp_308_fu_3605_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_308_reg_5755 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_310_reg_5770 <= tmp_310_fu_3628_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (tmp_310_reg_5770 = ap_const_lv1_1) and (tmp_308_reg_5755 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                tmp_312_reg_5779 <= tmp_312_fu_3638_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (tmp_312_reg_5779_pp0_iter6_reg = ap_const_lv1_1) and (tmp_310_reg_5770_pp0_iter7_reg = ap_const_lv1_1) and (tmp_308_reg_5755_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                v_assign_reg_5891 <= grp_fu_1335_p2;
            end if;
        end if;
    end process;
    tmp_152_cast_reg_4939(7 downto 0) <= "00000000";
    tmp_154_cast_reg_4948(7 downto 0) <= "00000000";
    tmp_156_cast_reg_4962(7 downto 0) <= "00000000";
    tmp_1033_reg_5633(15 downto 0) <= "0000000000000000";
    p_Val2_76_cast_reg_5798(32) <= '0';
    p_Val2_92_reg_5835(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_pp0_stage0, ap_CS_fsm_state6, ap_CS_fsm_state33, ap_CS_fsm_state7, ap_CS_fsm_state34, ap_CS_fsm_state8, ap_CS_fsm_state35, ap_CS_fsm_state9, ap_CS_fsm_state36, ap_CS_fsm_state10, ap_CS_fsm_state37, ap_CS_fsm_state11, ap_CS_fsm_state38, ap_CS_fsm_state12, ap_CS_fsm_state39, ap_CS_fsm_state13, ap_CS_fsm_state40, ap_CS_fsm_state15, ap_CS_fsm_state42, ap_CS_fsm_state2, exitcond2_fu_1489_p2, ap_CS_fsm_state3, tmp_236_fu_1517_p2, ap_CS_fsm_state4, tmp_237_fu_1574_p2, ap_CS_fsm_state5, tmp_239_fu_1657_p2, tmp_240_fu_1663_p2, tmp_241_fu_1733_p2, ap_CS_fsm_state32, tmp_1027_fu_2289_p3, tmp_271_fu_2361_p2, ap_CS_fsm_state60, grp_adjustLocalExtrema_fu_1288_ap_done, ap_CS_fsm_state68, grp_calcOrientationHist_fu_1260_ap_done, exitcond_fu_3568_p2, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone, ap_block_pp0_stage1_subdone, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, tmp_252_fu_2941_p1, ap_CS_fsm_state14, ap_CS_fsm_state41, ap_CS_fsm_state23, ap_CS_fsm_state50, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state22, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state49, ap_CS_fsm_state51, ap_CS_fsm_state52, ap_CS_fsm_state53, ap_CS_fsm_state54, ap_CS_fsm_state55, ap_CS_fsm_state56, ap_CS_fsm_state57, ap_CS_fsm_state31, ap_CS_fsm_state58, tmp_242_fu_1803_p2, tmp_243_fu_1823_p2, tmp_244_fu_1843_p2, tmp_245_fu_1863_p2, tmp_246_fu_1883_p2, tmp_247_fu_1903_p2, tmp_248_fu_1923_p2, tmp_249_fu_1943_p2, tmp_250_fu_1963_p2, tmp_251_fu_1983_p2, tmp_253_fu_2003_p2, tmp_257_fu_2023_p2, tmp_258_fu_2043_p2, tmp_259_fu_2063_p2, tmp_260_fu_2083_p2, tmp_261_fu_2103_p2, tmp_262_fu_2123_p2, tmp_263_fu_2143_p2, tmp_264_fu_2163_p2, tmp_265_fu_2183_p2, tmp_266_fu_2203_p2, tmp_267_fu_2223_p2, tmp_268_fu_2243_p2, tmp_269_fu_2263_p2, tmp_270_fu_2283_p2, tmp_272_fu_2431_p2, tmp_273_fu_2451_p2, tmp_274_fu_2471_p2, tmp_275_fu_2491_p2, tmp_276_fu_2511_p2, tmp_277_fu_2531_p2, tmp_278_fu_2551_p2, tmp_279_fu_2571_p2, tmp_280_fu_2591_p2, tmp_281_fu_2611_p2, tmp_282_fu_2631_p2, tmp_283_fu_2651_p2, tmp_284_fu_2671_p2, tmp_285_fu_2691_p2, tmp_286_fu_2711_p2, tmp_287_fu_2731_p2, tmp_288_fu_2751_p2, tmp_289_fu_2771_p2, tmp_290_fu_2791_p2, tmp_291_fu_2811_p2, tmp_292_fu_2831_p2, tmp_293_fu_2851_p2, tmp_294_fu_2871_p2, tmp_295_fu_2891_p2, tmp_296_fu_2911_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((exitcond2_fu_1489_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((tmp_236_fu_1517_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                if (((tmp_237_fu_1574_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                if (((tmp_239_fu_1657_p2 = ap_const_lv1_1) and (tmp_240_fu_1663_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                elsif (((tmp_240_fu_1663_p2 = ap_const_lv1_1) and (tmp_239_fu_1657_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state91;
                end if;
            when ap_ST_fsm_state6 => 
                if (((tmp_241_fu_1733_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                if (((tmp_242_fu_1803_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state8 => 
                if (((tmp_243_fu_1823_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state9 => 
                if (((tmp_244_fu_1843_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state10 => 
                if (((tmp_245_fu_1863_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state11 => 
                if (((tmp_246_fu_1883_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state12 => 
                if (((tmp_247_fu_1903_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state13 => 
                if (((tmp_248_fu_1923_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state14 => 
                if (((tmp_249_fu_1943_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state15 => 
                if (((tmp_250_fu_1963_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state16 => 
                if (((tmp_251_fu_1983_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state17 => 
                if (((tmp_253_fu_2003_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                else
                    ap_NS_fsm <= ap_ST_fsm_state18;
                end if;
            when ap_ST_fsm_state18 => 
                if (((tmp_257_fu_2023_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when ap_ST_fsm_state19 => 
                if (((tmp_258_fu_2043_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                else
                    ap_NS_fsm <= ap_ST_fsm_state20;
                end if;
            when ap_ST_fsm_state20 => 
                if (((tmp_259_fu_2063_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                else
                    ap_NS_fsm <= ap_ST_fsm_state21;
                end if;
            when ap_ST_fsm_state21 => 
                if (((tmp_260_fu_2083_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when ap_ST_fsm_state22 => 
                if (((tmp_261_fu_2103_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                else
                    ap_NS_fsm <= ap_ST_fsm_state23;
                end if;
            when ap_ST_fsm_state23 => 
                if (((tmp_262_fu_2123_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state23))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                else
                    ap_NS_fsm <= ap_ST_fsm_state24;
                end if;
            when ap_ST_fsm_state24 => 
                if (((tmp_263_fu_2143_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state24))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                else
                    ap_NS_fsm <= ap_ST_fsm_state25;
                end if;
            when ap_ST_fsm_state25 => 
                if (((tmp_264_fu_2163_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                else
                    ap_NS_fsm <= ap_ST_fsm_state26;
                end if;
            when ap_ST_fsm_state26 => 
                if (((tmp_265_fu_2183_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                else
                    ap_NS_fsm <= ap_ST_fsm_state27;
                end if;
            when ap_ST_fsm_state27 => 
                if (((tmp_266_fu_2203_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                else
                    ap_NS_fsm <= ap_ST_fsm_state28;
                end if;
            when ap_ST_fsm_state28 => 
                if (((tmp_267_fu_2223_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state28))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                else
                    ap_NS_fsm <= ap_ST_fsm_state29;
                end if;
            when ap_ST_fsm_state29 => 
                if (((tmp_268_fu_2243_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                else
                    ap_NS_fsm <= ap_ST_fsm_state30;
                end if;
            when ap_ST_fsm_state30 => 
                if (((tmp_269_fu_2263_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state30))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                else
                    ap_NS_fsm <= ap_ST_fsm_state31;
                end if;
            when ap_ST_fsm_state31 => 
                if (((tmp_270_fu_2283_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state31))) then
                    ap_NS_fsm <= ap_ST_fsm_state59;
                else
                    ap_NS_fsm <= ap_ST_fsm_state32;
                end if;
            when ap_ST_fsm_state32 => 
                if (((tmp_1027_fu_2289_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state32))) then
                    ap_NS_fsm <= ap_ST_fsm_state91;
                else
                    ap_NS_fsm <= ap_ST_fsm_state33;
                end if;
            when ap_ST_fsm_state33 => 
                if (((tmp_271_fu_2361_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state33))) then
                    ap_NS_fsm <= ap_ST_fsm_state91;
                else
                    ap_NS_fsm <= ap_ST_fsm_state34;
                end if;
            when ap_ST_fsm_state34 => 
                if (((tmp_272_fu_2431_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state34))) then
                    ap_NS_fsm <= ap_ST_fsm_state91;
                else
                    ap_NS_fsm <= ap_ST_fsm_state35;
                end if;
            when ap_ST_fsm_state35 => 
                if (((tmp_273_fu_2451_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state35))) then
                    ap_NS_fsm <= ap_ST_fsm_state91;
                else
                    ap_NS_fsm <= ap_ST_fsm_state36;
                end if;
            when ap_ST_fsm_state36 => 
                if (((tmp_274_fu_2471_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state36))) then
                    ap_NS_fsm <= ap_ST_fsm_state91;
                else
                    ap_NS_fsm <= ap_ST_fsm_state37;
                end if;
            when ap_ST_fsm_state37 => 
                if (((tmp_275_fu_2491_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state37))) then
                    ap_NS_fsm <= ap_ST_fsm_state91;
                else
                    ap_NS_fsm <= ap_ST_fsm_state38;
                end if;
            when ap_ST_fsm_state38 => 
                if (((tmp_276_fu_2511_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state38))) then
                    ap_NS_fsm <= ap_ST_fsm_state91;
                else
                    ap_NS_fsm <= ap_ST_fsm_state39;
                end if;
            when ap_ST_fsm_state39 => 
                if (((tmp_277_fu_2531_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state39))) then
                    ap_NS_fsm <= ap_ST_fsm_state91;
                else
                    ap_NS_fsm <= ap_ST_fsm_state40;
                end if;
            when ap_ST_fsm_state40 => 
                if (((tmp_278_fu_2551_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state40))) then
                    ap_NS_fsm <= ap_ST_fsm_state91;
                else
                    ap_NS_fsm <= ap_ST_fsm_state41;
                end if;
            when ap_ST_fsm_state41 => 
                if (((tmp_279_fu_2571_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state41))) then
                    ap_NS_fsm <= ap_ST_fsm_state91;
                else
                    ap_NS_fsm <= ap_ST_fsm_state42;
                end if;
            when ap_ST_fsm_state42 => 
                if (((tmp_280_fu_2591_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state42))) then
                    ap_NS_fsm <= ap_ST_fsm_state91;
                else
                    ap_NS_fsm <= ap_ST_fsm_state43;
                end if;
            when ap_ST_fsm_state43 => 
                if (((tmp_281_fu_2611_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state43))) then
                    ap_NS_fsm <= ap_ST_fsm_state91;
                else
                    ap_NS_fsm <= ap_ST_fsm_state44;
                end if;
            when ap_ST_fsm_state44 => 
                if (((tmp_282_fu_2631_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state44))) then
                    ap_NS_fsm <= ap_ST_fsm_state91;
                else
                    ap_NS_fsm <= ap_ST_fsm_state45;
                end if;
            when ap_ST_fsm_state45 => 
                if (((tmp_283_fu_2651_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state45))) then
                    ap_NS_fsm <= ap_ST_fsm_state91;
                else
                    ap_NS_fsm <= ap_ST_fsm_state46;
                end if;
            when ap_ST_fsm_state46 => 
                if (((tmp_284_fu_2671_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state46))) then
                    ap_NS_fsm <= ap_ST_fsm_state91;
                else
                    ap_NS_fsm <= ap_ST_fsm_state47;
                end if;
            when ap_ST_fsm_state47 => 
                if (((tmp_285_fu_2691_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state47))) then
                    ap_NS_fsm <= ap_ST_fsm_state91;
                else
                    ap_NS_fsm <= ap_ST_fsm_state48;
                end if;
            when ap_ST_fsm_state48 => 
                if (((tmp_286_fu_2711_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state48))) then
                    ap_NS_fsm <= ap_ST_fsm_state91;
                else
                    ap_NS_fsm <= ap_ST_fsm_state49;
                end if;
            when ap_ST_fsm_state49 => 
                if (((tmp_287_fu_2731_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state49))) then
                    ap_NS_fsm <= ap_ST_fsm_state91;
                else
                    ap_NS_fsm <= ap_ST_fsm_state50;
                end if;
            when ap_ST_fsm_state50 => 
                if (((tmp_288_fu_2751_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state50))) then
                    ap_NS_fsm <= ap_ST_fsm_state91;
                else
                    ap_NS_fsm <= ap_ST_fsm_state51;
                end if;
            when ap_ST_fsm_state51 => 
                if (((tmp_289_fu_2771_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state51))) then
                    ap_NS_fsm <= ap_ST_fsm_state91;
                else
                    ap_NS_fsm <= ap_ST_fsm_state52;
                end if;
            when ap_ST_fsm_state52 => 
                if (((tmp_290_fu_2791_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state52))) then
                    ap_NS_fsm <= ap_ST_fsm_state91;
                else
                    ap_NS_fsm <= ap_ST_fsm_state53;
                end if;
            when ap_ST_fsm_state53 => 
                if (((tmp_291_fu_2811_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state53))) then
                    ap_NS_fsm <= ap_ST_fsm_state91;
                else
                    ap_NS_fsm <= ap_ST_fsm_state54;
                end if;
            when ap_ST_fsm_state54 => 
                if (((tmp_292_fu_2831_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state54))) then
                    ap_NS_fsm <= ap_ST_fsm_state91;
                else
                    ap_NS_fsm <= ap_ST_fsm_state55;
                end if;
            when ap_ST_fsm_state55 => 
                if (((tmp_293_fu_2851_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state55))) then
                    ap_NS_fsm <= ap_ST_fsm_state91;
                else
                    ap_NS_fsm <= ap_ST_fsm_state56;
                end if;
            when ap_ST_fsm_state56 => 
                if (((tmp_294_fu_2871_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state56))) then
                    ap_NS_fsm <= ap_ST_fsm_state91;
                else
                    ap_NS_fsm <= ap_ST_fsm_state57;
                end if;
            when ap_ST_fsm_state57 => 
                if (((tmp_295_fu_2891_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state57))) then
                    ap_NS_fsm <= ap_ST_fsm_state91;
                else
                    ap_NS_fsm <= ap_ST_fsm_state58;
                end if;
            when ap_ST_fsm_state58 => 
                if (((tmp_296_fu_2911_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state58))) then
                    ap_NS_fsm <= ap_ST_fsm_state91;
                else
                    ap_NS_fsm <= ap_ST_fsm_state59;
                end if;
            when ap_ST_fsm_state59 => 
                ap_NS_fsm <= ap_ST_fsm_state60;
            when ap_ST_fsm_state60 => 
                if (((grp_adjustLocalExtrema_fu_1288_ap_done = ap_const_logic_1) and (tmp_252_fu_2941_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state60))) then
                    ap_NS_fsm <= ap_ST_fsm_state92;
                elsif (((grp_adjustLocalExtrema_fu_1288_ap_done = ap_const_logic_1) and (tmp_252_fu_2941_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state60))) then
                    ap_NS_fsm <= ap_ST_fsm_state61;
                else
                    ap_NS_fsm <= ap_ST_fsm_state60;
                end if;
            when ap_ST_fsm_state61 => 
                ap_NS_fsm <= ap_ST_fsm_state62;
            when ap_ST_fsm_state62 => 
                ap_NS_fsm <= ap_ST_fsm_state63;
            when ap_ST_fsm_state63 => 
                ap_NS_fsm <= ap_ST_fsm_state64;
            when ap_ST_fsm_state64 => 
                ap_NS_fsm <= ap_ST_fsm_state65;
            when ap_ST_fsm_state65 => 
                ap_NS_fsm <= ap_ST_fsm_state66;
            when ap_ST_fsm_state66 => 
                ap_NS_fsm <= ap_ST_fsm_state67;
            when ap_ST_fsm_state67 => 
                ap_NS_fsm <= ap_ST_fsm_state68;
            when ap_ST_fsm_state68 => 
                if (((grp_calcOrientationHist_fu_1260_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state68))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state68;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (exitcond_fu_3568_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) and not(((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif ((((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (exitcond_fu_3568_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_state90;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_state90 => 
                ap_NS_fsm <= ap_ST_fsm_state91;
            when ap_ST_fsm_state91 => 
                ap_NS_fsm <= ap_ST_fsm_state92;
            when ap_ST_fsm_state92 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    F2_fu_4288_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(tmp_329_fu_4274_p1));
    NZeros_fu_3972_p2 <= std_logic_vector(unsigned(tmp_1070_fu_3968_p1) + unsigned(tmp_1069_fu_3928_p1));
    agg_result_V_i_i_fu_1649_p3 <= 
        p_Result_99_fu_1631_p4 when (tmp_1022_fu_1641_p3(0) = '1') else 
        ap_phi_mux_val_V_phi_fu_1236_p6;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(68);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(69);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state38 <= ap_CS_fsm(37);
    ap_CS_fsm_state39 <= ap_CS_fsm(38);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state40 <= ap_CS_fsm(39);
    ap_CS_fsm_state41 <= ap_CS_fsm(40);
    ap_CS_fsm_state42 <= ap_CS_fsm(41);
    ap_CS_fsm_state43 <= ap_CS_fsm(42);
    ap_CS_fsm_state44 <= ap_CS_fsm(43);
    ap_CS_fsm_state45 <= ap_CS_fsm(44);
    ap_CS_fsm_state46 <= ap_CS_fsm(45);
    ap_CS_fsm_state47 <= ap_CS_fsm(46);
    ap_CS_fsm_state48 <= ap_CS_fsm(47);
    ap_CS_fsm_state49 <= ap_CS_fsm(48);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state50 <= ap_CS_fsm(49);
    ap_CS_fsm_state51 <= ap_CS_fsm(50);
    ap_CS_fsm_state52 <= ap_CS_fsm(51);
    ap_CS_fsm_state53 <= ap_CS_fsm(52);
    ap_CS_fsm_state54 <= ap_CS_fsm(53);
    ap_CS_fsm_state55 <= ap_CS_fsm(54);
    ap_CS_fsm_state56 <= ap_CS_fsm(55);
    ap_CS_fsm_state57 <= ap_CS_fsm(56);
    ap_CS_fsm_state58 <= ap_CS_fsm(57);
    ap_CS_fsm_state59 <= ap_CS_fsm(58);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state60 <= ap_CS_fsm(59);
    ap_CS_fsm_state61 <= ap_CS_fsm(60);
    ap_CS_fsm_state62 <= ap_CS_fsm(61);
    ap_CS_fsm_state63 <= ap_CS_fsm(62);
    ap_CS_fsm_state64 <= ap_CS_fsm(63);
    ap_CS_fsm_state65 <= ap_CS_fsm(64);
    ap_CS_fsm_state66 <= ap_CS_fsm(65);
    ap_CS_fsm_state67 <= ap_CS_fsm(66);
    ap_CS_fsm_state68 <= ap_CS_fsm(67);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_CS_fsm_state90 <= ap_CS_fsm(70);
    ap_CS_fsm_state92 <= ap_CS_fsm(72);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state69_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state70_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state71_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state72_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state73_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state74_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state75_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state76_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state77_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state78_pp0_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state79_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state80_pp0_stage1_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state81_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state82_pp0_stage1_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state83_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state84_pp0_stage1_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state85_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state86_pp0_stage1_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state87_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state88_pp0_stage1_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state89_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state69_assign_proc : process(exitcond_fu_3568_p2)
    begin
        if ((exitcond_fu_3568_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state69 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state69 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, exitcond2_fu_1489_p2)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((exitcond2_fu_1489_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_p_Val2_48_phi_fu_1252_p4_assign_proc : process(p_Val2_48_reg_1248, ap_CS_fsm_pp0_stage0, exitcond_reg_5733, j_reg_5737, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((exitcond_reg_5733 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_p_Val2_48_phi_fu_1252_p4 <= j_reg_5737;
        else 
            ap_phi_mux_p_Val2_48_phi_fu_1252_p4 <= p_Val2_48_reg_1248;
        end if; 
    end process;


    ap_phi_mux_val_V_phi_fu_1236_p6_assign_proc : process(dog_pyr_1_val_V_q0, dog_pyr_2_val_V_q0, dog_pyr_3_val_V_q0, ap_CS_fsm_state5, layer_reg_1197)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
            if ((not((layer_reg_1197 = ap_const_lv3_2)) and not((layer_reg_1197 = ap_const_lv3_1)))) then 
                ap_phi_mux_val_V_phi_fu_1236_p6 <= dog_pyr_3_val_V_q0;
            elsif ((layer_reg_1197 = ap_const_lv3_2)) then 
                ap_phi_mux_val_V_phi_fu_1236_p6 <= dog_pyr_2_val_V_q0;
            elsif ((layer_reg_1197 = ap_const_lv3_1)) then 
                ap_phi_mux_val_V_phi_fu_1236_p6 <= dog_pyr_1_val_V_q0;
            else 
                ap_phi_mux_val_V_phi_fu_1236_p6 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            ap_phi_mux_val_V_phi_fu_1236_p6 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, exitcond2_fu_1489_p2)
    begin
        if (((exitcond2_fu_1489_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= keypoints_length_fu_370;
    c0_cast_fu_1570_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(c0_reg_1221),32));
    c_fu_4682_p2 <= std_logic_vector(unsigned(c0_reg_1221) + unsigned(ap_const_lv31_1));

    dog_pyr_0_val_V_address0_assign_proc : process(dog_pyr_0_val_V_add_reg_4974, dog_pyr_0_val_V_add_1_reg_4979, dog_pyr_0_val_V_add_2_reg_4984, dog_pyr_0_val_V_add_3_reg_5061, dog_pyr_0_val_V_add_4_reg_5086, dog_pyr_0_val_V_add_5_reg_5091, dog_pyr_0_val_V_add_6_reg_5145, dog_pyr_0_val_V_add_7_reg_5170, dog_pyr_0_val_V_add_8_reg_5175, dog_pyr_0_val_V_add_9_reg_5304, dog_pyr_0_val_V_add_10_reg_5329, dog_pyr_0_val_V_add_11_reg_5334, dog_pyr_0_val_V_add_12_reg_5382, dog_pyr_0_val_V_add_13_reg_5417, dog_pyr_0_val_V_add_14_reg_5422, ap_CS_fsm_state60, grp_adjustLocalExtrema_fu_1288_dog_pyr_0_val_V_address0, ap_CS_fsm_state23, ap_CS_fsm_state50, ap_CS_fsm_state22, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state49, ap_CS_fsm_state51, ap_CS_fsm_state52, ap_CS_fsm_state53, ap_CS_fsm_state54, ap_CS_fsm_state55, ap_CS_fsm_state56, ap_CS_fsm_state57)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            dog_pyr_0_val_V_address0 <= dog_pyr_0_val_V_add_14_reg_5422;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            dog_pyr_0_val_V_address0 <= dog_pyr_0_val_V_add_11_reg_5334;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
            dog_pyr_0_val_V_address0 <= dog_pyr_0_val_V_add_13_reg_5417;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            dog_pyr_0_val_V_address0 <= dog_pyr_0_val_V_add_10_reg_5329;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            dog_pyr_0_val_V_address0 <= dog_pyr_0_val_V_add_12_reg_5382;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            dog_pyr_0_val_V_address0 <= dog_pyr_0_val_V_add_9_reg_5304;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            dog_pyr_0_val_V_address0 <= dog_pyr_0_val_V_add_8_reg_5175;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            dog_pyr_0_val_V_address0 <= dog_pyr_0_val_V_add_2_reg_4984;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            dog_pyr_0_val_V_address0 <= dog_pyr_0_val_V_add_5_reg_5091;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            dog_pyr_0_val_V_address0 <= dog_pyr_0_val_V_add_7_reg_5170;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            dog_pyr_0_val_V_address0 <= dog_pyr_0_val_V_add_1_reg_4979;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            dog_pyr_0_val_V_address0 <= dog_pyr_0_val_V_add_4_reg_5086;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            dog_pyr_0_val_V_address0 <= dog_pyr_0_val_V_add_6_reg_5145;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state23))) then 
            dog_pyr_0_val_V_address0 <= dog_pyr_0_val_V_add_reg_4974;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            dog_pyr_0_val_V_address0 <= dog_pyr_0_val_V_add_3_reg_5061;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            dog_pyr_0_val_V_address0 <= grp_adjustLocalExtrema_fu_1288_dog_pyr_0_val_V_address0;
        else 
            dog_pyr_0_val_V_address0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    dog_pyr_0_val_V_address1 <= grp_adjustLocalExtrema_fu_1288_dog_pyr_0_val_V_address1;

    dog_pyr_0_val_V_ce0_assign_proc : process(ap_CS_fsm_state60, grp_adjustLocalExtrema_fu_1288_dog_pyr_0_val_V_ce0, ap_CS_fsm_state23, ap_CS_fsm_state50, ap_CS_fsm_state22, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state49, ap_CS_fsm_state51, ap_CS_fsm_state52, ap_CS_fsm_state53, ap_CS_fsm_state54, ap_CS_fsm_state55, ap_CS_fsm_state56, ap_CS_fsm_state57)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state57) or (ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state55) or (ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state23))) then 
            dog_pyr_0_val_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            dog_pyr_0_val_V_ce0 <= grp_adjustLocalExtrema_fu_1288_dog_pyr_0_val_V_ce0;
        else 
            dog_pyr_0_val_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dog_pyr_0_val_V_ce1_assign_proc : process(ap_CS_fsm_state60, grp_adjustLocalExtrema_fu_1288_dog_pyr_0_val_V_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            dog_pyr_0_val_V_ce1 <= grp_adjustLocalExtrema_fu_1288_dog_pyr_0_val_V_ce1;
        else 
            dog_pyr_0_val_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dog_pyr_1_val_V_address0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state33, ap_CS_fsm_state7, ap_CS_fsm_state34, ap_CS_fsm_state8, ap_CS_fsm_state35, ap_CS_fsm_state9, ap_CS_fsm_state36, ap_CS_fsm_state10, ap_CS_fsm_state37, ap_CS_fsm_state11, ap_CS_fsm_state38, ap_CS_fsm_state12, ap_CS_fsm_state39, ap_CS_fsm_state4, dog_pyr_1_val_V_add_reg_4989, dog_pyr_1_val_V_add_1_reg_4994, dog_pyr_1_val_V_add_2_reg_4999, ap_CS_fsm_state5, dog_pyr_1_val_V_add_4_reg_5096, dog_pyr_1_val_V_add_5_reg_5101, dog_pyr_1_val_V_add_7_reg_5180, dog_pyr_1_val_V_add_8_reg_5185, ap_CS_fsm_state32, dog_pyr_1_val_V_add_10_reg_5339, dog_pyr_1_val_V_add_11_reg_5344, dog_pyr_1_val_V_add_13_reg_5427, dog_pyr_1_val_V_add_14_reg_5432, ap_CS_fsm_state60, grp_adjustLocalExtrema_fu_1288_dog_pyr_1_val_V_address0, tmp_157_cast_fu_1588_p1, tmp_160_cast_fu_1684_p1, tmp_163_cast_fu_1754_p1, tmp_166_cast_fu_2312_p1, tmp_169_cast_fu_2382_p1, ap_CS_fsm_state23, ap_CS_fsm_state50)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            dog_pyr_1_val_V_address0 <= dog_pyr_1_val_V_add_14_reg_5432;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            dog_pyr_1_val_V_address0 <= dog_pyr_1_val_V_add_11_reg_5344;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            dog_pyr_1_val_V_address0 <= dog_pyr_1_val_V_add_13_reg_5427;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            dog_pyr_1_val_V_address0 <= dog_pyr_1_val_V_add_10_reg_5339;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            dog_pyr_1_val_V_address0 <= tmp_169_cast_fu_2382_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            dog_pyr_1_val_V_address0 <= tmp_166_cast_fu_2312_p1(16 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state23))) then 
            dog_pyr_1_val_V_address0 <= dog_pyr_1_val_V_add_reg_4989;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            dog_pyr_1_val_V_address0 <= dog_pyr_1_val_V_add_8_reg_5185;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            dog_pyr_1_val_V_address0 <= dog_pyr_1_val_V_add_2_reg_4999;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            dog_pyr_1_val_V_address0 <= dog_pyr_1_val_V_add_5_reg_5101;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            dog_pyr_1_val_V_address0 <= dog_pyr_1_val_V_add_7_reg_5180;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            dog_pyr_1_val_V_address0 <= dog_pyr_1_val_V_add_1_reg_4994;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            dog_pyr_1_val_V_address0 <= dog_pyr_1_val_V_add_4_reg_5096;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            dog_pyr_1_val_V_address0 <= tmp_163_cast_fu_1754_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            dog_pyr_1_val_V_address0 <= tmp_160_cast_fu_1684_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            dog_pyr_1_val_V_address0 <= tmp_157_cast_fu_1588_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            dog_pyr_1_val_V_address0 <= grp_adjustLocalExtrema_fu_1288_dog_pyr_1_val_V_address0;
        else 
            dog_pyr_1_val_V_address0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    dog_pyr_1_val_V_address1 <= grp_adjustLocalExtrema_fu_1288_dog_pyr_1_val_V_address1;

    dog_pyr_1_val_V_ce0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state33, ap_CS_fsm_state7, ap_CS_fsm_state34, ap_CS_fsm_state8, ap_CS_fsm_state35, ap_CS_fsm_state9, ap_CS_fsm_state36, ap_CS_fsm_state10, ap_CS_fsm_state37, ap_CS_fsm_state11, ap_CS_fsm_state38, ap_CS_fsm_state12, ap_CS_fsm_state39, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state32, ap_CS_fsm_state60, grp_adjustLocalExtrema_fu_1288_dog_pyr_1_val_V_ce0, ap_CS_fsm_state23, ap_CS_fsm_state50)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state23))) then 
            dog_pyr_1_val_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            dog_pyr_1_val_V_ce0 <= grp_adjustLocalExtrema_fu_1288_dog_pyr_1_val_V_ce0;
        else 
            dog_pyr_1_val_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dog_pyr_1_val_V_ce1_assign_proc : process(ap_CS_fsm_state60, grp_adjustLocalExtrema_fu_1288_dog_pyr_1_val_V_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            dog_pyr_1_val_V_ce1 <= grp_adjustLocalExtrema_fu_1288_dog_pyr_1_val_V_ce1;
        else 
            dog_pyr_1_val_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dog_pyr_2_val_V_address0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state33, ap_CS_fsm_state7, ap_CS_fsm_state34, ap_CS_fsm_state8, ap_CS_fsm_state35, ap_CS_fsm_state9, ap_CS_fsm_state36, ap_CS_fsm_state10, ap_CS_fsm_state37, ap_CS_fsm_state11, ap_CS_fsm_state38, ap_CS_fsm_state12, ap_CS_fsm_state39, ap_CS_fsm_state4, dog_pyr_2_val_V_add_reg_5004, dog_pyr_2_val_V_add_1_reg_5009, dog_pyr_2_val_V_add_2_reg_5014, ap_CS_fsm_state5, dog_pyr_2_val_V_add_4_reg_5106, dog_pyr_2_val_V_add_5_reg_5111, dog_pyr_2_val_V_add_7_reg_5190, dog_pyr_2_val_V_add_8_reg_5195, ap_CS_fsm_state32, dog_pyr_2_val_V_add_10_reg_5349, dog_pyr_2_val_V_add_11_reg_5354, dog_pyr_2_val_V_add_13_reg_5437, dog_pyr_2_val_V_add_14_reg_5442, ap_CS_fsm_state60, grp_adjustLocalExtrema_fu_1288_dog_pyr_2_val_V_address0, tmp_157_cast_fu_1588_p1, tmp_160_cast_fu_1684_p1, tmp_163_cast_fu_1754_p1, tmp_166_cast_fu_2312_p1, tmp_169_cast_fu_2382_p1, ap_CS_fsm_state14, ap_CS_fsm_state41)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            dog_pyr_2_val_V_address0 <= dog_pyr_2_val_V_add_14_reg_5442;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            dog_pyr_2_val_V_address0 <= dog_pyr_2_val_V_add_11_reg_5354;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            dog_pyr_2_val_V_address0 <= dog_pyr_2_val_V_add_13_reg_5437;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            dog_pyr_2_val_V_address0 <= dog_pyr_2_val_V_add_10_reg_5349;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            dog_pyr_2_val_V_address0 <= tmp_169_cast_fu_2382_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            dog_pyr_2_val_V_address0 <= tmp_166_cast_fu_2312_p1(16 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            dog_pyr_2_val_V_address0 <= dog_pyr_2_val_V_add_reg_5004;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            dog_pyr_2_val_V_address0 <= dog_pyr_2_val_V_add_8_reg_5195;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            dog_pyr_2_val_V_address0 <= dog_pyr_2_val_V_add_2_reg_5014;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            dog_pyr_2_val_V_address0 <= dog_pyr_2_val_V_add_5_reg_5111;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            dog_pyr_2_val_V_address0 <= dog_pyr_2_val_V_add_7_reg_5190;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            dog_pyr_2_val_V_address0 <= dog_pyr_2_val_V_add_1_reg_5009;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            dog_pyr_2_val_V_address0 <= dog_pyr_2_val_V_add_4_reg_5106;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            dog_pyr_2_val_V_address0 <= tmp_163_cast_fu_1754_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            dog_pyr_2_val_V_address0 <= tmp_160_cast_fu_1684_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            dog_pyr_2_val_V_address0 <= tmp_157_cast_fu_1588_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            dog_pyr_2_val_V_address0 <= grp_adjustLocalExtrema_fu_1288_dog_pyr_2_val_V_address0;
        else 
            dog_pyr_2_val_V_address0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    dog_pyr_2_val_V_address1 <= grp_adjustLocalExtrema_fu_1288_dog_pyr_2_val_V_address1;

    dog_pyr_2_val_V_ce0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state33, ap_CS_fsm_state7, ap_CS_fsm_state34, ap_CS_fsm_state8, ap_CS_fsm_state35, ap_CS_fsm_state9, ap_CS_fsm_state36, ap_CS_fsm_state10, ap_CS_fsm_state37, ap_CS_fsm_state11, ap_CS_fsm_state38, ap_CS_fsm_state12, ap_CS_fsm_state39, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state32, ap_CS_fsm_state60, grp_adjustLocalExtrema_fu_1288_dog_pyr_2_val_V_ce0, ap_CS_fsm_state14, ap_CS_fsm_state41)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            dog_pyr_2_val_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            dog_pyr_2_val_V_ce0 <= grp_adjustLocalExtrema_fu_1288_dog_pyr_2_val_V_ce0;
        else 
            dog_pyr_2_val_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dog_pyr_2_val_V_ce1_assign_proc : process(ap_CS_fsm_state60, grp_adjustLocalExtrema_fu_1288_dog_pyr_2_val_V_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            dog_pyr_2_val_V_ce1 <= grp_adjustLocalExtrema_fu_1288_dog_pyr_2_val_V_ce1;
        else 
            dog_pyr_2_val_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dog_pyr_3_val_V_address0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state33, ap_CS_fsm_state7, ap_CS_fsm_state34, ap_CS_fsm_state8, ap_CS_fsm_state35, ap_CS_fsm_state9, ap_CS_fsm_state36, ap_CS_fsm_state10, ap_CS_fsm_state37, ap_CS_fsm_state11, ap_CS_fsm_state38, ap_CS_fsm_state12, ap_CS_fsm_state39, ap_CS_fsm_state4, dog_pyr_3_val_V_add_reg_5019, dog_pyr_3_val_V_add_1_reg_5024, dog_pyr_3_val_V_add_2_reg_5029, ap_CS_fsm_state5, dog_pyr_3_val_V_add_4_reg_5116, dog_pyr_3_val_V_add_5_reg_5121, dog_pyr_3_val_V_add_7_reg_5200, dog_pyr_3_val_V_add_8_reg_5205, ap_CS_fsm_state32, dog_pyr_3_val_V_add_10_reg_5359, dog_pyr_3_val_V_add_11_reg_5364, dog_pyr_3_val_V_add_13_reg_5447, dog_pyr_3_val_V_add_14_reg_5452, ap_CS_fsm_state60, grp_adjustLocalExtrema_fu_1288_dog_pyr_3_val_V_address0, tmp_157_cast_fu_1588_p1, tmp_160_cast_fu_1684_p1, tmp_163_cast_fu_1754_p1, tmp_166_cast_fu_2312_p1, tmp_169_cast_fu_2382_p1, ap_CS_fsm_state14, ap_CS_fsm_state41)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            dog_pyr_3_val_V_address0 <= dog_pyr_3_val_V_add_14_reg_5452;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            dog_pyr_3_val_V_address0 <= dog_pyr_3_val_V_add_11_reg_5364;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            dog_pyr_3_val_V_address0 <= dog_pyr_3_val_V_add_13_reg_5447;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            dog_pyr_3_val_V_address0 <= dog_pyr_3_val_V_add_10_reg_5359;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            dog_pyr_3_val_V_address0 <= tmp_169_cast_fu_2382_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            dog_pyr_3_val_V_address0 <= tmp_166_cast_fu_2312_p1(16 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            dog_pyr_3_val_V_address0 <= dog_pyr_3_val_V_add_reg_5019;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            dog_pyr_3_val_V_address0 <= dog_pyr_3_val_V_add_8_reg_5205;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            dog_pyr_3_val_V_address0 <= dog_pyr_3_val_V_add_2_reg_5029;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            dog_pyr_3_val_V_address0 <= dog_pyr_3_val_V_add_5_reg_5121;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            dog_pyr_3_val_V_address0 <= dog_pyr_3_val_V_add_7_reg_5200;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            dog_pyr_3_val_V_address0 <= dog_pyr_3_val_V_add_1_reg_5024;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            dog_pyr_3_val_V_address0 <= dog_pyr_3_val_V_add_4_reg_5116;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            dog_pyr_3_val_V_address0 <= tmp_163_cast_fu_1754_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            dog_pyr_3_val_V_address0 <= tmp_160_cast_fu_1684_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            dog_pyr_3_val_V_address0 <= tmp_157_cast_fu_1588_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            dog_pyr_3_val_V_address0 <= grp_adjustLocalExtrema_fu_1288_dog_pyr_3_val_V_address0;
        else 
            dog_pyr_3_val_V_address0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    dog_pyr_3_val_V_address1 <= grp_adjustLocalExtrema_fu_1288_dog_pyr_3_val_V_address1;

    dog_pyr_3_val_V_ce0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state33, ap_CS_fsm_state7, ap_CS_fsm_state34, ap_CS_fsm_state8, ap_CS_fsm_state35, ap_CS_fsm_state9, ap_CS_fsm_state36, ap_CS_fsm_state10, ap_CS_fsm_state37, ap_CS_fsm_state11, ap_CS_fsm_state38, ap_CS_fsm_state12, ap_CS_fsm_state39, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state32, ap_CS_fsm_state60, grp_adjustLocalExtrema_fu_1288_dog_pyr_3_val_V_ce0, ap_CS_fsm_state14, ap_CS_fsm_state41)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            dog_pyr_3_val_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            dog_pyr_3_val_V_ce0 <= grp_adjustLocalExtrema_fu_1288_dog_pyr_3_val_V_ce0;
        else 
            dog_pyr_3_val_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dog_pyr_3_val_V_ce1_assign_proc : process(ap_CS_fsm_state60, grp_adjustLocalExtrema_fu_1288_dog_pyr_3_val_V_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            dog_pyr_3_val_V_ce1 <= grp_adjustLocalExtrema_fu_1288_dog_pyr_3_val_V_ce1;
        else 
            dog_pyr_3_val_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dog_pyr_4_val_V_address0_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state40, ap_CS_fsm_state15, ap_CS_fsm_state42, dog_pyr_4_val_V_add_reg_5034, dog_pyr_4_val_V_add_1_reg_5039, dog_pyr_4_val_V_add_2_reg_5044, dog_pyr_4_val_V_add_3_reg_5081, dog_pyr_4_val_V_add_4_reg_5126, dog_pyr_4_val_V_add_5_reg_5131, dog_pyr_4_val_V_add_6_reg_5165, dog_pyr_4_val_V_add_7_reg_5210, dog_pyr_4_val_V_add_8_reg_5215, dog_pyr_4_val_V_add_9_reg_5324, dog_pyr_4_val_V_add_10_reg_5369, dog_pyr_4_val_V_add_11_reg_5374, dog_pyr_4_val_V_add_12_reg_5412, dog_pyr_4_val_V_add_13_reg_5457, dog_pyr_4_val_V_add_14_reg_5462, ap_CS_fsm_state60, grp_adjustLocalExtrema_fu_1288_dog_pyr_4_val_V_address0, ap_CS_fsm_state14, ap_CS_fsm_state41, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            dog_pyr_4_val_V_address0 <= dog_pyr_4_val_V_add_14_reg_5462;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            dog_pyr_4_val_V_address0 <= dog_pyr_4_val_V_add_11_reg_5374;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            dog_pyr_4_val_V_address0 <= dog_pyr_4_val_V_add_13_reg_5457;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            dog_pyr_4_val_V_address0 <= dog_pyr_4_val_V_add_10_reg_5369;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            dog_pyr_4_val_V_address0 <= dog_pyr_4_val_V_add_12_reg_5412;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            dog_pyr_4_val_V_address0 <= dog_pyr_4_val_V_add_9_reg_5324;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            dog_pyr_4_val_V_address0 <= dog_pyr_4_val_V_add_8_reg_5215;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            dog_pyr_4_val_V_address0 <= dog_pyr_4_val_V_add_2_reg_5044;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            dog_pyr_4_val_V_address0 <= dog_pyr_4_val_V_add_5_reg_5131;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            dog_pyr_4_val_V_address0 <= dog_pyr_4_val_V_add_7_reg_5210;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            dog_pyr_4_val_V_address0 <= dog_pyr_4_val_V_add_1_reg_5039;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            dog_pyr_4_val_V_address0 <= dog_pyr_4_val_V_add_4_reg_5126;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            dog_pyr_4_val_V_address0 <= dog_pyr_4_val_V_add_6_reg_5165;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            dog_pyr_4_val_V_address0 <= dog_pyr_4_val_V_add_reg_5034;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            dog_pyr_4_val_V_address0 <= dog_pyr_4_val_V_add_3_reg_5081;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            dog_pyr_4_val_V_address0 <= grp_adjustLocalExtrema_fu_1288_dog_pyr_4_val_V_address0;
        else 
            dog_pyr_4_val_V_address0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    dog_pyr_4_val_V_address1 <= grp_adjustLocalExtrema_fu_1288_dog_pyr_4_val_V_address1;

    dog_pyr_4_val_V_ce0_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state40, ap_CS_fsm_state15, ap_CS_fsm_state42, ap_CS_fsm_state60, grp_adjustLocalExtrema_fu_1288_dog_pyr_4_val_V_ce0, ap_CS_fsm_state14, ap_CS_fsm_state41, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            dog_pyr_4_val_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            dog_pyr_4_val_V_ce0 <= grp_adjustLocalExtrema_fu_1288_dog_pyr_4_val_V_ce0;
        else 
            dog_pyr_4_val_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dog_pyr_4_val_V_ce1_assign_proc : process(ap_CS_fsm_state60, grp_adjustLocalExtrema_fu_1288_dog_pyr_4_val_V_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            dog_pyr_4_val_V_ce1 <= grp_adjustLocalExtrema_fu_1288_dog_pyr_4_val_V_ce1;
        else 
            dog_pyr_4_val_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    dog_pyr_val_V_load_1_10_fu_2156_p3 <= 
        reg_1388 when (sel_tmp28_reg_4880(0) = '1') else 
        sel_tmp217_fu_2149_p3;
    dog_pyr_val_V_load_1_1_fu_1976_p3 <= 
        reg_1384 when (sel_tmp28_reg_4880(0) = '1') else 
        sel_tmp127_fu_1969_p3;
    dog_pyr_val_V_load_1_2_fu_1996_p3 <= 
        reg_1396 when (sel_tmp28_reg_4880(0) = '1') else 
        sel_tmp137_fu_1989_p3;
    dog_pyr_val_V_load_1_3_fu_2016_p3 <= 
        reg_1408 when (sel_tmp28_reg_4880(0) = '1') else 
        sel_tmp147_fu_2009_p3;
    dog_pyr_val_V_load_1_4_fu_2036_p3 <= 
        reg_1420 when (sel_tmp28_reg_4880(0) = '1') else 
        sel_tmp157_fu_2029_p3;
    dog_pyr_val_V_load_1_5_fu_2056_p3 <= 
        reg_1432 when (sel_tmp28_reg_4880(0) = '1') else 
        sel_tmp167_fu_2049_p3;
    dog_pyr_val_V_load_1_6_fu_2076_p3 <= 
        reg_1444 when (sel_tmp28_reg_4880(0) = '1') else 
        sel_tmp177_fu_2069_p3;
    dog_pyr_val_V_load_1_7_fu_2096_p3 <= 
        reg_1456 when (sel_tmp28_reg_4880(0) = '1') else 
        sel_tmp187_fu_2089_p3;
    dog_pyr_val_V_load_1_8_fu_2116_p3 <= 
        reg_1376 when (sel_tmp28_reg_4880(0) = '1') else 
        sel_tmp197_fu_2109_p3;
    dog_pyr_val_V_load_1_9_fu_2136_p3 <= 
        dog_pyr_1_val_V_q0 when (sel_tmp28_reg_4880(0) = '1') else 
        sel_tmp207_fu_2129_p3;
    dog_pyr_val_V_load_1_fu_1796_p3 <= 
        dog_pyr_2_val_V_q0 when (sel_tmp28_reg_4880(0) = '1') else 
        sel_tmp37_fu_1789_p3;
    dog_pyr_val_V_load_2_10_fu_2464_p3 <= 
        dog_pyr_2_val_V_q0 when (sel_tmp28_reg_4880(0) = '1') else 
        sel_tmp62_fu_2457_p3;
    dog_pyr_val_V_load_2_1_fu_2176_p3 <= 
        reg_1400 when (sel_tmp28_reg_4880(0) = '1') else 
        sel_tmp227_fu_2169_p3;
    dog_pyr_val_V_load_2_2_fu_2196_p3 <= 
        reg_1412 when (sel_tmp28_reg_4880(0) = '1') else 
        sel_tmp237_fu_2189_p3;
    dog_pyr_val_V_load_2_3_fu_2216_p3 <= 
        reg_1424 when (sel_tmp28_reg_4880(0) = '1') else 
        sel_tmp247_fu_2209_p3;
    dog_pyr_val_V_load_2_4_fu_2236_p3 <= 
        reg_1436 when (sel_tmp28_reg_4880(0) = '1') else 
        sel_tmp257_fu_2229_p3;
    dog_pyr_val_V_load_2_5_fu_2256_p3 <= 
        reg_1448 when (sel_tmp28_reg_4880(0) = '1') else 
        sel_tmp267_fu_2249_p3;
    dog_pyr_val_V_load_2_6_fu_2276_p3 <= 
        reg_1460 when (sel_tmp28_reg_4880(0) = '1') else 
        sel_tmp277_fu_2269_p3;
    dog_pyr_val_V_load_2_7_fu_2354_p3 <= 
        dog_pyr_2_val_V_q0 when (sel_tmp28_reg_4880(0) = '1') else 
        sel_tmp32_fu_2347_p3;
    dog_pyr_val_V_load_2_8_fu_2424_p3 <= 
        dog_pyr_2_val_V_q0 when (sel_tmp28_reg_4880(0) = '1') else 
        sel_tmp42_fu_2417_p3;
    dog_pyr_val_V_load_2_9_fu_2444_p3 <= 
        dog_pyr_2_val_V_q0 when (sel_tmp28_reg_4880(0) = '1') else 
        sel_tmp52_fu_2437_p3;
    dog_pyr_val_V_load_2_fu_1816_p3 <= 
        dog_pyr_2_val_V_q0 when (sel_tmp28_reg_4880(0) = '1') else 
        sel_tmp47_fu_1809_p3;
    dog_pyr_val_V_load_3_10_fu_2664_p3 <= 
        reg_1420 when (sel_tmp28_reg_4880(0) = '1') else 
        sel_tmp162_fu_2657_p3;
    dog_pyr_val_V_load_3_1_fu_2484_p3 <= 
        dog_pyr_2_val_V_q0 when (sel_tmp28_reg_4880(0) = '1') else 
        sel_tmp72_fu_2477_p3;
    dog_pyr_val_V_load_3_2_fu_2504_p3 <= 
        dog_pyr_2_val_V_q0 when (sel_tmp28_reg_4880(0) = '1') else 
        sel_tmp82_fu_2497_p3;
    dog_pyr_val_V_load_3_3_fu_2524_p3 <= 
        dog_pyr_2_val_V_q0 when (sel_tmp28_reg_4880(0) = '1') else 
        sel_tmp92_fu_2517_p3;
    dog_pyr_val_V_load_3_4_fu_2544_p3 <= 
        dog_pyr_2_val_V_q0 when (sel_tmp28_reg_4880(0) = '1') else 
        sel_tmp102_fu_2537_p3;
    dog_pyr_val_V_load_3_5_fu_2564_p3 <= 
        reg_1372 when (sel_tmp28_reg_4880(0) = '1') else 
        sel_tmp112_fu_2557_p3;
    dog_pyr_val_V_load_3_6_fu_2584_p3 <= 
        dog_pyr_3_val_V_q0 when (sel_tmp28_reg_4880(0) = '1') else 
        sel_tmp122_fu_2577_p3;
    dog_pyr_val_V_load_3_7_fu_2604_p3 <= 
        reg_1384 when (sel_tmp28_reg_4880(0) = '1') else 
        sel_tmp132_fu_2597_p3;
    dog_pyr_val_V_load_3_8_fu_2624_p3 <= 
        reg_1396 when (sel_tmp28_reg_4880(0) = '1') else 
        sel_tmp142_fu_2617_p3;
    dog_pyr_val_V_load_3_9_fu_2644_p3 <= 
        reg_1408 when (sel_tmp28_reg_4880(0) = '1') else 
        sel_tmp152_fu_2637_p3;
    dog_pyr_val_V_load_3_fu_1836_p3 <= 
        dog_pyr_2_val_V_q0 when (sel_tmp28_reg_4880(0) = '1') else 
        sel_tmp57_fu_1829_p3;
    dog_pyr_val_V_load_4_10_fu_2864_p3 <= 
        reg_1436 when (sel_tmp28_reg_4880(0) = '1') else 
        sel_tmp262_fu_2857_p3;
    dog_pyr_val_V_load_4_1_fu_2684_p3 <= 
        reg_1432 when (sel_tmp28_reg_4880(0) = '1') else 
        sel_tmp172_fu_2677_p3;
    dog_pyr_val_V_load_4_2_fu_2704_p3 <= 
        reg_1444 when (sel_tmp28_reg_4880(0) = '1') else 
        sel_tmp182_fu_2697_p3;
    dog_pyr_val_V_load_4_3_fu_2724_p3 <= 
        reg_1456 when (sel_tmp28_reg_4880(0) = '1') else 
        sel_tmp192_fu_2717_p3;
    dog_pyr_val_V_load_4_4_fu_2744_p3 <= 
        reg_1376 when (sel_tmp28_reg_4880(0) = '1') else 
        sel_tmp202_fu_2737_p3;
    dog_pyr_val_V_load_4_5_fu_2764_p3 <= 
        dog_pyr_1_val_V_q0 when (sel_tmp28_reg_4880(0) = '1') else 
        sel_tmp212_fu_2757_p3;
    dog_pyr_val_V_load_4_6_fu_2784_p3 <= 
        reg_1388 when (sel_tmp28_reg_4880(0) = '1') else 
        sel_tmp222_fu_2777_p3;
    dog_pyr_val_V_load_4_7_fu_2804_p3 <= 
        reg_1400 when (sel_tmp28_reg_4880(0) = '1') else 
        sel_tmp232_fu_2797_p3;
    dog_pyr_val_V_load_4_8_fu_2824_p3 <= 
        reg_1412 when (sel_tmp28_reg_4880(0) = '1') else 
        sel_tmp242_fu_2817_p3;
    dog_pyr_val_V_load_4_9_fu_2844_p3 <= 
        reg_1424 when (sel_tmp28_reg_4880(0) = '1') else 
        sel_tmp252_fu_2837_p3;
    dog_pyr_val_V_load_4_fu_1856_p3 <= 
        dog_pyr_2_val_V_q0 when (sel_tmp28_reg_4880(0) = '1') else 
        sel_tmp67_fu_1849_p3;
    dog_pyr_val_V_load_5_1_fu_2884_p3 <= 
        reg_1448 when (sel_tmp28_reg_4880(0) = '1') else 
        sel_tmp272_fu_2877_p3;
    dog_pyr_val_V_load_5_2_fu_2904_p3 <= 
        reg_1460 when (sel_tmp28_reg_4880(0) = '1') else 
        sel_tmp282_fu_2897_p3;
    dog_pyr_val_V_load_5_fu_1876_p3 <= 
        dog_pyr_2_val_V_q0 when (sel_tmp28_reg_4880(0) = '1') else 
        sel_tmp77_fu_1869_p3;
    dog_pyr_val_V_load_6_fu_1896_p3 <= 
        dog_pyr_2_val_V_q0 when (sel_tmp28_reg_4880(0) = '1') else 
        sel_tmp87_fu_1889_p3;
    dog_pyr_val_V_load_7_fu_1916_p3 <= 
        dog_pyr_2_val_V_q0 when (sel_tmp28_reg_4880(0) = '1') else 
        sel_tmp97_fu_1909_p3;
    dog_pyr_val_V_load_8_fu_1936_p3 <= 
        reg_1372 when (sel_tmp28_reg_4880(0) = '1') else 
        sel_tmp107_fu_1929_p3;
    dog_pyr_val_V_load_9_fu_1956_p3 <= 
        dog_pyr_3_val_V_q0 when (sel_tmp28_reg_4880(0) = '1') else 
        sel_tmp117_fu_1949_p3;
    dog_pyr_val_V_load_p_fu_1726_p3 <= 
        dog_pyr_2_val_V_q0 when (sel_tmp28_reg_4880(0) = '1') else 
        sel_tmp27_fu_1719_p3;
    exitcond2_fu_1489_p2 <= "1" when (layer_reg_1197 = ap_const_lv3_4) else "0";
    exitcond_fu_3568_p2 <= "1" when (ap_phi_mux_p_Val2_48_phi_fu_1252_p4 = ap_const_lv6_24) else "0";
    exp_tmp_V_fu_4264_p4 <= ireg_V_fu_4248_p1(62 downto 52);
    f_3_fu_4172_p1 <= p_Result_107_fu_4161_p5;
    f_5_fu_4237_p1 <= p_Result_109_fu_4226_p5;
    f_fu_3267_p1 <= p_Result_101_fu_3256_p5;
    gauss_pyr_0_val_V_address0 <= grp_calcOrientationHist_fu_1260_img_0_val_V_address0;
    gauss_pyr_0_val_V_address1 <= grp_calcOrientationHist_fu_1260_img_0_val_V_address1;
    gauss_pyr_0_val_V_ce0 <= grp_calcOrientationHist_fu_1260_img_0_val_V_ce0;
    gauss_pyr_0_val_V_ce1 <= grp_calcOrientationHist_fu_1260_img_0_val_V_ce1;
    gauss_pyr_1_val_V_address0 <= grp_calcOrientationHist_fu_1260_img_1_val_V_address0;
    gauss_pyr_1_val_V_address1 <= grp_calcOrientationHist_fu_1260_img_1_val_V_address1;
    gauss_pyr_1_val_V_ce0 <= grp_calcOrientationHist_fu_1260_img_1_val_V_ce0;
    gauss_pyr_1_val_V_ce1 <= grp_calcOrientationHist_fu_1260_img_1_val_V_ce1;
    gauss_pyr_2_val_V_address0 <= grp_calcOrientationHist_fu_1260_img_2_val_V_address0;
    gauss_pyr_2_val_V_address1 <= grp_calcOrientationHist_fu_1260_img_2_val_V_address1;
    gauss_pyr_2_val_V_ce0 <= grp_calcOrientationHist_fu_1260_img_2_val_V_ce0;
    gauss_pyr_2_val_V_ce1 <= grp_calcOrientationHist_fu_1260_img_2_val_V_ce1;
    gauss_pyr_3_val_V_address0 <= grp_calcOrientationHist_fu_1260_img_3_val_V_address0;
    gauss_pyr_3_val_V_address1 <= grp_calcOrientationHist_fu_1260_img_3_val_V_address1;
    gauss_pyr_3_val_V_ce0 <= grp_calcOrientationHist_fu_1260_img_3_val_V_ce0;
    gauss_pyr_3_val_V_ce1 <= grp_calcOrientationHist_fu_1260_img_3_val_V_ce1;
    gauss_pyr_4_val_V_address0 <= grp_calcOrientationHist_fu_1260_img_4_val_V_address0;
    gauss_pyr_4_val_V_address1 <= grp_calcOrientationHist_fu_1260_img_4_val_V_address1;
    gauss_pyr_4_val_V_ce0 <= grp_calcOrientationHist_fu_1260_img_4_val_V_ce0;
    gauss_pyr_4_val_V_ce1 <= grp_calcOrientationHist_fu_1260_img_4_val_V_ce1;
    gauss_pyr_5_val_V_address0 <= grp_calcOrientationHist_fu_1260_img_5_val_V_address0;
    gauss_pyr_5_val_V_address1 <= grp_calcOrientationHist_fu_1260_img_5_val_V_address1;
    gauss_pyr_5_val_V_ce0 <= grp_calcOrientationHist_fu_1260_img_5_val_V_ce0;
    gauss_pyr_5_val_V_ce1 <= grp_calcOrientationHist_fu_1260_img_5_val_V_ce1;
    grp_adjustLocalExtrema_fu_1288_ap_start <= grp_adjustLocalExtrema_fu_1288_ap_start_reg;
    grp_calcOrientationHist_fu_1260_ap_start <= grp_calcOrientationHist_fu_1260_ap_start_reg;

    grp_fu_1339_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, tmp32_V_5_reg_5665, ap_CS_fsm_pp0_stage1, tmp32_V_11_reg_5830, tmp32_V_17_reg_5856, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_CS_fsm_state63)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_1339_p0 <= tmp32_V_17_reg_5856;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_1339_p0 <= tmp32_V_11_reg_5830;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            grp_fu_1339_p0 <= tmp32_V_5_reg_5665;
        else 
            grp_fu_1339_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    hist_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_state68, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, grp_calcOrientationHist_fu_1260_hist_V_address0, ap_block_pp0_stage0, tmp_307_fu_3580_p1, tmp_309_fu_3610_p1, ap_block_pp0_stage1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            hist_V_address0 <= tmp_309_fu_3610_p1(6 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            hist_V_address0 <= tmp_307_fu_3580_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            hist_V_address0 <= grp_calcOrientationHist_fu_1260_hist_V_address0;
        else 
            hist_V_address0 <= "XXXXXX";
        end if; 
    end process;

    hist_V_address1 <= tmp_311_fu_3633_p1(6 - 1 downto 0);

    hist_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_state68, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, grp_calcOrientationHist_fu_1260_hist_V_ce0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            hist_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            hist_V_ce0 <= grp_calcOrientationHist_fu_1260_hist_V_ce0;
        else 
            hist_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    hist_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            hist_V_ce1 <= ap_const_logic_1;
        else 
            hist_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    hist_V_we0_assign_proc : process(ap_CS_fsm_state68, grp_calcOrientationHist_fu_1260_hist_V_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            hist_V_we0 <= grp_calcOrientationHist_fu_1260_hist_V_we0;
        else 
            hist_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    icmp24_fu_3797_p2 <= "1" when (tmp_1056_fu_3787_p4 = ap_const_lv26_0) else "0";
    icmp29_fu_4023_p2 <= "1" when (tmp_1073_fu_4013_p4 = ap_const_lv26_0) else "0";
    icmp32_fu_4336_p2 <= "1" when (tmp_1090_fu_4326_p4 = ap_const_lv7_0) else "0";
    icmp_fu_3161_p2 <= "1" when (tmp_1037_fu_3151_p4 = ap_const_lv27_0) else "0";
    index_V_fu_3304_p4 <= t_V_11_fu_3278_p1(27 downto 23);
    ireg_V_fu_4248_p1 <= d_assign_fu_1342_p1;
    isNeg_fu_3456_p3 <= sh_assign_fu_3450_p2(8 downto 8);
    is_neg_1_fu_3665_p3 <= p_Val2_31_fu_3650_p2(32 downto 32);
    j_fu_3574_p2 <= std_logic_vector(unsigned(ap_phi_mux_p_Val2_48_phi_fu_1252_p4) + unsigned(ap_const_lv6_1));
    keypoints_val_angle_V_address0 <= tmp_i_fu_4667_p1(9 - 1 downto 0);

    keypoints_val_angle_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then 
            keypoints_val_angle_V_ce0 <= ap_const_logic_1;
        else 
            keypoints_val_angle_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    keypoints_val_angle_V_d0 <= 
        neg_ti_fu_4649_p2 when (tmp_1094_reg_5946(0) = '1') else 
        tmp_1098_reg_5957;

    keypoints_val_angle_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, tmp_308_reg_5755_pp0_iter9_reg, tmp_310_reg_5770_pp0_iter9_reg, tmp_312_reg_5779_pp0_iter9_reg, ap_enable_reg_pp0_iter10)
    begin
        if (((tmp_312_reg_5779_pp0_iter9_reg = ap_const_lv1_1) and (tmp_310_reg_5770_pp0_iter9_reg = ap_const_lv1_1) and (tmp_308_reg_5755_pp0_iter9_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then 
            keypoints_val_angle_V_we0 <= ap_const_logic_1;
        else 
            keypoints_val_angle_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    keypoints_val_layer_address0 <= tmp_i_fu_4667_p1(9 - 1 downto 0);

    keypoints_val_layer_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then 
            keypoints_val_layer_ce0 <= ap_const_logic_1;
        else 
            keypoints_val_layer_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    keypoints_val_layer_d0 <= kpt_layer_reg_5622;

    keypoints_val_layer_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, tmp_308_reg_5755_pp0_iter9_reg, tmp_310_reg_5770_pp0_iter9_reg, tmp_312_reg_5779_pp0_iter9_reg, ap_enable_reg_pp0_iter10)
    begin
        if (((tmp_312_reg_5779_pp0_iter9_reg = ap_const_lv1_1) and (tmp_310_reg_5770_pp0_iter9_reg = ap_const_lv1_1) and (tmp_308_reg_5755_pp0_iter9_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then 
            keypoints_val_layer_we0 <= ap_const_logic_1;
        else 
            keypoints_val_layer_we0 <= ap_const_logic_0;
        end if; 
    end process;

    keypoints_val_octave_address0 <= tmp_i_fu_4667_p1(9 - 1 downto 0);

    keypoints_val_octave_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then 
            keypoints_val_octave_ce0 <= ap_const_logic_1;
        else 
            keypoints_val_octave_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    keypoints_val_octave_d0 <= kpt_octave_reg_5616;

    keypoints_val_octave_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, tmp_308_reg_5755_pp0_iter9_reg, tmp_310_reg_5770_pp0_iter9_reg, tmp_312_reg_5779_pp0_iter9_reg, ap_enable_reg_pp0_iter10)
    begin
        if (((tmp_312_reg_5779_pp0_iter9_reg = ap_const_lv1_1) and (tmp_310_reg_5770_pp0_iter9_reg = ap_const_lv1_1) and (tmp_308_reg_5755_pp0_iter9_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then 
            keypoints_val_octave_we0 <= ap_const_logic_1;
        else 
            keypoints_val_octave_we0 <= ap_const_logic_0;
        end if; 
    end process;

    keypoints_val_pt_x_address0 <= tmp_i_fu_4667_p1(9 - 1 downto 0);

    keypoints_val_pt_x_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then 
            keypoints_val_pt_x_ce0 <= ap_const_logic_1;
        else 
            keypoints_val_pt_x_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    keypoints_val_pt_x_d0 <= kpt_pt_x_reg_5591;

    keypoints_val_pt_x_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, tmp_308_reg_5755_pp0_iter9_reg, tmp_310_reg_5770_pp0_iter9_reg, tmp_312_reg_5779_pp0_iter9_reg, ap_enable_reg_pp0_iter10)
    begin
        if (((tmp_312_reg_5779_pp0_iter9_reg = ap_const_lv1_1) and (tmp_310_reg_5770_pp0_iter9_reg = ap_const_lv1_1) and (tmp_308_reg_5755_pp0_iter9_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then 
            keypoints_val_pt_x_we0 <= ap_const_logic_1;
        else 
            keypoints_val_pt_x_we0 <= ap_const_logic_0;
        end if; 
    end process;

    keypoints_val_pt_y_address0 <= tmp_i_fu_4667_p1(9 - 1 downto 0);

    keypoints_val_pt_y_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then 
            keypoints_val_pt_y_ce0 <= ap_const_logic_1;
        else 
            keypoints_val_pt_y_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    keypoints_val_pt_y_d0 <= kpt_pt_y_reg_5597;

    keypoints_val_pt_y_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, tmp_308_reg_5755_pp0_iter9_reg, tmp_310_reg_5770_pp0_iter9_reg, tmp_312_reg_5779_pp0_iter9_reg, ap_enable_reg_pp0_iter10)
    begin
        if (((tmp_312_reg_5779_pp0_iter9_reg = ap_const_lv1_1) and (tmp_310_reg_5770_pp0_iter9_reg = ap_const_lv1_1) and (tmp_308_reg_5755_pp0_iter9_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then 
            keypoints_val_pt_y_we0 <= ap_const_logic_1;
        else 
            keypoints_val_pt_y_we0 <= ap_const_logic_0;
        end if; 
    end process;

    keypoints_val_sigma_V_address0 <= tmp_i_fu_4667_p1(9 - 1 downto 0);

    keypoints_val_sigma_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then 
            keypoints_val_sigma_V_ce0 <= ap_const_logic_1;
        else 
            keypoints_val_sigma_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    keypoints_val_sigma_V_d0 <= kpt_sigma_V_reg_5603;

    keypoints_val_sigma_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, tmp_308_reg_5755_pp0_iter9_reg, tmp_310_reg_5770_pp0_iter9_reg, tmp_312_reg_5779_pp0_iter9_reg, ap_enable_reg_pp0_iter10)
    begin
        if (((tmp_312_reg_5779_pp0_iter9_reg = ap_const_lv1_1) and (tmp_310_reg_5770_pp0_iter9_reg = ap_const_lv1_1) and (tmp_308_reg_5755_pp0_iter9_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then 
            keypoints_val_sigma_V_we0 <= ap_const_logic_1;
        else 
            keypoints_val_sigma_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    l_fu_1495_p2 <= std_logic_vector(unsigned(layer_reg_1197) + unsigned(ap_const_lv3_1));
    left_fu_3597_p3 <= 
        tmp_305_fu_3591_p2 when (tmp_304_fu_3585_p2(0) = '1') else 
        ap_const_lv6_23;
    loc_V_10_fu_3428_p1 <= p_Val2_84_fu_3406_p1(23 - 1 downto 0);
    loc_V_8_fu_3344_p1 <= p_Val2_43_fu_3339_p2(23 - 1 downto 0);
    loc_V_9_fu_3418_p4 <= p_Val2_84_fu_3406_p1(30 downto 23);
    loc_V_fu_3282_p4 <= t_V_11_fu_3278_p1(30 downto 23);
    man_V_3_fu_4353_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(p_Result_110_fu_4349_p1));
    man_V_4_fu_4359_p3 <= 
        man_V_3_fu_4353_p2 when (isneg_reg_5896(0) = '1') else 
        p_Result_110_fu_4349_p1;
    mask_table1686_address0 <= tmp_1686_i_i_fu_3314_p1(5 - 1 downto 0);

    mask_table1686_ce0_assign_proc : process(ap_CS_fsm_state65)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            mask_table1686_ce0 <= ap_const_logic_1;
        else 
            mask_table1686_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    msb_idx_1_fu_3762_p2 <= std_logic_vector(unsigned(ap_const_lv32_20) - unsigned(num_zeros_1_reg_5804));
    msb_idx_2_fu_3779_p3 <= 
        ap_const_lv31_0 when (tmp_1055_fu_3771_p3(0) = '1') else 
        tmp_1054_fu_3767_p1;
    msb_idx_3_fu_3986_p2 <= std_logic_vector(unsigned(ap_const_lv32_60) - unsigned(num_zeros_2_fu_3978_p3));
    msb_idx_4_fu_4007_p3 <= 
        ap_const_lv31_0 when (tmp_1072_reg_5851(0) = '1') else 
        tmp_1071_reg_5846;
    msb_idx_fu_3145_p2 <= (num_zeros_fu_3137_p1 xor ap_const_lv32_3F);
    mul_fu_4602_p1 <= r_V_s_reg_5941;
    mul_fu_4602_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv83_38E38E38E39) * signed(mul_fu_4602_p1))), 83));
    neg_mul_fu_4608_p2 <= std_logic_vector(unsigned(ap_const_lv83_0) - unsigned(mul_fu_4602_p2));
    neg_ti_fu_4649_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(tmp_1097_reg_5952));
    newSel13_fu_4478_p3 <= 
        storemerge_fu_4392_p3 when (sel_tmp9_fu_4436_p2(0) = '1') else 
        tmp_1089_fu_4369_p1;
    newSel14_fu_4492_p3 <= 
        newSel_fu_4464_p3 when (or_cond_fu_4472_p2(0) = '1') else 
        newSel13_fu_4478_p3;
    newSel_fu_4464_p3 <= 
        tmp_339_fu_4399_p2 when (sel_tmp22_fu_4459_p2(0) = '1') else 
        tmp_1091_fu_4388_p1;
    num_zeros_1_fu_3717_p1 <= tmp_316_fu_3709_p3(32 - 1 downto 0);
    num_zeros_2_fu_3978_p3 <= 
        NZeros_fu_3972_p2 when (tmp_324_fu_3932_p2(0) = '1') else 
        tmp_1069_fu_3928_p1;
    num_zeros_fu_3137_p1 <= tmp_298_fu_3129_p3(32 - 1 downto 0);
    one_half_i_i_cast_fu_3335_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(one_half_table2682_q0),32));
    one_half_table2682_address0 <= tmp_1686_i_i_fu_3314_p1(5 - 1 downto 0);

    one_half_table2682_ce0_assign_proc : process(ap_CS_fsm_state65)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            one_half_table2682_ce0 <= ap_const_logic_1;
        else 
            one_half_table2682_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    or_cond1_fu_4486_p2 <= (sel_tmp9_fu_4436_p2 or sel_tmp2_fu_4410_p2);
    or_cond2_fu_4500_p2 <= (or_cond_fu_4472_p2 or or_cond1_fu_4486_p2);
    or_cond_fu_4472_p2 <= (sel_tmp22_fu_4459_p2 or sel_tmp15_fu_4442_p2);
    p_03_i1_fu_4176_p3 <= 
        ap_const_lv32_0 when (tmp_315_reg_5783_pp0_iter2_reg(0) = '1') else 
        f_3_fu_4172_p1;
    p_03_i2_fu_4241_p3 <= 
        ap_const_lv32_0 when (tmp_320_reg_5814_pp0_iter3_reg(0) = '1') else 
        f_5_fu_4237_p1;
    p_Repl2_34_trunc_fu_3243_p2 <= std_logic_vector(unsigned(tmp_254_fu_3234_p2) + unsigned(tmp_255_fu_3239_p1));
    p_Repl2_37_trunc_fu_4148_p2 <= std_logic_vector(unsigned(tmp_cast_cast_fu_4140_p3) + unsigned(tmp_1067_fu_4137_p1));
    p_Repl2_41_trunc_fu_4213_p2 <= std_logic_vector(unsigned(tmp12_cast_cast_fu_4205_p3) + unsigned(tmp_1085_fu_4202_p1));
    
    p_Result_100_fu_3119_p4_proc : process(p_Val2_68_cast_fu_3115_p1)
    variable vlo_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable p_Result_100_fu_3119_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_3F(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := p_Val2_68_cast_fu_3115_p1;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_3F(6-1 downto 0)));
            for p_Result_100_fu_3119_p4_i in 0 to 64-1 loop
                v0_cpy(p_Result_100_fu_3119_p4_i) := p_Val2_68_cast_fu_3115_p1(64-1-p_Result_100_fu_3119_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(64-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_100_fu_3119_p4 <= resvalue(64-1 downto 0);
    end process;

    p_Result_101_fu_3256_p5 <= (tmp_256_fu_3249_p3 & tmp32_V_20_reg_5670(22 downto 0));
    p_Result_102_fu_3327_p3 <= (p_Result_s_198_fu_3320_p3 & ap_const_lv31_0);
    p_Result_103_fu_3370_p3 <= (tmp_fu_3360_p4 & xs_sig_V_fu_3354_p2);
    
    p_Result_105_fu_3691_p4_proc : process(p_Val2_76_cast_fu_3687_p1)
    variable vlo_cpy : STD_LOGIC_VECTOR(33+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(33+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(33 - 1 downto 0);
    variable p_Result_105_fu_3691_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(33 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(33 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(33 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_20(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := p_Val2_76_cast_fu_3687_p1;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(33-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(33-1-unsigned(ap_const_lv32_20(6-1 downto 0)));
            for p_Result_105_fu_3691_p4_i in 0 to 33-1 loop
                v0_cpy(p_Result_105_fu_3691_p4_i) := p_Val2_76_cast_fu_3687_p1(33-1-p_Result_105_fu_3691_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(33-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_105_fu_3691_p4 <= resvalue(33-1 downto 0);
    end process;

    p_Result_106_fu_3701_p3 <= (ap_const_lv31_7FFFFFFF & p_Result_105_fu_3691_p4);
    p_Result_107_fu_4161_p5 <= (tmp_319_fu_4154_p3 & tmp32_V_21_reg_5861(22 downto 0));
    
    p_Result_108_fu_3948_p5_proc : process(p_Result_11_fu_3938_p4)
    begin
        for i in 64 - 1 downto 0 loop
            if (i > 63 or i < 31) then
                p_Result_108_fu_3948_p5(i) <= ap_const_lv64_FFFFFFFFFFFFFFFF(i);
            elsif (63 - i >= 33) then
                p_Result_108_fu_3948_p5(i) <= '0';
            else
                p_Result_108_fu_3948_p5(i) <= p_Result_11_fu_3938_p4(63 - i);
            end if;
        end loop;
    end process;

    p_Result_109_fu_4226_p5 <= (tmp_328_fu_4219_p3 & tmp32_V_22_reg_5876(22 downto 0));
        p_Result_10_fu_3916_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_322_fu_3906_p4),64));

    p_Result_110_fu_4349_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_330_fu_4342_p3),54));
    
    p_Result_11_fu_3938_p4_proc : process(p_Val2_92_fu_3899_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(35+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(35+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(35 - 1 downto 0);
    variable p_Result_11_fu_3938_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(35 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(35 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(35 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_20(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := p_Val2_92_fu_3899_p3;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(35-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(35-1-unsigned(ap_const_lv32_20(6-1 downto 0)));
            for p_Result_11_fu_3938_p4_i in 0 to 35-1 loop
                v0_cpy(p_Result_11_fu_3938_p4_i) := p_Val2_92_fu_3899_p3(35-1-p_Result_11_fu_3938_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(35-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_11_fu_3938_p4 <= resvalue(33-1 downto 0);
    end process;

    
    p_Result_99_fu_1631_p4_proc : process(p_Val2_41_fu_1625_p2)
    begin
        p_Result_99_fu_1631_p4 <= p_Val2_41_fu_1625_p2;
        p_Result_99_fu_1631_p4(31) <= ap_const_lv1_0(0);
    end process;

    p_Result_s_198_fu_3320_p3 <= t_V_11_reg_5685(31 downto 31);
    p_Val2_265_Val2_1_fu_4570_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_265_Val2_s_fu_4562_p3),32));
    p_Val2_265_Val2_s_fu_4562_p3 <= 
        tmp_1092_fu_4532_p1 when (tmp_341_fu_4550_p2(0) = '1') else 
        p_Val2_53_cast_fu_4556_p2;
    p_Val2_28_fu_3053_p2 <= std_logic_vector(signed(p_shl_cast_fu_3033_p1) - signed(p_shl4_cast_fu_3049_p1));
    p_Val2_30_fu_3552_p1 <= grp_calcOrientationHist_fu_1260_ap_return;
    p_Val2_30_fu_3552_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv48_CCCC) * signed(p_Val2_30_fu_3552_p1))), 48));
    p_Val2_31_fu_3650_p2 <= std_logic_vector(signed(tmp_313_fu_3643_p1) - signed(tmp_314_fu_3647_p1));
    p_Val2_33_fu_3721_p2 <= std_logic_vector(signed(tmp_313_fu_3643_p1) + signed(tmp_314_fu_3647_p1));
    p_Val2_34_fu_3727_p3 <= (hist_V_load_reg_5748 & ap_const_lv1_0);
    p_Val2_35_fu_3886_p3 <= (r_V_reg_5809 & ap_const_lv1_0);
    p_Val2_38_fu_4526_p2 <= std_logic_vector(unsigned(tmp_397_cast_fu_4522_p1) - unsigned(p_Val2_47_fu_4506_p3));
    p_Val2_41_fu_1625_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(ap_phi_mux_val_V_phi_fu_1236_p6));
    p_Val2_43_fu_3339_p2 <= std_logic_vector(unsigned(t_V_11_reg_5685) + unsigned(one_half_i_i_cast_fu_3335_p1));
    p_Val2_45_fu_3528_p3 <= 
        tmp_176_fu_3514_p1 when (isNeg_fu_3456_p3(0) = '1') else 
        tmp_177_fu_3518_p4;
    p_Val2_47_fu_4506_p3 <= 
        newSel14_fu_4492_p3 when (or_cond2_fu_4500_p2(0) = '1') else 
        ap_const_lv32_0;
    p_Val2_53_cast_fu_4556_p2 <= std_logic_vector(signed(ap_const_lv31_7FDC0000) + signed(tmp_1092_fu_4532_p1));
    p_Val2_68_cast_fu_3115_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_76_fu_3109_p3),64));
    p_Val2_76_cast_fu_3687_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_90_fu_3679_p3),33));
    p_Val2_76_fu_3109_p3 <= 
        tmp_332_cast_fu_3104_p2 when (is_neg_reg_5644(0) = '1') else 
        tmp_1033_reg_5633;
        p_Val2_81_cast_fu_4004_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_92_reg_5835),97));

    p_Val2_84_fu_3406_p1 <= x_assign_s_fu_3399_p3;
    p_Val2_90_fu_3679_p3 <= 
        tmp_354_cast_fu_3673_p2 when (is_neg_1_fu_3665_p3(0) = '1') else 
        tmp_1051_fu_3656_p1;
    p_Val2_92_fu_3899_p3 <= 
        tmp_321_fu_3893_p2 when (is_neg_2_reg_5819(0) = '1') else 
        p_Val2_35_fu_3886_p3;
    p_Val2_95_fu_3541_p3 <= 
        p_Val2_i_i_i_fu_3536_p2 when (p_Result_104_reg_5712(0) = '1') else 
        p_Val2_45_reg_5717;
    p_Val2_i_i_i_fu_3536_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(p_Val2_45_reg_5717));
    p_Val2_s_199_fu_4544_p2 <= std_logic_vector(unsigned(ap_const_lv32_240000) + unsigned(p_Val2_38_fu_4526_p2));
    p_Val2_s_fu_3009_p2 <= std_logic_vector(unsigned(p_shl2_fu_2990_p3) - unsigned(p_shl3_cast_fu_3005_p1));
    p_s_fu_3015_p4 <= p_Val2_s_fu_3009_p2(47 downto 16);
    p_shl2_fu_2990_p3 <= (tmp_1032_fu_2987_p1 & ap_const_lv17_0);
        p_shl3_cast_fu_3005_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_shl3_fu_2998_p3),48));

    p_shl3_fu_2998_p3 <= (kpt_sigma_V_reg_5603 & ap_const_lv15_0);
        p_shl4_cast1_fu_3045_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_shl4_fu_3037_p3),50));

        p_shl4_cast_fu_3049_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_shl4_fu_3037_p3),51));

    p_shl4_fu_3037_p3 <= (p_s_fu_3015_p4 & ap_const_lv16_0);
        p_shl_cast_fu_3033_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_shl_fu_3025_p3),51));

    p_shl_fu_3025_p3 <= (p_s_fu_3015_p4 & ap_const_lv18_0);
    p_v_v_fu_4634_p3 <= 
        tmp_1095_fu_4614_p4 when (tmp_1094_reg_5946(0) = '1') else 
        tmp_1096_fu_4624_p4;
    r0_cast_fu_1513_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r0_reg_1209),32));
    r_V_fu_3742_p2 <= std_logic_vector(signed(tmp_365_cast_fu_3734_p1) - signed(tmp_366_cast_fu_3738_p1));
    r_V_s_fu_4585_p1 <= storemerge4_reg_5936;
    r_V_s_fu_4585_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv41_168) * signed(r_V_s_fu_4585_p1))), 41));
    r_fu_1552_p2 <= std_logic_vector(unsigned(ap_const_lv31_1) + unsigned(r0_reg_1209));
    right_fu_3621_p3 <= 
        j_reg_5737 when (tmp_306_fu_3615_p2(0) = '1') else 
        ap_const_lv6_0;
    sel_tmp102_fu_2537_p3 <= 
        dog_pyr_1_val_V_q0 when (sel_tmp26_reg_4824(0) = '1') else 
        dog_pyr_3_val_V_q0;
    sel_tmp107_fu_1929_p3 <= 
        reg_1380 when (sel_tmp26_reg_4824(0) = '1') else 
        dog_pyr_4_val_V_q0;
    sel_tmp112_fu_2557_p3 <= 
        reg_1380 when (sel_tmp26_reg_4824(0) = '1') else 
        dog_pyr_4_val_V_q0;
    sel_tmp117_fu_1949_p3 <= 
        dog_pyr_2_val_V_q0 when (sel_tmp26_reg_4824(0) = '1') else 
        dog_pyr_4_val_V_q0;
    sel_tmp122_fu_2577_p3 <= 
        dog_pyr_2_val_V_q0 when (sel_tmp26_reg_4824(0) = '1') else 
        dog_pyr_4_val_V_q0;
    sel_tmp127_fu_1969_p3 <= 
        reg_1392 when (sel_tmp26_reg_4824(0) = '1') else 
        dog_pyr_4_val_V_q0;
    sel_tmp132_fu_2597_p3 <= 
        reg_1392 when (sel_tmp26_reg_4824(0) = '1') else 
        dog_pyr_4_val_V_q0;
    sel_tmp137_fu_1989_p3 <= 
        reg_1404 when (sel_tmp26_reg_4824(0) = '1') else 
        dog_pyr_4_val_V_q0;
    sel_tmp142_fu_2617_p3 <= 
        reg_1404 when (sel_tmp26_reg_4824(0) = '1') else 
        dog_pyr_4_val_V_q0;
    sel_tmp147_fu_2009_p3 <= 
        reg_1416 when (sel_tmp26_reg_4824(0) = '1') else 
        dog_pyr_4_val_V_q0;
    sel_tmp152_fu_2637_p3 <= 
        reg_1416 when (sel_tmp26_reg_4824(0) = '1') else 
        dog_pyr_4_val_V_q0;
    sel_tmp157_fu_2029_p3 <= 
        reg_1428 when (sel_tmp26_reg_4824(0) = '1') else 
        dog_pyr_4_val_V_q0;
    sel_tmp15_fu_4442_p2 <= (tmp_336_fu_4373_p2 and sel_tmp7_fu_4425_p2);
    sel_tmp162_fu_2657_p3 <= 
        reg_1428 when (sel_tmp26_reg_4824(0) = '1') else 
        dog_pyr_4_val_V_q0;
    sel_tmp167_fu_2049_p3 <= 
        reg_1440 when (sel_tmp26_reg_4824(0) = '1') else 
        dog_pyr_4_val_V_q0;
    sel_tmp172_fu_2677_p3 <= 
        reg_1440 when (sel_tmp26_reg_4824(0) = '1') else 
        dog_pyr_4_val_V_q0;
    sel_tmp177_fu_2069_p3 <= 
        reg_1452 when (sel_tmp26_reg_4824(0) = '1') else 
        dog_pyr_4_val_V_q0;
    sel_tmp182_fu_2697_p3 <= 
        reg_1452 when (sel_tmp26_reg_4824(0) = '1') else 
        dog_pyr_4_val_V_q0;
    sel_tmp187_fu_2089_p3 <= 
        reg_1464 when (sel_tmp26_reg_4824(0) = '1') else 
        dog_pyr_4_val_V_q0;
    sel_tmp192_fu_2717_p3 <= 
        reg_1464 when (sel_tmp26_reg_4824(0) = '1') else 
        dog_pyr_4_val_V_q0;
    sel_tmp197_fu_2109_p3 <= 
        dog_pyr_0_val_V_q0 when (sel_tmp26_reg_4824(0) = '1') else 
        reg_1380;
    sel_tmp1_fu_4405_p2 <= (tmp_331_reg_5907 xor ap_const_lv1_1);
    sel_tmp202_fu_2737_p3 <= 
        dog_pyr_0_val_V_q0 when (sel_tmp26_reg_4824(0) = '1') else 
        reg_1380;
    sel_tmp207_fu_2129_p3 <= 
        dog_pyr_0_val_V_q0 when (sel_tmp26_reg_4824(0) = '1') else 
        reg_1468;
    sel_tmp212_fu_2757_p3 <= 
        dog_pyr_0_val_V_q0 when (sel_tmp26_reg_4824(0) = '1') else 
        reg_1468;
    sel_tmp217_fu_2149_p3 <= 
        dog_pyr_0_val_V_q0 when (sel_tmp26_reg_4824(0) = '1') else 
        reg_1392;
    sel_tmp21_demorgan_fu_4448_p2 <= (tmp_332_reg_5913 or sel_tmp6_demorgan_fu_4415_p2);
    sel_tmp21_fu_4453_p2 <= (sel_tmp21_demorgan_fu_4448_p2 xor ap_const_lv1_1);
    sel_tmp222_fu_2777_p3 <= 
        dog_pyr_0_val_V_q0 when (sel_tmp26_reg_4824(0) = '1') else 
        reg_1392;
    sel_tmp227_fu_2169_p3 <= 
        dog_pyr_0_val_V_q0 when (sel_tmp26_reg_4824(0) = '1') else 
        reg_1404;
    sel_tmp22_fu_4459_p2 <= (sel_tmp21_fu_4453_p2 and icmp32_reg_5931);
    sel_tmp232_fu_2797_p3 <= 
        dog_pyr_0_val_V_q0 when (sel_tmp26_reg_4824(0) = '1') else 
        reg_1404;
    sel_tmp237_fu_2189_p3 <= 
        dog_pyr_0_val_V_q0 when (sel_tmp26_reg_4824(0) = '1') else 
        reg_1416;
    sel_tmp242_fu_2817_p3 <= 
        dog_pyr_0_val_V_q0 when (sel_tmp26_reg_4824(0) = '1') else 
        reg_1416;
    sel_tmp247_fu_2209_p3 <= 
        dog_pyr_0_val_V_q0 when (sel_tmp26_reg_4824(0) = '1') else 
        reg_1428;
    sel_tmp252_fu_2837_p3 <= 
        dog_pyr_0_val_V_q0 when (sel_tmp26_reg_4824(0) = '1') else 
        reg_1428;
    sel_tmp257_fu_2229_p3 <= 
        dog_pyr_0_val_V_q0 when (sel_tmp26_reg_4824(0) = '1') else 
        reg_1440;
    sel_tmp262_fu_2857_p3 <= 
        dog_pyr_0_val_V_q0 when (sel_tmp26_reg_4824(0) = '1') else 
        reg_1440;
    sel_tmp267_fu_2249_p3 <= 
        dog_pyr_0_val_V_q0 when (sel_tmp26_reg_4824(0) = '1') else 
        reg_1452;
    sel_tmp26_fu_1501_p2 <= "1" when (layer_reg_1197 = ap_const_lv3_1) else "0";
    sel_tmp272_fu_2877_p3 <= 
        dog_pyr_0_val_V_q0 when (sel_tmp26_reg_4824(0) = '1') else 
        reg_1452;
    sel_tmp277_fu_2269_p3 <= 
        dog_pyr_0_val_V_q0 when (sel_tmp26_reg_4824(0) = '1') else 
        reg_1464;
    sel_tmp27_fu_1719_p3 <= 
        dog_pyr_1_val_V_q0 when (sel_tmp26_reg_4824(0) = '1') else 
        dog_pyr_3_val_V_q0;
    sel_tmp282_fu_2897_p3 <= 
        dog_pyr_0_val_V_q0 when (sel_tmp26_reg_4824(0) = '1') else 
        reg_1464;
    sel_tmp287_fu_3385_p1 <= sel_tmp287_v_fu_3378_p3;
    sel_tmp287_v_fu_3378_p3 <= 
        p_Result_102_fu_3327_p3 when (tmp_i_i_reg_5691(0) = '1') else 
        p_Result_103_fu_3370_p3;
    sel_tmp288_fu_3389_p2 <= (tmp_i_i_reg_5691 xor ap_const_lv1_1);
    sel_tmp289_fu_3394_p2 <= (tmp_1685_i_i_reg_5697 and sel_tmp288_fu_3389_p2);
    sel_tmp28_fu_1507_p2 <= "1" when (layer_reg_1197 = ap_const_lv3_2) else "0";
    sel_tmp2_fu_4410_p2 <= (tmp_335_reg_5925 and sel_tmp1_fu_4405_p2);
    sel_tmp32_fu_2347_p3 <= 
        dog_pyr_1_val_V_q0 when (sel_tmp26_reg_4824(0) = '1') else 
        dog_pyr_3_val_V_q0;
    sel_tmp37_fu_1789_p3 <= 
        dog_pyr_1_val_V_q0 when (sel_tmp26_reg_4824(0) = '1') else 
        dog_pyr_3_val_V_q0;
    sel_tmp42_fu_2417_p3 <= 
        dog_pyr_1_val_V_q0 when (sel_tmp26_reg_4824(0) = '1') else 
        dog_pyr_3_val_V_q0;
    sel_tmp47_fu_1809_p3 <= 
        dog_pyr_1_val_V_q0 when (sel_tmp26_reg_4824(0) = '1') else 
        dog_pyr_3_val_V_q0;
    sel_tmp52_fu_2437_p3 <= 
        dog_pyr_1_val_V_q0 when (sel_tmp26_reg_4824(0) = '1') else 
        dog_pyr_3_val_V_q0;
    sel_tmp57_fu_1829_p3 <= 
        dog_pyr_1_val_V_q0 when (sel_tmp26_reg_4824(0) = '1') else 
        dog_pyr_3_val_V_q0;
    sel_tmp62_fu_2457_p3 <= 
        dog_pyr_1_val_V_q0 when (sel_tmp26_reg_4824(0) = '1') else 
        dog_pyr_3_val_V_q0;
    sel_tmp67_fu_1849_p3 <= 
        dog_pyr_1_val_V_q0 when (sel_tmp26_reg_4824(0) = '1') else 
        dog_pyr_3_val_V_q0;
    sel_tmp6_demorgan_fu_4415_p2 <= (tmp_335_reg_5925 or tmp_331_reg_5907);
    sel_tmp6_fu_4419_p2 <= (sel_tmp6_demorgan_fu_4415_p2 xor ap_const_lv1_1);
    sel_tmp72_fu_2477_p3 <= 
        dog_pyr_1_val_V_q0 when (sel_tmp26_reg_4824(0) = '1') else 
        dog_pyr_3_val_V_q0;
    sel_tmp77_fu_1869_p3 <= 
        dog_pyr_1_val_V_q0 when (sel_tmp26_reg_4824(0) = '1') else 
        dog_pyr_3_val_V_q0;
    sel_tmp7_fu_4425_p2 <= (tmp_332_reg_5913 and sel_tmp6_fu_4419_p2);
    sel_tmp82_fu_2497_p3 <= 
        dog_pyr_1_val_V_q0 when (sel_tmp26_reg_4824(0) = '1') else 
        dog_pyr_3_val_V_q0;
    sel_tmp87_fu_1889_p3 <= 
        dog_pyr_1_val_V_q0 when (sel_tmp26_reg_4824(0) = '1') else 
        dog_pyr_3_val_V_q0;
    sel_tmp8_fu_4430_p2 <= (tmp_336_fu_4373_p2 xor ap_const_lv1_1);
    sel_tmp92_fu_2517_p3 <= 
        dog_pyr_1_val_V_q0 when (sel_tmp26_reg_4824(0) = '1') else 
        dog_pyr_3_val_V_q0;
    sel_tmp97_fu_1909_p3 <= 
        dog_pyr_1_val_V_q0 when (sel_tmp26_reg_4824(0) = '1') else 
        dog_pyr_3_val_V_q0;
    sel_tmp9_fu_4436_p2 <= (sel_tmp8_fu_4430_p2 and sel_tmp7_fu_4425_p2);
        sh_amt_cast_fu_4366_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_reg_5919),32));

    sh_amt_fu_4312_p3 <= 
        tmp_333_fu_4300_p2 when (tmp_332_fu_4294_p2(0) = '1') else 
        tmp_334_fu_4306_p2;
    sh_assign_4_fu_3474_p3 <= 
        tmp_1702_i_i_i_cast_fu_3470_p1 when (isNeg_fu_3456_p3(0) = '1') else 
        sh_assign_fu_3450_p2;
        sh_assign_6_i_i_i_ca_1_fu_3486_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_assign_4_fu_3474_p3),25));

        sh_assign_6_i_i_i_ca_fu_3482_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_assign_4_fu_3474_p3),32));

    sh_assign_fu_3450_p2 <= std_logic_vector(signed(ap_const_lv9_181) + signed(tmp_i_i_i_i_cast_fu_3446_p1));
    storemerge4_fu_4574_p3 <= 
        p_Val2_s_199_fu_4544_p2 when (tmp_1093_fu_4536_p3(0) = '1') else 
        p_Val2_265_Val2_1_fu_4570_p1;
    storemerge_fu_4392_p3 <= 
        ap_const_lv32_FFFFFFFF when (isneg_reg_5896(0) = '1') else 
        ap_const_lv32_0;
    t_V_11_fu_3278_p1 <= x_assign_fu_3271_p3;
    tmp12_cast_cast_fu_4205_p3 <= 
        ap_const_lv8_70 when (tmp_327_fu_4197_p2(0) = '1') else 
        ap_const_lv8_6F;
    tmp32_V_10_fu_3874_p1 <= tmp_1065_fu_3868_p2(32 - 1 downto 0);
    tmp32_V_11_fu_3878_p3 <= 
        tmp32_V_8_fu_3813_p2 when (icmp24_fu_3797_p2(0) = '1') else 
        tmp32_V_10_fu_3874_p1;
    tmp32_V_14_fu_4029_p1 <= p_Val2_92_reg_5835(32 - 1 downto 0);
    tmp32_V_15_fu_4042_p2 <= std_logic_vector(shift_left(unsigned(tmp32_V_14_fu_4029_p1),to_integer(unsigned('0' & tmp_373_cast_fu_4038_p1(31-1 downto 0)))));
    tmp32_V_16_fu_4106_p1 <= tmp_1083_fu_4100_p2(32 - 1 downto 0);
    tmp32_V_17_fu_4110_p3 <= 
        tmp32_V_15_fu_4042_p2 when (icmp29_fu_4023_p2(0) = '1') else 
        tmp32_V_16_fu_4106_p1;
    tmp32_V_20_fu_3215_p1 <= grp_fu_1339_p1;
    tmp32_V_21_fu_4118_p1 <= grp_fu_1339_p1;
    tmp32_V_22_fu_4183_p1 <= grp_fu_1339_p1;
    tmp32_V_3_fu_3177_p2 <= std_logic_vector(shift_left(unsigned(tmp32_V_fu_3167_p1),to_integer(unsigned('0' & tmp_299_fu_3171_p2(31-1 downto 0)))));
    tmp32_V_4_fu_3203_p1 <= tmp_1042_fu_3197_p2(32 - 1 downto 0);
    tmp32_V_5_fu_3207_p3 <= 
        tmp32_V_3_fu_3177_p2 when (icmp_fu_3161_p2(0) = '1') else 
        tmp32_V_4_fu_3203_p1;
    tmp32_V_8_fu_3813_p2 <= std_logic_vector(shift_left(unsigned(p_Val2_90_reg_5793),to_integer(unsigned('0' & tmp_358_cast_fu_3809_p1(31-1 downto 0)))));
    tmp32_V_fu_3167_p1 <= p_Val2_76_fu_3109_p3(32 - 1 downto 0);
    tmp_1016_fu_1522_p1 <= r0_reg_1209(10 - 1 downto 0);
    tmp_1017_fu_1534_p1 <= r0_reg_1209(10 - 1 downto 0);
    tmp_1018_fu_1538_p2 <= std_logic_vector(signed(ap_const_lv10_3FF) + signed(tmp_1017_fu_1534_p1));
    tmp_1019_fu_1558_p1 <= r_fu_1552_p2(10 - 1 downto 0);
    tmp_1020_fu_1579_p1 <= c0_reg_1221(18 - 1 downto 0);
    tmp_1022_fu_1641_p3 <= ap_phi_mux_val_V_phi_fu_1236_p6(31 downto 31);
    tmp_1023_fu_1669_p1 <= c0_reg_1221(18 - 1 downto 0);
    tmp_1024_fu_1673_p2 <= std_logic_vector(signed(ap_const_lv18_3FFFF) + signed(tmp_1023_fu_1669_p1));
    tmp_1025_fu_1739_p1 <= c0_reg_1221(18 - 1 downto 0);
    tmp_1026_fu_1743_p2 <= std_logic_vector(unsigned(ap_const_lv18_1) + unsigned(tmp_1025_fu_1739_p1));
    tmp_1027_fu_2289_p3 <= val_V_reg_1233(31 downto 31);
    tmp_1028_fu_2297_p1 <= c0_reg_1221(18 - 1 downto 0);
    tmp_1029_fu_2301_p2 <= std_logic_vector(signed(ap_const_lv18_3FFFF) + signed(tmp_1028_fu_2297_p1));
    tmp_1030_fu_2367_p1 <= c0_reg_1221(18 - 1 downto 0);
    tmp_1031_fu_2371_p2 <= std_logic_vector(unsigned(ap_const_lv18_1) + unsigned(tmp_1030_fu_2367_p1));
    tmp_1032_fu_2987_p1 <= kpt_sigma_V_reg_5603(31 - 1 downto 0);
    tmp_1033_fu_3059_p1 <= p_Val2_28_fu_3053_p2(50 - 1 downto 0);
    tmp_1036_fu_3141_p1 <= tmp_298_fu_3129_p3(8 - 1 downto 0);
    tmp_1037_fu_3151_p4 <= msb_idx_fu_3145_p2(31 downto 5);
    tmp_1039_fu_3183_p1 <= msb_idx_fu_3145_p2(6 - 1 downto 0);
    tmp_1040_fu_3187_p2 <= std_logic_vector(signed(ap_const_lv6_21) + signed(tmp_1039_fu_3183_p1));
    tmp_1041_fu_3193_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1040_fu_3187_p2),64));
    tmp_1042_fu_3197_p2 <= std_logic_vector(shift_right(unsigned(p_Val2_68_cast_fu_3115_p1),to_integer(unsigned('0' & tmp_1041_fu_3193_p1(31-1 downto 0)))));
    tmp_1049_fu_3506_p3 <= tmp_1704_i_i_i_fu_3494_p2(24 downto 24);
    tmp_1050_fu_3077_p1 <= layer_1_reg_5575(3 - 1 downto 0);
    tmp_1051_fu_3656_p1 <= p_Val2_31_fu_3650_p2(32 - 1 downto 0);
    tmp_1054_fu_3767_p1 <= msb_idx_1_fu_3762_p2(31 - 1 downto 0);
    tmp_1055_fu_3771_p3 <= msb_idx_1_fu_3762_p2(31 downto 31);
    tmp_1056_fu_3787_p4 <= msb_idx_2_fu_3779_p3(30 downto 5);
    tmp_1057_fu_3818_p1 <= msb_idx_2_fu_3779_p3(6 - 1 downto 0);
    tmp_1058_fu_3822_p2 <= "1" when (unsigned(msb_idx_2_fu_3779_p3) < unsigned(ap_const_lv31_1F)) else "0";
    tmp_1059_fu_3828_p2 <= std_logic_vector(signed(ap_const_lv6_21) + signed(tmp_1057_fu_3818_p1));
    
    tmp_1060_fu_3834_p4_proc : process(p_Val2_76_cast_reg_5798)
    variable vlo_cpy : STD_LOGIC_VECTOR(33+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(33+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(33 - 1 downto 0);
    variable tmp_1060_fu_3834_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(33 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(33 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(33 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_20(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := p_Val2_76_cast_reg_5798;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(33-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(33-1-unsigned(ap_const_lv32_20(6-1 downto 0)));
            for tmp_1060_fu_3834_p4_i in 0 to 33-1 loop
                v0_cpy(tmp_1060_fu_3834_p4_i) := p_Val2_76_cast_reg_5798(33-1-tmp_1060_fu_3834_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(33-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_1060_fu_3834_p4 <= resvalue(33-1 downto 0);
    end process;

    tmp_1061_fu_3843_p2 <= (tmp_1057_fu_3818_p1 xor ap_const_lv6_3F);
    tmp_1062_fu_3849_p3 <= 
        tmp_1060_fu_3834_p4 when (tmp_1058_fu_3822_p2(0) = '1') else 
        p_Val2_76_cast_reg_5798;
    tmp_1063_fu_3856_p3 <= 
        tmp_1061_fu_3843_p2 when (tmp_1058_fu_3822_p2(0) = '1') else 
        tmp_1059_fu_3828_p2;
    tmp_1064_fu_3864_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1063_fu_3856_p3),33));
    tmp_1065_fu_3868_p2 <= std_logic_vector(shift_right(unsigned(tmp_1062_fu_3849_p3),to_integer(unsigned('0' & tmp_1064_fu_3864_p1(31-1 downto 0)))));
    tmp_1067_fu_4137_p1 <= msb_idx_1_reg_5825_pp0_iter3_reg(8 - 1 downto 0);
    tmp_1069_fu_3928_p1 <= tmp_323_fu_3920_p3(32 - 1 downto 0);
    tmp_1070_fu_3968_p1 <= tmp_325_fu_3960_p3(32 - 1 downto 0);
    tmp_1071_fu_3992_p1 <= msb_idx_3_fu_3986_p2(31 - 1 downto 0);
    tmp_1073_fu_4013_p4 <= msb_idx_4_fu_4007_p3(30 downto 5);
    tmp_1075_fu_4048_p1 <= msb_idx_4_fu_4007_p3(7 - 1 downto 0);
    tmp_1076_fu_4052_p2 <= "1" when (unsigned(msb_idx_4_fu_4007_p3) < unsigned(ap_const_lv31_1F)) else "0";
    tmp_1077_fu_4058_p2 <= std_logic_vector(signed(ap_const_lv7_61) + signed(tmp_1075_fu_4048_p1));
    
    tmp_1078_fu_4064_p4_proc : process(p_Val2_81_cast_fu_4004_p1)
    variable vlo_cpy : STD_LOGIC_VECTOR(97+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(97+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(97 - 1 downto 0);
    variable tmp_1078_fu_4064_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(97 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(97 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(97 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(7 - 1 downto 0) := ap_const_lv32_60(7 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(7 - 1 downto 0) := ap_const_lv32_0(7 - 1 downto 0);
        v0_cpy := p_Val2_81_cast_fu_4004_p1;
        if (vlo_cpy(7 - 1 downto 0) > vhi_cpy(7 - 1 downto 0)) then
            vhi_cpy(7-1 downto 0) := std_logic_vector(97-1-unsigned(ap_const_lv32_0(7-1 downto 0)));
            vlo_cpy(7-1 downto 0) := std_logic_vector(97-1-unsigned(ap_const_lv32_60(7-1 downto 0)));
            for tmp_1078_fu_4064_p4_i in 0 to 97-1 loop
                v0_cpy(tmp_1078_fu_4064_p4_i) := p_Val2_81_cast_fu_4004_p1(97-1-tmp_1078_fu_4064_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(7-1 downto 0)))));

        section := (others=>'0');
        section(7-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(7-1 downto 0)) - unsigned(vlo_cpy(7-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(97-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_1078_fu_4064_p4 <= resvalue(97-1 downto 0);
    end process;

    tmp_1079_fu_4074_p2 <= (tmp_1075_fu_4048_p1 xor ap_const_lv7_7F);
    tmp_1080_fu_4080_p3 <= 
        tmp_1078_fu_4064_p4 when (tmp_1076_fu_4052_p2(0) = '1') else 
        p_Val2_81_cast_fu_4004_p1;
    tmp_1081_fu_4088_p3 <= 
        tmp_1079_fu_4074_p2 when (tmp_1076_fu_4052_p2(0) = '1') else 
        tmp_1077_fu_4058_p2;
    tmp_1082_fu_4096_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1081_fu_4088_p3),97));
    tmp_1083_fu_4100_p2 <= std_logic_vector(shift_right(unsigned(tmp_1080_fu_4080_p3),to_integer(unsigned('0' & tmp_1082_fu_4096_p1(31-1 downto 0)))));
    tmp_1085_fu_4202_p1 <= msb_idx_3_reg_5841_pp0_iter3_reg(8 - 1 downto 0);
    tmp_1086_fu_4252_p1 <= ireg_V_fu_4248_p1(63 - 1 downto 0);
    tmp_1088_fu_4278_p1 <= ireg_V_fu_4248_p1(52 - 1 downto 0);
    tmp_1089_fu_4369_p1 <= man_V_4_fu_4359_p3(32 - 1 downto 0);
    tmp_1090_fu_4326_p4 <= sh_amt_fu_4312_p3(11 downto 5);
    tmp_1091_fu_4388_p1 <= tmp_338_fu_4382_p2(32 - 1 downto 0);
    tmp_1092_fu_4532_p1 <= p_Val2_38_fu_4526_p2(31 - 1 downto 0);
    tmp_1093_fu_4536_p3 <= p_Val2_38_fu_4526_p2(31 downto 31);
    tmp_1095_fu_4614_p4 <= neg_mul_fu_4608_p2(82 downto 47);
    tmp_1096_fu_4624_p4 <= mul_fu_4602_p2(82 downto 47);
    tmp_1097_fu_4641_p1 <= p_v_v_fu_4634_p3(32 - 1 downto 0);
    tmp_1098_fu_4645_p1 <= p_v_v_fu_4634_p3(32 - 1 downto 0);
    tmp_152_cast_fu_1526_p3 <= (tmp_1016_fu_1522_p1 & ap_const_lv8_0);
    tmp_154_cast_fu_1544_p3 <= (tmp_1018_fu_1538_p2 & ap_const_lv8_0);
    tmp_156_cast_fu_1562_p3 <= (tmp_1019_fu_1558_p1 & ap_const_lv8_0);
    tmp_157_cast_fu_1588_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_157_fu_1583_p2),64));
    tmp_157_fu_1583_p2 <= std_logic_vector(unsigned(tmp_152_cast_reg_4939) + unsigned(tmp_1020_fu_1579_p1));
    tmp_158_cast_fu_1602_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_158_fu_1597_p2),64));
    tmp_158_fu_1597_p2 <= std_logic_vector(unsigned(tmp_154_cast_reg_4948) + unsigned(tmp_1020_fu_1579_p1));
    tmp_159_cast_fu_1616_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_159_fu_1611_p2),64));
    tmp_159_fu_1611_p2 <= std_logic_vector(unsigned(tmp_156_cast_reg_4962) + unsigned(tmp_1020_fu_1579_p1));
    tmp_160_cast_fu_1684_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_160_fu_1679_p2),64));
    tmp_160_fu_1679_p2 <= std_logic_vector(unsigned(tmp_152_cast_reg_4939) + unsigned(tmp_1024_fu_1673_p2));
    tmp_161_cast_fu_1697_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_161_fu_1693_p2),64));
    tmp_161_fu_1693_p2 <= std_logic_vector(unsigned(tmp_154_cast_reg_4948) + unsigned(tmp_1024_reg_5055));
    tmp_162_cast_fu_1710_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_162_fu_1706_p2),64));
    tmp_162_fu_1706_p2 <= std_logic_vector(unsigned(tmp_156_cast_reg_4962) + unsigned(tmp_1024_reg_5055));
    tmp_163_cast_fu_1754_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_163_fu_1749_p2),64));
    tmp_163_fu_1749_p2 <= std_logic_vector(unsigned(tmp_152_cast_reg_4939) + unsigned(tmp_1026_fu_1743_p2));
    tmp_164_cast_fu_1767_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_164_fu_1763_p2),64));
    tmp_164_fu_1763_p2 <= std_logic_vector(unsigned(tmp_154_cast_reg_4948) + unsigned(tmp_1026_reg_5139));
    tmp_165_cast_fu_1780_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_165_fu_1776_p2),64));
    tmp_165_fu_1776_p2 <= std_logic_vector(unsigned(tmp_156_cast_reg_4962) + unsigned(tmp_1026_reg_5139));
    tmp_166_cast_fu_2312_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_166_fu_2307_p2),64));
    tmp_166_fu_2307_p2 <= std_logic_vector(unsigned(tmp_152_cast_reg_4939) + unsigned(tmp_1029_fu_2301_p2));
    tmp_167_cast_fu_2325_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_167_fu_2321_p2),64));
    tmp_167_fu_2321_p2 <= std_logic_vector(unsigned(tmp_154_cast_reg_4948) + unsigned(tmp_1029_reg_5298));
    tmp_1685_i_i_fu_3298_p2 <= "1" when (unsigned(loc_V_fu_3282_p4) > unsigned(ap_const_lv8_96)) else "0";
    tmp_1686_i_i_fu_3314_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(index_V_fu_3304_p4),64));
    tmp_1688_i_i_fu_3348_p2 <= (mask_table1686_q0 xor ap_const_lv23_7FFFFF);
    tmp_168_cast_fu_2338_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_168_fu_2334_p2),64));
    tmp_168_fu_2334_p2 <= std_logic_vector(unsigned(tmp_156_cast_reg_4962) + unsigned(tmp_1029_reg_5298));
    tmp_169_cast_fu_2382_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_169_fu_2377_p2),64));
    tmp_169_fu_2377_p2 <= std_logic_vector(unsigned(tmp_152_cast_reg_4939) + unsigned(tmp_1031_fu_2371_p2));
    tmp_1701_i_i_i_cast9_fu_3442_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1701_i_i_i_fu_3432_p4),79));
    tmp_1701_i_i_i_fu_3432_p4 <= ((ap_const_lv1_1 & loc_V_10_fu_3428_p1) & ap_const_lv1_0);
        tmp_1702_i_i_i_cast_fu_3470_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_1702_i_i_i_fu_3464_p2),9));

    tmp_1702_i_i_i_fu_3464_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) - unsigned(loc_V_9_fu_3418_p4));
    tmp_1703_i_i_i_fu_3490_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_assign_6_i_i_i_ca_fu_3482_p1),79));
    tmp_1704_i_i_i_fu_3494_p2 <= std_logic_vector(shift_right(unsigned(tmp_1701_i_i_i_fu_3432_p4),to_integer(unsigned('0' & sh_assign_6_i_i_i_ca_1_fu_3486_p1(25-1 downto 0)))));
    tmp_1705_i_i_i_fu_3500_p2 <= std_logic_vector(shift_left(unsigned(tmp_1701_i_i_i_cast9_fu_3442_p1),to_integer(unsigned('0' & tmp_1703_i_i_i_fu_3490_p1(31-1 downto 0)))));
    tmp_170_cast_fu_2401_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_170_reg_5387),64));
    tmp_170_fu_2391_p2 <= std_logic_vector(unsigned(tmp_154_cast_reg_4948) + unsigned(tmp_1031_fu_2371_p2));
    tmp_171_cast_fu_2409_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_171_reg_5392),64));
    tmp_171_fu_2396_p2 <= std_logic_vector(unsigned(tmp_156_cast_reg_4962) + unsigned(tmp_1031_fu_2371_p2));
    tmp_176_fu_3514_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1049_fu_3506_p3),32));
    tmp_177_fu_3518_p4 <= tmp_1705_i_i_i_fu_3500_p2(55 downto 24);
    tmp_235_fu_1478_p2 <= std_logic_vector(unsigned(dog_pyr_0_cols_read) + unsigned(ap_const_lv32_FFFFFFFB));
    tmp_236_fu_1517_p2 <= "1" when (signed(r0_cast_fu_1513_p1) < signed(tmp_s_reg_4806)) else "0";
    tmp_237_fu_1574_p2 <= "1" when (signed(c0_cast_fu_1570_p1) < signed(tmp_235_reg_4811)) else "0";
    tmp_239_fu_1657_p2 <= "1" when (signed(agg_result_V_i_i_fu_1649_p3) > signed(ap_const_lv32_10000)) else "0";
    tmp_240_fu_1663_p2 <= "1" when (signed(ap_phi_mux_val_V_phi_fu_1236_p6) > signed(ap_const_lv32_0)) else "0";
    tmp_241_fu_1733_p2 <= "1" when (signed(val_V_reg_1233) < signed(dog_pyr_val_V_load_p_fu_1726_p3)) else "0";
    tmp_242_fu_1803_p2 <= "1" when (signed(val_V_reg_1233) < signed(dog_pyr_val_V_load_1_fu_1796_p3)) else "0";
    tmp_243_fu_1823_p2 <= "1" when (signed(val_V_reg_1233) < signed(dog_pyr_val_V_load_2_fu_1816_p3)) else "0";
    tmp_244_fu_1843_p2 <= "1" when (signed(val_V_reg_1233) < signed(dog_pyr_val_V_load_3_fu_1836_p3)) else "0";
    tmp_245_fu_1863_p2 <= "1" when (signed(val_V_reg_1233) < signed(dog_pyr_val_V_load_4_fu_1856_p3)) else "0";
    tmp_246_fu_1883_p2 <= "1" when (signed(val_V_reg_1233) < signed(dog_pyr_val_V_load_5_fu_1876_p3)) else "0";
    tmp_247_fu_1903_p2 <= "1" when (signed(val_V_reg_1233) < signed(dog_pyr_val_V_load_6_fu_1896_p3)) else "0";
    tmp_248_fu_1923_p2 <= "1" when (signed(val_V_reg_1233) < signed(dog_pyr_val_V_load_7_fu_1916_p3)) else "0";
    tmp_249_fu_1943_p2 <= "1" when (signed(val_V_reg_1233) < signed(dog_pyr_val_V_load_8_fu_1936_p3)) else "0";
    tmp_250_fu_1963_p2 <= "1" when (signed(val_V_reg_1233) < signed(dog_pyr_val_V_load_9_fu_1956_p3)) else "0";
    tmp_251_fu_1983_p2 <= "1" when (signed(val_V_reg_1233) < signed(dog_pyr_val_V_load_1_1_fu_1976_p3)) else "0";
    tmp_252_fu_2941_p1 <= grp_adjustLocalExtrema_fu_1288_ap_return_0;
    tmp_253_fu_2003_p2 <= "1" when (signed(val_V_reg_1233) < signed(dog_pyr_val_V_load_1_2_fu_1996_p3)) else "0";
    tmp_254_fu_3234_p2 <= std_logic_vector(signed(ap_const_lv8_9E) - signed(tmp_1036_reg_5660));
    tmp_255_fu_3239_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_300_fu_3229_p2),8));
    tmp_256_fu_3249_p3 <= (is_neg_reg_5644 & p_Repl2_34_trunc_fu_3243_p2);
    tmp_257_fu_2023_p2 <= "1" when (signed(val_V_reg_1233) < signed(dog_pyr_val_V_load_1_3_fu_2016_p3)) else "0";
    tmp_258_fu_2043_p2 <= "1" when (signed(val_V_reg_1233) < signed(dog_pyr_val_V_load_1_4_fu_2036_p3)) else "0";
    tmp_259_fu_2063_p2 <= "1" when (signed(val_V_reg_1233) < signed(dog_pyr_val_V_load_1_5_fu_2056_p3)) else "0";
    tmp_260_fu_2083_p2 <= "1" when (signed(val_V_reg_1233) < signed(dog_pyr_val_V_load_1_6_fu_2076_p3)) else "0";
    tmp_261_fu_2103_p2 <= "1" when (signed(val_V_reg_1233) < signed(dog_pyr_val_V_load_1_7_fu_2096_p3)) else "0";
    tmp_262_fu_2123_p2 <= "1" when (signed(val_V_reg_1233) < signed(dog_pyr_val_V_load_1_8_fu_2116_p3)) else "0";
    tmp_263_fu_2143_p2 <= "1" when (signed(val_V_reg_1233) < signed(dog_pyr_val_V_load_1_9_fu_2136_p3)) else "0";
    tmp_264_fu_2163_p2 <= "1" when (signed(val_V_reg_1233) < signed(dog_pyr_val_V_load_1_10_fu_2156_p3)) else "0";
    tmp_265_fu_2183_p2 <= "1" when (signed(val_V_reg_1233) < signed(dog_pyr_val_V_load_2_1_fu_2176_p3)) else "0";
    tmp_266_fu_2203_p2 <= "1" when (signed(val_V_reg_1233) < signed(dog_pyr_val_V_load_2_2_fu_2196_p3)) else "0";
    tmp_267_fu_2223_p2 <= "1" when (signed(val_V_reg_1233) < signed(dog_pyr_val_V_load_2_3_fu_2216_p3)) else "0";
    tmp_268_fu_2243_p2 <= "1" when (signed(val_V_reg_1233) < signed(dog_pyr_val_V_load_2_4_fu_2236_p3)) else "0";
    tmp_269_fu_2263_p2 <= "1" when (signed(val_V_reg_1233) < signed(dog_pyr_val_V_load_2_5_fu_2256_p3)) else "0";
    tmp_270_fu_2283_p2 <= "1" when (signed(val_V_reg_1233) < signed(dog_pyr_val_V_load_2_6_fu_2276_p3)) else "0";
    tmp_271_fu_2361_p2 <= "1" when (signed(val_V_reg_1233) > signed(dog_pyr_val_V_load_2_7_fu_2354_p3)) else "0";
    tmp_272_fu_2431_p2 <= "1" when (signed(val_V_reg_1233) > signed(dog_pyr_val_V_load_2_8_fu_2424_p3)) else "0";
    tmp_273_fu_2451_p2 <= "1" when (signed(val_V_reg_1233) > signed(dog_pyr_val_V_load_2_9_fu_2444_p3)) else "0";
    tmp_274_fu_2471_p2 <= "1" when (signed(val_V_reg_1233) > signed(dog_pyr_val_V_load_2_10_fu_2464_p3)) else "0";
    tmp_275_fu_2491_p2 <= "1" when (signed(val_V_reg_1233) > signed(dog_pyr_val_V_load_3_1_fu_2484_p3)) else "0";
    tmp_276_fu_2511_p2 <= "1" when (signed(val_V_reg_1233) > signed(dog_pyr_val_V_load_3_2_fu_2504_p3)) else "0";
    tmp_277_fu_2531_p2 <= "1" when (signed(val_V_reg_1233) > signed(dog_pyr_val_V_load_3_3_fu_2524_p3)) else "0";
    tmp_278_fu_2551_p2 <= "1" when (signed(val_V_reg_1233) > signed(dog_pyr_val_V_load_3_4_fu_2544_p3)) else "0";
    tmp_279_fu_2571_p2 <= "1" when (signed(val_V_reg_1233) > signed(dog_pyr_val_V_load_3_5_fu_2564_p3)) else "0";
    tmp_280_fu_2591_p2 <= "1" when (signed(val_V_reg_1233) > signed(dog_pyr_val_V_load_3_6_fu_2584_p3)) else "0";
    tmp_281_fu_2611_p2 <= "1" when (signed(val_V_reg_1233) > signed(dog_pyr_val_V_load_3_7_fu_2604_p3)) else "0";
    tmp_282_fu_2631_p2 <= "1" when (signed(val_V_reg_1233) > signed(dog_pyr_val_V_load_3_8_fu_2624_p3)) else "0";
    tmp_283_fu_2651_p2 <= "1" when (signed(val_V_reg_1233) > signed(dog_pyr_val_V_load_3_9_fu_2644_p3)) else "0";
    tmp_284_fu_2671_p2 <= "1" when (signed(val_V_reg_1233) > signed(dog_pyr_val_V_load_3_10_fu_2664_p3)) else "0";
    tmp_285_fu_2691_p2 <= "1" when (signed(val_V_reg_1233) > signed(dog_pyr_val_V_load_4_1_fu_2684_p3)) else "0";
    tmp_286_fu_2711_p2 <= "1" when (signed(val_V_reg_1233) > signed(dog_pyr_val_V_load_4_2_fu_2704_p3)) else "0";
    tmp_287_fu_2731_p2 <= "1" when (signed(val_V_reg_1233) > signed(dog_pyr_val_V_load_4_3_fu_2724_p3)) else "0";
    tmp_288_fu_2751_p2 <= "1" when (signed(val_V_reg_1233) > signed(dog_pyr_val_V_load_4_4_fu_2744_p3)) else "0";
    tmp_289_fu_2771_p2 <= "1" when (signed(val_V_reg_1233) > signed(dog_pyr_val_V_load_4_5_fu_2764_p3)) else "0";
    tmp_290_fu_2791_p2 <= "1" when (signed(val_V_reg_1233) > signed(dog_pyr_val_V_load_4_6_fu_2784_p3)) else "0";
    tmp_291_fu_2811_p2 <= "1" when (signed(val_V_reg_1233) > signed(dog_pyr_val_V_load_4_7_fu_2804_p3)) else "0";
    tmp_292_fu_2831_p2 <= "1" when (signed(val_V_reg_1233) > signed(dog_pyr_val_V_load_4_8_fu_2824_p3)) else "0";
    tmp_293_fu_2851_p2 <= "1" when (signed(val_V_reg_1233) > signed(dog_pyr_val_V_load_4_9_fu_2844_p3)) else "0";
    tmp_294_fu_2871_p2 <= "1" when (signed(val_V_reg_1233) > signed(dog_pyr_val_V_load_4_10_fu_2864_p3)) else "0";
    tmp_295_fu_2891_p2 <= "1" when (signed(val_V_reg_1233) > signed(dog_pyr_val_V_load_5_1_fu_2884_p3)) else "0";
    tmp_296_fu_2911_p2 <= "1" when (signed(val_V_reg_1233) > signed(dog_pyr_val_V_load_5_2_fu_2904_p3)) else "0";
    tmp_297_fu_3063_p2 <= "1" when (p_shl_fu_3025_p3 = p_shl4_cast1_fu_3045_p1) else "0";
    
    tmp_298_fu_3129_p3_proc : process(p_Result_100_fu_3119_p4)
    begin
        tmp_298_fu_3129_p3 <= std_logic_vector(to_unsigned(64, 64));
        for i in 0 to 64 - 1 loop
            if p_Result_100_fu_3119_p4(i) = '1' then
                tmp_298_fu_3129_p3 <= std_logic_vector(to_unsigned(i,64));
                exit;
            end if;
        end loop;
    end process;

    tmp_299_fu_3171_p2 <= std_logic_vector(unsigned(ap_const_lv32_1F) - unsigned(msb_idx_fu_3145_p2));
    tmp_300_fu_3229_p2 <= "0" when (p_Result_s_reg_5675 = ap_const_lv8_9E) else "1";
    tmp_304_fu_3585_p2 <= "0" when (p_Val2_48_reg_1248 = ap_const_lv6_0) else "1";
    tmp_305_fu_3591_p2 <= std_logic_vector(unsigned(p_Val2_48_reg_1248) + unsigned(ap_const_lv6_3F));
    tmp_306_fu_3615_p2 <= "1" when (unsigned(p_Val2_48_reg_1248) < unsigned(ap_const_lv6_23)) else "0";
    tmp_307_fu_3580_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_p_Val2_48_phi_fu_1252_p4),64));
    tmp_308_fu_3605_p2 <= "1" when (signed(hist_V_q0) < signed(mag_thr_V_reg_5728)) else "0";
    tmp_309_fu_3610_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(left_fu_3597_p3),64));
    tmp_310_fu_3628_p1 <= hist_V_q0;
    tmp_310_fu_3628_p2 <= "1" when (signed(hist_V_load_reg_5748) > signed(tmp_310_fu_3628_p1)) else "0";
    tmp_311_fu_3633_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(right_fu_3621_p3),64));
    tmp_312_fu_3638_p1 <= hist_V_q1;
    tmp_312_fu_3638_p2 <= "1" when (signed(hist_V_load_reg_5748) > signed(tmp_312_fu_3638_p1)) else "0";
    tmp_313_fu_3643_p0 <= hist_V_q1;
        tmp_313_fu_3643_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_313_fu_3643_p0),33));

        tmp_314_fu_3647_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_88_reg_5764),33));

    tmp_315_fu_3660_p0 <= hist_V_q1;
    tmp_315_fu_3660_p2 <= "1" when (tmp_315_fu_3660_p0 = p_Val2_88_reg_5764) else "0";
    
    tmp_316_fu_3709_p3_proc : process(p_Result_106_fu_3701_p3)
    begin
        tmp_316_fu_3709_p3 <= std_logic_vector(to_unsigned(64, 64));
        for i in 0 to 64 - 1 loop
            if p_Result_106_fu_3701_p3(i) = '1' then
                tmp_316_fu_3709_p3 <= std_logic_vector(to_unsigned(i,64));
                exit;
            end if;
        end loop;
    end process;

    tmp_317_fu_3803_p2 <= std_logic_vector(unsigned(ap_const_lv31_1F) - unsigned(msb_idx_2_fu_3779_p3));
    tmp_318_fu_4132_p2 <= "0" when (p_Result_8_reg_5866 = ap_const_lv8_9E) else "1";
    tmp_319_fu_4154_p3 <= (is_neg_1_reg_5788_pp0_iter2_reg & p_Repl2_37_trunc_fu_4148_p2);
    tmp_320_fu_3748_p2 <= "1" when (p_Val2_33_fu_3721_p2 = p_Val2_34_fu_3727_p3) else "0";
    tmp_321_fu_3893_p2 <= std_logic_vector(unsigned(ap_const_lv35_0) - unsigned(p_Val2_35_fu_3886_p3));
    tmp_322_fu_3906_p4 <= p_Val2_92_fu_3899_p3(34 downto 33);
    
    tmp_323_fu_3920_p3_proc : process(p_Result_10_fu_3916_p1)
    begin
        tmp_323_fu_3920_p3 <= std_logic_vector(to_unsigned(64, 64));
        for i in 64 - 1 downto 0 loop
            if p_Result_10_fu_3916_p1(i) = '1' then
                tmp_323_fu_3920_p3 <= std_logic_vector(to_unsigned(64-1-i,64));
                exit;
            end if;
        end loop;
    end process;

    tmp_324_fu_3932_p2 <= "1" when (tmp_322_fu_3906_p4 = ap_const_lv2_0) else "0";
    
    tmp_325_fu_3960_p3_proc : process(p_Result_108_fu_3948_p5)
    begin
        tmp_325_fu_3960_p3 <= std_logic_vector(to_unsigned(64, 64));
        for i in 64 - 1 downto 0 loop
            if p_Result_108_fu_3948_p5(i) = '1' then
                tmp_325_fu_3960_p3 <= std_logic_vector(to_unsigned(64-1-i,64));
                exit;
            end if;
        end loop;
    end process;

    tmp_326_fu_4032_p2 <= std_logic_vector(unsigned(ap_const_lv31_1F) - unsigned(msb_idx_4_fu_4007_p3));
    tmp_327_fu_4197_p2 <= "0" when (p_Result_13_reg_5881 = ap_const_lv8_9E) else "1";
    tmp_328_fu_4219_p3 <= (is_neg_2_reg_5819_pp0_iter3_reg & p_Repl2_41_trunc_fu_4213_p2);
    tmp_329_fu_4274_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_V_fu_4264_p4),12));
    tmp_330_fu_4342_p3 <= (ap_const_lv1_1 & tmp_1088_reg_5902);
    tmp_331_fu_4282_p2 <= "1" when (tmp_1086_fu_4252_p1 = ap_const_lv63_0) else "0";
    tmp_332_cast_fu_3104_p2 <= std_logic_vector(unsigned(ap_const_lv50_0) - unsigned(tmp_1033_reg_5633));
    tmp_332_fu_4294_p2 <= "1" when (signed(F2_fu_4288_p2) > signed(ap_const_lv12_10)) else "0";
    tmp_333_fu_4300_p2 <= std_logic_vector(signed(ap_const_lv12_FF0) + signed(F2_fu_4288_p2));
    tmp_334_fu_4306_p2 <= std_logic_vector(unsigned(ap_const_lv12_10) - unsigned(F2_fu_4288_p2));
    tmp_335_fu_4320_p2 <= "1" when (F2_fu_4288_p2 = ap_const_lv12_10) else "0";
    tmp_336_fu_4373_p2 <= "1" when (unsigned(sh_amt_reg_5919) < unsigned(ap_const_lv12_36)) else "0";
    tmp_337_fu_4378_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_amt_cast_fu_4366_p1),54));
    tmp_338_fu_4382_p2 <= std_logic_vector(shift_right(signed(man_V_4_fu_4359_p3),to_integer(unsigned('0' & tmp_337_fu_4378_p1(31-1 downto 0)))));
    tmp_339_fu_4399_p2 <= std_logic_vector(shift_left(unsigned(tmp_1089_fu_4369_p1),to_integer(unsigned('0' & sh_amt_cast_fu_4366_p1(31-1 downto 0)))));
    tmp_340_fu_4514_p3 <= (p_Val2_48_reg_1248_pp0_iter8_reg & ap_const_lv16_0);
    tmp_341_fu_4550_p2 <= "1" when (signed(p_Val2_38_fu_4526_p2) < signed(ap_const_lv32_240000)) else "0";
    tmp_354_cast_fu_3673_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(tmp_1051_fu_3656_p1));
    tmp_358_cast_fu_3809_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_317_fu_3803_p2),32));
        tmp_365_cast_fu_3734_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_33_fu_3721_p2),34));

        tmp_366_cast_fu_3738_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_34_fu_3727_p3),34));

    tmp_373_cast_fu_4038_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_326_fu_4032_p2),32));
    tmp_397_cast_fu_4522_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_340_fu_4514_p3),32));
    tmp_cast_cast_fu_4140_p3 <= 
        ap_const_lv8_70 when (tmp_318_fu_4132_p2(0) = '1') else 
        ap_const_lv8_6F;
    tmp_fu_3360_p4 <= p_Val2_43_fu_3339_p2(31 downto 23);
    tmp_i_fu_4667_p0 <= keypoints_length_fu_370;
        tmp_i_fu_4667_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_i_fu_4667_p0),64));

    tmp_i_i_fu_3292_p2 <= "1" when (unsigned(loc_V_fu_3282_p4) < unsigned(ap_const_lv8_7E)) else "0";
    tmp_i_i_i_i_cast_fu_3446_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loc_V_9_fu_3418_p4),9));
    tmp_s_fu_1472_p2 <= std_logic_vector(unsigned(dog_pyr_0_rows_read) + unsigned(ap_const_lv32_FFFFFFFB));
    vector_length_write_s_fu_4661_p1 <= keypoints_length_fu_370;
    vector_length_write_s_fu_4661_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(vector_length_write_s_fu_4661_p1));
    x_assign_fu_3271_p3 <= 
        ap_const_lv32_0 when (tmp_297_reg_5639(0) = '1') else 
        f_fu_3267_p1;
    x_assign_s_fu_3399_p3 <= 
        x_assign_reg_5680 when (sel_tmp289_fu_3394_p2(0) = '1') else 
        sel_tmp287_fu_3385_p1;
    xs_sig_V_fu_3354_p2 <= (tmp_1688_i_i_fu_3348_p2 and loc_V_8_fu_3344_p1);
end behav;
