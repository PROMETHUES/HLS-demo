-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity solve_ap_fixed_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    A_0_0_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
    A_0_1_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
    A_0_2_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
    A_1_1_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
    A_1_2_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
    A_2_2_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
    b_0_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
    b_1_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
    b_2_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
    x_0_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
    x_1_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
    x_2_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of solve_ap_fixed_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (19 downto 0) := "00000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (19 downto 0) := "00000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (19 downto 0) := "00000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (19 downto 0) := "00000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (19 downto 0) := "00000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (19 downto 0) := "00000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (19 downto 0) := "00001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (19 downto 0) := "00010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (19 downto 0) := "00100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (19 downto 0) := "01000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (19 downto 0) := "10000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3F800000 : STD_LOGIC_VECTOR (31 downto 0) := "00111111100000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_9E : STD_LOGIC_VECTOR (7 downto 0) := "10011110";
    constant ap_const_lv8_8E : STD_LOGIC_VECTOR (7 downto 0) := "10001110";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_433 : STD_LOGIC_VECTOR (11 downto 0) := "010000110011";
    constant ap_const_lv12_10 : STD_LOGIC_VECTOR (11 downto 0) := "000000010000";
    constant ap_const_lv12_FF0 : STD_LOGIC_VECTOR (11 downto 0) := "111111110000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv12_36 : STD_LOGIC_VECTOR (11 downto 0) := "000000110110";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_b_2_V_13_reg_2298 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal x_V5_load_reg_2304 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_V6_load_reg_2311 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_fu_980_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_reg_2321 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_fu_986_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_reg_2326 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_s_fu_974_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_fu_998_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_59_reg_2331 : STD_LOGIC_VECTOR (3 downto 0);
    signal is_neg_fu_1034_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal is_neg_reg_2339 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_60_fu_1028_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp32_V_1_fu_1074_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_1_reg_2344 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_101_fu_1080_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_101_reg_2349 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp32_V_fu_1084_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_reg_2354 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal p_Result_s_190_reg_2359 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_1_fu_1125_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_1_reg_2364 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal grp_fu_903_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal v_assign_reg_2374 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal isneg_fu_1148_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal isneg_reg_2379 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal man_V_2_fu_1192_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_2_reg_2384 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_68_fu_1200_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_68_reg_2389 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_amt_fu_1230_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_reg_2394 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_72_fu_1238_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_72_reg_2400 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_105_fu_1244_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_105_reg_2405 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp63_fu_1276_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp63_reg_2411 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp68_fu_1294_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp68_reg_2417 : STD_LOGIC_VECTOR (0 downto 0);
    signal OP2_V_cast_fu_1410_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal OP2_V_cast_reg_2423 : STD_LOGIC_VECTOR (47 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal p_b_2_V_1_fu_1450_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_b_2_V_1_reg_2428 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_b_2_V_6_fu_1466_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_b_2_V_6_reg_2433 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_b_2_V_8_fu_1474_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_b_2_V_8_reg_2438 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_b_2_V_10_fu_1489_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_b_2_V_10_reg_2443 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_b_2_V_12_fu_1503_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_b_2_V_12_reg_2448 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_b_2_V_14_fu_1510_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_b_2_V_14_reg_2453 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_fu_1523_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal k_1_fu_1620_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal k_1_reg_2469 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal p_b_2_V_2_load_1_reg_2474 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond5_fu_1614_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_b_1_V_load_1_reg_2481 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_b_2_V_load_1_reg_2488 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_1673_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_1_reg_2495 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_225_cast_fu_1681_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_225_cast_reg_2501 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_4309_cast_fu_1703_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_4309_cast_reg_2506 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_A_2_2_V_7_fu_1996_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal p_A_2_1_V_7_fu_2012_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_A_2_0_V_8_fu_2028_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_A_2_2_V_8_fu_2044_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_A_2_1_V_8_fu_2060_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_A_2_0_V_9_fu_2076_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_A_2_2_V_9_fu_2084_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_A_2_1_V_9_fu_2092_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_A_2_0_V_10_fu_2100_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_A_2_2_V_reg_234 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_A_2_2_V_3_reg_743 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal p_A_2_1_V_reg_244 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_A_2_1_V_3_reg_755 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_A_2_0_V_reg_254 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_A_2_0_V_3_reg_767 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_A_1_2_V_reg_264 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_A_1_2_V_3_reg_779 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_A_1_1_V_reg_274 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_A_1_1_V_3_reg_791 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_A_1_0_V_reg_284 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_A_1_0_V_3_reg_803 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_A_0_2_V_reg_294 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_A_2_2_V_5_reg_815 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_A_0_1_V_reg_304 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_A_2_1_V_5_reg_827 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_A_0_0_V_reg_314 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_A_2_0_V_6_reg_839 : STD_LOGIC_VECTOR (31 downto 0);
    signal i5_reg_324 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_A_2_2_V_1_reg_336 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_p_A_2_2_V_2_phi_fu_450_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond4_fu_1517_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_A_2_1_V_1_reg_347 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_p_A_2_1_V_2_phi_fu_483_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_A_2_0_V_1_reg_358 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_p_A_2_0_V_2_phi_fu_516_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_A_1_2_V_1_reg_369 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_p_A_1_2_V_2_phi_fu_549_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_A_1_1_V_1_reg_380 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_p_A_1_1_V_2_phi_fu_582_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_A_1_0_V_1_reg_391 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_p_A_1_0_V_2_phi_fu_615_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_A_0_2_V_1_reg_402 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_p_A_0_2_V_2_phi_fu_648_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_A_0_1_V_1_reg_413 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_p_A_0_1_V_2_phi_fu_681_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_A_0_0_V_1_reg_424 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_p_A_0_0_V_2_phi_fu_714_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_j6_phi_fu_439_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal j6_reg_435 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal k_reg_851 : STD_LOGIC_VECTOR (1 downto 0);
    signal x_1_V_write_assign_reg_863 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_2_V_write_assign_reg_872 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_0_V_write_assign_reg_881 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_s_reg_890 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_b_2_V_2_fu_138 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_b_2_V_20_fu_1981_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_b_1_V_fu_142 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_b_2_V_19_fu_1974_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_b_2_V_fu_146 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_b_2_V_18_fu_1960_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_b_2_V_3_fu_150 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_b_2_V_23_fu_2140_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_V5_fu_154 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_b_2_V_22_fu_2132_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_V6_fu_158 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_b_2_V_21_fu_2116_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_903_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal p_shl_fu_990_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Val2_s_fu_1004_p11 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_61_fu_1042_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_12_fu_1048_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_s_fu_1056_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal num_zeros_fu_1066_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_908_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_62_fu_1098_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_63_fu_1103_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_64_fu_1108_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Repl2_32_trunc_fu_1112_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_65_fu_1118_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal d_assign_fu_911_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ireg_V_fu_1140_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_tmp_V_fu_1156_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_104_fu_1170_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_67_fu_1174_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal p_Result_2_fu_1182_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_1_fu_1186_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_102_fu_1144_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_66_fu_1166_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_fu_1206_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_69_fu_1212_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_70_fu_1218_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_71_fu_1224_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_106_fu_1248_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal sel_tmp87_demorgan_fu_1264_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp62_fu_1270_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp102_demorgan_fu_1282_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_fu_1258_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp67_fu_1288_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_amt_cast_fu_1300_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_74_fu_1308_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_75_fu_1312_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal sel_tmp60_fu_1333_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_73_fu_1303_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp64_fu_1343_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_76_fu_1328_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_107_fu_1317_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp66_fu_1354_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp65_fu_1349_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal storemerge_fu_1321_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp61_fu_1338_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_fu_1366_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel_fu_1359_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel1_fu_1371_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_cond1_fu_1378_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_fu_1392_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel2_fu_1384_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_932_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal denom_V_fu_1398_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_3_fu_1414_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_3_fu_1414_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_3_fu_1414_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal sel_tmp69_fu_1430_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_b_2_V_24_fu_1420_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp70_fu_1444_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_b_2_V_4_fu_1436_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_b_2_V_5_fu_1458_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_b_2_V_9_fu_1482_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_b_2_V_11_fu_1496_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_79_fu_1529_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_81_fu_1538_p10 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_81_fu_1538_p11 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_4_fu_1566_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_4_fu_1566_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_4_fu_1566_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_shl1_fu_1630_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_84_fu_1626_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_85_fu_1638_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal factor_V_fu_1649_p10 : STD_LOGIC_VECTOR (3 downto 0);
    signal factor_V_fu_1649_p11 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_225_cast_fu_1681_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_225_cast_fu_1681_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_89_fu_1687_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4309_cast_fu_1703_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4309_cast_fu_1703_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_5_fu_1715_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_88_fu_1724_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_6_fu_1732_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal sel_tmp8_fu_1753_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_b_2_V_25_fu_1737_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_90_fu_1774_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_91_fu_1786_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_s_191_fu_1794_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_A_2_0_V_12_fu_1799_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_92_fu_1817_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_93_fu_1833_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4309_1_cast_fu_1853_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4309_1_cast_fu_1853_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_429_1_fu_1845_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_4309_1_cast_fu_1853_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_230_1_fu_1858_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_A_2_1_V_11_fu_1864_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_94_fu_1882_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_95_fu_1898_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4309_2_cast_fu_1918_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4309_2_cast_fu_1918_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_429_2_fu_1910_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_4309_2_cast_fu_1918_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_230_2_fu_1923_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_A_2_2_V_11_fu_1929_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_83_fu_1709_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_fu_1747_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_fu_1947_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel4_fu_1953_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel6_fu_1967_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_b_2_V_16_fu_1759_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel8_fu_1988_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel3_fu_2004_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel5_fu_2020_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel7_fu_2036_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel9_fu_2052_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel10_fu_2068_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_A_2_2_V_6_fu_1939_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_A_2_1_V_6_fu_1874_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_A_2_0_V_7_fu_1809_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel11_fu_2108_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel12_fu_2124_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_b_2_V_17_fu_1766_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal ap_return_0_preg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal ap_return_1_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_return_2_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_return_3_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (19 downto 0);

    component SIFT2_Core_fdiv_3g8j IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component SIFT2_Core_uitofpXh4 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component SIFT2_Core_fpext_hbi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component SIFT2_Core_mux_320iy IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component SIFT2_Core_mux_941iI IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (31 downto 0);
        din9 : IN STD_LOGIC_VECTOR (3 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    SIFT2_Core_fdiv_3g8j_U830 : component SIFT2_Core_fdiv_3g8j
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_const_lv32_3F800000,
        din1 => grp_fu_903_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_903_p2);

    SIFT2_Core_uitofpXh4_U831 : component SIFT2_Core_uitofpXh4
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp32_V_1_reg_2344,
        ce => ap_const_logic_1,
        dout => grp_fu_908_p1);

    SIFT2_Core_fpext_hbi_U832 : component SIFT2_Core_fpext_hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => v_assign_reg_2374,
        dout => d_assign_fu_911_p1);

    SIFT2_Core_mux_320iy_U833 : component SIFT2_Core_mux_320iy
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => p_b_2_V_2_fu_138,
        din1 => p_b_1_V_fu_142,
        din2 => p_b_2_V_fu_146,
        din3 => i5_reg_324,
        dout => grp_fu_932_p5);

    SIFT2_Core_mux_941iI_U834 : component SIFT2_Core_mux_941iI
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => p_A_0_0_V_reg_314,
        din1 => p_A_0_1_V_reg_304,
        din2 => p_A_0_2_V_reg_294,
        din3 => p_A_1_0_V_reg_284,
        din4 => p_A_1_1_V_reg_274,
        din5 => p_A_1_2_V_reg_264,
        din6 => p_A_2_0_V_reg_254,
        din7 => p_A_2_1_V_reg_244,
        din8 => p_A_2_2_V_reg_234,
        din9 => p_shl_fu_990_p3,
        dout => p_Val2_s_fu_1004_p11);

    SIFT2_Core_mux_941iI_U835 : component SIFT2_Core_mux_941iI
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => p_A_0_0_V_1_reg_424,
        din1 => p_A_0_1_V_1_reg_413,
        din2 => p_A_0_2_V_1_reg_402,
        din3 => p_A_1_0_V_1_reg_391,
        din4 => p_A_1_1_V_1_reg_380,
        din5 => p_A_1_2_V_1_reg_369,
        din6 => p_A_2_0_V_1_reg_358,
        din7 => p_A_2_1_V_1_reg_347,
        din8 => p_A_2_2_V_1_reg_336,
        din9 => tmp_81_fu_1538_p10,
        dout => tmp_81_fu_1538_p11);

    SIFT2_Core_mux_941iI_U836 : component SIFT2_Core_mux_941iI
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => p_A_2_0_V_6_reg_839,
        din1 => p_A_2_1_V_5_reg_827,
        din2 => p_A_2_2_V_5_reg_815,
        din3 => p_A_1_0_V_3_reg_803,
        din4 => p_A_1_1_V_3_reg_791,
        din5 => p_A_1_2_V_3_reg_779,
        din6 => p_A_2_0_V_3_reg_767,
        din7 => p_A_2_1_V_3_reg_755,
        din8 => p_A_2_2_V_3_reg_743,
        din9 => factor_V_fu_1649_p10,
        dout => factor_V_fu_1649_p11);

    SIFT2_Core_mux_320iy_U837 : component SIFT2_Core_mux_320iy
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => p_A_2_0_V_6_reg_839,
        din1 => p_A_1_0_V_3_reg_803,
        din2 => p_A_2_0_V_3_reg_767,
        din3 => i5_reg_324,
        dout => tmp_89_fu_1687_p5);

    SIFT2_Core_mux_320iy_U838 : component SIFT2_Core_mux_320iy
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => p_b_2_V_2_load_1_reg_2474,
        din1 => p_b_1_V_load_1_reg_2481,
        din2 => p_b_2_V_load_1_reg_2488,
        din3 => k_reg_851,
        dout => p_Val2_5_fu_1715_p5);

    SIFT2_Core_mux_320iy_U839 : component SIFT2_Core_mux_320iy
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => p_A_2_0_V_6_reg_839,
        din1 => p_A_1_0_V_3_reg_803,
        din2 => p_A_2_0_V_3_reg_767,
        din3 => k_reg_851,
        dout => tmp_90_fu_1774_p5);

    SIFT2_Core_mux_320iy_U840 : component SIFT2_Core_mux_320iy
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => p_A_2_1_V_5_reg_827,
        din1 => p_A_1_1_V_3_reg_791,
        din2 => p_A_2_1_V_3_reg_755,
        din3 => i5_reg_324,
        dout => tmp_92_fu_1817_p5);

    SIFT2_Core_mux_320iy_U841 : component SIFT2_Core_mux_320iy
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => p_A_2_1_V_5_reg_827,
        din1 => p_A_1_1_V_3_reg_791,
        din2 => p_A_2_1_V_3_reg_755,
        din3 => k_reg_851,
        dout => tmp_93_fu_1833_p5);

    SIFT2_Core_mux_320iy_U842 : component SIFT2_Core_mux_320iy
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => p_A_2_2_V_5_reg_815,
        din1 => p_A_1_2_V_3_reg_779,
        din2 => p_A_2_2_V_3_reg_743,
        din3 => i5_reg_324,
        dout => tmp_94_fu_1882_p5);

    SIFT2_Core_mux_320iy_U843 : component SIFT2_Core_mux_320iy
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => p_A_2_2_V_5_reg_815,
        din1 => p_A_1_2_V_3_reg_779,
        din2 => p_A_2_2_V_3_reg_743,
        din3 => k_reg_851,
        dout => tmp_95_fu_1898_p5);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_return_0_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_0_preg <= ap_const_lv1_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                    ap_return_0_preg <= p_s_reg_890;
                end if; 
            end if;
        end if;
    end process;


    ap_return_1_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_1_preg <= ap_const_lv32_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                    ap_return_1_preg <= x_0_V_write_assign_reg_881;
                end if; 
            end if;
        end if;
    end process;


    ap_return_2_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_2_preg <= ap_const_lv32_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                    ap_return_2_preg <= x_1_V_write_assign_reg_863;
                end if; 
            end if;
        end if;
    end process;


    ap_return_3_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_3_preg <= ap_const_lv32_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                    ap_return_3_preg <= x_2_V_write_assign_reg_872;
                end if; 
            end if;
        end if;
    end process;


    i5_reg_324_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
                i5_reg_324 <= i_reg_2321;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i5_reg_324 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    j6_reg_435_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond4_fu_1517_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                j6_reg_435 <= j_fu_1523_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                j6_reg_435 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    k_reg_851_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                k_reg_851 <= ap_const_lv2_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                k_reg_851 <= k_1_reg_2469;
            end if; 
        end if;
    end process;

    p_A_0_0_V_1_reg_424_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond4_fu_1517_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                p_A_0_0_V_1_reg_424 <= ap_phi_mux_p_A_0_0_V_2_phi_fu_714_p18;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                p_A_0_0_V_1_reg_424 <= p_A_0_0_V_reg_314;
            end if; 
        end if;
    end process;

    p_A_0_0_V_reg_314_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
                p_A_0_0_V_reg_314 <= p_A_2_0_V_6_reg_839;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_A_0_0_V_reg_314 <= A_0_0_V_read;
            end if; 
        end if;
    end process;

    p_A_0_1_V_1_reg_413_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond4_fu_1517_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                p_A_0_1_V_1_reg_413 <= ap_phi_mux_p_A_0_1_V_2_phi_fu_681_p18;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                p_A_0_1_V_1_reg_413 <= p_A_0_1_V_reg_304;
            end if; 
        end if;
    end process;

    p_A_0_1_V_reg_304_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
                p_A_0_1_V_reg_304 <= p_A_2_1_V_5_reg_827;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_A_0_1_V_reg_304 <= A_0_1_V_read;
            end if; 
        end if;
    end process;

    p_A_0_2_V_1_reg_402_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond4_fu_1517_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                p_A_0_2_V_1_reg_402 <= ap_phi_mux_p_A_0_2_V_2_phi_fu_648_p18;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                p_A_0_2_V_1_reg_402 <= p_A_0_2_V_reg_294;
            end if; 
        end if;
    end process;

    p_A_0_2_V_reg_294_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
                p_A_0_2_V_reg_294 <= p_A_2_2_V_5_reg_815;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_A_0_2_V_reg_294 <= A_0_2_V_read;
            end if; 
        end if;
    end process;

    p_A_1_0_V_1_reg_391_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond4_fu_1517_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                p_A_1_0_V_1_reg_391 <= ap_phi_mux_p_A_1_0_V_2_phi_fu_615_p18;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                p_A_1_0_V_1_reg_391 <= p_A_1_0_V_reg_284;
            end if; 
        end if;
    end process;

    p_A_1_0_V_3_reg_803_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                p_A_1_0_V_3_reg_803 <= p_A_1_0_V_1_reg_391;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                p_A_1_0_V_3_reg_803 <= p_A_2_0_V_9_fu_2076_p3;
            end if; 
        end if;
    end process;

    p_A_1_0_V_reg_284_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
                p_A_1_0_V_reg_284 <= p_A_1_0_V_3_reg_803;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_A_1_0_V_reg_284 <= A_0_1_V_read;
            end if; 
        end if;
    end process;

    p_A_1_1_V_1_reg_380_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond4_fu_1517_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                p_A_1_1_V_1_reg_380 <= ap_phi_mux_p_A_1_1_V_2_phi_fu_582_p18;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                p_A_1_1_V_1_reg_380 <= p_A_1_1_V_reg_274;
            end if; 
        end if;
    end process;

    p_A_1_1_V_3_reg_791_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                p_A_1_1_V_3_reg_791 <= p_A_1_1_V_1_reg_380;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                p_A_1_1_V_3_reg_791 <= p_A_2_1_V_8_fu_2060_p3;
            end if; 
        end if;
    end process;

    p_A_1_1_V_reg_274_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
                p_A_1_1_V_reg_274 <= p_A_1_1_V_3_reg_791;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_A_1_1_V_reg_274 <= A_1_1_V_read;
            end if; 
        end if;
    end process;

    p_A_1_2_V_1_reg_369_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond4_fu_1517_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                p_A_1_2_V_1_reg_369 <= ap_phi_mux_p_A_1_2_V_2_phi_fu_549_p18;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                p_A_1_2_V_1_reg_369 <= p_A_1_2_V_reg_264;
            end if; 
        end if;
    end process;

    p_A_1_2_V_3_reg_779_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                p_A_1_2_V_3_reg_779 <= p_A_1_2_V_1_reg_369;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                p_A_1_2_V_3_reg_779 <= p_A_2_2_V_8_fu_2044_p3;
            end if; 
        end if;
    end process;

    p_A_1_2_V_reg_264_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
                p_A_1_2_V_reg_264 <= p_A_1_2_V_3_reg_779;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_A_1_2_V_reg_264 <= A_1_2_V_read;
            end if; 
        end if;
    end process;

    p_A_2_0_V_1_reg_358_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond4_fu_1517_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                p_A_2_0_V_1_reg_358 <= ap_phi_mux_p_A_2_0_V_2_phi_fu_516_p18;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                p_A_2_0_V_1_reg_358 <= p_A_2_0_V_reg_254;
            end if; 
        end if;
    end process;

    p_A_2_0_V_3_reg_767_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                p_A_2_0_V_3_reg_767 <= p_A_2_0_V_1_reg_358;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                p_A_2_0_V_3_reg_767 <= p_A_2_0_V_8_fu_2028_p3;
            end if; 
        end if;
    end process;

    p_A_2_0_V_6_reg_839_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                p_A_2_0_V_6_reg_839 <= p_A_0_0_V_1_reg_424;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                p_A_2_0_V_6_reg_839 <= p_A_2_0_V_10_fu_2100_p3;
            end if; 
        end if;
    end process;

    p_A_2_0_V_reg_254_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
                p_A_2_0_V_reg_254 <= p_A_2_0_V_3_reg_767;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_A_2_0_V_reg_254 <= A_0_2_V_read;
            end if; 
        end if;
    end process;

    p_A_2_1_V_1_reg_347_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond4_fu_1517_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                p_A_2_1_V_1_reg_347 <= ap_phi_mux_p_A_2_1_V_2_phi_fu_483_p18;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                p_A_2_1_V_1_reg_347 <= p_A_2_1_V_reg_244;
            end if; 
        end if;
    end process;

    p_A_2_1_V_3_reg_755_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                p_A_2_1_V_3_reg_755 <= p_A_2_1_V_1_reg_347;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                p_A_2_1_V_3_reg_755 <= p_A_2_1_V_7_fu_2012_p3;
            end if; 
        end if;
    end process;

    p_A_2_1_V_5_reg_827_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                p_A_2_1_V_5_reg_827 <= p_A_0_1_V_1_reg_413;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                p_A_2_1_V_5_reg_827 <= p_A_2_1_V_9_fu_2092_p3;
            end if; 
        end if;
    end process;

    p_A_2_1_V_reg_244_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
                p_A_2_1_V_reg_244 <= p_A_2_1_V_3_reg_755;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_A_2_1_V_reg_244 <= A_1_2_V_read;
            end if; 
        end if;
    end process;

    p_A_2_2_V_1_reg_336_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond4_fu_1517_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                p_A_2_2_V_1_reg_336 <= ap_phi_mux_p_A_2_2_V_2_phi_fu_450_p18;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                p_A_2_2_V_1_reg_336 <= p_A_2_2_V_reg_234;
            end if; 
        end if;
    end process;

    p_A_2_2_V_3_reg_743_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                p_A_2_2_V_3_reg_743 <= p_A_2_2_V_1_reg_336;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                p_A_2_2_V_3_reg_743 <= p_A_2_2_V_7_fu_1996_p3;
            end if; 
        end if;
    end process;

    p_A_2_2_V_5_reg_815_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                p_A_2_2_V_5_reg_815 <= p_A_0_2_V_1_reg_402;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                p_A_2_2_V_5_reg_815 <= p_A_2_2_V_9_fu_2084_p3;
            end if; 
        end if;
    end process;

    p_A_2_2_V_reg_234_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
                p_A_2_2_V_reg_234 <= p_A_2_2_V_3_reg_743;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_A_2_2_V_reg_234 <= A_2_2_V_read;
            end if; 
        end if;
    end process;

    p_b_1_V_fu_142_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                p_b_1_V_fu_142 <= p_b_2_V_19_fu_1974_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                p_b_1_V_fu_142 <= p_b_2_V_6_reg_2433;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_b_1_V_fu_142 <= b_1_V_read;
            end if; 
        end if;
    end process;

    p_b_2_V_2_fu_138_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                p_b_2_V_2_fu_138 <= p_b_2_V_20_fu_1981_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                p_b_2_V_2_fu_138 <= p_b_2_V_8_reg_2438;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_b_2_V_2_fu_138 <= b_0_V_read;
            end if; 
        end if;
    end process;

    p_b_2_V_3_fu_150_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                p_b_2_V_3_fu_150 <= p_b_2_V_23_fu_2140_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                p_b_2_V_3_fu_150 <= p_b_2_V_14_reg_2453;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_b_2_V_3_fu_150 <= b_0_V_read;
            end if; 
        end if;
    end process;

    p_b_2_V_fu_146_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                p_b_2_V_fu_146 <= p_b_2_V_18_fu_1960_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                p_b_2_V_fu_146 <= p_b_2_V_1_reg_2428;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_b_2_V_fu_146 <= b_2_V_read;
            end if; 
        end if;
    end process;

    p_s_reg_890_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                if ((tmp_s_fu_974_p2 = ap_const_lv1_1)) then 
                    p_s_reg_890 <= ap_const_lv1_1;
                elsif (((tmp_s_fu_974_p2 = ap_const_lv1_0) and (tmp_60_fu_1028_p2 = ap_const_lv1_1))) then 
                    p_s_reg_890 <= ap_const_lv1_0;
                end if;
            end if; 
        end if;
    end process;

    x_0_V_write_assign_reg_881_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                if ((tmp_s_fu_974_p2 = ap_const_lv1_1)) then 
                    x_0_V_write_assign_reg_881 <= p_b_2_V_3_fu_150;
                elsif (((tmp_s_fu_974_p2 = ap_const_lv1_0) and (tmp_60_fu_1028_p2 = ap_const_lv1_1))) then 
                    x_0_V_write_assign_reg_881 <= x_0_V_read;
                end if;
            end if; 
        end if;
    end process;

    x_1_V_write_assign_reg_863_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                if ((tmp_s_fu_974_p2 = ap_const_lv1_1)) then 
                    x_1_V_write_assign_reg_863 <= x_V5_fu_154;
                elsif (((tmp_s_fu_974_p2 = ap_const_lv1_0) and (tmp_60_fu_1028_p2 = ap_const_lv1_1))) then 
                    x_1_V_write_assign_reg_863 <= x_1_V_read;
                end if;
            end if; 
        end if;
    end process;

    x_2_V_write_assign_reg_872_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                if ((tmp_s_fu_974_p2 = ap_const_lv1_1)) then 
                    x_2_V_write_assign_reg_872 <= x_V6_fu_158;
                elsif (((tmp_s_fu_974_p2 = ap_const_lv1_0) and (tmp_60_fu_1028_p2 = ap_const_lv1_1))) then 
                    x_2_V_write_assign_reg_872 <= x_2_V_read;
                end if;
            end if; 
        end if;
    end process;

    x_V5_fu_154_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                x_V5_fu_154 <= p_b_2_V_22_fu_2132_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                x_V5_fu_154 <= p_b_2_V_12_reg_2448;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                x_V5_fu_154 <= b_1_V_read;
            end if; 
        end if;
    end process;

    x_V6_fu_158_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                x_V6_fu_158 <= p_b_2_V_21_fu_2116_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                x_V6_fu_158 <= p_b_2_V_10_reg_2443;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                x_V6_fu_158 <= b_2_V_read;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                OP2_V_cast_reg_2423 <= OP2_V_cast_fu_1410_p1;
                p_b_2_V_10_reg_2443 <= p_b_2_V_10_fu_1489_p3;
                p_b_2_V_12_reg_2448 <= p_b_2_V_12_fu_1503_p3;
                p_b_2_V_14_reg_2453 <= p_b_2_V_14_fu_1510_p3;
                p_b_2_V_1_reg_2428 <= p_b_2_V_1_fu_1450_p3;
                p_b_2_V_6_reg_2433 <= p_b_2_V_6_fu_1466_p3;
                p_b_2_V_8_reg_2438 <= p_b_2_V_8_fu_1474_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_reg_2321 <= i_fu_980_p2;
                p_b_2_V_13_reg_2298 <= p_b_2_V_3_fu_150;
                x_V5_load_reg_2304 <= x_V5_fu_154;
                x_V6_load_reg_2311 <= x_V6_fu_158;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_60_fu_1028_p2 = ap_const_lv1_0) and (tmp_s_fu_974_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                is_neg_reg_2339 <= p_Val2_s_fu_1004_p11(31 downto 31);
                tmp32_V_1_reg_2344 <= tmp32_V_1_fu_1074_p2;
                tmp_101_reg_2349 <= tmp_101_fu_1080_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                isneg_reg_2379 <= ireg_V_fu_1140_p1(63 downto 63);
                man_V_2_reg_2384 <= man_V_2_fu_1192_p3;
                sel_tmp63_reg_2411 <= sel_tmp63_fu_1276_p2;
                sel_tmp68_reg_2417 <= sel_tmp68_fu_1294_p2;
                sh_amt_reg_2394 <= sh_amt_fu_1230_p3;
                tmp_105_reg_2405 <= tmp_105_fu_1244_p1;
                tmp_68_reg_2389 <= tmp_68_fu_1200_p2;
                tmp_72_reg_2400 <= tmp_72_fu_1238_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then
                k_1_reg_2469 <= k_1_fu_1620_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                p_Result_1_reg_2364 <= p_Result_1_fu_1125_p5;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                p_Result_s_190_reg_2359 <= tmp32_V_fu_1084_p1(30 downto 23);
                tmp32_V_reg_2354 <= tmp32_V_fu_1084_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond5_fu_1614_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                p_b_1_V_load_1_reg_2481 <= p_b_1_V_fu_142;
                p_b_2_V_2_load_1_reg_2474 <= p_b_2_V_2_fu_138;
                p_b_2_V_load_1_reg_2488 <= p_b_2_V_fu_146;
                tmp_1_reg_2495 <= tmp_1_fu_1673_p1;
                tmp_225_cast_reg_2501 <= tmp_225_cast_fu_1681_p2;
                tmp_4309_cast_reg_2506 <= tmp_4309_cast_fu_1703_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_s_fu_974_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                tmp_59_reg_2331 <= tmp_59_fu_998_p2;
                    tmp_reg_2326(1 downto 0) <= tmp_fu_986_p1(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                v_assign_reg_2374 <= grp_fu_903_p2;
            end if;
        end if;
    end process;
    tmp_reg_2326(3 downto 2) <= "00";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, tmp_s_fu_974_p2, tmp_60_fu_1028_p2, ap_CS_fsm_state15, ap_CS_fsm_state17, exitcond5_fu_1614_p2, exitcond4_fu_1517_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((tmp_60_fu_1028_p2 = ap_const_lv1_0) and (tmp_s_fu_974_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state20;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                if (((exitcond4_fu_1517_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                if (((exitcond5_fu_1614_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    F2_fu_1206_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(tmp_66_fu_1166_p1));
        OP2_V_cast_fu_1410_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(denom_V_fu_1398_p3),48));

    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state20)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state20) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_mux_j6_phi_fu_439_p4 <= j6_reg_435;

    ap_phi_mux_p_A_0_0_V_2_phi_fu_714_p18_assign_proc : process(ap_CS_fsm_state15, i5_reg_324, exitcond4_fu_1517_p2, p_A_0_0_V_1_reg_424, ap_phi_mux_j6_phi_fu_439_p4, p_Val2_4_fu_1566_p2)
    begin
        if (((exitcond4_fu_1517_p2 = ap_const_lv1_0) and (ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_0) and (i5_reg_324 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            ap_phi_mux_p_A_0_0_V_2_phi_fu_714_p18 <= p_Val2_4_fu_1566_p2(47 downto 16);
        elsif (((not((i5_reg_324 = ap_const_lv2_1)) and not((i5_reg_324 = ap_const_lv2_0)) and (exitcond4_fu_1517_p2 = ap_const_lv1_0) and (ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((exitcond4_fu_1517_p2 = ap_const_lv1_0) and (ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_1) and (i5_reg_324 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state15)) or (not((i5_reg_324 = ap_const_lv2_1)) and not((ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_1)) and not((ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_0)) and not((i5_reg_324 = ap_const_lv2_0)) and (exitcond4_fu_1517_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15)) or (not((ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_1)) and not((ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_0)) and (exitcond4_fu_1517_p2 = ap_const_lv1_0) and (i5_reg_324 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state15)) or (not((i5_reg_324 = ap_const_lv2_1)) and not((i5_reg_324 = ap_const_lv2_0)) and (exitcond4_fu_1517_p2 = ap_const_lv1_0) and (ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((exitcond4_fu_1517_p2 = ap_const_lv1_0) and (i5_reg_324 = ap_const_lv2_1) and (ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((exitcond4_fu_1517_p2 = ap_const_lv1_0) and (ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_1) and (i5_reg_324 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state15)) or (not((ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_1)) and not((ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_0)) and (exitcond4_fu_1517_p2 = ap_const_lv1_0) and (i5_reg_324 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
            ap_phi_mux_p_A_0_0_V_2_phi_fu_714_p18 <= p_A_0_0_V_1_reg_424;
        else 
            ap_phi_mux_p_A_0_0_V_2_phi_fu_714_p18 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    ap_phi_mux_p_A_0_1_V_2_phi_fu_681_p18_assign_proc : process(ap_CS_fsm_state15, i5_reg_324, exitcond4_fu_1517_p2, p_A_0_1_V_1_reg_413, ap_phi_mux_j6_phi_fu_439_p4, p_Val2_4_fu_1566_p2)
    begin
        if (((exitcond4_fu_1517_p2 = ap_const_lv1_0) and (ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_1) and (i5_reg_324 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            ap_phi_mux_p_A_0_1_V_2_phi_fu_681_p18 <= p_Val2_4_fu_1566_p2(47 downto 16);
        elsif (((not((i5_reg_324 = ap_const_lv2_1)) and not((i5_reg_324 = ap_const_lv2_0)) and (exitcond4_fu_1517_p2 = ap_const_lv1_0) and (ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((exitcond4_fu_1517_p2 = ap_const_lv1_0) and (ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_1) and (i5_reg_324 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state15)) or (not((i5_reg_324 = ap_const_lv2_1)) and not((ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_1)) and not((ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_0)) and not((i5_reg_324 = ap_const_lv2_0)) and (exitcond4_fu_1517_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15)) or (not((ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_1)) and not((ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_0)) and (exitcond4_fu_1517_p2 = ap_const_lv1_0) and (i5_reg_324 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state15)) or (not((i5_reg_324 = ap_const_lv2_1)) and not((i5_reg_324 = ap_const_lv2_0)) and (exitcond4_fu_1517_p2 = ap_const_lv1_0) and (ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((exitcond4_fu_1517_p2 = ap_const_lv1_0) and (i5_reg_324 = ap_const_lv2_1) and (ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state15)) or (not((ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_1)) and not((ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_0)) and (exitcond4_fu_1517_p2 = ap_const_lv1_0) and (i5_reg_324 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((exitcond4_fu_1517_p2 = ap_const_lv1_0) and (ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_0) and (i5_reg_324 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
            ap_phi_mux_p_A_0_1_V_2_phi_fu_681_p18 <= p_A_0_1_V_1_reg_413;
        else 
            ap_phi_mux_p_A_0_1_V_2_phi_fu_681_p18 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    ap_phi_mux_p_A_0_2_V_2_phi_fu_648_p18_assign_proc : process(ap_CS_fsm_state15, i5_reg_324, exitcond4_fu_1517_p2, p_A_0_2_V_1_reg_402, ap_phi_mux_j6_phi_fu_439_p4, p_Val2_4_fu_1566_p2)
    begin
        if (((not((i5_reg_324 = ap_const_lv2_1)) and not((i5_reg_324 = ap_const_lv2_0)) and (exitcond4_fu_1517_p2 = ap_const_lv1_0) and (ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((exitcond4_fu_1517_p2 = ap_const_lv1_0) and (ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_1) and (i5_reg_324 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state15)) or (not((i5_reg_324 = ap_const_lv2_1)) and not((ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_1)) and not((ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_0)) and not((i5_reg_324 = ap_const_lv2_0)) and (exitcond4_fu_1517_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15)) or (not((ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_1)) and not((ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_0)) and (exitcond4_fu_1517_p2 = ap_const_lv1_0) and (i5_reg_324 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state15)) or (not((i5_reg_324 = ap_const_lv2_1)) and not((i5_reg_324 = ap_const_lv2_0)) and (exitcond4_fu_1517_p2 = ap_const_lv1_0) and (ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((exitcond4_fu_1517_p2 = ap_const_lv1_0) and (i5_reg_324 = ap_const_lv2_1) and (ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((exitcond4_fu_1517_p2 = ap_const_lv1_0) and (ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_1) and (i5_reg_324 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((exitcond4_fu_1517_p2 = ap_const_lv1_0) and (ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_0) and (i5_reg_324 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
            ap_phi_mux_p_A_0_2_V_2_phi_fu_648_p18 <= p_A_0_2_V_1_reg_402;
        elsif ((not((ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_1)) and not((ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_0)) and (exitcond4_fu_1517_p2 = ap_const_lv1_0) and (i5_reg_324 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            ap_phi_mux_p_A_0_2_V_2_phi_fu_648_p18 <= p_Val2_4_fu_1566_p2(47 downto 16);
        else 
            ap_phi_mux_p_A_0_2_V_2_phi_fu_648_p18 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    ap_phi_mux_p_A_1_0_V_2_phi_fu_615_p18_assign_proc : process(ap_CS_fsm_state15, i5_reg_324, exitcond4_fu_1517_p2, p_A_1_0_V_1_reg_391, ap_phi_mux_j6_phi_fu_439_p4, p_Val2_4_fu_1566_p2)
    begin
        if (((exitcond4_fu_1517_p2 = ap_const_lv1_0) and (i5_reg_324 = ap_const_lv2_1) and (ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            ap_phi_mux_p_A_1_0_V_2_phi_fu_615_p18 <= p_Val2_4_fu_1566_p2(47 downto 16);
        elsif (((not((i5_reg_324 = ap_const_lv2_1)) and not((i5_reg_324 = ap_const_lv2_0)) and (exitcond4_fu_1517_p2 = ap_const_lv1_0) and (ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((exitcond4_fu_1517_p2 = ap_const_lv1_0) and (ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_1) and (i5_reg_324 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state15)) or (not((i5_reg_324 = ap_const_lv2_1)) and not((ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_1)) and not((ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_0)) and not((i5_reg_324 = ap_const_lv2_0)) and (exitcond4_fu_1517_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15)) or (not((ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_1)) and not((ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_0)) and (exitcond4_fu_1517_p2 = ap_const_lv1_0) and (i5_reg_324 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state15)) or (not((i5_reg_324 = ap_const_lv2_1)) and not((i5_reg_324 = ap_const_lv2_0)) and (exitcond4_fu_1517_p2 = ap_const_lv1_0) and (ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((exitcond4_fu_1517_p2 = ap_const_lv1_0) and (ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_1) and (i5_reg_324 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state15)) or (not((ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_1)) and not((ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_0)) and (exitcond4_fu_1517_p2 = ap_const_lv1_0) and (i5_reg_324 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((exitcond4_fu_1517_p2 = ap_const_lv1_0) and (ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_0) and (i5_reg_324 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
            ap_phi_mux_p_A_1_0_V_2_phi_fu_615_p18 <= p_A_1_0_V_1_reg_391;
        else 
            ap_phi_mux_p_A_1_0_V_2_phi_fu_615_p18 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    ap_phi_mux_p_A_1_1_V_2_phi_fu_582_p18_assign_proc : process(ap_CS_fsm_state15, i5_reg_324, exitcond4_fu_1517_p2, p_A_1_1_V_1_reg_380, ap_phi_mux_j6_phi_fu_439_p4, p_Val2_4_fu_1566_p2)
    begin
        if (((exitcond4_fu_1517_p2 = ap_const_lv1_0) and (ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_1) and (i5_reg_324 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            ap_phi_mux_p_A_1_1_V_2_phi_fu_582_p18 <= p_Val2_4_fu_1566_p2(47 downto 16);
        elsif (((not((i5_reg_324 = ap_const_lv2_1)) and not((i5_reg_324 = ap_const_lv2_0)) and (exitcond4_fu_1517_p2 = ap_const_lv1_0) and (ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state15)) or (not((i5_reg_324 = ap_const_lv2_1)) and not((ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_1)) and not((ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_0)) and not((i5_reg_324 = ap_const_lv2_0)) and (exitcond4_fu_1517_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15)) or (not((ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_1)) and not((ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_0)) and (exitcond4_fu_1517_p2 = ap_const_lv1_0) and (i5_reg_324 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state15)) or (not((i5_reg_324 = ap_const_lv2_1)) and not((i5_reg_324 = ap_const_lv2_0)) and (exitcond4_fu_1517_p2 = ap_const_lv1_0) and (ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((exitcond4_fu_1517_p2 = ap_const_lv1_0) and (i5_reg_324 = ap_const_lv2_1) and (ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((exitcond4_fu_1517_p2 = ap_const_lv1_0) and (ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_1) and (i5_reg_324 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state15)) or (not((ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_1)) and not((ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_0)) and (exitcond4_fu_1517_p2 = ap_const_lv1_0) and (i5_reg_324 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((exitcond4_fu_1517_p2 = ap_const_lv1_0) and (ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_0) and (i5_reg_324 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
            ap_phi_mux_p_A_1_1_V_2_phi_fu_582_p18 <= p_A_1_1_V_1_reg_380;
        else 
            ap_phi_mux_p_A_1_1_V_2_phi_fu_582_p18 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    ap_phi_mux_p_A_1_2_V_2_phi_fu_549_p18_assign_proc : process(ap_CS_fsm_state15, i5_reg_324, exitcond4_fu_1517_p2, p_A_1_2_V_1_reg_369, ap_phi_mux_j6_phi_fu_439_p4, p_Val2_4_fu_1566_p2)
    begin
        if ((not((ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_1)) and not((ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_0)) and (exitcond4_fu_1517_p2 = ap_const_lv1_0) and (i5_reg_324 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            ap_phi_mux_p_A_1_2_V_2_phi_fu_549_p18 <= p_Val2_4_fu_1566_p2(47 downto 16);
        elsif (((not((i5_reg_324 = ap_const_lv2_1)) and not((i5_reg_324 = ap_const_lv2_0)) and (exitcond4_fu_1517_p2 = ap_const_lv1_0) and (ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((exitcond4_fu_1517_p2 = ap_const_lv1_0) and (ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_1) and (i5_reg_324 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state15)) or (not((i5_reg_324 = ap_const_lv2_1)) and not((ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_1)) and not((ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_0)) and not((i5_reg_324 = ap_const_lv2_0)) and (exitcond4_fu_1517_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15)) or (not((i5_reg_324 = ap_const_lv2_1)) and not((i5_reg_324 = ap_const_lv2_0)) and (exitcond4_fu_1517_p2 = ap_const_lv1_0) and (ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((exitcond4_fu_1517_p2 = ap_const_lv1_0) and (i5_reg_324 = ap_const_lv2_1) and (ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((exitcond4_fu_1517_p2 = ap_const_lv1_0) and (ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_1) and (i5_reg_324 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state15)) or (not((ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_1)) and not((ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_0)) and (exitcond4_fu_1517_p2 = ap_const_lv1_0) and (i5_reg_324 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((exitcond4_fu_1517_p2 = ap_const_lv1_0) and (ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_0) and (i5_reg_324 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
            ap_phi_mux_p_A_1_2_V_2_phi_fu_549_p18 <= p_A_1_2_V_1_reg_369;
        else 
            ap_phi_mux_p_A_1_2_V_2_phi_fu_549_p18 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    ap_phi_mux_p_A_2_0_V_2_phi_fu_516_p18_assign_proc : process(ap_CS_fsm_state15, i5_reg_324, exitcond4_fu_1517_p2, p_A_2_0_V_1_reg_358, ap_phi_mux_j6_phi_fu_439_p4, p_Val2_4_fu_1566_p2)
    begin
        if ((not((i5_reg_324 = ap_const_lv2_1)) and not((i5_reg_324 = ap_const_lv2_0)) and (exitcond4_fu_1517_p2 = ap_const_lv1_0) and (ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            ap_phi_mux_p_A_2_0_V_2_phi_fu_516_p18 <= p_Val2_4_fu_1566_p2(47 downto 16);
        elsif (((not((i5_reg_324 = ap_const_lv2_1)) and not((i5_reg_324 = ap_const_lv2_0)) and (exitcond4_fu_1517_p2 = ap_const_lv1_0) and (ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((exitcond4_fu_1517_p2 = ap_const_lv1_0) and (ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_1) and (i5_reg_324 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state15)) or (not((i5_reg_324 = ap_const_lv2_1)) and not((ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_1)) and not((ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_0)) and not((i5_reg_324 = ap_const_lv2_0)) and (exitcond4_fu_1517_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15)) or (not((ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_1)) and not((ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_0)) and (exitcond4_fu_1517_p2 = ap_const_lv1_0) and (i5_reg_324 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((exitcond4_fu_1517_p2 = ap_const_lv1_0) and (i5_reg_324 = ap_const_lv2_1) and (ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((exitcond4_fu_1517_p2 = ap_const_lv1_0) and (ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_1) and (i5_reg_324 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state15)) or (not((ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_1)) and not((ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_0)) and (exitcond4_fu_1517_p2 = ap_const_lv1_0) and (i5_reg_324 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((exitcond4_fu_1517_p2 = ap_const_lv1_0) and (ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_0) and (i5_reg_324 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
            ap_phi_mux_p_A_2_0_V_2_phi_fu_516_p18 <= p_A_2_0_V_1_reg_358;
        else 
            ap_phi_mux_p_A_2_0_V_2_phi_fu_516_p18 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    ap_phi_mux_p_A_2_1_V_2_phi_fu_483_p18_assign_proc : process(ap_CS_fsm_state15, i5_reg_324, exitcond4_fu_1517_p2, p_A_2_1_V_1_reg_347, ap_phi_mux_j6_phi_fu_439_p4, p_Val2_4_fu_1566_p2)
    begin
        if ((not((i5_reg_324 = ap_const_lv2_1)) and not((i5_reg_324 = ap_const_lv2_0)) and (exitcond4_fu_1517_p2 = ap_const_lv1_0) and (ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            ap_phi_mux_p_A_2_1_V_2_phi_fu_483_p18 <= p_Val2_4_fu_1566_p2(47 downto 16);
        elsif ((((exitcond4_fu_1517_p2 = ap_const_lv1_0) and (ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_1) and (i5_reg_324 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state15)) or (not((i5_reg_324 = ap_const_lv2_1)) and not((ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_1)) and not((ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_0)) and not((i5_reg_324 = ap_const_lv2_0)) and (exitcond4_fu_1517_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15)) or (not((ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_1)) and not((ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_0)) and (exitcond4_fu_1517_p2 = ap_const_lv1_0) and (i5_reg_324 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state15)) or (not((i5_reg_324 = ap_const_lv2_1)) and not((i5_reg_324 = ap_const_lv2_0)) and (exitcond4_fu_1517_p2 = ap_const_lv1_0) and (ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((exitcond4_fu_1517_p2 = ap_const_lv1_0) and (i5_reg_324 = ap_const_lv2_1) and (ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((exitcond4_fu_1517_p2 = ap_const_lv1_0) and (ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_1) and (i5_reg_324 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state15)) or (not((ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_1)) and not((ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_0)) and (exitcond4_fu_1517_p2 = ap_const_lv1_0) and (i5_reg_324 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((exitcond4_fu_1517_p2 = ap_const_lv1_0) and (ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_0) and (i5_reg_324 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
            ap_phi_mux_p_A_2_1_V_2_phi_fu_483_p18 <= p_A_2_1_V_1_reg_347;
        else 
            ap_phi_mux_p_A_2_1_V_2_phi_fu_483_p18 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    ap_phi_mux_p_A_2_2_V_2_phi_fu_450_p18_assign_proc : process(ap_CS_fsm_state15, i5_reg_324, p_A_2_2_V_1_reg_336, exitcond4_fu_1517_p2, ap_phi_mux_j6_phi_fu_439_p4, p_Val2_4_fu_1566_p2)
    begin
        if ((not((i5_reg_324 = ap_const_lv2_1)) and not((ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_1)) and not((ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_0)) and not((i5_reg_324 = ap_const_lv2_0)) and (exitcond4_fu_1517_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            ap_phi_mux_p_A_2_2_V_2_phi_fu_450_p18 <= p_Val2_4_fu_1566_p2(47 downto 16);
        elsif (((not((i5_reg_324 = ap_const_lv2_1)) and not((i5_reg_324 = ap_const_lv2_0)) and (exitcond4_fu_1517_p2 = ap_const_lv1_0) and (ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((exitcond4_fu_1517_p2 = ap_const_lv1_0) and (ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_1) and (i5_reg_324 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state15)) or (not((ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_1)) and not((ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_0)) and (exitcond4_fu_1517_p2 = ap_const_lv1_0) and (i5_reg_324 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state15)) or (not((i5_reg_324 = ap_const_lv2_1)) and not((i5_reg_324 = ap_const_lv2_0)) and (exitcond4_fu_1517_p2 = ap_const_lv1_0) and (ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((exitcond4_fu_1517_p2 = ap_const_lv1_0) and (i5_reg_324 = ap_const_lv2_1) and (ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((exitcond4_fu_1517_p2 = ap_const_lv1_0) and (ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_1) and (i5_reg_324 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state15)) or (not((ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_1)) and not((ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_0)) and (exitcond4_fu_1517_p2 = ap_const_lv1_0) and (i5_reg_324 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((exitcond4_fu_1517_p2 = ap_const_lv1_0) and (ap_phi_mux_j6_phi_fu_439_p4 = ap_const_lv2_0) and (i5_reg_324 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
            ap_phi_mux_p_A_2_2_V_2_phi_fu_450_p18 <= p_A_2_2_V_1_reg_336;
        else 
            ap_phi_mux_p_A_2_2_V_2_phi_fu_450_p18 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_0_assign_proc : process(p_s_reg_890, ap_CS_fsm_state20, ap_return_0_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            ap_return_0 <= p_s_reg_890;
        else 
            ap_return_0 <= ap_return_0_preg;
        end if; 
    end process;


    ap_return_1_assign_proc : process(x_0_V_write_assign_reg_881, ap_CS_fsm_state20, ap_return_1_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            ap_return_1 <= x_0_V_write_assign_reg_881;
        else 
            ap_return_1 <= ap_return_1_preg;
        end if; 
    end process;


    ap_return_2_assign_proc : process(x_1_V_write_assign_reg_863, ap_CS_fsm_state20, ap_return_2_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            ap_return_2 <= x_1_V_write_assign_reg_863;
        else 
            ap_return_2 <= ap_return_2_preg;
        end if; 
    end process;


    ap_return_3_assign_proc : process(x_2_V_write_assign_reg_872, ap_CS_fsm_state20, ap_return_3_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            ap_return_3 <= x_2_V_write_assign_reg_872;
        else 
            ap_return_3 <= ap_return_3_preg;
        end if; 
    end process;

    denom_V_fu_1398_p3 <= 
        newSel2_fu_1384_p3 when (or_cond2_fu_1392_p2(0) = '1') else 
        ap_const_lv32_0;
    exitcond4_fu_1517_p2 <= "1" when (j6_reg_435 = ap_const_lv2_3) else "0";
    exitcond5_fu_1614_p2 <= "1" when (k_reg_851 = ap_const_lv2_3) else "0";
    exp_tmp_V_fu_1156_p4 <= ireg_V_fu_1140_p1(62 downto 52);
    factor_V_fu_1649_p10 <= std_logic_vector(unsigned(tmp_reg_2326) + unsigned(tmp_85_fu_1638_p2));
    grp_fu_903_p1 <= p_Result_1_reg_2364;
    i_fu_980_p2 <= std_logic_vector(unsigned(i5_reg_324) + unsigned(ap_const_lv2_1));
    icmp_fu_1258_p2 <= "1" when (tmp_106_fu_1248_p4 = ap_const_lv7_0) else "0";
    ireg_V_fu_1140_p1 <= d_assign_fu_911_p1;
    is_neg_fu_1034_p3 <= p_Val2_s_fu_1004_p11(31 downto 31);
    isneg_fu_1148_p3 <= ireg_V_fu_1140_p1(63 downto 63);
    j_fu_1523_p2 <= std_logic_vector(unsigned(j6_reg_435) + unsigned(ap_const_lv2_1));
    k_1_fu_1620_p2 <= std_logic_vector(unsigned(k_reg_851) + unsigned(ap_const_lv2_1));
    man_V_1_fu_1186_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(p_Result_2_fu_1182_p1));
    man_V_2_fu_1192_p3 <= 
        man_V_1_fu_1186_p2 when (isneg_fu_1148_p3(0) = '1') else 
        p_Result_2_fu_1182_p1;
    newSel10_fu_2068_p3 <= 
        p_A_2_0_V_12_fu_1799_p4 when (sel_tmp_fu_1747_p2(0) = '1') else 
        p_A_1_0_V_3_reg_803;
    newSel11_fu_2108_p3 <= 
        x_V6_fu_158 when (sel_tmp_fu_1747_p2(0) = '1') else 
        p_b_2_V_25_fu_1737_p4;
    newSel12_fu_2124_p3 <= 
        p_b_2_V_25_fu_1737_p4 when (sel_tmp_fu_1747_p2(0) = '1') else 
        x_V5_fu_154;
    newSel1_fu_1371_p3 <= 
        storemerge_fu_1321_p3 when (sel_tmp65_fu_1349_p2(0) = '1') else 
        tmp_105_reg_2405;
    newSel2_fu_1384_p3 <= 
        newSel_fu_1359_p3 when (or_cond_fu_1366_p2(0) = '1') else 
        newSel1_fu_1371_p3;
    newSel3_fu_2004_p3 <= 
        p_A_2_1_V_3_reg_755 when (sel_tmp_fu_1747_p2(0) = '1') else 
        p_A_2_1_V_11_fu_1864_p4;
    newSel4_fu_1953_p3 <= 
        p_b_2_V_load_1_reg_2488 when (sel_tmp_fu_1747_p2(0) = '1') else 
        p_b_2_V_25_fu_1737_p4;
    newSel5_fu_2020_p3 <= 
        p_A_2_0_V_3_reg_767 when (sel_tmp_fu_1747_p2(0) = '1') else 
        p_A_2_0_V_12_fu_1799_p4;
    newSel6_fu_1967_p3 <= 
        p_b_2_V_25_fu_1737_p4 when (sel_tmp_fu_1747_p2(0) = '1') else 
        p_b_1_V_load_1_reg_2481;
    newSel7_fu_2036_p3 <= 
        p_A_2_2_V_11_fu_1929_p4 when (sel_tmp_fu_1747_p2(0) = '1') else 
        p_A_1_2_V_3_reg_779;
    newSel8_fu_1988_p3 <= 
        p_A_2_2_V_3_reg_743 when (sel_tmp_fu_1747_p2(0) = '1') else 
        p_A_2_2_V_11_fu_1929_p4;
    newSel9_fu_2052_p3 <= 
        p_A_2_1_V_11_fu_1864_p4 when (sel_tmp_fu_1747_p2(0) = '1') else 
        p_A_1_1_V_3_reg_791;
    newSel_fu_1359_p3 <= 
        tmp_76_fu_1328_p2 when (sel_tmp68_reg_2417(0) = '1') else 
        tmp_107_fu_1317_p1;
    
    num_zeros_fu_1066_p3_proc : process(p_Result_s_fu_1056_p4)
    begin
        num_zeros_fu_1066_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 0 to 32 - 1 loop
            if p_Result_s_fu_1056_p4(i) = '1' then
                num_zeros_fu_1066_p3 <= std_logic_vector(to_unsigned(i,32));
                exit;
            end if;
        end loop;
    end process;

    or_cond1_fu_1378_p2 <= (sel_tmp65_fu_1349_p2 or sel_tmp61_fu_1338_p2);
    or_cond2_fu_1392_p2 <= (or_cond_fu_1366_p2 or or_cond1_fu_1378_p2);
    or_cond3_fu_1947_p2 <= (tmp_83_fu_1709_p2 or sel_tmp8_fu_1753_p2);
    or_cond_fu_1366_p2 <= (sel_tmp68_reg_2417 or sel_tmp66_fu_1354_p2);
    p_A_2_0_V_10_fu_2100_p3 <= 
        p_A_2_0_V_6_reg_839 when (tmp_83_fu_1709_p2(0) = '1') else 
        p_A_2_0_V_7_fu_1809_p3;
    p_A_2_0_V_12_fu_1799_p4 <= p_Val2_s_191_fu_1794_p2(47 downto 16);
    p_A_2_0_V_7_fu_1809_p3 <= 
        p_A_2_0_V_12_fu_1799_p4 when (sel_tmp8_fu_1753_p2(0) = '1') else 
        p_A_2_0_V_6_reg_839;
    p_A_2_0_V_8_fu_2028_p3 <= 
        p_A_2_0_V_3_reg_767 when (or_cond3_fu_1947_p2(0) = '1') else 
        newSel5_fu_2020_p3;
    p_A_2_0_V_9_fu_2076_p3 <= 
        p_A_1_0_V_3_reg_803 when (or_cond3_fu_1947_p2(0) = '1') else 
        newSel10_fu_2068_p3;
    p_A_2_1_V_11_fu_1864_p4 <= p_Val2_230_1_fu_1858_p2(47 downto 16);
    p_A_2_1_V_6_fu_1874_p3 <= 
        p_A_2_1_V_11_fu_1864_p4 when (sel_tmp8_fu_1753_p2(0) = '1') else 
        p_A_2_1_V_5_reg_827;
    p_A_2_1_V_7_fu_2012_p3 <= 
        p_A_2_1_V_3_reg_755 when (or_cond3_fu_1947_p2(0) = '1') else 
        newSel3_fu_2004_p3;
    p_A_2_1_V_8_fu_2060_p3 <= 
        p_A_1_1_V_3_reg_791 when (or_cond3_fu_1947_p2(0) = '1') else 
        newSel9_fu_2052_p3;
    p_A_2_1_V_9_fu_2092_p3 <= 
        p_A_2_1_V_5_reg_827 when (tmp_83_fu_1709_p2(0) = '1') else 
        p_A_2_1_V_6_fu_1874_p3;
    p_A_2_2_V_11_fu_1929_p4 <= p_Val2_230_2_fu_1923_p2(47 downto 16);
    p_A_2_2_V_6_fu_1939_p3 <= 
        p_A_2_2_V_11_fu_1929_p4 when (sel_tmp8_fu_1753_p2(0) = '1') else 
        p_A_2_2_V_5_reg_815;
    p_A_2_2_V_7_fu_1996_p3 <= 
        p_A_2_2_V_3_reg_743 when (or_cond3_fu_1947_p2(0) = '1') else 
        newSel8_fu_1988_p3;
    p_A_2_2_V_8_fu_2044_p3 <= 
        p_A_1_2_V_3_reg_779 when (or_cond3_fu_1947_p2(0) = '1') else 
        newSel7_fu_2036_p3;
    p_A_2_2_V_9_fu_2084_p3 <= 
        p_A_2_2_V_5_reg_815 when (tmp_83_fu_1709_p2(0) = '1') else 
        p_A_2_2_V_6_fu_1939_p3;
    p_Repl2_32_trunc_fu_1112_p2 <= std_logic_vector(unsigned(tmp_63_fu_1103_p2) + unsigned(tmp_64_fu_1108_p1));
    p_Result_1_fu_1125_p5 <= (tmp_65_fu_1118_p3 & tmp32_V_reg_2354(22 downto 0));
    p_Result_2_fu_1182_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_67_fu_1174_p3),54));
    
    p_Result_s_fu_1056_p4_proc : process(p_Val2_12_fu_1048_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable p_Result_s_fu_1056_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(5 - 1 downto 0) := ap_const_lv32_1F(5 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(5 - 1 downto 0) := ap_const_lv32_0(5 - 1 downto 0);
        v0_cpy := p_Val2_12_fu_1048_p3;
        if (vlo_cpy(5 - 1 downto 0) > vhi_cpy(5 - 1 downto 0)) then
            vhi_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_0(5-1 downto 0)));
            vlo_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_1F(5-1 downto 0)));
            for p_Result_s_fu_1056_p4_i in 0 to 32-1 loop
                v0_cpy(p_Result_s_fu_1056_p4_i) := p_Val2_12_fu_1048_p3(32-1-p_Result_s_fu_1056_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(5-1 downto 0)))));

        section := (others=>'0');
        section(5-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(5-1 downto 0)) - unsigned(vlo_cpy(5-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(32-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_s_fu_1056_p4 <= resvalue(32-1 downto 0);
    end process;

    p_Val2_12_fu_1048_p3 <= 
        tmp_61_fu_1042_p2 when (is_neg_fu_1034_p3(0) = '1') else 
        p_Val2_s_fu_1004_p11;
    p_Val2_230_1_fu_1858_p2 <= std_logic_vector(unsigned(tmp_429_1_fu_1845_p3) - unsigned(tmp_4309_1_cast_fu_1853_p2));
    p_Val2_230_2_fu_1923_p2 <= std_logic_vector(unsigned(tmp_429_2_fu_1910_p3) - unsigned(tmp_4309_2_cast_fu_1918_p2));
    p_Val2_3_fu_1414_p0 <= grp_fu_932_p5;
    p_Val2_3_fu_1414_p1 <= denom_V_fu_1398_p3;
    p_Val2_3_fu_1414_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_3_fu_1414_p0) * signed(p_Val2_3_fu_1414_p1))), 48));
    p_Val2_4_fu_1566_p0 <= OP2_V_cast_reg_2423(32 - 1 downto 0);
    p_Val2_4_fu_1566_p1 <= tmp_81_fu_1538_p11;
    p_Val2_4_fu_1566_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_4_fu_1566_p0) * signed(p_Val2_4_fu_1566_p1))), 48));
    p_Val2_6_fu_1732_p2 <= std_logic_vector(unsigned(tmp_88_fu_1724_p3) - unsigned(tmp_225_cast_reg_2501));
    p_Val2_s_191_fu_1794_p2 <= std_logic_vector(unsigned(tmp_91_fu_1786_p3) - unsigned(tmp_4309_cast_reg_2506));
    p_b_2_V_10_fu_1489_p3 <= 
        x_V6_load_reg_2311 when (sel_tmp70_fu_1444_p2(0) = '1') else 
        p_b_2_V_9_fu_1482_p3;
    p_b_2_V_11_fu_1496_p3 <= 
        p_b_2_V_24_fu_1420_p4 when (sel_tmp69_fu_1430_p2(0) = '1') else 
        x_V5_load_reg_2304;
    p_b_2_V_12_fu_1503_p3 <= 
        x_V5_load_reg_2304 when (sel_tmp70_fu_1444_p2(0) = '1') else 
        p_b_2_V_11_fu_1496_p3;
    p_b_2_V_14_fu_1510_p3 <= 
        p_b_2_V_24_fu_1420_p4 when (sel_tmp70_fu_1444_p2(0) = '1') else 
        p_b_2_V_13_reg_2298;
    p_b_2_V_16_fu_1759_p3 <= 
        p_b_2_V_25_fu_1737_p4 when (sel_tmp8_fu_1753_p2(0) = '1') else 
        p_b_2_V_2_load_1_reg_2474;
    p_b_2_V_17_fu_1766_p3 <= 
        p_b_2_V_25_fu_1737_p4 when (sel_tmp8_fu_1753_p2(0) = '1') else 
        p_b_2_V_3_fu_150;
    p_b_2_V_18_fu_1960_p3 <= 
        p_b_2_V_load_1_reg_2488 when (or_cond3_fu_1947_p2(0) = '1') else 
        newSel4_fu_1953_p3;
    p_b_2_V_19_fu_1974_p3 <= 
        p_b_1_V_load_1_reg_2481 when (or_cond3_fu_1947_p2(0) = '1') else 
        newSel6_fu_1967_p3;
    p_b_2_V_1_fu_1450_p3 <= 
        p_b_2_V_fu_146 when (sel_tmp70_fu_1444_p2(0) = '1') else 
        p_b_2_V_4_fu_1436_p3;
    p_b_2_V_20_fu_1981_p3 <= 
        p_b_2_V_2_load_1_reg_2474 when (tmp_83_fu_1709_p2(0) = '1') else 
        p_b_2_V_16_fu_1759_p3;
    p_b_2_V_21_fu_2116_p3 <= 
        x_V6_fu_158 when (or_cond3_fu_1947_p2(0) = '1') else 
        newSel11_fu_2108_p3;
    p_b_2_V_22_fu_2132_p3 <= 
        x_V5_fu_154 when (or_cond3_fu_1947_p2(0) = '1') else 
        newSel12_fu_2124_p3;
    p_b_2_V_23_fu_2140_p3 <= 
        p_b_2_V_3_fu_150 when (tmp_83_fu_1709_p2(0) = '1') else 
        p_b_2_V_17_fu_1766_p3;
    p_b_2_V_24_fu_1420_p4 <= p_Val2_3_fu_1414_p2(47 downto 16);
    p_b_2_V_25_fu_1737_p4 <= p_Val2_6_fu_1732_p2(47 downto 16);
    p_b_2_V_4_fu_1436_p3 <= 
        p_b_2_V_fu_146 when (sel_tmp69_fu_1430_p2(0) = '1') else 
        p_b_2_V_24_fu_1420_p4;
    p_b_2_V_5_fu_1458_p3 <= 
        p_b_2_V_24_fu_1420_p4 when (sel_tmp69_fu_1430_p2(0) = '1') else 
        p_b_1_V_fu_142;
    p_b_2_V_6_fu_1466_p3 <= 
        p_b_1_V_fu_142 when (sel_tmp70_fu_1444_p2(0) = '1') else 
        p_b_2_V_5_fu_1458_p3;
    p_b_2_V_8_fu_1474_p3 <= 
        p_b_2_V_24_fu_1420_p4 when (sel_tmp70_fu_1444_p2(0) = '1') else 
        p_b_2_V_2_fu_138;
    p_b_2_V_9_fu_1482_p3 <= 
        x_V6_load_reg_2311 when (sel_tmp69_fu_1430_p2(0) = '1') else 
        p_b_2_V_24_fu_1420_p4;
    p_shl1_fu_1630_p3 <= (k_reg_851 & ap_const_lv2_0);
    p_shl_fu_990_p3 <= (i5_reg_324 & ap_const_lv2_0);
    sel_tmp102_demorgan_fu_1282_p2 <= (tmp_69_fu_1212_p2 or sel_tmp87_demorgan_fu_1264_p2);
    sel_tmp60_fu_1333_p2 <= (tmp_68_reg_2389 xor ap_const_lv1_1);
    sel_tmp61_fu_1338_p2 <= (tmp_72_reg_2400 and sel_tmp60_fu_1333_p2);
    sel_tmp62_fu_1270_p2 <= (sel_tmp87_demorgan_fu_1264_p2 xor ap_const_lv1_1);
    sel_tmp63_fu_1276_p2 <= (tmp_69_fu_1212_p2 and sel_tmp62_fu_1270_p2);
    sel_tmp64_fu_1343_p2 <= (tmp_73_fu_1303_p2 xor ap_const_lv1_1);
    sel_tmp65_fu_1349_p2 <= (sel_tmp64_fu_1343_p2 and sel_tmp63_reg_2411);
    sel_tmp66_fu_1354_p2 <= (tmp_73_fu_1303_p2 and sel_tmp63_reg_2411);
    sel_tmp67_fu_1288_p2 <= (sel_tmp102_demorgan_fu_1282_p2 xor ap_const_lv1_1);
    sel_tmp68_fu_1294_p2 <= (sel_tmp67_fu_1288_p2 and icmp_fu_1258_p2);
    sel_tmp69_fu_1430_p2 <= "1" when (i5_reg_324 = ap_const_lv2_1) else "0";
    sel_tmp70_fu_1444_p2 <= "1" when (i5_reg_324 = ap_const_lv2_0) else "0";
    sel_tmp87_demorgan_fu_1264_p2 <= (tmp_72_fu_1238_p2 or tmp_68_fu_1200_p2);
    sel_tmp8_fu_1753_p2 <= "1" when (k_reg_851 = ap_const_lv2_0) else "0";
    sel_tmp_fu_1747_p2 <= "1" when (k_reg_851 = ap_const_lv2_1) else "0";
        sh_amt_cast_fu_1300_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_reg_2394),32));

    sh_amt_fu_1230_p3 <= 
        tmp_70_fu_1218_p2 when (tmp_69_fu_1212_p2(0) = '1') else 
        tmp_71_fu_1224_p2;
    storemerge_fu_1321_p3 <= 
        ap_const_lv32_FFFFFFFF when (isneg_reg_2379(0) = '1') else 
        ap_const_lv32_0;
    tmp32_V_1_fu_1074_p2 <= std_logic_vector(shift_left(unsigned(p_Val2_12_fu_1048_p3),to_integer(unsigned('0' & num_zeros_fu_1066_p3(31-1 downto 0)))));
    tmp32_V_fu_1084_p1 <= grp_fu_908_p1;
    tmp_101_fu_1080_p1 <= num_zeros_fu_1066_p3(8 - 1 downto 0);
    tmp_102_fu_1144_p1 <= ireg_V_fu_1140_p1(63 - 1 downto 0);
    tmp_104_fu_1170_p1 <= ireg_V_fu_1140_p1(52 - 1 downto 0);
    tmp_105_fu_1244_p1 <= man_V_2_fu_1192_p3(32 - 1 downto 0);
    tmp_106_fu_1248_p4 <= sh_amt_fu_1230_p3(11 downto 5);
    tmp_107_fu_1317_p1 <= tmp_75_fu_1312_p2(32 - 1 downto 0);
        tmp_1_fu_1673_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(factor_V_fu_1649_p11),48));

    tmp_225_cast_fu_1681_p0 <= tmp_1_fu_1673_p1(32 - 1 downto 0);
    tmp_225_cast_fu_1681_p1 <= grp_fu_932_p5;
    tmp_225_cast_fu_1681_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_225_cast_fu_1681_p0) * signed(tmp_225_cast_fu_1681_p1))), 48));
    tmp_429_1_fu_1845_p3 <= (tmp_93_fu_1833_p5 & ap_const_lv16_0);
    tmp_429_2_fu_1910_p3 <= (tmp_95_fu_1898_p5 & ap_const_lv16_0);
    tmp_4309_1_cast_fu_1853_p0 <= tmp_92_fu_1817_p5;
    tmp_4309_1_cast_fu_1853_p1 <= tmp_1_reg_2495(32 - 1 downto 0);
    tmp_4309_1_cast_fu_1853_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_4309_1_cast_fu_1853_p0) * signed(tmp_4309_1_cast_fu_1853_p1))), 48));
    tmp_4309_2_cast_fu_1918_p0 <= tmp_94_fu_1882_p5;
    tmp_4309_2_cast_fu_1918_p1 <= tmp_1_reg_2495(32 - 1 downto 0);
    tmp_4309_2_cast_fu_1918_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_4309_2_cast_fu_1918_p0) * signed(tmp_4309_2_cast_fu_1918_p1))), 48));
    tmp_4309_cast_fu_1703_p0 <= tmp_89_fu_1687_p5;
    tmp_4309_cast_fu_1703_p1 <= tmp_1_fu_1673_p1(32 - 1 downto 0);
    tmp_4309_cast_fu_1703_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_4309_cast_fu_1703_p0) * signed(tmp_4309_cast_fu_1703_p1))), 48));
    tmp_59_fu_998_p2 <= std_logic_vector(unsigned(p_shl_fu_990_p3) - unsigned(tmp_fu_986_p1));
    tmp_60_fu_1028_p2 <= "1" when (p_Val2_s_fu_1004_p11 = ap_const_lv32_0) else "0";
    tmp_61_fu_1042_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(p_Val2_s_fu_1004_p11));
    tmp_62_fu_1098_p2 <= "0" when (p_Result_s_190_reg_2359 = ap_const_lv8_9E) else "1";
    tmp_63_fu_1103_p2 <= std_logic_vector(signed(ap_const_lv8_8E) - signed(tmp_101_reg_2349));
    tmp_64_fu_1108_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_62_fu_1098_p2),8));
    tmp_65_fu_1118_p3 <= (is_neg_reg_2339 & p_Repl2_32_trunc_fu_1112_p2);
    tmp_66_fu_1166_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_V_fu_1156_p4),12));
    tmp_67_fu_1174_p3 <= (ap_const_lv1_1 & tmp_104_fu_1170_p1);
    tmp_68_fu_1200_p2 <= "1" when (tmp_102_fu_1144_p1 = ap_const_lv63_0) else "0";
    tmp_69_fu_1212_p2 <= "1" when (signed(F2_fu_1206_p2) > signed(ap_const_lv12_10)) else "0";
    tmp_70_fu_1218_p2 <= std_logic_vector(signed(ap_const_lv12_FF0) + signed(F2_fu_1206_p2));
    tmp_71_fu_1224_p2 <= std_logic_vector(unsigned(ap_const_lv12_10) - unsigned(F2_fu_1206_p2));
    tmp_72_fu_1238_p2 <= "1" when (F2_fu_1206_p2 = ap_const_lv12_10) else "0";
    tmp_73_fu_1303_p2 <= "1" when (unsigned(sh_amt_reg_2394) < unsigned(ap_const_lv12_36)) else "0";
    tmp_74_fu_1308_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_amt_cast_fu_1300_p1),54));
    tmp_75_fu_1312_p2 <= std_logic_vector(shift_right(signed(man_V_2_reg_2384),to_integer(unsigned('0' & tmp_74_fu_1308_p1(31-1 downto 0)))));
    tmp_76_fu_1328_p2 <= std_logic_vector(shift_left(unsigned(tmp_105_reg_2405),to_integer(unsigned('0' & sh_amt_cast_fu_1300_p1(31-1 downto 0)))));
    tmp_79_fu_1529_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j6_reg_435),4));
    tmp_81_fu_1538_p10 <= std_logic_vector(unsigned(tmp_59_reg_2331) + unsigned(tmp_79_fu_1529_p1));
    tmp_83_fu_1709_p2 <= "1" when (i5_reg_324 = k_reg_851) else "0";
    tmp_84_fu_1626_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k_reg_851),4));
    tmp_85_fu_1638_p2 <= std_logic_vector(unsigned(p_shl1_fu_1630_p3) - unsigned(tmp_84_fu_1626_p1));
    tmp_88_fu_1724_p3 <= (p_Val2_5_fu_1715_p5 & ap_const_lv16_0);
    tmp_91_fu_1786_p3 <= (tmp_90_fu_1774_p5 & ap_const_lv16_0);
    tmp_fu_986_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i5_reg_324),4));
    tmp_s_fu_974_p2 <= "1" when (i5_reg_324 = ap_const_lv2_3) else "0";
end behav;
