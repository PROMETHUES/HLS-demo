-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity SIFT2_Core is
generic (
    C_S_AXI_AXILITES_ADDR_WIDTH : INTEGER := 6;
    C_S_AXI_AXILITES_DATA_WIDTH : INTEGER := 32 );
port (
    s_axi_AXILiteS_AWVALID : IN STD_LOGIC;
    s_axi_AXILiteS_AWREADY : OUT STD_LOGIC;
    s_axi_AXILiteS_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_ADDR_WIDTH-1 downto 0);
    s_axi_AXILiteS_WVALID : IN STD_LOGIC;
    s_axi_AXILiteS_WREADY : OUT STD_LOGIC;
    s_axi_AXILiteS_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH-1 downto 0);
    s_axi_AXILiteS_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH/8-1 downto 0);
    s_axi_AXILiteS_ARVALID : IN STD_LOGIC;
    s_axi_AXILiteS_ARREADY : OUT STD_LOGIC;
    s_axi_AXILiteS_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_ADDR_WIDTH-1 downto 0);
    s_axi_AXILiteS_RVALID : OUT STD_LOGIC;
    s_axi_AXILiteS_RREADY : IN STD_LOGIC;
    s_axi_AXILiteS_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH-1 downto 0);
    s_axi_AXILiteS_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_AXILiteS_BVALID : OUT STD_LOGIC;
    s_axi_AXILiteS_BREADY : IN STD_LOGIC;
    s_axi_AXILiteS_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    interrupt : OUT STD_LOGIC;
    src0_axis_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    src0_axis_TKEEP : IN STD_LOGIC_VECTOR (0 downto 0);
    src0_axis_TSTRB : IN STD_LOGIC_VECTOR (0 downto 0);
    src0_axis_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    src0_axis_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    src0_axis_TID : IN STD_LOGIC_VECTOR (0 downto 0);
    src0_axis_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
    src1_axis_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    src1_axis_TKEEP : IN STD_LOGIC_VECTOR (0 downto 0);
    src1_axis_TSTRB : IN STD_LOGIC_VECTOR (0 downto 0);
    src1_axis_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    src1_axis_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    src1_axis_TID : IN STD_LOGIC_VECTOR (0 downto 0);
    src1_axis_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
    dst0_axis_TDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst0_axis_TKEEP : OUT STD_LOGIC_VECTOR (0 downto 0);
    dst0_axis_TSTRB : OUT STD_LOGIC_VECTOR (0 downto 0);
    dst0_axis_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    dst0_axis_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    dst0_axis_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
    dst0_axis_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0);
    dst1_axis_TDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst1_axis_TKEEP : OUT STD_LOGIC_VECTOR (0 downto 0);
    dst1_axis_TSTRB : OUT STD_LOGIC_VECTOR (0 downto 0);
    dst1_axis_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    dst1_axis_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    dst1_axis_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
    dst1_axis_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0);
    src0_axis_TVALID : IN STD_LOGIC;
    src0_axis_TREADY : OUT STD_LOGIC;
    src1_axis_TVALID : IN STD_LOGIC;
    src1_axis_TREADY : OUT STD_LOGIC;
    dst0_axis_TVALID : OUT STD_LOGIC;
    dst0_axis_TREADY : IN STD_LOGIC;
    dst1_axis_TVALID : OUT STD_LOGIC;
    dst1_axis_TREADY : IN STD_LOGIC );
end;


architecture behav of SIFT2_Core is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "SIFT2_Core,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7vx690tffg1761-3,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=9.016720,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=1630,HLS_SYN_DSP=2311,HLS_SYN_FF=207493,HLS_SYN_LUT=421071,HLS_VERSION=2018_2}";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_S_AXI_WSTRB_WIDTH : INTEGER range 63 downto 0 := 4;
    constant C_S_AXI_ADDR_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_ready : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal rows0 : STD_LOGIC_VECTOR (31 downto 0);
    signal cols0 : STD_LOGIC_VECTOR (31 downto 0);
    signal rows1 : STD_LOGIC_VECTOR (31 downto 0);
    signal cols1 : STD_LOGIC_VECTOR (31 downto 0);
    signal thresh : STD_LOGIC_VECTOR (31 downto 0);
    signal src0_val_i_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal src0_val_t_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal src1_val_i_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal src1_val_t_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal dst0_val_i_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal dst0_val_t_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal dst1_val_i_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal dst1_val_t_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal keypoints0_val_pt_x_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal keypoints0_val_pt_x_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal keypoints0_val_pt_y_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal keypoints0_val_pt_y_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal keypoints0_val_angle_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal keypoints0_val_sigma_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal keypoints0_val_octav_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal keypoints0_val_layer_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal keypoints1_val_pt_x_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal keypoints1_val_pt_x_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal keypoints1_val_pt_y_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal keypoints1_val_pt_y_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal keypoints1_val_angle_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal keypoints1_val_sigma_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal keypoints1_val_octav_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal keypoints1_val_layer_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal descriptors0_val_val_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal descriptors1_val_val_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal matches_val_idx0_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal matches_val_idx0_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal matches_val_idx1_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal matches_val_idx1_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal Block_Mat_exit412_pr_U0_ap_start : STD_LOGIC;
    signal Block_Mat_exit412_pr_U0_ap_done : STD_LOGIC;
    signal Block_Mat_exit412_pr_U0_ap_continue : STD_LOGIC;
    signal Block_Mat_exit412_pr_U0_ap_idle : STD_LOGIC;
    signal Block_Mat_exit412_pr_U0_ap_ready : STD_LOGIC;
    signal Block_Mat_exit412_pr_U0_p_src0_rows_V_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Mat_exit412_pr_U0_p_src0_rows_V_out_write : STD_LOGIC;
    signal Block_Mat_exit412_pr_U0_p_src0_cols_V_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Mat_exit412_pr_U0_p_src0_cols_V_out_write : STD_LOGIC;
    signal Block_Mat_exit412_pr_U0_p_src1_rows_V_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Mat_exit412_pr_U0_p_src1_rows_V_out_write : STD_LOGIC;
    signal Block_Mat_exit412_pr_U0_p_src1_cols_V_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Mat_exit412_pr_U0_p_src1_cols_V_out_write : STD_LOGIC;
    signal Block_Mat_exit412_pr_U0_src1_rows_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Mat_exit412_pr_U0_src1_rows_out_write : STD_LOGIC;
    signal Block_Mat_exit412_pr_U0_src1_cols_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Mat_exit412_pr_U0_src1_cols_out_write : STD_LOGIC;
    signal Block_Mat_exit412_pr_U0_descriptors0_length_out_din : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_Mat_exit412_pr_U0_descriptors0_length_out_write : STD_LOGIC;
    signal Block_Mat_exit412_pr_U0_descriptors1_length_out_din : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_Mat_exit412_pr_U0_descriptors1_length_out_write : STD_LOGIC;
    signal Block_Mat_exit412_pr_U0_matches_length_out_din : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_Mat_exit412_pr_U0_matches_length_out_write : STD_LOGIC;
    signal Block_Mat_exit412_pr_U0_thresh_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Mat_exit412_pr_U0_thresh_out_write : STD_LOGIC;
    signal AXIvideo2Mat616_U0_ap_start : STD_LOGIC;
    signal AXIvideo2Mat616_U0_ap_done : STD_LOGIC;
    signal AXIvideo2Mat616_U0_ap_continue : STD_LOGIC;
    signal AXIvideo2Mat616_U0_ap_idle : STD_LOGIC;
    signal AXIvideo2Mat616_U0_ap_ready : STD_LOGIC;
    signal AXIvideo2Mat616_U0_start_out : STD_LOGIC;
    signal AXIvideo2Mat616_U0_start_write : STD_LOGIC;
    signal AXIvideo2Mat616_U0_src0_axis_TREADY : STD_LOGIC;
    signal AXIvideo2Mat616_U0_img_rows_V_read : STD_LOGIC;
    signal AXIvideo2Mat616_U0_img_cols_V_read : STD_LOGIC;
    signal AXIvideo2Mat616_U0_img_data_stream_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal AXIvideo2Mat616_U0_img_data_stream_V_write : STD_LOGIC;
    signal AXIvideo2Mat616_U0_img_rows_V_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal AXIvideo2Mat616_U0_img_rows_V_out_write : STD_LOGIC;
    signal AXIvideo2Mat616_U0_img_cols_V_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal AXIvideo2Mat616_U0_img_cols_V_out_write : STD_LOGIC;
    signal AXIvideo2Mat_U0_ap_start : STD_LOGIC;
    signal AXIvideo2Mat_U0_ap_done : STD_LOGIC;
    signal AXIvideo2Mat_U0_ap_continue : STD_LOGIC;
    signal AXIvideo2Mat_U0_ap_idle : STD_LOGIC;
    signal AXIvideo2Mat_U0_ap_ready : STD_LOGIC;
    signal AXIvideo2Mat_U0_start_out : STD_LOGIC;
    signal AXIvideo2Mat_U0_start_write : STD_LOGIC;
    signal AXIvideo2Mat_U0_src1_axis_TREADY : STD_LOGIC;
    signal AXIvideo2Mat_U0_img_rows_V_read : STD_LOGIC;
    signal AXIvideo2Mat_U0_img_cols_V_read : STD_LOGIC;
    signal AXIvideo2Mat_U0_img_data_stream_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal AXIvideo2Mat_U0_img_data_stream_V_write : STD_LOGIC;
    signal AXIvideo2Mat_U0_img_rows_V_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal AXIvideo2Mat_U0_img_rows_V_out_write : STD_LOGIC;
    signal AXIvideo2Mat_U0_img_cols_V_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal AXIvideo2Mat_U0_img_cols_V_out_write : STD_LOGIC;
    signal Mat2Array2D617_U0_ap_start : STD_LOGIC;
    signal Mat2Array2D617_U0_ap_done : STD_LOGIC;
    signal Mat2Array2D617_U0_ap_continue : STD_LOGIC;
    signal Mat2Array2D617_U0_ap_idle : STD_LOGIC;
    signal Mat2Array2D617_U0_ap_ready : STD_LOGIC;
    signal Mat2Array2D617_U0_mat_rows_V_read : STD_LOGIC;
    signal Mat2Array2D617_U0_mat_cols_V_read : STD_LOGIC;
    signal Mat2Array2D617_U0_mat_data_stream_V_read : STD_LOGIC;
    signal Mat2Array2D617_U0_arr_val_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal Mat2Array2D617_U0_arr_val_ce0 : STD_LOGIC;
    signal Mat2Array2D617_U0_arr_val_we0 : STD_LOGIC;
    signal Mat2Array2D617_U0_arr_val_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal Mat2Array2D617_U0_arr_rows_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Mat2Array2D617_U0_arr_rows_out_write : STD_LOGIC;
    signal Mat2Array2D617_U0_arr_cols_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Mat2Array2D617_U0_arr_cols_out_write : STD_LOGIC;
    signal ap_channel_done_src0_val : STD_LOGIC;
    signal Mat2Array2D617_U0_arr_val_full_n : STD_LOGIC;
    signal Mat2Array2D_U0_ap_start : STD_LOGIC;
    signal Mat2Array2D_U0_ap_done : STD_LOGIC;
    signal Mat2Array2D_U0_ap_continue : STD_LOGIC;
    signal Mat2Array2D_U0_ap_idle : STD_LOGIC;
    signal Mat2Array2D_U0_ap_ready : STD_LOGIC;
    signal Mat2Array2D_U0_mat_rows_V_read : STD_LOGIC;
    signal Mat2Array2D_U0_mat_cols_V_read : STD_LOGIC;
    signal Mat2Array2D_U0_mat_data_stream_V_read : STD_LOGIC;
    signal Mat2Array2D_U0_arr_val_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal Mat2Array2D_U0_arr_val_ce0 : STD_LOGIC;
    signal Mat2Array2D_U0_arr_val_we0 : STD_LOGIC;
    signal Mat2Array2D_U0_arr_val_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_channel_done_src1_val : STD_LOGIC;
    signal Mat2Array2D_U0_arr_val_full_n : STD_LOGIC;
    signal compute_U0_ap_start : STD_LOGIC;
    signal compute_U0_ap_done : STD_LOGIC;
    signal compute_U0_ap_continue : STD_LOGIC;
    signal compute_U0_ap_idle : STD_LOGIC;
    signal compute_U0_ap_ready : STD_LOGIC;
    signal compute_U0_src0_val_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal compute_U0_src0_val_ce0 : STD_LOGIC;
    signal compute_U0_src0_rows_read : STD_LOGIC;
    signal compute_U0_src0_cols_read : STD_LOGIC;
    signal compute_U0_src1_val_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal compute_U0_src1_val_ce0 : STD_LOGIC;
    signal compute_U0_src1_rows_read : STD_LOGIC;
    signal compute_U0_src1_cols_read : STD_LOGIC;
    signal compute_U0_thresh_read : STD_LOGIC;
    signal compute_U0_keypoints0_val_pt_x_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal compute_U0_keypoints0_val_pt_x_ce0 : STD_LOGIC;
    signal compute_U0_keypoints0_val_pt_x_we0 : STD_LOGIC;
    signal compute_U0_keypoints0_val_pt_x_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal compute_U0_keypoints0_val_pt_y_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal compute_U0_keypoints0_val_pt_y_ce0 : STD_LOGIC;
    signal compute_U0_keypoints0_val_pt_y_we0 : STD_LOGIC;
    signal compute_U0_keypoints0_val_pt_y_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal compute_U0_keypoints0_val_angle_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal compute_U0_keypoints0_val_angle_V_ce0 : STD_LOGIC;
    signal compute_U0_keypoints0_val_angle_V_we0 : STD_LOGIC;
    signal compute_U0_keypoints0_val_angle_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal compute_U0_keypoints0_val_sigma_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal compute_U0_keypoints0_val_sigma_V_ce0 : STD_LOGIC;
    signal compute_U0_keypoints0_val_sigma_V_we0 : STD_LOGIC;
    signal compute_U0_keypoints0_val_sigma_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal compute_U0_keypoints0_val_octave_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal compute_U0_keypoints0_val_octave_ce0 : STD_LOGIC;
    signal compute_U0_keypoints0_val_octave_we0 : STD_LOGIC;
    signal compute_U0_keypoints0_val_octave_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal compute_U0_keypoints0_val_layer_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal compute_U0_keypoints0_val_layer_ce0 : STD_LOGIC;
    signal compute_U0_keypoints0_val_layer_we0 : STD_LOGIC;
    signal compute_U0_keypoints0_val_layer_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal compute_U0_keypoints1_val_pt_x_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal compute_U0_keypoints1_val_pt_x_ce0 : STD_LOGIC;
    signal compute_U0_keypoints1_val_pt_x_we0 : STD_LOGIC;
    signal compute_U0_keypoints1_val_pt_x_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal compute_U0_keypoints1_val_pt_y_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal compute_U0_keypoints1_val_pt_y_ce0 : STD_LOGIC;
    signal compute_U0_keypoints1_val_pt_y_we0 : STD_LOGIC;
    signal compute_U0_keypoints1_val_pt_y_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal compute_U0_keypoints1_val_angle_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal compute_U0_keypoints1_val_angle_V_ce0 : STD_LOGIC;
    signal compute_U0_keypoints1_val_angle_V_we0 : STD_LOGIC;
    signal compute_U0_keypoints1_val_angle_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal compute_U0_keypoints1_val_sigma_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal compute_U0_keypoints1_val_sigma_V_ce0 : STD_LOGIC;
    signal compute_U0_keypoints1_val_sigma_V_we0 : STD_LOGIC;
    signal compute_U0_keypoints1_val_sigma_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal compute_U0_keypoints1_val_octave_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal compute_U0_keypoints1_val_octave_ce0 : STD_LOGIC;
    signal compute_U0_keypoints1_val_octave_we0 : STD_LOGIC;
    signal compute_U0_keypoints1_val_octave_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal compute_U0_keypoints1_val_layer_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal compute_U0_keypoints1_val_layer_ce0 : STD_LOGIC;
    signal compute_U0_keypoints1_val_layer_we0 : STD_LOGIC;
    signal compute_U0_keypoints1_val_layer_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal compute_U0_descriptors0_val_val_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal compute_U0_descriptors0_val_val_ce0 : STD_LOGIC;
    signal compute_U0_descriptors0_val_val_we0 : STD_LOGIC;
    signal compute_U0_descriptors0_val_val_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal compute_U0_descriptors0_length_read : STD_LOGIC;
    signal compute_U0_descriptors1_val_val_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal compute_U0_descriptors1_val_val_ce0 : STD_LOGIC;
    signal compute_U0_descriptors1_val_val_we0 : STD_LOGIC;
    signal compute_U0_descriptors1_val_val_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal compute_U0_descriptors1_length_read : STD_LOGIC;
    signal compute_U0_matches_val_idx0_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal compute_U0_matches_val_idx0_ce0 : STD_LOGIC;
    signal compute_U0_matches_val_idx0_we0 : STD_LOGIC;
    signal compute_U0_matches_val_idx0_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal compute_U0_matches_val_idx1_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal compute_U0_matches_val_idx1_ce0 : STD_LOGIC;
    signal compute_U0_matches_val_idx1_we0 : STD_LOGIC;
    signal compute_U0_matches_val_idx1_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal compute_U0_matches_length_read : STD_LOGIC;
    signal compute_U0_keypoints0_length_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal compute_U0_keypoints0_length_out_write : STD_LOGIC;
    signal compute_U0_keypoints1_length_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal compute_U0_keypoints1_length_out_write : STD_LOGIC;
    signal compute_U0_matches_length_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal compute_U0_matches_length_out_write : STD_LOGIC;
    signal ap_channel_done_matches_val_idx1 : STD_LOGIC;
    signal compute_U0_matches_val_idx1_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_matches_val_idx1 : STD_LOGIC := '0';
    signal ap_sync_channel_write_matches_val_idx1 : STD_LOGIC;
    signal ap_channel_done_matches_val_idx0 : STD_LOGIC;
    signal compute_U0_matches_val_idx0_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_matches_val_idx0 : STD_LOGIC := '0';
    signal ap_sync_channel_write_matches_val_idx0 : STD_LOGIC;
    signal ap_channel_done_keypoints1_val_pt_y : STD_LOGIC;
    signal compute_U0_keypoints1_val_pt_y_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_keypoints1_val_pt_y : STD_LOGIC := '0';
    signal ap_sync_channel_write_keypoints1_val_pt_y : STD_LOGIC;
    signal ap_channel_done_keypoints1_val_pt_x : STD_LOGIC;
    signal compute_U0_keypoints1_val_pt_x_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_keypoints1_val_pt_x : STD_LOGIC := '0';
    signal ap_sync_channel_write_keypoints1_val_pt_x : STD_LOGIC;
    signal ap_channel_done_keypoints0_val_pt_y : STD_LOGIC;
    signal compute_U0_keypoints0_val_pt_y_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_keypoints0_val_pt_y : STD_LOGIC := '0';
    signal ap_sync_channel_write_keypoints0_val_pt_y : STD_LOGIC;
    signal ap_channel_done_keypoints0_val_pt_x : STD_LOGIC;
    signal compute_U0_keypoints0_val_pt_x_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_keypoints0_val_pt_x : STD_LOGIC := '0';
    signal ap_sync_channel_write_keypoints0_val_pt_x : STD_LOGIC;
    signal Result2Array2D_511_U0_ap_start : STD_LOGIC;
    signal Result2Array2D_511_U0_ap_done : STD_LOGIC;
    signal Result2Array2D_511_U0_ap_continue : STD_LOGIC;
    signal Result2Array2D_511_U0_ap_idle : STD_LOGIC;
    signal Result2Array2D_511_U0_ap_ready : STD_LOGIC;
    signal Result2Array2D_511_U0_keypoints_val_pt_x_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal Result2Array2D_511_U0_keypoints_val_pt_x_ce0 : STD_LOGIC;
    signal Result2Array2D_511_U0_keypoints_val_pt_y_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal Result2Array2D_511_U0_keypoints_val_pt_y_ce0 : STD_LOGIC;
    signal Result2Array2D_511_U0_keypoints_length_read : STD_LOGIC;
    signal Result2Array2D_511_U0_matches_val_idx0_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal Result2Array2D_511_U0_matches_val_idx0_ce0 : STD_LOGIC;
    signal Result2Array2D_511_U0_matches_val_idx1_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal Result2Array2D_511_U0_matches_val_idx1_ce0 : STD_LOGIC;
    signal Result2Array2D_511_U0_matches_length_read : STD_LOGIC;
    signal Result2Array2D_511_U0_dst_val_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal Result2Array2D_511_U0_dst_val_ce0 : STD_LOGIC;
    signal Result2Array2D_511_U0_dst_val_we0 : STD_LOGIC;
    signal Result2Array2D_511_U0_dst_val_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal Result2Array2D_511_U0_dst_val_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal Result2Array2D_511_U0_dst_val_ce1 : STD_LOGIC;
    signal Result2Array2D_511_U0_dst_val_we1 : STD_LOGIC;
    signal Result2Array2D_511_U0_dst_val_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_channel_done_dst0_val : STD_LOGIC;
    signal Result2Array2D_511_U0_dst_val_full_n : STD_LOGIC;
    signal Result2Array2D_511_1_U0_ap_start : STD_LOGIC;
    signal Result2Array2D_511_1_U0_ap_done : STD_LOGIC;
    signal Result2Array2D_511_1_U0_ap_continue : STD_LOGIC;
    signal Result2Array2D_511_1_U0_ap_idle : STD_LOGIC;
    signal Result2Array2D_511_1_U0_ap_ready : STD_LOGIC;
    signal Result2Array2D_511_1_U0_keypoints_val_pt_x_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal Result2Array2D_511_1_U0_keypoints_val_pt_x_ce0 : STD_LOGIC;
    signal Result2Array2D_511_1_U0_keypoints_val_pt_y_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal Result2Array2D_511_1_U0_keypoints_val_pt_y_ce0 : STD_LOGIC;
    signal Result2Array2D_511_1_U0_keypoints_length_read : STD_LOGIC;
    signal Result2Array2D_511_1_U0_dst_val_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal Result2Array2D_511_1_U0_dst_val_ce0 : STD_LOGIC;
    signal Result2Array2D_511_1_U0_dst_val_we0 : STD_LOGIC;
    signal Result2Array2D_511_1_U0_dst_val_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal Result2Array2D_511_1_U0_dst_val_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal Result2Array2D_511_1_U0_dst_val_ce1 : STD_LOGIC;
    signal Result2Array2D_511_1_U0_dst_val_we1 : STD_LOGIC;
    signal Result2Array2D_511_1_U0_dst_val_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_channel_done_dst1_val : STD_LOGIC;
    signal Result2Array2D_511_1_U0_dst_val_full_n : STD_LOGIC;
    signal Array2D2Mat_U0_ap_start : STD_LOGIC;
    signal Array2D2Mat_U0_ap_done : STD_LOGIC;
    signal Array2D2Mat_U0_ap_continue : STD_LOGIC;
    signal Array2D2Mat_U0_ap_idle : STD_LOGIC;
    signal Array2D2Mat_U0_ap_ready : STD_LOGIC;
    signal Array2D2Mat_U0_start_out : STD_LOGIC;
    signal Array2D2Mat_U0_start_write : STD_LOGIC;
    signal Array2D2Mat_U0_arr_val_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal Array2D2Mat_U0_arr_val_ce0 : STD_LOGIC;
    signal Array2D2Mat_U0_mat_data_stream_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal Array2D2Mat_U0_mat_data_stream_V_write : STD_LOGIC;
    signal Array2D2Mat_U0_mat_rows_V_din : STD_LOGIC_VECTOR (6 downto 0);
    signal Array2D2Mat_U0_mat_rows_V_write : STD_LOGIC;
    signal Array2D2Mat_U0_mat_cols_V_din : STD_LOGIC_VECTOR (8 downto 0);
    signal Array2D2Mat_U0_mat_cols_V_write : STD_LOGIC;
    signal Array2D2Mat_1_U0_ap_start : STD_LOGIC;
    signal Array2D2Mat_1_U0_ap_done : STD_LOGIC;
    signal Array2D2Mat_1_U0_ap_continue : STD_LOGIC;
    signal Array2D2Mat_1_U0_ap_idle : STD_LOGIC;
    signal Array2D2Mat_1_U0_ap_ready : STD_LOGIC;
    signal Array2D2Mat_1_U0_start_out : STD_LOGIC;
    signal Array2D2Mat_1_U0_start_write : STD_LOGIC;
    signal Array2D2Mat_1_U0_arr_val_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal Array2D2Mat_1_U0_arr_val_ce0 : STD_LOGIC;
    signal Array2D2Mat_1_U0_mat_data_stream_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal Array2D2Mat_1_U0_mat_data_stream_V_write : STD_LOGIC;
    signal Array2D2Mat_1_U0_mat_rows_V_din : STD_LOGIC_VECTOR (5 downto 0);
    signal Array2D2Mat_1_U0_mat_rows_V_write : STD_LOGIC;
    signal Array2D2Mat_1_U0_mat_cols_V_din : STD_LOGIC_VECTOR (8 downto 0);
    signal Array2D2Mat_1_U0_mat_cols_V_write : STD_LOGIC;
    signal Mat2AXIvideo_U0_ap_start : STD_LOGIC;
    signal Mat2AXIvideo_U0_ap_done : STD_LOGIC;
    signal Mat2AXIvideo_U0_ap_continue : STD_LOGIC;
    signal Mat2AXIvideo_U0_ap_idle : STD_LOGIC;
    signal Mat2AXIvideo_U0_ap_ready : STD_LOGIC;
    signal Mat2AXIvideo_U0_img_rows_V_read : STD_LOGIC;
    signal Mat2AXIvideo_U0_img_cols_V_read : STD_LOGIC;
    signal Mat2AXIvideo_U0_img_data_stream_V_read : STD_LOGIC;
    signal Mat2AXIvideo_U0_dst0_axis_TDATA : STD_LOGIC_VECTOR (7 downto 0);
    signal Mat2AXIvideo_U0_dst0_axis_TVALID : STD_LOGIC;
    signal Mat2AXIvideo_U0_dst0_axis_TKEEP : STD_LOGIC_VECTOR (0 downto 0);
    signal Mat2AXIvideo_U0_dst0_axis_TSTRB : STD_LOGIC_VECTOR (0 downto 0);
    signal Mat2AXIvideo_U0_dst0_axis_TUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Mat2AXIvideo_U0_dst0_axis_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal Mat2AXIvideo_U0_dst0_axis_TID : STD_LOGIC_VECTOR (0 downto 0);
    signal Mat2AXIvideo_U0_dst0_axis_TDEST : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sync_continue : STD_LOGIC;
    signal Mat2AXIvideo_1_U0_ap_start : STD_LOGIC;
    signal Mat2AXIvideo_1_U0_ap_done : STD_LOGIC;
    signal Mat2AXIvideo_1_U0_ap_continue : STD_LOGIC;
    signal Mat2AXIvideo_1_U0_ap_idle : STD_LOGIC;
    signal Mat2AXIvideo_1_U0_ap_ready : STD_LOGIC;
    signal Mat2AXIvideo_1_U0_img_rows_V_read : STD_LOGIC;
    signal Mat2AXIvideo_1_U0_img_cols_V_read : STD_LOGIC;
    signal Mat2AXIvideo_1_U0_img_data_stream_V_read : STD_LOGIC;
    signal Mat2AXIvideo_1_U0_dst1_axis_TDATA : STD_LOGIC_VECTOR (7 downto 0);
    signal Mat2AXIvideo_1_U0_dst1_axis_TVALID : STD_LOGIC;
    signal Mat2AXIvideo_1_U0_dst1_axis_TKEEP : STD_LOGIC_VECTOR (0 downto 0);
    signal Mat2AXIvideo_1_U0_dst1_axis_TSTRB : STD_LOGIC_VECTOR (0 downto 0);
    signal Mat2AXIvideo_1_U0_dst1_axis_TUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Mat2AXIvideo_1_U0_dst1_axis_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal Mat2AXIvideo_1_U0_dst1_axis_TID : STD_LOGIC_VECTOR (0 downto 0);
    signal Mat2AXIvideo_1_U0_dst1_axis_TDEST : STD_LOGIC_VECTOR (0 downto 0);
    signal src0_val_i_full_n : STD_LOGIC;
    signal src0_val_t_empty_n : STD_LOGIC;
    signal src1_val_i_full_n : STD_LOGIC;
    signal src1_val_t_empty_n : STD_LOGIC;
    signal keypoints0_val_pt_x_i_full_n : STD_LOGIC;
    signal keypoints0_val_pt_x_t_empty_n : STD_LOGIC;
    signal keypoints0_val_pt_y_i_full_n : STD_LOGIC;
    signal keypoints0_val_pt_y_t_empty_n : STD_LOGIC;
    signal keypoints1_val_pt_x_i_full_n : STD_LOGIC;
    signal keypoints1_val_pt_x_t_empty_n : STD_LOGIC;
    signal keypoints1_val_pt_y_i_full_n : STD_LOGIC;
    signal keypoints1_val_pt_y_t_empty_n : STD_LOGIC;
    signal matches_val_idx0_i_full_n : STD_LOGIC;
    signal matches_val_idx0_t_empty_n : STD_LOGIC;
    signal matches_val_idx1_i_full_n : STD_LOGIC;
    signal matches_val_idx1_t_empty_n : STD_LOGIC;
    signal dst0_val_i_full_n : STD_LOGIC;
    signal dst0_val_t_empty_n : STD_LOGIC;
    signal dst1_val_i_full_n : STD_LOGIC;
    signal dst1_val_t_empty_n : STD_LOGIC;
    signal p_src0_rows_V_c_full_n : STD_LOGIC;
    signal p_src0_rows_V_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal p_src0_rows_V_c_empty_n : STD_LOGIC;
    signal p_src0_cols_V_c_full_n : STD_LOGIC;
    signal p_src0_cols_V_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal p_src0_cols_V_c_empty_n : STD_LOGIC;
    signal p_src1_rows_V_c_full_n : STD_LOGIC;
    signal p_src1_rows_V_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal p_src1_rows_V_c_empty_n : STD_LOGIC;
    signal p_src1_cols_V_c_full_n : STD_LOGIC;
    signal p_src1_cols_V_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal p_src1_cols_V_c_empty_n : STD_LOGIC;
    signal src1_rows_c_full_n : STD_LOGIC;
    signal src1_rows_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal src1_rows_c_empty_n : STD_LOGIC;
    signal src1_cols_c_full_n : STD_LOGIC;
    signal src1_cols_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal src1_cols_c_empty_n : STD_LOGIC;
    signal descriptors0_length_s_full_n : STD_LOGIC;
    signal descriptors0_length_s_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal descriptors0_length_s_empty_n : STD_LOGIC;
    signal descriptors1_length_s_full_n : STD_LOGIC;
    signal descriptors1_length_s_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal descriptors1_length_s_empty_n : STD_LOGIC;
    signal matches_length_c_full_n : STD_LOGIC;
    signal matches_length_c_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal matches_length_c_empty_n : STD_LOGIC;
    signal thresh_c_full_n : STD_LOGIC;
    signal thresh_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal thresh_c_empty_n : STD_LOGIC;
    signal p_src0_data_stream_0_full_n : STD_LOGIC;
    signal p_src0_data_stream_0_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal p_src0_data_stream_0_empty_n : STD_LOGIC;
    signal p_src0_rows_V_c36_full_n : STD_LOGIC;
    signal p_src0_rows_V_c36_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal p_src0_rows_V_c36_empty_n : STD_LOGIC;
    signal p_src0_cols_V_c37_full_n : STD_LOGIC;
    signal p_src0_cols_V_c37_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal p_src0_cols_V_c37_empty_n : STD_LOGIC;
    signal p_src1_data_stream_0_full_n : STD_LOGIC;
    signal p_src1_data_stream_0_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal p_src1_data_stream_0_empty_n : STD_LOGIC;
    signal p_src1_rows_V_c38_full_n : STD_LOGIC;
    signal p_src1_rows_V_c38_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal p_src1_rows_V_c38_empty_n : STD_LOGIC;
    signal p_src1_cols_V_c39_full_n : STD_LOGIC;
    signal p_src1_cols_V_c39_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal p_src1_cols_V_c39_empty_n : STD_LOGIC;
    signal src0_rows_c_full_n : STD_LOGIC;
    signal src0_rows_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal src0_rows_c_empty_n : STD_LOGIC;
    signal src0_cols_c_full_n : STD_LOGIC;
    signal src0_cols_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal src0_cols_c_empty_n : STD_LOGIC;
    signal keypoints0_length_c_full_n : STD_LOGIC;
    signal keypoints0_length_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal keypoints0_length_c_empty_n : STD_LOGIC;
    signal keypoints1_length_c_full_n : STD_LOGIC;
    signal keypoints1_length_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal keypoints1_length_c_empty_n : STD_LOGIC;
    signal matches_length_c40_full_n : STD_LOGIC;
    signal matches_length_c40_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal matches_length_c40_empty_n : STD_LOGIC;
    signal p_dst0_data_stream_0_full_n : STD_LOGIC;
    signal p_dst0_data_stream_0_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal p_dst0_data_stream_0_empty_n : STD_LOGIC;
    signal p_dst0_rows_V_c_full_n : STD_LOGIC;
    signal p_dst0_rows_V_c_dout : STD_LOGIC_VECTOR (6 downto 0);
    signal p_dst0_rows_V_c_empty_n : STD_LOGIC;
    signal p_dst0_cols_V_c_full_n : STD_LOGIC;
    signal p_dst0_cols_V_c_dout : STD_LOGIC_VECTOR (8 downto 0);
    signal p_dst0_cols_V_c_empty_n : STD_LOGIC;
    signal p_dst1_data_stream_0_full_n : STD_LOGIC;
    signal p_dst1_data_stream_0_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal p_dst1_data_stream_0_empty_n : STD_LOGIC;
    signal p_dst1_rows_V_c_full_n : STD_LOGIC;
    signal p_dst1_rows_V_c_dout : STD_LOGIC_VECTOR (5 downto 0);
    signal p_dst1_rows_V_c_empty_n : STD_LOGIC;
    signal p_dst1_cols_V_c_full_n : STD_LOGIC;
    signal p_dst1_cols_V_c_dout : STD_LOGIC_VECTOR (8 downto 0);
    signal p_dst1_cols_V_c_empty_n : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal ap_sync_reg_AXIvideo2Mat616_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_AXIvideo2Mat616_U0_ap_ready : STD_LOGIC;
    signal AXIvideo2Mat616_U0_ap_ready_count : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal ap_sync_reg_AXIvideo2Mat_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_AXIvideo2Mat_U0_ap_ready : STD_LOGIC;
    signal AXIvideo2Mat_U0_ap_ready_count : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal ap_sync_reg_Block_Mat_exit412_pr_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_Block_Mat_exit412_pr_U0_ap_ready : STD_LOGIC;
    signal Block_Mat_exit412_pr_U0_ap_ready_count : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal Block_Mat_exit412_pr_U0_start_full_n : STD_LOGIC;
    signal Block_Mat_exit412_pr_U0_start_write : STD_LOGIC;
    signal start_for_Mat2Array2D617_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Mat2Array2D617_U0_full_n : STD_LOGIC;
    signal start_for_Mat2Array2D617_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Mat2Array2D617_U0_empty_n : STD_LOGIC;
    signal start_for_Mat2Array2D_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Mat2Array2D_U0_full_n : STD_LOGIC;
    signal start_for_Mat2Array2D_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Mat2Array2D_U0_empty_n : STD_LOGIC;
    signal Mat2Array2D617_U0_start_full_n : STD_LOGIC;
    signal Mat2Array2D617_U0_start_write : STD_LOGIC;
    signal Mat2Array2D_U0_start_full_n : STD_LOGIC;
    signal Mat2Array2D_U0_start_write : STD_LOGIC;
    signal compute_U0_start_full_n : STD_LOGIC;
    signal compute_U0_start_write : STD_LOGIC;
    signal Result2Array2D_511_U0_start_full_n : STD_LOGIC;
    signal Result2Array2D_511_U0_start_write : STD_LOGIC;
    signal Result2Array2D_511_1_U0_start_full_n : STD_LOGIC;
    signal Result2Array2D_511_1_U0_start_write : STD_LOGIC;
    signal start_for_Mat2AXIvideo_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Mat2AXIvideo_U0_full_n : STD_LOGIC;
    signal start_for_Mat2AXIvideo_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Mat2AXIvideo_U0_empty_n : STD_LOGIC;
    signal start_for_Mat2AXIvideo_1_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Mat2AXIvideo_1_U0_full_n : STD_LOGIC;
    signal start_for_Mat2AXIvideo_1_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Mat2AXIvideo_1_U0_empty_n : STD_LOGIC;
    signal Mat2AXIvideo_U0_start_full_n : STD_LOGIC;
    signal Mat2AXIvideo_U0_start_write : STD_LOGIC;
    signal Mat2AXIvideo_1_U0_start_full_n : STD_LOGIC;
    signal Mat2AXIvideo_1_U0_start_write : STD_LOGIC;

    component Block_Mat_exit412_pr IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        rows0 : IN STD_LOGIC_VECTOR (31 downto 0);
        cols0 : IN STD_LOGIC_VECTOR (31 downto 0);
        rows1 : IN STD_LOGIC_VECTOR (31 downto 0);
        cols1 : IN STD_LOGIC_VECTOR (31 downto 0);
        thresh : IN STD_LOGIC_VECTOR (31 downto 0);
        p_src0_rows_V_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        p_src0_rows_V_out_full_n : IN STD_LOGIC;
        p_src0_rows_V_out_write : OUT STD_LOGIC;
        p_src0_cols_V_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        p_src0_cols_V_out_full_n : IN STD_LOGIC;
        p_src0_cols_V_out_write : OUT STD_LOGIC;
        p_src1_rows_V_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        p_src1_rows_V_out_full_n : IN STD_LOGIC;
        p_src1_rows_V_out_write : OUT STD_LOGIC;
        p_src1_cols_V_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        p_src1_cols_V_out_full_n : IN STD_LOGIC;
        p_src1_cols_V_out_write : OUT STD_LOGIC;
        src1_rows_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        src1_rows_out_full_n : IN STD_LOGIC;
        src1_rows_out_write : OUT STD_LOGIC;
        src1_cols_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        src1_cols_out_full_n : IN STD_LOGIC;
        src1_cols_out_write : OUT STD_LOGIC;
        descriptors0_length_out_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        descriptors0_length_out_full_n : IN STD_LOGIC;
        descriptors0_length_out_write : OUT STD_LOGIC;
        descriptors1_length_out_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        descriptors1_length_out_full_n : IN STD_LOGIC;
        descriptors1_length_out_write : OUT STD_LOGIC;
        matches_length_out_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        matches_length_out_full_n : IN STD_LOGIC;
        matches_length_out_write : OUT STD_LOGIC;
        thresh_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        thresh_out_full_n : IN STD_LOGIC;
        thresh_out_write : OUT STD_LOGIC );
    end component;


    component AXIvideo2Mat616 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        src0_axis_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
        src0_axis_TVALID : IN STD_LOGIC;
        src0_axis_TREADY : OUT STD_LOGIC;
        src0_axis_TKEEP : IN STD_LOGIC_VECTOR (0 downto 0);
        src0_axis_TSTRB : IN STD_LOGIC_VECTOR (0 downto 0);
        src0_axis_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        src0_axis_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        src0_axis_TID : IN STD_LOGIC_VECTOR (0 downto 0);
        src0_axis_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
        img_rows_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        img_rows_V_empty_n : IN STD_LOGIC;
        img_rows_V_read : OUT STD_LOGIC;
        img_cols_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        img_cols_V_empty_n : IN STD_LOGIC;
        img_cols_V_read : OUT STD_LOGIC;
        img_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_data_stream_V_full_n : IN STD_LOGIC;
        img_data_stream_V_write : OUT STD_LOGIC;
        img_rows_V_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        img_rows_V_out_full_n : IN STD_LOGIC;
        img_rows_V_out_write : OUT STD_LOGIC;
        img_cols_V_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        img_cols_V_out_full_n : IN STD_LOGIC;
        img_cols_V_out_write : OUT STD_LOGIC );
    end component;


    component AXIvideo2Mat IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        src1_axis_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
        src1_axis_TVALID : IN STD_LOGIC;
        src1_axis_TREADY : OUT STD_LOGIC;
        src1_axis_TKEEP : IN STD_LOGIC_VECTOR (0 downto 0);
        src1_axis_TSTRB : IN STD_LOGIC_VECTOR (0 downto 0);
        src1_axis_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        src1_axis_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        src1_axis_TID : IN STD_LOGIC_VECTOR (0 downto 0);
        src1_axis_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
        img_rows_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        img_rows_V_empty_n : IN STD_LOGIC;
        img_rows_V_read : OUT STD_LOGIC;
        img_cols_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        img_cols_V_empty_n : IN STD_LOGIC;
        img_cols_V_read : OUT STD_LOGIC;
        img_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_data_stream_V_full_n : IN STD_LOGIC;
        img_data_stream_V_write : OUT STD_LOGIC;
        img_rows_V_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        img_rows_V_out_full_n : IN STD_LOGIC;
        img_rows_V_out_write : OUT STD_LOGIC;
        img_cols_V_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        img_cols_V_out_full_n : IN STD_LOGIC;
        img_cols_V_out_write : OUT STD_LOGIC );
    end component;


    component Mat2Array2D617 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        mat_rows_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        mat_rows_V_empty_n : IN STD_LOGIC;
        mat_rows_V_read : OUT STD_LOGIC;
        mat_cols_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        mat_cols_V_empty_n : IN STD_LOGIC;
        mat_cols_V_read : OUT STD_LOGIC;
        mat_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        mat_data_stream_V_empty_n : IN STD_LOGIC;
        mat_data_stream_V_read : OUT STD_LOGIC;
        arr_val_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        arr_val_ce0 : OUT STD_LOGIC;
        arr_val_we0 : OUT STD_LOGIC;
        arr_val_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        arr_rows_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        arr_rows_out_full_n : IN STD_LOGIC;
        arr_rows_out_write : OUT STD_LOGIC;
        arr_cols_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        arr_cols_out_full_n : IN STD_LOGIC;
        arr_cols_out_write : OUT STD_LOGIC );
    end component;


    component Mat2Array2D IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        mat_rows_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        mat_rows_V_empty_n : IN STD_LOGIC;
        mat_rows_V_read : OUT STD_LOGIC;
        mat_cols_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        mat_cols_V_empty_n : IN STD_LOGIC;
        mat_cols_V_read : OUT STD_LOGIC;
        mat_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        mat_data_stream_V_empty_n : IN STD_LOGIC;
        mat_data_stream_V_read : OUT STD_LOGIC;
        arr_val_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        arr_val_ce0 : OUT STD_LOGIC;
        arr_val_we0 : OUT STD_LOGIC;
        arr_val_d0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component compute IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        src0_val_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        src0_val_ce0 : OUT STD_LOGIC;
        src0_val_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        src0_rows_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        src0_rows_empty_n : IN STD_LOGIC;
        src0_rows_read : OUT STD_LOGIC;
        src0_cols_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        src0_cols_empty_n : IN STD_LOGIC;
        src0_cols_read : OUT STD_LOGIC;
        src1_val_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        src1_val_ce0 : OUT STD_LOGIC;
        src1_val_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        src1_rows_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        src1_rows_empty_n : IN STD_LOGIC;
        src1_rows_read : OUT STD_LOGIC;
        src1_cols_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        src1_cols_empty_n : IN STD_LOGIC;
        src1_cols_read : OUT STD_LOGIC;
        thresh_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        thresh_empty_n : IN STD_LOGIC;
        thresh_read : OUT STD_LOGIC;
        keypoints0_val_pt_x_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        keypoints0_val_pt_x_ce0 : OUT STD_LOGIC;
        keypoints0_val_pt_x_we0 : OUT STD_LOGIC;
        keypoints0_val_pt_x_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        keypoints0_val_pt_x_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        keypoints0_val_pt_y_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        keypoints0_val_pt_y_ce0 : OUT STD_LOGIC;
        keypoints0_val_pt_y_we0 : OUT STD_LOGIC;
        keypoints0_val_pt_y_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        keypoints0_val_pt_y_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        keypoints0_val_angle_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        keypoints0_val_angle_V_ce0 : OUT STD_LOGIC;
        keypoints0_val_angle_V_we0 : OUT STD_LOGIC;
        keypoints0_val_angle_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        keypoints0_val_angle_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        keypoints0_val_sigma_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        keypoints0_val_sigma_V_ce0 : OUT STD_LOGIC;
        keypoints0_val_sigma_V_we0 : OUT STD_LOGIC;
        keypoints0_val_sigma_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        keypoints0_val_sigma_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        keypoints0_val_octave_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        keypoints0_val_octave_ce0 : OUT STD_LOGIC;
        keypoints0_val_octave_we0 : OUT STD_LOGIC;
        keypoints0_val_octave_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        keypoints0_val_octave_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        keypoints0_val_layer_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        keypoints0_val_layer_ce0 : OUT STD_LOGIC;
        keypoints0_val_layer_we0 : OUT STD_LOGIC;
        keypoints0_val_layer_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        keypoints0_val_layer_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        keypoints1_val_pt_x_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        keypoints1_val_pt_x_ce0 : OUT STD_LOGIC;
        keypoints1_val_pt_x_we0 : OUT STD_LOGIC;
        keypoints1_val_pt_x_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        keypoints1_val_pt_x_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        keypoints1_val_pt_y_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        keypoints1_val_pt_y_ce0 : OUT STD_LOGIC;
        keypoints1_val_pt_y_we0 : OUT STD_LOGIC;
        keypoints1_val_pt_y_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        keypoints1_val_pt_y_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        keypoints1_val_angle_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        keypoints1_val_angle_V_ce0 : OUT STD_LOGIC;
        keypoints1_val_angle_V_we0 : OUT STD_LOGIC;
        keypoints1_val_angle_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        keypoints1_val_angle_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        keypoints1_val_sigma_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        keypoints1_val_sigma_V_ce0 : OUT STD_LOGIC;
        keypoints1_val_sigma_V_we0 : OUT STD_LOGIC;
        keypoints1_val_sigma_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        keypoints1_val_sigma_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        keypoints1_val_octave_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        keypoints1_val_octave_ce0 : OUT STD_LOGIC;
        keypoints1_val_octave_we0 : OUT STD_LOGIC;
        keypoints1_val_octave_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        keypoints1_val_octave_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        keypoints1_val_layer_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        keypoints1_val_layer_ce0 : OUT STD_LOGIC;
        keypoints1_val_layer_we0 : OUT STD_LOGIC;
        keypoints1_val_layer_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        keypoints1_val_layer_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        descriptors0_val_val_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        descriptors0_val_val_ce0 : OUT STD_LOGIC;
        descriptors0_val_val_we0 : OUT STD_LOGIC;
        descriptors0_val_val_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        descriptors0_val_val_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        descriptors0_length_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        descriptors0_length_empty_n : IN STD_LOGIC;
        descriptors0_length_read : OUT STD_LOGIC;
        descriptors1_val_val_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        descriptors1_val_val_ce0 : OUT STD_LOGIC;
        descriptors1_val_val_we0 : OUT STD_LOGIC;
        descriptors1_val_val_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        descriptors1_val_val_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        descriptors1_length_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        descriptors1_length_empty_n : IN STD_LOGIC;
        descriptors1_length_read : OUT STD_LOGIC;
        matches_val_idx0_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        matches_val_idx0_ce0 : OUT STD_LOGIC;
        matches_val_idx0_we0 : OUT STD_LOGIC;
        matches_val_idx0_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        matches_val_idx1_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        matches_val_idx1_ce0 : OUT STD_LOGIC;
        matches_val_idx1_we0 : OUT STD_LOGIC;
        matches_val_idx1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        matches_length_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        matches_length_empty_n : IN STD_LOGIC;
        matches_length_read : OUT STD_LOGIC;
        keypoints0_length_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        keypoints0_length_out_full_n : IN STD_LOGIC;
        keypoints0_length_out_write : OUT STD_LOGIC;
        keypoints1_length_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        keypoints1_length_out_full_n : IN STD_LOGIC;
        keypoints1_length_out_write : OUT STD_LOGIC;
        matches_length_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        matches_length_out_full_n : IN STD_LOGIC;
        matches_length_out_write : OUT STD_LOGIC );
    end component;


    component Result2Array2D_511_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        keypoints_val_pt_x_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        keypoints_val_pt_x_ce0 : OUT STD_LOGIC;
        keypoints_val_pt_x_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        keypoints_val_pt_y_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        keypoints_val_pt_y_ce0 : OUT STD_LOGIC;
        keypoints_val_pt_y_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        keypoints_length_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        keypoints_length_empty_n : IN STD_LOGIC;
        keypoints_length_read : OUT STD_LOGIC;
        matches_val_idx0_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        matches_val_idx0_ce0 : OUT STD_LOGIC;
        matches_val_idx0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        matches_val_idx1_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        matches_val_idx1_ce0 : OUT STD_LOGIC;
        matches_val_idx1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        matches_length_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        matches_length_empty_n : IN STD_LOGIC;
        matches_length_read : OUT STD_LOGIC;
        dst_val_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        dst_val_ce0 : OUT STD_LOGIC;
        dst_val_we0 : OUT STD_LOGIC;
        dst_val_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        dst_val_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        dst_val_ce1 : OUT STD_LOGIC;
        dst_val_we1 : OUT STD_LOGIC;
        dst_val_d1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component Result2Array2D_511_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        keypoints_val_pt_x_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        keypoints_val_pt_x_ce0 : OUT STD_LOGIC;
        keypoints_val_pt_x_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        keypoints_val_pt_y_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        keypoints_val_pt_y_ce0 : OUT STD_LOGIC;
        keypoints_val_pt_y_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        keypoints_length_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        keypoints_length_empty_n : IN STD_LOGIC;
        keypoints_length_read : OUT STD_LOGIC;
        dst_val_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        dst_val_ce0 : OUT STD_LOGIC;
        dst_val_we0 : OUT STD_LOGIC;
        dst_val_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        dst_val_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        dst_val_ce1 : OUT STD_LOGIC;
        dst_val_we1 : OUT STD_LOGIC;
        dst_val_d1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component Array2D2Mat IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        arr_val_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        arr_val_ce0 : OUT STD_LOGIC;
        arr_val_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        mat_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        mat_data_stream_V_full_n : IN STD_LOGIC;
        mat_data_stream_V_write : OUT STD_LOGIC;
        mat_rows_V_din : OUT STD_LOGIC_VECTOR (6 downto 0);
        mat_rows_V_full_n : IN STD_LOGIC;
        mat_rows_V_write : OUT STD_LOGIC;
        mat_cols_V_din : OUT STD_LOGIC_VECTOR (8 downto 0);
        mat_cols_V_full_n : IN STD_LOGIC;
        mat_cols_V_write : OUT STD_LOGIC );
    end component;


    component Array2D2Mat_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        arr_val_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        arr_val_ce0 : OUT STD_LOGIC;
        arr_val_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        mat_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        mat_data_stream_V_full_n : IN STD_LOGIC;
        mat_data_stream_V_write : OUT STD_LOGIC;
        mat_rows_V_din : OUT STD_LOGIC_VECTOR (5 downto 0);
        mat_rows_V_full_n : IN STD_LOGIC;
        mat_rows_V_write : OUT STD_LOGIC;
        mat_cols_V_din : OUT STD_LOGIC_VECTOR (8 downto 0);
        mat_cols_V_full_n : IN STD_LOGIC;
        mat_cols_V_write : OUT STD_LOGIC );
    end component;


    component Mat2AXIvideo IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        img_rows_V_dout : IN STD_LOGIC_VECTOR (6 downto 0);
        img_rows_V_empty_n : IN STD_LOGIC;
        img_rows_V_read : OUT STD_LOGIC;
        img_cols_V_dout : IN STD_LOGIC_VECTOR (8 downto 0);
        img_cols_V_empty_n : IN STD_LOGIC;
        img_cols_V_read : OUT STD_LOGIC;
        img_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        img_data_stream_V_empty_n : IN STD_LOGIC;
        img_data_stream_V_read : OUT STD_LOGIC;
        dst0_axis_TDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
        dst0_axis_TVALID : OUT STD_LOGIC;
        dst0_axis_TREADY : IN STD_LOGIC;
        dst0_axis_TKEEP : OUT STD_LOGIC_VECTOR (0 downto 0);
        dst0_axis_TSTRB : OUT STD_LOGIC_VECTOR (0 downto 0);
        dst0_axis_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        dst0_axis_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
        dst0_axis_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
        dst0_axis_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component Mat2AXIvideo_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        img_rows_V_dout : IN STD_LOGIC_VECTOR (5 downto 0);
        img_rows_V_empty_n : IN STD_LOGIC;
        img_rows_V_read : OUT STD_LOGIC;
        img_cols_V_dout : IN STD_LOGIC_VECTOR (8 downto 0);
        img_cols_V_empty_n : IN STD_LOGIC;
        img_cols_V_read : OUT STD_LOGIC;
        img_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        img_data_stream_V_empty_n : IN STD_LOGIC;
        img_data_stream_V_read : OUT STD_LOGIC;
        dst1_axis_TDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
        dst1_axis_TVALID : OUT STD_LOGIC;
        dst1_axis_TREADY : IN STD_LOGIC;
        dst1_axis_TKEEP : OUT STD_LOGIC_VECTOR (0 downto 0);
        dst1_axis_TSTRB : OUT STD_LOGIC_VECTOR (0 downto 0);
        dst1_axis_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        dst1_axis_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
        dst1_axis_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
        dst1_axis_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component SIFT2_Core_src0_val IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (15 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (15 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component SIFT2_Core_dst0_val IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        i_address1 : IN STD_LOGIC_VECTOR (11 downto 0);
        i_ce1 : IN STD_LOGIC;
        i_we1 : IN STD_LOGIC;
        i_d1 : IN STD_LOGIC_VECTOR (7 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        t_address1 : IN STD_LOGIC_VECTOR (11 downto 0);
        t_ce1 : IN STD_LOGIC;
        t_we1 : IN STD_LOGIC;
        t_d1 : IN STD_LOGIC_VECTOR (7 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component SIFT2_Core_dst1_val IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        i_address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        i_ce1 : IN STD_LOGIC;
        i_we1 : IN STD_LOGIC;
        i_d1 : IN STD_LOGIC_VECTOR (7 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        t_address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        t_ce1 : IN STD_LOGIC;
        t_we1 : IN STD_LOGIC;
        t_d1 : IN STD_LOGIC_VECTOR (7 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component SIFT2_Core_keypoibGp IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component SIFT2_Core_keypoibIp IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component SIFT2_Core_keypoibKp IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component SIFT2_Core_describSr IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component fifo_w32_d2_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w32_d4_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w1_d4_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w8_d2_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w7_d2_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (6 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (6 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w9_d2_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (8 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (8 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w6_d2_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (5 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (5 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Mat2ArrbWr IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Mat2ArrbXr IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Mat2AXIbYs IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Mat2AXIbZs IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component SIFT2_Core_AXILiteS_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC;
        rows0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        cols0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        rows1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        cols1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        thresh : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    SIFT2_Core_AXILiteS_s_axi_U : component SIFT2_Core_AXILiteS_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_AXILITES_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_AXILITES_DATA_WIDTH)
    port map (
        AWVALID => s_axi_AXILiteS_AWVALID,
        AWREADY => s_axi_AXILiteS_AWREADY,
        AWADDR => s_axi_AXILiteS_AWADDR,
        WVALID => s_axi_AXILiteS_WVALID,
        WREADY => s_axi_AXILiteS_WREADY,
        WDATA => s_axi_AXILiteS_WDATA,
        WSTRB => s_axi_AXILiteS_WSTRB,
        ARVALID => s_axi_AXILiteS_ARVALID,
        ARREADY => s_axi_AXILiteS_ARREADY,
        ARADDR => s_axi_AXILiteS_ARADDR,
        RVALID => s_axi_AXILiteS_RVALID,
        RREADY => s_axi_AXILiteS_RREADY,
        RDATA => s_axi_AXILiteS_RDATA,
        RRESP => s_axi_AXILiteS_RRESP,
        BVALID => s_axi_AXILiteS_BVALID,
        BREADY => s_axi_AXILiteS_BREADY,
        BRESP => s_axi_AXILiteS_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle,
        rows0 => rows0,
        cols0 => cols0,
        rows1 => rows1,
        cols1 => cols1,
        thresh => thresh);

    src0_val_U : component SIFT2_Core_src0_val
    generic map (
        DataWidth => 8,
        AddressRange => 65536,
        AddressWidth => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => Mat2Array2D617_U0_arr_val_address0,
        i_ce0 => Mat2Array2D617_U0_arr_val_ce0,
        i_we0 => Mat2Array2D617_U0_arr_val_we0,
        i_d0 => Mat2Array2D617_U0_arr_val_d0,
        i_q0 => src0_val_i_q0,
        t_address0 => compute_U0_src0_val_address0,
        t_ce0 => compute_U0_src0_val_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv8_0,
        t_q0 => src0_val_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => src0_val_i_full_n,
        i_write => Mat2Array2D617_U0_ap_done,
        t_empty_n => src0_val_t_empty_n,
        t_read => compute_U0_ap_ready);

    src1_val_U : component SIFT2_Core_src0_val
    generic map (
        DataWidth => 8,
        AddressRange => 65536,
        AddressWidth => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => Mat2Array2D_U0_arr_val_address0,
        i_ce0 => Mat2Array2D_U0_arr_val_ce0,
        i_we0 => Mat2Array2D_U0_arr_val_we0,
        i_d0 => Mat2Array2D_U0_arr_val_d0,
        i_q0 => src1_val_i_q0,
        t_address0 => compute_U0_src1_val_address0,
        t_ce0 => compute_U0_src1_val_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv8_0,
        t_q0 => src1_val_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => src1_val_i_full_n,
        i_write => Mat2Array2D_U0_ap_done,
        t_empty_n => src1_val_t_empty_n,
        t_read => compute_U0_ap_ready);

    dst0_val_U : component SIFT2_Core_dst0_val
    generic map (
        DataWidth => 8,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => Result2Array2D_511_U0_dst_val_address0,
        i_ce0 => Result2Array2D_511_U0_dst_val_ce0,
        i_we0 => Result2Array2D_511_U0_dst_val_we0,
        i_d0 => Result2Array2D_511_U0_dst_val_d0,
        i_q0 => dst0_val_i_q0,
        i_address1 => Result2Array2D_511_U0_dst_val_address1,
        i_ce1 => Result2Array2D_511_U0_dst_val_ce1,
        i_we1 => Result2Array2D_511_U0_dst_val_we1,
        i_d1 => Result2Array2D_511_U0_dst_val_d1,
        t_address0 => Array2D2Mat_U0_arr_val_address0,
        t_ce0 => Array2D2Mat_U0_arr_val_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv8_0,
        t_q0 => dst0_val_t_q0,
        t_address1 => ap_const_lv12_0,
        t_ce1 => ap_const_logic_0,
        t_we1 => ap_const_logic_0,
        t_d1 => ap_const_lv8_0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => dst0_val_i_full_n,
        i_write => Result2Array2D_511_U0_ap_done,
        t_empty_n => dst0_val_t_empty_n,
        t_read => Array2D2Mat_U0_ap_ready);

    dst1_val_U : component SIFT2_Core_dst1_val
    generic map (
        DataWidth => 8,
        AddressRange => 2048,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => Result2Array2D_511_1_U0_dst_val_address0,
        i_ce0 => Result2Array2D_511_1_U0_dst_val_ce0,
        i_we0 => Result2Array2D_511_1_U0_dst_val_we0,
        i_d0 => Result2Array2D_511_1_U0_dst_val_d0,
        i_q0 => dst1_val_i_q0,
        i_address1 => Result2Array2D_511_1_U0_dst_val_address1,
        i_ce1 => Result2Array2D_511_1_U0_dst_val_ce1,
        i_we1 => Result2Array2D_511_1_U0_dst_val_we1,
        i_d1 => Result2Array2D_511_1_U0_dst_val_d1,
        t_address0 => Array2D2Mat_1_U0_arr_val_address0,
        t_ce0 => Array2D2Mat_1_U0_arr_val_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv8_0,
        t_q0 => dst1_val_t_q0,
        t_address1 => ap_const_lv11_0,
        t_ce1 => ap_const_logic_0,
        t_we1 => ap_const_logic_0,
        t_d1 => ap_const_lv8_0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => dst1_val_i_full_n,
        i_write => Result2Array2D_511_1_U0_ap_done,
        t_empty_n => dst1_val_t_empty_n,
        t_read => Array2D2Mat_1_U0_ap_ready);

    keypoints0_val_pt_x_U : component SIFT2_Core_keypoibGp
    generic map (
        DataWidth => 16,
        AddressRange => 511,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => compute_U0_keypoints0_val_pt_x_address0,
        i_ce0 => compute_U0_keypoints0_val_pt_x_ce0,
        i_we0 => compute_U0_keypoints0_val_pt_x_we0,
        i_d0 => compute_U0_keypoints0_val_pt_x_d0,
        i_q0 => keypoints0_val_pt_x_i_q0,
        t_address0 => Result2Array2D_511_U0_keypoints_val_pt_x_address0,
        t_ce0 => Result2Array2D_511_U0_keypoints_val_pt_x_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv16_0,
        t_q0 => keypoints0_val_pt_x_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => keypoints0_val_pt_x_i_full_n,
        i_write => ap_channel_done_keypoints0_val_pt_x,
        t_empty_n => keypoints0_val_pt_x_t_empty_n,
        t_read => Result2Array2D_511_U0_ap_ready);

    keypoints0_val_pt_y_U : component SIFT2_Core_keypoibGp
    generic map (
        DataWidth => 16,
        AddressRange => 511,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => compute_U0_keypoints0_val_pt_y_address0,
        i_ce0 => compute_U0_keypoints0_val_pt_y_ce0,
        i_we0 => compute_U0_keypoints0_val_pt_y_we0,
        i_d0 => compute_U0_keypoints0_val_pt_y_d0,
        i_q0 => keypoints0_val_pt_y_i_q0,
        t_address0 => Result2Array2D_511_U0_keypoints_val_pt_y_address0,
        t_ce0 => Result2Array2D_511_U0_keypoints_val_pt_y_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv16_0,
        t_q0 => keypoints0_val_pt_y_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => keypoints0_val_pt_y_i_full_n,
        i_write => ap_channel_done_keypoints0_val_pt_y,
        t_empty_n => keypoints0_val_pt_y_t_empty_n,
        t_read => Result2Array2D_511_U0_ap_ready);

    keypoints0_val_angle_U : component SIFT2_Core_keypoibIp
    generic map (
        DataWidth => 32,
        AddressRange => 511,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => compute_U0_keypoints0_val_angle_V_address0,
        ce0 => compute_U0_keypoints0_val_angle_V_ce0,
        we0 => compute_U0_keypoints0_val_angle_V_we0,
        d0 => compute_U0_keypoints0_val_angle_V_d0,
        q0 => keypoints0_val_angle_q0);

    keypoints0_val_sigma_U : component SIFT2_Core_keypoibIp
    generic map (
        DataWidth => 32,
        AddressRange => 511,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => compute_U0_keypoints0_val_sigma_V_address0,
        ce0 => compute_U0_keypoints0_val_sigma_V_ce0,
        we0 => compute_U0_keypoints0_val_sigma_V_we0,
        d0 => compute_U0_keypoints0_val_sigma_V_d0,
        q0 => keypoints0_val_sigma_q0);

    keypoints0_val_octav_U : component SIFT2_Core_keypoibKp
    generic map (
        DataWidth => 8,
        AddressRange => 511,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => compute_U0_keypoints0_val_octave_address0,
        ce0 => compute_U0_keypoints0_val_octave_ce0,
        we0 => compute_U0_keypoints0_val_octave_we0,
        d0 => compute_U0_keypoints0_val_octave_d0,
        q0 => keypoints0_val_octav_q0);

    keypoints0_val_layer_U : component SIFT2_Core_keypoibKp
    generic map (
        DataWidth => 8,
        AddressRange => 511,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => compute_U0_keypoints0_val_layer_address0,
        ce0 => compute_U0_keypoints0_val_layer_ce0,
        we0 => compute_U0_keypoints0_val_layer_we0,
        d0 => compute_U0_keypoints0_val_layer_d0,
        q0 => keypoints0_val_layer_q0);

    keypoints1_val_pt_x_U : component SIFT2_Core_keypoibGp
    generic map (
        DataWidth => 16,
        AddressRange => 511,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => compute_U0_keypoints1_val_pt_x_address0,
        i_ce0 => compute_U0_keypoints1_val_pt_x_ce0,
        i_we0 => compute_U0_keypoints1_val_pt_x_we0,
        i_d0 => compute_U0_keypoints1_val_pt_x_d0,
        i_q0 => keypoints1_val_pt_x_i_q0,
        t_address0 => Result2Array2D_511_1_U0_keypoints_val_pt_x_address0,
        t_ce0 => Result2Array2D_511_1_U0_keypoints_val_pt_x_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv16_0,
        t_q0 => keypoints1_val_pt_x_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => keypoints1_val_pt_x_i_full_n,
        i_write => ap_channel_done_keypoints1_val_pt_x,
        t_empty_n => keypoints1_val_pt_x_t_empty_n,
        t_read => Result2Array2D_511_1_U0_ap_ready);

    keypoints1_val_pt_y_U : component SIFT2_Core_keypoibGp
    generic map (
        DataWidth => 16,
        AddressRange => 511,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => compute_U0_keypoints1_val_pt_y_address0,
        i_ce0 => compute_U0_keypoints1_val_pt_y_ce0,
        i_we0 => compute_U0_keypoints1_val_pt_y_we0,
        i_d0 => compute_U0_keypoints1_val_pt_y_d0,
        i_q0 => keypoints1_val_pt_y_i_q0,
        t_address0 => Result2Array2D_511_1_U0_keypoints_val_pt_y_address0,
        t_ce0 => Result2Array2D_511_1_U0_keypoints_val_pt_y_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv16_0,
        t_q0 => keypoints1_val_pt_y_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => keypoints1_val_pt_y_i_full_n,
        i_write => ap_channel_done_keypoints1_val_pt_y,
        t_empty_n => keypoints1_val_pt_y_t_empty_n,
        t_read => Result2Array2D_511_1_U0_ap_ready);

    keypoints1_val_angle_U : component SIFT2_Core_keypoibIp
    generic map (
        DataWidth => 32,
        AddressRange => 511,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => compute_U0_keypoints1_val_angle_V_address0,
        ce0 => compute_U0_keypoints1_val_angle_V_ce0,
        we0 => compute_U0_keypoints1_val_angle_V_we0,
        d0 => compute_U0_keypoints1_val_angle_V_d0,
        q0 => keypoints1_val_angle_q0);

    keypoints1_val_sigma_U : component SIFT2_Core_keypoibIp
    generic map (
        DataWidth => 32,
        AddressRange => 511,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => compute_U0_keypoints1_val_sigma_V_address0,
        ce0 => compute_U0_keypoints1_val_sigma_V_ce0,
        we0 => compute_U0_keypoints1_val_sigma_V_we0,
        d0 => compute_U0_keypoints1_val_sigma_V_d0,
        q0 => keypoints1_val_sigma_q0);

    keypoints1_val_octav_U : component SIFT2_Core_keypoibKp
    generic map (
        DataWidth => 8,
        AddressRange => 511,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => compute_U0_keypoints1_val_octave_address0,
        ce0 => compute_U0_keypoints1_val_octave_ce0,
        we0 => compute_U0_keypoints1_val_octave_we0,
        d0 => compute_U0_keypoints1_val_octave_d0,
        q0 => keypoints1_val_octav_q0);

    keypoints1_val_layer_U : component SIFT2_Core_keypoibKp
    generic map (
        DataWidth => 8,
        AddressRange => 511,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => compute_U0_keypoints1_val_layer_address0,
        ce0 => compute_U0_keypoints1_val_layer_ce0,
        we0 => compute_U0_keypoints1_val_layer_we0,
        d0 => compute_U0_keypoints1_val_layer_d0,
        q0 => keypoints1_val_layer_q0);

    descriptors0_val_val_U : component SIFT2_Core_describSr
    generic map (
        DataWidth => 8,
        AddressRange => 65408,
        AddressWidth => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => compute_U0_descriptors0_val_val_address0,
        ce0 => compute_U0_descriptors0_val_val_ce0,
        we0 => compute_U0_descriptors0_val_val_we0,
        d0 => compute_U0_descriptors0_val_val_d0,
        q0 => descriptors0_val_val_q0);

    descriptors1_val_val_U : component SIFT2_Core_describSr
    generic map (
        DataWidth => 8,
        AddressRange => 65408,
        AddressWidth => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => compute_U0_descriptors1_val_val_address0,
        ce0 => compute_U0_descriptors1_val_val_ce0,
        we0 => compute_U0_descriptors1_val_val_we0,
        d0 => compute_U0_descriptors1_val_val_d0,
        q0 => descriptors1_val_val_q0);

    matches_val_idx0_U : component SIFT2_Core_keypoibGp
    generic map (
        DataWidth => 16,
        AddressRange => 511,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => compute_U0_matches_val_idx0_address0,
        i_ce0 => compute_U0_matches_val_idx0_ce0,
        i_we0 => compute_U0_matches_val_idx0_we0,
        i_d0 => compute_U0_matches_val_idx0_d0,
        i_q0 => matches_val_idx0_i_q0,
        t_address0 => Result2Array2D_511_U0_matches_val_idx0_address0,
        t_ce0 => Result2Array2D_511_U0_matches_val_idx0_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv16_0,
        t_q0 => matches_val_idx0_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => matches_val_idx0_i_full_n,
        i_write => ap_channel_done_matches_val_idx0,
        t_empty_n => matches_val_idx0_t_empty_n,
        t_read => Result2Array2D_511_U0_ap_ready);

    matches_val_idx1_U : component SIFT2_Core_keypoibGp
    generic map (
        DataWidth => 16,
        AddressRange => 511,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => compute_U0_matches_val_idx1_address0,
        i_ce0 => compute_U0_matches_val_idx1_ce0,
        i_we0 => compute_U0_matches_val_idx1_we0,
        i_d0 => compute_U0_matches_val_idx1_d0,
        i_q0 => matches_val_idx1_i_q0,
        t_address0 => Result2Array2D_511_U0_matches_val_idx1_address0,
        t_ce0 => Result2Array2D_511_U0_matches_val_idx1_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv16_0,
        t_q0 => matches_val_idx1_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => matches_val_idx1_i_full_n,
        i_write => ap_channel_done_matches_val_idx1,
        t_empty_n => matches_val_idx1_t_empty_n,
        t_read => Result2Array2D_511_U0_ap_ready);

    Block_Mat_exit412_pr_U0 : component Block_Mat_exit412_pr
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Block_Mat_exit412_pr_U0_ap_start,
        ap_done => Block_Mat_exit412_pr_U0_ap_done,
        ap_continue => Block_Mat_exit412_pr_U0_ap_continue,
        ap_idle => Block_Mat_exit412_pr_U0_ap_idle,
        ap_ready => Block_Mat_exit412_pr_U0_ap_ready,
        rows0 => rows0,
        cols0 => cols0,
        rows1 => rows1,
        cols1 => cols1,
        thresh => thresh,
        p_src0_rows_V_out_din => Block_Mat_exit412_pr_U0_p_src0_rows_V_out_din,
        p_src0_rows_V_out_full_n => p_src0_rows_V_c_full_n,
        p_src0_rows_V_out_write => Block_Mat_exit412_pr_U0_p_src0_rows_V_out_write,
        p_src0_cols_V_out_din => Block_Mat_exit412_pr_U0_p_src0_cols_V_out_din,
        p_src0_cols_V_out_full_n => p_src0_cols_V_c_full_n,
        p_src0_cols_V_out_write => Block_Mat_exit412_pr_U0_p_src0_cols_V_out_write,
        p_src1_rows_V_out_din => Block_Mat_exit412_pr_U0_p_src1_rows_V_out_din,
        p_src1_rows_V_out_full_n => p_src1_rows_V_c_full_n,
        p_src1_rows_V_out_write => Block_Mat_exit412_pr_U0_p_src1_rows_V_out_write,
        p_src1_cols_V_out_din => Block_Mat_exit412_pr_U0_p_src1_cols_V_out_din,
        p_src1_cols_V_out_full_n => p_src1_cols_V_c_full_n,
        p_src1_cols_V_out_write => Block_Mat_exit412_pr_U0_p_src1_cols_V_out_write,
        src1_rows_out_din => Block_Mat_exit412_pr_U0_src1_rows_out_din,
        src1_rows_out_full_n => src1_rows_c_full_n,
        src1_rows_out_write => Block_Mat_exit412_pr_U0_src1_rows_out_write,
        src1_cols_out_din => Block_Mat_exit412_pr_U0_src1_cols_out_din,
        src1_cols_out_full_n => src1_cols_c_full_n,
        src1_cols_out_write => Block_Mat_exit412_pr_U0_src1_cols_out_write,
        descriptors0_length_out_din => Block_Mat_exit412_pr_U0_descriptors0_length_out_din,
        descriptors0_length_out_full_n => descriptors0_length_s_full_n,
        descriptors0_length_out_write => Block_Mat_exit412_pr_U0_descriptors0_length_out_write,
        descriptors1_length_out_din => Block_Mat_exit412_pr_U0_descriptors1_length_out_din,
        descriptors1_length_out_full_n => descriptors1_length_s_full_n,
        descriptors1_length_out_write => Block_Mat_exit412_pr_U0_descriptors1_length_out_write,
        matches_length_out_din => Block_Mat_exit412_pr_U0_matches_length_out_din,
        matches_length_out_full_n => matches_length_c_full_n,
        matches_length_out_write => Block_Mat_exit412_pr_U0_matches_length_out_write,
        thresh_out_din => Block_Mat_exit412_pr_U0_thresh_out_din,
        thresh_out_full_n => thresh_c_full_n,
        thresh_out_write => Block_Mat_exit412_pr_U0_thresh_out_write);

    AXIvideo2Mat616_U0 : component AXIvideo2Mat616
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => AXIvideo2Mat616_U0_ap_start,
        start_full_n => start_for_Mat2Array2D617_U0_full_n,
        ap_done => AXIvideo2Mat616_U0_ap_done,
        ap_continue => AXIvideo2Mat616_U0_ap_continue,
        ap_idle => AXIvideo2Mat616_U0_ap_idle,
        ap_ready => AXIvideo2Mat616_U0_ap_ready,
        start_out => AXIvideo2Mat616_U0_start_out,
        start_write => AXIvideo2Mat616_U0_start_write,
        src0_axis_TDATA => src0_axis_TDATA,
        src0_axis_TVALID => src0_axis_TVALID,
        src0_axis_TREADY => AXIvideo2Mat616_U0_src0_axis_TREADY,
        src0_axis_TKEEP => src0_axis_TKEEP,
        src0_axis_TSTRB => src0_axis_TSTRB,
        src0_axis_TUSER => src0_axis_TUSER,
        src0_axis_TLAST => src0_axis_TLAST,
        src0_axis_TID => src0_axis_TID,
        src0_axis_TDEST => src0_axis_TDEST,
        img_rows_V_dout => p_src0_rows_V_c_dout,
        img_rows_V_empty_n => p_src0_rows_V_c_empty_n,
        img_rows_V_read => AXIvideo2Mat616_U0_img_rows_V_read,
        img_cols_V_dout => p_src0_cols_V_c_dout,
        img_cols_V_empty_n => p_src0_cols_V_c_empty_n,
        img_cols_V_read => AXIvideo2Mat616_U0_img_cols_V_read,
        img_data_stream_V_din => AXIvideo2Mat616_U0_img_data_stream_V_din,
        img_data_stream_V_full_n => p_src0_data_stream_0_full_n,
        img_data_stream_V_write => AXIvideo2Mat616_U0_img_data_stream_V_write,
        img_rows_V_out_din => AXIvideo2Mat616_U0_img_rows_V_out_din,
        img_rows_V_out_full_n => p_src0_rows_V_c36_full_n,
        img_rows_V_out_write => AXIvideo2Mat616_U0_img_rows_V_out_write,
        img_cols_V_out_din => AXIvideo2Mat616_U0_img_cols_V_out_din,
        img_cols_V_out_full_n => p_src0_cols_V_c37_full_n,
        img_cols_V_out_write => AXIvideo2Mat616_U0_img_cols_V_out_write);

    AXIvideo2Mat_U0 : component AXIvideo2Mat
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => AXIvideo2Mat_U0_ap_start,
        start_full_n => start_for_Mat2Array2D_U0_full_n,
        ap_done => AXIvideo2Mat_U0_ap_done,
        ap_continue => AXIvideo2Mat_U0_ap_continue,
        ap_idle => AXIvideo2Mat_U0_ap_idle,
        ap_ready => AXIvideo2Mat_U0_ap_ready,
        start_out => AXIvideo2Mat_U0_start_out,
        start_write => AXIvideo2Mat_U0_start_write,
        src1_axis_TDATA => src1_axis_TDATA,
        src1_axis_TVALID => src1_axis_TVALID,
        src1_axis_TREADY => AXIvideo2Mat_U0_src1_axis_TREADY,
        src1_axis_TKEEP => src1_axis_TKEEP,
        src1_axis_TSTRB => src1_axis_TSTRB,
        src1_axis_TUSER => src1_axis_TUSER,
        src1_axis_TLAST => src1_axis_TLAST,
        src1_axis_TID => src1_axis_TID,
        src1_axis_TDEST => src1_axis_TDEST,
        img_rows_V_dout => p_src1_rows_V_c_dout,
        img_rows_V_empty_n => p_src1_rows_V_c_empty_n,
        img_rows_V_read => AXIvideo2Mat_U0_img_rows_V_read,
        img_cols_V_dout => p_src1_cols_V_c_dout,
        img_cols_V_empty_n => p_src1_cols_V_c_empty_n,
        img_cols_V_read => AXIvideo2Mat_U0_img_cols_V_read,
        img_data_stream_V_din => AXIvideo2Mat_U0_img_data_stream_V_din,
        img_data_stream_V_full_n => p_src1_data_stream_0_full_n,
        img_data_stream_V_write => AXIvideo2Mat_U0_img_data_stream_V_write,
        img_rows_V_out_din => AXIvideo2Mat_U0_img_rows_V_out_din,
        img_rows_V_out_full_n => p_src1_rows_V_c38_full_n,
        img_rows_V_out_write => AXIvideo2Mat_U0_img_rows_V_out_write,
        img_cols_V_out_din => AXIvideo2Mat_U0_img_cols_V_out_din,
        img_cols_V_out_full_n => p_src1_cols_V_c39_full_n,
        img_cols_V_out_write => AXIvideo2Mat_U0_img_cols_V_out_write);

    Mat2Array2D617_U0 : component Mat2Array2D617
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Mat2Array2D617_U0_ap_start,
        ap_done => Mat2Array2D617_U0_ap_done,
        ap_continue => Mat2Array2D617_U0_ap_continue,
        ap_idle => Mat2Array2D617_U0_ap_idle,
        ap_ready => Mat2Array2D617_U0_ap_ready,
        mat_rows_V_dout => p_src0_rows_V_c36_dout,
        mat_rows_V_empty_n => p_src0_rows_V_c36_empty_n,
        mat_rows_V_read => Mat2Array2D617_U0_mat_rows_V_read,
        mat_cols_V_dout => p_src0_cols_V_c37_dout,
        mat_cols_V_empty_n => p_src0_cols_V_c37_empty_n,
        mat_cols_V_read => Mat2Array2D617_U0_mat_cols_V_read,
        mat_data_stream_V_dout => p_src0_data_stream_0_dout,
        mat_data_stream_V_empty_n => p_src0_data_stream_0_empty_n,
        mat_data_stream_V_read => Mat2Array2D617_U0_mat_data_stream_V_read,
        arr_val_address0 => Mat2Array2D617_U0_arr_val_address0,
        arr_val_ce0 => Mat2Array2D617_U0_arr_val_ce0,
        arr_val_we0 => Mat2Array2D617_U0_arr_val_we0,
        arr_val_d0 => Mat2Array2D617_U0_arr_val_d0,
        arr_rows_out_din => Mat2Array2D617_U0_arr_rows_out_din,
        arr_rows_out_full_n => src0_rows_c_full_n,
        arr_rows_out_write => Mat2Array2D617_U0_arr_rows_out_write,
        arr_cols_out_din => Mat2Array2D617_U0_arr_cols_out_din,
        arr_cols_out_full_n => src0_cols_c_full_n,
        arr_cols_out_write => Mat2Array2D617_U0_arr_cols_out_write);

    Mat2Array2D_U0 : component Mat2Array2D
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Mat2Array2D_U0_ap_start,
        ap_done => Mat2Array2D_U0_ap_done,
        ap_continue => Mat2Array2D_U0_ap_continue,
        ap_idle => Mat2Array2D_U0_ap_idle,
        ap_ready => Mat2Array2D_U0_ap_ready,
        mat_rows_V_dout => p_src1_rows_V_c38_dout,
        mat_rows_V_empty_n => p_src1_rows_V_c38_empty_n,
        mat_rows_V_read => Mat2Array2D_U0_mat_rows_V_read,
        mat_cols_V_dout => p_src1_cols_V_c39_dout,
        mat_cols_V_empty_n => p_src1_cols_V_c39_empty_n,
        mat_cols_V_read => Mat2Array2D_U0_mat_cols_V_read,
        mat_data_stream_V_dout => p_src1_data_stream_0_dout,
        mat_data_stream_V_empty_n => p_src1_data_stream_0_empty_n,
        mat_data_stream_V_read => Mat2Array2D_U0_mat_data_stream_V_read,
        arr_val_address0 => Mat2Array2D_U0_arr_val_address0,
        arr_val_ce0 => Mat2Array2D_U0_arr_val_ce0,
        arr_val_we0 => Mat2Array2D_U0_arr_val_we0,
        arr_val_d0 => Mat2Array2D_U0_arr_val_d0);

    compute_U0 : component compute
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => compute_U0_ap_start,
        ap_done => compute_U0_ap_done,
        ap_continue => compute_U0_ap_continue,
        ap_idle => compute_U0_ap_idle,
        ap_ready => compute_U0_ap_ready,
        src0_val_address0 => compute_U0_src0_val_address0,
        src0_val_ce0 => compute_U0_src0_val_ce0,
        src0_val_q0 => src0_val_t_q0,
        src0_rows_dout => src0_rows_c_dout,
        src0_rows_empty_n => src0_rows_c_empty_n,
        src0_rows_read => compute_U0_src0_rows_read,
        src0_cols_dout => src0_cols_c_dout,
        src0_cols_empty_n => src0_cols_c_empty_n,
        src0_cols_read => compute_U0_src0_cols_read,
        src1_val_address0 => compute_U0_src1_val_address0,
        src1_val_ce0 => compute_U0_src1_val_ce0,
        src1_val_q0 => src1_val_t_q0,
        src1_rows_dout => src1_rows_c_dout,
        src1_rows_empty_n => src1_rows_c_empty_n,
        src1_rows_read => compute_U0_src1_rows_read,
        src1_cols_dout => src1_cols_c_dout,
        src1_cols_empty_n => src1_cols_c_empty_n,
        src1_cols_read => compute_U0_src1_cols_read,
        thresh_dout => thresh_c_dout,
        thresh_empty_n => thresh_c_empty_n,
        thresh_read => compute_U0_thresh_read,
        keypoints0_val_pt_x_address0 => compute_U0_keypoints0_val_pt_x_address0,
        keypoints0_val_pt_x_ce0 => compute_U0_keypoints0_val_pt_x_ce0,
        keypoints0_val_pt_x_we0 => compute_U0_keypoints0_val_pt_x_we0,
        keypoints0_val_pt_x_d0 => compute_U0_keypoints0_val_pt_x_d0,
        keypoints0_val_pt_x_q0 => keypoints0_val_pt_x_i_q0,
        keypoints0_val_pt_y_address0 => compute_U0_keypoints0_val_pt_y_address0,
        keypoints0_val_pt_y_ce0 => compute_U0_keypoints0_val_pt_y_ce0,
        keypoints0_val_pt_y_we0 => compute_U0_keypoints0_val_pt_y_we0,
        keypoints0_val_pt_y_d0 => compute_U0_keypoints0_val_pt_y_d0,
        keypoints0_val_pt_y_q0 => keypoints0_val_pt_y_i_q0,
        keypoints0_val_angle_V_address0 => compute_U0_keypoints0_val_angle_V_address0,
        keypoints0_val_angle_V_ce0 => compute_U0_keypoints0_val_angle_V_ce0,
        keypoints0_val_angle_V_we0 => compute_U0_keypoints0_val_angle_V_we0,
        keypoints0_val_angle_V_d0 => compute_U0_keypoints0_val_angle_V_d0,
        keypoints0_val_angle_V_q0 => keypoints0_val_angle_q0,
        keypoints0_val_sigma_V_address0 => compute_U0_keypoints0_val_sigma_V_address0,
        keypoints0_val_sigma_V_ce0 => compute_U0_keypoints0_val_sigma_V_ce0,
        keypoints0_val_sigma_V_we0 => compute_U0_keypoints0_val_sigma_V_we0,
        keypoints0_val_sigma_V_d0 => compute_U0_keypoints0_val_sigma_V_d0,
        keypoints0_val_sigma_V_q0 => keypoints0_val_sigma_q0,
        keypoints0_val_octave_address0 => compute_U0_keypoints0_val_octave_address0,
        keypoints0_val_octave_ce0 => compute_U0_keypoints0_val_octave_ce0,
        keypoints0_val_octave_we0 => compute_U0_keypoints0_val_octave_we0,
        keypoints0_val_octave_d0 => compute_U0_keypoints0_val_octave_d0,
        keypoints0_val_octave_q0 => keypoints0_val_octav_q0,
        keypoints0_val_layer_address0 => compute_U0_keypoints0_val_layer_address0,
        keypoints0_val_layer_ce0 => compute_U0_keypoints0_val_layer_ce0,
        keypoints0_val_layer_we0 => compute_U0_keypoints0_val_layer_we0,
        keypoints0_val_layer_d0 => compute_U0_keypoints0_val_layer_d0,
        keypoints0_val_layer_q0 => keypoints0_val_layer_q0,
        keypoints1_val_pt_x_address0 => compute_U0_keypoints1_val_pt_x_address0,
        keypoints1_val_pt_x_ce0 => compute_U0_keypoints1_val_pt_x_ce0,
        keypoints1_val_pt_x_we0 => compute_U0_keypoints1_val_pt_x_we0,
        keypoints1_val_pt_x_d0 => compute_U0_keypoints1_val_pt_x_d0,
        keypoints1_val_pt_x_q0 => keypoints1_val_pt_x_i_q0,
        keypoints1_val_pt_y_address0 => compute_U0_keypoints1_val_pt_y_address0,
        keypoints1_val_pt_y_ce0 => compute_U0_keypoints1_val_pt_y_ce0,
        keypoints1_val_pt_y_we0 => compute_U0_keypoints1_val_pt_y_we0,
        keypoints1_val_pt_y_d0 => compute_U0_keypoints1_val_pt_y_d0,
        keypoints1_val_pt_y_q0 => keypoints1_val_pt_y_i_q0,
        keypoints1_val_angle_V_address0 => compute_U0_keypoints1_val_angle_V_address0,
        keypoints1_val_angle_V_ce0 => compute_U0_keypoints1_val_angle_V_ce0,
        keypoints1_val_angle_V_we0 => compute_U0_keypoints1_val_angle_V_we0,
        keypoints1_val_angle_V_d0 => compute_U0_keypoints1_val_angle_V_d0,
        keypoints1_val_angle_V_q0 => keypoints1_val_angle_q0,
        keypoints1_val_sigma_V_address0 => compute_U0_keypoints1_val_sigma_V_address0,
        keypoints1_val_sigma_V_ce0 => compute_U0_keypoints1_val_sigma_V_ce0,
        keypoints1_val_sigma_V_we0 => compute_U0_keypoints1_val_sigma_V_we0,
        keypoints1_val_sigma_V_d0 => compute_U0_keypoints1_val_sigma_V_d0,
        keypoints1_val_sigma_V_q0 => keypoints1_val_sigma_q0,
        keypoints1_val_octave_address0 => compute_U0_keypoints1_val_octave_address0,
        keypoints1_val_octave_ce0 => compute_U0_keypoints1_val_octave_ce0,
        keypoints1_val_octave_we0 => compute_U0_keypoints1_val_octave_we0,
        keypoints1_val_octave_d0 => compute_U0_keypoints1_val_octave_d0,
        keypoints1_val_octave_q0 => keypoints1_val_octav_q0,
        keypoints1_val_layer_address0 => compute_U0_keypoints1_val_layer_address0,
        keypoints1_val_layer_ce0 => compute_U0_keypoints1_val_layer_ce0,
        keypoints1_val_layer_we0 => compute_U0_keypoints1_val_layer_we0,
        keypoints1_val_layer_d0 => compute_U0_keypoints1_val_layer_d0,
        keypoints1_val_layer_q0 => keypoints1_val_layer_q0,
        descriptors0_val_val_address0 => compute_U0_descriptors0_val_val_address0,
        descriptors0_val_val_ce0 => compute_U0_descriptors0_val_val_ce0,
        descriptors0_val_val_we0 => compute_U0_descriptors0_val_val_we0,
        descriptors0_val_val_d0 => compute_U0_descriptors0_val_val_d0,
        descriptors0_val_val_q0 => descriptors0_val_val_q0,
        descriptors0_length_dout => descriptors0_length_s_dout,
        descriptors0_length_empty_n => descriptors0_length_s_empty_n,
        descriptors0_length_read => compute_U0_descriptors0_length_read,
        descriptors1_val_val_address0 => compute_U0_descriptors1_val_val_address0,
        descriptors1_val_val_ce0 => compute_U0_descriptors1_val_val_ce0,
        descriptors1_val_val_we0 => compute_U0_descriptors1_val_val_we0,
        descriptors1_val_val_d0 => compute_U0_descriptors1_val_val_d0,
        descriptors1_val_val_q0 => descriptors1_val_val_q0,
        descriptors1_length_dout => descriptors1_length_s_dout,
        descriptors1_length_empty_n => descriptors1_length_s_empty_n,
        descriptors1_length_read => compute_U0_descriptors1_length_read,
        matches_val_idx0_address0 => compute_U0_matches_val_idx0_address0,
        matches_val_idx0_ce0 => compute_U0_matches_val_idx0_ce0,
        matches_val_idx0_we0 => compute_U0_matches_val_idx0_we0,
        matches_val_idx0_d0 => compute_U0_matches_val_idx0_d0,
        matches_val_idx1_address0 => compute_U0_matches_val_idx1_address0,
        matches_val_idx1_ce0 => compute_U0_matches_val_idx1_ce0,
        matches_val_idx1_we0 => compute_U0_matches_val_idx1_we0,
        matches_val_idx1_d0 => compute_U0_matches_val_idx1_d0,
        matches_length_dout => matches_length_c_dout,
        matches_length_empty_n => matches_length_c_empty_n,
        matches_length_read => compute_U0_matches_length_read,
        keypoints0_length_out_din => compute_U0_keypoints0_length_out_din,
        keypoints0_length_out_full_n => keypoints0_length_c_full_n,
        keypoints0_length_out_write => compute_U0_keypoints0_length_out_write,
        keypoints1_length_out_din => compute_U0_keypoints1_length_out_din,
        keypoints1_length_out_full_n => keypoints1_length_c_full_n,
        keypoints1_length_out_write => compute_U0_keypoints1_length_out_write,
        matches_length_out_din => compute_U0_matches_length_out_din,
        matches_length_out_full_n => matches_length_c40_full_n,
        matches_length_out_write => compute_U0_matches_length_out_write);

    Result2Array2D_511_U0 : component Result2Array2D_511_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Result2Array2D_511_U0_ap_start,
        ap_done => Result2Array2D_511_U0_ap_done,
        ap_continue => Result2Array2D_511_U0_ap_continue,
        ap_idle => Result2Array2D_511_U0_ap_idle,
        ap_ready => Result2Array2D_511_U0_ap_ready,
        keypoints_val_pt_x_address0 => Result2Array2D_511_U0_keypoints_val_pt_x_address0,
        keypoints_val_pt_x_ce0 => Result2Array2D_511_U0_keypoints_val_pt_x_ce0,
        keypoints_val_pt_x_q0 => keypoints0_val_pt_x_t_q0,
        keypoints_val_pt_y_address0 => Result2Array2D_511_U0_keypoints_val_pt_y_address0,
        keypoints_val_pt_y_ce0 => Result2Array2D_511_U0_keypoints_val_pt_y_ce0,
        keypoints_val_pt_y_q0 => keypoints0_val_pt_y_t_q0,
        keypoints_length_dout => keypoints0_length_c_dout,
        keypoints_length_empty_n => keypoints0_length_c_empty_n,
        keypoints_length_read => Result2Array2D_511_U0_keypoints_length_read,
        matches_val_idx0_address0 => Result2Array2D_511_U0_matches_val_idx0_address0,
        matches_val_idx0_ce0 => Result2Array2D_511_U0_matches_val_idx0_ce0,
        matches_val_idx0_q0 => matches_val_idx0_t_q0,
        matches_val_idx1_address0 => Result2Array2D_511_U0_matches_val_idx1_address0,
        matches_val_idx1_ce0 => Result2Array2D_511_U0_matches_val_idx1_ce0,
        matches_val_idx1_q0 => matches_val_idx1_t_q0,
        matches_length_dout => matches_length_c40_dout,
        matches_length_empty_n => matches_length_c40_empty_n,
        matches_length_read => Result2Array2D_511_U0_matches_length_read,
        dst_val_address0 => Result2Array2D_511_U0_dst_val_address0,
        dst_val_ce0 => Result2Array2D_511_U0_dst_val_ce0,
        dst_val_we0 => Result2Array2D_511_U0_dst_val_we0,
        dst_val_d0 => Result2Array2D_511_U0_dst_val_d0,
        dst_val_address1 => Result2Array2D_511_U0_dst_val_address1,
        dst_val_ce1 => Result2Array2D_511_U0_dst_val_ce1,
        dst_val_we1 => Result2Array2D_511_U0_dst_val_we1,
        dst_val_d1 => Result2Array2D_511_U0_dst_val_d1);

    Result2Array2D_511_1_U0 : component Result2Array2D_511_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Result2Array2D_511_1_U0_ap_start,
        ap_done => Result2Array2D_511_1_U0_ap_done,
        ap_continue => Result2Array2D_511_1_U0_ap_continue,
        ap_idle => Result2Array2D_511_1_U0_ap_idle,
        ap_ready => Result2Array2D_511_1_U0_ap_ready,
        keypoints_val_pt_x_address0 => Result2Array2D_511_1_U0_keypoints_val_pt_x_address0,
        keypoints_val_pt_x_ce0 => Result2Array2D_511_1_U0_keypoints_val_pt_x_ce0,
        keypoints_val_pt_x_q0 => keypoints1_val_pt_x_t_q0,
        keypoints_val_pt_y_address0 => Result2Array2D_511_1_U0_keypoints_val_pt_y_address0,
        keypoints_val_pt_y_ce0 => Result2Array2D_511_1_U0_keypoints_val_pt_y_ce0,
        keypoints_val_pt_y_q0 => keypoints1_val_pt_y_t_q0,
        keypoints_length_dout => keypoints1_length_c_dout,
        keypoints_length_empty_n => keypoints1_length_c_empty_n,
        keypoints_length_read => Result2Array2D_511_1_U0_keypoints_length_read,
        dst_val_address0 => Result2Array2D_511_1_U0_dst_val_address0,
        dst_val_ce0 => Result2Array2D_511_1_U0_dst_val_ce0,
        dst_val_we0 => Result2Array2D_511_1_U0_dst_val_we0,
        dst_val_d0 => Result2Array2D_511_1_U0_dst_val_d0,
        dst_val_address1 => Result2Array2D_511_1_U0_dst_val_address1,
        dst_val_ce1 => Result2Array2D_511_1_U0_dst_val_ce1,
        dst_val_we1 => Result2Array2D_511_1_U0_dst_val_we1,
        dst_val_d1 => Result2Array2D_511_1_U0_dst_val_d1);

    Array2D2Mat_U0 : component Array2D2Mat
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Array2D2Mat_U0_ap_start,
        start_full_n => start_for_Mat2AXIvideo_U0_full_n,
        ap_done => Array2D2Mat_U0_ap_done,
        ap_continue => Array2D2Mat_U0_ap_continue,
        ap_idle => Array2D2Mat_U0_ap_idle,
        ap_ready => Array2D2Mat_U0_ap_ready,
        start_out => Array2D2Mat_U0_start_out,
        start_write => Array2D2Mat_U0_start_write,
        arr_val_address0 => Array2D2Mat_U0_arr_val_address0,
        arr_val_ce0 => Array2D2Mat_U0_arr_val_ce0,
        arr_val_q0 => dst0_val_t_q0,
        mat_data_stream_V_din => Array2D2Mat_U0_mat_data_stream_V_din,
        mat_data_stream_V_full_n => p_dst0_data_stream_0_full_n,
        mat_data_stream_V_write => Array2D2Mat_U0_mat_data_stream_V_write,
        mat_rows_V_din => Array2D2Mat_U0_mat_rows_V_din,
        mat_rows_V_full_n => p_dst0_rows_V_c_full_n,
        mat_rows_V_write => Array2D2Mat_U0_mat_rows_V_write,
        mat_cols_V_din => Array2D2Mat_U0_mat_cols_V_din,
        mat_cols_V_full_n => p_dst0_cols_V_c_full_n,
        mat_cols_V_write => Array2D2Mat_U0_mat_cols_V_write);

    Array2D2Mat_1_U0 : component Array2D2Mat_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Array2D2Mat_1_U0_ap_start,
        start_full_n => start_for_Mat2AXIvideo_1_U0_full_n,
        ap_done => Array2D2Mat_1_U0_ap_done,
        ap_continue => Array2D2Mat_1_U0_ap_continue,
        ap_idle => Array2D2Mat_1_U0_ap_idle,
        ap_ready => Array2D2Mat_1_U0_ap_ready,
        start_out => Array2D2Mat_1_U0_start_out,
        start_write => Array2D2Mat_1_U0_start_write,
        arr_val_address0 => Array2D2Mat_1_U0_arr_val_address0,
        arr_val_ce0 => Array2D2Mat_1_U0_arr_val_ce0,
        arr_val_q0 => dst1_val_t_q0,
        mat_data_stream_V_din => Array2D2Mat_1_U0_mat_data_stream_V_din,
        mat_data_stream_V_full_n => p_dst1_data_stream_0_full_n,
        mat_data_stream_V_write => Array2D2Mat_1_U0_mat_data_stream_V_write,
        mat_rows_V_din => Array2D2Mat_1_U0_mat_rows_V_din,
        mat_rows_V_full_n => p_dst1_rows_V_c_full_n,
        mat_rows_V_write => Array2D2Mat_1_U0_mat_rows_V_write,
        mat_cols_V_din => Array2D2Mat_1_U0_mat_cols_V_din,
        mat_cols_V_full_n => p_dst1_cols_V_c_full_n,
        mat_cols_V_write => Array2D2Mat_1_U0_mat_cols_V_write);

    Mat2AXIvideo_U0 : component Mat2AXIvideo
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Mat2AXIvideo_U0_ap_start,
        ap_done => Mat2AXIvideo_U0_ap_done,
        ap_continue => Mat2AXIvideo_U0_ap_continue,
        ap_idle => Mat2AXIvideo_U0_ap_idle,
        ap_ready => Mat2AXIvideo_U0_ap_ready,
        img_rows_V_dout => p_dst0_rows_V_c_dout,
        img_rows_V_empty_n => p_dst0_rows_V_c_empty_n,
        img_rows_V_read => Mat2AXIvideo_U0_img_rows_V_read,
        img_cols_V_dout => p_dst0_cols_V_c_dout,
        img_cols_V_empty_n => p_dst0_cols_V_c_empty_n,
        img_cols_V_read => Mat2AXIvideo_U0_img_cols_V_read,
        img_data_stream_V_dout => p_dst0_data_stream_0_dout,
        img_data_stream_V_empty_n => p_dst0_data_stream_0_empty_n,
        img_data_stream_V_read => Mat2AXIvideo_U0_img_data_stream_V_read,
        dst0_axis_TDATA => Mat2AXIvideo_U0_dst0_axis_TDATA,
        dst0_axis_TVALID => Mat2AXIvideo_U0_dst0_axis_TVALID,
        dst0_axis_TREADY => dst0_axis_TREADY,
        dst0_axis_TKEEP => Mat2AXIvideo_U0_dst0_axis_TKEEP,
        dst0_axis_TSTRB => Mat2AXIvideo_U0_dst0_axis_TSTRB,
        dst0_axis_TUSER => Mat2AXIvideo_U0_dst0_axis_TUSER,
        dst0_axis_TLAST => Mat2AXIvideo_U0_dst0_axis_TLAST,
        dst0_axis_TID => Mat2AXIvideo_U0_dst0_axis_TID,
        dst0_axis_TDEST => Mat2AXIvideo_U0_dst0_axis_TDEST);

    Mat2AXIvideo_1_U0 : component Mat2AXIvideo_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Mat2AXIvideo_1_U0_ap_start,
        ap_done => Mat2AXIvideo_1_U0_ap_done,
        ap_continue => Mat2AXIvideo_1_U0_ap_continue,
        ap_idle => Mat2AXIvideo_1_U0_ap_idle,
        ap_ready => Mat2AXIvideo_1_U0_ap_ready,
        img_rows_V_dout => p_dst1_rows_V_c_dout,
        img_rows_V_empty_n => p_dst1_rows_V_c_empty_n,
        img_rows_V_read => Mat2AXIvideo_1_U0_img_rows_V_read,
        img_cols_V_dout => p_dst1_cols_V_c_dout,
        img_cols_V_empty_n => p_dst1_cols_V_c_empty_n,
        img_cols_V_read => Mat2AXIvideo_1_U0_img_cols_V_read,
        img_data_stream_V_dout => p_dst1_data_stream_0_dout,
        img_data_stream_V_empty_n => p_dst1_data_stream_0_empty_n,
        img_data_stream_V_read => Mat2AXIvideo_1_U0_img_data_stream_V_read,
        dst1_axis_TDATA => Mat2AXIvideo_1_U0_dst1_axis_TDATA,
        dst1_axis_TVALID => Mat2AXIvideo_1_U0_dst1_axis_TVALID,
        dst1_axis_TREADY => dst1_axis_TREADY,
        dst1_axis_TKEEP => Mat2AXIvideo_1_U0_dst1_axis_TKEEP,
        dst1_axis_TSTRB => Mat2AXIvideo_1_U0_dst1_axis_TSTRB,
        dst1_axis_TUSER => Mat2AXIvideo_1_U0_dst1_axis_TUSER,
        dst1_axis_TLAST => Mat2AXIvideo_1_U0_dst1_axis_TLAST,
        dst1_axis_TID => Mat2AXIvideo_1_U0_dst1_axis_TID,
        dst1_axis_TDEST => Mat2AXIvideo_1_U0_dst1_axis_TDEST);

    p_src0_rows_V_c_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit412_pr_U0_p_src0_rows_V_out_din,
        if_full_n => p_src0_rows_V_c_full_n,
        if_write => Block_Mat_exit412_pr_U0_p_src0_rows_V_out_write,
        if_dout => p_src0_rows_V_c_dout,
        if_empty_n => p_src0_rows_V_c_empty_n,
        if_read => AXIvideo2Mat616_U0_img_rows_V_read);

    p_src0_cols_V_c_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit412_pr_U0_p_src0_cols_V_out_din,
        if_full_n => p_src0_cols_V_c_full_n,
        if_write => Block_Mat_exit412_pr_U0_p_src0_cols_V_out_write,
        if_dout => p_src0_cols_V_c_dout,
        if_empty_n => p_src0_cols_V_c_empty_n,
        if_read => AXIvideo2Mat616_U0_img_cols_V_read);

    p_src1_rows_V_c_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit412_pr_U0_p_src1_rows_V_out_din,
        if_full_n => p_src1_rows_V_c_full_n,
        if_write => Block_Mat_exit412_pr_U0_p_src1_rows_V_out_write,
        if_dout => p_src1_rows_V_c_dout,
        if_empty_n => p_src1_rows_V_c_empty_n,
        if_read => AXIvideo2Mat_U0_img_rows_V_read);

    p_src1_cols_V_c_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit412_pr_U0_p_src1_cols_V_out_din,
        if_full_n => p_src1_cols_V_c_full_n,
        if_write => Block_Mat_exit412_pr_U0_p_src1_cols_V_out_write,
        if_dout => p_src1_cols_V_c_dout,
        if_empty_n => p_src1_cols_V_c_empty_n,
        if_read => AXIvideo2Mat_U0_img_cols_V_read);

    src1_rows_c_U : component fifo_w32_d4_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit412_pr_U0_src1_rows_out_din,
        if_full_n => src1_rows_c_full_n,
        if_write => Block_Mat_exit412_pr_U0_src1_rows_out_write,
        if_dout => src1_rows_c_dout,
        if_empty_n => src1_rows_c_empty_n,
        if_read => compute_U0_src1_rows_read);

    src1_cols_c_U : component fifo_w32_d4_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit412_pr_U0_src1_cols_out_din,
        if_full_n => src1_cols_c_full_n,
        if_write => Block_Mat_exit412_pr_U0_src1_cols_out_write,
        if_dout => src1_cols_c_dout,
        if_empty_n => src1_cols_c_empty_n,
        if_read => compute_U0_src1_cols_read);

    descriptors0_length_s_U : component fifo_w1_d4_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit412_pr_U0_descriptors0_length_out_din,
        if_full_n => descriptors0_length_s_full_n,
        if_write => Block_Mat_exit412_pr_U0_descriptors0_length_out_write,
        if_dout => descriptors0_length_s_dout,
        if_empty_n => descriptors0_length_s_empty_n,
        if_read => compute_U0_descriptors0_length_read);

    descriptors1_length_s_U : component fifo_w1_d4_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit412_pr_U0_descriptors1_length_out_din,
        if_full_n => descriptors1_length_s_full_n,
        if_write => Block_Mat_exit412_pr_U0_descriptors1_length_out_write,
        if_dout => descriptors1_length_s_dout,
        if_empty_n => descriptors1_length_s_empty_n,
        if_read => compute_U0_descriptors1_length_read);

    matches_length_c_U : component fifo_w1_d4_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit412_pr_U0_matches_length_out_din,
        if_full_n => matches_length_c_full_n,
        if_write => Block_Mat_exit412_pr_U0_matches_length_out_write,
        if_dout => matches_length_c_dout,
        if_empty_n => matches_length_c_empty_n,
        if_read => compute_U0_matches_length_read);

    thresh_c_U : component fifo_w32_d4_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit412_pr_U0_thresh_out_din,
        if_full_n => thresh_c_full_n,
        if_write => Block_Mat_exit412_pr_U0_thresh_out_write,
        if_dout => thresh_c_dout,
        if_empty_n => thresh_c_empty_n,
        if_read => compute_U0_thresh_read);

    p_src0_data_stream_0_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => AXIvideo2Mat616_U0_img_data_stream_V_din,
        if_full_n => p_src0_data_stream_0_full_n,
        if_write => AXIvideo2Mat616_U0_img_data_stream_V_write,
        if_dout => p_src0_data_stream_0_dout,
        if_empty_n => p_src0_data_stream_0_empty_n,
        if_read => Mat2Array2D617_U0_mat_data_stream_V_read);

    p_src0_rows_V_c36_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => AXIvideo2Mat616_U0_img_rows_V_out_din,
        if_full_n => p_src0_rows_V_c36_full_n,
        if_write => AXIvideo2Mat616_U0_img_rows_V_out_write,
        if_dout => p_src0_rows_V_c36_dout,
        if_empty_n => p_src0_rows_V_c36_empty_n,
        if_read => Mat2Array2D617_U0_mat_rows_V_read);

    p_src0_cols_V_c37_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => AXIvideo2Mat616_U0_img_cols_V_out_din,
        if_full_n => p_src0_cols_V_c37_full_n,
        if_write => AXIvideo2Mat616_U0_img_cols_V_out_write,
        if_dout => p_src0_cols_V_c37_dout,
        if_empty_n => p_src0_cols_V_c37_empty_n,
        if_read => Mat2Array2D617_U0_mat_cols_V_read);

    p_src1_data_stream_0_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => AXIvideo2Mat_U0_img_data_stream_V_din,
        if_full_n => p_src1_data_stream_0_full_n,
        if_write => AXIvideo2Mat_U0_img_data_stream_V_write,
        if_dout => p_src1_data_stream_0_dout,
        if_empty_n => p_src1_data_stream_0_empty_n,
        if_read => Mat2Array2D_U0_mat_data_stream_V_read);

    p_src1_rows_V_c38_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => AXIvideo2Mat_U0_img_rows_V_out_din,
        if_full_n => p_src1_rows_V_c38_full_n,
        if_write => AXIvideo2Mat_U0_img_rows_V_out_write,
        if_dout => p_src1_rows_V_c38_dout,
        if_empty_n => p_src1_rows_V_c38_empty_n,
        if_read => Mat2Array2D_U0_mat_rows_V_read);

    p_src1_cols_V_c39_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => AXIvideo2Mat_U0_img_cols_V_out_din,
        if_full_n => p_src1_cols_V_c39_full_n,
        if_write => AXIvideo2Mat_U0_img_cols_V_out_write,
        if_dout => p_src1_cols_V_c39_dout,
        if_empty_n => p_src1_cols_V_c39_empty_n,
        if_read => Mat2Array2D_U0_mat_cols_V_read);

    src0_rows_c_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Mat2Array2D617_U0_arr_rows_out_din,
        if_full_n => src0_rows_c_full_n,
        if_write => Mat2Array2D617_U0_arr_rows_out_write,
        if_dout => src0_rows_c_dout,
        if_empty_n => src0_rows_c_empty_n,
        if_read => compute_U0_src0_rows_read);

    src0_cols_c_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Mat2Array2D617_U0_arr_cols_out_din,
        if_full_n => src0_cols_c_full_n,
        if_write => Mat2Array2D617_U0_arr_cols_out_write,
        if_dout => src0_cols_c_dout,
        if_empty_n => src0_cols_c_empty_n,
        if_read => compute_U0_src0_cols_read);

    keypoints0_length_c_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => compute_U0_keypoints0_length_out_din,
        if_full_n => keypoints0_length_c_full_n,
        if_write => compute_U0_keypoints0_length_out_write,
        if_dout => keypoints0_length_c_dout,
        if_empty_n => keypoints0_length_c_empty_n,
        if_read => Result2Array2D_511_U0_keypoints_length_read);

    keypoints1_length_c_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => compute_U0_keypoints1_length_out_din,
        if_full_n => keypoints1_length_c_full_n,
        if_write => compute_U0_keypoints1_length_out_write,
        if_dout => keypoints1_length_c_dout,
        if_empty_n => keypoints1_length_c_empty_n,
        if_read => Result2Array2D_511_1_U0_keypoints_length_read);

    matches_length_c40_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => compute_U0_matches_length_out_din,
        if_full_n => matches_length_c40_full_n,
        if_write => compute_U0_matches_length_out_write,
        if_dout => matches_length_c40_dout,
        if_empty_n => matches_length_c40_empty_n,
        if_read => Result2Array2D_511_U0_matches_length_read);

    p_dst0_data_stream_0_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Array2D2Mat_U0_mat_data_stream_V_din,
        if_full_n => p_dst0_data_stream_0_full_n,
        if_write => Array2D2Mat_U0_mat_data_stream_V_write,
        if_dout => p_dst0_data_stream_0_dout,
        if_empty_n => p_dst0_data_stream_0_empty_n,
        if_read => Mat2AXIvideo_U0_img_data_stream_V_read);

    p_dst0_rows_V_c_U : component fifo_w7_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Array2D2Mat_U0_mat_rows_V_din,
        if_full_n => p_dst0_rows_V_c_full_n,
        if_write => Array2D2Mat_U0_mat_rows_V_write,
        if_dout => p_dst0_rows_V_c_dout,
        if_empty_n => p_dst0_rows_V_c_empty_n,
        if_read => Mat2AXIvideo_U0_img_rows_V_read);

    p_dst0_cols_V_c_U : component fifo_w9_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Array2D2Mat_U0_mat_cols_V_din,
        if_full_n => p_dst0_cols_V_c_full_n,
        if_write => Array2D2Mat_U0_mat_cols_V_write,
        if_dout => p_dst0_cols_V_c_dout,
        if_empty_n => p_dst0_cols_V_c_empty_n,
        if_read => Mat2AXIvideo_U0_img_cols_V_read);

    p_dst1_data_stream_0_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Array2D2Mat_1_U0_mat_data_stream_V_din,
        if_full_n => p_dst1_data_stream_0_full_n,
        if_write => Array2D2Mat_1_U0_mat_data_stream_V_write,
        if_dout => p_dst1_data_stream_0_dout,
        if_empty_n => p_dst1_data_stream_0_empty_n,
        if_read => Mat2AXIvideo_1_U0_img_data_stream_V_read);

    p_dst1_rows_V_c_U : component fifo_w6_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Array2D2Mat_1_U0_mat_rows_V_din,
        if_full_n => p_dst1_rows_V_c_full_n,
        if_write => Array2D2Mat_1_U0_mat_rows_V_write,
        if_dout => p_dst1_rows_V_c_dout,
        if_empty_n => p_dst1_rows_V_c_empty_n,
        if_read => Mat2AXIvideo_1_U0_img_rows_V_read);

    p_dst1_cols_V_c_U : component fifo_w9_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Array2D2Mat_1_U0_mat_cols_V_din,
        if_full_n => p_dst1_cols_V_c_full_n,
        if_write => Array2D2Mat_1_U0_mat_cols_V_write,
        if_dout => p_dst1_cols_V_c_dout,
        if_empty_n => p_dst1_cols_V_c_empty_n,
        if_read => Mat2AXIvideo_1_U0_img_cols_V_read);

    start_for_Mat2ArrbWr_U : component start_for_Mat2ArrbWr
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Mat2Array2D617_U0_din,
        if_full_n => start_for_Mat2Array2D617_U0_full_n,
        if_write => AXIvideo2Mat616_U0_start_write,
        if_dout => start_for_Mat2Array2D617_U0_dout,
        if_empty_n => start_for_Mat2Array2D617_U0_empty_n,
        if_read => Mat2Array2D617_U0_ap_ready);

    start_for_Mat2ArrbXr_U : component start_for_Mat2ArrbXr
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Mat2Array2D_U0_din,
        if_full_n => start_for_Mat2Array2D_U0_full_n,
        if_write => AXIvideo2Mat_U0_start_write,
        if_dout => start_for_Mat2Array2D_U0_dout,
        if_empty_n => start_for_Mat2Array2D_U0_empty_n,
        if_read => Mat2Array2D_U0_ap_ready);

    start_for_Mat2AXIbYs_U : component start_for_Mat2AXIbYs
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Mat2AXIvideo_U0_din,
        if_full_n => start_for_Mat2AXIvideo_U0_full_n,
        if_write => Array2D2Mat_U0_start_write,
        if_dout => start_for_Mat2AXIvideo_U0_dout,
        if_empty_n => start_for_Mat2AXIvideo_U0_empty_n,
        if_read => Mat2AXIvideo_U0_ap_ready);

    start_for_Mat2AXIbZs_U : component start_for_Mat2AXIbZs
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Mat2AXIvideo_1_U0_din,
        if_full_n => start_for_Mat2AXIvideo_1_U0_full_n,
        if_write => Array2D2Mat_1_U0_start_write,
        if_dout => start_for_Mat2AXIvideo_1_U0_dout,
        if_empty_n => start_for_Mat2AXIvideo_1_U0_empty_n,
        if_read => Mat2AXIvideo_1_U0_ap_ready);





    ap_sync_reg_AXIvideo2Mat616_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_AXIvideo2Mat616_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_AXIvideo2Mat616_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_AXIvideo2Mat616_U0_ap_ready <= ap_sync_AXIvideo2Mat616_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_AXIvideo2Mat_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_AXIvideo2Mat_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_AXIvideo2Mat_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_AXIvideo2Mat_U0_ap_ready <= ap_sync_AXIvideo2Mat_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_Block_Mat_exit412_pr_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_Block_Mat_exit412_pr_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_Block_Mat_exit412_pr_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_Block_Mat_exit412_pr_U0_ap_ready <= ap_sync_Block_Mat_exit412_pr_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_keypoints0_val_pt_x_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_keypoints0_val_pt_x <= ap_const_logic_0;
            else
                if (((compute_U0_ap_done and compute_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_keypoints0_val_pt_x <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_keypoints0_val_pt_x <= ap_sync_channel_write_keypoints0_val_pt_x;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_keypoints0_val_pt_y_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_keypoints0_val_pt_y <= ap_const_logic_0;
            else
                if (((compute_U0_ap_done and compute_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_keypoints0_val_pt_y <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_keypoints0_val_pt_y <= ap_sync_channel_write_keypoints0_val_pt_y;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_keypoints1_val_pt_x_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_keypoints1_val_pt_x <= ap_const_logic_0;
            else
                if (((compute_U0_ap_done and compute_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_keypoints1_val_pt_x <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_keypoints1_val_pt_x <= ap_sync_channel_write_keypoints1_val_pt_x;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_keypoints1_val_pt_y_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_keypoints1_val_pt_y <= ap_const_logic_0;
            else
                if (((compute_U0_ap_done and compute_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_keypoints1_val_pt_y <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_keypoints1_val_pt_y <= ap_sync_channel_write_keypoints1_val_pt_y;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_matches_val_idx0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_matches_val_idx0 <= ap_const_logic_0;
            else
                if (((compute_U0_ap_done and compute_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_matches_val_idx0 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_matches_val_idx0 <= ap_sync_channel_write_matches_val_idx0;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_matches_val_idx1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_matches_val_idx1 <= ap_const_logic_0;
            else
                if (((compute_U0_ap_done and compute_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_matches_val_idx1 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_matches_val_idx1 <= ap_sync_channel_write_matches_val_idx1;
                end if; 
            end if;
        end if;
    end process;


    AXIvideo2Mat616_U0_ap_ready_count_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_0 = AXIvideo2Mat616_U0_ap_ready) and (ap_sync_ready = ap_const_logic_1))) then 
                AXIvideo2Mat616_U0_ap_ready_count <= std_logic_vector(unsigned(AXIvideo2Mat616_U0_ap_ready_count) - unsigned(ap_const_lv2_1));
            elsif (((ap_sync_ready = ap_const_logic_0) and (ap_const_logic_1 = AXIvideo2Mat616_U0_ap_ready))) then 
                AXIvideo2Mat616_U0_ap_ready_count <= std_logic_vector(unsigned(AXIvideo2Mat616_U0_ap_ready_count) + unsigned(ap_const_lv2_1));
            end if; 
        end if;
    end process;

    AXIvideo2Mat_U0_ap_ready_count_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_0 = AXIvideo2Mat_U0_ap_ready) and (ap_sync_ready = ap_const_logic_1))) then 
                AXIvideo2Mat_U0_ap_ready_count <= std_logic_vector(unsigned(AXIvideo2Mat_U0_ap_ready_count) - unsigned(ap_const_lv2_1));
            elsif (((ap_sync_ready = ap_const_logic_0) and (ap_const_logic_1 = AXIvideo2Mat_U0_ap_ready))) then 
                AXIvideo2Mat_U0_ap_ready_count <= std_logic_vector(unsigned(AXIvideo2Mat_U0_ap_ready_count) + unsigned(ap_const_lv2_1));
            end if; 
        end if;
    end process;

    Block_Mat_exit412_pr_U0_ap_ready_count_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_sync_ready = ap_const_logic_1) and (ap_const_logic_0 = Block_Mat_exit412_pr_U0_ap_ready))) then 
                Block_Mat_exit412_pr_U0_ap_ready_count <= std_logic_vector(unsigned(Block_Mat_exit412_pr_U0_ap_ready_count) - unsigned(ap_const_lv2_1));
            elsif (((ap_sync_ready = ap_const_logic_0) and (ap_const_logic_1 = Block_Mat_exit412_pr_U0_ap_ready))) then 
                Block_Mat_exit412_pr_U0_ap_ready_count <= std_logic_vector(unsigned(Block_Mat_exit412_pr_U0_ap_ready_count) + unsigned(ap_const_lv2_1));
            end if; 
        end if;
    end process;
    AXIvideo2Mat616_U0_ap_continue <= ap_const_logic_1;
    AXIvideo2Mat616_U0_ap_start <= ((ap_sync_reg_AXIvideo2Mat616_U0_ap_ready xor ap_const_logic_1) and ap_start);
    AXIvideo2Mat_U0_ap_continue <= ap_const_logic_1;
    AXIvideo2Mat_U0_ap_start <= ((ap_sync_reg_AXIvideo2Mat_U0_ap_ready xor ap_const_logic_1) and ap_start);
    Array2D2Mat_1_U0_ap_continue <= ap_const_logic_1;
    Array2D2Mat_1_U0_ap_start <= dst1_val_t_empty_n;
    Array2D2Mat_U0_ap_continue <= ap_const_logic_1;
    Array2D2Mat_U0_ap_start <= dst0_val_t_empty_n;
    Block_Mat_exit412_pr_U0_ap_continue <= ap_const_logic_1;
    Block_Mat_exit412_pr_U0_ap_start <= ((ap_sync_reg_Block_Mat_exit412_pr_U0_ap_ready xor ap_const_logic_1) and ap_start);
    Block_Mat_exit412_pr_U0_start_full_n <= ap_const_logic_1;
    Block_Mat_exit412_pr_U0_start_write <= ap_const_logic_0;
    Mat2AXIvideo_1_U0_ap_continue <= ap_sync_done;
    Mat2AXIvideo_1_U0_ap_start <= start_for_Mat2AXIvideo_1_U0_empty_n;
    Mat2AXIvideo_1_U0_start_full_n <= ap_const_logic_1;
    Mat2AXIvideo_1_U0_start_write <= ap_const_logic_0;
    Mat2AXIvideo_U0_ap_continue <= ap_sync_done;
    Mat2AXIvideo_U0_ap_start <= start_for_Mat2AXIvideo_U0_empty_n;
    Mat2AXIvideo_U0_start_full_n <= ap_const_logic_1;
    Mat2AXIvideo_U0_start_write <= ap_const_logic_0;
    Mat2Array2D617_U0_ap_continue <= src0_val_i_full_n;
    Mat2Array2D617_U0_ap_start <= start_for_Mat2Array2D617_U0_empty_n;
    Mat2Array2D617_U0_arr_val_full_n <= src0_val_i_full_n;
    Mat2Array2D617_U0_start_full_n <= ap_const_logic_1;
    Mat2Array2D617_U0_start_write <= ap_const_logic_0;
    Mat2Array2D_U0_ap_continue <= src1_val_i_full_n;
    Mat2Array2D_U0_ap_start <= start_for_Mat2Array2D_U0_empty_n;
    Mat2Array2D_U0_arr_val_full_n <= src1_val_i_full_n;
    Mat2Array2D_U0_start_full_n <= ap_const_logic_1;
    Mat2Array2D_U0_start_write <= ap_const_logic_0;
    Result2Array2D_511_1_U0_ap_continue <= dst1_val_i_full_n;
    Result2Array2D_511_1_U0_ap_start <= (keypoints1_val_pt_y_t_empty_n and keypoints1_val_pt_x_t_empty_n);
    Result2Array2D_511_1_U0_dst_val_full_n <= dst1_val_i_full_n;
    Result2Array2D_511_1_U0_start_full_n <= ap_const_logic_1;
    Result2Array2D_511_1_U0_start_write <= ap_const_logic_0;
    Result2Array2D_511_U0_ap_continue <= dst0_val_i_full_n;
    Result2Array2D_511_U0_ap_start <= (matches_val_idx1_t_empty_n and matches_val_idx0_t_empty_n and keypoints0_val_pt_y_t_empty_n and keypoints0_val_pt_x_t_empty_n);
    Result2Array2D_511_U0_dst_val_full_n <= dst0_val_i_full_n;
    Result2Array2D_511_U0_start_full_n <= ap_const_logic_1;
    Result2Array2D_511_U0_start_write <= ap_const_logic_0;
    ap_channel_done_dst0_val <= Result2Array2D_511_U0_ap_done;
    ap_channel_done_dst1_val <= Result2Array2D_511_1_U0_ap_done;
    ap_channel_done_keypoints0_val_pt_x <= ((ap_sync_reg_channel_write_keypoints0_val_pt_x xor ap_const_logic_1) and compute_U0_ap_done);
    ap_channel_done_keypoints0_val_pt_y <= ((ap_sync_reg_channel_write_keypoints0_val_pt_y xor ap_const_logic_1) and compute_U0_ap_done);
    ap_channel_done_keypoints1_val_pt_x <= ((ap_sync_reg_channel_write_keypoints1_val_pt_x xor ap_const_logic_1) and compute_U0_ap_done);
    ap_channel_done_keypoints1_val_pt_y <= ((ap_sync_reg_channel_write_keypoints1_val_pt_y xor ap_const_logic_1) and compute_U0_ap_done);
    ap_channel_done_matches_val_idx0 <= ((ap_sync_reg_channel_write_matches_val_idx0 xor ap_const_logic_1) and compute_U0_ap_done);
    ap_channel_done_matches_val_idx1 <= ((ap_sync_reg_channel_write_matches_val_idx1 xor ap_const_logic_1) and compute_U0_ap_done);
    ap_channel_done_src0_val <= Mat2Array2D617_U0_ap_done;
    ap_channel_done_src1_val <= Mat2Array2D_U0_ap_done;
    ap_done <= ap_sync_done;
    ap_idle <= ((dst1_val_t_empty_n xor ap_const_logic_1) and (dst0_val_t_empty_n xor ap_const_logic_1) and (matches_val_idx1_t_empty_n xor ap_const_logic_1) and (matches_val_idx0_t_empty_n xor ap_const_logic_1) and (keypoints1_val_pt_y_t_empty_n xor ap_const_logic_1) and (keypoints1_val_pt_x_t_empty_n xor ap_const_logic_1) and (keypoints0_val_pt_y_t_empty_n xor ap_const_logic_1) and (keypoints0_val_pt_x_t_empty_n xor ap_const_logic_1) and (src1_val_t_empty_n xor ap_const_logic_1) and (src0_val_t_empty_n xor ap_const_logic_1) and compute_U0_ap_idle and Result2Array2D_511_U0_ap_idle and Result2Array2D_511_1_U0_ap_idle and Mat2Array2D_U0_ap_idle and Mat2Array2D617_U0_ap_idle and Mat2AXIvideo_U0_ap_idle and Mat2AXIvideo_1_U0_ap_idle and Block_Mat_exit412_pr_U0_ap_idle and Array2D2Mat_U0_ap_idle and Array2D2Mat_1_U0_ap_idle and AXIvideo2Mat_U0_ap_idle and AXIvideo2Mat616_U0_ap_idle);
    ap_ready <= ap_sync_ready;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    ap_sync_AXIvideo2Mat616_U0_ap_ready <= (ap_sync_reg_AXIvideo2Mat616_U0_ap_ready or AXIvideo2Mat616_U0_ap_ready);
    ap_sync_AXIvideo2Mat_U0_ap_ready <= (ap_sync_reg_AXIvideo2Mat_U0_ap_ready or AXIvideo2Mat_U0_ap_ready);
    ap_sync_Block_Mat_exit412_pr_U0_ap_ready <= (ap_sync_reg_Block_Mat_exit412_pr_U0_ap_ready or Block_Mat_exit412_pr_U0_ap_ready);
    ap_sync_channel_write_keypoints0_val_pt_x <= ((compute_U0_keypoints0_val_pt_x_full_n and ap_channel_done_keypoints0_val_pt_x) or ap_sync_reg_channel_write_keypoints0_val_pt_x);
    ap_sync_channel_write_keypoints0_val_pt_y <= ((compute_U0_keypoints0_val_pt_y_full_n and ap_channel_done_keypoints0_val_pt_y) or ap_sync_reg_channel_write_keypoints0_val_pt_y);
    ap_sync_channel_write_keypoints1_val_pt_x <= ((compute_U0_keypoints1_val_pt_x_full_n and ap_channel_done_keypoints1_val_pt_x) or ap_sync_reg_channel_write_keypoints1_val_pt_x);
    ap_sync_channel_write_keypoints1_val_pt_y <= ((compute_U0_keypoints1_val_pt_y_full_n and ap_channel_done_keypoints1_val_pt_y) or ap_sync_reg_channel_write_keypoints1_val_pt_y);
    ap_sync_channel_write_matches_val_idx0 <= ((compute_U0_matches_val_idx0_full_n and ap_channel_done_matches_val_idx0) or ap_sync_reg_channel_write_matches_val_idx0);
    ap_sync_channel_write_matches_val_idx1 <= ((compute_U0_matches_val_idx1_full_n and ap_channel_done_matches_val_idx1) or ap_sync_reg_channel_write_matches_val_idx1);
    ap_sync_continue <= ap_sync_done;
    ap_sync_done <= (Mat2AXIvideo_U0_ap_done and Mat2AXIvideo_1_U0_ap_done);
    ap_sync_ready <= (ap_sync_Block_Mat_exit412_pr_U0_ap_ready and ap_sync_AXIvideo2Mat_U0_ap_ready and ap_sync_AXIvideo2Mat616_U0_ap_ready);
    compute_U0_ap_continue <= (ap_sync_channel_write_matches_val_idx1 and ap_sync_channel_write_matches_val_idx0 and ap_sync_channel_write_keypoints1_val_pt_y and ap_sync_channel_write_keypoints1_val_pt_x and ap_sync_channel_write_keypoints0_val_pt_y and ap_sync_channel_write_keypoints0_val_pt_x);
    compute_U0_ap_start <= (src1_val_t_empty_n and src0_val_t_empty_n);
    compute_U0_keypoints0_val_pt_x_full_n <= keypoints0_val_pt_x_i_full_n;
    compute_U0_keypoints0_val_pt_y_full_n <= keypoints0_val_pt_y_i_full_n;
    compute_U0_keypoints1_val_pt_x_full_n <= keypoints1_val_pt_x_i_full_n;
    compute_U0_keypoints1_val_pt_y_full_n <= keypoints1_val_pt_y_i_full_n;
    compute_U0_matches_val_idx0_full_n <= matches_val_idx0_i_full_n;
    compute_U0_matches_val_idx1_full_n <= matches_val_idx1_i_full_n;
    compute_U0_start_full_n <= ap_const_logic_1;
    compute_U0_start_write <= ap_const_logic_0;
    dst0_axis_TDATA <= Mat2AXIvideo_U0_dst0_axis_TDATA;
    dst0_axis_TDEST <= Mat2AXIvideo_U0_dst0_axis_TDEST;
    dst0_axis_TID <= Mat2AXIvideo_U0_dst0_axis_TID;
    dst0_axis_TKEEP <= Mat2AXIvideo_U0_dst0_axis_TKEEP;
    dst0_axis_TLAST <= Mat2AXIvideo_U0_dst0_axis_TLAST;
    dst0_axis_TSTRB <= Mat2AXIvideo_U0_dst0_axis_TSTRB;
    dst0_axis_TUSER <= Mat2AXIvideo_U0_dst0_axis_TUSER;
    dst0_axis_TVALID <= Mat2AXIvideo_U0_dst0_axis_TVALID;
    dst1_axis_TDATA <= Mat2AXIvideo_1_U0_dst1_axis_TDATA;
    dst1_axis_TDEST <= Mat2AXIvideo_1_U0_dst1_axis_TDEST;
    dst1_axis_TID <= Mat2AXIvideo_1_U0_dst1_axis_TID;
    dst1_axis_TKEEP <= Mat2AXIvideo_1_U0_dst1_axis_TKEEP;
    dst1_axis_TLAST <= Mat2AXIvideo_1_U0_dst1_axis_TLAST;
    dst1_axis_TSTRB <= Mat2AXIvideo_1_U0_dst1_axis_TSTRB;
    dst1_axis_TUSER <= Mat2AXIvideo_1_U0_dst1_axis_TUSER;
    dst1_axis_TVALID <= Mat2AXIvideo_1_U0_dst1_axis_TVALID;
    src0_axis_TREADY <= AXIvideo2Mat616_U0_src0_axis_TREADY;
    src1_axis_TREADY <= AXIvideo2Mat_U0_src1_axis_TREADY;
    start_for_Mat2AXIvideo_1_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Mat2AXIvideo_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Mat2Array2D617_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Mat2Array2D_U0_din <= (0=>ap_const_logic_1, others=>'-');
end behav;
