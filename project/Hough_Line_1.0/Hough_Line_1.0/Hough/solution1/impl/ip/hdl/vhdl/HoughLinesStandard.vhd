-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity HoughLinesStandard is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    edge_val_address0 : OUT STD_LOGIC_VECTOR (16 downto 0);
    edge_val_ce0 : OUT STD_LOGIC;
    edge_val_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    edge_rows_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    edge_rows_empty_n : IN STD_LOGIC;
    edge_rows_read : OUT STD_LOGIC;
    edge_cols_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    edge_cols_empty_n : IN STD_LOGIC;
    edge_cols_read : OUT STD_LOGIC;
    threshold_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    threshold_empty_n : IN STD_LOGIC;
    threshold_read : OUT STD_LOGIC;
    lines_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    lines_ce0 : OUT STD_LOGIC;
    lines_we0 : OUT STD_LOGIC;
    lines_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    lines_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    lines_ce1 : OUT STD_LOGIC;
    lines_we1 : OUT STD_LOGIC;
    lines_d1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of HoughLinesStandard is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000100";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000001000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000010000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000100000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (17 downto 0) := "000000000001000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000010000000";
    constant ap_ST_fsm_pp1_stage1 : STD_LOGIC_VECTOR (17 downto 0) := "000000000100000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (17 downto 0) := "000000001000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (17 downto 0) := "000000010000000000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (17 downto 0) := "000000100000000000";
    constant ap_ST_fsm_pp2_stage1 : STD_LOGIC_VECTOR (17 downto 0) := "000001000000000000";
    constant ap_ST_fsm_pp2_stage2 : STD_LOGIC_VECTOR (17 downto 0) := "000010000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (17 downto 0) := "000100000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (17 downto 0) := "001000000000000000";
    constant ap_ST_fsm_pp3_stage0 : STD_LOGIC_VECTOR (17 downto 0) := "010000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (17 downto 0) := "100000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_3C8EFA35 : STD_LOGIC_VECTOR (31 downto 0) := "00111100100011101111101000110101";
    constant ap_const_lv18_31E62 : STD_LOGIC_VECTOR (17 downto 0) := "110001111001100010";
    constant ap_const_lv18_1 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    constant ap_const_lv8_B4 : STD_LOGIC_VECTOR (7 downto 0) := "10110100";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_433 : STD_LOGIC_VECTOR (11 downto 0) := "010000110011";
    constant ap_const_lv12_E : STD_LOGIC_VECTOR (11 downto 0) := "000000001110";
    constant ap_const_lv12_FF2 : STD_LOGIC_VECTOR (11 downto 0) := "111111110010";
    constant ap_const_lv12_36 : STD_LOGIC_VECTOR (11 downto 0) := "000000110110";
    constant ap_const_lv12_FF0 : STD_LOGIC_VECTOR (11 downto 0) := "111111110000";
    constant ap_const_lv12_35 : STD_LOGIC_VECTOR (11 downto 0) := "000000110101";
    constant ap_const_lv16_FFFF : STD_LOGIC_VECTOR (15 downto 0) := "1111111111111111";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv12_FF1 : STD_LOGIC_VECTOR (11 downto 0) := "111111110001";
    constant ap_const_lv6_5 : STD_LOGIC_VECTOR (5 downto 0) := "000101";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv54_3FFFFFFFFFFFFF : STD_LOGIC_VECTOR (53 downto 0) := "111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv31_1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_const_lv18_694 : STD_LOGIC_VECTOR (17 downto 0) := "000000011010010100";
    constant ap_const_lv18_463 : STD_LOGIC_VECTOR (17 downto 0) := "000000010001100011";
    constant ap_const_lv48_0 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv47_0 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000000000000000000000000000000000";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv15_7FFF : STD_LOGIC_VECTOR (14 downto 0) := "111111111111111";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv26_0 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000000000";
    constant ap_const_lv31_1F : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000011111";
    constant ap_const_lv6_21 : STD_LOGIC_VECTOR (5 downto 0) := "100001";
    constant ap_const_lv6_F : STD_LOGIC_VECTOR (5 downto 0) := "001111";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv8_9E : STD_LOGIC_VECTOR (7 downto 0) := "10011110";
    constant ap_const_lv8_72 : STD_LOGIC_VECTOR (7 downto 0) := "01110010";
    constant ap_const_lv8_71 : STD_LOGIC_VECTOR (7 downto 0) := "01110001";
    constant ap_const_lv8_7E : STD_LOGIC_VECTOR (7 downto 0) := "01111110";
    constant ap_const_lv8_96 : STD_LOGIC_VECTOR (7 downto 0) := "10010110";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv23_7FFFFF : STD_LOGIC_VECTOR (22 downto 0) := "11111111111111111111111";
    constant ap_const_lv9_181 : STD_LOGIC_VECTOR (8 downto 0) := "110000001";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv11_461 : STD_LOGIC_VECTOR (10 downto 0) := "10001100001";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv12_463 : STD_LOGIC_VECTOR (11 downto 0) := "010001100011";
    constant ap_const_lv32_63 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100011";
    constant ap_const_lv18_2 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000010";
    constant ap_const_lv18_3FB9E : STD_LOGIC_VECTOR (17 downto 0) := "111111101110011110";
    constant ap_const_lv18_464 : STD_LOGIC_VECTOR (17 downto 0) := "000000010001100100";
    constant ap_const_lv7_63 : STD_LOGIC_VECTOR (6 downto 0) := "1100011";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv65_1D2DD1F3C : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000000000000000000111010010110111010001111100111100";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv65_0 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_FFFFFB9D : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111101110011101";
    constant ap_const_lv16_FDCF : STD_LOGIC_VECTOR (15 downto 0) := "1111110111001111";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal mask_table1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal mask_table1_ce0 : STD_LOGIC;
    signal mask_table1_q0 : STD_LOGIC_VECTOR (22 downto 0);
    signal one_half_table2_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal one_half_table2_ce0 : STD_LOGIC;
    signal one_half_table2_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal edge_rows_blk_n : STD_LOGIC;
    signal edge_cols_blk_n : STD_LOGIC;
    signal threshold_blk_n : STD_LOGIC;
    signal n_i_reg_526 : STD_LOGIC_VECTOR (7 downto 0);
    signal n_i_reg_526_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal n_i_reg_526_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal n_i_reg_526_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal n_i_reg_526_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal n_i_reg_526_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal n_i_reg_526_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal n_i_reg_526_pp0_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal n_i_reg_526_pp0_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal n_i_reg_526_pp0_iter9_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal n_i_reg_526_pp0_iter10_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal n_i_reg_526_pp0_iter11_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal n_i_reg_526_pp0_iter12_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal n3_i_reg_561 : STD_LOGIC_VECTOR (7 downto 0);
    signal phi_mul_reg_572 : STD_LOGIC_VECTOR (17 downto 0);
    signal n5_i_reg_595 : STD_LOGIC_VECTOR (7 downto 0);
    signal phi_mul1_reg_606 : STD_LOGIC_VECTOR (17 downto 0);
    signal i7_i_reg_618 : STD_LOGIC_VECTOR (6 downto 0);
    signal rows_reg_2454 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal cols_reg_2459 : STD_LOGIC_VECTOR (31 downto 0);
    signal threshold_read_reg_2464 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond3_i_fu_692_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal i_fu_698_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal exitcond4_i_fu_710_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond4_i_reg_2483 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond4_i_reg_2483_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond4_i_reg_2483_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond4_i_reg_2483_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond4_i_reg_2483_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond4_i_reg_2483_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond4_i_reg_2483_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond4_i_reg_2483_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond4_i_reg_2483_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond4_i_reg_2483_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond4_i_reg_2483_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond4_i_reg_2483_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond4_i_reg_2483_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal n_2_fu_716_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal n_2_reg_2487 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal grp_fu_674_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_54_i_reg_2497 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_666_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal angle_reg_2502 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sin_or_cos_float_s_fu_629_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal v_assign_reg_2508 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sin_or_cos_float_s_fu_644_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal v_assign_1_reg_2513 : STD_LOGIC_VECTOR (31 downto 0);
    signal isneg_reg_2518 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_54_fu_769_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal p_Result_54_reg_2526 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_1_fu_773_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_1_reg_2531 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_58_i_fu_779_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_58_i_reg_2536 : STD_LOGIC_VECTOR (0 downto 0);
    signal F2_fu_785_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_reg_2542 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_61_i_fu_791_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_61_i_reg_2548 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_amt_fu_809_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_reg_2554 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_fu_827_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_2561 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_87_i_fu_833_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_87_i_reg_2566 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp1_fu_849_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp1_reg_2571 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_36_fu_855_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_36_reg_2576 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_122_i_fu_865_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_122_i_reg_2581 : STD_LOGIC_VECTOR (0 downto 0);
    signal isneg_1_reg_2586 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_55_fu_913_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal p_Result_55_reg_2594 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_3_fu_917_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_3_reg_2599 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_133_i_fu_923_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_133_i_reg_2604 : STD_LOGIC_VECTOR (0 downto 0);
    signal F2_1_fu_929_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_1_reg_2610 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_136_i_fu_935_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_136_i_reg_2616 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_amt_1_fu_953_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_1_reg_2622 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp2_fu_971_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp2_reg_2629 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_154_i_fu_977_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_154_i_reg_2634 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp3_fu_993_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp3_reg_2639 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_49_fu_999_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_49_reg_2644 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_160_i_fu_1009_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_160_i_reg_2649 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_1_fu_1464_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_1_reg_2657 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal tmp_s_fu_1494_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_s_reg_2662 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_59_i_fu_1459_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal OP1_V_4_cast_i_fu_1500_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal OP1_V_4_cast_i_reg_2667 : STD_LOGIC_VECTOR (46 downto 0);
    signal j_fu_1518_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal j_reg_2682 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal tmp_67_i_fu_1513_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_72_i_fu_1538_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal OP1_V_cast_i_fu_1544_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal OP1_V_cast_i_reg_2696 : STD_LOGIC_VECTOR (46 downto 0);
    signal exitcond7_i_fu_1548_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond7_i_reg_2701 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_block_state21_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state23_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state25_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state27_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_state29_pp1_stage0_iter4 : BOOLEAN;
    signal ap_block_state31_pp1_stage0_iter5 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal exitcond7_i_reg_2701_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond7_i_reg_2701_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond7_i_reg_2701_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond7_i_reg_2701_pp1_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal n_1_fu_1554_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal n_1_reg_2705 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal r3_i_fu_1566_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal r3_i_reg_2720 : STD_LOGIC_VECTOR (17 downto 0);
    signal r3_i_reg_2720_pp1_iter1_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal r3_i_reg_2720_pp1_iter2_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal r3_i_reg_2720_pp1_iter3_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal r3_i_reg_2720_pp1_iter4_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_35_fu_1576_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal p_Val2_35_reg_2725 : STD_LOGIC_VECTOR (46 downto 0);
    signal ap_CS_fsm_pp1_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage1 : signal is "none";
    signal ap_block_state22_pp1_stage1_iter0 : BOOLEAN;
    signal ap_block_state24_pp1_stage1_iter1 : BOOLEAN;
    signal ap_block_state26_pp1_stage1_iter2 : BOOLEAN;
    signal ap_block_state28_pp1_stage1_iter3 : BOOLEAN;
    signal ap_block_state30_pp1_stage1_iter4 : BOOLEAN;
    signal ap_block_pp1_stage1_11001 : BOOLEAN;
    signal tabSin_V_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal tabSin_V_load_reg_2731 : STD_LOGIC_VECTOR (15 downto 0);
    signal next_mul_fu_1581_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal next_mul_reg_2736 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_111_i_fu_1613_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_111_i_reg_2741 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_111_i_reg_2741_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_111_i_reg_2741_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal is_neg_fu_1619_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal is_neg_reg_2746 : STD_LOGIC_VECTOR (0 downto 0);
    signal is_neg_reg_2746_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal is_neg_reg_2746_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_38_fu_1633_p3 : STD_LOGIC_VECTOR (46 downto 0);
    signal p_Val2_38_reg_2751 : STD_LOGIC_VECTOR (46 downto 0);
    signal msb_idx_fu_1674_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal msb_idx_reg_2757 : STD_LOGIC_VECTOR (31 downto 0);
    signal msb_idx_reg_2757_pp1_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal msb_idx_1_fu_1692_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal msb_idx_1_reg_2762 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp4_fu_1710_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp4_reg_2767 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp32_V_2_fu_1774_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_2_reg_2772 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_3_fu_1796_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_3_reg_2777 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_6_fu_1802_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_6_reg_2782 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_12_i_reg_2787 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_assign_fu_1860_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_reg_2792 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_V_6_fu_1867_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_V_6_reg_2797 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i_i_i_fu_1881_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_i_reg_2803 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_164_i_i_i_fu_1887_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_164_i_i_i_reg_2809 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_47_fu_1995_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_47_reg_2824 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_49_fu_2109_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_49_reg_2829 : STD_LOGIC_VECTOR (31 downto 0);
    signal accum_addr_6_reg_2835 : STD_LOGIC_VECTOR (17 downto 0);
    signal exitcond5_i_fu_2161_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal r_fu_2167_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_reg_2844 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_74_cast_i_fu_2179_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_74_cast_i_reg_2849 : STD_LOGIC_VECTOR (17 downto 0);
    signal total_fu_2189_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal total_reg_2859 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond6_i_fu_2198_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond6_i_reg_2864 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal ap_block_state34_pp2_stage0_iter0 : BOOLEAN;
    signal ap_block_state37_pp2_stage0_iter1 : BOOLEAN;
    signal ap_block_pp2_stage0_11001 : BOOLEAN;
    signal n_fu_2204_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal n_reg_2868 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal tmp_75_i_fu_2210_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_75_i_reg_2873 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_75_i_reg_2873_pp2_iter1_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal base_fu_2215_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal base_reg_2881 : STD_LOGIC_VECTOR (17 downto 0);
    signal base_reg_2881_pp2_iter1_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal accum_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal val_reg_2891 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp2_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage1 : signal is "none";
    signal ap_block_state35_pp2_stage1_iter0 : BOOLEAN;
    signal ap_block_state38_pp2_stage1_iter1 : BOOLEAN;
    signal ap_block_pp2_stage1_11001 : BOOLEAN;
    signal val_reg_2891_pp2_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_77_i_fu_2226_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_77_i_reg_2898 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_77_i_reg_2898_pp2_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal next_mul1_fu_2235_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal next_mul1_reg_2907 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_CS_fsm_pp2_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage2 : signal is "none";
    signal ap_block_state36_pp2_stage2_iter0 : BOOLEAN;
    signal ap_block_state39_pp2_stage2_iter1 : BOOLEAN;
    signal ap_block_pp2_stage2_11001 : BOOLEAN;
    signal grp_fu_687_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_86_i_reg_2912 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_104_i_fu_2251_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_104_i_reg_2921 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_115_i_reg_2930 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal exitcond_i_fu_2301_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_2942 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp3_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp3_stage0 : signal is "none";
    signal ap_block_state42_pp3_stage0_iter0 : BOOLEAN;
    signal ap_block_state43_pp3_stage0_iter1 : BOOLEAN;
    signal ap_block_state44_pp3_stage0_iter2 : BOOLEAN;
    signal ap_block_state45_pp3_stage0_iter3 : BOOLEAN;
    signal ap_block_pp3_stage0_11001 : BOOLEAN;
    signal i_2_fu_2307_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal i_2_reg_2946 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_enable_reg_pp3_iter0 : STD_LOGIC := '0';
    signal i_2_reg_2946_pp3_iter1_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal i_2_reg_2946_pp3_iter2_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_84_i_fu_2317_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_84_i_reg_2952 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_84_i_reg_2952_pp3_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_84_i_reg_2952_pp3_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sort_buf_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal idx_reg_2961 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp3_iter1 : STD_LOGIC := '0';
    signal idx_reg_2961_pp3_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_fu_2336_p2 : STD_LOGIC_VECTOR (64 downto 0);
    signal mul_reg_2966 : STD_LOGIC_VECTOR (64 downto 0);
    signal tmp_80_reg_2971 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_82_reg_2977 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_83_fu_2402_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_83_reg_2982 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_91_i_fu_2406_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_91_i_reg_2987 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state21 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_block_pp1_stage1_subdone : BOOLEAN;
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter5 : STD_LOGIC := '0';
    signal ap_block_pp2_stage0_subdone : BOOLEAN;
    signal ap_condition_pp2_exit_iter0_state34 : STD_LOGIC;
    signal ap_block_pp2_stage2_subdone : BOOLEAN;
    signal ap_CS_fsm_state41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal grp_HoughSortDescent_fu_659_ap_idle : STD_LOGIC;
    signal grp_HoughSortDescent_fu_659_ap_ready : STD_LOGIC;
    signal grp_HoughSortDescent_fu_659_ap_done : STD_LOGIC;
    signal ap_block_pp3_stage0_subdone : BOOLEAN;
    signal ap_condition_pp3_exit_iter0_state42 : STD_LOGIC;
    signal ap_enable_reg_pp3_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter3 : STD_LOGIC := '0';
    signal tabSin_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tabSin_V_ce0 : STD_LOGIC;
    signal tabSin_V_we0 : STD_LOGIC;
    signal tabSin_V_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal tabCos_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tabCos_V_ce0 : STD_LOGIC;
    signal tabCos_V_we0 : STD_LOGIC;
    signal tabCos_V_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal tabCos_V_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal accum_address0 : STD_LOGIC_VECTOR (17 downto 0);
    signal accum_ce0 : STD_LOGIC;
    signal accum_we0 : STD_LOGIC;
    signal accum_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal accum_address1 : STD_LOGIC_VECTOR (17 downto 0);
    signal accum_ce1 : STD_LOGIC;
    signal accum_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sort_buf_address0 : STD_LOGIC_VECTOR (17 downto 0);
    signal sort_buf_ce0 : STD_LOGIC;
    signal sort_buf_we0 : STD_LOGIC;
    signal sort_buf_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sin_or_cos_float_s_fu_629_ap_start : STD_LOGIC;
    signal grp_sin_or_cos_float_s_fu_629_ap_done : STD_LOGIC;
    signal grp_sin_or_cos_float_s_fu_629_ap_idle : STD_LOGIC;
    signal grp_sin_or_cos_float_s_fu_629_ap_ready : STD_LOGIC;
    signal grp_sin_or_cos_float_s_fu_629_do_cos : STD_LOGIC;
    signal grp_sin_or_cos_float_s_fu_644_ap_start : STD_LOGIC;
    signal grp_sin_or_cos_float_s_fu_644_ap_done : STD_LOGIC;
    signal grp_sin_or_cos_float_s_fu_644_ap_idle : STD_LOGIC;
    signal grp_sin_or_cos_float_s_fu_644_ap_ready : STD_LOGIC;
    signal grp_sin_or_cos_float_s_fu_644_do_cos : STD_LOGIC;
    signal grp_HoughSortDescent_fu_659_ap_start : STD_LOGIC;
    signal grp_HoughSortDescent_fu_659_sequence_address0 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_HoughSortDescent_fu_659_sequence_ce0 : STD_LOGIC;
    signal grp_HoughSortDescent_fu_659_sequence_we0 : STD_LOGIC;
    signal grp_HoughSortDescent_fu_659_sequence_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_HoughSortDescent_fu_659_data_address0 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_HoughSortDescent_fu_659_data_ce0 : STD_LOGIC;
    signal i_i_reg_515 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_phi_mux_n_i_phi_fu_530_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal i_op_assign_1_reg_538 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal i_op_assign_reg_549 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal ap_phi_mux_n3_i_phi_fu_565_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal ap_phi_mux_phi_mul_phi_fu_576_p4 : STD_LOGIC_VECTOR (17 downto 0);
    signal r4_i_reg_584 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal ap_phi_mux_n5_i_phi_fu_599_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp2_stage0 : BOOLEAN;
    signal ap_phi_mux_phi_mul1_phi_fu_610_p4 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_phi_mux_i7_i_phi_fu_622_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_block_pp3_stage0 : BOOLEAN;
    signal grp_sin_or_cos_float_s_fu_629_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_or_cos_float_s_fu_644_ap_start_reg : STD_LOGIC := '0';
    signal grp_HoughSortDescent_fu_659_ap_start_reg : STD_LOGIC := '0';
    signal tmp_i_fu_704_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_55_i_fu_1015_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_21_cast_fu_1533_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_108_i_fu_1560_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_165_i_i_i_fu_1903_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp1_stage1 : BOOLEAN;
    signal tmp_142_i_fu_2145_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_76_i_fu_2221_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_85_i_fu_2231_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp2_stage1 : BOOLEAN;
    signal tmp_103_i_fu_2246_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp2_stage2 : BOOLEAN;
    signal tmp_113_i_fu_2261_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_125_i_fu_2271_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_130_i_fu_2291_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_127_i_fu_2280_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_101_i_fu_2322_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_88_i_fu_2327_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_99_i_fu_2450_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal y_assign_fu_296 : STD_LOGIC_VECTOR (31 downto 0);
    signal total_1_fu_2285_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_143_i_fu_2150_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal base_cast_i_fu_2276_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_674_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal d_assign_3_fu_677_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ireg_V_fu_727_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_tmp_V_fu_743_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_30_fu_757_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_37_i_fu_761_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal tmp_fu_731_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_56_i_fu_753_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_62_i_fu_797_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_63_i_fu_803_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_32_fu_817_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_35_fu_839_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_121_i_fu_859_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal d_assign_fu_680_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ireg_V_1_fu_871_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_tmp_V_1_fu_887_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_43_fu_901_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_42_i_fu_905_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal tmp_41_fu_875_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_131_i_fu_897_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_137_i_fu_941_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_138_i_fu_947_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_45_fu_961_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_48_fu_983_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_159_i_fu_1003_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal man_V_5_fu_1021_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal sh_amt_cast_i_fu_1029_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_78_i_fu_1046_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_79_i_fu_1050_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_31_fu_1037_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sh_amt_cast15_i_fu_1026_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_68_i_fu_1041_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_fu_1056_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal storemerge1_i_fu_1060_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_105_i_fu_1081_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_105_cast_i_fu_1086_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_34_fu_1090_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_121_cast_i_op_fu_1104_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_37_fu_1109_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_38_fu_1116_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_39_fu_1120_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal p_Result_s_fu_1126_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_124_i_fu_1132_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_1_fu_1138_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_r_i_i_i1_i_fu_1143_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal qb_fu_1098_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal qb_assign_1_fu_1148_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_126_i_fu_1154_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_27_fu_1073_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_64_i_fu_1032_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_fu_1164_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_demorgan_fu_1175_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_fu_1180_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp13_demorgan_fu_1191_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_fu_1196_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_fu_1202_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_82_i_fu_1067_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_28_fu_1158_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sel_tmp7_fu_1186_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_fu_1169_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_fu_1215_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel_fu_1207_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal newSel1_fu_1221_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal man_V_fu_1238_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal sh_amt_1_cast_i_fu_1246_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_148_i_fu_1263_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_149_i_fu_1267_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_44_fu_1254_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sh_amt_1_cast14_i_fu_1243_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_145_i_fu_1258_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_46_fu_1273_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal storemerge_i_fu_1277_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_155_i_fu_1298_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_155_cast_i_fu_1303_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_47_fu_1307_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_159_cast_i_op_fu_1321_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_50_fu_1326_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_51_fu_1333_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_52_fu_1337_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal p_Result_34_fu_1343_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_162_i_fu_1349_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_2_fu_1355_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_r_i_i_i_i_fu_1360_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal qb_1_fu_1315_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal qb_assign_3_fu_1365_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_163_i_fu_1371_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_32_fu_1290_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_139_i_fu_1249_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp4_fu_1381_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp25_demorgan_fu_1392_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_fu_1397_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp32_demorgan_fu_1408_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp10_fu_1413_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp11_fu_1419_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_152_i_fu_1284_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_33_fu_1375_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sel_tmp9_fu_1403_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp5_fu_1386_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_fu_1432_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel3_fu_1424_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal newSel4_fu_1438_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_op_assign_1_cast_i_fu_1455_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_54_fu_1470_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_55_fu_1482_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl_cast_fu_1474_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_shl1_cast_fu_1486_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal i_op_assign_cast_i_fu_1509_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_56_fu_1524_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_15_fu_1528_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_35_fu_1576_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Val2_35_fu_1576_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_4_fu_1593_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Val2_4_fu_1593_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_4_fu_1593_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal p_Val2_6_cast_i_fu_1587_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_7_cast_i_fu_1598_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_36_fu_1602_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_8_cast11_i_fu_1608_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal tmp_116_cast_i_fu_1627_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal p_Val2_12_cast_i_fu_1641_p1 : STD_LOGIC_VECTOR (48 downto 0);
    signal p_Result_56_fu_1644_p4 : STD_LOGIC_VECTOR (48 downto 0);
    signal p_Result_57_fu_1654_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_117_i_fu_1662_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal num_zeros_fu_1670_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_60_fu_1684_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_fu_1680_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_61_fu_1700_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_63_fu_1716_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_64_fu_1720_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_66_fu_1732_p4 : STD_LOGIC_VECTOR (48 downto 0);
    signal tmp_67_fu_1742_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_65_fu_1726_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_69_fu_1756_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_68_fu_1748_p3 : STD_LOGIC_VECTOR (48 downto 0);
    signal tmp_70_fu_1764_p1 : STD_LOGIC_VECTOR (48 downto 0);
    signal tmp_71_fu_1768_p2 : STD_LOGIC_VECTOR (48 downto 0);
    signal tmp_128_i_fu_1781_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp32_V_fu_1778_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_128_cast_i_fu_1786_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_1_fu_1790_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_671_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_134_i_fu_1816_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_cast_cast_fu_1824_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_73_fu_1821_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Repl2_4_trunc_i_fu_1832_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_46_i_fu_1838_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_58_fu_1845_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal f_fu_1856_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal loc_V_fu_1871_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal index_V_fu_1893_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_Result_43_fu_1909_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal one_half_i_i_cast_i_fu_1924_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_45_fu_1928_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal loc_V_2_fu_1933_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_167_i_i_i_fu_1937_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_11_fu_1949_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal xs_sig_V_fu_1943_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Result_59_fu_1916_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_60_fu_1959_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp38_v_fu_1967_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp13_fu_1978_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp14_fu_1983_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp12_fu_1974_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_2_fu_1988_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal loc_V_4_fu_2009_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_170_i_i_i_i_fu_2013_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal loc_V_3_fu_1999_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_i_i_i_i_cast_i_fu_2027_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_assign_fu_2031_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_171_i_i_i_i_fu_2045_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal isNeg_fu_2037_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_171_i_i_i_cast_i_fu_2051_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_assign_1_fu_2055_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_assign_2_i_i_i_ca_fu_2063_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sh_assign_2_i_i_i_ca_1_fu_2067_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_170_i_i_i_cast_fu_2023_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_172_i_i_i_i_fu_2071_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_173_i_i_i_i_fu_2075_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_79_fu_2087_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_174_i_i_i_i_fu_2081_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_16_fu_2095_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_fu_2099_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_61_fu_2117_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_i_i_i_i_fu_2124_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_s_fu_2129_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal r3_cast_i_fu_2136_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal base_1_fu_2139_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r4_cast_i_fu_2157_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_74_i_fu_2173_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_i_i_fu_2183_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_102_i_fu_2241_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_112_i_fu_2256_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_120_i_fu_2266_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal total_1_fu_2285_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_130_i_fu_2291_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal i7_cast7_i_fu_2313_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_cast_fu_2332_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_fu_2336_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_80_fu_2342_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal neg_mul_fu_2360_p2 : STD_LOGIC_VECTOR (64 downto 0);
    signal tmp_81_fu_2365_p4 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_18_fu_2375_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_fu_2379_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_20_fu_2382_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal neg_ti_fu_2389_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_89_i_fu_2395_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_91_i_fu_2406_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_92_i_fu_2412_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_84_fu_2421_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_rho_fu_2425_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_angle_fu_2416_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_95_i_fu_2431_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_96_i_fu_2439_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state46 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state46 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_block_pp2_stage1_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_idle_pp2 : STD_LOGIC;
    signal ap_enable_pp2 : STD_LOGIC;
    signal ap_idle_pp3 : STD_LOGIC;
    signal ap_enable_pp3 : STD_LOGIC;

    component sin_or_cos_float_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        t_in : IN STD_LOGIC_VECTOR (31 downto 0);
        do_cos : IN STD_LOGIC;
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component HoughSortDescent IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        sequence_address0 : OUT STD_LOGIC_VECTOR (17 downto 0);
        sequence_ce0 : OUT STD_LOGIC;
        sequence_we0 : OUT STD_LOGIC;
        sequence_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        sequence_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        num : IN STD_LOGIC_VECTOR (31 downto 0);
        data_address0 : OUT STD_LOGIC_VECTOR (17 downto 0);
        data_ce0 : OUT STD_LOGIC;
        data_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component HoughLines_Core_fpcA IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component HoughLines_Core_uqcK IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component HoughLines_Core_srcU IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component HoughLines_Core_fsc4 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component HoughLinesStandarjbC IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (22 downto 0) );
    end component;


    component HoughLinesStandarkbM IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component HoughLinesStandarlbW IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component HoughLinesStandarncg IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (17 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (17 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component HoughLinesStandarocq IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (17 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    mask_table1_U : component HoughLinesStandarjbC
    generic map (
        DataWidth => 23,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => mask_table1_address0,
        ce0 => mask_table1_ce0,
        q0 => mask_table1_q0);

    one_half_table2_U : component HoughLinesStandarkbM
    generic map (
        DataWidth => 24,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => one_half_table2_address0,
        ce0 => one_half_table2_ce0,
        q0 => one_half_table2_q0);

    tabSin_V_U : component HoughLinesStandarlbW
    generic map (
        DataWidth => 16,
        AddressRange => 180,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => tabSin_V_address0,
        ce0 => tabSin_V_ce0,
        we0 => tabSin_V_we0,
        d0 => tabSin_V_d0,
        q0 => tabSin_V_q0);

    tabCos_V_U : component HoughLinesStandarlbW
    generic map (
        DataWidth => 16,
        AddressRange => 180,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => tabCos_V_address0,
        ce0 => tabCos_V_ce0,
        we0 => tabCos_V_we0,
        d0 => tabCos_V_d0,
        q0 => tabCos_V_q0);

    accum_U : component HoughLinesStandarncg
    generic map (
        DataWidth => 32,
        AddressRange => 204386,
        AddressWidth => 18)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => accum_address0,
        ce0 => accum_ce0,
        we0 => accum_we0,
        d0 => accum_d0,
        q0 => accum_q0,
        address1 => accum_address1,
        ce1 => accum_ce1,
        q1 => accum_q1);

    sort_buf_U : component HoughLinesStandarocq
    generic map (
        DataWidth => 32,
        AddressRange => 204386,
        AddressWidth => 18)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => sort_buf_address0,
        ce0 => sort_buf_ce0,
        we0 => sort_buf_we0,
        d0 => sort_buf_d0,
        q0 => sort_buf_q0);

    grp_sin_or_cos_float_s_fu_629 : component sin_or_cos_float_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_or_cos_float_s_fu_629_ap_start,
        ap_done => grp_sin_or_cos_float_s_fu_629_ap_done,
        ap_idle => grp_sin_or_cos_float_s_fu_629_ap_idle,
        ap_ready => grp_sin_or_cos_float_s_fu_629_ap_ready,
        t_in => angle_reg_2502,
        do_cos => grp_sin_or_cos_float_s_fu_629_do_cos,
        ap_return => grp_sin_or_cos_float_s_fu_629_ap_return);

    grp_sin_or_cos_float_s_fu_644 : component sin_or_cos_float_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_or_cos_float_s_fu_644_ap_start,
        ap_done => grp_sin_or_cos_float_s_fu_644_ap_done,
        ap_idle => grp_sin_or_cos_float_s_fu_644_ap_idle,
        ap_ready => grp_sin_or_cos_float_s_fu_644_ap_ready,
        t_in => angle_reg_2502,
        do_cos => grp_sin_or_cos_float_s_fu_644_do_cos,
        ap_return => grp_sin_or_cos_float_s_fu_644_ap_return);

    grp_HoughSortDescent_fu_659 : component HoughSortDescent
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_HoughSortDescent_fu_659_ap_start,
        ap_done => grp_HoughSortDescent_fu_659_ap_done,
        ap_idle => grp_HoughSortDescent_fu_659_ap_idle,
        ap_ready => grp_HoughSortDescent_fu_659_ap_ready,
        sequence_address0 => grp_HoughSortDescent_fu_659_sequence_address0,
        sequence_ce0 => grp_HoughSortDescent_fu_659_sequence_ce0,
        sequence_we0 => grp_HoughSortDescent_fu_659_sequence_we0,
        sequence_d0 => grp_HoughSortDescent_fu_659_sequence_d0,
        sequence_q0 => sort_buf_q0,
        num => y_assign_fu_296,
        data_address0 => grp_HoughSortDescent_fu_659_data_address0,
        data_ce0 => grp_HoughSortDescent_fu_659_data_ce0,
        data_q0 => accum_q0);

    HoughLines_Core_fpcA_U46 : component HoughLines_Core_fpcA
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_54_i_reg_2497,
        din1 => ap_const_lv32_3C8EFA35,
        ce => ap_const_logic_1,
        dout => grp_fu_666_p2);

    HoughLines_Core_uqcK_U47 : component HoughLines_Core_uqcK
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp32_V_3_reg_2777,
        ce => ap_const_logic_1,
        dout => grp_fu_671_p1);

    HoughLines_Core_srcU_U48 : component HoughLines_Core_srcU
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_674_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_674_p1);

    HoughLines_Core_fsc4_U49 : component HoughLines_Core_fsc4
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => v_assign_reg_2508,
        dout => d_assign_3_fu_677_p1);

    HoughLines_Core_fsc4_U50 : component HoughLines_Core_fsc4
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => v_assign_1_reg_2513,
        dout => d_assign_fu_680_p1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond3_i_fu_692_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state3);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond3_i_fu_692_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state21) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state20) and (tmp_72_i_fu_1538_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1))) then
                    if ((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state21)) then 
                        ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state21);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1))) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1))) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1))) then 
                    ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter5 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp1_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
                    ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state20) and (tmp_72_i_fu_1538_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp1_iter5 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp2_exit_iter0_state34) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state33) and (exitcond5_i_fu_2161_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp2_stage2_subdone) and (ap_const_logic_1 = ap_condition_pp2_exit_iter0_state34) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2))) then 
                    ap_enable_reg_pp2_iter1 <= (ap_const_logic_1 xor ap_condition_pp2_exit_iter0_state34);
                elsif (((ap_const_boolean_0 = ap_block_pp2_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2))) then 
                    ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state33) and (exitcond5_i_fu_2161_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp3_exit_iter0_state42) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
                elsif (((grp_HoughSortDescent_fu_659_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state41))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp3_exit_iter0_state42)) then 
                        ap_enable_reg_pp3_iter1 <= (ap_const_logic_1 xor ap_condition_pp3_exit_iter0_state42);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
                elsif (((grp_HoughSortDescent_fu_659_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state41))) then 
                    ap_enable_reg_pp3_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_HoughSortDescent_fu_659_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_HoughSortDescent_fu_659_ap_start_reg <= ap_const_logic_0;
            else
                if (((exitcond5_i_fu_2161_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state33))) then 
                    grp_HoughSortDescent_fu_659_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_HoughSortDescent_fu_659_ap_ready = ap_const_logic_1)) then 
                    grp_HoughSortDescent_fu_659_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_or_cos_float_s_fu_629_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_or_cos_float_s_fu_629_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (exitcond4_i_reg_2483_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    grp_sin_or_cos_float_s_fu_629_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_or_cos_float_s_fu_629_ap_ready = ap_const_logic_1)) then 
                    grp_sin_or_cos_float_s_fu_629_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_or_cos_float_s_fu_644_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_or_cos_float_s_fu_644_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (exitcond4_i_reg_2483_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    grp_sin_or_cos_float_s_fu_644_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_or_cos_float_s_fu_644_ap_ready = ap_const_logic_1)) then 
                    grp_sin_or_cos_float_s_fu_644_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i7_i_reg_618_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (exitcond_i_reg_2942 = ap_const_lv1_0))) then 
                i7_i_reg_618 <= i_2_reg_2946;
            elsif (((grp_HoughSortDescent_fu_659_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state41))) then 
                i7_i_reg_618 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    i_i_reg_515_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((threshold_empty_n = ap_const_logic_0) or (edge_cols_empty_n = ap_const_logic_0) or (edge_rows_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_i_reg_515 <= ap_const_lv18_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond3_i_fu_692_p2 = ap_const_lv1_0))) then 
                i_i_reg_515 <= i_fu_698_p2;
            end if; 
        end if;
    end process;

    i_op_assign_1_reg_538_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                i_op_assign_1_reg_538 <= ap_const_lv31_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state19) and (tmp_67_i_fu_1513_p2 = ap_const_lv1_0))) then 
                i_op_assign_1_reg_538 <= i_1_reg_2657;
            end if; 
        end if;
    end process;

    i_op_assign_reg_549_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_59_i_fu_1459_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
                i_op_assign_reg_549 <= ap_const_lv31_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
                i_op_assign_reg_549 <= j_reg_2682;
            end if; 
        end if;
    end process;

    n3_i_reg_561_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state20) and (tmp_72_i_fu_1538_p2 = ap_const_lv1_0))) then 
                n3_i_reg_561 <= ap_const_lv8_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond7_i_reg_2701 = ap_const_lv1_0))) then 
                n3_i_reg_561 <= n_1_reg_2705;
            end if; 
        end if;
    end process;

    n5_i_reg_595_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state33) and (exitcond5_i_fu_2161_p2 = ap_const_lv1_0))) then 
                n5_i_reg_595 <= ap_const_lv8_0;
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (exitcond6_i_reg_2864 = ap_const_lv1_0))) then 
                n5_i_reg_595 <= n_reg_2868;
            end if; 
        end if;
    end process;

    n_i_reg_526_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond3_i_fu_692_p2 = ap_const_lv1_1))) then 
                n_i_reg_526 <= ap_const_lv8_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond4_i_reg_2483 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                n_i_reg_526 <= n_2_reg_2487;
            end if; 
        end if;
    end process;

    phi_mul1_reg_606_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state33) and (exitcond5_i_fu_2161_p2 = ap_const_lv1_0))) then 
                phi_mul1_reg_606 <= ap_const_lv18_0;
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (exitcond6_i_reg_2864 = ap_const_lv1_0))) then 
                phi_mul1_reg_606 <= next_mul1_reg_2907;
            end if; 
        end if;
    end process;

    phi_mul_reg_572_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state20) and (tmp_72_i_fu_1538_p2 = ap_const_lv1_0))) then 
                phi_mul_reg_572 <= ap_const_lv18_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond7_i_reg_2701 = ap_const_lv1_0))) then 
                phi_mul_reg_572 <= next_mul_reg_2736;
            end if; 
        end if;
    end process;

    r4_i_reg_584_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
                r4_i_reg_584 <= r_reg_2844;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state18) and (tmp_59_i_fu_1459_p2 = ap_const_lv1_0))) then 
                r4_i_reg_584 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    y_assign_fu_296_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage2_11001) and (tmp_127_i_fu_2280_p2 = ap_const_lv1_1) and (tmp_104_i_reg_2921 = ap_const_lv1_1) and (tmp_77_i_reg_2898_pp2_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (tmp_115_i_reg_2930 = ap_const_lv1_0) and (tmp_86_i_reg_2912 = ap_const_lv1_0))) then 
                y_assign_fu_296 <= total_1_fu_2285_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state18) and (tmp_59_i_fu_1459_p2 = ap_const_lv1_0))) then 
                y_assign_fu_296 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond4_i_reg_2483_pp0_iter11_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                F2_1_reg_2610 <= F2_1_fu_929_p2;
                F2_reg_2542 <= F2_fu_785_p2;
                icmp1_reg_2571 <= icmp1_fu_849_p2;
                icmp2_reg_2629 <= icmp2_fu_971_p2;
                icmp3_reg_2639 <= icmp3_fu_993_p2;
                icmp_reg_2561 <= icmp_fu_827_p2;
                isneg_1_reg_2586 <= ireg_V_1_fu_871_p1(63 downto 63);
                isneg_reg_2518 <= ireg_V_fu_727_p1(63 downto 63);
                man_V_1_reg_2531 <= man_V_1_fu_773_p2;
                man_V_3_reg_2599 <= man_V_3_fu_917_p2;
                    p_Result_54_reg_2526(51 downto 0) <= p_Result_54_fu_769_p1(51 downto 0);
                    p_Result_55_reg_2594(51 downto 0) <= p_Result_55_fu_913_p1(51 downto 0);
                sh_amt_1_reg_2622 <= sh_amt_1_fu_953_p3;
                sh_amt_reg_2554 <= sh_amt_fu_809_p3;
                tmp_122_i_reg_2581 <= tmp_122_i_fu_865_p2;
                tmp_133_i_reg_2604 <= tmp_133_i_fu_923_p2;
                tmp_136_i_reg_2616 <= tmp_136_i_fu_935_p2;
                tmp_154_i_reg_2634 <= tmp_154_i_fu_977_p2;
                tmp_160_i_reg_2649 <= tmp_160_i_fu_1009_p2;
                tmp_36_reg_2576 <= tmp_36_fu_855_p1;
                tmp_49_reg_2644 <= tmp_49_fu_999_p1;
                tmp_58_i_reg_2536 <= tmp_58_i_fu_779_p2;
                tmp_61_i_reg_2548 <= tmp_61_i_fu_791_p2;
                tmp_87_i_reg_2566 <= tmp_87_i_fu_833_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_59_i_fu_1459_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                    OP1_V_4_cast_i_reg_2667(30 downto 0) <= OP1_V_4_cast_i_fu_1500_p1(30 downto 0);
                    tmp_s_reg_2662(17 downto 6) <= tmp_s_fu_1494_p2(17 downto 6);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state20) and (tmp_72_i_fu_1538_p2 = ap_const_lv1_0))) then
                    OP1_V_cast_i_reg_2696(30 downto 0) <= OP1_V_cast_i_fu_1544_p1(30 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (exitcond7_i_reg_2701_pp1_iter4_reg = ap_const_lv1_0))) then
                accum_addr_6_reg_2835 <= tmp_142_i_fu_2145_p1(18 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond4_i_reg_2483_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                angle_reg_2502 <= grp_fu_666_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (exitcond6_i_fu_2198_p2 = ap_const_lv1_0))) then
                base_reg_2881 <= base_fu_2215_p2;
                tmp_75_i_reg_2873 <= tmp_75_i_fu_2210_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                base_reg_2881_pp2_iter1_reg <= base_reg_2881;
                exitcond6_i_reg_2864 <= exitcond6_i_fu_2198_p2;
                tmp_75_i_reg_2873_pp2_iter1_reg <= tmp_75_i_reg_2873;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((threshold_empty_n = ap_const_logic_0) or (edge_cols_empty_n = ap_const_logic_0) or (edge_rows_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                cols_reg_2459 <= edge_cols_dout;
                rows_reg_2454 <= edge_rows_dout;
                threshold_read_reg_2464 <= threshold_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                exitcond4_i_reg_2483 <= exitcond4_i_fu_710_p2;
                exitcond4_i_reg_2483_pp0_iter1_reg <= exitcond4_i_reg_2483;
                n_i_reg_526_pp0_iter1_reg <= n_i_reg_526;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                exitcond4_i_reg_2483_pp0_iter10_reg <= exitcond4_i_reg_2483_pp0_iter9_reg;
                exitcond4_i_reg_2483_pp0_iter11_reg <= exitcond4_i_reg_2483_pp0_iter10_reg;
                exitcond4_i_reg_2483_pp0_iter12_reg <= exitcond4_i_reg_2483_pp0_iter11_reg;
                exitcond4_i_reg_2483_pp0_iter2_reg <= exitcond4_i_reg_2483_pp0_iter1_reg;
                exitcond4_i_reg_2483_pp0_iter3_reg <= exitcond4_i_reg_2483_pp0_iter2_reg;
                exitcond4_i_reg_2483_pp0_iter4_reg <= exitcond4_i_reg_2483_pp0_iter3_reg;
                exitcond4_i_reg_2483_pp0_iter5_reg <= exitcond4_i_reg_2483_pp0_iter4_reg;
                exitcond4_i_reg_2483_pp0_iter6_reg <= exitcond4_i_reg_2483_pp0_iter5_reg;
                exitcond4_i_reg_2483_pp0_iter7_reg <= exitcond4_i_reg_2483_pp0_iter6_reg;
                exitcond4_i_reg_2483_pp0_iter8_reg <= exitcond4_i_reg_2483_pp0_iter7_reg;
                exitcond4_i_reg_2483_pp0_iter9_reg <= exitcond4_i_reg_2483_pp0_iter8_reg;
                n_i_reg_526_pp0_iter10_reg <= n_i_reg_526_pp0_iter9_reg;
                n_i_reg_526_pp0_iter11_reg <= n_i_reg_526_pp0_iter10_reg;
                n_i_reg_526_pp0_iter12_reg <= n_i_reg_526_pp0_iter11_reg;
                n_i_reg_526_pp0_iter2_reg <= n_i_reg_526_pp0_iter1_reg;
                n_i_reg_526_pp0_iter3_reg <= n_i_reg_526_pp0_iter2_reg;
                n_i_reg_526_pp0_iter4_reg <= n_i_reg_526_pp0_iter3_reg;
                n_i_reg_526_pp0_iter5_reg <= n_i_reg_526_pp0_iter4_reg;
                n_i_reg_526_pp0_iter6_reg <= n_i_reg_526_pp0_iter5_reg;
                n_i_reg_526_pp0_iter7_reg <= n_i_reg_526_pp0_iter6_reg;
                n_i_reg_526_pp0_iter8_reg <= n_i_reg_526_pp0_iter7_reg;
                n_i_reg_526_pp0_iter9_reg <= n_i_reg_526_pp0_iter8_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                exitcond7_i_reg_2701 <= exitcond7_i_fu_1548_p2;
                exitcond7_i_reg_2701_pp1_iter1_reg <= exitcond7_i_reg_2701;
                exitcond7_i_reg_2701_pp1_iter2_reg <= exitcond7_i_reg_2701_pp1_iter1_reg;
                exitcond7_i_reg_2701_pp1_iter3_reg <= exitcond7_i_reg_2701_pp1_iter2_reg;
                exitcond7_i_reg_2701_pp1_iter4_reg <= exitcond7_i_reg_2701_pp1_iter3_reg;
                is_neg_reg_2746_pp1_iter2_reg <= is_neg_reg_2746;
                is_neg_reg_2746_pp1_iter3_reg <= is_neg_reg_2746_pp1_iter2_reg;
                r3_i_reg_2720_pp1_iter1_reg <= r3_i_reg_2720;
                r3_i_reg_2720_pp1_iter2_reg <= r3_i_reg_2720_pp1_iter1_reg;
                r3_i_reg_2720_pp1_iter3_reg <= r3_i_reg_2720_pp1_iter2_reg;
                r3_i_reg_2720_pp1_iter4_reg <= r3_i_reg_2720_pp1_iter3_reg;
                tmp_111_i_reg_2741_pp1_iter2_reg <= tmp_111_i_reg_2741;
                tmp_111_i_reg_2741_pp1_iter3_reg <= tmp_111_i_reg_2741_pp1_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then
                exitcond_i_reg_2942 <= exitcond_i_fu_2301_p2;
                i_2_reg_2946_pp3_iter1_reg <= i_2_reg_2946;
                tmp_84_i_reg_2952_pp3_iter1_reg <= tmp_84_i_reg_2952;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then
                i_1_reg_2657 <= i_1_fu_1464_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then
                i_2_reg_2946 <= i_2_fu_2307_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp3_stage0_11001)) then
                i_2_reg_2946_pp3_iter2_reg <= i_2_reg_2946_pp3_iter1_reg;
                idx_reg_2961_pp3_iter2_reg <= idx_reg_2961;
                tmp_84_i_reg_2952_pp3_iter2_reg <= tmp_84_i_reg_2952_pp3_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (tmp_111_i_reg_2741 = ap_const_lv1_0) and (exitcond7_i_reg_2701_pp1_iter1_reg = ap_const_lv1_0))) then
                icmp4_reg_2767 <= icmp4_fu_1710_p2;
                msb_idx_1_reg_2762 <= msb_idx_1_fu_1692_p3;
                msb_idx_reg_2757 <= msb_idx_fu_1674_p2;
                tmp32_V_2_reg_2772 <= tmp32_V_2_fu_1774_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (tmp_84_i_reg_2952 = ap_const_lv1_1) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then
                idx_reg_2961 <= sort_buf_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond7_i_reg_2701 = ap_const_lv1_0))) then
                is_neg_reg_2746 <= p_Val2_36_fu_1602_p2(47 downto 47);
                p_Val2_38_reg_2751 <= p_Val2_38_fu_1633_p3;
                tmp_111_i_reg_2741 <= tmp_111_i_fu_1613_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then
                j_reg_2682 <= j_fu_1518_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1))) then
                msb_idx_reg_2757_pp1_iter2_reg <= msb_idx_reg_2757;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (tmp_84_i_reg_2952 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then
                mul_reg_2966 <= mul_fu_2336_p2;
                tmp_80_reg_2971 <= tmp_80_fu_2342_p1(31 downto 31);
                tmp_82_reg_2977 <= mul_fu_2336_p2(64 downto 43);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                n_1_reg_2705 <= n_1_fu_1554_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                n_2_reg_2487 <= n_2_fu_716_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                n_reg_2868 <= n_fu_2204_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (exitcond6_i_reg_2864 = ap_const_lv1_0))) then
                next_mul1_reg_2907 <= next_mul1_fu_2235_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (exitcond7_i_reg_2701 = ap_const_lv1_0))) then
                next_mul_reg_2736 <= next_mul_fu_1581_p2;
                tabSin_V_load_reg_2731 <= tabSin_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (tmp_111_i_reg_2741_pp1_iter2_reg = ap_const_lv1_0) and (exitcond7_i_reg_2701_pp1_iter2_reg = ap_const_lv1_0))) then
                p_Result_12_i_reg_2787 <= tmp32_V_6_fu_1802_p1(30 downto 23);
                tmp32_V_6_reg_2782 <= tmp32_V_6_fu_1802_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (exitcond7_i_reg_2701 = ap_const_lv1_0))) then
                p_Val2_35_reg_2725 <= p_Val2_35_fu_1576_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond7_i_reg_2701_pp1_iter3_reg = ap_const_lv1_0))) then
                p_Val2_47_reg_2824 <= p_Val2_47_fu_1995_p1;
                p_Val2_49_reg_2829 <= p_Val2_49_fu_2109_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond7_i_fu_1548_p2 = ap_const_lv1_0))) then
                r3_i_reg_2720 <= r3_i_fu_1566_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state33)) then
                r_reg_2844 <= r_fu_2167_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (exitcond7_i_reg_2701_pp1_iter3_reg = ap_const_lv1_0))) then
                t_V_6_reg_2797 <= t_V_6_fu_1867_p1;
                tmp_164_i_i_i_reg_2809 <= tmp_164_i_i_i_fu_1887_p2;
                tmp_i_i_i_reg_2803 <= tmp_i_i_i_fu_1881_p2;
                x_assign_reg_2792 <= x_assign_fu_1860_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (tmp_111_i_reg_2741 = ap_const_lv1_0) and (exitcond7_i_reg_2701_pp1_iter1_reg = ap_const_lv1_0))) then
                tmp32_V_3_reg_2777 <= tmp32_V_3_fu_1796_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (tmp_77_i_reg_2898 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (tmp_86_i_reg_2912 = ap_const_lv1_0))) then
                tmp_104_i_reg_2921 <= tmp_104_i_fu_2251_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (tmp_104_i_reg_2921 = ap_const_lv1_1) and (tmp_77_i_reg_2898 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (tmp_86_i_reg_2912 = ap_const_lv1_0))) then
                tmp_115_i_reg_2930 <= grp_fu_687_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond4_i_reg_2483 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_54_i_reg_2497 <= grp_fu_674_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state33) and (exitcond5_i_fu_2161_p2 = ap_const_lv1_0))) then
                    tmp_74_cast_i_reg_2849(11 downto 0) <= tmp_74_cast_i_fu_2179_p1(11 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (exitcond6_i_reg_2864 = ap_const_lv1_0))) then
                tmp_77_i_reg_2898 <= tmp_77_i_fu_2226_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1))) then
                tmp_77_i_reg_2898_pp2_iter1_reg <= tmp_77_i_reg_2898;
                val_reg_2891_pp2_iter1_reg <= val_reg_2891;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (tmp_84_i_reg_2952_pp3_iter1_reg = ap_const_lv1_1))) then
                tmp_83_reg_2982 <= tmp_83_fu_2402_p1;
                tmp_91_i_reg_2987 <= tmp_91_i_fu_2406_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (exitcond_i_fu_2301_p2 = ap_const_lv1_0))) then
                tmp_84_i_reg_2952 <= tmp_84_i_fu_2317_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage2_11001) and (tmp_77_i_reg_2898 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (exitcond6_i_reg_2864 = ap_const_lv1_0))) then
                tmp_86_i_reg_2912 <= grp_fu_687_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond5_i_fu_2161_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state33))) then
                total_reg_2859 <= total_fu_2189_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond4_i_reg_2483_pp0_iter10_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                v_assign_1_reg_2513 <= grp_sin_or_cos_float_s_fu_644_ap_return;
                v_assign_reg_2508 <= grp_sin_or_cos_float_s_fu_629_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (exitcond6_i_reg_2864 = ap_const_lv1_0))) then
                val_reg_2891 <= accum_q0;
            end if;
        end if;
    end process;
    p_Result_54_reg_2526(53 downto 52) <= "01";
    p_Result_55_reg_2594(53 downto 52) <= "01";
    tmp_s_reg_2662(5 downto 0) <= "000000";
    OP1_V_4_cast_i_reg_2667(46 downto 31) <= "0000000000000000";
    OP1_V_cast_i_reg_2696(46 downto 31) <= "0000000000000000";
    tmp_74_cast_i_reg_2849(17 downto 12) <= "000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, edge_rows_empty_n, edge_cols_empty_n, threshold_empty_n, exitcond3_i_fu_692_p2, ap_CS_fsm_state2, exitcond4_i_fu_710_p2, ap_enable_reg_pp0_iter0, ap_CS_fsm_state18, tmp_59_i_fu_1459_p2, ap_CS_fsm_state19, tmp_67_i_fu_1513_p2, tmp_72_i_fu_1538_p2, ap_CS_fsm_state20, exitcond7_i_fu_1548_p2, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, exitcond5_i_fu_2161_p2, ap_CS_fsm_state33, exitcond6_i_fu_2198_p2, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp2_stage2, ap_enable_reg_pp2_iter1, exitcond_i_fu_2301_p2, ap_enable_reg_pp3_iter0, ap_enable_reg_pp3_iter1, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter1, ap_block_pp1_stage1_subdone, ap_enable_reg_pp1_iter4, ap_enable_reg_pp1_iter5, ap_block_pp2_stage0_subdone, ap_block_pp2_stage2_subdone, ap_CS_fsm_state41, grp_HoughSortDescent_fu_659_ap_done, ap_block_pp3_stage0_subdone, ap_enable_reg_pp3_iter2, ap_enable_reg_pp3_iter3, ap_block_pp2_stage1_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((threshold_empty_n = ap_const_logic_0) or (edge_cols_empty_n = ap_const_logic_0) or (edge_rows_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond3_i_fu_692_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond4_i_fu_710_p2 = ap_const_lv1_1))) and not(((ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond4_i_fu_710_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state18) and (tmp_59_i_fu_1459_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state33;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when ap_ST_fsm_state19 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state19) and (tmp_67_i_fu_1513_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state20;
                end if;
            when ap_ST_fsm_state20 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state20) and (tmp_72_i_fu_1538_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state32;
                end if;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (exitcond7_i_fu_1548_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp1_iter4 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage1;
                elsif ((((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (exitcond7_i_fu_1548_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp1_iter4 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_pp1_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage1;
                end if;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state33 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state33) and (exitcond5_i_fu_2161_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state41;
                end if;
            when ap_ST_fsm_pp2_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (exitcond6_i_fu_2198_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage1;
                elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (exitcond6_i_fu_2198_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state40;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_pp2_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp2_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage1;
                end if;
            when ap_ST_fsm_pp2_stage2 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp2_stage2_subdone) and (ap_enable_reg_pp2_iter0 = ap_const_logic_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2))) and (ap_const_boolean_0 = ap_block_pp2_stage2_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp2_stage2_subdone) and (ap_enable_reg_pp2_iter0 = ap_const_logic_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2))) then
                    ap_NS_fsm <= ap_ST_fsm_state40;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage2;
                end if;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state41 => 
                if (((grp_HoughSortDescent_fu_659_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state41))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state41;
                end if;
            when ap_ST_fsm_pp3_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (exitcond_i_fu_2301_p2 = ap_const_lv1_1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp3_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_enable_reg_pp3_iter3 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                elsif ((((ap_enable_reg_pp3_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_enable_reg_pp3_iter3 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (exitcond_i_fu_2301_p2 = ap_const_lv1_1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state46;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                end if;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    F2_1_fu_929_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(tmp_131_i_fu_897_p1));
    F2_fu_785_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(tmp_56_i_fu_753_p1));
    OP1_V_4_cast_i_fu_1500_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_op_assign_1_reg_538),47));
    OP1_V_cast_i_fu_1544_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_op_assign_reg_549),47));

    accum_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_pp1_stage0, ap_CS_fsm_pp1_stage1, accum_addr_6_reg_2835, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp2_stage1, ap_enable_reg_pp2_iter1, ap_enable_reg_pp1_iter4, ap_enable_reg_pp1_iter5, ap_CS_fsm_state41, grp_HoughSortDescent_fu_659_data_address0, ap_block_pp1_stage0, ap_block_pp2_stage0, tmp_i_fu_704_p1, ap_block_pp1_stage1, tmp_142_i_fu_2145_p1, tmp_76_i_fu_2221_p1, ap_block_pp2_stage1, tmp_125_i_fu_2271_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1))) then 
            accum_address0 <= tmp_125_i_fu_2271_p1(18 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            accum_address0 <= tmp_76_i_fu_2221_p1(18 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            accum_address0 <= accum_addr_6_reg_2835;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage1) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1))) then 
            accum_address0 <= tmp_142_i_fu_2145_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            accum_address0 <= tmp_i_fu_704_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            accum_address0 <= grp_HoughSortDescent_fu_659_data_address0;
        else 
            accum_address0 <= "XXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    accum_address1_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp2_stage1, ap_CS_fsm_pp2_stage2, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0, tmp_85_i_fu_2231_p1, ap_block_pp2_stage1, tmp_103_i_fu_2246_p1, ap_block_pp2_stage2, tmp_113_i_fu_2261_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            accum_address1 <= tmp_113_i_fu_2261_p1(18 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) then 
            accum_address1 <= tmp_103_i_fu_2246_p1(18 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) then 
            accum_address1 <= tmp_85_i_fu_2231_p1(18 - 1 downto 0);
        else 
            accum_address1 <= "XXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    accum_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_11001, ap_enable_reg_pp2_iter1, ap_enable_reg_pp1_iter4, ap_enable_reg_pp1_iter5, ap_CS_fsm_state41, grp_HoughSortDescent_fu_659_data_ce0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            accum_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            accum_ce0 <= grp_HoughSortDescent_fu_659_data_ce0;
        else 
            accum_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    accum_ce1_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_11001, ap_CS_fsm_pp2_stage2, ap_block_pp2_stage2_11001, ap_enable_reg_pp2_iter1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)))) then 
            accum_ce1 <= ap_const_logic_1;
        else 
            accum_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    accum_d0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter5, ap_block_pp1_stage0, tmp_143_i_fu_2150_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            accum_d0 <= tmp_143_i_fu_2150_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            accum_d0 <= ap_const_lv32_0;
        else 
            accum_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    accum_we0_assign_proc : process(exitcond3_i_fu_692_p2, ap_CS_fsm_state2, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, exitcond7_i_reg_2701_pp1_iter4_reg, ap_enable_reg_pp1_iter5)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond7_i_reg_2701_pp1_iter4_reg = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond3_i_fu_692_p2 = ap_const_lv1_0)))) then 
            accum_we0 <= ap_const_logic_1;
        else 
            accum_we0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(7);
    ap_CS_fsm_pp1_stage1 <= ap_CS_fsm(8);
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(11);
    ap_CS_fsm_pp2_stage1 <= ap_CS_fsm(12);
    ap_CS_fsm_pp2_stage2 <= ap_CS_fsm(13);
    ap_CS_fsm_pp3_stage0 <= ap_CS_fsm(16);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state17 <= ap_CS_fsm(3);
    ap_CS_fsm_state18 <= ap_CS_fsm(4);
    ap_CS_fsm_state19 <= ap_CS_fsm(5);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(6);
    ap_CS_fsm_state32 <= ap_CS_fsm(9);
    ap_CS_fsm_state33 <= ap_CS_fsm(10);
    ap_CS_fsm_state40 <= ap_CS_fsm(14);
    ap_CS_fsm_state41 <= ap_CS_fsm(15);
    ap_CS_fsm_state46 <= ap_CS_fsm(17);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, edge_rows_empty_n, edge_cols_empty_n, threshold_empty_n)
    begin
                ap_block_state1 <= ((threshold_empty_n = ap_const_logic_0) or (edge_cols_empty_n = ap_const_logic_0) or (edge_rows_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state10_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp1_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp1_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp1_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp1_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp1_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp1_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp1_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp1_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp2_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp2_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp2_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp2_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp2_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp2_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state42_pp3_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state43_pp3_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state44_pp3_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state45_pp3_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state3_assign_proc : process(exitcond4_i_fu_710_p2)
    begin
        if ((exitcond4_i_fu_710_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state21_assign_proc : process(exitcond7_i_fu_1548_p2)
    begin
        if ((exitcond7_i_fu_1548_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state21 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state21 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp2_exit_iter0_state34_assign_proc : process(exitcond6_i_fu_2198_p2)
    begin
        if ((exitcond6_i_fu_2198_p2 = ap_const_lv1_1)) then 
            ap_condition_pp2_exit_iter0_state34 <= ap_const_logic_1;
        else 
            ap_condition_pp2_exit_iter0_state34 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp3_exit_iter0_state42_assign_proc : process(exitcond_i_fu_2301_p2)
    begin
        if ((exitcond_i_fu_2301_p2 = ap_const_lv1_1)) then 
            ap_condition_pp3_exit_iter0_state42 <= ap_const_logic_1;
        else 
            ap_condition_pp3_exit_iter0_state42 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state46)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);
    ap_enable_pp2 <= (ap_idle_pp2 xor ap_const_logic_1);
    ap_enable_pp3 <= (ap_idle_pp3 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter4, ap_enable_reg_pp1_iter5)
    begin
        if (((ap_enable_reg_pp1_iter5 = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp2_assign_proc : process(ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_0))) then 
            ap_idle_pp2 <= ap_const_logic_1;
        else 
            ap_idle_pp2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp3_assign_proc : process(ap_enable_reg_pp3_iter0, ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter2, ap_enable_reg_pp3_iter3)
    begin
        if (((ap_enable_reg_pp3_iter3 = ap_const_logic_0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_0))) then 
            ap_idle_pp3 <= ap_const_logic_1;
        else 
            ap_idle_pp3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_i7_i_phi_fu_622_p4_assign_proc : process(i7_i_reg_618, exitcond_i_reg_2942, ap_CS_fsm_pp3_stage0, i_2_reg_2946, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (exitcond_i_reg_2942 = ap_const_lv1_0))) then 
            ap_phi_mux_i7_i_phi_fu_622_p4 <= i_2_reg_2946;
        else 
            ap_phi_mux_i7_i_phi_fu_622_p4 <= i7_i_reg_618;
        end if; 
    end process;


    ap_phi_mux_n3_i_phi_fu_565_p4_assign_proc : process(n3_i_reg_561, exitcond7_i_reg_2701, ap_CS_fsm_pp1_stage0, n_1_reg_2705, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond7_i_reg_2701 = ap_const_lv1_0))) then 
            ap_phi_mux_n3_i_phi_fu_565_p4 <= n_1_reg_2705;
        else 
            ap_phi_mux_n3_i_phi_fu_565_p4 <= n3_i_reg_561;
        end if; 
    end process;


    ap_phi_mux_n5_i_phi_fu_599_p4_assign_proc : process(n5_i_reg_595, exitcond6_i_reg_2864, ap_CS_fsm_pp2_stage0, n_reg_2868, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (exitcond6_i_reg_2864 = ap_const_lv1_0))) then 
            ap_phi_mux_n5_i_phi_fu_599_p4 <= n_reg_2868;
        else 
            ap_phi_mux_n5_i_phi_fu_599_p4 <= n5_i_reg_595;
        end if; 
    end process;


    ap_phi_mux_n_i_phi_fu_530_p4_assign_proc : process(n_i_reg_526, ap_CS_fsm_pp0_stage0, exitcond4_i_reg_2483, n_2_reg_2487, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond4_i_reg_2483 = ap_const_lv1_0))) then 
            ap_phi_mux_n_i_phi_fu_530_p4 <= n_2_reg_2487;
        else 
            ap_phi_mux_n_i_phi_fu_530_p4 <= n_i_reg_526;
        end if; 
    end process;


    ap_phi_mux_phi_mul1_phi_fu_610_p4_assign_proc : process(phi_mul1_reg_606, exitcond6_i_reg_2864, ap_CS_fsm_pp2_stage0, next_mul1_reg_2907, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (exitcond6_i_reg_2864 = ap_const_lv1_0))) then 
            ap_phi_mux_phi_mul1_phi_fu_610_p4 <= next_mul1_reg_2907;
        else 
            ap_phi_mux_phi_mul1_phi_fu_610_p4 <= phi_mul1_reg_606;
        end if; 
    end process;


    ap_phi_mux_phi_mul_phi_fu_576_p4_assign_proc : process(phi_mul_reg_572, exitcond7_i_reg_2701, ap_CS_fsm_pp1_stage0, next_mul_reg_2736, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond7_i_reg_2701 = ap_const_lv1_0))) then 
            ap_phi_mux_phi_mul_phi_fu_576_p4 <= next_mul_reg_2736;
        else 
            ap_phi_mux_phi_mul_phi_fu_576_p4 <= phi_mul_reg_572;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state46)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    base_1_fu_2139_p2 <= std_logic_vector(unsigned(p_Val2_s_fu_2129_p3) + unsigned(r3_cast_i_fu_2136_p1));
    base_cast_i_fu_2276_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(base_reg_2881_pp2_iter1_reg),32));
    base_fu_2215_p2 <= std_logic_vector(unsigned(tmp_75_i_fu_2210_p2) + unsigned(ap_const_lv18_1));

    edge_cols_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, edge_cols_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            edge_cols_blk_n <= edge_cols_empty_n;
        else 
            edge_cols_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    edge_cols_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, edge_rows_empty_n, edge_cols_empty_n, threshold_empty_n)
    begin
        if ((not(((threshold_empty_n = ap_const_logic_0) or (edge_cols_empty_n = ap_const_logic_0) or (edge_rows_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            edge_cols_read <= ap_const_logic_1;
        else 
            edge_cols_read <= ap_const_logic_0;
        end if; 
    end process;


    edge_rows_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, edge_rows_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            edge_rows_blk_n <= edge_rows_empty_n;
        else 
            edge_rows_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    edge_rows_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, edge_rows_empty_n, edge_cols_empty_n, threshold_empty_n)
    begin
        if ((not(((threshold_empty_n = ap_const_logic_0) or (edge_cols_empty_n = ap_const_logic_0) or (edge_rows_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            edge_rows_read <= ap_const_logic_1;
        else 
            edge_rows_read <= ap_const_logic_0;
        end if; 
    end process;

    edge_val_address0 <= tmp_21_cast_fu_1533_p1(17 - 1 downto 0);

    edge_val_ce0_assign_proc : process(ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            edge_val_ce0 <= ap_const_logic_1;
        else 
            edge_val_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond3_i_fu_692_p2 <= "1" when (i_i_reg_515 = ap_const_lv18_31E62) else "0";
    exitcond4_i_fu_710_p2 <= "1" when (ap_phi_mux_n_i_phi_fu_530_p4 = ap_const_lv8_B4) else "0";
    exitcond5_i_fu_2161_p2 <= "1" when (r4_i_reg_584 = ap_const_lv11_461) else "0";
    exitcond6_i_fu_2198_p2 <= "1" when (ap_phi_mux_n5_i_phi_fu_599_p4 = ap_const_lv8_B4) else "0";
    exitcond7_i_fu_1548_p2 <= "1" when (ap_phi_mux_n3_i_phi_fu_565_p4 = ap_const_lv8_B4) else "0";
    exitcond_i_fu_2301_p2 <= "1" when (ap_phi_mux_i7_i_phi_fu_622_p4 = ap_const_lv7_63) else "0";
    exp_tmp_V_1_fu_887_p4 <= ireg_V_1_fu_871_p1(62 downto 52);
    exp_tmp_V_fu_743_p4 <= ireg_V_fu_727_p1(62 downto 52);
    f_fu_1856_p1 <= p_Result_58_fu_1845_p5;
    grp_HoughSortDescent_fu_659_ap_start <= grp_HoughSortDescent_fu_659_ap_start_reg;
    grp_fu_674_p0 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_n_i_phi_fu_530_p4),32));
    grp_fu_687_p2 <= "1" when (signed(val_reg_2891) < signed(accum_q1)) else "0";
    grp_sin_or_cos_float_s_fu_629_ap_start <= grp_sin_or_cos_float_s_fu_629_ap_start_reg;
    grp_sin_or_cos_float_s_fu_629_do_cos <= ap_const_logic_0;
    grp_sin_or_cos_float_s_fu_644_ap_start <= grp_sin_or_cos_float_s_fu_644_ap_start_reg;
    grp_sin_or_cos_float_s_fu_644_do_cos <= ap_const_logic_1;
    i7_cast7_i_fu_2313_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_i7_i_phi_fu_622_p4),32));
    i_1_fu_1464_p2 <= std_logic_vector(unsigned(i_op_assign_1_reg_538) + unsigned(ap_const_lv31_1));
    i_2_fu_2307_p2 <= std_logic_vector(unsigned(ap_phi_mux_i7_i_phi_fu_622_p4) + unsigned(ap_const_lv7_1));
    i_fu_698_p2 <= std_logic_vector(unsigned(i_i_reg_515) + unsigned(ap_const_lv18_1));
    i_op_assign_1_cast_i_fu_1455_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_op_assign_1_reg_538),32));
    i_op_assign_cast_i_fu_1509_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_op_assign_reg_549),32));
    icmp1_fu_849_p2 <= "1" when (signed(tmp_35_fu_839_p4) > signed(ap_const_lv8_0)) else "0";
    icmp2_fu_971_p2 <= "1" when (tmp_45_fu_961_p4 = ap_const_lv8_0) else "0";
    icmp3_fu_993_p2 <= "1" when (signed(tmp_48_fu_983_p4) > signed(ap_const_lv8_0)) else "0";
    icmp4_fu_1710_p2 <= "1" when (tmp_61_fu_1700_p4 = ap_const_lv26_0) else "0";
    icmp_fu_827_p2 <= "1" when (tmp_32_fu_817_p4 = ap_const_lv8_0) else "0";
    index_V_fu_1893_p4 <= t_V_6_fu_1867_p1(27 downto 23);
    ireg_V_1_fu_871_p1 <= d_assign_fu_680_p1;
    ireg_V_fu_727_p1 <= d_assign_3_fu_677_p1;
    isNeg_fu_2037_p3 <= sh_assign_fu_2031_p2(8 downto 8);
    is_neg_fu_1619_p3 <= p_Val2_36_fu_1602_p2(47 downto 47);
    j_fu_1518_p2 <= std_logic_vector(unsigned(i_op_assign_reg_549) + unsigned(ap_const_lv31_1));

    lines_address0_assign_proc : process(ap_CS_fsm_state33, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, ap_block_pp3_stage0, tmp_101_i_fu_2322_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            lines_address0 <= tmp_101_i_fu_2322_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            lines_address0 <= ap_const_lv64_0(7 - 1 downto 0);
        else 
            lines_address0 <= "XXXXXXX";
        end if; 
    end process;

    lines_address1 <= tmp_99_i_fu_2450_p1(7 - 1 downto 0);

    lines_ce0_assign_proc : process(ap_CS_fsm_state33, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state33) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)))) then 
            lines_ce0 <= ap_const_logic_1;
        else 
            lines_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    lines_ce1_assign_proc : process(ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter3 = ap_const_logic_1))) then 
            lines_ce1 <= ap_const_logic_1;
        else 
            lines_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    lines_d0_assign_proc : process(ap_CS_fsm_state33, total_fu_2189_p3, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, ap_block_pp3_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            lines_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            lines_d0 <= total_fu_2189_p3;
        else 
            lines_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    lines_d1 <= (tmp_96_i_fu_2439_p1 or tmp_95_i_fu_2431_p3);

    lines_we0_assign_proc : process(exitcond5_i_fu_2161_p2, ap_CS_fsm_state33, exitcond_i_fu_2301_p2, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter0, tmp_84_i_fu_2317_p2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (tmp_84_i_fu_2317_p2 = ap_const_lv1_0) and (exitcond_i_fu_2301_p2 = ap_const_lv1_0)) or ((exitcond5_i_fu_2161_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state33)))) then 
            lines_we0 <= ap_const_logic_1;
        else 
            lines_we0 <= ap_const_logic_0;
        end if; 
    end process;


    lines_we1_assign_proc : process(ap_block_pp3_stage0_11001, tmp_84_i_reg_2952_pp3_iter2_reg, ap_enable_reg_pp3_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (tmp_84_i_reg_2952_pp3_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp3_iter3 = ap_const_logic_1))) then 
            lines_we1 <= ap_const_logic_1;
        else 
            lines_we1 <= ap_const_logic_0;
        end if; 
    end process;

    loc_V_2_fu_1933_p1 <= p_Val2_45_fu_1928_p2(23 - 1 downto 0);
    loc_V_3_fu_1999_p4 <= p_Val2_47_fu_1995_p1(30 downto 23);
    loc_V_4_fu_2009_p1 <= p_Val2_47_fu_1995_p1(23 - 1 downto 0);
    loc_V_fu_1871_p4 <= t_V_6_fu_1867_p1(30 downto 23);
    man_V_1_fu_773_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(p_Result_54_fu_769_p1));
    man_V_3_fu_917_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(p_Result_55_fu_913_p1));
    man_V_5_fu_1021_p3 <= 
        man_V_1_reg_2531 when (isneg_reg_2518(0) = '1') else 
        p_Result_54_reg_2526;
    man_V_fu_1238_p3 <= 
        man_V_3_reg_2599 when (isneg_1_reg_2586(0) = '1') else 
        p_Result_55_reg_2594;
    mask_table1_address0 <= tmp_165_i_i_i_fu_1903_p1(5 - 1 downto 0);

    mask_table1_ce0_assign_proc : process(ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_11001, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1))) then 
            mask_table1_ce0 <= ap_const_logic_1;
        else 
            mask_table1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    msb_idx_1_fu_1692_p3 <= 
        ap_const_lv31_0 when (tmp_60_fu_1684_p3(0) = '1') else 
        tmp_59_fu_1680_p1;
    msb_idx_fu_1674_p2 <= std_logic_vector(unsigned(ap_const_lv32_30) - unsigned(num_zeros_fu_1670_p1));
    mul_fu_2336_p1 <= sext_cast_fu_2332_p0;
    mul_fu_2336_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv65_1D2DD1F3C) * signed(mul_fu_2336_p1))), 65));
    n_1_fu_1554_p2 <= std_logic_vector(unsigned(ap_phi_mux_n3_i_phi_fu_565_p4) + unsigned(ap_const_lv8_1));
    n_2_fu_716_p2 <= std_logic_vector(unsigned(ap_phi_mux_n_i_phi_fu_530_p4) + unsigned(ap_const_lv8_1));
    n_fu_2204_p2 <= std_logic_vector(unsigned(ap_phi_mux_n5_i_phi_fu_599_p4) + unsigned(ap_const_lv8_1));
    neg_mul_fu_2360_p2 <= std_logic_vector(unsigned(ap_const_lv65_0) - unsigned(mul_reg_2966));
    neg_ti_fu_2389_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(tmp_20_fu_2382_p3));
    newSel1_fu_1221_p3 <= 
        tmp_31_fu_1037_p1 when (sel_tmp2_fu_1169_p2(0) = '1') else 
        ap_const_lv16_0;
    newSel3_fu_1424_p3 <= 
        tmp_152_i_fu_1284_p2 when (sel_tmp11_fu_1419_p2(0) = '1') else 
        p_Val2_33_fu_1375_p2;
    newSel4_fu_1438_p3 <= 
        tmp_44_fu_1254_p1 when (sel_tmp5_fu_1386_p2(0) = '1') else 
        ap_const_lv16_0;
    newSel_fu_1207_p3 <= 
        tmp_82_i_fu_1067_p2 when (sel_tmp3_fu_1202_p2(0) = '1') else 
        p_Val2_28_fu_1158_p2;
    next_mul1_fu_2235_p2 <= std_logic_vector(unsigned(phi_mul1_reg_606) + unsigned(ap_const_lv18_463));
    next_mul_fu_1581_p2 <= std_logic_vector(unsigned(ap_const_lv18_463) + unsigned(phi_mul_reg_572));
    num_zeros_fu_1670_p1 <= tmp_117_i_fu_1662_p3(32 - 1 downto 0);
    one_half_i_i_cast_i_fu_1924_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(one_half_table2_q0),32));
    one_half_table2_address0 <= tmp_165_i_i_i_fu_1903_p1(5 - 1 downto 0);

    one_half_table2_ce0_assign_proc : process(ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_11001, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1))) then 
            one_half_table2_ce0 <= ap_const_logic_1;
        else 
            one_half_table2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    or_cond1_fu_1432_p2 <= (sel_tmp9_fu_1403_p2 or sel_tmp11_fu_1419_p2);
    or_cond_fu_1215_p2 <= (sel_tmp7_fu_1186_p2 or sel_tmp3_fu_1202_p2);
    p_Repl2_4_trunc_i_fu_1832_p2 <= std_logic_vector(unsigned(tmp_cast_cast_fu_1824_p3) + unsigned(tmp_73_fu_1821_p1));
    p_Result_34_fu_1343_p2 <= (tmp_52_fu_1337_p2 and man_V_fu_1238_p3);
    p_Result_43_fu_1909_p3 <= t_V_6_reg_2797(31 downto 31);
    p_Result_54_fu_769_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_37_i_fu_761_p3),54));
    p_Result_55_fu_913_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_42_i_fu_905_p3),54));
    
    p_Result_56_fu_1644_p4_proc : process(p_Val2_12_cast_i_fu_1641_p1)
    variable vlo_cpy : STD_LOGIC_VECTOR(49+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(49+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(49 - 1 downto 0);
    variable p_Result_56_fu_1644_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(49 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(49 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(49 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_30(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := p_Val2_12_cast_i_fu_1641_p1;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(49-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(49-1-unsigned(ap_const_lv32_30(6-1 downto 0)));
            for p_Result_56_fu_1644_p4_i in 0 to 49-1 loop
                v0_cpy(p_Result_56_fu_1644_p4_i) := p_Val2_12_cast_i_fu_1641_p1(49-1-p_Result_56_fu_1644_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(49-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_56_fu_1644_p4 <= resvalue(49-1 downto 0);
    end process;

    p_Result_57_fu_1654_p3 <= (ap_const_lv15_7FFF & p_Result_56_fu_1644_p4);
    p_Result_58_fu_1845_p5 <= (tmp_46_i_fu_1838_p3 & tmp32_V_6_reg_2782(22 downto 0));
    p_Result_59_fu_1916_p3 <= (p_Result_43_fu_1909_p3 & ap_const_lv31_0);
    p_Result_60_fu_1959_p3 <= (tmp_11_fu_1949_p4 & xs_sig_V_fu_1943_p2);
    p_Result_61_fu_2117_p3 <= p_Val2_47_reg_2824(31 downto 31);
    p_Result_s_fu_1126_p2 <= (tmp_39_fu_1120_p2 and man_V_5_fu_1021_p3);
    p_Val2_12_cast_i_fu_1641_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_38_reg_2751),49));
    p_Val2_27_fu_1073_p3 <= 
        tmp_33_fu_1056_p1 when (tmp_68_i_fu_1041_p2(0) = '1') else 
        storemerge1_i_fu_1060_p3;
    p_Val2_28_fu_1158_p2 <= std_logic_vector(unsigned(tmp_126_i_fu_1154_p1) + unsigned(p_Val2_27_fu_1073_p3));
    p_Val2_32_fu_1290_p3 <= 
        tmp_46_fu_1273_p1 when (tmp_145_i_fu_1258_p2(0) = '1') else 
        storemerge_i_fu_1277_p3;
    p_Val2_33_fu_1375_p2 <= std_logic_vector(unsigned(tmp_163_i_fu_1371_p1) + unsigned(p_Val2_32_fu_1290_p3));
    p_Val2_35_fu_1576_p0 <= OP1_V_cast_i_reg_2696(31 - 1 downto 0);
    p_Val2_35_fu_1576_p1 <= tabCos_V_q0;
    p_Val2_35_fu_1576_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &p_Val2_35_fu_1576_p0) * signed(p_Val2_35_fu_1576_p1))), 47));
    p_Val2_36_fu_1602_p2 <= std_logic_vector(signed(p_Val2_6_cast_i_fu_1587_p1) + signed(p_Val2_7_cast_i_fu_1598_p1));
    p_Val2_38_fu_1633_p3 <= 
        tmp_116_cast_i_fu_1627_p2 when (is_neg_fu_1619_p3(0) = '1') else 
        p_Val2_8_cast11_i_fu_1608_p2;
    p_Val2_45_fu_1928_p2 <= std_logic_vector(unsigned(t_V_6_reg_2797) + unsigned(one_half_i_i_cast_i_fu_1924_p1));
    p_Val2_47_fu_1995_p1 <= x_assign_2_fu_1988_p3;
    p_Val2_49_fu_2109_p3 <= 
        tmp_16_fu_2095_p1 when (isNeg_fu_2037_p3(0) = '1') else 
        tmp_17_fu_2099_p4;
    p_Val2_4_fu_1593_p0 <= OP1_V_4_cast_i_reg_2667(31 - 1 downto 0);
    p_Val2_4_fu_1593_p1 <= tabSin_V_load_reg_2731;
    p_Val2_4_fu_1593_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &p_Val2_4_fu_1593_p0) * signed(p_Val2_4_fu_1593_p1))), 47));
        p_Val2_6_cast_i_fu_1587_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_35_reg_2725),48));

        p_Val2_7_cast_i_fu_1598_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_4_fu_1593_p2),48));

    p_Val2_8_cast11_i_fu_1608_p2 <= std_logic_vector(signed(p_Val2_4_fu_1593_p2) + signed(p_Val2_35_reg_2725));
    p_Val2_i_i_i_i_fu_2124_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(p_Val2_49_reg_2829));
    p_Val2_s_fu_2129_p3 <= 
        p_Val2_i_i_i_i_fu_2124_p2 when (p_Result_61_fu_2117_p3(0) = '1') else 
        p_Val2_49_reg_2829;
    p_angle_fu_2416_p2 <= std_logic_vector(signed(ap_const_lv16_FFFF) + signed(tmp_83_reg_2982));
    p_r_i_i_i1_i_fu_1143_p2 <= (r_1_fu_1138_p2 or isneg_reg_2518);
    p_r_i_i_i_i_fu_1360_p2 <= (r_2_fu_1355_p2 or isneg_1_reg_2586);
    p_rho_fu_2425_p2 <= std_logic_vector(signed(ap_const_lv16_FDCF) + signed(tmp_84_fu_2421_p1));
    p_shl1_cast_fu_1486_p3 <= (tmp_55_fu_1482_p1 & ap_const_lv6_0);
    p_shl_cast_fu_1474_p3 <= (tmp_54_fu_1470_p1 & ap_const_lv8_0);
    qb_1_fu_1315_p3 <= 
        isneg_1_reg_2586 when (tmp_154_i_reg_2634(0) = '1') else 
        tmp_47_fu_1307_p3;
    qb_assign_1_fu_1148_p2 <= (qb_fu_1098_p3 and p_r_i_i_i1_i_fu_1143_p2);
    qb_assign_3_fu_1365_p2 <= (qb_1_fu_1315_p3 and p_r_i_i_i_i_fu_1360_p2);
    qb_fu_1098_p3 <= 
        isneg_reg_2518 when (tmp_87_i_reg_2566(0) = '1') else 
        tmp_34_fu_1090_p3;
    r3_cast_i_fu_2136_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r3_i_reg_2720_pp1_iter4_reg),32));
    r3_i_fu_1566_p2 <= std_logic_vector(unsigned(ap_const_lv18_694) + unsigned(ap_phi_mux_phi_mul_phi_fu_576_p4));
    r4_cast_i_fu_2157_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r4_i_reg_584),12));
    r_1_fu_1138_p2 <= (tmp_124_i_fu_1132_p2 and icmp1_reg_2571);
    r_2_fu_1355_p2 <= (tmp_162_i_fu_1349_p2 and icmp3_reg_2639);
    r_fu_2167_p2 <= std_logic_vector(unsigned(r4_i_reg_584) + unsigned(ap_const_lv11_1));
    sel_tmp10_fu_1413_p2 <= (sel_tmp32_demorgan_fu_1408_p2 xor ap_const_lv1_1);
    sel_tmp11_fu_1419_p2 <= (sel_tmp10_fu_1413_p2 and icmp2_reg_2629);
    sel_tmp12_fu_1974_p1 <= sel_tmp38_v_fu_1967_p3;
    sel_tmp13_demorgan_fu_1191_p2 <= (tmp_61_i_reg_2548 or sel_tmp6_demorgan_fu_1175_p2);
    sel_tmp13_fu_1978_p2 <= (tmp_i_i_i_reg_2803 xor ap_const_lv1_1);
    sel_tmp14_fu_1983_p2 <= (tmp_164_i_i_i_reg_2809 and sel_tmp13_fu_1978_p2);
    sel_tmp1_fu_1164_p2 <= (tmp_58_i_reg_2536 xor ap_const_lv1_1);
    sel_tmp25_demorgan_fu_1392_p2 <= (tmp_139_i_fu_1249_p2 or tmp_133_i_reg_2604);
    sel_tmp2_fu_1169_p2 <= (tmp_64_i_fu_1032_p2 and sel_tmp1_fu_1164_p2);
    sel_tmp32_demorgan_fu_1408_p2 <= (tmp_136_i_reg_2616 or sel_tmp25_demorgan_fu_1392_p2);
    sel_tmp38_v_fu_1967_p3 <= 
        p_Result_59_fu_1916_p3 when (tmp_i_i_i_reg_2803(0) = '1') else 
        p_Result_60_fu_1959_p3;
    sel_tmp3_fu_1202_p2 <= (sel_tmp_fu_1196_p2 and icmp_reg_2561);
    sel_tmp4_fu_1381_p2 <= (tmp_133_i_reg_2604 xor ap_const_lv1_1);
    sel_tmp5_fu_1386_p2 <= (tmp_139_i_fu_1249_p2 and sel_tmp4_fu_1381_p2);
    sel_tmp6_demorgan_fu_1175_p2 <= (tmp_64_i_fu_1032_p2 or tmp_58_i_reg_2536);
    sel_tmp6_fu_1180_p2 <= (sel_tmp6_demorgan_fu_1175_p2 xor ap_const_lv1_1);
    sel_tmp7_fu_1186_p2 <= (tmp_61_i_reg_2548 and sel_tmp6_fu_1180_p2);
    sel_tmp8_fu_1397_p2 <= (sel_tmp25_demorgan_fu_1392_p2 xor ap_const_lv1_1);
    sel_tmp9_fu_1403_p2 <= (tmp_136_i_reg_2616 and sel_tmp8_fu_1397_p2);
    sel_tmp_fu_1196_p2 <= (sel_tmp13_demorgan_fu_1191_p2 xor ap_const_lv1_1);
    sext_cast_fu_2332_p0 <= sort_buf_q0;
        sh_amt_1_cast14_i_fu_1243_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_1_reg_2622),16));

        sh_amt_1_cast_i_fu_1246_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_1_reg_2622),32));

    sh_amt_1_fu_953_p3 <= 
        tmp_137_i_fu_941_p2 when (tmp_136_i_fu_935_p2(0) = '1') else 
        tmp_138_i_fu_947_p2;
        sh_amt_cast15_i_fu_1026_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_reg_2554),16));

        sh_amt_cast_i_fu_1029_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_reg_2554),32));

    sh_amt_fu_809_p3 <= 
        tmp_62_i_fu_797_p2 when (tmp_61_i_fu_791_p2(0) = '1') else 
        tmp_63_i_fu_803_p2;
    sh_assign_1_fu_2055_p3 <= 
        tmp_171_i_i_i_cast_i_fu_2051_p1 when (isNeg_fu_2037_p3(0) = '1') else 
        sh_assign_fu_2031_p2;
        sh_assign_2_i_i_i_ca_1_fu_2067_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_assign_1_fu_2055_p3),25));

        sh_assign_2_i_i_i_ca_fu_2063_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_assign_1_fu_2055_p3),32));

    sh_assign_fu_2031_p2 <= std_logic_vector(signed(ap_const_lv9_181) + signed(tmp_i_i_i_i_cast_i_fu_2027_p1));

    sort_buf_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_pp2_stage2, ap_enable_reg_pp2_iter1, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, ap_CS_fsm_state41, grp_HoughSortDescent_fu_659_sequence_address0, ap_block_pp3_stage0, tmp_i_fu_704_p1, ap_block_pp2_stage2, tmp_130_i_fu_2291_p1, tmp_88_i_fu_2327_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            sort_buf_address0 <= tmp_88_i_fu_2327_p1(18 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage2) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2))) then 
            sort_buf_address0 <= tmp_130_i_fu_2291_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            sort_buf_address0 <= tmp_i_fu_704_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            sort_buf_address0 <= grp_HoughSortDescent_fu_659_sequence_address0;
        else 
            sort_buf_address0 <= "XXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    sort_buf_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_pp2_stage2, ap_block_pp2_stage2_11001, ap_enable_reg_pp2_iter1, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter0, ap_CS_fsm_state41, grp_HoughSortDescent_fu_659_sequence_ce0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_boolean_0 = ap_block_pp2_stage2_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2)))) then 
            sort_buf_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            sort_buf_ce0 <= grp_HoughSortDescent_fu_659_sequence_ce0;
        else 
            sort_buf_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sort_buf_d0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_pp2_stage2, ap_enable_reg_pp2_iter1, ap_CS_fsm_state41, grp_HoughSortDescent_fu_659_sequence_d0, ap_block_pp2_stage2, base_cast_i_fu_2276_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage2) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2))) then 
            sort_buf_d0 <= base_cast_i_fu_2276_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            sort_buf_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            sort_buf_d0 <= grp_HoughSortDescent_fu_659_sequence_d0;
        else 
            sort_buf_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    sort_buf_we0_assign_proc : process(exitcond3_i_fu_692_p2, ap_CS_fsm_state2, tmp_77_i_reg_2898_pp2_iter1_reg, ap_CS_fsm_pp2_stage2, ap_block_pp2_stage2_11001, tmp_86_i_reg_2912, tmp_104_i_reg_2921, tmp_115_i_reg_2930, ap_enable_reg_pp2_iter1, ap_CS_fsm_state41, grp_HoughSortDescent_fu_659_sequence_we0, tmp_127_i_fu_2280_p2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage2_11001) and (tmp_127_i_fu_2280_p2 = ap_const_lv1_1) and (tmp_104_i_reg_2921 = ap_const_lv1_1) and (tmp_77_i_reg_2898_pp2_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage2) and (tmp_115_i_reg_2930 = ap_const_lv1_0) and (tmp_86_i_reg_2912 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond3_i_fu_692_p2 = ap_const_lv1_0)))) then 
            sort_buf_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            sort_buf_we0 <= grp_HoughSortDescent_fu_659_sequence_we0;
        else 
            sort_buf_we0 <= ap_const_logic_0;
        end if; 
    end process;

    storemerge1_i_fu_1060_p3 <= 
        ap_const_lv16_FFFF when (isneg_reg_2518(0) = '1') else 
        ap_const_lv16_0;
    storemerge_i_fu_1277_p3 <= 
        ap_const_lv16_FFFF when (isneg_1_reg_2586(0) = '1') else 
        ap_const_lv16_0;
    t_V_6_fu_1867_p1 <= x_assign_fu_1860_p3;

    tabCos_V_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter13, ap_block_pp0_stage0, ap_block_pp1_stage0, tmp_55_i_fu_1015_p1, tmp_108_i_fu_1560_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            tabCos_V_address0 <= tmp_108_i_fu_1560_p1(8 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            tabCos_V_address0 <= tmp_55_i_fu_1015_p1(8 - 1 downto 0);
        else 
            tabCos_V_address0 <= "XXXXXXXX";
        end if; 
    end process;


    tabCos_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter13)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            tabCos_V_ce0 <= ap_const_logic_1;
        else 
            tabCos_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tabCos_V_d0 <= 
        newSel3_fu_1424_p3 when (or_cond1_fu_1432_p2(0) = '1') else 
        newSel4_fu_1438_p3;

    tabCos_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, exitcond4_i_reg_2483_pp0_iter12_reg, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (exitcond4_i_reg_2483_pp0_iter12_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            tabCos_V_we0 <= ap_const_logic_1;
        else 
            tabCos_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    tabSin_V_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter13, ap_block_pp0_stage0, ap_block_pp1_stage0, tmp_55_i_fu_1015_p1, tmp_108_i_fu_1560_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            tabSin_V_address0 <= tmp_108_i_fu_1560_p1(8 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then 
            tabSin_V_address0 <= tmp_55_i_fu_1015_p1(8 - 1 downto 0);
        else 
            tabSin_V_address0 <= "XXXXXXXX";
        end if; 
    end process;


    tabSin_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter13)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            tabSin_V_ce0 <= ap_const_logic_1;
        else 
            tabSin_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tabSin_V_d0 <= 
        newSel_fu_1207_p3 when (or_cond_fu_1215_p2(0) = '1') else 
        newSel1_fu_1221_p3;

    tabSin_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, exitcond4_i_reg_2483_pp0_iter12_reg, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (exitcond4_i_reg_2483_pp0_iter12_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            tabSin_V_we0 <= ap_const_logic_1;
        else 
            tabSin_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    threshold_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, threshold_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            threshold_blk_n <= threshold_empty_n;
        else 
            threshold_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    threshold_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, edge_rows_empty_n, edge_cols_empty_n, threshold_empty_n)
    begin
        if ((not(((threshold_empty_n = ap_const_logic_0) or (edge_cols_empty_n = ap_const_logic_0) or (edge_rows_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            threshold_read <= ap_const_logic_1;
        else 
            threshold_read <= ap_const_logic_0;
        end if; 
    end process;

    tmp32_V_1_fu_1790_p2 <= std_logic_vector(shift_left(unsigned(tmp32_V_fu_1778_p1),to_integer(unsigned('0' & tmp_128_cast_i_fu_1786_p1(31-1 downto 0)))));
    tmp32_V_2_fu_1774_p1 <= tmp_71_fu_1768_p2(32 - 1 downto 0);
    tmp32_V_3_fu_1796_p3 <= 
        tmp32_V_1_fu_1790_p2 when (icmp4_reg_2767(0) = '1') else 
        tmp32_V_2_reg_2772;
    tmp32_V_6_fu_1802_p1 <= grp_fu_671_p1;
    tmp32_V_fu_1778_p1 <= p_Val2_38_reg_2751(32 - 1 downto 0);
    tmp_101_i_fu_2322_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_2_fu_2307_p2),64));
    tmp_102_i_fu_2241_p2 <= std_logic_vector(unsigned(tmp_75_i_reg_2873) + unsigned(ap_const_lv18_2));
    tmp_103_i_fu_2246_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_102_i_fu_2241_p2),64));
    tmp_104_i_fu_2251_p2 <= "1" when (signed(val_reg_2891) > signed(accum_q1)) else "0";
    tmp_105_cast_i_fu_1086_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_105_i_fu_1081_p2),32));
    tmp_105_i_fu_1081_p2 <= std_logic_vector(signed(ap_const_lv12_FF1) + signed(F2_reg_2542));
    tmp_108_i_fu_1560_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_n3_i_phi_fu_565_p4),64));
    tmp_111_i_fu_1613_p2 <= "1" when (p_Val2_36_fu_1602_p2 = ap_const_lv48_0) else "0";
    tmp_112_i_fu_2256_p2 <= std_logic_vector(unsigned(tmp_75_i_reg_2873) + unsigned(ap_const_lv18_3FB9E));
    tmp_113_i_fu_2261_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_112_i_fu_2256_p2),64));
    tmp_116_cast_i_fu_1627_p2 <= std_logic_vector(unsigned(ap_const_lv47_0) - unsigned(p_Val2_8_cast11_i_fu_1608_p2));
    
    tmp_117_i_fu_1662_p3_proc : process(p_Result_57_fu_1654_p3)
    begin
        tmp_117_i_fu_1662_p3 <= std_logic_vector(to_unsigned(64, 64));
        for i in 0 to 64 - 1 loop
            if p_Result_57_fu_1654_p3(i) = '1' then
                tmp_117_i_fu_1662_p3 <= std_logic_vector(to_unsigned(i,64));
                exit;
            end if;
        end loop;
    end process;

    tmp_11_fu_1949_p4 <= p_Val2_45_fu_1928_p2(31 downto 23);
    tmp_120_i_fu_2266_p2 <= std_logic_vector(unsigned(tmp_75_i_reg_2873_pp2_iter1_reg) + unsigned(ap_const_lv18_464));
    tmp_121_cast_i_op_fu_1104_p2 <= std_logic_vector(unsigned(ap_const_lv6_5) - unsigned(tmp_36_reg_2576));
    tmp_121_i_fu_859_p2 <= std_logic_vector(signed(ap_const_lv12_FF0) + signed(F2_fu_785_p2));
    tmp_122_i_fu_865_p2 <= "1" when (signed(tmp_121_i_fu_859_p2) > signed(ap_const_lv12_35)) else "0";
    tmp_124_i_fu_1132_p2 <= "0" when (p_Result_s_fu_1126_p2 = ap_const_lv54_0) else "1";
    tmp_125_i_fu_2271_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_120_i_fu_2266_p2),64));
    tmp_126_i_fu_1154_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(qb_assign_1_fu_1148_p2),16));
    tmp_127_i_fu_2280_p2 <= "1" when (signed(val_reg_2891_pp2_iter1_reg) > signed(accum_q0)) else "0";
    tmp_128_cast_i_fu_1786_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_128_i_fu_1781_p2),32));
    tmp_128_i_fu_1781_p2 <= std_logic_vector(unsigned(ap_const_lv31_1F) - unsigned(msb_idx_1_reg_2762));
    tmp_130_i_fu_2291_p0 <= y_assign_fu_296;
        tmp_130_i_fu_2291_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_130_i_fu_2291_p0),64));

    tmp_131_i_fu_897_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_V_1_fu_887_p4),12));
    tmp_133_i_fu_923_p2 <= "1" when (tmp_41_fu_875_p1 = ap_const_lv63_0) else "0";
    tmp_134_i_fu_1816_p2 <= "0" when (p_Result_12_i_reg_2787 = ap_const_lv8_9E) else "1";
    tmp_136_i_fu_935_p2 <= "1" when (signed(F2_1_fu_929_p2) > signed(ap_const_lv12_E)) else "0";
    tmp_137_i_fu_941_p2 <= std_logic_vector(signed(ap_const_lv12_FF2) + signed(F2_1_fu_929_p2));
    tmp_138_i_fu_947_p2 <= std_logic_vector(unsigned(ap_const_lv12_E) - unsigned(F2_1_fu_929_p2));
    tmp_139_i_fu_1249_p2 <= "1" when (F2_1_reg_2610 = ap_const_lv12_E) else "0";
        tmp_142_i_fu_2145_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(base_1_fu_2139_p2),64));

    tmp_143_i_fu_2150_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(accum_q0));
    tmp_145_i_fu_1258_p2 <= "1" when (unsigned(sh_amt_1_reg_2622) < unsigned(ap_const_lv12_36)) else "0";
    tmp_148_i_fu_1263_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_amt_1_cast_i_fu_1246_p1),54));
    tmp_149_i_fu_1267_p2 <= std_logic_vector(shift_right(signed(man_V_fu_1238_p3),to_integer(unsigned('0' & tmp_148_i_fu_1263_p1(31-1 downto 0)))));
    tmp_152_i_fu_1284_p2 <= std_logic_vector(shift_left(unsigned(tmp_44_fu_1254_p1),to_integer(unsigned('0' & sh_amt_1_cast14_i_fu_1243_p1(16-1 downto 0)))));
    tmp_154_i_fu_977_p2 <= "1" when (signed(tmp_137_i_fu_941_p2) > signed(ap_const_lv12_36)) else "0";
    tmp_155_cast_i_fu_1303_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_155_i_fu_1298_p2),32));
    tmp_155_i_fu_1298_p2 <= std_logic_vector(signed(ap_const_lv12_FF1) + signed(F2_1_reg_2610));
    tmp_159_cast_i_op_fu_1321_p2 <= std_logic_vector(unsigned(ap_const_lv6_5) - unsigned(tmp_49_reg_2644));
    tmp_159_i_fu_1003_p2 <= std_logic_vector(signed(ap_const_lv12_FF0) + signed(F2_1_fu_929_p2));
    tmp_15_fu_1528_p2 <= std_logic_vector(unsigned(tmp_s_reg_2662) + unsigned(tmp_56_fu_1524_p1));
    tmp_160_i_fu_1009_p2 <= "1" when (signed(tmp_159_i_fu_1003_p2) > signed(ap_const_lv12_35)) else "0";
    tmp_162_i_fu_1349_p2 <= "0" when (p_Result_34_fu_1343_p2 = ap_const_lv54_0) else "1";
    tmp_163_i_fu_1371_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(qb_assign_3_fu_1365_p2),16));
    tmp_164_i_i_i_fu_1887_p2 <= "1" when (unsigned(loc_V_fu_1871_p4) > unsigned(ap_const_lv8_96)) else "0";
    tmp_165_i_i_i_fu_1903_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(index_V_fu_1893_p4),64));
    tmp_167_i_i_i_fu_1937_p2 <= (mask_table1_q0 xor ap_const_lv23_7FFFFF);
    tmp_16_fu_2095_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_79_fu_2087_p3),32));
    tmp_170_i_i_i_cast_fu_2023_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_170_i_i_i_i_fu_2013_p4),79));
    tmp_170_i_i_i_i_fu_2013_p4 <= ((ap_const_lv1_1 & loc_V_4_fu_2009_p1) & ap_const_lv1_0);
        tmp_171_i_i_i_cast_i_fu_2051_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_171_i_i_i_i_fu_2045_p2),9));

    tmp_171_i_i_i_i_fu_2045_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) - unsigned(loc_V_3_fu_1999_p4));
    tmp_172_i_i_i_i_fu_2071_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_assign_2_i_i_i_ca_fu_2063_p1),79));
    tmp_173_i_i_i_i_fu_2075_p2 <= std_logic_vector(shift_right(unsigned(tmp_170_i_i_i_i_fu_2013_p4),to_integer(unsigned('0' & sh_assign_2_i_i_i_ca_1_fu_2067_p1(25-1 downto 0)))));
    tmp_174_i_i_i_i_fu_2081_p2 <= std_logic_vector(shift_left(unsigned(tmp_170_i_i_i_cast_fu_2023_p1),to_integer(unsigned('0' & tmp_172_i_i_i_i_fu_2071_p1(31-1 downto 0)))));
    tmp_17_fu_2099_p4 <= tmp_174_i_i_i_i_fu_2081_p2(55 downto 24);
        tmp_18_fu_2375_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_81_fu_2365_p4),32));

        tmp_19_fu_2379_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_82_reg_2977),32));

    tmp_20_fu_2382_p3 <= 
        tmp_18_fu_2375_p1 when (tmp_80_reg_2971(0) = '1') else 
        tmp_19_fu_2379_p1;
    tmp_21_cast_fu_1533_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_15_fu_1528_p2),64));
    tmp_30_fu_757_p1 <= ireg_V_fu_727_p1(52 - 1 downto 0);
    tmp_31_fu_1037_p1 <= man_V_5_fu_1021_p3(16 - 1 downto 0);
    tmp_32_fu_817_p4 <= sh_amt_fu_809_p3(11 downto 4);
    tmp_33_fu_1056_p1 <= tmp_79_i_fu_1050_p2(16 - 1 downto 0);
    tmp_34_fu_1090_p3 <= man_V_5_fu_1021_p3(to_integer(unsigned(tmp_105_cast_i_fu_1086_p1)) downto to_integer(unsigned(tmp_105_cast_i_fu_1086_p1))) when (to_integer(unsigned(tmp_105_cast_i_fu_1086_p1))>= 0 and to_integer(unsigned(tmp_105_cast_i_fu_1086_p1))<=53) else "-";
    tmp_35_fu_839_p4 <= F2_fu_785_p2(11 downto 4);
    tmp_36_fu_855_p1 <= F2_fu_785_p2(6 - 1 downto 0);
    tmp_37_fu_1109_p3 <= 
        ap_const_lv6_0 when (tmp_122_i_reg_2581(0) = '1') else 
        tmp_121_cast_i_op_fu_1104_p2;
    tmp_37_i_fu_761_p3 <= (ap_const_lv1_1 & tmp_30_fu_757_p1);
    tmp_38_fu_1116_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_37_fu_1109_p3),54));
    tmp_39_fu_1120_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv54_3FFFFFFFFFFFFF),to_integer(unsigned('0' & tmp_38_fu_1116_p1(31-1 downto 0)))));
    tmp_41_fu_875_p1 <= ireg_V_1_fu_871_p1(63 - 1 downto 0);
    tmp_42_i_fu_905_p3 <= (ap_const_lv1_1 & tmp_43_fu_901_p1);
    tmp_43_fu_901_p1 <= ireg_V_1_fu_871_p1(52 - 1 downto 0);
    tmp_44_fu_1254_p1 <= man_V_fu_1238_p3(16 - 1 downto 0);
    tmp_45_fu_961_p4 <= sh_amt_1_fu_953_p3(11 downto 4);
    tmp_46_fu_1273_p1 <= tmp_149_i_fu_1267_p2(16 - 1 downto 0);
    tmp_46_i_fu_1838_p3 <= (is_neg_reg_2746_pp1_iter3_reg & p_Repl2_4_trunc_i_fu_1832_p2);
    tmp_47_fu_1307_p3 <= man_V_fu_1238_p3(to_integer(unsigned(tmp_155_cast_i_fu_1303_p1)) downto to_integer(unsigned(tmp_155_cast_i_fu_1303_p1))) when (to_integer(unsigned(tmp_155_cast_i_fu_1303_p1))>= 0 and to_integer(unsigned(tmp_155_cast_i_fu_1303_p1))<=53) else "-";
    tmp_48_fu_983_p4 <= F2_1_fu_929_p2(11 downto 4);
    tmp_49_fu_999_p1 <= F2_1_fu_929_p2(6 - 1 downto 0);
    tmp_50_fu_1326_p3 <= 
        ap_const_lv6_0 when (tmp_160_i_reg_2649(0) = '1') else 
        tmp_159_cast_i_op_fu_1321_p2;
    tmp_51_fu_1333_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_50_fu_1326_p3),54));
    tmp_52_fu_1337_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv54_3FFFFFFFFFFFFF),to_integer(unsigned('0' & tmp_51_fu_1333_p1(31-1 downto 0)))));
    tmp_54_fu_1470_p1 <= i_op_assign_1_reg_538(10 - 1 downto 0);
    tmp_55_fu_1482_p1 <= i_op_assign_1_reg_538(12 - 1 downto 0);
    tmp_55_i_fu_1015_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(n_i_reg_526_pp0_iter12_reg),64));
    tmp_56_fu_1524_p1 <= i_op_assign_reg_549(18 - 1 downto 0);
    tmp_56_i_fu_753_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_V_fu_743_p4),12));
    tmp_58_i_fu_779_p2 <= "1" when (tmp_fu_731_p1 = ap_const_lv63_0) else "0";
    tmp_59_fu_1680_p1 <= msb_idx_fu_1674_p2(31 - 1 downto 0);
    tmp_59_i_fu_1459_p2 <= "1" when (signed(i_op_assign_1_cast_i_fu_1455_p1) < signed(rows_reg_2454)) else "0";
    tmp_60_fu_1684_p3 <= msb_idx_fu_1674_p2(31 downto 31);
    tmp_61_fu_1700_p4 <= msb_idx_1_fu_1692_p3(30 downto 5);
    tmp_61_i_fu_791_p2 <= "1" when (signed(F2_fu_785_p2) > signed(ap_const_lv12_E)) else "0";
    tmp_62_i_fu_797_p2 <= std_logic_vector(signed(ap_const_lv12_FF2) + signed(F2_fu_785_p2));
    tmp_63_fu_1716_p1 <= msb_idx_1_fu_1692_p3(6 - 1 downto 0);
    tmp_63_i_fu_803_p2 <= std_logic_vector(unsigned(ap_const_lv12_E) - unsigned(F2_fu_785_p2));
    tmp_64_fu_1720_p2 <= "1" when (unsigned(msb_idx_1_fu_1692_p3) < unsigned(ap_const_lv31_1F)) else "0";
    tmp_64_i_fu_1032_p2 <= "1" when (F2_reg_2542 = ap_const_lv12_E) else "0";
    tmp_65_fu_1726_p2 <= std_logic_vector(signed(ap_const_lv6_21) + signed(tmp_63_fu_1716_p1));
    
    tmp_66_fu_1732_p4_proc : process(p_Val2_12_cast_i_fu_1641_p1)
    variable vlo_cpy : STD_LOGIC_VECTOR(49+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(49+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(49 - 1 downto 0);
    variable tmp_66_fu_1732_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(49 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(49 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(49 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_30(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := p_Val2_12_cast_i_fu_1641_p1;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(49-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(49-1-unsigned(ap_const_lv32_30(6-1 downto 0)));
            for tmp_66_fu_1732_p4_i in 0 to 49-1 loop
                v0_cpy(tmp_66_fu_1732_p4_i) := p_Val2_12_cast_i_fu_1641_p1(49-1-tmp_66_fu_1732_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(49-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_66_fu_1732_p4 <= resvalue(49-1 downto 0);
    end process;

    tmp_67_fu_1742_p2 <= std_logic_vector(unsigned(ap_const_lv6_F) - unsigned(tmp_63_fu_1716_p1));
    tmp_67_i_fu_1513_p2 <= "1" when (signed(i_op_assign_cast_i_fu_1509_p1) < signed(cols_reg_2459)) else "0";
    tmp_68_fu_1748_p3 <= 
        tmp_66_fu_1732_p4 when (tmp_64_fu_1720_p2(0) = '1') else 
        p_Val2_12_cast_i_fu_1641_p1;
    tmp_68_i_fu_1041_p2 <= "1" when (unsigned(sh_amt_reg_2554) < unsigned(ap_const_lv12_36)) else "0";
    tmp_69_fu_1756_p3 <= 
        tmp_67_fu_1742_p2 when (tmp_64_fu_1720_p2(0) = '1') else 
        tmp_65_fu_1726_p2;
    tmp_70_fu_1764_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_69_fu_1756_p3),49));
    tmp_71_fu_1768_p2 <= std_logic_vector(shift_right(unsigned(tmp_68_fu_1748_p3),to_integer(unsigned('0' & tmp_70_fu_1764_p1(31-1 downto 0)))));
    tmp_72_i_fu_1538_p2 <= "1" when (edge_val_q0 = ap_const_lv8_0) else "0";
    tmp_73_fu_1821_p1 <= msb_idx_reg_2757_pp1_iter2_reg(8 - 1 downto 0);
    tmp_74_cast_i_fu_2179_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_74_i_fu_2173_p2),18));
    tmp_74_i_fu_2173_p2 <= std_logic_vector(unsigned(r4_cast_i_fu_2157_p1) + unsigned(ap_const_lv12_463));
    tmp_75_i_fu_2210_p2 <= std_logic_vector(unsigned(ap_phi_mux_phi_mul1_phi_fu_610_p4) + unsigned(tmp_74_cast_i_reg_2849));
    tmp_76_i_fu_2221_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(base_fu_2215_p2),64));
    tmp_77_i_fu_2226_p2 <= "1" when (signed(accum_q0) > signed(threshold_read_reg_2464)) else "0";
    tmp_78_i_fu_1046_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_amt_cast_i_fu_1029_p1),54));
    tmp_79_fu_2087_p3 <= tmp_173_i_i_i_i_fu_2075_p2(24 downto 24);
    tmp_79_i_fu_1050_p2 <= std_logic_vector(shift_right(signed(man_V_5_fu_1021_p3),to_integer(unsigned('0' & tmp_78_i_fu_1046_p1(31-1 downto 0)))));
    tmp_80_fu_2342_p1 <= sort_buf_q0;
    tmp_81_fu_2365_p4 <= neg_mul_fu_2360_p2(64 downto 43);
    tmp_82_i_fu_1067_p2 <= std_logic_vector(shift_left(unsigned(tmp_31_fu_1037_p1),to_integer(unsigned('0' & sh_amt_cast15_i_fu_1026_p1(16-1 downto 0)))));
    tmp_83_fu_2402_p1 <= tmp_89_i_fu_2395_p3(16 - 1 downto 0);
    tmp_84_fu_2421_p1 <= tmp_92_i_fu_2412_p2(16 - 1 downto 0);
    tmp_84_i_fu_2317_p2 <= "1" when (signed(i7_cast7_i_fu_2313_p1) < signed(total_reg_2859)) else "0";
    tmp_85_i_fu_2231_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_75_i_reg_2873),64));
    tmp_87_i_fu_833_p2 <= "1" when (signed(tmp_62_i_fu_797_p2) > signed(ap_const_lv12_36)) else "0";
    tmp_88_i_fu_2327_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_i7_i_phi_fu_622_p4),64));
    tmp_89_i_fu_2395_p3 <= 
        neg_ti_fu_2389_p2 when (tmp_80_reg_2971(0) = '1') else 
        tmp_19_fu_2379_p1;
    tmp_91_i_fu_2406_p1 <= tmp_89_i_fu_2395_p3(24 - 1 downto 0);
    tmp_91_i_fu_2406_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(ap_const_lv32_FFFFFB9D) * signed(tmp_91_i_fu_2406_p1))), 32));
    tmp_92_i_fu_2412_p2 <= std_logic_vector(unsigned(tmp_91_i_reg_2987) + unsigned(idx_reg_2961_pp3_iter2_reg));
    tmp_95_i_fu_2431_p3 <= (p_rho_fu_2425_p2 & ap_const_lv16_0);
        tmp_96_i_fu_2439_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_angle_fu_2416_p2),32));

    tmp_99_i_fu_2450_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_2_reg_2946_pp3_iter2_reg),64));
    tmp_cast_cast_fu_1824_p3 <= 
        ap_const_lv8_72 when (tmp_134_i_fu_1816_p2(0) = '1') else 
        ap_const_lv8_71;
    tmp_fu_731_p1 <= ireg_V_fu_727_p1(63 - 1 downto 0);
    tmp_i_fu_704_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_i_reg_515),64));
    tmp_i_i_fu_2183_p2 <= "1" when (signed(y_assign_fu_296) > signed(ap_const_lv32_63)) else "0";
    tmp_i_i_i_fu_1881_p2 <= "1" when (unsigned(loc_V_fu_1871_p4) < unsigned(ap_const_lv8_7E)) else "0";
    tmp_i_i_i_i_cast_i_fu_2027_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loc_V_3_fu_1999_p4),9));
    tmp_s_fu_1494_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_1474_p3) + unsigned(p_shl1_cast_fu_1486_p3));
    total_1_fu_2285_p0 <= y_assign_fu_296;
    total_1_fu_2285_p2 <= std_logic_vector(signed(total_1_fu_2285_p0) + signed(ap_const_lv32_1));
    total_fu_2189_p3 <= 
        ap_const_lv32_63 when (tmp_i_i_fu_2183_p2(0) = '1') else 
        y_assign_fu_296;
    x_assign_2_fu_1988_p3 <= 
        x_assign_reg_2792 when (sel_tmp14_fu_1983_p2(0) = '1') else 
        sel_tmp12_fu_1974_p1;
    x_assign_fu_1860_p3 <= 
        ap_const_lv32_0 when (tmp_111_i_reg_2741_pp1_iter3_reg(0) = '1') else 
        f_fu_1856_p1;
    xs_sig_V_fu_1943_p2 <= (tmp_167_i_i_i_fu_1937_p2 and loc_V_2_fu_1933_p1);
end behav;
