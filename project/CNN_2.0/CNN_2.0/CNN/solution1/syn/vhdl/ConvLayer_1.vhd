-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity ConvLayer_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    input_0_val_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    input_0_val_V_ce0 : OUT STD_LOGIC;
    input_0_val_V_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
    convlayer_output_val_V_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    convlayer_output_val_V_ce0 : OUT STD_LOGIC;
    convlayer_output_val_V_we0 : OUT STD_LOGIC;
    convlayer_output_val_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    convlayer_output_rows_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    convlayer_output_rows_ce0 : OUT STD_LOGIC;
    convlayer_output_rows_we0 : OUT STD_LOGIC;
    convlayer_output_rows_d0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    convlayer_output_cols_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    convlayer_output_cols_ce0 : OUT STD_LOGIC;
    convlayer_output_cols_we0 : OUT STD_LOGIC;
    convlayer_output_cols_d0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
end;


architecture behav of ConvLayer_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000001000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000010000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000100000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (19 downto 0) := "00000000001000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (19 downto 0) := "00000000010000000000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000100000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (19 downto 0) := "00000001000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (19 downto 0) := "00000010000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (19 downto 0) := "00000100000000000000";
    constant ap_ST_fsm_pp3_stage0 : STD_LOGIC_VECTOR (19 downto 0) := "00001000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (19 downto 0) := "00010000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (19 downto 0) := "00100000000000000000";
    constant ap_ST_fsm_pp4_stage0 : STD_LOGIC_VECTOR (19 downto 0) := "01000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (19 downto 0) := "10000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv6_18 : STD_LOGIC_VECTOR (5 downto 0) := "011000";
    constant ap_const_lv64_3FF0000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "0011111111110000000000000000000000000000000000000000000000000000";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv5_18 : STD_LOGIC_VECTOR (4 downto 0) := "11000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv33_0 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000000";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv31_7FFFFFFF : STD_LOGIC_VECTOR (30 downto 0) := "1111111111111111111111111111111";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv26_0 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000000000";
    constant ap_const_lv31_1F : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000011111";
    constant ap_const_lv6_21 : STD_LOGIC_VECTOR (5 downto 0) := "100001";
    constant ap_const_lv6_3F : STD_LOGIC_VECTOR (5 downto 0) := "111111";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv8_9E : STD_LOGIC_VECTOR (7 downto 0) := "10011110";
    constant ap_const_lv8_70 : STD_LOGIC_VECTOR (7 downto 0) := "01110000";
    constant ap_const_lv8_6F : STD_LOGIC_VECTOR (7 downto 0) := "01101111";
    constant ap_const_lv32_80000000 : STD_LOGIC_VECTOR (31 downto 0) := "10000000000000000000000000000000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_433 : STD_LOGIC_VECTOR (11 downto 0) := "010000110011";
    constant ap_const_lv12_10 : STD_LOGIC_VECTOR (11 downto 0) := "000000010000";
    constant ap_const_lv12_FF0 : STD_LOGIC_VECTOR (11 downto 0) := "111111110000";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_36 : STD_LOGIC_VECTOR (11 downto 0) := "000000110110";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal convlayer1_k_val_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal convlayer1_k_val_V_ce0 : STD_LOGIC;
    signal convlayer1_k_val_V_q0 : STD_LOGIC_VECTOR (17 downto 0);
    signal convlayer1_k_rows_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal convlayer1_k_rows_ce0 : STD_LOGIC;
    signal convlayer1_k_rows_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal convlayer1_k_cols_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal convlayer1_k_cols_ce0 : STD_LOGIC;
    signal convlayer1_k_cols_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal convlayer1_b_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal convlayer1_b_V_ce0 : STD_LOGIC;
    signal convlayer1_b_V_q0 : STD_LOGIC_VECTOR (17 downto 0);
    signal j_0_i6_reg_476 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_0_i8_reg_499 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_0_i5_reg_521 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_0_i7_reg_543 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_2_fu_621_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_2_reg_2013 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal exitcond7_fu_627_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal i_5_fu_633_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_5_reg_2022 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_96_fu_663_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_96_reg_2027 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_s_fu_669_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_reg_2032 : STD_LOGIC_VECTOR (63 downto 0);
    signal j_fu_681_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal tmp_81_fu_717_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_81_reg_2057 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal tmp_98_cast_fu_753_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_98_cast_reg_2062 : STD_LOGIC_VECTOR (9 downto 0);
    signal convlayer1_k_rows_lo_reg_2067 : STD_LOGIC_VECTOR (2 downto 0);
    signal convlayer1_k_cols_lo_reg_2072 : STD_LOGIC_VECTOR (2 downto 0);
    signal exitcond1_fu_757_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal i_s_fu_762_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_s_reg_2081 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_99_fu_793_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_99_reg_2086 : STD_LOGIC_VECTOR (8 downto 0);
    signal exitcond_fu_899_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_2216 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_block_state8_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state9_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal j_1_fu_904_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_1_reg_2220 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal exitcond8_i_fu_1053_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal i_1_fu_1059_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_1_reg_2234 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_103_fu_1089_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_103_reg_2239 : STD_LOGIC_VECTOR (10 downto 0);
    signal exitcond_i_fu_1095_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_2249 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal ap_block_state13_pp2_stage0_iter0 : BOOLEAN;
    signal ap_block_state14_pp2_stage0_iter1 : BOOLEAN;
    signal ap_block_pp2_stage0_11001 : BOOLEAN;
    signal j_s_fu_1101_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal p_output_val_V_addr_1_reg_2263 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_70_fu_1129_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_70_reg_2269 : STD_LOGIC_VECTOR (32 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal tmp_67_fu_1133_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_67_reg_2274 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond2_i_fu_1137_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal i_3_fu_1143_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_3_reg_2283 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_107_fu_1173_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_107_reg_2288 : STD_LOGIC_VECTOR (10 downto 0);
    signal exitcond_i2_fu_1179_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i2_reg_2293 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp3_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp3_stage0 : signal is "none";
    signal ap_block_state18_pp3_stage0_iter0 : BOOLEAN;
    signal ap_block_state19_pp3_stage0_iter1 : BOOLEAN;
    signal ap_block_state20_pp3_stage0_iter2 : BOOLEAN;
    signal ap_block_state21_pp3_stage0_iter3 : BOOLEAN;
    signal ap_block_state22_pp3_stage0_iter4 : BOOLEAN;
    signal ap_block_state23_pp3_stage0_iter5 : BOOLEAN;
    signal ap_block_state24_pp3_stage0_iter6 : BOOLEAN;
    signal ap_block_state25_pp3_stage0_iter7 : BOOLEAN;
    signal ap_block_state26_pp3_stage0_iter8 : BOOLEAN;
    signal ap_block_state27_pp3_stage0_iter9 : BOOLEAN;
    signal ap_block_state28_pp3_stage0_iter10 : BOOLEAN;
    signal ap_block_state29_pp3_stage0_iter11 : BOOLEAN;
    signal ap_block_state30_pp3_stage0_iter12 : BOOLEAN;
    signal ap_block_state31_pp3_stage0_iter13 : BOOLEAN;
    signal ap_block_state32_pp3_stage0_iter14 : BOOLEAN;
    signal ap_block_state33_pp3_stage0_iter15 : BOOLEAN;
    signal ap_block_state34_pp3_stage0_iter16 : BOOLEAN;
    signal ap_block_state35_pp3_stage0_iter17 : BOOLEAN;
    signal ap_block_state36_pp3_stage0_iter18 : BOOLEAN;
    signal ap_block_state37_pp3_stage0_iter19 : BOOLEAN;
    signal ap_block_state38_pp3_stage0_iter20 : BOOLEAN;
    signal ap_block_state39_pp3_stage0_iter21 : BOOLEAN;
    signal ap_block_state40_pp3_stage0_iter22 : BOOLEAN;
    signal ap_block_state41_pp3_stage0_iter23 : BOOLEAN;
    signal ap_block_state42_pp3_stage0_iter24 : BOOLEAN;
    signal ap_block_state43_pp3_stage0_iter25 : BOOLEAN;
    signal ap_block_state44_pp3_stage0_iter26 : BOOLEAN;
    signal ap_block_state45_pp3_stage0_iter27 : BOOLEAN;
    signal ap_block_state46_pp3_stage0_iter28 : BOOLEAN;
    signal ap_block_state47_pp3_stage0_iter29 : BOOLEAN;
    signal ap_block_state48_pp3_stage0_iter30 : BOOLEAN;
    signal ap_block_state49_pp3_stage0_iter31 : BOOLEAN;
    signal ap_block_state50_pp3_stage0_iter32 : BOOLEAN;
    signal ap_block_pp3_stage0_11001 : BOOLEAN;
    signal exitcond_i2_reg_2293_pp3_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i2_reg_2293_pp3_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i2_reg_2293_pp3_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i2_reg_2293_pp3_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i2_reg_2293_pp3_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i2_reg_2293_pp3_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i2_reg_2293_pp3_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i2_reg_2293_pp3_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i2_reg_2293_pp3_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i2_reg_2293_pp3_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i2_reg_2293_pp3_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i2_reg_2293_pp3_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i2_reg_2293_pp3_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i2_reg_2293_pp3_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i2_reg_2293_pp3_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i2_reg_2293_pp3_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i2_reg_2293_pp3_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i2_reg_2293_pp3_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i2_reg_2293_pp3_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i2_reg_2293_pp3_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i2_reg_2293_pp3_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i2_reg_2293_pp3_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i2_reg_2293_pp3_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i2_reg_2293_pp3_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i2_reg_2293_pp3_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i2_reg_2293_pp3_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i2_reg_2293_pp3_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i2_reg_2293_pp3_iter28_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i2_reg_2293_pp3_iter29_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i2_reg_2293_pp3_iter30_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i2_reg_2293_pp3_iter31_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal j_3_fu_1185_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_enable_reg_pp3_iter0 : STD_LOGIC := '0';
    signal p_output_val_V_addr_2_reg_2302 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_output_val_V_addr_2_reg_2302_pp3_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_output_val_V_addr_2_reg_2302_pp3_iter2_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_output_val_V_addr_2_reg_2302_pp3_iter3_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_output_val_V_addr_2_reg_2302_pp3_iter4_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_output_val_V_addr_2_reg_2302_pp3_iter5_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_output_val_V_addr_2_reg_2302_pp3_iter6_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_output_val_V_addr_2_reg_2302_pp3_iter7_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_output_val_V_addr_2_reg_2302_pp3_iter8_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_output_val_V_addr_2_reg_2302_pp3_iter9_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_output_val_V_addr_2_reg_2302_pp3_iter10_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_output_val_V_addr_2_reg_2302_pp3_iter11_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_output_val_V_addr_2_reg_2302_pp3_iter12_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_output_val_V_addr_2_reg_2302_pp3_iter13_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_output_val_V_addr_2_reg_2302_pp3_iter14_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_output_val_V_addr_2_reg_2302_pp3_iter15_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_output_val_V_addr_2_reg_2302_pp3_iter16_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_output_val_V_addr_2_reg_2302_pp3_iter17_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_output_val_V_addr_2_reg_2302_pp3_iter18_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_output_val_V_addr_2_reg_2302_pp3_iter19_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_output_val_V_addr_2_reg_2302_pp3_iter20_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_output_val_V_addr_2_reg_2302_pp3_iter21_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_output_val_V_addr_2_reg_2302_pp3_iter22_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_output_val_V_addr_2_reg_2302_pp3_iter23_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_output_val_V_addr_2_reg_2302_pp3_iter24_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_output_val_V_addr_2_reg_2302_pp3_iter25_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_output_val_V_addr_2_reg_2302_pp3_iter26_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_output_val_V_addr_2_reg_2302_pp3_iter27_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_output_val_V_addr_2_reg_2302_pp3_iter28_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_output_val_V_addr_2_reg_2302_pp3_iter29_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_output_val_V_addr_2_reg_2302_pp3_iter30_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal p_output_val_V_addr_2_reg_2302_pp3_iter31_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_79_fu_1219_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_79_reg_2308 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_79_reg_2308_pp3_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_79_reg_2308_pp3_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_79_reg_2308_pp3_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal is_neg_fu_1225_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal is_neg_reg_2313 : STD_LOGIC_VECTOR (0 downto 0);
    signal is_neg_reg_2313_pp3_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal is_neg_reg_2313_pp3_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal is_neg_reg_2313_pp3_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_38_fu_1239_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_38_reg_2318 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_40_cast_fu_1247_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal p_Val2_40_cast_reg_2323 : STD_LOGIC_VECTOR (32 downto 0);
    signal num_zeros_fu_1277_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal num_zeros_reg_2329 : STD_LOGIC_VECTOR (31 downto 0);
    signal msb_idx_fu_1281_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal msb_idx_reg_2334 : STD_LOGIC_VECTOR (31 downto 0);
    signal msb_idx_reg_2334_pp3_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal msb_idx_reg_2334_pp3_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_5_fu_1397_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_5_reg_2339 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_8_fu_1405_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_8_reg_2344 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_s_197_reg_2349 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_assign_fu_1469_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_reg_2354 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_600_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i_i_reg_2359 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_88_fu_593_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_88_reg_2364 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_605_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_89_reg_2369 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_610_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_90_reg_2374 : STD_LOGIC_VECTOR (63 downto 0);
    signal isneg_reg_2379 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_145_fu_1506_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_145_reg_2385 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_93_fu_1510_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_93_reg_2390 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_116_fu_1522_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_116_reg_2396 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_117_fu_1528_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_117_reg_2403 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_122_fu_1534_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_122_reg_2408 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_123_fu_1540_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_123_reg_2413 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond5_fu_1743_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state52 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state52 : signal is "none";
    signal i_4_fu_1749_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_4_reg_2423 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_111_fu_1784_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_111_reg_2428 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_114_fu_1814_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_114_reg_2433 : STD_LOGIC_VECTOR (10 downto 0);
    signal exitcond4_fu_1820_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond4_reg_2438 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp4_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp4_stage0 : signal is "none";
    signal ap_block_state53_pp4_stage0_iter0 : BOOLEAN;
    signal ap_block_state54_pp4_stage0_iter1 : BOOLEAN;
    signal ap_block_pp4_stage0_11001 : BOOLEAN;
    signal j_2_fu_1826_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_2_reg_2442 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_enable_reg_pp4_iter0 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state8 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_block_pp2_stage0_subdone : BOOLEAN;
    signal ap_condition_pp2_exit_iter0_state13 : STD_LOGIC;
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal ap_block_pp3_stage0_subdone : BOOLEAN;
    signal ap_condition_pp3_exit_iter0_state18 : STD_LOGIC;
    signal ap_enable_reg_pp3_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter19 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter20 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter21 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter22 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter23 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter24 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter25 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter26 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter27 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter28 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter29 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter30 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter31 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter32 : STD_LOGIC := '0';
    signal ap_block_pp4_stage0_subdone : BOOLEAN;
    signal ap_condition_pp4_exit_iter0_state53 : STD_LOGIC;
    signal ap_enable_reg_pp4_iter1 : STD_LOGIC := '0';
    signal p_temp_val_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_temp_val_V_ce0 : STD_LOGIC;
    signal p_temp_val_V_we0 : STD_LOGIC;
    signal p_temp_val_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_output_val_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_output_val_V_ce0 : STD_LOGIC;
    signal p_output_val_V_we0 : STD_LOGIC;
    signal p_output_val_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_output_val_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_output_val_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_output_val_V_ce1 : STD_LOGIC;
    signal p_output_val_V_we1 : STD_LOGIC;
    signal p_output_val_V_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_output_val_V_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Conv8_fu_555_ap_start : STD_LOGIC;
    signal grp_Conv8_fu_555_ap_done : STD_LOGIC;
    signal grp_Conv8_fu_555_ap_idle : STD_LOGIC;
    signal grp_Conv8_fu_555_ap_ready : STD_LOGIC;
    signal grp_Conv8_fu_555_src_0_val_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_Conv8_fu_555_src_0_val_V_ce0 : STD_LOGIC;
    signal grp_Conv8_fu_555_dst_val_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_Conv8_fu_555_dst_val_V_ce0 : STD_LOGIC;
    signal grp_Conv8_fu_555_dst_val_V_we0 : STD_LOGIC;
    signal grp_Conv8_fu_555_dst_val_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_reg_430 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_0_i_reg_442 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal exitcond3_fu_615_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_0_i_reg_453 : STD_LOGIC_VECTOR (4 downto 0);
    signal exitcond6_fu_675_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_0_i6_reg_464 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_phi_mux_j_0_i6_phi_fu_480_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal i_0_i8_reg_488 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal i_0_i5_reg_510 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state51 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state51 : signal is "none";
    signal i_0_i7_reg_532 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state55 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state55 : signal is "none";
    signal ap_phi_mux_j_0_i7_phi_fu_547_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_pp4_stage0 : BOOLEAN;
    signal grp_Conv8_fu_555_ap_start_reg : STD_LOGIC := '0';
    signal tmp_105_cast_fu_696_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_109_cast_fu_919_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_113_cast_fu_1116_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp2_stage0 : BOOLEAN;
    signal tmp_121_cast_fu_1200_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp3_stage0 : BOOLEAN;
    signal tmp_136_cast_fu_1841_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_135_cast_fu_1855_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_kernel_val_V_0_0_s_fu_178 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_kernel_val_4_V_0_s_fu_924_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_kernel_val_V_0_1_s_fu_182 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_kernel_val_V_0_2_s_fu_186 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_kernel_val_V_0_3_s_fu_190 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_kernel_val_V_0_4_s_fu_194 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_kernel_val_V_1_0_s_fu_198 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_kernel_val_V_1_1_s_fu_202 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_kernel_val_V_1_2_s_fu_206 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_kernel_val_V_1_3_s_fu_210 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_kernel_val_V_1_4_s_fu_214 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_kernel_val_V_2_0_s_fu_218 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_kernel_val_V_2_1_s_fu_222 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_kernel_val_V_2_2_s_fu_226 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_kernel_val_V_2_3_s_fu_230 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_kernel_val_V_2_4_s_fu_234 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_kernel_val_V_3_0_s_fu_238 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_kernel_val_V_3_1_s_fu_242 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_kernel_val_V_3_2_s_fu_246 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_kernel_val_V_3_3_s_fu_250 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_kernel_val_V_3_4_s_fu_254 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_kernel_val_V_4_0_s_fu_258 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_kernel_val_V_4_1_s_fu_262 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_kernel_val_V_4_2_s_fu_266 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_kernel_val_V_4_3_s_fu_270 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_kernel_val_V_4_4_s_fu_274 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel6_fu_1734_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal res_fu_590_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_94_fu_639_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_95_fu_651_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl_cast_fu_647_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl1_cast_fu_659_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_69_cast_fu_687_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_100_fu_691_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_77_fu_705_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_cast_fu_701_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_shl4_cast_fu_713_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_82_fu_723_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_84_fu_735_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_shl2_cast_fu_731_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl3_cast_fu_743_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_86_fu_747_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_66_cast_fu_768_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_97_fu_772_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_98_fu_781_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl5_cast_fu_789_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_102_cast_fu_777_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_72_cast_fu_910_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_104_fu_914_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_101_fu_1065_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_102_fu_1077_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl6_cast_fu_1073_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl7_cast_fu_1085_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_74_cast_fu_1107_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_108_fu_1111_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_70_fu_1129_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_67_fu_1133_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_105_fu_1149_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_106_fu_1161_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl8_cast_fu_1157_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl9_cast_fu_1169_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_77_cast_fu_1191_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_115_fu_1195_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_78_fu_1205_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_78_fu_1205_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal p_Val2_38_cast_fu_1214_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_34_fu_1209_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal p_Val2_38_cast_fu_1214_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_176_cast_fu_1233_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_s_fu_1251_p4 : STD_LOGIC_VECTOR (32 downto 0);
    signal p_Result_2_fu_1261_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_80_fu_1269_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_119_fu_1290_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_118_fu_1286_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal msb_idx_1_fu_1298_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_120_fu_1306_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_83_fu_1322_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_181_cast_fu_1328_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_121_fu_1337_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_126_fu_1341_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_131_fu_1353_p4 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_134_fu_1362_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_128_fu_1347_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_138_fu_1375_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_137_fu_1368_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_139_fu_1383_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_140_fu_1387_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal icmp_fu_1316_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp32_V_4_fu_1332_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_fu_1393_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_587_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_85_fu_1419_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_142_fu_1424_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp24_cast_cast_fu_1427_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Repl2_3_trunc_fu_1435_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_87_fu_1441_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_3_fu_1448_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_12_op_fu_1459_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_68_fu_1465_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal d_assign_fu_596_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ireg_V_fu_1476_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_tmp_V_fu_1492_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_143_fu_1480_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_91_fu_1502_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_fu_1516_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_92_fu_1546_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal p_Result_4_fu_1553_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_1_fu_1557_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal sh_amt_fu_1570_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal man_V_2_fu_1563_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_147_fu_1589_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal sh_amt_cast_fu_1575_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_125_fu_1605_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_127_fu_1609_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_146_fu_1579_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp1_fu_1632_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_demorgan_fu_1642_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_fu_1646_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_fu_1652_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_124_fu_1583_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_fu_1663_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp21_demorgan_fu_1675_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp6_fu_1599_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_fu_1680_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp4_fu_1686_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_129_fu_1626_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal this_assign_fu_1619_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp9_fu_1669_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_fu_1657_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_148_fu_1615_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp2_fu_1637_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_fu_1700_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel_fu_1692_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel4_fu_1706_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_cond3_fu_1714_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_fu_1728_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel5_fu_1720_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_75_cast_fu_1755_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_109_fu_1759_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_110_fu_1764_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl12_cast_fu_1768_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_shl13_cast_fu_1776_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_112_fu_1790_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_113_fu_1802_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl10_cast_fu_1798_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl11_cast_fu_1810_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_134_cast1_fu_1832_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_133_fu_1836_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_134_cast_fu_1846_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_132_fu_1850_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_idle_pp2 : STD_LOGIC;
    signal ap_enable_pp2 : STD_LOGIC;
    signal ap_idle_pp3 : STD_LOGIC;
    signal ap_enable_pp3 : STD_LOGIC;
    signal ap_idle_pp4 : STD_LOGIC;
    signal ap_enable_pp4 : STD_LOGIC;

    component Conv8 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        src_0_val_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        src_0_val_V_ce0 : OUT STD_LOGIC;
        src_0_val_V_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
        kernel_val_0_V_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_val_0_V_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_val_0_V_2_read : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_val_0_V_3_read : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_val_0_V_4_read : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_val_1_V_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_val_1_V_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_val_1_V_2_read : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_val_1_V_3_read : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_val_1_V_4_read : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_val_2_V_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_val_2_V_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_val_2_V_2_read : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_val_2_V_3_read : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_val_2_V_4_read : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_val_3_V_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_val_3_V_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_val_3_V_2_read : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_val_3_V_3_read : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_val_3_V_4_read : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_val_4_V_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_val_4_V_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_val_4_V_2_read : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_val_4_V_3_read : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_val_4_V_4_read : IN STD_LOGIC_VECTOR (31 downto 0);
        dst_val_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        dst_val_V_ce0 : OUT STD_LOGIC;
        dst_val_V_we0 : OUT STD_LOGIC;
        dst_val_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component CNN_Core_uitofp_3qcK IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component CNN_Core_fptrunc_rcU IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component CNN_Core_fpext_32sc4 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component CNN_Core_fexp_32ntde IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component CNN_Core_dadd_64nudo IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component CNN_Core_ddiv_64nvdy IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component ConvLayer_1_convlkbM IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component ConvLayer_1_convllbW IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (2 downto 0) );
    end component;


    component ConvLayer_1_convlncg IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component ConvLayer_1_p_temocq IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component ConvLayer_1_p_outpcA IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    convlayer1_k_val_V_U : component ConvLayer_1_convlkbM
    generic map (
        DataWidth => 18,
        AddressRange => 150,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => convlayer1_k_val_V_address0,
        ce0 => convlayer1_k_val_V_ce0,
        q0 => convlayer1_k_val_V_q0);

    convlayer1_k_rows_U : component ConvLayer_1_convllbW
    generic map (
        DataWidth => 3,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => convlayer1_k_rows_address0,
        ce0 => convlayer1_k_rows_ce0,
        q0 => convlayer1_k_rows_q0);

    convlayer1_k_cols_U : component ConvLayer_1_convllbW
    generic map (
        DataWidth => 3,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => convlayer1_k_cols_address0,
        ce0 => convlayer1_k_cols_ce0,
        q0 => convlayer1_k_cols_q0);

    convlayer1_b_V_U : component ConvLayer_1_convlncg
    generic map (
        DataWidth => 18,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => convlayer1_b_V_address0,
        ce0 => convlayer1_b_V_ce0,
        q0 => convlayer1_b_V_q0);

    p_temp_val_V_U : component ConvLayer_1_p_temocq
    generic map (
        DataWidth => 32,
        AddressRange => 576,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_temp_val_V_address0,
        ce0 => p_temp_val_V_ce0,
        we0 => p_temp_val_V_we0,
        d0 => grp_Conv8_fu_555_dst_val_V_d0,
        q0 => p_temp_val_V_q0);

    p_output_val_V_U : component ConvLayer_1_p_outpcA
    generic map (
        DataWidth => 32,
        AddressRange => 576,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_output_val_V_address0,
        ce0 => p_output_val_V_ce0,
        we0 => p_output_val_V_we0,
        d0 => p_output_val_V_d0,
        q0 => p_output_val_V_q0,
        address1 => p_output_val_V_address1,
        ce1 => p_output_val_V_ce1,
        we1 => p_output_val_V_we1,
        d1 => p_output_val_V_d1,
        q1 => p_output_val_V_q1);

    grp_Conv8_fu_555 : component Conv8
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_Conv8_fu_555_ap_start,
        ap_done => grp_Conv8_fu_555_ap_done,
        ap_idle => grp_Conv8_fu_555_ap_idle,
        ap_ready => grp_Conv8_fu_555_ap_ready,
        src_0_val_V_address0 => grp_Conv8_fu_555_src_0_val_V_address0,
        src_0_val_V_ce0 => grp_Conv8_fu_555_src_0_val_V_ce0,
        src_0_val_V_q0 => input_0_val_V_q0,
        kernel_val_0_V_0_read => p_kernel_val_V_0_0_s_fu_178,
        kernel_val_0_V_1_read => p_kernel_val_V_0_1_s_fu_182,
        kernel_val_0_V_2_read => p_kernel_val_V_0_2_s_fu_186,
        kernel_val_0_V_3_read => p_kernel_val_V_0_3_s_fu_190,
        kernel_val_0_V_4_read => p_kernel_val_V_0_4_s_fu_194,
        kernel_val_1_V_0_read => p_kernel_val_V_1_0_s_fu_198,
        kernel_val_1_V_1_read => p_kernel_val_V_1_1_s_fu_202,
        kernel_val_1_V_2_read => p_kernel_val_V_1_2_s_fu_206,
        kernel_val_1_V_3_read => p_kernel_val_V_1_3_s_fu_210,
        kernel_val_1_V_4_read => p_kernel_val_V_1_4_s_fu_214,
        kernel_val_2_V_0_read => p_kernel_val_V_2_0_s_fu_218,
        kernel_val_2_V_1_read => p_kernel_val_V_2_1_s_fu_222,
        kernel_val_2_V_2_read => p_kernel_val_V_2_2_s_fu_226,
        kernel_val_2_V_3_read => p_kernel_val_V_2_3_s_fu_230,
        kernel_val_2_V_4_read => p_kernel_val_V_2_4_s_fu_234,
        kernel_val_3_V_0_read => p_kernel_val_V_3_0_s_fu_238,
        kernel_val_3_V_1_read => p_kernel_val_V_3_1_s_fu_242,
        kernel_val_3_V_2_read => p_kernel_val_V_3_2_s_fu_246,
        kernel_val_3_V_3_read => p_kernel_val_V_3_3_s_fu_250,
        kernel_val_3_V_4_read => p_kernel_val_V_3_4_s_fu_254,
        kernel_val_4_V_0_read => p_kernel_val_V_4_0_s_fu_258,
        kernel_val_4_V_1_read => p_kernel_val_V_4_1_s_fu_262,
        kernel_val_4_V_2_read => p_kernel_val_V_4_2_s_fu_266,
        kernel_val_4_V_3_read => p_kernel_val_V_4_3_s_fu_270,
        kernel_val_4_V_4_read => p_kernel_val_V_4_4_s_fu_274,
        dst_val_V_address0 => grp_Conv8_fu_555_dst_val_V_address0,
        dst_val_V_ce0 => grp_Conv8_fu_555_dst_val_V_ce0,
        dst_val_V_we0 => grp_Conv8_fu_555_dst_val_V_we0,
        dst_val_V_d0 => grp_Conv8_fu_555_dst_val_V_d0);

    CNN_Core_uitofp_3qcK_U80 : component CNN_Core_uitofp_3qcK
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp32_V_5_reg_2339,
        ce => ap_const_logic_1,
        dout => grp_fu_587_p1);

    CNN_Core_fptrunc_rcU_U81 : component CNN_Core_fptrunc_rcU
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_90_reg_2374,
        dout => res_fu_590_p1);

    CNN_Core_fpext_32sc4_U82 : component CNN_Core_fpext_32sc4
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => tmp_i_i_reg_2359,
        dout => tmp_88_fu_593_p1);

    CNN_Core_fpext_32sc4_U83 : component CNN_Core_fpext_32sc4
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => res_fu_590_p1,
        dout => d_assign_fu_596_p1);

    CNN_Core_fexp_32ntde_U84 : component CNN_Core_fexp_32ntde
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_const_lv32_0,
        din1 => x_assign_reg_2354,
        ce => ap_const_logic_1,
        dout => grp_fu_600_p2);

    CNN_Core_dadd_64nudo_U85 : component CNN_Core_dadd_64nudo
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_88_reg_2364,
        din1 => ap_const_lv64_3FF0000000000000,
        ce => ap_const_logic_1,
        dout => grp_fu_605_p2);

    CNN_Core_ddiv_64nvdy_U86 : component CNN_Core_ddiv_64nvdy
    generic map (
        ID => 1,
        NUM_STAGE => 15,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_const_lv64_3FF0000000000000,
        din1 => tmp_89_reg_2369,
        ce => ap_const_logic_1,
        dout => grp_fu_610_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state8) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (exitcond1_fu_757_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state8))) then 
                    ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state8);
                elsif ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (exitcond1_fu_757_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp2_exit_iter0_state13) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state12) and (exitcond8_i_fu_1053_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp2_exit_iter0_state13))) then 
                    ap_enable_reg_pp2_iter1 <= (ap_const_logic_1 xor ap_condition_pp2_exit_iter0_state13);
                elsif ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state12) and (exitcond8_i_fu_1053_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp3_exit_iter0_state18) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state17) and (exitcond2_i_fu_1137_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp3_exit_iter0_state18)) then 
                        ap_enable_reg_pp3_iter1 <= (ap_const_logic_1 xor ap_condition_pp3_exit_iter0_state18);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter10 <= ap_enable_reg_pp3_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter11 <= ap_enable_reg_pp3_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter12 <= ap_enable_reg_pp3_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter13 <= ap_enable_reg_pp3_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter14 <= ap_enable_reg_pp3_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter15 <= ap_enable_reg_pp3_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter16 <= ap_enable_reg_pp3_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter17 <= ap_enable_reg_pp3_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter18 <= ap_enable_reg_pp3_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter19 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter19 <= ap_enable_reg_pp3_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter20 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter20 <= ap_enable_reg_pp3_iter19;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter21 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter21 <= ap_enable_reg_pp3_iter20;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter22 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter22 <= ap_enable_reg_pp3_iter21;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter23 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter23 <= ap_enable_reg_pp3_iter22;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter24_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter24 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter24 <= ap_enable_reg_pp3_iter23;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter25_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter25 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter25 <= ap_enable_reg_pp3_iter24;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter26_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter26 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter26 <= ap_enable_reg_pp3_iter25;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter27_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter27 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter27 <= ap_enable_reg_pp3_iter26;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter28_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter28 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter28 <= ap_enable_reg_pp3_iter27;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter29_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter29 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter29 <= ap_enable_reg_pp3_iter28;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter30_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter30 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter30 <= ap_enable_reg_pp3_iter29;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter31_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter31 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter31 <= ap_enable_reg_pp3_iter30;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter32_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter32 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter32 <= ap_enable_reg_pp3_iter31;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state17) and (exitcond2_i_fu_1137_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp3_iter32 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter4 <= ap_enable_reg_pp3_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter5 <= ap_enable_reg_pp3_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter6 <= ap_enable_reg_pp3_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter7 <= ap_enable_reg_pp3_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter8 <= ap_enable_reg_pp3_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter9 <= ap_enable_reg_pp3_iter8;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp4_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp4_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp4_exit_iter0_state53) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then 
                    ap_enable_reg_pp4_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state52) and (exitcond5_fu_1743_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp4_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp4_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp4_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp4_exit_iter0_state53))) then 
                    ap_enable_reg_pp4_iter1 <= (ap_const_logic_1 xor ap_condition_pp4_exit_iter0_state53);
                elsif ((ap_const_boolean_0 = ap_block_pp4_stage0_subdone)) then 
                    ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state52) and (exitcond5_fu_1743_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp4_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_Conv8_fu_555_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_Conv8_fu_555_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and (exitcond1_fu_757_p2 = ap_const_lv1_1))) then 
                    grp_Conv8_fu_555_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_Conv8_fu_555_ap_ready = ap_const_logic_1)) then 
                    grp_Conv8_fu_555_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_0_i5_reg_510_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
                i_0_i5_reg_510 <= i_3_reg_2283;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                i_0_i5_reg_510 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    i_0_i6_reg_464_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                i_0_i6_reg_464 <= i_s_reg_2081;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                i_0_i6_reg_464 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    i_0_i7_reg_532_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
                i_0_i7_reg_532 <= i_4_reg_2423;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state17) and (exitcond2_i_fu_1137_p2 = ap_const_lv1_1))) then 
                i_0_i7_reg_532 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    i_0_i8_reg_488_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                i_0_i8_reg_488 <= i_1_reg_2234;
            elsif (((grp_Conv8_fu_555_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                i_0_i8_reg_488 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    i_0_i_reg_442_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond3_fu_615_p2 = ap_const_lv1_0))) then 
                i_0_i_reg_442 <= ap_const_lv5_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                i_0_i_reg_442 <= i_5_reg_2022;
            end if; 
        end if;
    end process;

    i_reg_430_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state52) and (exitcond5_fu_1743_p2 = ap_const_lv1_1))) then 
                i_reg_430 <= i_2_reg_2013;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_reg_430 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    j_0_i5_reg_521_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state17) and (exitcond2_i_fu_1137_p2 = ap_const_lv1_0))) then 
                j_0_i5_reg_521 <= ap_const_lv5_0;
            elsif (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (exitcond_i2_fu_1179_p2 = ap_const_lv1_0))) then 
                j_0_i5_reg_521 <= j_3_fu_1185_p2;
            end if; 
        end if;
    end process;

    j_0_i6_reg_476_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond_reg_2216 = ap_const_lv1_0))) then 
                j_0_i6_reg_476 <= j_1_reg_2220;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (exitcond1_fu_757_p2 = ap_const_lv1_0))) then 
                j_0_i6_reg_476 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    j_0_i7_reg_543_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state52) and (exitcond5_fu_1743_p2 = ap_const_lv1_0))) then 
                j_0_i7_reg_543 <= ap_const_lv5_0;
            elsif (((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (exitcond4_reg_2438 = ap_const_lv1_0))) then 
                j_0_i7_reg_543 <= j_2_reg_2442;
            end if; 
        end if;
    end process;

    j_0_i8_reg_499_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state12) and (exitcond8_i_fu_1053_p2 = ap_const_lv1_0))) then 
                j_0_i8_reg_499 <= ap_const_lv5_0;
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (exitcond_i_fu_1095_p2 = ap_const_lv1_0))) then 
                j_0_i8_reg_499 <= j_s_fu_1101_p2;
            end if; 
        end if;
    end process;

    j_0_i_reg_453_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond7_fu_627_p2 = ap_const_lv1_0))) then 
                j_0_i_reg_453 <= ap_const_lv5_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (exitcond6_fu_675_p2 = ap_const_lv1_0))) then 
                j_0_i_reg_453 <= j_fu_681_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                convlayer1_k_cols_lo_reg_2072 <= convlayer1_k_cols_q0;
                convlayer1_k_rows_lo_reg_2067 <= convlayer1_k_rows_q0;
                tmp_81_reg_2057 <= tmp_81_fu_717_p2;
                    tmp_98_cast_reg_2062(9 downto 3) <= tmp_98_cast_fu_753_p1(9 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then
                exitcond4_reg_2438 <= exitcond4_fu_1820_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then
                exitcond_i2_reg_2293 <= exitcond_i2_fu_1179_p2;
                exitcond_i2_reg_2293_pp3_iter1_reg <= exitcond_i2_reg_2293;
                p_output_val_V_addr_2_reg_2302_pp3_iter1_reg <= p_output_val_V_addr_2_reg_2302;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp3_stage0_11001)) then
                exitcond_i2_reg_2293_pp3_iter10_reg <= exitcond_i2_reg_2293_pp3_iter9_reg;
                exitcond_i2_reg_2293_pp3_iter11_reg <= exitcond_i2_reg_2293_pp3_iter10_reg;
                exitcond_i2_reg_2293_pp3_iter12_reg <= exitcond_i2_reg_2293_pp3_iter11_reg;
                exitcond_i2_reg_2293_pp3_iter13_reg <= exitcond_i2_reg_2293_pp3_iter12_reg;
                exitcond_i2_reg_2293_pp3_iter14_reg <= exitcond_i2_reg_2293_pp3_iter13_reg;
                exitcond_i2_reg_2293_pp3_iter15_reg <= exitcond_i2_reg_2293_pp3_iter14_reg;
                exitcond_i2_reg_2293_pp3_iter16_reg <= exitcond_i2_reg_2293_pp3_iter15_reg;
                exitcond_i2_reg_2293_pp3_iter17_reg <= exitcond_i2_reg_2293_pp3_iter16_reg;
                exitcond_i2_reg_2293_pp3_iter18_reg <= exitcond_i2_reg_2293_pp3_iter17_reg;
                exitcond_i2_reg_2293_pp3_iter19_reg <= exitcond_i2_reg_2293_pp3_iter18_reg;
                exitcond_i2_reg_2293_pp3_iter20_reg <= exitcond_i2_reg_2293_pp3_iter19_reg;
                exitcond_i2_reg_2293_pp3_iter21_reg <= exitcond_i2_reg_2293_pp3_iter20_reg;
                exitcond_i2_reg_2293_pp3_iter22_reg <= exitcond_i2_reg_2293_pp3_iter21_reg;
                exitcond_i2_reg_2293_pp3_iter23_reg <= exitcond_i2_reg_2293_pp3_iter22_reg;
                exitcond_i2_reg_2293_pp3_iter24_reg <= exitcond_i2_reg_2293_pp3_iter23_reg;
                exitcond_i2_reg_2293_pp3_iter25_reg <= exitcond_i2_reg_2293_pp3_iter24_reg;
                exitcond_i2_reg_2293_pp3_iter26_reg <= exitcond_i2_reg_2293_pp3_iter25_reg;
                exitcond_i2_reg_2293_pp3_iter27_reg <= exitcond_i2_reg_2293_pp3_iter26_reg;
                exitcond_i2_reg_2293_pp3_iter28_reg <= exitcond_i2_reg_2293_pp3_iter27_reg;
                exitcond_i2_reg_2293_pp3_iter29_reg <= exitcond_i2_reg_2293_pp3_iter28_reg;
                exitcond_i2_reg_2293_pp3_iter2_reg <= exitcond_i2_reg_2293_pp3_iter1_reg;
                exitcond_i2_reg_2293_pp3_iter30_reg <= exitcond_i2_reg_2293_pp3_iter29_reg;
                exitcond_i2_reg_2293_pp3_iter31_reg <= exitcond_i2_reg_2293_pp3_iter30_reg;
                exitcond_i2_reg_2293_pp3_iter3_reg <= exitcond_i2_reg_2293_pp3_iter2_reg;
                exitcond_i2_reg_2293_pp3_iter4_reg <= exitcond_i2_reg_2293_pp3_iter3_reg;
                exitcond_i2_reg_2293_pp3_iter5_reg <= exitcond_i2_reg_2293_pp3_iter4_reg;
                exitcond_i2_reg_2293_pp3_iter6_reg <= exitcond_i2_reg_2293_pp3_iter5_reg;
                exitcond_i2_reg_2293_pp3_iter7_reg <= exitcond_i2_reg_2293_pp3_iter6_reg;
                exitcond_i2_reg_2293_pp3_iter8_reg <= exitcond_i2_reg_2293_pp3_iter7_reg;
                exitcond_i2_reg_2293_pp3_iter9_reg <= exitcond_i2_reg_2293_pp3_iter8_reg;
                is_neg_reg_2313_pp3_iter2_reg <= is_neg_reg_2313;
                is_neg_reg_2313_pp3_iter3_reg <= is_neg_reg_2313_pp3_iter2_reg;
                is_neg_reg_2313_pp3_iter4_reg <= is_neg_reg_2313_pp3_iter3_reg;
                msb_idx_reg_2334_pp3_iter3_reg <= msb_idx_reg_2334;
                msb_idx_reg_2334_pp3_iter4_reg <= msb_idx_reg_2334_pp3_iter3_reg;
                p_output_val_V_addr_2_reg_2302_pp3_iter10_reg <= p_output_val_V_addr_2_reg_2302_pp3_iter9_reg;
                p_output_val_V_addr_2_reg_2302_pp3_iter11_reg <= p_output_val_V_addr_2_reg_2302_pp3_iter10_reg;
                p_output_val_V_addr_2_reg_2302_pp3_iter12_reg <= p_output_val_V_addr_2_reg_2302_pp3_iter11_reg;
                p_output_val_V_addr_2_reg_2302_pp3_iter13_reg <= p_output_val_V_addr_2_reg_2302_pp3_iter12_reg;
                p_output_val_V_addr_2_reg_2302_pp3_iter14_reg <= p_output_val_V_addr_2_reg_2302_pp3_iter13_reg;
                p_output_val_V_addr_2_reg_2302_pp3_iter15_reg <= p_output_val_V_addr_2_reg_2302_pp3_iter14_reg;
                p_output_val_V_addr_2_reg_2302_pp3_iter16_reg <= p_output_val_V_addr_2_reg_2302_pp3_iter15_reg;
                p_output_val_V_addr_2_reg_2302_pp3_iter17_reg <= p_output_val_V_addr_2_reg_2302_pp3_iter16_reg;
                p_output_val_V_addr_2_reg_2302_pp3_iter18_reg <= p_output_val_V_addr_2_reg_2302_pp3_iter17_reg;
                p_output_val_V_addr_2_reg_2302_pp3_iter19_reg <= p_output_val_V_addr_2_reg_2302_pp3_iter18_reg;
                p_output_val_V_addr_2_reg_2302_pp3_iter20_reg <= p_output_val_V_addr_2_reg_2302_pp3_iter19_reg;
                p_output_val_V_addr_2_reg_2302_pp3_iter21_reg <= p_output_val_V_addr_2_reg_2302_pp3_iter20_reg;
                p_output_val_V_addr_2_reg_2302_pp3_iter22_reg <= p_output_val_V_addr_2_reg_2302_pp3_iter21_reg;
                p_output_val_V_addr_2_reg_2302_pp3_iter23_reg <= p_output_val_V_addr_2_reg_2302_pp3_iter22_reg;
                p_output_val_V_addr_2_reg_2302_pp3_iter24_reg <= p_output_val_V_addr_2_reg_2302_pp3_iter23_reg;
                p_output_val_V_addr_2_reg_2302_pp3_iter25_reg <= p_output_val_V_addr_2_reg_2302_pp3_iter24_reg;
                p_output_val_V_addr_2_reg_2302_pp3_iter26_reg <= p_output_val_V_addr_2_reg_2302_pp3_iter25_reg;
                p_output_val_V_addr_2_reg_2302_pp3_iter27_reg <= p_output_val_V_addr_2_reg_2302_pp3_iter26_reg;
                p_output_val_V_addr_2_reg_2302_pp3_iter28_reg <= p_output_val_V_addr_2_reg_2302_pp3_iter27_reg;
                p_output_val_V_addr_2_reg_2302_pp3_iter29_reg <= p_output_val_V_addr_2_reg_2302_pp3_iter28_reg;
                p_output_val_V_addr_2_reg_2302_pp3_iter2_reg <= p_output_val_V_addr_2_reg_2302_pp3_iter1_reg;
                p_output_val_V_addr_2_reg_2302_pp3_iter30_reg <= p_output_val_V_addr_2_reg_2302_pp3_iter29_reg;
                p_output_val_V_addr_2_reg_2302_pp3_iter31_reg <= p_output_val_V_addr_2_reg_2302_pp3_iter30_reg;
                p_output_val_V_addr_2_reg_2302_pp3_iter3_reg <= p_output_val_V_addr_2_reg_2302_pp3_iter2_reg;
                p_output_val_V_addr_2_reg_2302_pp3_iter4_reg <= p_output_val_V_addr_2_reg_2302_pp3_iter3_reg;
                p_output_val_V_addr_2_reg_2302_pp3_iter5_reg <= p_output_val_V_addr_2_reg_2302_pp3_iter4_reg;
                p_output_val_V_addr_2_reg_2302_pp3_iter6_reg <= p_output_val_V_addr_2_reg_2302_pp3_iter5_reg;
                p_output_val_V_addr_2_reg_2302_pp3_iter7_reg <= p_output_val_V_addr_2_reg_2302_pp3_iter6_reg;
                p_output_val_V_addr_2_reg_2302_pp3_iter8_reg <= p_output_val_V_addr_2_reg_2302_pp3_iter7_reg;
                p_output_val_V_addr_2_reg_2302_pp3_iter9_reg <= p_output_val_V_addr_2_reg_2302_pp3_iter8_reg;
                tmp_79_reg_2308_pp3_iter2_reg <= tmp_79_reg_2308;
                tmp_79_reg_2308_pp3_iter3_reg <= tmp_79_reg_2308_pp3_iter2_reg;
                tmp_79_reg_2308_pp3_iter4_reg <= tmp_79_reg_2308_pp3_iter3_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                exitcond_i_reg_2249 <= exitcond_i_fu_1095_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                exitcond_reg_2216 <= exitcond_fu_899_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                i_1_reg_2234 <= i_1_fu_1059_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_2_reg_2013 <= i_2_fu_621_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then
                i_3_reg_2283 <= i_3_fu_1143_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state52)) then
                i_4_reg_2423 <= i_4_fu_1749_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                i_5_reg_2022 <= i_5_fu_633_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                i_s_reg_2081 <= i_s_fu_762_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (exitcond_i2_reg_2293 = ap_const_lv1_0))) then
                is_neg_reg_2313 <= p_Val2_34_fu_1209_p2(32 downto 32);
                num_zeros_reg_2329 <= num_zeros_fu_1277_p1;
                p_Val2_38_reg_2318 <= p_Val2_38_fu_1239_p3;
                    p_Val2_40_cast_reg_2323(31 downto 0) <= p_Val2_40_cast_fu_1247_p1(31 downto 0);
                tmp_79_reg_2308 <= tmp_79_fu_1219_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (exitcond_i2_reg_2293_pp3_iter30_reg = ap_const_lv1_0))) then
                isneg_reg_2379 <= ireg_V_fu_1476_p1(63 downto 63);
                tmp_116_reg_2396 <= tmp_116_fu_1522_p2;
                tmp_117_reg_2403 <= tmp_117_fu_1528_p2;
                tmp_122_reg_2408 <= tmp_122_fu_1534_p2;
                tmp_123_reg_2413 <= tmp_123_fu_1540_p2;
                tmp_145_reg_2385 <= tmp_145_fu_1506_p1;
                tmp_93_reg_2390 <= tmp_93_fu_1510_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                j_1_reg_2220 <= j_1_fu_904_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then
                j_2_reg_2442 <= j_2_fu_1826_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (tmp_79_reg_2308 = ap_const_lv1_0) and (exitcond_i2_reg_2293_pp3_iter1_reg = ap_const_lv1_0))) then
                msb_idx_reg_2334 <= msb_idx_fu_1281_p2;
                tmp32_V_5_reg_2339 <= tmp32_V_5_fu_1397_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (tmp_79_reg_2308_pp3_iter3_reg = ap_const_lv1_0) and (exitcond_i2_reg_2293_pp3_iter3_reg = ap_const_lv1_0))) then
                p_Result_s_197_reg_2349 <= tmp32_V_8_fu_1405_p1(30 downto 23);
                tmp32_V_8_reg_2344 <= tmp32_V_8_fu_1405_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((j_0_i6_reg_476 = ap_const_lv3_0) and (i_0_i6_reg_464 = ap_const_lv3_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                p_kernel_val_V_0_0_s_fu_178 <= p_kernel_val_4_V_0_s_fu_924_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((j_0_i6_reg_476 = ap_const_lv3_1) and (i_0_i6_reg_464 = ap_const_lv3_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                p_kernel_val_V_0_1_s_fu_182 <= p_kernel_val_4_V_0_s_fu_924_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((j_0_i6_reg_476 = ap_const_lv3_2) and (i_0_i6_reg_464 = ap_const_lv3_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                p_kernel_val_V_0_2_s_fu_186 <= p_kernel_val_4_V_0_s_fu_924_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((j_0_i6_reg_476 = ap_const_lv3_3) and (i_0_i6_reg_464 = ap_const_lv3_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                p_kernel_val_V_0_3_s_fu_190 <= p_kernel_val_4_V_0_s_fu_924_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((j_0_i6_reg_476 = ap_const_lv3_3)) and not((j_0_i6_reg_476 = ap_const_lv3_2)) and not((j_0_i6_reg_476 = ap_const_lv3_1)) and not((j_0_i6_reg_476 = ap_const_lv3_0)) and (i_0_i6_reg_464 = ap_const_lv3_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                p_kernel_val_V_0_4_s_fu_194 <= p_kernel_val_4_V_0_s_fu_924_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((j_0_i6_reg_476 = ap_const_lv3_0) and (i_0_i6_reg_464 = ap_const_lv3_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                p_kernel_val_V_1_0_s_fu_198 <= p_kernel_val_4_V_0_s_fu_924_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((j_0_i6_reg_476 = ap_const_lv3_1) and (i_0_i6_reg_464 = ap_const_lv3_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                p_kernel_val_V_1_1_s_fu_202 <= p_kernel_val_4_V_0_s_fu_924_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((j_0_i6_reg_476 = ap_const_lv3_2) and (i_0_i6_reg_464 = ap_const_lv3_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                p_kernel_val_V_1_2_s_fu_206 <= p_kernel_val_4_V_0_s_fu_924_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((j_0_i6_reg_476 = ap_const_lv3_3) and (i_0_i6_reg_464 = ap_const_lv3_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                p_kernel_val_V_1_3_s_fu_210 <= p_kernel_val_4_V_0_s_fu_924_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((j_0_i6_reg_476 = ap_const_lv3_3)) and not((j_0_i6_reg_476 = ap_const_lv3_2)) and not((j_0_i6_reg_476 = ap_const_lv3_1)) and not((j_0_i6_reg_476 = ap_const_lv3_0)) and (i_0_i6_reg_464 = ap_const_lv3_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                p_kernel_val_V_1_4_s_fu_214 <= p_kernel_val_4_V_0_s_fu_924_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((j_0_i6_reg_476 = ap_const_lv3_0) and (i_0_i6_reg_464 = ap_const_lv3_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                p_kernel_val_V_2_0_s_fu_218 <= p_kernel_val_4_V_0_s_fu_924_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((j_0_i6_reg_476 = ap_const_lv3_1) and (i_0_i6_reg_464 = ap_const_lv3_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                p_kernel_val_V_2_1_s_fu_222 <= p_kernel_val_4_V_0_s_fu_924_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((j_0_i6_reg_476 = ap_const_lv3_2) and (i_0_i6_reg_464 = ap_const_lv3_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                p_kernel_val_V_2_2_s_fu_226 <= p_kernel_val_4_V_0_s_fu_924_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((j_0_i6_reg_476 = ap_const_lv3_3) and (i_0_i6_reg_464 = ap_const_lv3_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                p_kernel_val_V_2_3_s_fu_230 <= p_kernel_val_4_V_0_s_fu_924_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((j_0_i6_reg_476 = ap_const_lv3_3)) and not((j_0_i6_reg_476 = ap_const_lv3_2)) and not((j_0_i6_reg_476 = ap_const_lv3_1)) and not((j_0_i6_reg_476 = ap_const_lv3_0)) and (i_0_i6_reg_464 = ap_const_lv3_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                p_kernel_val_V_2_4_s_fu_234 <= p_kernel_val_4_V_0_s_fu_924_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((j_0_i6_reg_476 = ap_const_lv3_0) and (i_0_i6_reg_464 = ap_const_lv3_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                p_kernel_val_V_3_0_s_fu_238 <= p_kernel_val_4_V_0_s_fu_924_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((j_0_i6_reg_476 = ap_const_lv3_1) and (i_0_i6_reg_464 = ap_const_lv3_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                p_kernel_val_V_3_1_s_fu_242 <= p_kernel_val_4_V_0_s_fu_924_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((j_0_i6_reg_476 = ap_const_lv3_2) and (i_0_i6_reg_464 = ap_const_lv3_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                p_kernel_val_V_3_2_s_fu_246 <= p_kernel_val_4_V_0_s_fu_924_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((j_0_i6_reg_476 = ap_const_lv3_3) and (i_0_i6_reg_464 = ap_const_lv3_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                p_kernel_val_V_3_3_s_fu_250 <= p_kernel_val_4_V_0_s_fu_924_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((j_0_i6_reg_476 = ap_const_lv3_3)) and not((j_0_i6_reg_476 = ap_const_lv3_2)) and not((j_0_i6_reg_476 = ap_const_lv3_1)) and not((j_0_i6_reg_476 = ap_const_lv3_0)) and (i_0_i6_reg_464 = ap_const_lv3_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                p_kernel_val_V_3_4_s_fu_254 <= p_kernel_val_4_V_0_s_fu_924_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((i_0_i6_reg_464 = ap_const_lv3_3)) and not((i_0_i6_reg_464 = ap_const_lv3_2)) and not((i_0_i6_reg_464 = ap_const_lv3_1)) and not((i_0_i6_reg_464 = ap_const_lv3_0)) and (j_0_i6_reg_476 = ap_const_lv3_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                p_kernel_val_V_4_0_s_fu_258 <= p_kernel_val_4_V_0_s_fu_924_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((i_0_i6_reg_464 = ap_const_lv3_3)) and not((i_0_i6_reg_464 = ap_const_lv3_2)) and not((i_0_i6_reg_464 = ap_const_lv3_1)) and not((i_0_i6_reg_464 = ap_const_lv3_0)) and (j_0_i6_reg_476 = ap_const_lv3_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                p_kernel_val_V_4_1_s_fu_262 <= p_kernel_val_4_V_0_s_fu_924_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((i_0_i6_reg_464 = ap_const_lv3_3)) and not((i_0_i6_reg_464 = ap_const_lv3_2)) and not((i_0_i6_reg_464 = ap_const_lv3_1)) and not((i_0_i6_reg_464 = ap_const_lv3_0)) and (j_0_i6_reg_476 = ap_const_lv3_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                p_kernel_val_V_4_2_s_fu_266 <= p_kernel_val_4_V_0_s_fu_924_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((i_0_i6_reg_464 = ap_const_lv3_3)) and not((i_0_i6_reg_464 = ap_const_lv3_2)) and not((i_0_i6_reg_464 = ap_const_lv3_1)) and not((i_0_i6_reg_464 = ap_const_lv3_0)) and (j_0_i6_reg_476 = ap_const_lv3_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                p_kernel_val_V_4_3_s_fu_270 <= p_kernel_val_4_V_0_s_fu_924_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((i_0_i6_reg_464 = ap_const_lv3_3)) and not((i_0_i6_reg_464 = ap_const_lv3_2)) and not((i_0_i6_reg_464 = ap_const_lv3_1)) and not((j_0_i6_reg_476 = ap_const_lv3_3)) and not((j_0_i6_reg_476 = ap_const_lv3_2)) and not((j_0_i6_reg_476 = ap_const_lv3_1)) and not((j_0_i6_reg_476 = ap_const_lv3_0)) and not((i_0_i6_reg_464 = ap_const_lv3_0)) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                p_kernel_val_V_4_4_s_fu_274 <= p_kernel_val_4_V_0_s_fu_924_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (exitcond_i_fu_1095_p2 = ap_const_lv1_0))) then
                p_output_val_V_addr_1_reg_2263 <= tmp_113_cast_fu_1116_p1(10 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (exitcond_i2_fu_1179_p2 = ap_const_lv1_0))) then
                p_output_val_V_addr_2_reg_2302 <= tmp_121_cast_fu_1200_p1(10 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state12) and (exitcond8_i_fu_1053_p2 = ap_const_lv1_0))) then
                    tmp_103_reg_2239(10 downto 3) <= tmp_103_fu_1089_p2(10 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state17) and (exitcond2_i_fu_1137_p2 = ap_const_lv1_0))) then
                    tmp_107_reg_2288(10 downto 3) <= tmp_107_fu_1173_p2(10 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state52) and (exitcond5_fu_1743_p2 = ap_const_lv1_0))) then
                    tmp_111_reg_2428(12 downto 3) <= tmp_111_fu_1784_p2(12 downto 3);
                    tmp_114_reg_2433(10 downto 3) <= tmp_114_fu_1814_p2(10 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                tmp_67_reg_2274 <= tmp_67_fu_1133_p1;
                tmp_70_reg_2269 <= tmp_70_fu_1129_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (exitcond_i2_reg_2293_pp3_iter10_reg = ap_const_lv1_0))) then
                tmp_88_reg_2364 <= tmp_88_fu_593_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (exitcond_i2_reg_2293_pp3_iter14_reg = ap_const_lv1_0))) then
                tmp_89_reg_2369 <= grp_fu_605_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (exitcond_i2_reg_2293_pp3_iter29_reg = ap_const_lv1_0))) then
                tmp_90_reg_2374 <= grp_fu_610_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond7_fu_627_p2 = ap_const_lv1_0))) then
                    tmp_96_reg_2027(10 downto 3) <= tmp_96_fu_663_p2(10 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (exitcond1_fu_757_p2 = ap_const_lv1_0))) then
                tmp_99_reg_2086 <= tmp_99_fu_793_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (exitcond_i2_reg_2293_pp3_iter9_reg = ap_const_lv1_0))) then
                tmp_i_i_reg_2359 <= grp_fu_600_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond7_fu_627_p2 = ap_const_lv1_1))) then
                    tmp_s_reg_2032(2 downto 0) <= tmp_s_fu_669_p1(2 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (exitcond_i2_reg_2293_pp3_iter4_reg = ap_const_lv1_0))) then
                x_assign_reg_2354 <= x_assign_fu_1469_p3;
            end if;
        end if;
    end process;
    tmp_96_reg_2027(2 downto 0) <= "000";
    tmp_s_reg_2032(63 downto 3) <= "0000000000000000000000000000000000000000000000000000000000000";
    tmp_98_cast_reg_2062(2 downto 0) <= "000";
    tmp_103_reg_2239(2 downto 0) <= "000";
    tmp_107_reg_2288(2 downto 0) <= "000";
    p_Val2_40_cast_reg_2323(32) <= '0';
    tmp_111_reg_2428(2 downto 0) <= "000";
    tmp_114_reg_2433(2 downto 0) <= "000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, exitcond7_fu_627_p2, ap_CS_fsm_state3, ap_CS_fsm_state4, exitcond1_fu_757_p2, ap_CS_fsm_state7, exitcond_fu_899_p2, ap_enable_reg_pp1_iter0, exitcond8_i_fu_1053_p2, ap_CS_fsm_state12, exitcond_i_fu_1095_p2, ap_enable_reg_pp2_iter0, exitcond2_i_fu_1137_p2, ap_CS_fsm_state17, exitcond_i2_fu_1179_p2, ap_enable_reg_pp3_iter0, exitcond5_fu_1743_p2, ap_CS_fsm_state52, exitcond4_fu_1820_p2, ap_enable_reg_pp4_iter0, ap_block_pp1_stage0_subdone, ap_block_pp2_stage0_subdone, ap_block_pp3_stage0_subdone, ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter31, ap_enable_reg_pp3_iter32, ap_block_pp4_stage0_subdone, grp_Conv8_fu_555_ap_done, exitcond3_fu_615_p2, exitcond6_fu_675_p2, ap_CS_fsm_state11)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond3_fu_615_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond7_fu_627_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (exitcond6_fu_675_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and (exitcond1_fu_757_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_pp1_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (exitcond_fu_899_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (exitcond_fu_899_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state11 => 
                if (((grp_Conv8_fu_555_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state12) and (exitcond8_i_fu_1053_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_pp2_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (exitcond_i_fu_1095_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (exitcond_i_fu_1095_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state17) and (exitcond2_i_fu_1137_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state52;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                end if;
            when ap_ST_fsm_pp3_stage0 => 
                if ((not(((ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (exitcond_i2_fu_1179_p2 = ap_const_lv1_1))) and not(((ap_enable_reg_pp3_iter31 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_enable_reg_pp3_iter32 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                elsif ((((ap_enable_reg_pp3_iter31 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_enable_reg_pp3_iter32 = ap_const_logic_1)) or ((ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (exitcond_i2_fu_1179_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state51;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                end if;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state52 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state52) and (exitcond5_fu_1743_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage0;
                end if;
            when ap_ST_fsm_pp4_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp4_stage0_subdone) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (exitcond4_fu_1820_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp4_stage0_subdone) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (exitcond4_fu_1820_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state55;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage0;
                end if;
            when ap_ST_fsm_state55 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    F2_fu_1516_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(tmp_91_fu_1502_p1));
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(7);
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(11);
    ap_CS_fsm_pp3_stage0 <= ap_CS_fsm(15);
    ap_CS_fsm_pp4_stage0 <= ap_CS_fsm(18);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(8);
    ap_CS_fsm_state11 <= ap_CS_fsm(9);
    ap_CS_fsm_state12 <= ap_CS_fsm(10);
    ap_CS_fsm_state15 <= ap_CS_fsm(12);
    ap_CS_fsm_state16 <= ap_CS_fsm(13);
    ap_CS_fsm_state17 <= ap_CS_fsm(14);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state51 <= ap_CS_fsm(16);
    ap_CS_fsm_state52 <= ap_CS_fsm(17);
    ap_CS_fsm_state55 <= ap_CS_fsm(19);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp2_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp2_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp3_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp3_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp3_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp3_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp3_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp3_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp3_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp3_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp3_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp3_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp3_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp3_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp3_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp3_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp3_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp3_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp3_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp3_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp3_stage0_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp3_stage0_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp3_stage0_iter20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp3_stage0_iter21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state40_pp3_stage0_iter22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp3_stage0_iter23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state42_pp3_stage0_iter24 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state43_pp3_stage0_iter25 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state44_pp3_stage0_iter26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state45_pp3_stage0_iter27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state46_pp3_stage0_iter28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state47_pp3_stage0_iter29 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state48_pp3_stage0_iter30 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state49_pp3_stage0_iter31 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state50_pp3_stage0_iter32 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state53_pp4_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state54_pp4_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp1_exit_iter0_state8_assign_proc : process(exitcond_fu_899_p2)
    begin
        if ((exitcond_fu_899_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state8 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state8 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp2_exit_iter0_state13_assign_proc : process(exitcond_i_fu_1095_p2)
    begin
        if ((exitcond_i_fu_1095_p2 = ap_const_lv1_1)) then 
            ap_condition_pp2_exit_iter0_state13 <= ap_const_logic_1;
        else 
            ap_condition_pp2_exit_iter0_state13 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp3_exit_iter0_state18_assign_proc : process(exitcond_i2_fu_1179_p2)
    begin
        if ((exitcond_i2_fu_1179_p2 = ap_const_lv1_1)) then 
            ap_condition_pp3_exit_iter0_state18 <= ap_const_logic_1;
        else 
            ap_condition_pp3_exit_iter0_state18 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp4_exit_iter0_state53_assign_proc : process(exitcond4_fu_1820_p2)
    begin
        if ((exitcond4_fu_1820_p2 = ap_const_lv1_1)) then 
            ap_condition_pp4_exit_iter0_state53 <= ap_const_logic_1;
        else 
            ap_condition_pp4_exit_iter0_state53 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, exitcond3_fu_615_p2)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond3_fu_615_p2 = ap_const_lv1_1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);
    ap_enable_pp2 <= (ap_idle_pp2 xor ap_const_logic_1);
    ap_enable_pp3 <= (ap_idle_pp3 xor ap_const_logic_1);
    ap_enable_pp4 <= (ap_idle_pp4 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp2_assign_proc : process(ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_0))) then 
            ap_idle_pp2 <= ap_const_logic_1;
        else 
            ap_idle_pp2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp3_assign_proc : process(ap_enable_reg_pp3_iter0, ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter2, ap_enable_reg_pp3_iter3, ap_enable_reg_pp3_iter4, ap_enable_reg_pp3_iter5, ap_enable_reg_pp3_iter6, ap_enable_reg_pp3_iter7, ap_enable_reg_pp3_iter8, ap_enable_reg_pp3_iter9, ap_enable_reg_pp3_iter10, ap_enable_reg_pp3_iter11, ap_enable_reg_pp3_iter12, ap_enable_reg_pp3_iter13, ap_enable_reg_pp3_iter14, ap_enable_reg_pp3_iter15, ap_enable_reg_pp3_iter16, ap_enable_reg_pp3_iter17, ap_enable_reg_pp3_iter18, ap_enable_reg_pp3_iter19, ap_enable_reg_pp3_iter20, ap_enable_reg_pp3_iter21, ap_enable_reg_pp3_iter22, ap_enable_reg_pp3_iter23, ap_enable_reg_pp3_iter24, ap_enable_reg_pp3_iter25, ap_enable_reg_pp3_iter26, ap_enable_reg_pp3_iter27, ap_enable_reg_pp3_iter28, ap_enable_reg_pp3_iter29, ap_enable_reg_pp3_iter30, ap_enable_reg_pp3_iter31, ap_enable_reg_pp3_iter32)
    begin
        if (((ap_enable_reg_pp3_iter32 = ap_const_logic_0) and (ap_enable_reg_pp3_iter31 = ap_const_logic_0) and (ap_enable_reg_pp3_iter30 = ap_const_logic_0) and (ap_enable_reg_pp3_iter29 = ap_const_logic_0) and (ap_enable_reg_pp3_iter28 = ap_const_logic_0) and (ap_enable_reg_pp3_iter27 = ap_const_logic_0) and (ap_enable_reg_pp3_iter26 = ap_const_logic_0) and (ap_enable_reg_pp3_iter25 = ap_const_logic_0) and (ap_enable_reg_pp3_iter24 = ap_const_logic_0) and (ap_enable_reg_pp3_iter23 = ap_const_logic_0) and (ap_enable_reg_pp3_iter22 = ap_const_logic_0) and (ap_enable_reg_pp3_iter21 = ap_const_logic_0) and (ap_enable_reg_pp3_iter20 = ap_const_logic_0) and (ap_enable_reg_pp3_iter19 = ap_const_logic_0) and (ap_enable_reg_pp3_iter18 = ap_const_logic_0) and (ap_enable_reg_pp3_iter17 = ap_const_logic_0) and (ap_enable_reg_pp3_iter16 = ap_const_logic_0) and (ap_enable_reg_pp3_iter15 = ap_const_logic_0) and (ap_enable_reg_pp3_iter14 = ap_const_logic_0) and (ap_enable_reg_pp3_iter13 = ap_const_logic_0) and (ap_enable_reg_pp3_iter12 = ap_const_logic_0) and (ap_enable_reg_pp3_iter11 = ap_const_logic_0) and (ap_enable_reg_pp3_iter10 = ap_const_logic_0) and (ap_enable_reg_pp3_iter9 = ap_const_logic_0) and (ap_enable_reg_pp3_iter8 = ap_const_logic_0) and (ap_enable_reg_pp3_iter7 = ap_const_logic_0) and (ap_enable_reg_pp3_iter6 = ap_const_logic_0) and (ap_enable_reg_pp3_iter5 = ap_const_logic_0) and (ap_enable_reg_pp3_iter4 = ap_const_logic_0) and (ap_enable_reg_pp3_iter3 = ap_const_logic_0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_0))) then 
            ap_idle_pp3 <= ap_const_logic_1;
        else 
            ap_idle_pp3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp4_assign_proc : process(ap_enable_reg_pp4_iter0, ap_enable_reg_pp4_iter1)
    begin
        if (((ap_enable_reg_pp4_iter1 = ap_const_logic_0) and (ap_enable_reg_pp4_iter0 = ap_const_logic_0))) then 
            ap_idle_pp4 <= ap_const_logic_1;
        else 
            ap_idle_pp4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_j_0_i6_phi_fu_480_p4_assign_proc : process(j_0_i6_reg_476, exitcond_reg_2216, ap_CS_fsm_pp1_stage0, j_1_reg_2220, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond_reg_2216 = ap_const_lv1_0))) then 
            ap_phi_mux_j_0_i6_phi_fu_480_p4 <= j_1_reg_2220;
        else 
            ap_phi_mux_j_0_i6_phi_fu_480_p4 <= j_0_i6_reg_476;
        end if; 
    end process;


    ap_phi_mux_j_0_i7_phi_fu_547_p4_assign_proc : process(j_0_i7_reg_543, exitcond4_reg_2438, ap_CS_fsm_pp4_stage0, j_2_reg_2442, ap_enable_reg_pp4_iter1, ap_block_pp4_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (exitcond4_reg_2438 = ap_const_lv1_0))) then 
            ap_phi_mux_j_0_i7_phi_fu_547_p4 <= j_2_reg_2442;
        else 
            ap_phi_mux_j_0_i7_phi_fu_547_p4 <= j_0_i7_reg_543;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, exitcond3_fu_615_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond3_fu_615_p2 = ap_const_lv1_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    convlayer1_b_V_address0 <= tmp_s_reg_2032(3 - 1 downto 0);

    convlayer1_b_V_ce0_assign_proc : process(ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            convlayer1_b_V_ce0 <= ap_const_logic_1;
        else 
            convlayer1_b_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    convlayer1_k_cols_address0 <= tmp_s_fu_669_p1(3 - 1 downto 0);

    convlayer1_k_cols_ce0_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            convlayer1_k_cols_ce0 <= ap_const_logic_1;
        else 
            convlayer1_k_cols_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    convlayer1_k_rows_address0 <= tmp_s_fu_669_p1(3 - 1 downto 0);

    convlayer1_k_rows_ce0_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            convlayer1_k_rows_ce0 <= ap_const_logic_1;
        else 
            convlayer1_k_rows_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    convlayer1_k_val_V_address0 <= tmp_109_cast_fu_919_p1(8 - 1 downto 0);

    convlayer1_k_val_V_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            convlayer1_k_val_V_ce0 <= ap_const_logic_1;
        else 
            convlayer1_k_val_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    convlayer_output_cols_address0 <= tmp_s_reg_2032(3 - 1 downto 0);

    convlayer_output_cols_ce0_assign_proc : process(ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            convlayer_output_cols_ce0 <= ap_const_logic_1;
        else 
            convlayer_output_cols_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    convlayer_output_cols_d0 <= ap_const_lv6_18;

    convlayer_output_cols_we0_assign_proc : process(exitcond2_i_fu_1137_p2, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) and (exitcond2_i_fu_1137_p2 = ap_const_lv1_1))) then 
            convlayer_output_cols_we0 <= ap_const_logic_1;
        else 
            convlayer_output_cols_we0 <= ap_const_logic_0;
        end if; 
    end process;

    convlayer_output_rows_address0 <= tmp_s_reg_2032(3 - 1 downto 0);

    convlayer_output_rows_ce0_assign_proc : process(ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            convlayer_output_rows_ce0 <= ap_const_logic_1;
        else 
            convlayer_output_rows_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    convlayer_output_rows_d0 <= ap_const_lv6_18;

    convlayer_output_rows_we0_assign_proc : process(exitcond2_i_fu_1137_p2, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) and (exitcond2_i_fu_1137_p2 = ap_const_lv1_1))) then 
            convlayer_output_rows_we0 <= ap_const_logic_1;
        else 
            convlayer_output_rows_we0 <= ap_const_logic_0;
        end if; 
    end process;

    convlayer_output_val_V_address0 <= tmp_135_cast_fu_1855_p1(12 - 1 downto 0);

    convlayer_output_val_V_ce0_assign_proc : process(ap_CS_fsm_pp4_stage0, ap_block_pp4_stage0_11001, ap_enable_reg_pp4_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then 
            convlayer_output_val_V_ce0 <= ap_const_logic_1;
        else 
            convlayer_output_val_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    convlayer_output_val_V_d0 <= p_output_val_V_q1;

    convlayer_output_val_V_we0_assign_proc : process(exitcond4_reg_2438, ap_CS_fsm_pp4_stage0, ap_block_pp4_stage0_11001, ap_enable_reg_pp4_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (exitcond4_reg_2438 = ap_const_lv1_0))) then 
            convlayer_output_val_V_we0 <= ap_const_logic_1;
        else 
            convlayer_output_val_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond1_fu_757_p2 <= "1" when (i_0_i6_reg_464 = convlayer1_k_rows_lo_reg_2067) else "0";
    exitcond2_i_fu_1137_p2 <= "1" when (i_0_i5_reg_510 = ap_const_lv5_18) else "0";
    exitcond3_fu_615_p2 <= "1" when (i_reg_430 = ap_const_lv3_6) else "0";
    exitcond4_fu_1820_p2 <= "1" when (ap_phi_mux_j_0_i7_phi_fu_547_p4 = ap_const_lv5_18) else "0";
    exitcond5_fu_1743_p2 <= "1" when (i_0_i7_reg_532 = ap_const_lv5_18) else "0";
    exitcond6_fu_675_p2 <= "1" when (j_0_i_reg_453 = ap_const_lv5_18) else "0";
    exitcond7_fu_627_p2 <= "1" when (i_0_i_reg_442 = ap_const_lv5_18) else "0";
    exitcond8_i_fu_1053_p2 <= "1" when (i_0_i8_reg_488 = ap_const_lv5_18) else "0";
    exitcond_fu_899_p2 <= "1" when (ap_phi_mux_j_0_i6_phi_fu_480_p4 = convlayer1_k_cols_lo_reg_2072) else "0";
    exitcond_i2_fu_1179_p2 <= "1" when (j_0_i5_reg_521 = ap_const_lv5_18) else "0";
    exitcond_i_fu_1095_p2 <= "1" when (j_0_i8_reg_499 = ap_const_lv5_18) else "0";
    exp_tmp_V_fu_1492_p4 <= ireg_V_fu_1476_p1(62 downto 52);
    grp_Conv8_fu_555_ap_start <= grp_Conv8_fu_555_ap_start_reg;
    i_1_fu_1059_p2 <= std_logic_vector(unsigned(i_0_i8_reg_488) + unsigned(ap_const_lv5_1));
    i_2_fu_621_p2 <= std_logic_vector(unsigned(i_reg_430) + unsigned(ap_const_lv3_1));
    i_3_fu_1143_p2 <= std_logic_vector(unsigned(i_0_i5_reg_510) + unsigned(ap_const_lv5_1));
    i_4_fu_1749_p2 <= std_logic_vector(unsigned(i_0_i7_reg_532) + unsigned(ap_const_lv5_1));
    i_5_fu_633_p2 <= std_logic_vector(unsigned(i_0_i_reg_442) + unsigned(ap_const_lv5_1));
    i_s_fu_762_p2 <= std_logic_vector(unsigned(i_0_i6_reg_464) + unsigned(ap_const_lv3_1));
    icmp6_fu_1599_p2 <= "1" when (tmp_147_fu_1589_p4 = ap_const_lv7_0) else "0";
    icmp_fu_1316_p2 <= "1" when (tmp_120_fu_1306_p4 = ap_const_lv26_0) else "0";
    input_0_val_V_address0 <= grp_Conv8_fu_555_src_0_val_V_address0;
    input_0_val_V_ce0 <= grp_Conv8_fu_555_src_0_val_V_ce0;
    ireg_V_fu_1476_p1 <= d_assign_fu_596_p1;
    is_neg_fu_1225_p3 <= p_Val2_34_fu_1209_p2(32 downto 32);
    j_1_fu_904_p2 <= std_logic_vector(unsigned(ap_phi_mux_j_0_i6_phi_fu_480_p4) + unsigned(ap_const_lv3_1));
    j_2_fu_1826_p2 <= std_logic_vector(unsigned(ap_phi_mux_j_0_i7_phi_fu_547_p4) + unsigned(ap_const_lv5_1));
    j_3_fu_1185_p2 <= std_logic_vector(unsigned(j_0_i5_reg_521) + unsigned(ap_const_lv5_1));
    j_fu_681_p2 <= std_logic_vector(unsigned(j_0_i_reg_453) + unsigned(ap_const_lv5_1));
    j_s_fu_1101_p2 <= std_logic_vector(unsigned(j_0_i8_reg_499) + unsigned(ap_const_lv5_1));
    man_V_1_fu_1557_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(p_Result_4_fu_1553_p1));
    man_V_2_fu_1563_p3 <= 
        man_V_1_fu_1557_p2 when (isneg_reg_2379(0) = '1') else 
        p_Result_4_fu_1553_p1;
    msb_idx_1_fu_1298_p3 <= 
        ap_const_lv31_0 when (tmp_119_fu_1290_p3(0) = '1') else 
        tmp_118_fu_1286_p1;
    msb_idx_fu_1281_p2 <= std_logic_vector(unsigned(ap_const_lv32_20) - unsigned(num_zeros_reg_2329));
    newSel4_fu_1706_p3 <= 
        tmp_148_fu_1615_p1 when (sel_tmp8_fu_1657_p2(0) = '1') else 
        tmp_146_fu_1579_p1;
    newSel5_fu_1720_p3 <= 
        newSel_fu_1692_p3 when (or_cond_fu_1700_p2(0) = '1') else 
        newSel4_fu_1706_p3;
    newSel6_fu_1734_p3 <= 
        newSel5_fu_1720_p3 when (or_cond4_fu_1728_p2(0) = '1') else 
        ap_const_lv32_0;
    newSel_fu_1692_p3 <= 
        tmp_129_fu_1626_p2 when (sel_tmp4_fu_1686_p2(0) = '1') else 
        this_assign_fu_1619_p3;
    num_zeros_fu_1277_p1 <= tmp_80_fu_1269_p3(32 - 1 downto 0);
    or_cond3_fu_1714_p2 <= (sel_tmp8_fu_1657_p2 or sel_tmp2_fu_1637_p2);
    or_cond4_fu_1728_p2 <= (or_cond_fu_1700_p2 or or_cond3_fu_1714_p2);
    or_cond_fu_1700_p2 <= (sel_tmp9_fu_1669_p2 or sel_tmp4_fu_1686_p2);
    p_Repl2_3_trunc_fu_1435_p2 <= std_logic_vector(unsigned(tmp_142_fu_1424_p1) + unsigned(tmp24_cast_cast_fu_1427_p3));
    p_Result_12_op_fu_1459_p2 <= (p_Result_3_fu_1448_p5 xor ap_const_lv32_80000000);
    p_Result_2_fu_1261_p3 <= (ap_const_lv31_7FFFFFFF & p_Result_s_fu_1251_p4);
    p_Result_3_fu_1448_p5 <= (tmp_87_fu_1441_p3 & tmp32_V_8_reg_2344(22 downto 0));
    p_Result_4_fu_1553_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_92_fu_1546_p3),54));
    
    p_Result_s_fu_1251_p4_proc : process(p_Val2_40_cast_fu_1247_p1)
    variable vlo_cpy : STD_LOGIC_VECTOR(33+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(33+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(33 - 1 downto 0);
    variable p_Result_s_fu_1251_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(33 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(33 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(33 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_20(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := p_Val2_40_cast_fu_1247_p1;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(33-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(33-1-unsigned(ap_const_lv32_20(6-1 downto 0)));
            for p_Result_s_fu_1251_p4_i in 0 to 33-1 loop
                v0_cpy(p_Result_s_fu_1251_p4_i) := p_Val2_40_cast_fu_1247_p1(33-1-p_Result_s_fu_1251_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(33-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_s_fu_1251_p4 <= resvalue(33-1 downto 0);
    end process;

    p_Val2_34_fu_1209_p2 <= std_logic_vector(signed(tmp_70_reg_2269) + signed(tmp_78_fu_1205_p1));
    p_Val2_38_cast_fu_1214_p1 <= p_output_val_V_q1;
    p_Val2_38_cast_fu_1214_p2 <= std_logic_vector(signed(tmp_67_reg_2274) + signed(p_Val2_38_cast_fu_1214_p1));
    p_Val2_38_fu_1239_p3 <= 
        tmp_176_cast_fu_1233_p2 when (is_neg_fu_1225_p3(0) = '1') else 
        p_Val2_38_cast_fu_1214_p2;
    p_Val2_40_cast_fu_1247_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_38_fu_1239_p3),33));
        p_kernel_val_4_V_0_s_fu_924_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(convlayer1_k_val_V_q0),32));


    p_output_val_V_address0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, p_output_val_V_addr_2_reg_2302_pp3_iter31_reg, ap_enable_reg_pp3_iter32, tmp_105_cast_fu_696_p1, tmp_113_cast_fu_1116_p1, ap_block_pp2_stage0, ap_block_pp3_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter32 = ap_const_logic_1))) then 
            p_output_val_V_address0 <= p_output_val_V_addr_2_reg_2302_pp3_iter31_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            p_output_val_V_address0 <= tmp_113_cast_fu_1116_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            p_output_val_V_address0 <= tmp_105_cast_fu_696_p1(10 - 1 downto 0);
        else 
            p_output_val_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    p_output_val_V_address1_assign_proc : process(ap_CS_fsm_pp2_stage0, p_output_val_V_addr_1_reg_2263, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, ap_CS_fsm_pp4_stage0, ap_enable_reg_pp4_iter0, ap_enable_reg_pp2_iter1, ap_block_pp4_stage0, ap_block_pp2_stage0, tmp_121_cast_fu_1200_p1, ap_block_pp3_stage0, tmp_136_cast_fu_1841_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp4_stage0) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then 
            p_output_val_V_address1 <= tmp_136_cast_fu_1841_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            p_output_val_V_address1 <= tmp_121_cast_fu_1200_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            p_output_val_V_address1 <= p_output_val_V_addr_1_reg_2263;
        else 
            p_output_val_V_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    p_output_val_V_ce0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter0, ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter32)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter32 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)))) then 
            p_output_val_V_ce0 <= ap_const_logic_1;
        else 
            p_output_val_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_output_val_V_ce1_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter0, ap_CS_fsm_pp4_stage0, ap_block_pp4_stage0_11001, ap_enable_reg_pp4_iter0, ap_enable_reg_pp2_iter1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0)) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)))) then 
            p_output_val_V_ce1 <= ap_const_logic_1;
        else 
            p_output_val_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    p_output_val_V_d0_assign_proc : process(ap_CS_fsm_state4, ap_enable_reg_pp3_iter32, ap_block_pp3_stage0, newSel6_fu_1734_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter32 = ap_const_logic_1))) then 
            p_output_val_V_d0 <= newSel6_fu_1734_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            p_output_val_V_d0 <= ap_const_lv32_0;
        else 
            p_output_val_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    p_output_val_V_d1 <= std_logic_vector(unsigned(p_temp_val_V_q0) + unsigned(p_output_val_V_q0));

    p_output_val_V_we0_assign_proc : process(ap_CS_fsm_state4, ap_block_pp3_stage0_11001, exitcond_i2_reg_2293_pp3_iter31_reg, ap_enable_reg_pp3_iter32, exitcond6_fu_675_p2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter32 = ap_const_logic_1) and (exitcond_i2_reg_2293_pp3_iter31_reg = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (exitcond6_fu_675_p2 = ap_const_lv1_0)))) then 
            p_output_val_V_we0 <= ap_const_logic_1;
        else 
            p_output_val_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p_output_val_V_we1_assign_proc : process(exitcond_i_reg_2249, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (exitcond_i_reg_2249 = ap_const_lv1_0))) then 
            p_output_val_V_we1 <= ap_const_logic_1;
        else 
            p_output_val_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    p_shl10_cast_fu_1798_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_112_fu_1790_p3),11));
    p_shl11_cast_fu_1810_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_113_fu_1802_p3),11));
    p_shl12_cast_fu_1768_p3 <= (tmp_110_fu_1764_p1 & ap_const_lv5_0);
    p_shl13_cast_fu_1776_p3 <= (tmp_109_fu_1759_p2 & ap_const_lv3_0);
    p_shl1_cast_fu_659_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_95_fu_651_p3),11));
    p_shl2_cast_fu_731_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_82_fu_723_p3),9));
    p_shl3_cast_fu_743_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_84_fu_735_p3),9));
    p_shl4_cast_fu_713_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_77_fu_705_p3),6));
    p_shl5_cast_fu_789_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_98_fu_781_p3),9));
    p_shl6_cast_fu_1073_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_101_fu_1065_p3),11));
    p_shl7_cast_fu_1085_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_102_fu_1077_p3),11));
    p_shl8_cast_fu_1157_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_105_fu_1149_p3),11));
    p_shl9_cast_fu_1169_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_106_fu_1161_p3),11));
    p_shl_cast_fu_647_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_94_fu_639_p3),11));

    p_temp_val_V_address0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, grp_Conv8_fu_555_dst_val_V_address0, ap_CS_fsm_state11, tmp_113_cast_fu_1116_p1, ap_block_pp2_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            p_temp_val_V_address0 <= tmp_113_cast_fu_1116_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            p_temp_val_V_address0 <= grp_Conv8_fu_555_dst_val_V_address0;
        else 
            p_temp_val_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    p_temp_val_V_ce0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter0, grp_Conv8_fu_555_dst_val_V_ce0, ap_CS_fsm_state11)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            p_temp_val_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            p_temp_val_V_ce0 <= grp_Conv8_fu_555_dst_val_V_ce0;
        else 
            p_temp_val_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_temp_val_V_we0_assign_proc : process(grp_Conv8_fu_555_dst_val_V_we0, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            p_temp_val_V_we0 <= grp_Conv8_fu_555_dst_val_V_we0;
        else 
            p_temp_val_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    sel_tmp1_fu_1632_p2 <= (tmp_93_reg_2390 xor ap_const_lv1_1);
    sel_tmp21_demorgan_fu_1675_p2 <= (tmp_116_reg_2396 or sel_tmp6_demorgan_fu_1642_p2);
    sel_tmp2_fu_1637_p2 <= (tmp_123_reg_2413 and sel_tmp1_fu_1632_p2);
    sel_tmp3_fu_1680_p2 <= (sel_tmp21_demorgan_fu_1675_p2 xor ap_const_lv1_1);
    sel_tmp4_fu_1686_p2 <= (sel_tmp3_fu_1680_p2 and icmp6_fu_1599_p2);
    sel_tmp6_demorgan_fu_1642_p2 <= (tmp_93_reg_2390 or tmp_123_reg_2413);
    sel_tmp6_fu_1646_p2 <= (sel_tmp6_demorgan_fu_1642_p2 xor ap_const_lv1_1);
    sel_tmp7_fu_1652_p2 <= (tmp_116_reg_2396 and sel_tmp6_fu_1646_p2);
    sel_tmp8_fu_1657_p2 <= (tmp_124_fu_1583_p2 and sel_tmp7_fu_1652_p2);
    sel_tmp9_fu_1669_p2 <= (sel_tmp_fu_1663_p2 and sel_tmp7_fu_1652_p2);
    sel_tmp_fu_1663_p2 <= (tmp_124_fu_1583_p2 xor ap_const_lv1_1);
        sh_amt_cast_fu_1575_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_fu_1570_p3),32));

    sh_amt_fu_1570_p3 <= 
        tmp_117_reg_2403 when (tmp_116_reg_2396(0) = '1') else 
        tmp_122_reg_2408;
    this_assign_fu_1619_p3 <= 
        ap_const_lv32_FFFFFFFF when (isneg_reg_2379(0) = '1') else 
        ap_const_lv32_0;
    tmp24_cast_cast_fu_1427_p3 <= 
        ap_const_lv8_70 when (tmp_85_fu_1419_p2(0) = '1') else 
        ap_const_lv8_6F;
    tmp32_V_4_fu_1332_p2 <= std_logic_vector(shift_left(unsigned(p_Val2_38_reg_2318),to_integer(unsigned('0' & tmp_181_cast_fu_1328_p1(31-1 downto 0)))));
    tmp32_V_5_fu_1397_p3 <= 
        tmp32_V_4_fu_1332_p2 when (icmp_fu_1316_p2(0) = '1') else 
        tmp32_V_fu_1393_p1;
    tmp32_V_8_fu_1405_p1 <= grp_fu_587_p1;
    tmp32_V_fu_1393_p1 <= tmp_140_fu_1387_p2(32 - 1 downto 0);
    tmp_100_fu_691_p2 <= std_logic_vector(unsigned(tmp_96_reg_2027) + unsigned(tmp_69_cast_fu_687_p1));
    tmp_101_fu_1065_p3 <= (i_0_i8_reg_488 & ap_const_lv5_0);
    tmp_102_cast_fu_777_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_97_fu_772_p2),9));
    tmp_102_fu_1077_p3 <= (i_0_i8_reg_488 & ap_const_lv3_0);
    tmp_103_fu_1089_p2 <= std_logic_vector(unsigned(p_shl6_cast_fu_1073_p1) - unsigned(p_shl7_cast_fu_1085_p1));
    tmp_104_fu_914_p2 <= std_logic_vector(unsigned(tmp_99_reg_2086) + unsigned(tmp_72_cast_fu_910_p1));
        tmp_105_cast_fu_696_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_100_fu_691_p2),64));

    tmp_105_fu_1149_p3 <= (i_0_i5_reg_510 & ap_const_lv5_0);
    tmp_106_fu_1161_p3 <= (i_0_i5_reg_510 & ap_const_lv3_0);
    tmp_107_fu_1173_p2 <= std_logic_vector(unsigned(p_shl8_cast_fu_1157_p1) - unsigned(p_shl9_cast_fu_1169_p1));
    tmp_108_fu_1111_p2 <= std_logic_vector(unsigned(tmp_103_reg_2239) + unsigned(tmp_74_cast_fu_1107_p1));
    tmp_109_cast_fu_919_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_104_fu_914_p2),64));
    tmp_109_fu_1759_p2 <= std_logic_vector(unsigned(tmp_75_cast_fu_1755_p1) + unsigned(tmp_98_cast_reg_2062));
    tmp_110_fu_1764_p1 <= tmp_109_fu_1759_p2(8 - 1 downto 0);
    tmp_111_fu_1784_p2 <= std_logic_vector(unsigned(p_shl12_cast_fu_1768_p3) - unsigned(p_shl13_cast_fu_1776_p3));
    tmp_112_fu_1790_p3 <= (i_0_i7_reg_532 & ap_const_lv5_0);
        tmp_113_cast_fu_1116_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_108_fu_1111_p2),64));

    tmp_113_fu_1802_p3 <= (i_0_i7_reg_532 & ap_const_lv3_0);
    tmp_114_fu_1814_p2 <= std_logic_vector(unsigned(p_shl10_cast_fu_1798_p1) - unsigned(p_shl11_cast_fu_1810_p1));
    tmp_115_fu_1195_p2 <= std_logic_vector(unsigned(tmp_77_cast_fu_1191_p1) + unsigned(tmp_107_reg_2288));
    tmp_116_fu_1522_p2 <= "1" when (signed(F2_fu_1516_p2) > signed(ap_const_lv12_10)) else "0";
    tmp_117_fu_1528_p2 <= std_logic_vector(signed(ap_const_lv12_FF0) + signed(F2_fu_1516_p2));
    tmp_118_fu_1286_p1 <= msb_idx_fu_1281_p2(31 - 1 downto 0);
    tmp_119_fu_1290_p3 <= msb_idx_fu_1281_p2(31 downto 31);
    tmp_120_fu_1306_p4 <= msb_idx_1_fu_1298_p3(30 downto 5);
        tmp_121_cast_fu_1200_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_115_fu_1195_p2),64));

    tmp_121_fu_1337_p1 <= msb_idx_1_fu_1298_p3(6 - 1 downto 0);
    tmp_122_fu_1534_p2 <= std_logic_vector(unsigned(ap_const_lv12_10) - unsigned(F2_fu_1516_p2));
    tmp_123_fu_1540_p2 <= "1" when (F2_fu_1516_p2 = ap_const_lv12_10) else "0";
    tmp_124_fu_1583_p2 <= "1" when (unsigned(sh_amt_fu_1570_p3) < unsigned(ap_const_lv12_36)) else "0";
    tmp_125_fu_1605_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_amt_cast_fu_1575_p1),54));
    tmp_126_fu_1341_p2 <= "1" when (unsigned(msb_idx_1_fu_1298_p3) < unsigned(ap_const_lv31_1F)) else "0";
    tmp_127_fu_1609_p2 <= std_logic_vector(shift_right(signed(man_V_2_fu_1563_p3),to_integer(unsigned('0' & tmp_125_fu_1605_p1(31-1 downto 0)))));
    tmp_128_fu_1347_p2 <= std_logic_vector(signed(ap_const_lv6_21) + signed(tmp_121_fu_1337_p1));
    tmp_129_fu_1626_p2 <= std_logic_vector(shift_left(unsigned(tmp_146_fu_1579_p1),to_integer(unsigned('0' & sh_amt_cast_fu_1575_p1(31-1 downto 0)))));
    
    tmp_131_fu_1353_p4_proc : process(p_Val2_40_cast_reg_2323)
    variable vlo_cpy : STD_LOGIC_VECTOR(33+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(33+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(33 - 1 downto 0);
    variable tmp_131_fu_1353_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(33 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(33 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(33 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_20(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := p_Val2_40_cast_reg_2323;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(33-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(33-1-unsigned(ap_const_lv32_20(6-1 downto 0)));
            for tmp_131_fu_1353_p4_i in 0 to 33-1 loop
                v0_cpy(tmp_131_fu_1353_p4_i) := p_Val2_40_cast_reg_2323(33-1-tmp_131_fu_1353_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(33-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_131_fu_1353_p4 <= resvalue(33-1 downto 0);
    end process;

    tmp_132_fu_1850_p2 <= std_logic_vector(unsigned(tmp_111_reg_2428) + unsigned(tmp_134_cast_fu_1846_p1));
    tmp_133_fu_1836_p2 <= std_logic_vector(unsigned(tmp_114_reg_2433) + unsigned(tmp_134_cast1_fu_1832_p1));
    tmp_134_cast1_fu_1832_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_j_0_i7_phi_fu_547_p4),11));
    tmp_134_cast_fu_1846_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_0_i7_reg_543),13));
    tmp_134_fu_1362_p2 <= (tmp_121_fu_1337_p1 xor ap_const_lv6_3F);
    tmp_135_cast_fu_1855_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_132_fu_1850_p2),64));
        tmp_136_cast_fu_1841_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_133_fu_1836_p2),64));

    tmp_137_fu_1368_p3 <= 
        tmp_131_fu_1353_p4 when (tmp_126_fu_1341_p2(0) = '1') else 
        p_Val2_40_cast_reg_2323;
    tmp_138_fu_1375_p3 <= 
        tmp_134_fu_1362_p2 when (tmp_126_fu_1341_p2(0) = '1') else 
        tmp_128_fu_1347_p2;
    tmp_139_fu_1383_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_138_fu_1375_p3),33));
    tmp_140_fu_1387_p2 <= std_logic_vector(shift_right(unsigned(tmp_137_fu_1368_p3),to_integer(unsigned('0' & tmp_139_fu_1383_p1(31-1 downto 0)))));
    tmp_142_fu_1424_p1 <= msb_idx_reg_2334_pp3_iter4_reg(8 - 1 downto 0);
    tmp_143_fu_1480_p1 <= ireg_V_fu_1476_p1(63 - 1 downto 0);
    tmp_145_fu_1506_p1 <= ireg_V_fu_1476_p1(52 - 1 downto 0);
    tmp_146_fu_1579_p1 <= man_V_2_fu_1563_p3(32 - 1 downto 0);
    tmp_147_fu_1589_p4 <= sh_amt_fu_1570_p3(11 downto 5);
    tmp_148_fu_1615_p1 <= tmp_127_fu_1609_p2(32 - 1 downto 0);
    tmp_176_cast_fu_1233_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(p_Val2_38_cast_fu_1214_p2));
    tmp_181_cast_fu_1328_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_83_fu_1322_p2),32));
    tmp_66_cast_fu_768_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i6_reg_464),6));
    tmp_67_fu_1133_p0 <= convlayer1_b_V_q0;
        tmp_67_fu_1133_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_67_fu_1133_p0),32));

    tmp_68_fu_1465_p1 <= p_Result_12_op_fu_1459_p2;
    tmp_69_cast_fu_687_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_0_i_reg_453),11));
    tmp_70_fu_1129_p0 <= convlayer1_b_V_q0;
        tmp_70_fu_1129_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_70_fu_1129_p0),33));

    tmp_72_cast_fu_910_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_j_0_i6_phi_fu_480_p4),9));
    tmp_74_cast_fu_1107_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_0_i8_reg_499),11));
    tmp_75_cast_fu_1755_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i7_reg_532),10));
    tmp_77_cast_fu_1191_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_0_i5_reg_521),11));
    tmp_77_fu_705_p3 <= (i_reg_430 & ap_const_lv2_0);
    tmp_78_fu_1205_p0 <= p_output_val_V_q1;
        tmp_78_fu_1205_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_78_fu_1205_p0),33));

    tmp_79_fu_1219_p2 <= "1" when (p_Val2_34_fu_1209_p2 = ap_const_lv33_0) else "0";
    
    tmp_80_fu_1269_p3_proc : process(p_Result_2_fu_1261_p3)
    begin
        tmp_80_fu_1269_p3 <= std_logic_vector(to_unsigned(64, 64));
        for i in 0 to 64 - 1 loop
            if p_Result_2_fu_1261_p3(i) = '1' then
                tmp_80_fu_1269_p3 <= std_logic_vector(to_unsigned(i,64));
                exit;
            end if;
        end loop;
    end process;

    tmp_81_fu_717_p2 <= std_logic_vector(unsigned(tmp_cast_fu_701_p1) + unsigned(p_shl4_cast_fu_713_p1));
    tmp_82_fu_723_p3 <= (i_reg_430 & ap_const_lv5_0);
    tmp_83_fu_1322_p2 <= std_logic_vector(unsigned(ap_const_lv31_1F) - unsigned(msb_idx_1_fu_1298_p3));
    tmp_84_fu_735_p3 <= (i_reg_430 & ap_const_lv3_0);
    tmp_85_fu_1419_p2 <= "0" when (p_Result_s_197_reg_2349 = ap_const_lv8_9E) else "1";
    tmp_86_fu_747_p2 <= std_logic_vector(unsigned(p_shl2_cast_fu_731_p1) - unsigned(p_shl3_cast_fu_743_p1));
    tmp_87_fu_1441_p3 <= (is_neg_reg_2313_pp3_iter4_reg & p_Repl2_3_trunc_fu_1435_p2);
    tmp_91_fu_1502_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_V_fu_1492_p4),12));
    tmp_92_fu_1546_p3 <= (ap_const_lv1_1 & tmp_145_reg_2385);
    tmp_93_fu_1510_p2 <= "1" when (tmp_143_fu_1480_p1 = ap_const_lv63_0) else "0";
    tmp_94_fu_639_p3 <= (i_0_i_reg_442 & ap_const_lv5_0);
    tmp_95_fu_651_p3 <= (i_0_i_reg_442 & ap_const_lv3_0);
    tmp_96_fu_663_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_647_p1) - unsigned(p_shl1_cast_fu_659_p1));
    tmp_97_fu_772_p2 <= std_logic_vector(unsigned(tmp_66_cast_fu_768_p1) + unsigned(tmp_81_reg_2057));
        tmp_98_cast_fu_753_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_86_fu_747_p2),10));

    tmp_98_fu_781_p3 <= (tmp_97_fu_772_p2 & ap_const_lv2_0);
    tmp_99_fu_793_p2 <= std_logic_vector(unsigned(p_shl5_cast_fu_789_p1) + unsigned(tmp_102_cast_fu_777_p1));
    tmp_cast_fu_701_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_reg_430),6));
    tmp_s_fu_669_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_reg_430),64));
    x_assign_fu_1469_p3 <= 
        ap_const_lv32_80000000 when (tmp_79_reg_2308_pp3_iter4_reg(0) = '1') else 
        tmp_68_fu_1465_p1;
end behav;
