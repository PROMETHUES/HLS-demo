// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module ConvLayer (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_val_V_address0,
        input_val_V_ce0,
        input_val_V_q0,
        convlayer_output_val_V_address0,
        convlayer_output_val_V_ce0,
        convlayer_output_val_V_we0,
        convlayer_output_val_V_d0,
        convlayer_output_rows_address0,
        convlayer_output_rows_ce0,
        convlayer_output_rows_we0,
        convlayer_output_rows_d0,
        convlayer_output_cols_address0,
        convlayer_output_cols_ce0,
        convlayer_output_cols_we0,
        convlayer_output_cols_d0
);

parameter    ap_ST_fsm_state1 = 21'd1;
parameter    ap_ST_fsm_state2 = 21'd2;
parameter    ap_ST_fsm_state3 = 21'd4;
parameter    ap_ST_fsm_state4 = 21'd8;
parameter    ap_ST_fsm_state5 = 21'd16;
parameter    ap_ST_fsm_state6 = 21'd32;
parameter    ap_ST_fsm_state7 = 21'd64;
parameter    ap_ST_fsm_state8 = 21'd128;
parameter    ap_ST_fsm_pp1_stage0 = 21'd256;
parameter    ap_ST_fsm_state11 = 21'd512;
parameter    ap_ST_fsm_state12 = 21'd1024;
parameter    ap_ST_fsm_state13 = 21'd2048;
parameter    ap_ST_fsm_pp2_stage0 = 21'd4096;
parameter    ap_ST_fsm_state16 = 21'd8192;
parameter    ap_ST_fsm_state17 = 21'd16384;
parameter    ap_ST_fsm_state18 = 21'd32768;
parameter    ap_ST_fsm_pp3_stage0 = 21'd65536;
parameter    ap_ST_fsm_state52 = 21'd131072;
parameter    ap_ST_fsm_state53 = 21'd262144;
parameter    ap_ST_fsm_pp4_stage0 = 21'd524288;
parameter    ap_ST_fsm_state56 = 21'd1048576;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] input_val_V_address0;
output   input_val_V_ce0;
input  [31:0] input_val_V_q0;
output  [9:0] convlayer_output_val_V_address0;
output   convlayer_output_val_V_ce0;
output   convlayer_output_val_V_we0;
output  [31:0] convlayer_output_val_V_d0;
output  [3:0] convlayer_output_rows_address0;
output   convlayer_output_rows_ce0;
output   convlayer_output_rows_we0;
output  [4:0] convlayer_output_rows_d0;
output  [3:0] convlayer_output_cols_address0;
output   convlayer_output_cols_ce0;
output   convlayer_output_cols_we0;
output  [4:0] convlayer_output_cols_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg convlayer_output_val_V_ce0;
reg convlayer_output_val_V_we0;
reg convlayer_output_rows_ce0;
reg convlayer_output_rows_we0;
reg convlayer_output_cols_ce0;
reg convlayer_output_cols_we0;

(* fsm_encoding = "none" *) reg   [20:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [6:0] convlayer2_k_rows_address0;
reg    convlayer2_k_rows_ce0;
wire   [2:0] convlayer2_k_rows_q0;
wire   [6:0] convlayer2_k_cols_address0;
reg    convlayer2_k_cols_ce0;
wire   [2:0] convlayer2_k_cols_q0;
wire   [10:0] convlayer2_k_val_V_address0;
reg    convlayer2_k_val_V_ce0;
wire   [17:0] convlayer2_k_val_V_q0;
wire   [3:0] convlayer2_b_V_address0;
reg    convlayer2_b_V_ce0;
wire   [14:0] convlayer2_b_V_q0;
reg   [2:0] j_0_i_reg_488;
reg   [3:0] j_0_i4_reg_511;
reg   [3:0] j_0_i2_reg_533;
reg   [3:0] j_0_i3_reg_555;
wire   [7:0] i_cast_fu_629_p1;
reg   [7:0] i_cast_reg_1976;
wire    ap_CS_fsm_state2;
wire   [3:0] i_7_fu_639_p2;
reg   [3:0] i_7_reg_1984;
wire   [0:0] exitcond7_fu_645_p2;
wire    ap_CS_fsm_state3;
wire   [3:0] i_6_fu_651_p2;
reg   [3:0] i_6_reg_1993;
wire   [7:0] tmp_138_cast_fu_665_p1;
reg   [7:0] tmp_138_cast_reg_1998;
wire   [3:0] j_4_fu_675_p2;
wire    ap_CS_fsm_state4;
wire   [2:0] j_5_fu_701_p2;
reg   [2:0] j_5_reg_2014;
wire    ap_CS_fsm_state6;
wire   [34:0] tmp_137_fu_772_p2;
reg   [34:0] tmp_137_reg_2019;
wire   [0:0] exitcond_fu_695_p2;
wire   [63:0] tmp_70_fu_778_p1;
reg   [63:0] tmp_70_reg_2034;
reg   [2:0] p_kernel_rows_reg_2045;
wire    ap_CS_fsm_state7;
reg   [2:0] p_kernel_cols_reg_2050;
wire   [0:0] exitcond3_fu_783_p2;
wire    ap_CS_fsm_state8;
wire   [2:0] i_9_fu_788_p2;
reg   [2:0] i_9_reg_2059;
wire   [11:0] tmp_141_fu_819_p2;
reg   [11:0] tmp_141_reg_2064;
wire   [0:0] exitcond1_fu_925_p2;
reg   [0:0] exitcond1_reg_2194;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state9_pp1_stage0_iter0;
wire    ap_block_state10_pp1_stage0_iter1;
wire    ap_block_pp1_stage0_11001;
wire   [2:0] j_8_fu_930_p2;
reg   [2:0] j_8_reg_2198;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] exitcond8_i_fu_1079_p2;
wire    ap_CS_fsm_state13;
wire   [3:0] i_11_fu_1085_p2;
reg   [3:0] i_11_reg_2212;
wire   [7:0] tmp_157_cast_fu_1099_p1;
reg   [7:0] tmp_157_cast_reg_2217;
wire   [0:0] exitcond_i_fu_1103_p2;
reg   [0:0] exitcond_i_reg_2222;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state14_pp2_stage0_iter0;
wire    ap_block_state15_pp2_stage0_iter1;
wire    ap_block_pp2_stage0_11001;
wire   [3:0] j_7_fu_1109_p2;
reg    ap_enable_reg_pp2_iter0;
reg   [5:0] p_output_val_V_addr_6_reg_2236;
wire   [7:0] tmp_140_cast_fu_1145_p1;
reg   [7:0] tmp_140_cast_reg_2242;
wire    ap_CS_fsm_state17;
wire  signed [32:0] tmp_71_fu_1149_p1;
reg  signed [32:0] tmp_71_reg_2247;
wire  signed [31:0] tmp_65_fu_1153_p1;
reg  signed [31:0] tmp_65_reg_2252;
wire   [0:0] exitcond2_i_fu_1157_p2;
wire    ap_CS_fsm_state18;
wire   [3:0] i_8_fu_1163_p2;
reg   [3:0] i_8_reg_2261;
wire   [7:0] tmp_146_cast_fu_1177_p1;
reg   [7:0] tmp_146_cast_reg_2266;
wire   [0:0] exitcond_i1_fu_1181_p2;
reg   [0:0] exitcond_i1_reg_2271;
wire    ap_CS_fsm_pp3_stage0;
wire    ap_block_state19_pp3_stage0_iter0;
wire    ap_block_state20_pp3_stage0_iter1;
wire    ap_block_state21_pp3_stage0_iter2;
wire    ap_block_state22_pp3_stage0_iter3;
wire    ap_block_state23_pp3_stage0_iter4;
wire    ap_block_state24_pp3_stage0_iter5;
wire    ap_block_state25_pp3_stage0_iter6;
wire    ap_block_state26_pp3_stage0_iter7;
wire    ap_block_state27_pp3_stage0_iter8;
wire    ap_block_state28_pp3_stage0_iter9;
wire    ap_block_state29_pp3_stage0_iter10;
wire    ap_block_state30_pp3_stage0_iter11;
wire    ap_block_state31_pp3_stage0_iter12;
wire    ap_block_state32_pp3_stage0_iter13;
wire    ap_block_state33_pp3_stage0_iter14;
wire    ap_block_state34_pp3_stage0_iter15;
wire    ap_block_state35_pp3_stage0_iter16;
wire    ap_block_state36_pp3_stage0_iter17;
wire    ap_block_state37_pp3_stage0_iter18;
wire    ap_block_state38_pp3_stage0_iter19;
wire    ap_block_state39_pp3_stage0_iter20;
wire    ap_block_state40_pp3_stage0_iter21;
wire    ap_block_state41_pp3_stage0_iter22;
wire    ap_block_state42_pp3_stage0_iter23;
wire    ap_block_state43_pp3_stage0_iter24;
wire    ap_block_state44_pp3_stage0_iter25;
wire    ap_block_state45_pp3_stage0_iter26;
wire    ap_block_state46_pp3_stage0_iter27;
wire    ap_block_state47_pp3_stage0_iter28;
wire    ap_block_state48_pp3_stage0_iter29;
wire    ap_block_state49_pp3_stage0_iter30;
wire    ap_block_state50_pp3_stage0_iter31;
wire    ap_block_state51_pp3_stage0_iter32;
wire    ap_block_pp3_stage0_11001;
reg   [0:0] exitcond_i1_reg_2271_pp3_iter1_reg;
reg   [0:0] exitcond_i1_reg_2271_pp3_iter2_reg;
reg   [0:0] exitcond_i1_reg_2271_pp3_iter3_reg;
reg   [0:0] exitcond_i1_reg_2271_pp3_iter4_reg;
reg   [0:0] exitcond_i1_reg_2271_pp3_iter5_reg;
reg   [0:0] exitcond_i1_reg_2271_pp3_iter6_reg;
reg   [0:0] exitcond_i1_reg_2271_pp3_iter7_reg;
reg   [0:0] exitcond_i1_reg_2271_pp3_iter8_reg;
reg   [0:0] exitcond_i1_reg_2271_pp3_iter9_reg;
reg   [0:0] exitcond_i1_reg_2271_pp3_iter10_reg;
reg   [0:0] exitcond_i1_reg_2271_pp3_iter11_reg;
reg   [0:0] exitcond_i1_reg_2271_pp3_iter12_reg;
reg   [0:0] exitcond_i1_reg_2271_pp3_iter13_reg;
reg   [0:0] exitcond_i1_reg_2271_pp3_iter14_reg;
reg   [0:0] exitcond_i1_reg_2271_pp3_iter15_reg;
reg   [0:0] exitcond_i1_reg_2271_pp3_iter16_reg;
reg   [0:0] exitcond_i1_reg_2271_pp3_iter17_reg;
reg   [0:0] exitcond_i1_reg_2271_pp3_iter18_reg;
reg   [0:0] exitcond_i1_reg_2271_pp3_iter19_reg;
reg   [0:0] exitcond_i1_reg_2271_pp3_iter20_reg;
reg   [0:0] exitcond_i1_reg_2271_pp3_iter21_reg;
reg   [0:0] exitcond_i1_reg_2271_pp3_iter22_reg;
reg   [0:0] exitcond_i1_reg_2271_pp3_iter23_reg;
reg   [0:0] exitcond_i1_reg_2271_pp3_iter24_reg;
reg   [0:0] exitcond_i1_reg_2271_pp3_iter25_reg;
reg   [0:0] exitcond_i1_reg_2271_pp3_iter26_reg;
reg   [0:0] exitcond_i1_reg_2271_pp3_iter27_reg;
reg   [0:0] exitcond_i1_reg_2271_pp3_iter28_reg;
reg   [0:0] exitcond_i1_reg_2271_pp3_iter29_reg;
reg   [0:0] exitcond_i1_reg_2271_pp3_iter30_reg;
reg   [0:0] exitcond_i1_reg_2271_pp3_iter31_reg;
wire   [3:0] j_9_fu_1187_p2;
reg    ap_enable_reg_pp3_iter0;
reg   [5:0] p_output_val_V_addr_4_reg_2280;
reg   [5:0] p_output_val_V_addr_4_reg_2280_pp3_iter1_reg;
reg   [5:0] p_output_val_V_addr_4_reg_2280_pp3_iter2_reg;
reg   [5:0] p_output_val_V_addr_4_reg_2280_pp3_iter3_reg;
reg   [5:0] p_output_val_V_addr_4_reg_2280_pp3_iter4_reg;
reg   [5:0] p_output_val_V_addr_4_reg_2280_pp3_iter5_reg;
reg   [5:0] p_output_val_V_addr_4_reg_2280_pp3_iter6_reg;
reg   [5:0] p_output_val_V_addr_4_reg_2280_pp3_iter7_reg;
reg   [5:0] p_output_val_V_addr_4_reg_2280_pp3_iter8_reg;
reg   [5:0] p_output_val_V_addr_4_reg_2280_pp3_iter9_reg;
reg   [5:0] p_output_val_V_addr_4_reg_2280_pp3_iter10_reg;
reg   [5:0] p_output_val_V_addr_4_reg_2280_pp3_iter11_reg;
reg   [5:0] p_output_val_V_addr_4_reg_2280_pp3_iter12_reg;
reg   [5:0] p_output_val_V_addr_4_reg_2280_pp3_iter13_reg;
reg   [5:0] p_output_val_V_addr_4_reg_2280_pp3_iter14_reg;
reg   [5:0] p_output_val_V_addr_4_reg_2280_pp3_iter15_reg;
reg   [5:0] p_output_val_V_addr_4_reg_2280_pp3_iter16_reg;
reg   [5:0] p_output_val_V_addr_4_reg_2280_pp3_iter17_reg;
reg   [5:0] p_output_val_V_addr_4_reg_2280_pp3_iter18_reg;
reg   [5:0] p_output_val_V_addr_4_reg_2280_pp3_iter19_reg;
reg   [5:0] p_output_val_V_addr_4_reg_2280_pp3_iter20_reg;
reg   [5:0] p_output_val_V_addr_4_reg_2280_pp3_iter21_reg;
reg   [5:0] p_output_val_V_addr_4_reg_2280_pp3_iter22_reg;
reg   [5:0] p_output_val_V_addr_4_reg_2280_pp3_iter23_reg;
reg   [5:0] p_output_val_V_addr_4_reg_2280_pp3_iter24_reg;
reg   [5:0] p_output_val_V_addr_4_reg_2280_pp3_iter25_reg;
reg   [5:0] p_output_val_V_addr_4_reg_2280_pp3_iter26_reg;
reg   [5:0] p_output_val_V_addr_4_reg_2280_pp3_iter27_reg;
reg   [5:0] p_output_val_V_addr_4_reg_2280_pp3_iter28_reg;
reg   [5:0] p_output_val_V_addr_4_reg_2280_pp3_iter29_reg;
reg   [5:0] p_output_val_V_addr_4_reg_2280_pp3_iter30_reg;
reg   [5:0] p_output_val_V_addr_4_reg_2280_pp3_iter31_reg;
wire   [0:0] tmp_82_fu_1221_p2;
reg   [0:0] tmp_82_reg_2286;
reg   [0:0] tmp_82_reg_2286_pp3_iter2_reg;
reg   [0:0] tmp_82_reg_2286_pp3_iter3_reg;
reg   [0:0] tmp_82_reg_2286_pp3_iter4_reg;
wire   [0:0] is_neg_fu_1227_p3;
reg   [0:0] is_neg_reg_2291;
reg   [0:0] is_neg_reg_2291_pp3_iter2_reg;
reg   [0:0] is_neg_reg_2291_pp3_iter3_reg;
reg   [0:0] is_neg_reg_2291_pp3_iter4_reg;
wire   [31:0] p_Val2_43_fu_1241_p3;
reg   [31:0] p_Val2_43_reg_2296;
wire   [32:0] p_Val2_32_cast_fu_1249_p1;
reg   [32:0] p_Val2_32_cast_reg_2301;
wire   [31:0] num_zeros_fu_1279_p1;
reg   [31:0] num_zeros_reg_2307;
wire   [31:0] msb_idx_fu_1283_p2;
reg   [31:0] msb_idx_reg_2312;
reg   [31:0] msb_idx_reg_2312_pp3_iter3_reg;
reg   [31:0] msb_idx_reg_2312_pp3_iter4_reg;
wire   [31:0] tmp32_V_3_fu_1399_p3;
reg   [31:0] tmp32_V_3_reg_2317;
wire   [31:0] tmp32_V_11_fu_1407_p1;
reg   [31:0] tmp32_V_11_reg_2322;
reg   [7:0] p_Result_s_203_reg_2327;
wire   [31:0] x_assign_fu_1471_p3;
reg   [31:0] x_assign_reg_2332;
wire   [31:0] grp_fu_614_p2;
reg   [31:0] tmp_i_i_reg_2337;
wire   [63:0] tmp_96_fu_607_p1;
reg   [63:0] tmp_96_reg_2342;
wire   [63:0] grp_fu_619_p2;
reg   [63:0] tmp_99_reg_2347;
wire   [63:0] grp_fu_624_p2;
reg   [63:0] tmp_100_reg_2352;
reg   [0:0] isneg_reg_2357;
wire   [51:0] tmp_176_fu_1508_p1;
reg   [51:0] tmp_176_reg_2363;
wire   [0:0] tmp_103_fu_1512_p2;
reg   [0:0] tmp_103_reg_2368;
wire   [0:0] tmp_104_fu_1524_p2;
reg   [0:0] tmp_104_reg_2374;
wire   [11:0] tmp_105_fu_1530_p2;
reg   [11:0] tmp_105_reg_2381;
wire   [11:0] tmp_106_fu_1536_p2;
reg   [11:0] tmp_106_reg_2386;
wire   [0:0] tmp_107_fu_1542_p2;
reg   [0:0] tmp_107_reg_2391;
wire   [0:0] exitcond5_fu_1745_p2;
wire    ap_CS_fsm_state53;
wire   [3:0] i_10_fu_1751_p2;
reg   [3:0] i_10_reg_2401;
wire   [10:0] tmp_152_cast_fu_1766_p3;
reg   [10:0] tmp_152_cast_reg_2406;
wire   [7:0] tmp_154_cast_fu_1782_p1;
reg   [7:0] tmp_154_cast_reg_2411;
wire   [0:0] exitcond4_fu_1786_p2;
reg   [0:0] exitcond4_reg_2416;
wire    ap_CS_fsm_pp4_stage0;
wire    ap_block_state54_pp4_stage0_iter0;
wire    ap_block_state55_pp4_stage0_iter1;
wire    ap_block_pp4_stage0_11001;
wire   [3:0] j_6_fu_1792_p2;
reg   [3:0] j_6_reg_2420;
reg    ap_enable_reg_pp4_iter0;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state9;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state14;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state19;
reg    ap_enable_reg_pp3_iter1;
reg    ap_enable_reg_pp3_iter2;
reg    ap_enable_reg_pp3_iter3;
reg    ap_enable_reg_pp3_iter4;
reg    ap_enable_reg_pp3_iter5;
reg    ap_enable_reg_pp3_iter6;
reg    ap_enable_reg_pp3_iter7;
reg    ap_enable_reg_pp3_iter8;
reg    ap_enable_reg_pp3_iter9;
reg    ap_enable_reg_pp3_iter10;
reg    ap_enable_reg_pp3_iter11;
reg    ap_enable_reg_pp3_iter12;
reg    ap_enable_reg_pp3_iter13;
reg    ap_enable_reg_pp3_iter14;
reg    ap_enable_reg_pp3_iter15;
reg    ap_enable_reg_pp3_iter16;
reg    ap_enable_reg_pp3_iter17;
reg    ap_enable_reg_pp3_iter18;
reg    ap_enable_reg_pp3_iter19;
reg    ap_enable_reg_pp3_iter20;
reg    ap_enable_reg_pp3_iter21;
reg    ap_enable_reg_pp3_iter22;
reg    ap_enable_reg_pp3_iter23;
reg    ap_enable_reg_pp3_iter24;
reg    ap_enable_reg_pp3_iter25;
reg    ap_enable_reg_pp3_iter26;
reg    ap_enable_reg_pp3_iter27;
reg    ap_enable_reg_pp3_iter28;
reg    ap_enable_reg_pp3_iter29;
reg    ap_enable_reg_pp3_iter30;
reg    ap_enable_reg_pp3_iter31;
reg    ap_enable_reg_pp3_iter32;
wire    ap_block_pp4_stage0_subdone;
reg    ap_condition_pp4_exit_iter0_state54;
reg    ap_enable_reg_pp4_iter1;
reg   [5:0] p_temp_val_V_address0;
reg    p_temp_val_V_ce0;
reg    p_temp_val_V_we0;
wire   [31:0] p_temp_val_V_q0;
reg   [5:0] p_output_val_V_address0;
reg    p_output_val_V_ce0;
reg    p_output_val_V_we0;
reg   [31:0] p_output_val_V_d0;
wire   [31:0] p_output_val_V_q0;
reg   [5:0] p_output_val_V_address1;
reg    p_output_val_V_ce1;
reg    p_output_val_V_we1;
wire   [31:0] p_output_val_V_d1;
wire   [31:0] p_output_val_V_q1;
wire    grp_Conv10_fu_567_ap_start;
wire    grp_Conv10_fu_567_ap_done;
wire    grp_Conv10_fu_567_ap_idle;
wire    grp_Conv10_fu_567_ap_ready;
wire   [9:0] grp_Conv10_fu_567_src_val_V_address0;
wire    grp_Conv10_fu_567_src_val_V_ce0;
wire   [5:0] grp_Conv10_fu_567_dst_val_V_address0;
wire    grp_Conv10_fu_567_dst_val_V_ce0;
wire    grp_Conv10_fu_567_dst_val_V_we0;
wire   [31:0] grp_Conv10_fu_567_dst_val_V_d0;
reg   [3:0] i_reg_430;
reg   [3:0] i_0_i1_reg_442;
wire    ap_CS_fsm_state5;
wire   [0:0] exitcond2_fu_633_p2;
reg   [3:0] j_0_i1_reg_453;
wire   [0:0] exitcond6_fu_669_p2;
reg   [2:0] j_reg_464;
reg   [2:0] i_0_i_reg_476;
wire    ap_CS_fsm_state11;
reg   [2:0] ap_phi_mux_j_0_i_phi_fu_492_p4;
wire    ap_block_pp1_stage0;
reg   [3:0] i_0_i4_reg_500;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state16;
reg   [3:0] i_0_i2_reg_522;
wire    ap_CS_fsm_state52;
reg   [3:0] i_0_i3_reg_544;
wire    ap_CS_fsm_state56;
reg   [3:0] ap_phi_mux_j_0_i3_phi_fu_559_p4;
wire    ap_block_pp4_stage0;
reg    grp_Conv10_fu_567_ap_start_reg;
wire   [63:0] tmp_144_cast_fu_690_p1;
wire   [63:0] tmp_74_fu_746_p1;
wire   [63:0] tmp_158_cast_fu_945_p1;
wire   [63:0] tmp_161_cast_fu_1124_p1;
wire    ap_block_pp2_stage0;
wire   [63:0] tmp_155_cast_fu_1202_p1;
wire    ap_block_pp3_stage0;
wire   [63:0] tmp_160_cast_fu_1807_p1;
wire   [63:0] tmp_159_cast_fu_1821_p1;
reg   [31:0] p_kernel_val_V_0_0_s_fu_178;
wire  signed [31:0] p_kernel_val_4_V_0_s_fu_950_p1;
reg   [31:0] p_kernel_val_V_0_1_s_fu_182;
reg   [31:0] p_kernel_val_V_0_2_s_fu_186;
reg   [31:0] p_kernel_val_V_0_3_s_fu_190;
reg   [31:0] p_kernel_val_V_0_4_s_fu_194;
reg   [31:0] p_kernel_val_V_1_0_s_fu_198;
reg   [31:0] p_kernel_val_V_1_1_s_fu_202;
reg   [31:0] p_kernel_val_V_1_2_s_fu_206;
reg   [31:0] p_kernel_val_V_1_3_s_fu_210;
reg   [31:0] p_kernel_val_V_1_4_s_fu_214;
reg   [31:0] p_kernel_val_V_2_0_s_fu_218;
reg   [31:0] p_kernel_val_V_2_1_s_fu_222;
reg   [31:0] p_kernel_val_V_2_2_s_fu_226;
reg   [31:0] p_kernel_val_V_2_3_s_fu_230;
reg   [31:0] p_kernel_val_V_2_4_s_fu_234;
reg   [31:0] p_kernel_val_V_3_0_s_fu_238;
reg   [31:0] p_kernel_val_V_3_1_s_fu_242;
reg   [31:0] p_kernel_val_V_3_2_s_fu_246;
reg   [31:0] p_kernel_val_V_3_3_s_fu_250;
reg   [31:0] p_kernel_val_V_3_4_s_fu_254;
reg   [31:0] p_kernel_val_V_4_0_s_fu_258;
reg   [31:0] p_kernel_val_V_4_1_s_fu_262;
reg   [31:0] p_kernel_val_V_4_2_s_fu_266;
reg   [31:0] p_kernel_val_V_4_3_s_fu_270;
reg   [31:0] p_kernel_val_V_4_4_s_fu_274;
wire   [31:0] newSel3_fu_1736_p3;
wire   [31:0] res_fu_604_p1;
wire   [6:0] tmp_s_fu_657_p3;
wire   [7:0] tmp_75_cast_fu_681_p1;
wire   [7:0] tmp_138_fu_685_p2;
wire   [6:0] p_shl_fu_707_p3;
wire   [4:0] p_shl8_fu_719_p3;
wire   [7:0] p_shl_cast_fu_715_p1;
wire   [7:0] p_shl8_cast_fu_727_p1;
wire   [7:0] tmp_72_fu_731_p2;
wire  signed [7:0] tmp_73_fu_737_p2;
wire  signed [31:0] tmp_121_cast_fu_742_p1;
wire   [9:0] tmp_135_fu_756_p3;
wire  signed [33:0] tmp_136_fu_764_p1;
wire   [34:0] p_shl1_cast_fu_768_p1;
wire   [34:0] tmp_74_cast_fu_752_p1;
wire   [34:0] tmp_77_cast_fu_794_p1;
wire   [34:0] tmp_140_fu_798_p2;
wire   [9:0] tmp_152_fu_807_p1;
wire   [11:0] p_shl2_cast_fu_811_p3;
wire   [11:0] tmp_151_fu_803_p1;
wire   [11:0] tmp_89_cast_fu_936_p1;
wire   [11:0] tmp_146_fu_940_p2;
wire   [6:0] tmp_145_fu_1091_p3;
wire   [7:0] tmp_98_cast_fu_1115_p1;
wire   [7:0] tmp_149_fu_1119_p2;
wire   [6:0] tmp_134_fu_1137_p3;
wire  signed [14:0] tmp_71_fu_1149_p0;
wire  signed [14:0] tmp_65_fu_1153_p0;
wire   [6:0] tmp_139_fu_1169_p3;
wire   [7:0] tmp_80_cast_fu_1193_p1;
wire   [7:0] tmp_144_fu_1197_p2;
wire  signed [31:0] tmp_81_fu_1207_p0;
wire  signed [32:0] tmp_81_fu_1207_p1;
wire  signed [31:0] p_Val2_30_cast_fu_1216_p1;
wire   [32:0] p_Val2_30_fu_1211_p2;
wire   [31:0] p_Val2_30_cast_fu_1216_p2;
wire   [31:0] tmp_136_cast_fu_1235_p2;
reg   [32:0] p_Result_s_fu_1253_p4;
wire   [63:0] p_Result_5_fu_1263_p3;
reg   [63:0] tmp_83_fu_1271_p3;
wire   [0:0] tmp_157_fu_1292_p3;
wire   [30:0] tmp_155_fu_1288_p1;
wire   [30:0] msb_idx_1_fu_1300_p3;
wire   [25:0] tmp_162_fu_1308_p4;
wire   [30:0] tmp_86_fu_1324_p2;
wire   [31:0] tmp_141_cast_fu_1330_p1;
wire   [5:0] tmp_163_fu_1339_p1;
wire   [0:0] tmp_164_fu_1343_p2;
reg   [32:0] tmp_166_fu_1355_p4;
wire   [5:0] tmp_167_fu_1364_p2;
wire   [5:0] tmp_165_fu_1349_p2;
wire   [5:0] tmp_169_fu_1377_p3;
wire   [32:0] tmp_168_fu_1370_p3;
wire   [32:0] tmp_170_fu_1385_p1;
wire   [32:0] tmp_171_fu_1389_p2;
wire   [0:0] icmp_fu_1318_p2;
wire   [31:0] tmp32_V_1_fu_1334_p2;
wire   [31:0] tmp32_V_fu_1395_p1;
wire   [31:0] grp_fu_601_p1;
wire   [0:0] tmp_91_fu_1421_p2;
wire   [7:0] tmp_173_fu_1426_p1;
wire   [7:0] tmp24_cast_cast_fu_1429_p3;
wire   [7:0] p_Repl2_1_trunc_fu_1437_p2;
wire   [8:0] tmp_95_fu_1443_p3;
wire   [31:0] p_Result_6_fu_1450_p5;
wire   [31:0] p_Result_7_op_fu_1461_p2;
wire   [31:0] tmp_66_fu_1467_p1;
wire   [63:0] d_assign_fu_610_p1;
wire   [63:0] ireg_V_fu_1478_p1;
wire   [10:0] exp_tmp_V_fu_1494_p4;
wire   [62:0] tmp_174_fu_1482_p1;
wire   [11:0] tmp_101_fu_1504_p1;
wire   [11:0] F2_fu_1518_p2;
wire   [52:0] tmp_102_fu_1548_p3;
wire   [53:0] p_Result_7_fu_1555_p1;
wire   [53:0] man_V_1_fu_1559_p2;
wire  signed [11:0] sh_amt_fu_1572_p3;
wire   [53:0] man_V_2_fu_1565_p3;
wire   [6:0] tmp_178_fu_1591_p4;
wire  signed [31:0] sh_amt_cast_fu_1577_p1;
wire   [53:0] tmp_111_fu_1607_p1;
wire   [53:0] tmp_112_fu_1611_p2;
wire   [31:0] tmp_177_fu_1581_p1;
wire   [0:0] sel_tmp1_fu_1634_p2;
wire   [0:0] sel_tmp6_demorgan_fu_1644_p2;
wire   [0:0] sel_tmp6_fu_1648_p2;
wire   [0:0] sel_tmp7_fu_1654_p2;
wire   [0:0] tmp_109_fu_1585_p2;
wire   [0:0] sel_tmp_fu_1665_p2;
wire   [0:0] sel_tmp21_demorgan_fu_1677_p2;
wire   [0:0] icmp1_fu_1601_p2;
wire   [0:0] sel_tmp4_fu_1682_p2;
wire   [0:0] sel_tmp5_fu_1688_p2;
wire   [31:0] tmp_114_fu_1628_p2;
wire   [31:0] this_assign_fu_1621_p3;
wire   [0:0] sel_tmp3_fu_1671_p2;
wire   [0:0] sel_tmp8_fu_1659_p2;
wire   [31:0] tmp_179_fu_1617_p1;
wire   [0:0] sel_tmp2_fu_1639_p2;
wire   [0:0] or_cond_fu_1702_p2;
wire   [31:0] newSel_fu_1694_p3;
wire   [31:0] newSel1_fu_1708_p3;
wire   [0:0] or_cond1_fu_1716_p2;
wire   [0:0] or_cond2_fu_1730_p2;
wire   [31:0] newSel2_fu_1722_p3;
wire   [7:0] tmp_78_cast_fu_1757_p1;
wire   [7:0] tmp_142_fu_1761_p2;
wire   [6:0] tmp_143_fu_1774_p3;
wire   [7:0] tmp_94_cast1_fu_1798_p1;
wire   [7:0] tmp_148_fu_1802_p2;
wire   [10:0] tmp_94_cast_fu_1812_p1;
wire   [10:0] tmp_147_fu_1816_p2;
reg   [20:0] ap_NS_fsm;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_idle_pp4;
wire    ap_enable_pp4;

// power-on initialization
initial begin
#0 ap_CS_fsm = 21'd1;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter3 = 1'b0;
#0 ap_enable_reg_pp3_iter4 = 1'b0;
#0 ap_enable_reg_pp3_iter5 = 1'b0;
#0 ap_enable_reg_pp3_iter6 = 1'b0;
#0 ap_enable_reg_pp3_iter7 = 1'b0;
#0 ap_enable_reg_pp3_iter8 = 1'b0;
#0 ap_enable_reg_pp3_iter9 = 1'b0;
#0 ap_enable_reg_pp3_iter10 = 1'b0;
#0 ap_enable_reg_pp3_iter11 = 1'b0;
#0 ap_enable_reg_pp3_iter12 = 1'b0;
#0 ap_enable_reg_pp3_iter13 = 1'b0;
#0 ap_enable_reg_pp3_iter14 = 1'b0;
#0 ap_enable_reg_pp3_iter15 = 1'b0;
#0 ap_enable_reg_pp3_iter16 = 1'b0;
#0 ap_enable_reg_pp3_iter17 = 1'b0;
#0 ap_enable_reg_pp3_iter18 = 1'b0;
#0 ap_enable_reg_pp3_iter19 = 1'b0;
#0 ap_enable_reg_pp3_iter20 = 1'b0;
#0 ap_enable_reg_pp3_iter21 = 1'b0;
#0 ap_enable_reg_pp3_iter22 = 1'b0;
#0 ap_enable_reg_pp3_iter23 = 1'b0;
#0 ap_enable_reg_pp3_iter24 = 1'b0;
#0 ap_enable_reg_pp3_iter25 = 1'b0;
#0 ap_enable_reg_pp3_iter26 = 1'b0;
#0 ap_enable_reg_pp3_iter27 = 1'b0;
#0 ap_enable_reg_pp3_iter28 = 1'b0;
#0 ap_enable_reg_pp3_iter29 = 1'b0;
#0 ap_enable_reg_pp3_iter30 = 1'b0;
#0 ap_enable_reg_pp3_iter31 = 1'b0;
#0 ap_enable_reg_pp3_iter32 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 grp_Conv10_fu_567_ap_start_reg = 1'b0;
end

ConvLayer_convlayDeQ #(
    .DataWidth( 3 ),
    .AddressRange( 72 ),
    .AddressWidth( 7 ))
convlayer2_k_rows_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(convlayer2_k_rows_address0),
    .ce0(convlayer2_k_rows_ce0),
    .q0(convlayer2_k_rows_q0)
);

ConvLayer_convlayDeQ #(
    .DataWidth( 3 ),
    .AddressRange( 72 ),
    .AddressWidth( 7 ))
convlayer2_k_cols_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(convlayer2_k_cols_address0),
    .ce0(convlayer2_k_cols_ce0),
    .q0(convlayer2_k_cols_q0)
);

ConvLayer_convlayFfa #(
    .DataWidth( 18 ),
    .AddressRange( 1800 ),
    .AddressWidth( 11 ))
convlayer2_k_val_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(convlayer2_k_val_V_address0),
    .ce0(convlayer2_k_val_V_ce0),
    .q0(convlayer2_k_val_V_q0)
);

ConvLayer_convlayGfk #(
    .DataWidth( 15 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
convlayer2_b_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(convlayer2_b_V_address0),
    .ce0(convlayer2_b_V_ce0),
    .q0(convlayer2_b_V_q0)
);

ConvLayer_p_temp_Hfu #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
p_temp_val_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_temp_val_V_address0),
    .ce0(p_temp_val_V_ce0),
    .we0(p_temp_val_V_we0),
    .d0(grp_Conv10_fu_567_dst_val_V_d0),
    .q0(p_temp_val_V_q0)
);

ConvLayer_p_outpuIfE #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
p_output_val_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_output_val_V_address0),
    .ce0(p_output_val_V_ce0),
    .we0(p_output_val_V_we0),
    .d0(p_output_val_V_d0),
    .q0(p_output_val_V_q0),
    .address1(p_output_val_V_address1),
    .ce1(p_output_val_V_ce1),
    .we1(p_output_val_V_we1),
    .d1(p_output_val_V_d1),
    .q1(p_output_val_V_q1)
);

Conv10 grp_Conv10_fu_567(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Conv10_fu_567_ap_start),
    .ap_done(grp_Conv10_fu_567_ap_done),
    .ap_idle(grp_Conv10_fu_567_ap_idle),
    .ap_ready(grp_Conv10_fu_567_ap_ready),
    .src_val_V_address0(grp_Conv10_fu_567_src_val_V_address0),
    .src_val_V_ce0(grp_Conv10_fu_567_src_val_V_ce0),
    .src_val_V_q0(input_val_V_q0),
    .src_val_V_offset(j_reg_464),
    .kernel_val_0_V_0_read(p_kernel_val_V_0_0_s_fu_178),
    .kernel_val_0_V_1_read(p_kernel_val_V_0_1_s_fu_182),
    .kernel_val_0_V_2_read(p_kernel_val_V_0_2_s_fu_186),
    .kernel_val_0_V_3_read(p_kernel_val_V_0_3_s_fu_190),
    .kernel_val_0_V_4_read(p_kernel_val_V_0_4_s_fu_194),
    .kernel_val_1_V_0_read(p_kernel_val_V_1_0_s_fu_198),
    .kernel_val_1_V_1_read(p_kernel_val_V_1_1_s_fu_202),
    .kernel_val_1_V_2_read(p_kernel_val_V_1_2_s_fu_206),
    .kernel_val_1_V_3_read(p_kernel_val_V_1_3_s_fu_210),
    .kernel_val_1_V_4_read(p_kernel_val_V_1_4_s_fu_214),
    .kernel_val_2_V_0_read(p_kernel_val_V_2_0_s_fu_218),
    .kernel_val_2_V_1_read(p_kernel_val_V_2_1_s_fu_222),
    .kernel_val_2_V_2_read(p_kernel_val_V_2_2_s_fu_226),
    .kernel_val_2_V_3_read(p_kernel_val_V_2_3_s_fu_230),
    .kernel_val_2_V_4_read(p_kernel_val_V_2_4_s_fu_234),
    .kernel_val_3_V_0_read(p_kernel_val_V_3_0_s_fu_238),
    .kernel_val_3_V_1_read(p_kernel_val_V_3_1_s_fu_242),
    .kernel_val_3_V_2_read(p_kernel_val_V_3_2_s_fu_246),
    .kernel_val_3_V_3_read(p_kernel_val_V_3_3_s_fu_250),
    .kernel_val_3_V_4_read(p_kernel_val_V_3_4_s_fu_254),
    .kernel_val_4_V_0_read(p_kernel_val_V_4_0_s_fu_258),
    .kernel_val_4_V_1_read(p_kernel_val_V_4_1_s_fu_262),
    .kernel_val_4_V_2_read(p_kernel_val_V_4_2_s_fu_266),
    .kernel_val_4_V_3_read(p_kernel_val_V_4_3_s_fu_270),
    .kernel_val_4_V_4_read(p_kernel_val_V_4_4_s_fu_274),
    .dst_val_V_address0(grp_Conv10_fu_567_dst_val_V_address0),
    .dst_val_V_ce0(grp_Conv10_fu_567_dst_val_V_ce0),
    .dst_val_V_we0(grp_Conv10_fu_567_dst_val_V_we0),
    .dst_val_V_d0(grp_Conv10_fu_567_dst_val_V_d0)
);

CNN_Core_uitofp_3qcK #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
CNN_Core_uitofp_3qcK_U140(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp32_V_3_reg_2317),
    .ce(1'b1),
    .dout(grp_fu_601_p1)
);

CNN_Core_fptrunc_rcU #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
CNN_Core_fptrunc_rcU_U141(
    .din0(tmp_100_reg_2352),
    .dout(res_fu_604_p1)
);

CNN_Core_fpext_32sc4 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
CNN_Core_fpext_32sc4_U142(
    .din0(tmp_i_i_reg_2337),
    .dout(tmp_96_fu_607_p1)
);

CNN_Core_fpext_32sc4 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
CNN_Core_fpext_32sc4_U143(
    .din0(res_fu_604_p1),
    .dout(d_assign_fu_610_p1)
);

CNN_Core_fexp_32ntde #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
CNN_Core_fexp_32ntde_U144(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(32'd0),
    .din1(x_assign_reg_2332),
    .ce(1'b1),
    .dout(grp_fu_614_p2)
);

CNN_Core_dadd_64nudo #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
CNN_Core_dadd_64nudo_U145(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_96_reg_2342),
    .din1(64'd4607182418800017408),
    .ce(1'b1),
    .dout(grp_fu_619_p2)
);

CNN_Core_ddiv_64nvdy #(
    .ID( 1 ),
    .NUM_STAGE( 15 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
CNN_Core_ddiv_64nvdy_U146(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(64'd4607182418800017408),
    .din1(tmp_99_reg_2347),
    .ce(1'b1),
    .dout(grp_fu_624_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state9) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state8) & (exitcond3_fu_783_p2 == 1'd0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state9))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state9);
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if (((1'b1 == ap_CS_fsm_state8) & (exitcond3_fu_783_p2 == 1'd0))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state14) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state13) & (exitcond8_i_fu_1079_p2 == 1'd0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state14))) begin
            ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state14);
        end else if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if (((1'b1 == ap_CS_fsm_state13) & (exitcond8_i_fu_1079_p2 == 1'd0))) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_condition_pp3_exit_iter0_state19) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state18) & (exitcond2_i_fu_1157_p2 == 1'd0))) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter0_state19)) begin
                ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state19);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter10 <= ap_enable_reg_pp3_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter11 <= ap_enable_reg_pp3_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter12 <= ap_enable_reg_pp3_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter13 <= ap_enable_reg_pp3_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter14 <= ap_enable_reg_pp3_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter15 <= ap_enable_reg_pp3_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter16 <= ap_enable_reg_pp3_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter17 <= ap_enable_reg_pp3_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter18 <= ap_enable_reg_pp3_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter19 <= ap_enable_reg_pp3_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter20 <= ap_enable_reg_pp3_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter21 <= ap_enable_reg_pp3_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter22 <= ap_enable_reg_pp3_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter23 <= ap_enable_reg_pp3_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter24 <= ap_enable_reg_pp3_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter25 <= ap_enable_reg_pp3_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter26 <= ap_enable_reg_pp3_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter27 <= ap_enable_reg_pp3_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter28 <= ap_enable_reg_pp3_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter29 <= ap_enable_reg_pp3_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter30 <= ap_enable_reg_pp3_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter31 <= ap_enable_reg_pp3_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter32 <= ap_enable_reg_pp3_iter31;
        end else if (((1'b1 == ap_CS_fsm_state18) & (exitcond2_i_fu_1157_p2 == 1'd0))) begin
            ap_enable_reg_pp3_iter32 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter4 <= ap_enable_reg_pp3_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter5 <= ap_enable_reg_pp3_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter6 <= ap_enable_reg_pp3_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter7 <= ap_enable_reg_pp3_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter8 <= ap_enable_reg_pp3_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter9 <= ap_enable_reg_pp3_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage0_subdone) & (1'b1 == ap_condition_pp4_exit_iter0_state54) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state53) & (exitcond5_fu_1745_p2 == 1'd0))) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage0_subdone) & (1'b1 == ap_condition_pp4_exit_iter0_state54))) begin
            ap_enable_reg_pp4_iter1 <= (1'b1 ^ ap_condition_pp4_exit_iter0_state54);
        end else if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
        end else if (((1'b1 == ap_CS_fsm_state53) & (exitcond5_fu_1745_p2 == 1'd0))) begin
            ap_enable_reg_pp4_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_Conv10_fu_567_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state8) & (exitcond3_fu_783_p2 == 1'd1))) begin
            grp_Conv10_fu_567_ap_start_reg <= 1'b1;
        end else if ((grp_Conv10_fu_567_ap_ready == 1'b1)) begin
            grp_Conv10_fu_567_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond2_fu_633_p2 == 1'd0))) begin
        i_0_i1_reg_442 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        i_0_i1_reg_442 <= i_6_reg_1993;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        i_0_i2_reg_522 <= i_8_reg_2261;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        i_0_i2_reg_522 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        i_0_i3_reg_544 <= i_10_reg_2401;
    end else if (((1'b1 == ap_CS_fsm_state18) & (exitcond2_i_fu_1157_p2 == 1'd1))) begin
        i_0_i3_reg_544 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        i_0_i4_reg_500 <= i_11_reg_2212;
    end else if (((grp_Conv10_fu_567_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
        i_0_i4_reg_500 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        i_0_i_reg_476 <= i_9_reg_2059;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        i_0_i_reg_476 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state53) & (exitcond5_fu_1745_p2 == 1'd1))) begin
        i_reg_430 <= i_7_reg_1984;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_430 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (exitcond7_fu_645_p2 == 1'd0))) begin
        j_0_i1_reg_453 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state4) & (exitcond6_fu_669_p2 == 1'd0))) begin
        j_0_i1_reg_453 <= j_4_fu_675_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) & (exitcond2_i_fu_1157_p2 == 1'd0))) begin
        j_0_i2_reg_533 <= 4'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (exitcond_i1_fu_1181_p2 == 1'd0))) begin
        j_0_i2_reg_533 <= j_9_fu_1187_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state53) & (exitcond5_fu_1745_p2 == 1'd0))) begin
        j_0_i3_reg_555 <= 4'd0;
    end else if (((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (exitcond4_reg_2416 == 1'd0))) begin
        j_0_i3_reg_555 <= j_6_reg_2420;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (exitcond8_i_fu_1079_p2 == 1'd0))) begin
        j_0_i4_reg_511 <= 4'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond_i_fu_1103_p2 == 1'd0))) begin
        j_0_i4_reg_511 <= j_7_fu_1109_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond1_reg_2194 == 1'd0))) begin
        j_0_i_reg_488 <= j_8_reg_2198;
    end else if (((1'b1 == ap_CS_fsm_state8) & (exitcond3_fu_783_p2 == 1'd0))) begin
        j_0_i_reg_488 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (exitcond7_fu_645_p2 == 1'd1))) begin
        j_reg_464 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_state13) & (exitcond8_i_fu_1079_p2 == 1'd1))) begin
        j_reg_464 <= j_5_reg_2014;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        exitcond1_reg_2194 <= exitcond1_fu_925_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        exitcond4_reg_2416 <= exitcond4_fu_1786_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        exitcond_i1_reg_2271 <= exitcond_i1_fu_1181_p2;
        exitcond_i1_reg_2271_pp3_iter1_reg <= exitcond_i1_reg_2271;
        p_output_val_V_addr_4_reg_2280_pp3_iter1_reg <= p_output_val_V_addr_4_reg_2280;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp3_stage0_11001)) begin
        exitcond_i1_reg_2271_pp3_iter10_reg <= exitcond_i1_reg_2271_pp3_iter9_reg;
        exitcond_i1_reg_2271_pp3_iter11_reg <= exitcond_i1_reg_2271_pp3_iter10_reg;
        exitcond_i1_reg_2271_pp3_iter12_reg <= exitcond_i1_reg_2271_pp3_iter11_reg;
        exitcond_i1_reg_2271_pp3_iter13_reg <= exitcond_i1_reg_2271_pp3_iter12_reg;
        exitcond_i1_reg_2271_pp3_iter14_reg <= exitcond_i1_reg_2271_pp3_iter13_reg;
        exitcond_i1_reg_2271_pp3_iter15_reg <= exitcond_i1_reg_2271_pp3_iter14_reg;
        exitcond_i1_reg_2271_pp3_iter16_reg <= exitcond_i1_reg_2271_pp3_iter15_reg;
        exitcond_i1_reg_2271_pp3_iter17_reg <= exitcond_i1_reg_2271_pp3_iter16_reg;
        exitcond_i1_reg_2271_pp3_iter18_reg <= exitcond_i1_reg_2271_pp3_iter17_reg;
        exitcond_i1_reg_2271_pp3_iter19_reg <= exitcond_i1_reg_2271_pp3_iter18_reg;
        exitcond_i1_reg_2271_pp3_iter20_reg <= exitcond_i1_reg_2271_pp3_iter19_reg;
        exitcond_i1_reg_2271_pp3_iter21_reg <= exitcond_i1_reg_2271_pp3_iter20_reg;
        exitcond_i1_reg_2271_pp3_iter22_reg <= exitcond_i1_reg_2271_pp3_iter21_reg;
        exitcond_i1_reg_2271_pp3_iter23_reg <= exitcond_i1_reg_2271_pp3_iter22_reg;
        exitcond_i1_reg_2271_pp3_iter24_reg <= exitcond_i1_reg_2271_pp3_iter23_reg;
        exitcond_i1_reg_2271_pp3_iter25_reg <= exitcond_i1_reg_2271_pp3_iter24_reg;
        exitcond_i1_reg_2271_pp3_iter26_reg <= exitcond_i1_reg_2271_pp3_iter25_reg;
        exitcond_i1_reg_2271_pp3_iter27_reg <= exitcond_i1_reg_2271_pp3_iter26_reg;
        exitcond_i1_reg_2271_pp3_iter28_reg <= exitcond_i1_reg_2271_pp3_iter27_reg;
        exitcond_i1_reg_2271_pp3_iter29_reg <= exitcond_i1_reg_2271_pp3_iter28_reg;
        exitcond_i1_reg_2271_pp3_iter2_reg <= exitcond_i1_reg_2271_pp3_iter1_reg;
        exitcond_i1_reg_2271_pp3_iter30_reg <= exitcond_i1_reg_2271_pp3_iter29_reg;
        exitcond_i1_reg_2271_pp3_iter31_reg <= exitcond_i1_reg_2271_pp3_iter30_reg;
        exitcond_i1_reg_2271_pp3_iter3_reg <= exitcond_i1_reg_2271_pp3_iter2_reg;
        exitcond_i1_reg_2271_pp3_iter4_reg <= exitcond_i1_reg_2271_pp3_iter3_reg;
        exitcond_i1_reg_2271_pp3_iter5_reg <= exitcond_i1_reg_2271_pp3_iter4_reg;
        exitcond_i1_reg_2271_pp3_iter6_reg <= exitcond_i1_reg_2271_pp3_iter5_reg;
        exitcond_i1_reg_2271_pp3_iter7_reg <= exitcond_i1_reg_2271_pp3_iter6_reg;
        exitcond_i1_reg_2271_pp3_iter8_reg <= exitcond_i1_reg_2271_pp3_iter7_reg;
        exitcond_i1_reg_2271_pp3_iter9_reg <= exitcond_i1_reg_2271_pp3_iter8_reg;
        is_neg_reg_2291_pp3_iter2_reg <= is_neg_reg_2291;
        is_neg_reg_2291_pp3_iter3_reg <= is_neg_reg_2291_pp3_iter2_reg;
        is_neg_reg_2291_pp3_iter4_reg <= is_neg_reg_2291_pp3_iter3_reg;
        msb_idx_reg_2312_pp3_iter3_reg <= msb_idx_reg_2312;
        msb_idx_reg_2312_pp3_iter4_reg <= msb_idx_reg_2312_pp3_iter3_reg;
        p_output_val_V_addr_4_reg_2280_pp3_iter10_reg <= p_output_val_V_addr_4_reg_2280_pp3_iter9_reg;
        p_output_val_V_addr_4_reg_2280_pp3_iter11_reg <= p_output_val_V_addr_4_reg_2280_pp3_iter10_reg;
        p_output_val_V_addr_4_reg_2280_pp3_iter12_reg <= p_output_val_V_addr_4_reg_2280_pp3_iter11_reg;
        p_output_val_V_addr_4_reg_2280_pp3_iter13_reg <= p_output_val_V_addr_4_reg_2280_pp3_iter12_reg;
        p_output_val_V_addr_4_reg_2280_pp3_iter14_reg <= p_output_val_V_addr_4_reg_2280_pp3_iter13_reg;
        p_output_val_V_addr_4_reg_2280_pp3_iter15_reg <= p_output_val_V_addr_4_reg_2280_pp3_iter14_reg;
        p_output_val_V_addr_4_reg_2280_pp3_iter16_reg <= p_output_val_V_addr_4_reg_2280_pp3_iter15_reg;
        p_output_val_V_addr_4_reg_2280_pp3_iter17_reg <= p_output_val_V_addr_4_reg_2280_pp3_iter16_reg;
        p_output_val_V_addr_4_reg_2280_pp3_iter18_reg <= p_output_val_V_addr_4_reg_2280_pp3_iter17_reg;
        p_output_val_V_addr_4_reg_2280_pp3_iter19_reg <= p_output_val_V_addr_4_reg_2280_pp3_iter18_reg;
        p_output_val_V_addr_4_reg_2280_pp3_iter20_reg <= p_output_val_V_addr_4_reg_2280_pp3_iter19_reg;
        p_output_val_V_addr_4_reg_2280_pp3_iter21_reg <= p_output_val_V_addr_4_reg_2280_pp3_iter20_reg;
        p_output_val_V_addr_4_reg_2280_pp3_iter22_reg <= p_output_val_V_addr_4_reg_2280_pp3_iter21_reg;
        p_output_val_V_addr_4_reg_2280_pp3_iter23_reg <= p_output_val_V_addr_4_reg_2280_pp3_iter22_reg;
        p_output_val_V_addr_4_reg_2280_pp3_iter24_reg <= p_output_val_V_addr_4_reg_2280_pp3_iter23_reg;
        p_output_val_V_addr_4_reg_2280_pp3_iter25_reg <= p_output_val_V_addr_4_reg_2280_pp3_iter24_reg;
        p_output_val_V_addr_4_reg_2280_pp3_iter26_reg <= p_output_val_V_addr_4_reg_2280_pp3_iter25_reg;
        p_output_val_V_addr_4_reg_2280_pp3_iter27_reg <= p_output_val_V_addr_4_reg_2280_pp3_iter26_reg;
        p_output_val_V_addr_4_reg_2280_pp3_iter28_reg <= p_output_val_V_addr_4_reg_2280_pp3_iter27_reg;
        p_output_val_V_addr_4_reg_2280_pp3_iter29_reg <= p_output_val_V_addr_4_reg_2280_pp3_iter28_reg;
        p_output_val_V_addr_4_reg_2280_pp3_iter2_reg <= p_output_val_V_addr_4_reg_2280_pp3_iter1_reg;
        p_output_val_V_addr_4_reg_2280_pp3_iter30_reg <= p_output_val_V_addr_4_reg_2280_pp3_iter29_reg;
        p_output_val_V_addr_4_reg_2280_pp3_iter31_reg <= p_output_val_V_addr_4_reg_2280_pp3_iter30_reg;
        p_output_val_V_addr_4_reg_2280_pp3_iter3_reg <= p_output_val_V_addr_4_reg_2280_pp3_iter2_reg;
        p_output_val_V_addr_4_reg_2280_pp3_iter4_reg <= p_output_val_V_addr_4_reg_2280_pp3_iter3_reg;
        p_output_val_V_addr_4_reg_2280_pp3_iter5_reg <= p_output_val_V_addr_4_reg_2280_pp3_iter4_reg;
        p_output_val_V_addr_4_reg_2280_pp3_iter6_reg <= p_output_val_V_addr_4_reg_2280_pp3_iter5_reg;
        p_output_val_V_addr_4_reg_2280_pp3_iter7_reg <= p_output_val_V_addr_4_reg_2280_pp3_iter6_reg;
        p_output_val_V_addr_4_reg_2280_pp3_iter8_reg <= p_output_val_V_addr_4_reg_2280_pp3_iter7_reg;
        p_output_val_V_addr_4_reg_2280_pp3_iter9_reg <= p_output_val_V_addr_4_reg_2280_pp3_iter8_reg;
        tmp_82_reg_2286_pp3_iter2_reg <= tmp_82_reg_2286;
        tmp_82_reg_2286_pp3_iter3_reg <= tmp_82_reg_2286_pp3_iter2_reg;
        tmp_82_reg_2286_pp3_iter4_reg <= tmp_82_reg_2286_pp3_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        exitcond_i_reg_2222 <= exitcond_i_fu_1103_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        i_10_reg_2401 <= i_10_fu_1751_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        i_11_reg_2212 <= i_11_fu_1085_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_6_reg_1993 <= i_6_fu_651_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_7_reg_1984 <= i_7_fu_639_p2;
        i_cast_reg_1976[3 : 0] <= i_cast_fu_629_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        i_8_reg_2261 <= i_8_fu_1163_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        i_9_reg_2059 <= i_9_fu_788_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (exitcond_i1_reg_2271 == 1'd0))) begin
        is_neg_reg_2291 <= p_Val2_30_fu_1211_p2[32'd32];
        num_zeros_reg_2307 <= num_zeros_fu_1279_p1;
        p_Val2_32_cast_reg_2301[31 : 0] <= p_Val2_32_cast_fu_1249_p1[31 : 0];
        p_Val2_43_reg_2296 <= p_Val2_43_fu_1241_p3;
        tmp_82_reg_2286 <= tmp_82_fu_1221_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (exitcond_i1_reg_2271_pp3_iter30_reg == 1'd0))) begin
        isneg_reg_2357 <= ireg_V_fu_1478_p1[32'd63];
        tmp_103_reg_2368 <= tmp_103_fu_1512_p2;
        tmp_104_reg_2374 <= tmp_104_fu_1524_p2;
        tmp_105_reg_2381 <= tmp_105_fu_1530_p2;
        tmp_106_reg_2386 <= tmp_106_fu_1536_p2;
        tmp_107_reg_2391 <= tmp_107_fu_1542_p2;
        tmp_176_reg_2363 <= tmp_176_fu_1508_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        j_5_reg_2014 <= j_5_fu_701_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        j_6_reg_2420 <= j_6_fu_1792_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        j_8_reg_2198 <= j_8_fu_930_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (tmp_82_reg_2286 == 1'd0) & (exitcond_i1_reg_2271_pp3_iter1_reg == 1'd0))) begin
        msb_idx_reg_2312 <= msb_idx_fu_1283_p2;
        tmp32_V_3_reg_2317 <= tmp32_V_3_fu_1399_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (tmp_82_reg_2286_pp3_iter3_reg == 1'd0) & (exitcond_i1_reg_2271_pp3_iter3_reg == 1'd0))) begin
        p_Result_s_203_reg_2327 <= {{tmp32_V_11_fu_1407_p1[30:23]}};
        tmp32_V_11_reg_2322 <= tmp32_V_11_fu_1407_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        p_kernel_cols_reg_2050 <= convlayer2_k_cols_q0;
        p_kernel_rows_reg_2045 <= convlayer2_k_rows_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((j_0_i_reg_488 == 3'd0) & (i_0_i_reg_476 == 3'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        p_kernel_val_V_0_0_s_fu_178 <= p_kernel_val_4_V_0_s_fu_950_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j_0_i_reg_488 == 3'd1) & (i_0_i_reg_476 == 3'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        p_kernel_val_V_0_1_s_fu_182 <= p_kernel_val_4_V_0_s_fu_950_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j_0_i_reg_488 == 3'd2) & (i_0_i_reg_476 == 3'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        p_kernel_val_V_0_2_s_fu_186 <= p_kernel_val_4_V_0_s_fu_950_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j_0_i_reg_488 == 3'd3) & (i_0_i_reg_476 == 3'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        p_kernel_val_V_0_3_s_fu_190 <= p_kernel_val_4_V_0_s_fu_950_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(j_0_i_reg_488 == 3'd3) & ~(j_0_i_reg_488 == 3'd2) & ~(j_0_i_reg_488 == 3'd1) & ~(j_0_i_reg_488 == 3'd0) & (i_0_i_reg_476 == 3'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        p_kernel_val_V_0_4_s_fu_194 <= p_kernel_val_4_V_0_s_fu_950_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j_0_i_reg_488 == 3'd0) & (i_0_i_reg_476 == 3'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        p_kernel_val_V_1_0_s_fu_198 <= p_kernel_val_4_V_0_s_fu_950_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j_0_i_reg_488 == 3'd1) & (i_0_i_reg_476 == 3'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        p_kernel_val_V_1_1_s_fu_202 <= p_kernel_val_4_V_0_s_fu_950_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j_0_i_reg_488 == 3'd2) & (i_0_i_reg_476 == 3'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        p_kernel_val_V_1_2_s_fu_206 <= p_kernel_val_4_V_0_s_fu_950_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j_0_i_reg_488 == 3'd3) & (i_0_i_reg_476 == 3'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        p_kernel_val_V_1_3_s_fu_210 <= p_kernel_val_4_V_0_s_fu_950_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(j_0_i_reg_488 == 3'd3) & ~(j_0_i_reg_488 == 3'd2) & ~(j_0_i_reg_488 == 3'd1) & ~(j_0_i_reg_488 == 3'd0) & (i_0_i_reg_476 == 3'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        p_kernel_val_V_1_4_s_fu_214 <= p_kernel_val_4_V_0_s_fu_950_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j_0_i_reg_488 == 3'd0) & (i_0_i_reg_476 == 3'd2) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        p_kernel_val_V_2_0_s_fu_218 <= p_kernel_val_4_V_0_s_fu_950_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j_0_i_reg_488 == 3'd1) & (i_0_i_reg_476 == 3'd2) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        p_kernel_val_V_2_1_s_fu_222 <= p_kernel_val_4_V_0_s_fu_950_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j_0_i_reg_488 == 3'd2) & (i_0_i_reg_476 == 3'd2) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        p_kernel_val_V_2_2_s_fu_226 <= p_kernel_val_4_V_0_s_fu_950_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j_0_i_reg_488 == 3'd3) & (i_0_i_reg_476 == 3'd2) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        p_kernel_val_V_2_3_s_fu_230 <= p_kernel_val_4_V_0_s_fu_950_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(j_0_i_reg_488 == 3'd3) & ~(j_0_i_reg_488 == 3'd2) & ~(j_0_i_reg_488 == 3'd1) & ~(j_0_i_reg_488 == 3'd0) & (i_0_i_reg_476 == 3'd2) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        p_kernel_val_V_2_4_s_fu_234 <= p_kernel_val_4_V_0_s_fu_950_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j_0_i_reg_488 == 3'd0) & (i_0_i_reg_476 == 3'd3) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        p_kernel_val_V_3_0_s_fu_238 <= p_kernel_val_4_V_0_s_fu_950_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j_0_i_reg_488 == 3'd1) & (i_0_i_reg_476 == 3'd3) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        p_kernel_val_V_3_1_s_fu_242 <= p_kernel_val_4_V_0_s_fu_950_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j_0_i_reg_488 == 3'd2) & (i_0_i_reg_476 == 3'd3) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        p_kernel_val_V_3_2_s_fu_246 <= p_kernel_val_4_V_0_s_fu_950_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j_0_i_reg_488 == 3'd3) & (i_0_i_reg_476 == 3'd3) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        p_kernel_val_V_3_3_s_fu_250 <= p_kernel_val_4_V_0_s_fu_950_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(j_0_i_reg_488 == 3'd3) & ~(j_0_i_reg_488 == 3'd2) & ~(j_0_i_reg_488 == 3'd1) & ~(j_0_i_reg_488 == 3'd0) & (i_0_i_reg_476 == 3'd3) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        p_kernel_val_V_3_4_s_fu_254 <= p_kernel_val_4_V_0_s_fu_950_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(i_0_i_reg_476 == 3'd3) & ~(i_0_i_reg_476 == 3'd2) & ~(i_0_i_reg_476 == 3'd1) & ~(i_0_i_reg_476 == 3'd0) & (j_0_i_reg_488 == 3'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        p_kernel_val_V_4_0_s_fu_258 <= p_kernel_val_4_V_0_s_fu_950_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(i_0_i_reg_476 == 3'd3) & ~(i_0_i_reg_476 == 3'd2) & ~(i_0_i_reg_476 == 3'd1) & ~(i_0_i_reg_476 == 3'd0) & (j_0_i_reg_488 == 3'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        p_kernel_val_V_4_1_s_fu_262 <= p_kernel_val_4_V_0_s_fu_950_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(i_0_i_reg_476 == 3'd3) & ~(i_0_i_reg_476 == 3'd2) & ~(i_0_i_reg_476 == 3'd1) & ~(i_0_i_reg_476 == 3'd0) & (j_0_i_reg_488 == 3'd2) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        p_kernel_val_V_4_2_s_fu_266 <= p_kernel_val_4_V_0_s_fu_950_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(i_0_i_reg_476 == 3'd3) & ~(i_0_i_reg_476 == 3'd2) & ~(i_0_i_reg_476 == 3'd1) & ~(i_0_i_reg_476 == 3'd0) & (j_0_i_reg_488 == 3'd3) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        p_kernel_val_V_4_3_s_fu_270 <= p_kernel_val_4_V_0_s_fu_950_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(i_0_i_reg_476 == 3'd3) & ~(i_0_i_reg_476 == 3'd2) & ~(i_0_i_reg_476 == 3'd1) & ~(j_0_i_reg_488 == 3'd3) & ~(j_0_i_reg_488 == 3'd2) & ~(j_0_i_reg_488 == 3'd1) & ~(j_0_i_reg_488 == 3'd0) & ~(i_0_i_reg_476 == 3'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        p_kernel_val_V_4_4_s_fu_274 <= p_kernel_val_4_V_0_s_fu_950_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (exitcond_i1_fu_1181_p2 == 1'd0))) begin
        p_output_val_V_addr_4_reg_2280 <= tmp_155_cast_fu_1202_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond_i_fu_1103_p2 == 1'd0))) begin
        p_output_val_V_addr_6_reg_2236 <= tmp_161_cast_fu_1124_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (exitcond_i1_reg_2271_pp3_iter29_reg == 1'd0))) begin
        tmp_100_reg_2352 <= grp_fu_624_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (exitcond_fu_695_p2 == 1'd0))) begin
        tmp_137_reg_2019 <= tmp_137_fu_772_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (exitcond7_fu_645_p2 == 1'd0))) begin
        tmp_138_cast_reg_1998[6 : 3] <= tmp_138_cast_fu_665_p1[6 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        tmp_140_cast_reg_2242[6 : 3] <= tmp_140_cast_fu_1145_p1[6 : 3];
        tmp_65_reg_2252 <= tmp_65_fu_1153_p1;
        tmp_71_reg_2247 <= tmp_71_fu_1149_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (exitcond3_fu_783_p2 == 1'd0))) begin
        tmp_141_reg_2064 <= tmp_141_fu_819_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) & (exitcond2_i_fu_1157_p2 == 1'd0))) begin
        tmp_146_cast_reg_2266[6 : 3] <= tmp_146_cast_fu_1177_p1[6 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state53) & (exitcond5_fu_1745_p2 == 1'd0))) begin
        tmp_152_cast_reg_2406[10 : 3] <= tmp_152_cast_fu_1766_p3[10 : 3];
        tmp_154_cast_reg_2411[6 : 3] <= tmp_154_cast_fu_1782_p1[6 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (exitcond8_i_fu_1079_p2 == 1'd0))) begin
        tmp_157_cast_reg_2217[6 : 3] <= tmp_157_cast_fu_1099_p1[6 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (exitcond_fu_695_p2 == 1'd1))) begin
        tmp_70_reg_2034[3 : 0] <= tmp_70_fu_778_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (exitcond_i1_reg_2271_pp3_iter10_reg == 1'd0))) begin
        tmp_96_reg_2342 <= tmp_96_fu_607_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (exitcond_i1_reg_2271_pp3_iter14_reg == 1'd0))) begin
        tmp_99_reg_2347 <= grp_fu_619_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (exitcond_i1_reg_2271_pp3_iter9_reg == 1'd0))) begin
        tmp_i_i_reg_2337 <= grp_fu_614_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (exitcond_i1_reg_2271_pp3_iter4_reg == 1'd0))) begin
        x_assign_reg_2332 <= x_assign_fu_1471_p3;
    end
end

always @ (*) begin
    if ((exitcond1_fu_925_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state9 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state9 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_i_fu_1103_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state14 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state14 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_i1_fu_1181_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state19 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state19 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond4_fu_1786_p2 == 1'd1)) begin
        ap_condition_pp4_exit_iter0_state54 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter0_state54 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state2) & (exitcond2_fu_633_p2 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter32 == 1'b0) & (ap_enable_reg_pp3_iter31 == 1'b0) & (ap_enable_reg_pp3_iter30 == 1'b0) & (ap_enable_reg_pp3_iter29 == 1'b0) & (ap_enable_reg_pp3_iter28 == 1'b0) & (ap_enable_reg_pp3_iter27 == 1'b0) & (ap_enable_reg_pp3_iter26 == 1'b0) & (ap_enable_reg_pp3_iter25 == 1'b0) & (ap_enable_reg_pp3_iter24 == 1'b0) & (ap_enable_reg_pp3_iter23 == 1'b0) & (ap_enable_reg_pp3_iter22 == 1'b0) & (ap_enable_reg_pp3_iter21 == 1'b0) & (ap_enable_reg_pp3_iter20 == 1'b0) & (ap_enable_reg_pp3_iter19 == 1'b0) & (ap_enable_reg_pp3_iter18 == 1'b0) & (ap_enable_reg_pp3_iter17 == 1'b0) & (ap_enable_reg_pp3_iter16 == 1'b0) & (ap_enable_reg_pp3_iter15 == 1'b0) & (ap_enable_reg_pp3_iter14 == 1'b0) & (ap_enable_reg_pp3_iter13 == 1'b0) & (ap_enable_reg_pp3_iter12 == 1'b0) & (ap_enable_reg_pp3_iter11 == 1'b0) & (ap_enable_reg_pp3_iter10 == 1'b0) & (ap_enable_reg_pp3_iter9 == 1'b0) & (ap_enable_reg_pp3_iter8 == 1'b0) & (ap_enable_reg_pp3_iter7 == 1'b0) & (ap_enable_reg_pp3_iter6 == 1'b0) & (ap_enable_reg_pp3_iter5 == 1'b0) & (ap_enable_reg_pp3_iter4 == 1'b0) & (ap_enable_reg_pp3_iter3 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (exitcond4_reg_2416 == 1'd0))) begin
        ap_phi_mux_j_0_i3_phi_fu_559_p4 = j_6_reg_2420;
    end else begin
        ap_phi_mux_j_0_i3_phi_fu_559_p4 = j_0_i3_reg_555;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond1_reg_2194 == 1'd0))) begin
        ap_phi_mux_j_0_i_phi_fu_492_p4 = j_8_reg_2198;
    end else begin
        ap_phi_mux_j_0_i_phi_fu_492_p4 = j_0_i_reg_488;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond2_fu_633_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        convlayer2_b_V_ce0 = 1'b1;
    end else begin
        convlayer2_b_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        convlayer2_k_cols_ce0 = 1'b1;
    end else begin
        convlayer2_k_cols_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        convlayer2_k_rows_ce0 = 1'b1;
    end else begin
        convlayer2_k_rows_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        convlayer2_k_val_V_ce0 = 1'b1;
    end else begin
        convlayer2_k_val_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        convlayer_output_cols_ce0 = 1'b1;
    end else begin
        convlayer_output_cols_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) & (exitcond2_i_fu_1157_p2 == 1'd1))) begin
        convlayer_output_cols_we0 = 1'b1;
    end else begin
        convlayer_output_cols_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        convlayer_output_rows_ce0 = 1'b1;
    end else begin
        convlayer_output_rows_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) & (exitcond2_i_fu_1157_p2 == 1'd1))) begin
        convlayer_output_rows_we0 = 1'b1;
    end else begin
        convlayer_output_rows_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        convlayer_output_val_V_ce0 = 1'b1;
    end else begin
        convlayer_output_val_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (exitcond4_reg_2416 == 1'd0))) begin
        convlayer_output_val_V_we0 = 1'b1;
    end else begin
        convlayer_output_val_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter32 == 1'b1))) begin
        p_output_val_V_address0 = p_output_val_V_addr_4_reg_2280_pp3_iter31_reg;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        p_output_val_V_address0 = tmp_161_cast_fu_1124_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        p_output_val_V_address0 = tmp_144_cast_fu_690_p1;
    end else begin
        p_output_val_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        p_output_val_V_address1 = tmp_160_cast_fu_1807_p1;
    end else if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        p_output_val_V_address1 = tmp_155_cast_fu_1202_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        p_output_val_V_address1 = p_output_val_V_addr_6_reg_2236;
    end else begin
        p_output_val_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter32 == 1'b1)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
        p_output_val_V_ce0 = 1'b1;
    end else begin
        p_output_val_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
        p_output_val_V_ce1 = 1'b1;
    end else begin
        p_output_val_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter32 == 1'b1))) begin
        p_output_val_V_d0 = newSel3_fu_1736_p3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        p_output_val_V_d0 = 32'd0;
    end else begin
        p_output_val_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter32 == 1'b1) & (exitcond_i1_reg_2271_pp3_iter31_reg == 1'd0)) | ((1'b1 == ap_CS_fsm_state4) & (exitcond6_fu_669_p2 == 1'd0)))) begin
        p_output_val_V_we0 = 1'b1;
    end else begin
        p_output_val_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond_i_reg_2222 == 1'd0))) begin
        p_output_val_V_we1 = 1'b1;
    end else begin
        p_output_val_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        p_temp_val_V_address0 = tmp_161_cast_fu_1124_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        p_temp_val_V_address0 = grp_Conv10_fu_567_dst_val_V_address0;
    end else begin
        p_temp_val_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        p_temp_val_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        p_temp_val_V_ce0 = grp_Conv10_fu_567_dst_val_V_ce0;
    end else begin
        p_temp_val_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        p_temp_val_V_we0 = grp_Conv10_fu_567_dst_val_V_we0;
    end else begin
        p_temp_val_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (exitcond2_fu_633_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (exitcond7_fu_645_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (exitcond6_fu_669_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (exitcond_fu_695_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (exitcond3_fu_783_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (exitcond1_fu_925_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (exitcond1_fu_925_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state12 : begin
            if (((grp_Conv10_fu_567_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == ap_CS_fsm_state13) & (exitcond8_i_fu_1079_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_pp2_stage0 : begin
            if (~((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter0 == 1'b1) & (exitcond_i_fu_1103_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter0 == 1'b1) & (exitcond_i_fu_1103_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            if (((1'b1 == ap_CS_fsm_state18) & (exitcond2_i_fu_1157_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter0 == 1'b1) & (exitcond_i1_fu_1181_p2 == 1'd1)) & ~((ap_enable_reg_pp3_iter31 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter32 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((ap_enable_reg_pp3_iter31 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter32 == 1'b1)) | ((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter0 == 1'b1) & (exitcond_i1_fu_1181_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state53 : begin
            if (((1'b1 == ap_CS_fsm_state53) & (exitcond5_fu_1745_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_pp4_stage0 : begin
            if (~((1'b0 == ap_block_pp4_stage0_subdone) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond4_fu_1786_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if (((1'b0 == ap_block_pp4_stage0_subdone) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond4_fu_1786_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state56;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_fu_1518_p2 = (12'd1075 - tmp_101_fu_1504_p1);

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp3_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp3_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp3_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp3_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp3_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp3_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp3_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp3_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp3_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp3_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp3_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp3_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp3_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp3_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp3_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp3_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp3_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp3_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp3_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp3_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp3_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp3_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp3_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp3_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp3_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp3_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp3_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp3_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp3_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp3_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp4_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp4_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

assign convlayer2_b_V_address0 = tmp_70_fu_778_p1;

assign convlayer2_k_cols_address0 = tmp_74_fu_746_p1;

assign convlayer2_k_rows_address0 = tmp_74_fu_746_p1;

assign convlayer2_k_val_V_address0 = tmp_158_cast_fu_945_p1;

assign convlayer_output_cols_address0 = tmp_70_reg_2034;

assign convlayer_output_cols_d0 = 5'd8;

assign convlayer_output_rows_address0 = tmp_70_reg_2034;

assign convlayer_output_rows_d0 = 5'd8;

assign convlayer_output_val_V_address0 = tmp_159_cast_fu_1821_p1;

assign convlayer_output_val_V_d0 = p_output_val_V_q1;

assign exitcond1_fu_925_p2 = ((ap_phi_mux_j_0_i_phi_fu_492_p4 == p_kernel_cols_reg_2050) ? 1'b1 : 1'b0);

assign exitcond2_fu_633_p2 = ((i_reg_430 == 4'd12) ? 1'b1 : 1'b0);

assign exitcond2_i_fu_1157_p2 = ((i_0_i2_reg_522 == 4'd8) ? 1'b1 : 1'b0);

assign exitcond3_fu_783_p2 = ((i_0_i_reg_476 == p_kernel_rows_reg_2045) ? 1'b1 : 1'b0);

assign exitcond4_fu_1786_p2 = ((ap_phi_mux_j_0_i3_phi_fu_559_p4 == 4'd8) ? 1'b1 : 1'b0);

assign exitcond5_fu_1745_p2 = ((i_0_i3_reg_544 == 4'd8) ? 1'b1 : 1'b0);

assign exitcond6_fu_669_p2 = ((j_0_i1_reg_453 == 4'd8) ? 1'b1 : 1'b0);

assign exitcond7_fu_645_p2 = ((i_0_i1_reg_442 == 4'd8) ? 1'b1 : 1'b0);

assign exitcond8_i_fu_1079_p2 = ((i_0_i4_reg_500 == 4'd8) ? 1'b1 : 1'b0);

assign exitcond_fu_695_p2 = ((j_reg_464 == 3'd6) ? 1'b1 : 1'b0);

assign exitcond_i1_fu_1181_p2 = ((j_0_i2_reg_533 == 4'd8) ? 1'b1 : 1'b0);

assign exitcond_i_fu_1103_p2 = ((j_0_i4_reg_511 == 4'd8) ? 1'b1 : 1'b0);

assign exp_tmp_V_fu_1494_p4 = {{ireg_V_fu_1478_p1[62:52]}};

assign grp_Conv10_fu_567_ap_start = grp_Conv10_fu_567_ap_start_reg;

assign i_10_fu_1751_p2 = (i_0_i3_reg_544 + 4'd1);

assign i_11_fu_1085_p2 = (i_0_i4_reg_500 + 4'd1);

assign i_6_fu_651_p2 = (i_0_i1_reg_442 + 4'd1);

assign i_7_fu_639_p2 = (i_reg_430 + 4'd1);

assign i_8_fu_1163_p2 = (i_0_i2_reg_522 + 4'd1);

assign i_9_fu_788_p2 = (i_0_i_reg_476 + 3'd1);

assign i_cast_fu_629_p1 = i_reg_430;

assign icmp1_fu_1601_p2 = ((tmp_178_fu_1591_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_fu_1318_p2 = ((tmp_162_fu_1308_p4 == 26'd0) ? 1'b1 : 1'b0);

assign input_val_V_address0 = grp_Conv10_fu_567_src_val_V_address0;

assign input_val_V_ce0 = grp_Conv10_fu_567_src_val_V_ce0;

assign ireg_V_fu_1478_p1 = d_assign_fu_610_p1;

assign is_neg_fu_1227_p3 = p_Val2_30_fu_1211_p2[32'd32];

assign j_4_fu_675_p2 = (j_0_i1_reg_453 + 4'd1);

assign j_5_fu_701_p2 = (j_reg_464 + 3'd1);

assign j_6_fu_1792_p2 = (ap_phi_mux_j_0_i3_phi_fu_559_p4 + 4'd1);

assign j_7_fu_1109_p2 = (j_0_i4_reg_511 + 4'd1);

assign j_8_fu_930_p2 = (ap_phi_mux_j_0_i_phi_fu_492_p4 + 3'd1);

assign j_9_fu_1187_p2 = (j_0_i2_reg_533 + 4'd1);

assign man_V_1_fu_1559_p2 = (54'd0 - p_Result_7_fu_1555_p1);

assign man_V_2_fu_1565_p3 = ((isneg_reg_2357[0:0] === 1'b1) ? man_V_1_fu_1559_p2 : p_Result_7_fu_1555_p1);

assign msb_idx_1_fu_1300_p3 = ((tmp_157_fu_1292_p3[0:0] === 1'b1) ? 31'd0 : tmp_155_fu_1288_p1);

assign msb_idx_fu_1283_p2 = (32'd32 - num_zeros_reg_2307);

assign newSel1_fu_1708_p3 = ((sel_tmp8_fu_1659_p2[0:0] === 1'b1) ? tmp_179_fu_1617_p1 : tmp_177_fu_1581_p1);

assign newSel2_fu_1722_p3 = ((or_cond_fu_1702_p2[0:0] === 1'b1) ? newSel_fu_1694_p3 : newSel1_fu_1708_p3);

assign newSel3_fu_1736_p3 = ((or_cond2_fu_1730_p2[0:0] === 1'b1) ? newSel2_fu_1722_p3 : 32'd0);

assign newSel_fu_1694_p3 = ((sel_tmp5_fu_1688_p2[0:0] === 1'b1) ? tmp_114_fu_1628_p2 : this_assign_fu_1621_p3);

assign num_zeros_fu_1279_p1 = tmp_83_fu_1271_p3[31:0];

assign or_cond1_fu_1716_p2 = (sel_tmp8_fu_1659_p2 | sel_tmp2_fu_1639_p2);

assign or_cond2_fu_1730_p2 = (or_cond_fu_1702_p2 | or_cond1_fu_1716_p2);

assign or_cond_fu_1702_p2 = (sel_tmp5_fu_1688_p2 | sel_tmp3_fu_1671_p2);

assign p_Repl2_1_trunc_fu_1437_p2 = (tmp_173_fu_1426_p1 + tmp24_cast_cast_fu_1429_p3);

assign p_Result_5_fu_1263_p3 = {{31'd2147483647}, {p_Result_s_fu_1253_p4}};

assign p_Result_6_fu_1450_p5 = {{tmp_95_fu_1443_p3}, {tmp32_V_11_reg_2322[22:0]}};

assign p_Result_7_fu_1555_p1 = tmp_102_fu_1548_p3;

assign p_Result_7_op_fu_1461_p2 = (p_Result_6_fu_1450_p5 ^ 32'd2147483648);

integer ap_tvar_int_0;

always @ (p_Val2_32_cast_fu_1249_p1) begin
    for (ap_tvar_int_0 = 33 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 32 - 0) begin
            p_Result_s_fu_1253_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_s_fu_1253_p4[ap_tvar_int_0] = p_Val2_32_cast_fu_1249_p1[32 - ap_tvar_int_0];
        end
    end
end

assign p_Val2_30_cast_fu_1216_p1 = p_output_val_V_q1;

assign p_Val2_30_cast_fu_1216_p2 = ($signed(tmp_65_reg_2252) + $signed(p_Val2_30_cast_fu_1216_p1));

assign p_Val2_30_fu_1211_p2 = ($signed(tmp_71_reg_2247) + $signed(tmp_81_fu_1207_p1));

assign p_Val2_32_cast_fu_1249_p1 = p_Val2_43_fu_1241_p3;

assign p_Val2_43_fu_1241_p3 = ((is_neg_fu_1227_p3[0:0] === 1'b1) ? tmp_136_cast_fu_1235_p2 : p_Val2_30_cast_fu_1216_p2);

assign p_kernel_val_4_V_0_s_fu_950_p1 = $signed(convlayer2_k_val_V_q0);

assign p_output_val_V_d1 = (p_temp_val_V_q0 + p_output_val_V_q0);

assign p_shl1_cast_fu_768_p1 = $unsigned(tmp_136_fu_764_p1);

assign p_shl2_cast_fu_811_p3 = {{tmp_152_fu_807_p1}, {2'd0}};

assign p_shl8_cast_fu_727_p1 = p_shl8_fu_719_p3;

assign p_shl8_fu_719_p3 = {{j_reg_464}, {2'd0}};

assign p_shl_cast_fu_715_p1 = p_shl_fu_707_p3;

assign p_shl_fu_707_p3 = {{j_reg_464}, {4'd0}};

assign sel_tmp1_fu_1634_p2 = (tmp_103_reg_2368 ^ 1'd1);

assign sel_tmp21_demorgan_fu_1677_p2 = (tmp_104_reg_2374 | sel_tmp6_demorgan_fu_1644_p2);

assign sel_tmp2_fu_1639_p2 = (tmp_107_reg_2391 & sel_tmp1_fu_1634_p2);

assign sel_tmp3_fu_1671_p2 = (sel_tmp_fu_1665_p2 & sel_tmp7_fu_1654_p2);

assign sel_tmp4_fu_1682_p2 = (sel_tmp21_demorgan_fu_1677_p2 ^ 1'd1);

assign sel_tmp5_fu_1688_p2 = (sel_tmp4_fu_1682_p2 & icmp1_fu_1601_p2);

assign sel_tmp6_demorgan_fu_1644_p2 = (tmp_107_reg_2391 | tmp_103_reg_2368);

assign sel_tmp6_fu_1648_p2 = (sel_tmp6_demorgan_fu_1644_p2 ^ 1'd1);

assign sel_tmp7_fu_1654_p2 = (tmp_104_reg_2374 & sel_tmp6_fu_1648_p2);

assign sel_tmp8_fu_1659_p2 = (tmp_109_fu_1585_p2 & sel_tmp7_fu_1654_p2);

assign sel_tmp_fu_1665_p2 = (tmp_109_fu_1585_p2 ^ 1'd1);

assign sh_amt_cast_fu_1577_p1 = sh_amt_fu_1572_p3;

assign sh_amt_fu_1572_p3 = ((tmp_104_reg_2374[0:0] === 1'b1) ? tmp_105_reg_2381 : tmp_106_reg_2386);

assign this_assign_fu_1621_p3 = ((isneg_reg_2357[0:0] === 1'b1) ? 32'd4294967295 : 32'd0);

assign tmp24_cast_cast_fu_1429_p3 = ((tmp_91_fu_1421_p2[0:0] === 1'b1) ? 8'd112 : 8'd111);

assign tmp32_V_11_fu_1407_p1 = grp_fu_601_p1;

assign tmp32_V_1_fu_1334_p2 = p_Val2_43_reg_2296 << tmp_141_cast_fu_1330_p1;

assign tmp32_V_3_fu_1399_p3 = ((icmp_fu_1318_p2[0:0] === 1'b1) ? tmp32_V_1_fu_1334_p2 : tmp32_V_fu_1395_p1);

assign tmp32_V_fu_1395_p1 = tmp_171_fu_1389_p2[31:0];

assign tmp_101_fu_1504_p1 = exp_tmp_V_fu_1494_p4;

assign tmp_102_fu_1548_p3 = {{1'd1}, {tmp_176_reg_2363}};

assign tmp_103_fu_1512_p2 = ((tmp_174_fu_1482_p1 == 63'd0) ? 1'b1 : 1'b0);

assign tmp_104_fu_1524_p2 = (($signed(F2_fu_1518_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign tmp_105_fu_1530_p2 = ($signed(12'd4080) + $signed(F2_fu_1518_p2));

assign tmp_106_fu_1536_p2 = (12'd16 - F2_fu_1518_p2);

assign tmp_107_fu_1542_p2 = ((F2_fu_1518_p2 == 12'd16) ? 1'b1 : 1'b0);

assign tmp_109_fu_1585_p2 = ((sh_amt_fu_1572_p3 < 12'd54) ? 1'b1 : 1'b0);

assign tmp_111_fu_1607_p1 = $unsigned(sh_amt_cast_fu_1577_p1);

assign tmp_112_fu_1611_p2 = $signed(man_V_2_fu_1565_p3) >>> tmp_111_fu_1607_p1;

assign tmp_114_fu_1628_p2 = tmp_177_fu_1581_p1 << sh_amt_cast_fu_1577_p1;

assign tmp_121_cast_fu_742_p1 = tmp_73_fu_737_p2;

assign tmp_134_fu_1137_p3 = {{i_reg_430}, {3'd0}};

assign tmp_135_fu_756_p3 = {{tmp_73_fu_737_p2}, {2'd0}};

assign tmp_136_cast_fu_1235_p2 = (32'd0 - p_Val2_30_cast_fu_1216_p2);

assign tmp_136_fu_764_p1 = $signed(tmp_135_fu_756_p3);

assign tmp_137_fu_772_p2 = (p_shl1_cast_fu_768_p1 + tmp_74_cast_fu_752_p1);

assign tmp_138_cast_fu_665_p1 = tmp_s_fu_657_p3;

assign tmp_138_fu_685_p2 = (tmp_138_cast_reg_1998 + tmp_75_cast_fu_681_p1);

assign tmp_139_fu_1169_p3 = {{i_0_i2_reg_522}, {3'd0}};

assign tmp_140_cast_fu_1145_p1 = tmp_134_fu_1137_p3;

assign tmp_140_fu_798_p2 = (tmp_77_cast_fu_794_p1 + tmp_137_reg_2019);

assign tmp_141_cast_fu_1330_p1 = tmp_86_fu_1324_p2;

assign tmp_141_fu_819_p2 = (p_shl2_cast_fu_811_p3 + tmp_151_fu_803_p1);

assign tmp_142_fu_1761_p2 = (tmp_78_cast_fu_1757_p1 + tmp_140_cast_reg_2242);

assign tmp_143_fu_1774_p3 = {{i_0_i3_reg_544}, {3'd0}};

assign tmp_144_cast_fu_690_p1 = tmp_138_fu_685_p2;

assign tmp_144_fu_1197_p2 = (tmp_80_cast_fu_1193_p1 + tmp_146_cast_reg_2266);

assign tmp_145_fu_1091_p3 = {{i_0_i4_reg_500}, {3'd0}};

assign tmp_146_cast_fu_1177_p1 = tmp_139_fu_1169_p3;

assign tmp_146_fu_940_p2 = (tmp_141_reg_2064 + tmp_89_cast_fu_936_p1);

assign tmp_147_fu_1816_p2 = (tmp_152_cast_reg_2406 + tmp_94_cast_fu_1812_p1);

assign tmp_148_fu_1802_p2 = (tmp_154_cast_reg_2411 + tmp_94_cast1_fu_1798_p1);

assign tmp_149_fu_1119_p2 = (tmp_157_cast_reg_2217 + tmp_98_cast_fu_1115_p1);

assign tmp_151_fu_803_p1 = tmp_140_fu_798_p2[11:0];

assign tmp_152_cast_fu_1766_p3 = {{tmp_142_fu_1761_p2}, {3'd0}};

assign tmp_152_fu_807_p1 = tmp_140_fu_798_p2[9:0];

assign tmp_154_cast_fu_1782_p1 = tmp_143_fu_1774_p3;

assign tmp_155_cast_fu_1202_p1 = tmp_144_fu_1197_p2;

assign tmp_155_fu_1288_p1 = msb_idx_fu_1283_p2[30:0];

assign tmp_157_cast_fu_1099_p1 = tmp_145_fu_1091_p3;

assign tmp_157_fu_1292_p3 = msb_idx_fu_1283_p2[32'd31];

assign tmp_158_cast_fu_945_p1 = tmp_146_fu_940_p2;

assign tmp_159_cast_fu_1821_p1 = tmp_147_fu_1816_p2;

assign tmp_160_cast_fu_1807_p1 = tmp_148_fu_1802_p2;

assign tmp_161_cast_fu_1124_p1 = tmp_149_fu_1119_p2;

assign tmp_162_fu_1308_p4 = {{msb_idx_1_fu_1300_p3[30:5]}};

assign tmp_163_fu_1339_p1 = msb_idx_1_fu_1300_p3[5:0];

assign tmp_164_fu_1343_p2 = ((msb_idx_1_fu_1300_p3 < 31'd31) ? 1'b1 : 1'b0);

assign tmp_165_fu_1349_p2 = ($signed(6'd33) + $signed(tmp_163_fu_1339_p1));

integer ap_tvar_int_1;

always @ (p_Val2_32_cast_reg_2301) begin
    for (ap_tvar_int_1 = 33 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 32 - 0) begin
            tmp_166_fu_1355_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            tmp_166_fu_1355_p4[ap_tvar_int_1] = p_Val2_32_cast_reg_2301[32 - ap_tvar_int_1];
        end
    end
end

assign tmp_167_fu_1364_p2 = (tmp_163_fu_1339_p1 ^ 6'd63);

assign tmp_168_fu_1370_p3 = ((tmp_164_fu_1343_p2[0:0] === 1'b1) ? tmp_166_fu_1355_p4 : p_Val2_32_cast_reg_2301);

assign tmp_169_fu_1377_p3 = ((tmp_164_fu_1343_p2[0:0] === 1'b1) ? tmp_167_fu_1364_p2 : tmp_165_fu_1349_p2);

assign tmp_170_fu_1385_p1 = tmp_169_fu_1377_p3;

assign tmp_171_fu_1389_p2 = tmp_168_fu_1370_p3 >> tmp_170_fu_1385_p1;

assign tmp_173_fu_1426_p1 = msb_idx_reg_2312_pp3_iter4_reg[7:0];

assign tmp_174_fu_1482_p1 = ireg_V_fu_1478_p1[62:0];

assign tmp_176_fu_1508_p1 = ireg_V_fu_1478_p1[51:0];

assign tmp_177_fu_1581_p1 = man_V_2_fu_1565_p3[31:0];

assign tmp_178_fu_1591_p4 = {{sh_amt_fu_1572_p3[11:5]}};

assign tmp_179_fu_1617_p1 = tmp_112_fu_1611_p2[31:0];

assign tmp_65_fu_1153_p0 = convlayer2_b_V_q0;

assign tmp_65_fu_1153_p1 = tmp_65_fu_1153_p0;

assign tmp_66_fu_1467_p1 = p_Result_7_op_fu_1461_p2;

assign tmp_70_fu_778_p1 = i_reg_430;

assign tmp_71_fu_1149_p0 = convlayer2_b_V_q0;

assign tmp_71_fu_1149_p1 = tmp_71_fu_1149_p0;

assign tmp_72_fu_731_p2 = (p_shl_cast_fu_715_p1 - p_shl8_cast_fu_727_p1);

assign tmp_73_fu_737_p2 = (tmp_72_fu_731_p2 + i_cast_reg_1976);

assign tmp_74_cast_fu_752_p1 = $unsigned(tmp_121_cast_fu_742_p1);

assign tmp_74_fu_746_p1 = $unsigned(tmp_121_cast_fu_742_p1);

assign tmp_75_cast_fu_681_p1 = j_0_i1_reg_453;

assign tmp_77_cast_fu_794_p1 = i_0_i_reg_476;

assign tmp_78_cast_fu_1757_p1 = i_0_i3_reg_544;

assign tmp_80_cast_fu_1193_p1 = j_0_i2_reg_533;

assign tmp_81_fu_1207_p0 = p_output_val_V_q1;

assign tmp_81_fu_1207_p1 = tmp_81_fu_1207_p0;

assign tmp_82_fu_1221_p2 = ((p_Val2_30_fu_1211_p2 == 33'd0) ? 1'b1 : 1'b0);


always @ (p_Result_5_fu_1263_p3) begin
    if (p_Result_5_fu_1263_p3[0] == 1'b1) begin
        tmp_83_fu_1271_p3 = 64'd0;
    end else if (p_Result_5_fu_1263_p3[1] == 1'b1) begin
        tmp_83_fu_1271_p3 = 64'd1;
    end else if (p_Result_5_fu_1263_p3[2] == 1'b1) begin
        tmp_83_fu_1271_p3 = 64'd2;
    end else if (p_Result_5_fu_1263_p3[3] == 1'b1) begin
        tmp_83_fu_1271_p3 = 64'd3;
    end else if (p_Result_5_fu_1263_p3[4] == 1'b1) begin
        tmp_83_fu_1271_p3 = 64'd4;
    end else if (p_Result_5_fu_1263_p3[5] == 1'b1) begin
        tmp_83_fu_1271_p3 = 64'd5;
    end else if (p_Result_5_fu_1263_p3[6] == 1'b1) begin
        tmp_83_fu_1271_p3 = 64'd6;
    end else if (p_Result_5_fu_1263_p3[7] == 1'b1) begin
        tmp_83_fu_1271_p3 = 64'd7;
    end else if (p_Result_5_fu_1263_p3[8] == 1'b1) begin
        tmp_83_fu_1271_p3 = 64'd8;
    end else if (p_Result_5_fu_1263_p3[9] == 1'b1) begin
        tmp_83_fu_1271_p3 = 64'd9;
    end else if (p_Result_5_fu_1263_p3[10] == 1'b1) begin
        tmp_83_fu_1271_p3 = 64'd10;
    end else if (p_Result_5_fu_1263_p3[11] == 1'b1) begin
        tmp_83_fu_1271_p3 = 64'd11;
    end else if (p_Result_5_fu_1263_p3[12] == 1'b1) begin
        tmp_83_fu_1271_p3 = 64'd12;
    end else if (p_Result_5_fu_1263_p3[13] == 1'b1) begin
        tmp_83_fu_1271_p3 = 64'd13;
    end else if (p_Result_5_fu_1263_p3[14] == 1'b1) begin
        tmp_83_fu_1271_p3 = 64'd14;
    end else if (p_Result_5_fu_1263_p3[15] == 1'b1) begin
        tmp_83_fu_1271_p3 = 64'd15;
    end else if (p_Result_5_fu_1263_p3[16] == 1'b1) begin
        tmp_83_fu_1271_p3 = 64'd16;
    end else if (p_Result_5_fu_1263_p3[17] == 1'b1) begin
        tmp_83_fu_1271_p3 = 64'd17;
    end else if (p_Result_5_fu_1263_p3[18] == 1'b1) begin
        tmp_83_fu_1271_p3 = 64'd18;
    end else if (p_Result_5_fu_1263_p3[19] == 1'b1) begin
        tmp_83_fu_1271_p3 = 64'd19;
    end else if (p_Result_5_fu_1263_p3[20] == 1'b1) begin
        tmp_83_fu_1271_p3 = 64'd20;
    end else if (p_Result_5_fu_1263_p3[21] == 1'b1) begin
        tmp_83_fu_1271_p3 = 64'd21;
    end else if (p_Result_5_fu_1263_p3[22] == 1'b1) begin
        tmp_83_fu_1271_p3 = 64'd22;
    end else if (p_Result_5_fu_1263_p3[23] == 1'b1) begin
        tmp_83_fu_1271_p3 = 64'd23;
    end else if (p_Result_5_fu_1263_p3[24] == 1'b1) begin
        tmp_83_fu_1271_p3 = 64'd24;
    end else if (p_Result_5_fu_1263_p3[25] == 1'b1) begin
        tmp_83_fu_1271_p3 = 64'd25;
    end else if (p_Result_5_fu_1263_p3[26] == 1'b1) begin
        tmp_83_fu_1271_p3 = 64'd26;
    end else if (p_Result_5_fu_1263_p3[27] == 1'b1) begin
        tmp_83_fu_1271_p3 = 64'd27;
    end else if (p_Result_5_fu_1263_p3[28] == 1'b1) begin
        tmp_83_fu_1271_p3 = 64'd28;
    end else if (p_Result_5_fu_1263_p3[29] == 1'b1) begin
        tmp_83_fu_1271_p3 = 64'd29;
    end else if (p_Result_5_fu_1263_p3[30] == 1'b1) begin
        tmp_83_fu_1271_p3 = 64'd30;
    end else if (p_Result_5_fu_1263_p3[31] == 1'b1) begin
        tmp_83_fu_1271_p3 = 64'd31;
    end else if (p_Result_5_fu_1263_p3[32] == 1'b1) begin
        tmp_83_fu_1271_p3 = 64'd32;
    end else if (p_Result_5_fu_1263_p3[33] == 1'b1) begin
        tmp_83_fu_1271_p3 = 64'd33;
    end else if (p_Result_5_fu_1263_p3[34] == 1'b1) begin
        tmp_83_fu_1271_p3 = 64'd34;
    end else if (p_Result_5_fu_1263_p3[35] == 1'b1) begin
        tmp_83_fu_1271_p3 = 64'd35;
    end else if (p_Result_5_fu_1263_p3[36] == 1'b1) begin
        tmp_83_fu_1271_p3 = 64'd36;
    end else if (p_Result_5_fu_1263_p3[37] == 1'b1) begin
        tmp_83_fu_1271_p3 = 64'd37;
    end else if (p_Result_5_fu_1263_p3[38] == 1'b1) begin
        tmp_83_fu_1271_p3 = 64'd38;
    end else if (p_Result_5_fu_1263_p3[39] == 1'b1) begin
        tmp_83_fu_1271_p3 = 64'd39;
    end else if (p_Result_5_fu_1263_p3[40] == 1'b1) begin
        tmp_83_fu_1271_p3 = 64'd40;
    end else if (p_Result_5_fu_1263_p3[41] == 1'b1) begin
        tmp_83_fu_1271_p3 = 64'd41;
    end else if (p_Result_5_fu_1263_p3[42] == 1'b1) begin
        tmp_83_fu_1271_p3 = 64'd42;
    end else if (p_Result_5_fu_1263_p3[43] == 1'b1) begin
        tmp_83_fu_1271_p3 = 64'd43;
    end else if (p_Result_5_fu_1263_p3[44] == 1'b1) begin
        tmp_83_fu_1271_p3 = 64'd44;
    end else if (p_Result_5_fu_1263_p3[45] == 1'b1) begin
        tmp_83_fu_1271_p3 = 64'd45;
    end else if (p_Result_5_fu_1263_p3[46] == 1'b1) begin
        tmp_83_fu_1271_p3 = 64'd46;
    end else if (p_Result_5_fu_1263_p3[47] == 1'b1) begin
        tmp_83_fu_1271_p3 = 64'd47;
    end else if (p_Result_5_fu_1263_p3[48] == 1'b1) begin
        tmp_83_fu_1271_p3 = 64'd48;
    end else if (p_Result_5_fu_1263_p3[49] == 1'b1) begin
        tmp_83_fu_1271_p3 = 64'd49;
    end else if (p_Result_5_fu_1263_p3[50] == 1'b1) begin
        tmp_83_fu_1271_p3 = 64'd50;
    end else if (p_Result_5_fu_1263_p3[51] == 1'b1) begin
        tmp_83_fu_1271_p3 = 64'd51;
    end else if (p_Result_5_fu_1263_p3[52] == 1'b1) begin
        tmp_83_fu_1271_p3 = 64'd52;
    end else if (p_Result_5_fu_1263_p3[53] == 1'b1) begin
        tmp_83_fu_1271_p3 = 64'd53;
    end else if (p_Result_5_fu_1263_p3[54] == 1'b1) begin
        tmp_83_fu_1271_p3 = 64'd54;
    end else if (p_Result_5_fu_1263_p3[55] == 1'b1) begin
        tmp_83_fu_1271_p3 = 64'd55;
    end else if (p_Result_5_fu_1263_p3[56] == 1'b1) begin
        tmp_83_fu_1271_p3 = 64'd56;
    end else if (p_Result_5_fu_1263_p3[57] == 1'b1) begin
        tmp_83_fu_1271_p3 = 64'd57;
    end else if (p_Result_5_fu_1263_p3[58] == 1'b1) begin
        tmp_83_fu_1271_p3 = 64'd58;
    end else if (p_Result_5_fu_1263_p3[59] == 1'b1) begin
        tmp_83_fu_1271_p3 = 64'd59;
    end else if (p_Result_5_fu_1263_p3[60] == 1'b1) begin
        tmp_83_fu_1271_p3 = 64'd60;
    end else if (p_Result_5_fu_1263_p3[61] == 1'b1) begin
        tmp_83_fu_1271_p3 = 64'd61;
    end else if (p_Result_5_fu_1263_p3[62] == 1'b1) begin
        tmp_83_fu_1271_p3 = 64'd62;
    end else if (p_Result_5_fu_1263_p3[63] == 1'b1) begin
        tmp_83_fu_1271_p3 = 64'd63;
    end else begin
        tmp_83_fu_1271_p3 = 64'd64;
    end
end

assign tmp_86_fu_1324_p2 = (31'd31 - msb_idx_1_fu_1300_p3);

assign tmp_89_cast_fu_936_p1 = ap_phi_mux_j_0_i_phi_fu_492_p4;

assign tmp_91_fu_1421_p2 = ((p_Result_s_203_reg_2327 != 8'd158) ? 1'b1 : 1'b0);

assign tmp_94_cast1_fu_1798_p1 = ap_phi_mux_j_0_i3_phi_fu_559_p4;

assign tmp_94_cast_fu_1812_p1 = j_0_i3_reg_555;

assign tmp_95_fu_1443_p3 = {{is_neg_reg_2291_pp3_iter4_reg}, {p_Repl2_1_trunc_fu_1437_p2}};

assign tmp_98_cast_fu_1115_p1 = j_0_i4_reg_511;

assign tmp_s_fu_657_p3 = {{i_0_i1_reg_442}, {3'd0}};

assign x_assign_fu_1471_p3 = ((tmp_82_reg_2286_pp3_iter4_reg[0:0] === 1'b1) ? 32'd2147483648 : tmp_66_fu_1467_p1);

always @ (posedge ap_clk) begin
    i_cast_reg_1976[7:4] <= 4'b0000;
    tmp_138_cast_reg_1998[2:0] <= 3'b000;
    tmp_138_cast_reg_1998[7] <= 1'b0;
    tmp_70_reg_2034[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    tmp_157_cast_reg_2217[2:0] <= 3'b000;
    tmp_157_cast_reg_2217[7] <= 1'b0;
    tmp_140_cast_reg_2242[2:0] <= 3'b000;
    tmp_140_cast_reg_2242[7] <= 1'b0;
    tmp_146_cast_reg_2266[2:0] <= 3'b000;
    tmp_146_cast_reg_2266[7] <= 1'b0;
    p_Val2_32_cast_reg_2301[32] <= 1'b0;
    tmp_152_cast_reg_2406[2:0] <= 3'b000;
    tmp_154_cast_reg_2411[2:0] <= 3'b000;
    tmp_154_cast_reg_2411[7] <= 1'b0;
end

endmodule //ConvLayer
