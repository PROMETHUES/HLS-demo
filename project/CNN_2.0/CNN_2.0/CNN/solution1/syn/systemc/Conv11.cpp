// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Conv11.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Conv11::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Conv11::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> Conv11::ap_ST_fsm_state1 = "1";
const sc_lv<4> Conv11::ap_ST_fsm_state2 = "10";
const sc_lv<4> Conv11::ap_ST_fsm_pp0_stage0 = "100";
const sc_lv<4> Conv11::ap_ST_fsm_state5 = "1000";
const bool Conv11::ap_const_boolean_1 = true;
const sc_lv<32> Conv11::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> Conv11::ap_const_lv32_1 = "1";
const sc_lv<1> Conv11::ap_const_lv1_0 = "0";
const sc_lv<32> Conv11::ap_const_lv32_2 = "10";
const bool Conv11::ap_const_boolean_0 = false;
const sc_lv<1> Conv11::ap_const_lv1_1 = "1";
const sc_lv<4> Conv11::ap_const_lv4_0 = "0000";
const sc_lv<32> Conv11::ap_const_lv32_3 = "11";
const sc_lv<3> Conv11::ap_const_lv3_0 = "000";
const sc_lv<4> Conv11::ap_const_lv4_8 = "1000";
const sc_lv<4> Conv11::ap_const_lv4_1 = "1";
const sc_lv<4> Conv11::ap_const_lv4_F = "1111";
const sc_lv<14> Conv11::ap_const_lv14_0 = "00000000000000";
const sc_lv<32> Conv11::ap_const_lv32_1F = "11111";
const sc_lv<16> Conv11::ap_const_lv16_0 = "0000000000000000";
const sc_lv<32> Conv11::ap_const_lv32_10 = "10000";
const sc_lv<32> Conv11::ap_const_lv32_2E = "101110";
const sc_lv<32> Conv11::ap_const_lv32_2F = "101111";

Conv11::Conv11(sc_module_name name) : sc_module(name), mVcdFile(0) {
    LineBuffer_val_1_V_U = new Conv11_LineBufferJfO("LineBuffer_val_1_V_U");
    LineBuffer_val_1_V_U->clk(ap_clk);
    LineBuffer_val_1_V_U->reset(ap_rst);
    LineBuffer_val_1_V_U->address0(LineBuffer_val_1_V_address0);
    LineBuffer_val_1_V_U->ce0(LineBuffer_val_1_V_ce0);
    LineBuffer_val_1_V_U->q0(LineBuffer_val_1_V_q0);
    LineBuffer_val_1_V_U->address1(LineBuffer_val_1_V_s_reg_485);
    LineBuffer_val_1_V_U->ce1(LineBuffer_val_1_V_ce1);
    LineBuffer_val_1_V_U->we1(LineBuffer_val_1_V_we1);
    LineBuffer_val_1_V_U->d1(src_val_V_q0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_LineBuffer_val_1_V_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_151_fu_238_p1 );

    SC_METHOD(thread_LineBuffer_val_1_V_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_LineBuffer_val_1_V_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_LineBuffer_val_1_V_we1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter1);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state3);
    sensitive << ( exitcond5_fu_226_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( exitcond4_fu_167_p2 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( exitcond4_fu_167_p2 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_dst_val_V_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_218_cast_fu_415_p1 );

    SC_METHOD(thread_dst_val_V_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_dst_val_V_d0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( p_Val2_72_1_1_fu_390_p2 );

    SC_METHOD(thread_dst_val_V_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( or_cond_reg_491 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_exitcond4_fu_167_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_133 );

    SC_METHOD(thread_exitcond5_fu_226_p2);
    sensitive << ( j_reg_144 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_i_14_fu_173_p2);
    sensitive << ( i_reg_133 );

    SC_METHOD(thread_j_12_fu_232_p2);
    sensitive << ( j_reg_144 );

    SC_METHOD(thread_or_cond_fu_263_p2);
    sensitive << ( tmp_s_reg_461 );
    sensitive << ( tmp_152_fu_257_p2 );

    SC_METHOD(thread_p_Val2_71_0_1_fu_280_p3);
    sensitive << ( LineBuffer_val_1_V_q0 );

    SC_METHOD(thread_p_Val2_71_1_1_fu_360_p3);
    sensitive << ( src_val_V_q0 );

    SC_METHOD(thread_p_Val2_71_1_fu_330_p3);
    sensitive << ( BlockBuffer_val_1_V_fu_76 );

    SC_METHOD(thread_p_Val2_72_0_1_fu_314_p2);
    sensitive << ( tmp_3893_0_1_cast_ca_fu_310_p1 );
    sensitive << ( tmp_388_0_1_cast_cas_fu_306_p1 );

    SC_METHOD(thread_p_Val2_72_1_1_fu_390_p2);
    sensitive << ( tmp_3893_1_1_cast_fu_386_p1 );
    sensitive << ( tmp_388_1_1_fu_378_p3 );

    SC_METHOD(thread_p_Val2_72_1_fu_354_p2);
    sensitive << ( tmp_3893_1_cast_fu_350_p1 );
    sensitive << ( tmp_388_1_fu_346_p1 );

    SC_METHOD(thread_src_val_V_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_214_cast_fu_252_p1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_src_val_V_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_tmp_148_fu_202_p2);
    sensitive << ( i_reg_133 );

    SC_METHOD(thread_tmp_149_cast_fu_208_p1);
    sensitive << ( tmp_148_fu_202_p2 );

    SC_METHOD(thread_tmp_151_cast_fu_243_p1);
    sensitive << ( j_reg_144 );

    SC_METHOD(thread_tmp_151_fu_238_p1);
    sensitive << ( j_reg_144 );

    SC_METHOD(thread_tmp_152_fu_257_p2);
    sensitive << ( j_reg_144 );
    sensitive << ( exitcond5_fu_226_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_tmp_153_fu_268_p2);
    sensitive << ( j_reg_144 );

    SC_METHOD(thread_tmp_154_cast_fu_407_p1);
    sensitive << ( tmp_153_reg_495 );

    SC_METHOD(thread_tmp_191_fu_155_p3);
    sensitive << ( src_val_V_offset );

    SC_METHOD(thread_tmp_192_fu_183_p2);
    sensitive << ( tmp_208_cast_reg_442 );
    sensitive << ( tmp_cast_fu_179_p1 );

    SC_METHOD(thread_tmp_193_fu_212_p3);
    sensitive << ( tmp_148_fu_202_p2 );

    SC_METHOD(thread_tmp_194_fu_220_p2);
    sensitive << ( tmp_193_fu_212_p3 );
    sensitive << ( tmp_149_cast_fu_208_p1 );

    SC_METHOD(thread_tmp_195_fu_247_p2);
    sensitive << ( tmp_211_cast_reg_456 );
    sensitive << ( tmp_151_cast_fu_243_p1 );

    SC_METHOD(thread_tmp_196_fu_288_p4);
    sensitive << ( BlockBuffer_val_0_V_fu_72 );

    SC_METHOD(thread_tmp_197_fu_338_p3);
    sensitive << ( tmp_70_fu_320_p4 );

    SC_METHOD(thread_tmp_198_fu_368_p4);
    sensitive << ( p_Val2_72_1_fu_354_p2 );

    SC_METHOD(thread_tmp_199_fu_410_p2);
    sensitive << ( tmp_194_reg_466 );
    sensitive << ( tmp_154_cast_fu_407_p1 );

    SC_METHOD(thread_tmp_208_cast_fu_163_p1);
    sensitive << ( tmp_191_fu_155_p3 );

    SC_METHOD(thread_tmp_211_cast_fu_188_p3);
    sensitive << ( tmp_192_fu_183_p2 );

    SC_METHOD(thread_tmp_214_cast_fu_252_p1);
    sensitive << ( tmp_195_fu_247_p2 );

    SC_METHOD(thread_tmp_218_cast_fu_415_p1);
    sensitive << ( tmp_199_fu_410_p2 );

    SC_METHOD(thread_tmp_388_0_1_cast_cas_fu_306_p1);
    sensitive << ( tmp_388_0_1_fu_298_p3 );

    SC_METHOD(thread_tmp_388_0_1_fu_298_p3);
    sensitive << ( tmp_196_fu_288_p4 );

    SC_METHOD(thread_tmp_388_1_1_fu_378_p3);
    sensitive << ( tmp_198_fu_368_p4 );

    SC_METHOD(thread_tmp_388_1_fu_346_p1);
    sensitive << ( tmp_197_fu_338_p3 );

    SC_METHOD(thread_tmp_3893_0_1_cast_ca_fu_310_p1);
    sensitive << ( p_Val2_71_0_1_fu_280_p3 );

    SC_METHOD(thread_tmp_3893_1_1_cast_fu_386_p1);
    sensitive << ( p_Val2_71_1_1_fu_360_p3 );

    SC_METHOD(thread_tmp_3893_1_cast_fu_350_p1);
    sensitive << ( p_Val2_71_1_fu_330_p3 );

    SC_METHOD(thread_tmp_70_fu_320_p4);
    sensitive << ( p_Val2_72_0_1_fu_314_p2 );

    SC_METHOD(thread_tmp_cast_fu_179_p1);
    sensitive << ( i_reg_133 );

    SC_METHOD(thread_tmp_s_fu_196_p2);
    sensitive << ( exitcond4_fu_167_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_133 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( exitcond4_fu_167_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond5_fu_226_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );

    ap_CS_fsm = "0001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Conv11_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, src_val_V_address0, "(port)src_val_V_address0");
    sc_trace(mVcdFile, src_val_V_ce0, "(port)src_val_V_ce0");
    sc_trace(mVcdFile, src_val_V_q0, "(port)src_val_V_q0");
    sc_trace(mVcdFile, src_val_V_offset, "(port)src_val_V_offset");
    sc_trace(mVcdFile, dst_val_V_address0, "(port)dst_val_V_address0");
    sc_trace(mVcdFile, dst_val_V_ce0, "(port)dst_val_V_ce0");
    sc_trace(mVcdFile, dst_val_V_we0, "(port)dst_val_V_we0");
    sc_trace(mVcdFile, dst_val_V_d0, "(port)dst_val_V_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, j_reg_144, "j_reg_144");
    sc_trace(mVcdFile, tmp_208_cast_fu_163_p1, "tmp_208_cast_fu_163_p1");
    sc_trace(mVcdFile, tmp_208_cast_reg_442, "tmp_208_cast_reg_442");
    sc_trace(mVcdFile, exitcond4_fu_167_p2, "exitcond4_fu_167_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, i_14_fu_173_p2, "i_14_fu_173_p2");
    sc_trace(mVcdFile, i_14_reg_451, "i_14_reg_451");
    sc_trace(mVcdFile, tmp_211_cast_fu_188_p3, "tmp_211_cast_fu_188_p3");
    sc_trace(mVcdFile, tmp_211_cast_reg_456, "tmp_211_cast_reg_456");
    sc_trace(mVcdFile, tmp_s_fu_196_p2, "tmp_s_fu_196_p2");
    sc_trace(mVcdFile, tmp_s_reg_461, "tmp_s_reg_461");
    sc_trace(mVcdFile, tmp_194_fu_220_p2, "tmp_194_fu_220_p2");
    sc_trace(mVcdFile, tmp_194_reg_466, "tmp_194_reg_466");
    sc_trace(mVcdFile, exitcond5_fu_226_p2, "exitcond5_fu_226_p2");
    sc_trace(mVcdFile, exitcond5_reg_471, "exitcond5_reg_471");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter0, "ap_block_state3_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter1, "ap_block_state4_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, j_12_fu_232_p2, "j_12_fu_232_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, LineBuffer_val_1_V_s_reg_485, "LineBuffer_val_1_V_s_reg_485");
    sc_trace(mVcdFile, or_cond_fu_263_p2, "or_cond_fu_263_p2");
    sc_trace(mVcdFile, or_cond_reg_491, "or_cond_reg_491");
    sc_trace(mVcdFile, tmp_153_fu_268_p2, "tmp_153_fu_268_p2");
    sc_trace(mVcdFile, tmp_153_reg_495, "tmp_153_reg_495");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state3, "ap_condition_pp0_exit_iter0_state3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, LineBuffer_val_1_V_address0, "LineBuffer_val_1_V_address0");
    sc_trace(mVcdFile, LineBuffer_val_1_V_ce0, "LineBuffer_val_1_V_ce0");
    sc_trace(mVcdFile, LineBuffer_val_1_V_q0, "LineBuffer_val_1_V_q0");
    sc_trace(mVcdFile, LineBuffer_val_1_V_ce1, "LineBuffer_val_1_V_ce1");
    sc_trace(mVcdFile, LineBuffer_val_1_V_we1, "LineBuffer_val_1_V_we1");
    sc_trace(mVcdFile, i_reg_133, "i_reg_133");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_214_cast_fu_252_p1, "tmp_214_cast_fu_252_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, tmp_151_fu_238_p1, "tmp_151_fu_238_p1");
    sc_trace(mVcdFile, tmp_218_cast_fu_415_p1, "tmp_218_cast_fu_415_p1");
    sc_trace(mVcdFile, BlockBuffer_val_0_V_fu_72, "BlockBuffer_val_0_V_fu_72");
    sc_trace(mVcdFile, BlockBuffer_val_1_V_fu_76, "BlockBuffer_val_1_V_fu_76");
    sc_trace(mVcdFile, tmp_191_fu_155_p3, "tmp_191_fu_155_p3");
    sc_trace(mVcdFile, tmp_cast_fu_179_p1, "tmp_cast_fu_179_p1");
    sc_trace(mVcdFile, tmp_192_fu_183_p2, "tmp_192_fu_183_p2");
    sc_trace(mVcdFile, tmp_148_fu_202_p2, "tmp_148_fu_202_p2");
    sc_trace(mVcdFile, tmp_193_fu_212_p3, "tmp_193_fu_212_p3");
    sc_trace(mVcdFile, tmp_149_cast_fu_208_p1, "tmp_149_cast_fu_208_p1");
    sc_trace(mVcdFile, tmp_151_cast_fu_243_p1, "tmp_151_cast_fu_243_p1");
    sc_trace(mVcdFile, tmp_195_fu_247_p2, "tmp_195_fu_247_p2");
    sc_trace(mVcdFile, tmp_152_fu_257_p2, "tmp_152_fu_257_p2");
    sc_trace(mVcdFile, tmp_196_fu_288_p4, "tmp_196_fu_288_p4");
    sc_trace(mVcdFile, tmp_388_0_1_fu_298_p3, "tmp_388_0_1_fu_298_p3");
    sc_trace(mVcdFile, p_Val2_71_0_1_fu_280_p3, "p_Val2_71_0_1_fu_280_p3");
    sc_trace(mVcdFile, tmp_3893_0_1_cast_ca_fu_310_p1, "tmp_3893_0_1_cast_ca_fu_310_p1");
    sc_trace(mVcdFile, tmp_388_0_1_cast_cas_fu_306_p1, "tmp_388_0_1_cast_cas_fu_306_p1");
    sc_trace(mVcdFile, p_Val2_72_0_1_fu_314_p2, "p_Val2_72_0_1_fu_314_p2");
    sc_trace(mVcdFile, tmp_70_fu_320_p4, "tmp_70_fu_320_p4");
    sc_trace(mVcdFile, tmp_197_fu_338_p3, "tmp_197_fu_338_p3");
    sc_trace(mVcdFile, p_Val2_71_1_fu_330_p3, "p_Val2_71_1_fu_330_p3");
    sc_trace(mVcdFile, tmp_3893_1_cast_fu_350_p1, "tmp_3893_1_cast_fu_350_p1");
    sc_trace(mVcdFile, tmp_388_1_fu_346_p1, "tmp_388_1_fu_346_p1");
    sc_trace(mVcdFile, p_Val2_72_1_fu_354_p2, "p_Val2_72_1_fu_354_p2");
    sc_trace(mVcdFile, tmp_198_fu_368_p4, "tmp_198_fu_368_p4");
    sc_trace(mVcdFile, p_Val2_71_1_1_fu_360_p3, "p_Val2_71_1_1_fu_360_p3");
    sc_trace(mVcdFile, tmp_3893_1_1_cast_fu_386_p1, "tmp_3893_1_1_cast_fu_386_p1");
    sc_trace(mVcdFile, tmp_388_1_1_fu_378_p3, "tmp_388_1_1_fu_378_p3");
    sc_trace(mVcdFile, p_Val2_72_1_1_fu_390_p2, "p_Val2_72_1_1_fu_390_p2");
    sc_trace(mVcdFile, tmp_154_cast_fu_407_p1, "tmp_154_cast_fu_407_p1");
    sc_trace(mVcdFile, tmp_199_fu_410_p2, "tmp_199_fu_410_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

Conv11::~Conv11() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete LineBuffer_val_1_V_U;
}

void Conv11::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(exitcond4_fu_167_p2.read(), ap_const_lv1_0) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read()))) {
            ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state3.read() ^ ap_const_logic_1);
        } else if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(exitcond4_fu_167_p2.read(), ap_const_lv1_0) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        i_reg_133 = i_14_reg_451.read();
    } else if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        i_reg_133 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_fu_226_p2.read()))) {
        j_reg_144 = j_12_fu_232_p2.read();
    } else if ((esl_seteq<1,1,1>(exitcond4_fu_167_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        j_reg_144 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_reg_471.read()))) {
        BlockBuffer_val_0_V_fu_72 = LineBuffer_val_1_V_q0.read();
        BlockBuffer_val_1_V_fu_76 = src_val_V_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_fu_226_p2.read()))) {
        LineBuffer_val_1_V_s_reg_485 =  (sc_lv<3>) (tmp_151_fu_238_p1.read());
        or_cond_reg_491 = or_cond_fu_263_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        exitcond5_reg_471 = exitcond5_fu_226_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_14_reg_451 = i_14_fu_173_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_fu_226_p2.read()) && esl_seteq<1,1,1>(or_cond_fu_263_p2.read(), ap_const_lv1_1))) {
        tmp_153_reg_495 = tmp_153_fu_268_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond4_fu_167_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        tmp_194_reg_466 = tmp_194_fu_220_p2.read();
        tmp_211_cast_reg_456 = tmp_211_cast_fu_188_p3.read();
        tmp_s_reg_461 = tmp_s_fu_196_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        tmp_208_cast_reg_442 = tmp_208_cast_fu_163_p1.read();
    }
}

void Conv11::thread_LineBuffer_val_1_V_address0() {
    LineBuffer_val_1_V_address0 =  (sc_lv<3>) (tmp_151_fu_238_p1.read());
}

void Conv11::thread_LineBuffer_val_1_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1))) {
        LineBuffer_val_1_V_ce0 = ap_const_logic_1;
    } else {
        LineBuffer_val_1_V_ce0 = ap_const_logic_0;
    }
}

void Conv11::thread_LineBuffer_val_1_V_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        LineBuffer_val_1_V_ce1 = ap_const_logic_1;
    } else {
        LineBuffer_val_1_V_ce1 = ap_const_logic_0;
    }
}

void Conv11::thread_LineBuffer_val_1_V_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        LineBuffer_val_1_V_we1 = ap_const_logic_1;
    } else {
        LineBuffer_val_1_V_we1 = ap_const_logic_0;
    }
}

void Conv11::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[2];
}

void Conv11::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void Conv11::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void Conv11::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[3];
}

void Conv11::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Conv11::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Conv11::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Conv11::thread_ap_block_state3_pp0_stage0_iter0() {
    ap_block_state3_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Conv11::thread_ap_block_state4_pp0_stage0_iter1() {
    ap_block_state4_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Conv11::thread_ap_condition_pp0_exit_iter0_state3() {
    if (esl_seteq<1,1,1>(exitcond5_fu_226_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_0;
    }
}

void Conv11::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(exitcond4_fu_167_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void Conv11::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void Conv11::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Conv11::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void Conv11::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(exitcond4_fu_167_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void Conv11::thread_dst_val_V_address0() {
    dst_val_V_address0 =  (sc_lv<6>) (tmp_218_cast_fu_415_p1.read());
}

void Conv11::thread_dst_val_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        dst_val_V_ce0 = ap_const_logic_1;
    } else {
        dst_val_V_ce0 = ap_const_logic_0;
    }
}

void Conv11::thread_dst_val_V_d0() {
    dst_val_V_d0 = p_Val2_72_1_1_fu_390_p2.read().range(47, 16);
}

void Conv11::thread_dst_val_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(or_cond_reg_491.read(), ap_const_lv1_1))) {
        dst_val_V_we0 = ap_const_logic_1;
    } else {
        dst_val_V_we0 = ap_const_logic_0;
    }
}

void Conv11::thread_exitcond4_fu_167_p2() {
    exitcond4_fu_167_p2 = (!i_reg_133.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_133.read() == ap_const_lv4_8);
}

void Conv11::thread_exitcond5_fu_226_p2() {
    exitcond5_fu_226_p2 = (!j_reg_144.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_144.read() == ap_const_lv4_8);
}

void Conv11::thread_i_14_fu_173_p2() {
    i_14_fu_173_p2 = (!i_reg_133.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_reg_133.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void Conv11::thread_j_12_fu_232_p2() {
    j_12_fu_232_p2 = (!j_reg_144.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(j_reg_144.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void Conv11::thread_or_cond_fu_263_p2() {
    or_cond_fu_263_p2 = (tmp_s_reg_461.read() & tmp_152_fu_257_p2.read());
}

void Conv11::thread_p_Val2_71_0_1_fu_280_p3() {
    p_Val2_71_0_1_fu_280_p3 = esl_concat<32,14>(LineBuffer_val_1_V_q0.read(), ap_const_lv14_0);
}

void Conv11::thread_p_Val2_71_1_1_fu_360_p3() {
    p_Val2_71_1_1_fu_360_p3 = esl_concat<32,14>(src_val_V_q0.read(), ap_const_lv14_0);
}

void Conv11::thread_p_Val2_71_1_fu_330_p3() {
    p_Val2_71_1_fu_330_p3 = esl_concat<32,14>(BlockBuffer_val_1_V_fu_76.read(), ap_const_lv14_0);
}

void Conv11::thread_p_Val2_72_0_1_fu_314_p2() {
    p_Val2_72_0_1_fu_314_p2 = (!tmp_3893_0_1_cast_ca_fu_310_p1.read().is_01() || !tmp_388_0_1_cast_cas_fu_306_p1.read().is_01())? sc_lv<47>(): (sc_bigint<47>(tmp_3893_0_1_cast_ca_fu_310_p1.read()) + sc_bigint<47>(tmp_388_0_1_cast_cas_fu_306_p1.read()));
}

void Conv11::thread_p_Val2_72_1_1_fu_390_p2() {
    p_Val2_72_1_1_fu_390_p2 = (!tmp_3893_1_1_cast_fu_386_p1.read().is_01() || !tmp_388_1_1_fu_378_p3.read().is_01())? sc_lv<48>(): (sc_bigint<48>(tmp_3893_1_1_cast_fu_386_p1.read()) + sc_biguint<48>(tmp_388_1_1_fu_378_p3.read()));
}

void Conv11::thread_p_Val2_72_1_fu_354_p2() {
    p_Val2_72_1_fu_354_p2 = (!tmp_3893_1_cast_fu_350_p1.read().is_01() || !tmp_388_1_fu_346_p1.read().is_01())? sc_lv<48>(): (sc_bigint<48>(tmp_3893_1_cast_fu_350_p1.read()) + sc_bigint<48>(tmp_388_1_fu_346_p1.read()));
}

void Conv11::thread_src_val_V_address0() {
    src_val_V_address0 =  (sc_lv<10>) (tmp_214_cast_fu_252_p1.read());
}

void Conv11::thread_src_val_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1))) {
        src_val_V_ce0 = ap_const_logic_1;
    } else {
        src_val_V_ce0 = ap_const_logic_0;
    }
}

void Conv11::thread_tmp_148_fu_202_p2() {
    tmp_148_fu_202_p2 = (!i_reg_133.read().is_01() || !ap_const_lv4_F.is_01())? sc_lv<4>(): (sc_biguint<4>(i_reg_133.read()) + sc_bigint<4>(ap_const_lv4_F));
}

void Conv11::thread_tmp_149_cast_fu_208_p1() {
    tmp_149_cast_fu_208_p1 = esl_sext<7,4>(tmp_148_fu_202_p2.read());
}

void Conv11::thread_tmp_151_cast_fu_243_p1() {
    tmp_151_cast_fu_243_p1 = esl_zext<11,4>(j_reg_144.read());
}

void Conv11::thread_tmp_151_fu_238_p1() {
    tmp_151_fu_238_p1 = esl_zext<64,4>(j_reg_144.read());
}

void Conv11::thread_tmp_152_fu_257_p2() {
    tmp_152_fu_257_p2 = (!j_reg_144.read().is_01() || !ap_const_lv4_0.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_144.read() != ap_const_lv4_0);
}

void Conv11::thread_tmp_153_fu_268_p2() {
    tmp_153_fu_268_p2 = (!j_reg_144.read().is_01() || !ap_const_lv4_F.is_01())? sc_lv<4>(): (sc_biguint<4>(j_reg_144.read()) + sc_bigint<4>(ap_const_lv4_F));
}

void Conv11::thread_tmp_154_cast_fu_407_p1() {
    tmp_154_cast_fu_407_p1 = esl_zext<7,4>(tmp_153_reg_495.read());
}

void Conv11::thread_tmp_191_fu_155_p3() {
    tmp_191_fu_155_p3 = esl_concat<4,3>(src_val_V_offset.read(), ap_const_lv3_0);
}

void Conv11::thread_tmp_192_fu_183_p2() {
    tmp_192_fu_183_p2 = (!tmp_208_cast_reg_442.read().is_01() || !tmp_cast_fu_179_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_208_cast_reg_442.read()) + sc_biguint<8>(tmp_cast_fu_179_p1.read()));
}

void Conv11::thread_tmp_193_fu_212_p3() {
    tmp_193_fu_212_p3 = esl_concat<4,3>(tmp_148_fu_202_p2.read(), ap_const_lv3_0);
}

void Conv11::thread_tmp_194_fu_220_p2() {
    tmp_194_fu_220_p2 = (!tmp_193_fu_212_p3.read().is_01() || !tmp_149_cast_fu_208_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(tmp_193_fu_212_p3.read()) - sc_bigint<7>(tmp_149_cast_fu_208_p1.read()));
}

void Conv11::thread_tmp_195_fu_247_p2() {
    tmp_195_fu_247_p2 = (!tmp_211_cast_reg_456.read().is_01() || !tmp_151_cast_fu_243_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(tmp_211_cast_reg_456.read()) + sc_biguint<11>(tmp_151_cast_fu_243_p1.read()));
}

void Conv11::thread_tmp_196_fu_288_p4() {
    tmp_196_fu_288_p4 = BlockBuffer_val_0_V_fu_72.read().range(31, 2);
}

void Conv11::thread_tmp_197_fu_338_p3() {
    tmp_197_fu_338_p3 = esl_concat<31,16>(tmp_70_fu_320_p4.read(), ap_const_lv16_0);
}

void Conv11::thread_tmp_198_fu_368_p4() {
    tmp_198_fu_368_p4 = p_Val2_72_1_fu_354_p2.read().range(47, 16);
}

void Conv11::thread_tmp_199_fu_410_p2() {
    tmp_199_fu_410_p2 = (!tmp_194_reg_466.read().is_01() || !tmp_154_cast_fu_407_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(tmp_194_reg_466.read()) + sc_biguint<7>(tmp_154_cast_fu_407_p1.read()));
}

void Conv11::thread_tmp_208_cast_fu_163_p1() {
    tmp_208_cast_fu_163_p1 = esl_zext<8,7>(tmp_191_fu_155_p3.read());
}

void Conv11::thread_tmp_211_cast_fu_188_p3() {
    tmp_211_cast_fu_188_p3 = esl_concat<8,3>(tmp_192_fu_183_p2.read(), ap_const_lv3_0);
}

void Conv11::thread_tmp_214_cast_fu_252_p1() {
    tmp_214_cast_fu_252_p1 = esl_zext<64,11>(tmp_195_fu_247_p2.read());
}

void Conv11::thread_tmp_218_cast_fu_415_p1() {
    tmp_218_cast_fu_415_p1 = esl_sext<64,7>(tmp_199_fu_410_p2.read());
}

void Conv11::thread_tmp_388_0_1_cast_cas_fu_306_p1() {
    tmp_388_0_1_cast_cas_fu_306_p1 = esl_sext<47,46>(tmp_388_0_1_fu_298_p3.read());
}

void Conv11::thread_tmp_388_0_1_fu_298_p3() {
    tmp_388_0_1_fu_298_p3 = esl_concat<30,16>(tmp_196_fu_288_p4.read(), ap_const_lv16_0);
}

void Conv11::thread_tmp_388_1_1_fu_378_p3() {
    tmp_388_1_1_fu_378_p3 = esl_concat<32,16>(tmp_198_fu_368_p4.read(), ap_const_lv16_0);
}

void Conv11::thread_tmp_388_1_fu_346_p1() {
    tmp_388_1_fu_346_p1 = esl_sext<48,47>(tmp_197_fu_338_p3.read());
}

void Conv11::thread_tmp_3893_0_1_cast_ca_fu_310_p1() {
    tmp_3893_0_1_cast_ca_fu_310_p1 = esl_sext<47,46>(p_Val2_71_0_1_fu_280_p3.read());
}

void Conv11::thread_tmp_3893_1_1_cast_fu_386_p1() {
    tmp_3893_1_1_cast_fu_386_p1 = esl_sext<48,46>(p_Val2_71_1_1_fu_360_p3.read());
}

void Conv11::thread_tmp_3893_1_cast_fu_350_p1() {
    tmp_3893_1_cast_fu_350_p1 = esl_sext<48,46>(p_Val2_71_1_fu_330_p3.read());
}

void Conv11::thread_tmp_70_fu_320_p4() {
    tmp_70_fu_320_p4 = p_Val2_72_0_1_fu_314_p2.read().range(46, 16);
}

void Conv11::thread_tmp_cast_fu_179_p1() {
    tmp_cast_fu_179_p1 = esl_zext<8,4>(i_reg_133.read());
}

void Conv11::thread_tmp_s_fu_196_p2() {
    tmp_s_fu_196_p2 = (!i_reg_133.read().is_01() || !ap_const_lv4_0.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_133.read() != ap_const_lv4_0);
}

void Conv11::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(exitcond4_fu_167_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            if (!(esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && esl_seteq<1,1,1>(exitcond5_fu_226_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && esl_seteq<1,1,1>(exitcond5_fu_226_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        default : 
            ap_NS_fsm = "XXXX";
            break;
    }
}

}

