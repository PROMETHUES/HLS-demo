// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _PoolLayer_1_HH_
#define _PoolLayer_1_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "Conv11.h"
#include "PoolLayer_1_p_temKfY.h"

namespace ap_rtl {

struct PoolLayer_1 : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<10> > input_val_V_address0;
    sc_out< sc_logic > input_val_V_ce0;
    sc_in< sc_lv<32> > input_val_V_q0;
    sc_out< sc_lv<8> > poollayer_output_val_V_address0;
    sc_out< sc_logic > poollayer_output_val_V_ce0;
    sc_out< sc_logic > poollayer_output_val_V_we0;
    sc_out< sc_lv<32> > poollayer_output_val_V_d0;


    // Module declarations
    PoolLayer_1(sc_module_name name);
    SC_HAS_PROCESS(PoolLayer_1);

    ~PoolLayer_1();

    sc_trace_file* mVcdFile;

    PoolLayer_1_p_temKfY* p_temp_val_V_U;
    Conv11* grp_Conv11_fu_149;
    sc_signal< sc_lv<9> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<4> > j_i_reg_138;
    sc_signal< sc_lv<1> > exitcond3_fu_158_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<2> > i_2_fu_164_p2;
    sc_signal< sc_lv<2> > i_2_reg_291;
    sc_signal< sc_lv<2> > j_fu_176_p2;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<4> > i_3_fu_188_p2;
    sc_signal< sc_lv<4> > i_3_reg_307;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > tmp_80_fu_194_p3;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<2> > p_lshr_f_i_cast_reg_316;
    sc_signal< sc_lv<7> > tmp_62_fu_224_p2;
    sc_signal< sc_lv<7> > tmp_62_reg_321;
    sc_signal< sc_lv<1> > tmp_81_fu_230_p3;
    sc_signal< sc_lv<1> > tmp_81_reg_326;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage0;
    sc_signal< bool > ap_block_state8_pp1_stage0_iter0;
    sc_signal< bool > ap_block_state9_pp1_stage0_iter1;
    sc_signal< bool > ap_block_pp1_stage0_11001;
    sc_signal< sc_lv<2> > p_lshr_f7_i_cast_reg_330;
    sc_signal< sc_lv<4> > j_2_fu_262_p2;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter0;
    sc_signal< sc_lv<4> > i_4_fu_281_p2;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< bool > ap_block_pp1_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp1_exit_iter0_state8;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter1;
    sc_signal< sc_lv<6> > p_temp_val_V_address0;
    sc_signal< sc_logic > p_temp_val_V_ce0;
    sc_signal< sc_logic > p_temp_val_V_we0;
    sc_signal< sc_lv<32> > p_temp_val_V_q0;
    sc_signal< sc_logic > grp_Conv11_fu_149_ap_start;
    sc_signal< sc_logic > grp_Conv11_fu_149_ap_done;
    sc_signal< sc_logic > grp_Conv11_fu_149_ap_idle;
    sc_signal< sc_logic > grp_Conv11_fu_149_ap_ready;
    sc_signal< sc_lv<10> > grp_Conv11_fu_149_src_val_V_address0;
    sc_signal< sc_logic > grp_Conv11_fu_149_src_val_V_ce0;
    sc_signal< sc_lv<6> > grp_Conv11_fu_149_dst_val_V_address0;
    sc_signal< sc_logic > grp_Conv11_fu_149_dst_val_V_ce0;
    sc_signal< sc_logic > grp_Conv11_fu_149_dst_val_V_we0;
    sc_signal< sc_lv<32> > grp_Conv11_fu_149_dst_val_V_d0;
    sc_signal< sc_lv<2> > i_0_i_reg_92;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<2> > j_0_i_reg_103;
    sc_signal< sc_lv<1> > exitcond2_fu_170_p2;
    sc_signal< sc_lv<4> > i_reg_114;
    sc_signal< sc_lv<4> > i_i_reg_126;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_logic > grp_Conv11_fu_149_ap_start_reg;
    sc_signal< sc_lv<1> > exitcond_fu_182_p2;
    sc_signal< sc_lv<64> > tmp_79_cast_fu_257_p1;
    sc_signal< bool > ap_block_pp1_stage0;
    sc_signal< sc_lv<64> > tmp_64_fu_276_p1;
    sc_signal< sc_lv<7> > tmp_s_fu_216_p3;
    sc_signal< sc_lv<7> > tmp_99_i_cast_fu_212_p1;
    sc_signal< sc_lv<7> > tmp_104_i_cast_fu_248_p1;
    sc_signal< sc_lv<7> > tmp_65_fu_252_p2;
    sc_signal< sc_lv<8> > tmp_63_fu_268_p4;
    sc_signal< sc_lv<9> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp1;
    sc_signal< sc_logic > ap_enable_pp1;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<9> ap_ST_fsm_state1;
    static const sc_lv<9> ap_ST_fsm_state2;
    static const sc_lv<9> ap_ST_fsm_state3;
    static const sc_lv<9> ap_ST_fsm_state4;
    static const sc_lv<9> ap_ST_fsm_state5;
    static const sc_lv<9> ap_ST_fsm_state6;
    static const sc_lv<9> ap_ST_fsm_state7;
    static const sc_lv<9> ap_ST_fsm_pp1_stage0;
    static const sc_lv<9> ap_ST_fsm_state10;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_7;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<4> ap_const_lv4_C;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<4> ap_const_lv4_2;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp1_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_block_pp1_stage0();
    void thread_ap_block_pp1_stage0_11001();
    void thread_ap_block_pp1_stage0_subdone();
    void thread_ap_block_state8_pp1_stage0_iter0();
    void thread_ap_block_state9_pp1_stage0_iter1();
    void thread_ap_condition_pp1_exit_iter0_state8();
    void thread_ap_done();
    void thread_ap_enable_pp1();
    void thread_ap_idle();
    void thread_ap_idle_pp1();
    void thread_ap_ready();
    void thread_exitcond2_fu_170_p2();
    void thread_exitcond3_fu_158_p2();
    void thread_exitcond_fu_182_p2();
    void thread_grp_Conv11_fu_149_ap_start();
    void thread_i_2_fu_164_p2();
    void thread_i_3_fu_188_p2();
    void thread_i_4_fu_281_p2();
    void thread_input_val_V_address0();
    void thread_input_val_V_ce0();
    void thread_j_2_fu_262_p2();
    void thread_j_fu_176_p2();
    void thread_p_temp_val_V_address0();
    void thread_p_temp_val_V_ce0();
    void thread_p_temp_val_V_we0();
    void thread_poollayer_output_val_V_address0();
    void thread_poollayer_output_val_V_ce0();
    void thread_poollayer_output_val_V_d0();
    void thread_poollayer_output_val_V_we0();
    void thread_tmp_104_i_cast_fu_248_p1();
    void thread_tmp_62_fu_224_p2();
    void thread_tmp_63_fu_268_p4();
    void thread_tmp_64_fu_276_p1();
    void thread_tmp_65_fu_252_p2();
    void thread_tmp_79_cast_fu_257_p1();
    void thread_tmp_80_fu_194_p3();
    void thread_tmp_81_fu_230_p3();
    void thread_tmp_99_i_cast_fu_212_p1();
    void thread_tmp_s_fu_216_p3();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
