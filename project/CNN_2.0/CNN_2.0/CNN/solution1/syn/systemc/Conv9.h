// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Conv9_HH_
#define _Conv9_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "CNN_Core_am_addmuxdS.h"
#include "Conv9_LineBuffer_wdI.h"

namespace ap_rtl {

struct Conv9 : public sc_module {
    // Port declarations 14
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<12> > src_val_V_address0;
    sc_out< sc_logic > src_val_V_ce0;
    sc_in< sc_lv<32> > src_val_V_q0;
    sc_in< sc_lv<3> > src_val_V_offset;
    sc_out< sc_lv<10> > dst_val_V_address0;
    sc_out< sc_logic > dst_val_V_ce0;
    sc_out< sc_logic > dst_val_V_we0;
    sc_out< sc_lv<32> > dst_val_V_d0;
    sc_signal< sc_lv<11> > ap_var_for_const0;


    // Module declarations
    Conv9(sc_module_name name);
    SC_HAS_PROCESS(Conv9);

    ~Conv9();

    sc_trace_file* mVcdFile;

    Conv9_LineBuffer_wdI* LineBuffer_val_1_V_U;
    CNN_Core_am_addmuxdS<1,1,1,5,11,11>* CNN_Core_am_addmuxdS_U102;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<5> > j_reg_152;
    sc_signal< sc_lv<10> > tmp_164_cast_fu_193_p1;
    sc_signal< sc_lv<10> > tmp_164_cast_reg_478;
    sc_signal< sc_lv<1> > exitcond_fu_201_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<5> > i_12_fu_207_p2;
    sc_signal< sc_lv<5> > i_12_reg_487;
    sc_signal< sc_lv<13> > tmp_154_fu_242_p2;
    sc_signal< sc_lv<13> > tmp_154_reg_492;
    sc_signal< sc_lv<1> > tmp_s_fu_248_p2;
    sc_signal< sc_lv<1> > tmp_s_reg_497;
    sc_signal< sc_lv<11> > grp_fu_458_p3;
    sc_signal< sc_lv<11> > tmp_155_reg_502;
    sc_signal< sc_lv<1> > exitcond2_fu_254_p2;
    sc_signal< sc_lv<1> > exitcond2_reg_507;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<5> > j_10_fu_260_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<5> > LineBuffer_val_1_V_s_reg_521;
    sc_signal< sc_lv<1> > or_cond_fu_291_p2;
    sc_signal< sc_lv<1> > or_cond_reg_527;
    sc_signal< sc_lv<5> > tmp_140_fu_296_p2;
    sc_signal< sc_lv<5> > tmp_140_reg_531;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_lv<5> > LineBuffer_val_1_V_address0;
    sc_signal< sc_logic > LineBuffer_val_1_V_ce0;
    sc_signal< sc_lv<32> > LineBuffer_val_1_V_q0;
    sc_signal< sc_logic > LineBuffer_val_1_V_ce1;
    sc_signal< sc_logic > LineBuffer_val_1_V_we1;
    sc_signal< sc_lv<5> > i_reg_141;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<64> > tmp_171_cast_fu_280_p1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<64> > tmp_138_fu_266_p1;
    sc_signal< sc_lv<64> > tmp_175_cast_fu_443_p1;
    sc_signal< sc_lv<32> > BlockBuffer_val_0_V_fu_80;
    sc_signal< sc_lv<32> > BlockBuffer_val_1_V_fu_84;
    sc_signal< sc_lv<8> > tmp_150_fu_163_p3;
    sc_signal< sc_lv<6> > tmp_151_fu_175_p3;
    sc_signal< sc_lv<9> > p_shl_cast_fu_171_p1;
    sc_signal< sc_lv<9> > p_shl1_cast_fu_183_p1;
    sc_signal< sc_lv<9> > tmp_152_fu_187_p2;
    sc_signal< sc_lv<10> > tmp_cast_fu_213_p1;
    sc_signal< sc_lv<10> > tmp_153_fu_217_p2;
    sc_signal< sc_lv<8> > tmp_fu_222_p1;
    sc_signal< sc_lv<13> > p_shl2_cast_fu_226_p3;
    sc_signal< sc_lv<13> > p_shl3_cast_fu_234_p3;
    sc_signal< sc_lv<13> > tmp_138_cast_fu_271_p1;
    sc_signal< sc_lv<13> > tmp_156_fu_275_p2;
    sc_signal< sc_lv<1> > tmp_139_fu_285_p2;
    sc_signal< sc_lv<30> > tmp_157_fu_316_p4;
    sc_signal< sc_lv<46> > tmp_436_0_1_fu_326_p3;
    sc_signal< sc_lv<46> > p_Val2_75_0_1_fu_308_p3;
    sc_signal< sc_lv<47> > tmp_4373_0_1_cast_ca_fu_338_p1;
    sc_signal< sc_lv<47> > tmp_436_0_1_cast_cas_fu_334_p1;
    sc_signal< sc_lv<47> > p_Val2_76_0_1_fu_342_p2;
    sc_signal< sc_lv<31> > tmp_73_fu_348_p4;
    sc_signal< sc_lv<47> > tmp_158_fu_366_p3;
    sc_signal< sc_lv<46> > p_Val2_75_1_fu_358_p3;
    sc_signal< sc_lv<48> > tmp_4373_1_cast_fu_378_p1;
    sc_signal< sc_lv<48> > tmp_436_1_fu_374_p1;
    sc_signal< sc_lv<48> > p_Val2_76_1_fu_382_p2;
    sc_signal< sc_lv<32> > tmp_159_fu_396_p4;
    sc_signal< sc_lv<46> > p_Val2_75_1_1_fu_388_p3;
    sc_signal< sc_lv<48> > tmp_4373_1_1_cast_fu_414_p1;
    sc_signal< sc_lv<48> > tmp_436_1_1_fu_406_p3;
    sc_signal< sc_lv<48> > p_Val2_76_1_1_fu_418_p2;
    sc_signal< sc_lv<11> > tmp_141_cast_fu_435_p1;
    sc_signal< sc_lv<11> > tmp_160_fu_438_p2;
    sc_signal< sc_lv<1> > grp_fu_458_p0;
    sc_signal< sc_lv<5> > grp_fu_458_p1;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<6> > grp_fu_458_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_state2;
    static const sc_lv<4> ap_ST_fsm_pp0_stage0;
    static const sc_lv<4> ap_ST_fsm_state5;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<5> ap_const_lv5_18;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<5> ap_const_lv5_1F;
    static const sc_lv<14> ap_const_lv14_0;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_2E;
    static const sc_lv<32> ap_const_lv32_2F;
    static const sc_lv<6> ap_const_lv6_3F;
    static const sc_lv<11> ap_const_lv11_17;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_LineBuffer_val_1_V_address0();
    void thread_LineBuffer_val_1_V_ce0();
    void thread_LineBuffer_val_1_V_ce1();
    void thread_LineBuffer_val_1_V_we1();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state5();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state3_pp0_stage0_iter0();
    void thread_ap_block_state4_pp0_stage0_iter1();
    void thread_ap_condition_pp0_exit_iter0_state3();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_dst_val_V_address0();
    void thread_dst_val_V_ce0();
    void thread_dst_val_V_d0();
    void thread_dst_val_V_we0();
    void thread_exitcond2_fu_254_p2();
    void thread_exitcond_fu_201_p2();
    void thread_grp_fu_458_p0();
    void thread_grp_fu_458_p1();
    void thread_grp_fu_458_p10();
    void thread_i_12_fu_207_p2();
    void thread_j_10_fu_260_p2();
    void thread_or_cond_fu_291_p2();
    void thread_p_Val2_75_0_1_fu_308_p3();
    void thread_p_Val2_75_1_1_fu_388_p3();
    void thread_p_Val2_75_1_fu_358_p3();
    void thread_p_Val2_76_0_1_fu_342_p2();
    void thread_p_Val2_76_1_1_fu_418_p2();
    void thread_p_Val2_76_1_fu_382_p2();
    void thread_p_shl1_cast_fu_183_p1();
    void thread_p_shl2_cast_fu_226_p3();
    void thread_p_shl3_cast_fu_234_p3();
    void thread_p_shl_cast_fu_171_p1();
    void thread_src_val_V_address0();
    void thread_src_val_V_ce0();
    void thread_tmp_138_cast_fu_271_p1();
    void thread_tmp_138_fu_266_p1();
    void thread_tmp_139_fu_285_p2();
    void thread_tmp_140_fu_296_p2();
    void thread_tmp_141_cast_fu_435_p1();
    void thread_tmp_150_fu_163_p3();
    void thread_tmp_151_fu_175_p3();
    void thread_tmp_152_fu_187_p2();
    void thread_tmp_153_fu_217_p2();
    void thread_tmp_154_fu_242_p2();
    void thread_tmp_156_fu_275_p2();
    void thread_tmp_157_fu_316_p4();
    void thread_tmp_158_fu_366_p3();
    void thread_tmp_159_fu_396_p4();
    void thread_tmp_160_fu_438_p2();
    void thread_tmp_164_cast_fu_193_p1();
    void thread_tmp_171_cast_fu_280_p1();
    void thread_tmp_175_cast_fu_443_p1();
    void thread_tmp_436_0_1_cast_cas_fu_334_p1();
    void thread_tmp_436_0_1_fu_326_p3();
    void thread_tmp_436_1_1_fu_406_p3();
    void thread_tmp_436_1_fu_374_p1();
    void thread_tmp_4373_0_1_cast_ca_fu_338_p1();
    void thread_tmp_4373_1_1_cast_fu_414_p1();
    void thread_tmp_4373_1_cast_fu_378_p1();
    void thread_tmp_73_fu_348_p4();
    void thread_tmp_cast_fu_213_p1();
    void thread_tmp_fu_222_p1();
    void thread_tmp_s_fu_248_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
