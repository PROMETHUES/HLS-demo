// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Conv9.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Conv9::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Conv9::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> Conv9::ap_ST_fsm_state1 = "1";
const sc_lv<4> Conv9::ap_ST_fsm_state2 = "10";
const sc_lv<4> Conv9::ap_ST_fsm_pp0_stage0 = "100";
const sc_lv<4> Conv9::ap_ST_fsm_state5 = "1000";
const bool Conv9::ap_const_boolean_1 = true;
const sc_lv<32> Conv9::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> Conv9::ap_const_lv32_1 = "1";
const sc_lv<1> Conv9::ap_const_lv1_0 = "0";
const sc_lv<32> Conv9::ap_const_lv32_2 = "10";
const bool Conv9::ap_const_boolean_0 = false;
const sc_lv<1> Conv9::ap_const_lv1_1 = "1";
const sc_lv<5> Conv9::ap_const_lv5_0 = "00000";
const sc_lv<32> Conv9::ap_const_lv32_3 = "11";
const sc_lv<3> Conv9::ap_const_lv3_0 = "000";
const sc_lv<5> Conv9::ap_const_lv5_18 = "11000";
const sc_lv<5> Conv9::ap_const_lv5_1 = "1";
const sc_lv<5> Conv9::ap_const_lv5_1F = "11111";
const sc_lv<14> Conv9::ap_const_lv14_0 = "00000000000000";
const sc_lv<32> Conv9::ap_const_lv32_1F = "11111";
const sc_lv<16> Conv9::ap_const_lv16_0 = "0000000000000000";
const sc_lv<32> Conv9::ap_const_lv32_10 = "10000";
const sc_lv<32> Conv9::ap_const_lv32_2E = "101110";
const sc_lv<32> Conv9::ap_const_lv32_2F = "101111";
const sc_lv<6> Conv9::ap_const_lv6_3F = "111111";
const sc_lv<11> Conv9::ap_const_lv11_17 = "10111";

Conv9::Conv9(sc_module_name name) : sc_module(name), mVcdFile(0) {
    LineBuffer_val_1_V_U = new Conv9_LineBuffer_wdI("LineBuffer_val_1_V_U");
    LineBuffer_val_1_V_U->clk(ap_clk);
    LineBuffer_val_1_V_U->reset(ap_rst);
    LineBuffer_val_1_V_U->address0(LineBuffer_val_1_V_address0);
    LineBuffer_val_1_V_U->ce0(LineBuffer_val_1_V_ce0);
    LineBuffer_val_1_V_U->q0(LineBuffer_val_1_V_q0);
    LineBuffer_val_1_V_U->address1(LineBuffer_val_1_V_s_reg_521);
    LineBuffer_val_1_V_U->ce1(LineBuffer_val_1_V_ce1);
    LineBuffer_val_1_V_U->we1(LineBuffer_val_1_V_we1);
    LineBuffer_val_1_V_U->d1(src_val_V_q0);
    CNN_Core_am_addmuxdS_U102 = new CNN_Core_am_addmuxdS<1,1,1,5,11,11>("CNN_Core_am_addmuxdS_U102");
    CNN_Core_am_addmuxdS_U102->din0(grp_fu_458_p0);
    CNN_Core_am_addmuxdS_U102->din1(grp_fu_458_p1);
    CNN_Core_am_addmuxdS_U102->din2(ap_var_for_const0);
    CNN_Core_am_addmuxdS_U102->dout(grp_fu_458_p3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_LineBuffer_val_1_V_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_138_fu_266_p1 );

    SC_METHOD(thread_LineBuffer_val_1_V_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_LineBuffer_val_1_V_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_LineBuffer_val_1_V_we1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter1);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state3);
    sensitive << ( exitcond2_fu_254_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( exitcond_fu_201_p2 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( exitcond_fu_201_p2 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_dst_val_V_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_175_cast_fu_443_p1 );

    SC_METHOD(thread_dst_val_V_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_dst_val_V_d0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( p_Val2_76_1_1_fu_418_p2 );

    SC_METHOD(thread_dst_val_V_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( or_cond_reg_527 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_exitcond2_fu_254_p2);
    sensitive << ( j_reg_152 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_exitcond_fu_201_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_141 );

    SC_METHOD(thread_grp_fu_458_p0);
    sensitive << ( exitcond_fu_201_p2 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_grp_fu_458_p1);
    sensitive << ( exitcond_fu_201_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_fu_458_p10 );

    SC_METHOD(thread_grp_fu_458_p10);
    sensitive << ( i_reg_141 );

    SC_METHOD(thread_i_12_fu_207_p2);
    sensitive << ( i_reg_141 );

    SC_METHOD(thread_j_10_fu_260_p2);
    sensitive << ( j_reg_152 );

    SC_METHOD(thread_or_cond_fu_291_p2);
    sensitive << ( tmp_s_reg_497 );
    sensitive << ( tmp_139_fu_285_p2 );

    SC_METHOD(thread_p_Val2_75_0_1_fu_308_p3);
    sensitive << ( LineBuffer_val_1_V_q0 );

    SC_METHOD(thread_p_Val2_75_1_1_fu_388_p3);
    sensitive << ( src_val_V_q0 );

    SC_METHOD(thread_p_Val2_75_1_fu_358_p3);
    sensitive << ( BlockBuffer_val_1_V_fu_84 );

    SC_METHOD(thread_p_Val2_76_0_1_fu_342_p2);
    sensitive << ( tmp_4373_0_1_cast_ca_fu_338_p1 );
    sensitive << ( tmp_436_0_1_cast_cas_fu_334_p1 );

    SC_METHOD(thread_p_Val2_76_1_1_fu_418_p2);
    sensitive << ( tmp_4373_1_1_cast_fu_414_p1 );
    sensitive << ( tmp_436_1_1_fu_406_p3 );

    SC_METHOD(thread_p_Val2_76_1_fu_382_p2);
    sensitive << ( tmp_4373_1_cast_fu_378_p1 );
    sensitive << ( tmp_436_1_fu_374_p1 );

    SC_METHOD(thread_p_shl1_cast_fu_183_p1);
    sensitive << ( tmp_151_fu_175_p3 );

    SC_METHOD(thread_p_shl2_cast_fu_226_p3);
    sensitive << ( tmp_fu_222_p1 );

    SC_METHOD(thread_p_shl3_cast_fu_234_p3);
    sensitive << ( tmp_153_fu_217_p2 );

    SC_METHOD(thread_p_shl_cast_fu_171_p1);
    sensitive << ( tmp_150_fu_163_p3 );

    SC_METHOD(thread_src_val_V_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_171_cast_fu_280_p1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_src_val_V_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_tmp_138_cast_fu_271_p1);
    sensitive << ( j_reg_152 );

    SC_METHOD(thread_tmp_138_fu_266_p1);
    sensitive << ( j_reg_152 );

    SC_METHOD(thread_tmp_139_fu_285_p2);
    sensitive << ( j_reg_152 );
    sensitive << ( exitcond2_fu_254_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_tmp_140_fu_296_p2);
    sensitive << ( j_reg_152 );

    SC_METHOD(thread_tmp_141_cast_fu_435_p1);
    sensitive << ( tmp_140_reg_531 );

    SC_METHOD(thread_tmp_150_fu_163_p3);
    sensitive << ( src_val_V_offset );

    SC_METHOD(thread_tmp_151_fu_175_p3);
    sensitive << ( src_val_V_offset );

    SC_METHOD(thread_tmp_152_fu_187_p2);
    sensitive << ( p_shl_cast_fu_171_p1 );
    sensitive << ( p_shl1_cast_fu_183_p1 );

    SC_METHOD(thread_tmp_153_fu_217_p2);
    sensitive << ( tmp_164_cast_reg_478 );
    sensitive << ( tmp_cast_fu_213_p1 );

    SC_METHOD(thread_tmp_154_fu_242_p2);
    sensitive << ( p_shl2_cast_fu_226_p3 );
    sensitive << ( p_shl3_cast_fu_234_p3 );

    SC_METHOD(thread_tmp_156_fu_275_p2);
    sensitive << ( tmp_154_reg_492 );
    sensitive << ( tmp_138_cast_fu_271_p1 );

    SC_METHOD(thread_tmp_157_fu_316_p4);
    sensitive << ( BlockBuffer_val_0_V_fu_80 );

    SC_METHOD(thread_tmp_158_fu_366_p3);
    sensitive << ( tmp_73_fu_348_p4 );

    SC_METHOD(thread_tmp_159_fu_396_p4);
    sensitive << ( p_Val2_76_1_fu_382_p2 );

    SC_METHOD(thread_tmp_160_fu_438_p2);
    sensitive << ( tmp_155_reg_502 );
    sensitive << ( tmp_141_cast_fu_435_p1 );

    SC_METHOD(thread_tmp_164_cast_fu_193_p1);
    sensitive << ( tmp_152_fu_187_p2 );

    SC_METHOD(thread_tmp_171_cast_fu_280_p1);
    sensitive << ( tmp_156_fu_275_p2 );

    SC_METHOD(thread_tmp_175_cast_fu_443_p1);
    sensitive << ( tmp_160_fu_438_p2 );

    SC_METHOD(thread_tmp_436_0_1_cast_cas_fu_334_p1);
    sensitive << ( tmp_436_0_1_fu_326_p3 );

    SC_METHOD(thread_tmp_436_0_1_fu_326_p3);
    sensitive << ( tmp_157_fu_316_p4 );

    SC_METHOD(thread_tmp_436_1_1_fu_406_p3);
    sensitive << ( tmp_159_fu_396_p4 );

    SC_METHOD(thread_tmp_436_1_fu_374_p1);
    sensitive << ( tmp_158_fu_366_p3 );

    SC_METHOD(thread_tmp_4373_0_1_cast_ca_fu_338_p1);
    sensitive << ( p_Val2_75_0_1_fu_308_p3 );

    SC_METHOD(thread_tmp_4373_1_1_cast_fu_414_p1);
    sensitive << ( p_Val2_75_1_1_fu_388_p3 );

    SC_METHOD(thread_tmp_4373_1_cast_fu_378_p1);
    sensitive << ( p_Val2_75_1_fu_358_p3 );

    SC_METHOD(thread_tmp_73_fu_348_p4);
    sensitive << ( p_Val2_76_0_1_fu_342_p2 );

    SC_METHOD(thread_tmp_cast_fu_213_p1);
    sensitive << ( i_reg_141 );

    SC_METHOD(thread_tmp_fu_222_p1);
    sensitive << ( tmp_153_fu_217_p2 );

    SC_METHOD(thread_tmp_s_fu_248_p2);
    sensitive << ( exitcond_fu_201_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_141 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( exitcond_fu_201_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond2_fu_254_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "0001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Conv9_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, src_val_V_address0, "(port)src_val_V_address0");
    sc_trace(mVcdFile, src_val_V_ce0, "(port)src_val_V_ce0");
    sc_trace(mVcdFile, src_val_V_q0, "(port)src_val_V_q0");
    sc_trace(mVcdFile, src_val_V_offset, "(port)src_val_V_offset");
    sc_trace(mVcdFile, dst_val_V_address0, "(port)dst_val_V_address0");
    sc_trace(mVcdFile, dst_val_V_ce0, "(port)dst_val_V_ce0");
    sc_trace(mVcdFile, dst_val_V_we0, "(port)dst_val_V_we0");
    sc_trace(mVcdFile, dst_val_V_d0, "(port)dst_val_V_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, j_reg_152, "j_reg_152");
    sc_trace(mVcdFile, tmp_164_cast_fu_193_p1, "tmp_164_cast_fu_193_p1");
    sc_trace(mVcdFile, tmp_164_cast_reg_478, "tmp_164_cast_reg_478");
    sc_trace(mVcdFile, exitcond_fu_201_p2, "exitcond_fu_201_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, i_12_fu_207_p2, "i_12_fu_207_p2");
    sc_trace(mVcdFile, i_12_reg_487, "i_12_reg_487");
    sc_trace(mVcdFile, tmp_154_fu_242_p2, "tmp_154_fu_242_p2");
    sc_trace(mVcdFile, tmp_154_reg_492, "tmp_154_reg_492");
    sc_trace(mVcdFile, tmp_s_fu_248_p2, "tmp_s_fu_248_p2");
    sc_trace(mVcdFile, tmp_s_reg_497, "tmp_s_reg_497");
    sc_trace(mVcdFile, grp_fu_458_p3, "grp_fu_458_p3");
    sc_trace(mVcdFile, tmp_155_reg_502, "tmp_155_reg_502");
    sc_trace(mVcdFile, exitcond2_fu_254_p2, "exitcond2_fu_254_p2");
    sc_trace(mVcdFile, exitcond2_reg_507, "exitcond2_reg_507");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter0, "ap_block_state3_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter1, "ap_block_state4_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, j_10_fu_260_p2, "j_10_fu_260_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, LineBuffer_val_1_V_s_reg_521, "LineBuffer_val_1_V_s_reg_521");
    sc_trace(mVcdFile, or_cond_fu_291_p2, "or_cond_fu_291_p2");
    sc_trace(mVcdFile, or_cond_reg_527, "or_cond_reg_527");
    sc_trace(mVcdFile, tmp_140_fu_296_p2, "tmp_140_fu_296_p2");
    sc_trace(mVcdFile, tmp_140_reg_531, "tmp_140_reg_531");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state3, "ap_condition_pp0_exit_iter0_state3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, LineBuffer_val_1_V_address0, "LineBuffer_val_1_V_address0");
    sc_trace(mVcdFile, LineBuffer_val_1_V_ce0, "LineBuffer_val_1_V_ce0");
    sc_trace(mVcdFile, LineBuffer_val_1_V_q0, "LineBuffer_val_1_V_q0");
    sc_trace(mVcdFile, LineBuffer_val_1_V_ce1, "LineBuffer_val_1_V_ce1");
    sc_trace(mVcdFile, LineBuffer_val_1_V_we1, "LineBuffer_val_1_V_we1");
    sc_trace(mVcdFile, i_reg_141, "i_reg_141");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_171_cast_fu_280_p1, "tmp_171_cast_fu_280_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, tmp_138_fu_266_p1, "tmp_138_fu_266_p1");
    sc_trace(mVcdFile, tmp_175_cast_fu_443_p1, "tmp_175_cast_fu_443_p1");
    sc_trace(mVcdFile, BlockBuffer_val_0_V_fu_80, "BlockBuffer_val_0_V_fu_80");
    sc_trace(mVcdFile, BlockBuffer_val_1_V_fu_84, "BlockBuffer_val_1_V_fu_84");
    sc_trace(mVcdFile, tmp_150_fu_163_p3, "tmp_150_fu_163_p3");
    sc_trace(mVcdFile, tmp_151_fu_175_p3, "tmp_151_fu_175_p3");
    sc_trace(mVcdFile, p_shl_cast_fu_171_p1, "p_shl_cast_fu_171_p1");
    sc_trace(mVcdFile, p_shl1_cast_fu_183_p1, "p_shl1_cast_fu_183_p1");
    sc_trace(mVcdFile, tmp_152_fu_187_p2, "tmp_152_fu_187_p2");
    sc_trace(mVcdFile, tmp_cast_fu_213_p1, "tmp_cast_fu_213_p1");
    sc_trace(mVcdFile, tmp_153_fu_217_p2, "tmp_153_fu_217_p2");
    sc_trace(mVcdFile, tmp_fu_222_p1, "tmp_fu_222_p1");
    sc_trace(mVcdFile, p_shl2_cast_fu_226_p3, "p_shl2_cast_fu_226_p3");
    sc_trace(mVcdFile, p_shl3_cast_fu_234_p3, "p_shl3_cast_fu_234_p3");
    sc_trace(mVcdFile, tmp_138_cast_fu_271_p1, "tmp_138_cast_fu_271_p1");
    sc_trace(mVcdFile, tmp_156_fu_275_p2, "tmp_156_fu_275_p2");
    sc_trace(mVcdFile, tmp_139_fu_285_p2, "tmp_139_fu_285_p2");
    sc_trace(mVcdFile, tmp_157_fu_316_p4, "tmp_157_fu_316_p4");
    sc_trace(mVcdFile, tmp_436_0_1_fu_326_p3, "tmp_436_0_1_fu_326_p3");
    sc_trace(mVcdFile, p_Val2_75_0_1_fu_308_p3, "p_Val2_75_0_1_fu_308_p3");
    sc_trace(mVcdFile, tmp_4373_0_1_cast_ca_fu_338_p1, "tmp_4373_0_1_cast_ca_fu_338_p1");
    sc_trace(mVcdFile, tmp_436_0_1_cast_cas_fu_334_p1, "tmp_436_0_1_cast_cas_fu_334_p1");
    sc_trace(mVcdFile, p_Val2_76_0_1_fu_342_p2, "p_Val2_76_0_1_fu_342_p2");
    sc_trace(mVcdFile, tmp_73_fu_348_p4, "tmp_73_fu_348_p4");
    sc_trace(mVcdFile, tmp_158_fu_366_p3, "tmp_158_fu_366_p3");
    sc_trace(mVcdFile, p_Val2_75_1_fu_358_p3, "p_Val2_75_1_fu_358_p3");
    sc_trace(mVcdFile, tmp_4373_1_cast_fu_378_p1, "tmp_4373_1_cast_fu_378_p1");
    sc_trace(mVcdFile, tmp_436_1_fu_374_p1, "tmp_436_1_fu_374_p1");
    sc_trace(mVcdFile, p_Val2_76_1_fu_382_p2, "p_Val2_76_1_fu_382_p2");
    sc_trace(mVcdFile, tmp_159_fu_396_p4, "tmp_159_fu_396_p4");
    sc_trace(mVcdFile, p_Val2_75_1_1_fu_388_p3, "p_Val2_75_1_1_fu_388_p3");
    sc_trace(mVcdFile, tmp_4373_1_1_cast_fu_414_p1, "tmp_4373_1_1_cast_fu_414_p1");
    sc_trace(mVcdFile, tmp_436_1_1_fu_406_p3, "tmp_436_1_1_fu_406_p3");
    sc_trace(mVcdFile, p_Val2_76_1_1_fu_418_p2, "p_Val2_76_1_1_fu_418_p2");
    sc_trace(mVcdFile, tmp_141_cast_fu_435_p1, "tmp_141_cast_fu_435_p1");
    sc_trace(mVcdFile, tmp_160_fu_438_p2, "tmp_160_fu_438_p2");
    sc_trace(mVcdFile, grp_fu_458_p0, "grp_fu_458_p0");
    sc_trace(mVcdFile, grp_fu_458_p1, "grp_fu_458_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, grp_fu_458_p10, "grp_fu_458_p10");
#endif

    }
}

Conv9::~Conv9() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete LineBuffer_val_1_V_U;
    delete CNN_Core_am_addmuxdS_U102;
}

void Conv9::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_lv11_17;
}

void Conv9::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(exitcond_fu_201_p2.read(), ap_const_lv1_0) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read()))) {
            ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state3.read() ^ ap_const_logic_1);
        } else if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(exitcond_fu_201_p2.read(), ap_const_lv1_0) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        i_reg_141 = i_12_reg_487.read();
    } else if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        i_reg_141 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_254_p2.read()))) {
        j_reg_152 = j_10_fu_260_p2.read();
    } else if ((esl_seteq<1,1,1>(exitcond_fu_201_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        j_reg_152 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_reg_507.read()))) {
        BlockBuffer_val_0_V_fu_80 = LineBuffer_val_1_V_q0.read();
        BlockBuffer_val_1_V_fu_84 = src_val_V_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_254_p2.read()))) {
        LineBuffer_val_1_V_s_reg_521 =  (sc_lv<5>) (tmp_138_fu_266_p1.read());
        or_cond_reg_527 = or_cond_fu_291_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        exitcond2_reg_507 = exitcond2_fu_254_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_12_reg_487 = i_12_fu_207_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_254_p2.read()) && esl_seteq<1,1,1>(or_cond_fu_291_p2.read(), ap_const_lv1_1))) {
        tmp_140_reg_531 = tmp_140_fu_296_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_fu_201_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        tmp_154_reg_492 = tmp_154_fu_242_p2.read();
        tmp_155_reg_502 = grp_fu_458_p3.read();
        tmp_s_reg_497 = tmp_s_fu_248_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        tmp_164_cast_reg_478 = tmp_164_cast_fu_193_p1.read();
    }
}

void Conv9::thread_LineBuffer_val_1_V_address0() {
    LineBuffer_val_1_V_address0 =  (sc_lv<5>) (tmp_138_fu_266_p1.read());
}

void Conv9::thread_LineBuffer_val_1_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1))) {
        LineBuffer_val_1_V_ce0 = ap_const_logic_1;
    } else {
        LineBuffer_val_1_V_ce0 = ap_const_logic_0;
    }
}

void Conv9::thread_LineBuffer_val_1_V_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        LineBuffer_val_1_V_ce1 = ap_const_logic_1;
    } else {
        LineBuffer_val_1_V_ce1 = ap_const_logic_0;
    }
}

void Conv9::thread_LineBuffer_val_1_V_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        LineBuffer_val_1_V_we1 = ap_const_logic_1;
    } else {
        LineBuffer_val_1_V_we1 = ap_const_logic_0;
    }
}

void Conv9::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[2];
}

void Conv9::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void Conv9::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void Conv9::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[3];
}

void Conv9::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Conv9::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Conv9::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Conv9::thread_ap_block_state3_pp0_stage0_iter0() {
    ap_block_state3_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Conv9::thread_ap_block_state4_pp0_stage0_iter1() {
    ap_block_state4_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Conv9::thread_ap_condition_pp0_exit_iter0_state3() {
    if (esl_seteq<1,1,1>(exitcond2_fu_254_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_0;
    }
}

void Conv9::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(exitcond_fu_201_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void Conv9::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void Conv9::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Conv9::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void Conv9::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(exitcond_fu_201_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void Conv9::thread_dst_val_V_address0() {
    dst_val_V_address0 =  (sc_lv<10>) (tmp_175_cast_fu_443_p1.read());
}

void Conv9::thread_dst_val_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        dst_val_V_ce0 = ap_const_logic_1;
    } else {
        dst_val_V_ce0 = ap_const_logic_0;
    }
}

void Conv9::thread_dst_val_V_d0() {
    dst_val_V_d0 = p_Val2_76_1_1_fu_418_p2.read().range(47, 16);
}

void Conv9::thread_dst_val_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(or_cond_reg_527.read(), ap_const_lv1_1))) {
        dst_val_V_we0 = ap_const_logic_1;
    } else {
        dst_val_V_we0 = ap_const_logic_0;
    }
}

void Conv9::thread_exitcond2_fu_254_p2() {
    exitcond2_fu_254_p2 = (!j_reg_152.read().is_01() || !ap_const_lv5_18.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_152.read() == ap_const_lv5_18);
}

void Conv9::thread_exitcond_fu_201_p2() {
    exitcond_fu_201_p2 = (!i_reg_141.read().is_01() || !ap_const_lv5_18.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_141.read() == ap_const_lv5_18);
}

void Conv9::thread_grp_fu_458_p0() {
    grp_fu_458_p0 =  (sc_lv<1>) (ap_const_lv6_3F);
}

void Conv9::thread_grp_fu_458_p1() {
    grp_fu_458_p1 =  (sc_lv<5>) (grp_fu_458_p10.read());
}

void Conv9::thread_grp_fu_458_p10() {
    grp_fu_458_p10 = esl_zext<6,5>(i_reg_141.read());
}

void Conv9::thread_i_12_fu_207_p2() {
    i_12_fu_207_p2 = (!i_reg_141.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_reg_141.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void Conv9::thread_j_10_fu_260_p2() {
    j_10_fu_260_p2 = (!j_reg_152.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(j_reg_152.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void Conv9::thread_or_cond_fu_291_p2() {
    or_cond_fu_291_p2 = (tmp_s_reg_497.read() & tmp_139_fu_285_p2.read());
}

void Conv9::thread_p_Val2_75_0_1_fu_308_p3() {
    p_Val2_75_0_1_fu_308_p3 = esl_concat<32,14>(LineBuffer_val_1_V_q0.read(), ap_const_lv14_0);
}

void Conv9::thread_p_Val2_75_1_1_fu_388_p3() {
    p_Val2_75_1_1_fu_388_p3 = esl_concat<32,14>(src_val_V_q0.read(), ap_const_lv14_0);
}

void Conv9::thread_p_Val2_75_1_fu_358_p3() {
    p_Val2_75_1_fu_358_p3 = esl_concat<32,14>(BlockBuffer_val_1_V_fu_84.read(), ap_const_lv14_0);
}

void Conv9::thread_p_Val2_76_0_1_fu_342_p2() {
    p_Val2_76_0_1_fu_342_p2 = (!tmp_4373_0_1_cast_ca_fu_338_p1.read().is_01() || !tmp_436_0_1_cast_cas_fu_334_p1.read().is_01())? sc_lv<47>(): (sc_bigint<47>(tmp_4373_0_1_cast_ca_fu_338_p1.read()) + sc_bigint<47>(tmp_436_0_1_cast_cas_fu_334_p1.read()));
}

void Conv9::thread_p_Val2_76_1_1_fu_418_p2() {
    p_Val2_76_1_1_fu_418_p2 = (!tmp_4373_1_1_cast_fu_414_p1.read().is_01() || !tmp_436_1_1_fu_406_p3.read().is_01())? sc_lv<48>(): (sc_bigint<48>(tmp_4373_1_1_cast_fu_414_p1.read()) + sc_biguint<48>(tmp_436_1_1_fu_406_p3.read()));
}

void Conv9::thread_p_Val2_76_1_fu_382_p2() {
    p_Val2_76_1_fu_382_p2 = (!tmp_4373_1_cast_fu_378_p1.read().is_01() || !tmp_436_1_fu_374_p1.read().is_01())? sc_lv<48>(): (sc_bigint<48>(tmp_4373_1_cast_fu_378_p1.read()) + sc_bigint<48>(tmp_436_1_fu_374_p1.read()));
}

void Conv9::thread_p_shl1_cast_fu_183_p1() {
    p_shl1_cast_fu_183_p1 = esl_zext<9,6>(tmp_151_fu_175_p3.read());
}

void Conv9::thread_p_shl2_cast_fu_226_p3() {
    p_shl2_cast_fu_226_p3 = esl_concat<8,5>(tmp_fu_222_p1.read(), ap_const_lv5_0);
}

void Conv9::thread_p_shl3_cast_fu_234_p3() {
    p_shl3_cast_fu_234_p3 = esl_concat<10,3>(tmp_153_fu_217_p2.read(), ap_const_lv3_0);
}

void Conv9::thread_p_shl_cast_fu_171_p1() {
    p_shl_cast_fu_171_p1 = esl_zext<9,8>(tmp_150_fu_163_p3.read());
}

void Conv9::thread_src_val_V_address0() {
    src_val_V_address0 =  (sc_lv<12>) (tmp_171_cast_fu_280_p1.read());
}

void Conv9::thread_src_val_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1))) {
        src_val_V_ce0 = ap_const_logic_1;
    } else {
        src_val_V_ce0 = ap_const_logic_0;
    }
}

void Conv9::thread_tmp_138_cast_fu_271_p1() {
    tmp_138_cast_fu_271_p1 = esl_zext<13,5>(j_reg_152.read());
}

void Conv9::thread_tmp_138_fu_266_p1() {
    tmp_138_fu_266_p1 = esl_zext<64,5>(j_reg_152.read());
}

void Conv9::thread_tmp_139_fu_285_p2() {
    tmp_139_fu_285_p2 = (!j_reg_152.read().is_01() || !ap_const_lv5_0.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_152.read() != ap_const_lv5_0);
}

void Conv9::thread_tmp_140_fu_296_p2() {
    tmp_140_fu_296_p2 = (!j_reg_152.read().is_01() || !ap_const_lv5_1F.is_01())? sc_lv<5>(): (sc_biguint<5>(j_reg_152.read()) + sc_bigint<5>(ap_const_lv5_1F));
}

void Conv9::thread_tmp_141_cast_fu_435_p1() {
    tmp_141_cast_fu_435_p1 = esl_zext<11,5>(tmp_140_reg_531.read());
}

void Conv9::thread_tmp_150_fu_163_p3() {
    tmp_150_fu_163_p3 = esl_concat<3,5>(src_val_V_offset.read(), ap_const_lv5_0);
}

void Conv9::thread_tmp_151_fu_175_p3() {
    tmp_151_fu_175_p3 = esl_concat<3,3>(src_val_V_offset.read(), ap_const_lv3_0);
}

void Conv9::thread_tmp_152_fu_187_p2() {
    tmp_152_fu_187_p2 = (!p_shl_cast_fu_171_p1.read().is_01() || !p_shl1_cast_fu_183_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(p_shl_cast_fu_171_p1.read()) - sc_biguint<9>(p_shl1_cast_fu_183_p1.read()));
}

void Conv9::thread_tmp_153_fu_217_p2() {
    tmp_153_fu_217_p2 = (!tmp_cast_fu_213_p1.read().is_01() || !tmp_164_cast_reg_478.read().is_01())? sc_lv<10>(): (sc_biguint<10>(tmp_cast_fu_213_p1.read()) + sc_bigint<10>(tmp_164_cast_reg_478.read()));
}

void Conv9::thread_tmp_154_fu_242_p2() {
    tmp_154_fu_242_p2 = (!p_shl2_cast_fu_226_p3.read().is_01() || !p_shl3_cast_fu_234_p3.read().is_01())? sc_lv<13>(): (sc_biguint<13>(p_shl2_cast_fu_226_p3.read()) - sc_biguint<13>(p_shl3_cast_fu_234_p3.read()));
}

void Conv9::thread_tmp_156_fu_275_p2() {
    tmp_156_fu_275_p2 = (!tmp_154_reg_492.read().is_01() || !tmp_138_cast_fu_271_p1.read().is_01())? sc_lv<13>(): (sc_biguint<13>(tmp_154_reg_492.read()) + sc_biguint<13>(tmp_138_cast_fu_271_p1.read()));
}

void Conv9::thread_tmp_157_fu_316_p4() {
    tmp_157_fu_316_p4 = BlockBuffer_val_0_V_fu_80.read().range(31, 2);
}

void Conv9::thread_tmp_158_fu_366_p3() {
    tmp_158_fu_366_p3 = esl_concat<31,16>(tmp_73_fu_348_p4.read(), ap_const_lv16_0);
}

void Conv9::thread_tmp_159_fu_396_p4() {
    tmp_159_fu_396_p4 = p_Val2_76_1_fu_382_p2.read().range(47, 16);
}

void Conv9::thread_tmp_160_fu_438_p2() {
    tmp_160_fu_438_p2 = (!tmp_155_reg_502.read().is_01() || !tmp_141_cast_fu_435_p1.read().is_01())? sc_lv<11>(): (sc_bigint<11>(tmp_155_reg_502.read()) + sc_biguint<11>(tmp_141_cast_fu_435_p1.read()));
}

void Conv9::thread_tmp_164_cast_fu_193_p1() {
    tmp_164_cast_fu_193_p1 = esl_sext<10,9>(tmp_152_fu_187_p2.read());
}

void Conv9::thread_tmp_171_cast_fu_280_p1() {
    tmp_171_cast_fu_280_p1 = esl_zext<64,13>(tmp_156_fu_275_p2.read());
}

void Conv9::thread_tmp_175_cast_fu_443_p1() {
    tmp_175_cast_fu_443_p1 = esl_sext<64,11>(tmp_160_fu_438_p2.read());
}

void Conv9::thread_tmp_436_0_1_cast_cas_fu_334_p1() {
    tmp_436_0_1_cast_cas_fu_334_p1 = esl_sext<47,46>(tmp_436_0_1_fu_326_p3.read());
}

void Conv9::thread_tmp_436_0_1_fu_326_p3() {
    tmp_436_0_1_fu_326_p3 = esl_concat<30,16>(tmp_157_fu_316_p4.read(), ap_const_lv16_0);
}

void Conv9::thread_tmp_436_1_1_fu_406_p3() {
    tmp_436_1_1_fu_406_p3 = esl_concat<32,16>(tmp_159_fu_396_p4.read(), ap_const_lv16_0);
}

void Conv9::thread_tmp_436_1_fu_374_p1() {
    tmp_436_1_fu_374_p1 = esl_sext<48,47>(tmp_158_fu_366_p3.read());
}

void Conv9::thread_tmp_4373_0_1_cast_ca_fu_338_p1() {
    tmp_4373_0_1_cast_ca_fu_338_p1 = esl_sext<47,46>(p_Val2_75_0_1_fu_308_p3.read());
}

void Conv9::thread_tmp_4373_1_1_cast_fu_414_p1() {
    tmp_4373_1_1_cast_fu_414_p1 = esl_sext<48,46>(p_Val2_75_1_1_fu_388_p3.read());
}

void Conv9::thread_tmp_4373_1_cast_fu_378_p1() {
    tmp_4373_1_cast_fu_378_p1 = esl_sext<48,46>(p_Val2_75_1_fu_358_p3.read());
}

void Conv9::thread_tmp_73_fu_348_p4() {
    tmp_73_fu_348_p4 = p_Val2_76_0_1_fu_342_p2.read().range(46, 16);
}

void Conv9::thread_tmp_cast_fu_213_p1() {
    tmp_cast_fu_213_p1 = esl_zext<10,5>(i_reg_141.read());
}

void Conv9::thread_tmp_fu_222_p1() {
    tmp_fu_222_p1 = tmp_153_fu_217_p2.read().range(8-1, 0);
}

void Conv9::thread_tmp_s_fu_248_p2() {
    tmp_s_fu_248_p2 = (!i_reg_141.read().is_01() || !ap_const_lv5_0.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_141.read() != ap_const_lv5_0);
}

void Conv9::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(exitcond_fu_201_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            if (!(esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && esl_seteq<1,1,1>(exitcond2_fu_254_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && esl_seteq<1,1,1>(exitcond2_fu_254_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        default : 
            ap_NS_fsm = "XXXX";
            break;
    }
}

}

