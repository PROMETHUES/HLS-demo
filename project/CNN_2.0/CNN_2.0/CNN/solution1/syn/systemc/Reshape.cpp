// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Reshape.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Reshape::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Reshape::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<5> Reshape::ap_ST_fsm_state1 = "1";
const sc_lv<5> Reshape::ap_ST_fsm_state2 = "10";
const sc_lv<5> Reshape::ap_ST_fsm_state3 = "100";
const sc_lv<5> Reshape::ap_ST_fsm_pp0_stage0 = "1000";
const sc_lv<5> Reshape::ap_ST_fsm_state6 = "10000";
const bool Reshape::ap_const_boolean_1 = true;
const sc_lv<32> Reshape::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> Reshape::ap_const_lv32_1 = "1";
const sc_lv<1> Reshape::ap_const_lv1_0 = "0";
const sc_lv<32> Reshape::ap_const_lv32_2 = "10";
const sc_lv<32> Reshape::ap_const_lv32_3 = "11";
const bool Reshape::ap_const_boolean_0 = false;
const sc_lv<1> Reshape::ap_const_lv1_1 = "1";
const sc_lv<4> Reshape::ap_const_lv4_0 = "0000";
const sc_lv<3> Reshape::ap_const_lv3_0 = "000";
const sc_lv<32> Reshape::ap_const_lv32_4 = "100";
const sc_lv<4> Reshape::ap_const_lv4_C = "1100";
const sc_lv<4> Reshape::ap_const_lv4_1 = "1";
const sc_lv<2> Reshape::ap_const_lv2_0 = "00";
const sc_lv<3> Reshape::ap_const_lv3_4 = "100";
const sc_lv<3> Reshape::ap_const_lv3_1 = "1";

Reshape::Reshape(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter1);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state4);
    sensitive << ( exitcond_fu_167_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond3_fu_106_p2 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond3_fu_106_p2 );

    SC_METHOD(thread_dst_V_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_59_fu_211_p1 );

    SC_METHOD(thread_dst_V_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_dst_V_d0);
    sensitive << ( src_val_V_q0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_dst_V_we0);
    sensitive << ( exitcond_reg_252 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_exitcond2_fu_130_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_reg_84 );

    SC_METHOD(thread_exitcond3_fu_106_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( n_reg_73 );

    SC_METHOD(thread_exitcond_fu_167_p2);
    sensitive << ( i_reg_95 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_i_1_fu_173_p2);
    sensitive << ( i_reg_95 );

    SC_METHOD(thread_i_cast8_fu_163_p1);
    sensitive << ( i_reg_95 );

    SC_METHOD(thread_index_fu_179_p2);
    sensitive << ( tmp_57_reg_242 );
    sensitive << ( i_cast8_fu_163_p1 );

    SC_METHOD(thread_j_1_fu_136_p2);
    sensitive << ( j_reg_84 );

    SC_METHOD(thread_n_1_fu_112_p2);
    sensitive << ( n_reg_73 );

    SC_METHOD(thread_src_val_V_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_74_cast_fu_206_p1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_src_val_V_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_tmp_57_fu_151_p3);
    sensitive << ( tmp_s_fu_146_p2 );

    SC_METHOD(thread_tmp_59_fu_211_p1);
    sensitive << ( index_reg_261 );

    SC_METHOD(thread_tmp_60_fu_188_p2);
    sensitive << ( tmp_70_cast_reg_228 );
    sensitive << ( tmp_65_cast_fu_184_p1 );

    SC_METHOD(thread_tmp_61_fu_201_p2);
    sensitive << ( tmp_62_cast_reg_247 );
    sensitive << ( tmp_73_cast_fu_193_p3 );

    SC_METHOD(thread_tmp_62_cast_fu_159_p1);
    sensitive << ( j_reg_84 );

    SC_METHOD(thread_tmp_65_cast_fu_184_p1);
    sensitive << ( i_reg_95 );

    SC_METHOD(thread_tmp_70_cast_fu_126_p1);
    sensitive << ( tmp_fu_118_p3 );

    SC_METHOD(thread_tmp_73_cast_fu_193_p3);
    sensitive << ( tmp_60_fu_188_p2 );

    SC_METHOD(thread_tmp_74_cast_fu_206_p1);
    sensitive << ( tmp_61_fu_201_p2 );

    SC_METHOD(thread_tmp_95_cast_fu_142_p1);
    sensitive << ( j_reg_84 );

    SC_METHOD(thread_tmp_fu_118_p3);
    sensitive << ( n_reg_73 );

    SC_METHOD(thread_tmp_s_fu_146_p2);
    sensitive << ( tmp_reg_223 );
    sensitive << ( tmp_95_cast_fu_142_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond3_fu_106_p2 );
    sensitive << ( exitcond2_fu_130_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_167_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );

    ap_CS_fsm = "00001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Reshape_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, src_val_V_address0, "(port)src_val_V_address0");
    sc_trace(mVcdFile, src_val_V_ce0, "(port)src_val_V_ce0");
    sc_trace(mVcdFile, src_val_V_q0, "(port)src_val_V_q0");
    sc_trace(mVcdFile, dst_V_address0, "(port)dst_V_address0");
    sc_trace(mVcdFile, dst_V_ce0, "(port)dst_V_ce0");
    sc_trace(mVcdFile, dst_V_we0, "(port)dst_V_we0");
    sc_trace(mVcdFile, dst_V_d0, "(port)dst_V_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i_reg_95, "i_reg_95");
    sc_trace(mVcdFile, n_1_fu_112_p2, "n_1_fu_112_p2");
    sc_trace(mVcdFile, n_1_reg_218, "n_1_reg_218");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_fu_118_p3, "tmp_fu_118_p3");
    sc_trace(mVcdFile, tmp_reg_223, "tmp_reg_223");
    sc_trace(mVcdFile, exitcond3_fu_106_p2, "exitcond3_fu_106_p2");
    sc_trace(mVcdFile, tmp_70_cast_fu_126_p1, "tmp_70_cast_fu_126_p1");
    sc_trace(mVcdFile, tmp_70_cast_reg_228, "tmp_70_cast_reg_228");
    sc_trace(mVcdFile, exitcond2_fu_130_p2, "exitcond2_fu_130_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, j_1_fu_136_p2, "j_1_fu_136_p2");
    sc_trace(mVcdFile, j_1_reg_237, "j_1_reg_237");
    sc_trace(mVcdFile, tmp_57_fu_151_p3, "tmp_57_fu_151_p3");
    sc_trace(mVcdFile, tmp_57_reg_242, "tmp_57_reg_242");
    sc_trace(mVcdFile, tmp_62_cast_fu_159_p1, "tmp_62_cast_fu_159_p1");
    sc_trace(mVcdFile, tmp_62_cast_reg_247, "tmp_62_cast_reg_247");
    sc_trace(mVcdFile, exitcond_fu_167_p2, "exitcond_fu_167_p2");
    sc_trace(mVcdFile, exitcond_reg_252, "exitcond_reg_252");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter0, "ap_block_state4_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter1, "ap_block_state5_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, i_1_fu_173_p2, "i_1_fu_173_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, index_fu_179_p2, "index_fu_179_p2");
    sc_trace(mVcdFile, index_reg_261, "index_reg_261");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state4, "ap_condition_pp0_exit_iter0_state4");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, n_reg_73, "n_reg_73");
    sc_trace(mVcdFile, j_reg_84, "j_reg_84");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, tmp_74_cast_fu_206_p1, "tmp_74_cast_fu_206_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, tmp_59_fu_211_p1, "tmp_59_fu_211_p1");
    sc_trace(mVcdFile, tmp_95_cast_fu_142_p1, "tmp_95_cast_fu_142_p1");
    sc_trace(mVcdFile, tmp_s_fu_146_p2, "tmp_s_fu_146_p2");
    sc_trace(mVcdFile, i_cast8_fu_163_p1, "i_cast8_fu_163_p1");
    sc_trace(mVcdFile, tmp_65_cast_fu_184_p1, "tmp_65_cast_fu_184_p1");
    sc_trace(mVcdFile, tmp_60_fu_188_p2, "tmp_60_fu_188_p2");
    sc_trace(mVcdFile, tmp_73_cast_fu_193_p3, "tmp_73_cast_fu_193_p3");
    sc_trace(mVcdFile, tmp_61_fu_201_p2, "tmp_61_fu_201_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

Reshape::~Reshape() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void Reshape::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state4.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(exitcond2_fu_130_p2.read(), ap_const_lv1_0) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state4.read()))) {
            ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state4.read() ^ ap_const_logic_1);
        } else if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(exitcond2_fu_130_p2.read(), ap_const_lv1_0) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(exitcond2_fu_130_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        i_reg_95 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_167_p2.read()))) {
        i_reg_95 = i_1_fu_173_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        j_reg_84 = j_1_reg_237.read();
    } else if ((esl_seteq<1,1,1>(exitcond3_fu_106_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        j_reg_84 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(exitcond2_fu_130_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        n_reg_73 = n_1_reg_218.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        n_reg_73 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        exitcond_reg_252 = exitcond_fu_167_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_167_p2.read()))) {
        index_reg_261 = index_fu_179_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        j_1_reg_237 = j_1_fu_136_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        n_1_reg_218 = n_1_fu_112_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond2_fu_130_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        tmp_57_reg_242 = tmp_57_fu_151_p3.read();
        tmp_62_cast_reg_247 = tmp_62_cast_fu_159_p1.read();
    }
    if ((esl_seteq<1,1,1>(exitcond3_fu_106_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        tmp_70_cast_reg_228 = tmp_70_cast_fu_126_p1.read();
        tmp_reg_223 = tmp_fu_118_p3.read();
    }
}

void Reshape::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[3];
}

void Reshape::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void Reshape::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void Reshape::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void Reshape::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[4];
}

void Reshape::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reshape::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reshape::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reshape::thread_ap_block_state4_pp0_stage0_iter0() {
    ap_block_state4_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reshape::thread_ap_block_state5_pp0_stage0_iter1() {
    ap_block_state5_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reshape::thread_ap_condition_pp0_exit_iter0_state4() {
    if (esl_seteq<1,1,1>(exitcond_fu_167_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state4 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state4 = ap_const_logic_0;
    }
}

void Reshape::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(exitcond3_fu_106_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void Reshape::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void Reshape::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Reshape::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void Reshape::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(exitcond3_fu_106_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void Reshape::thread_dst_V_address0() {
    dst_V_address0 =  (sc_lv<8>) (tmp_59_fu_211_p1.read());
}

void Reshape::thread_dst_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        dst_V_ce0 = ap_const_logic_1;
    } else {
        dst_V_ce0 = ap_const_logic_0;
    }
}

void Reshape::thread_dst_V_d0() {
    dst_V_d0 = src_val_V_q0.read();
}

void Reshape::thread_dst_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_252.read()))) {
        dst_V_we0 = ap_const_logic_1;
    } else {
        dst_V_we0 = ap_const_logic_0;
    }
}

void Reshape::thread_exitcond2_fu_130_p2() {
    exitcond2_fu_130_p2 = (!j_reg_84.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_84.read() == ap_const_lv3_4);
}

void Reshape::thread_exitcond3_fu_106_p2() {
    exitcond3_fu_106_p2 = (!n_reg_73.read().is_01() || !ap_const_lv4_C.is_01())? sc_lv<1>(): sc_lv<1>(n_reg_73.read() == ap_const_lv4_C);
}

void Reshape::thread_exitcond_fu_167_p2() {
    exitcond_fu_167_p2 = (!i_reg_95.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_95.read() == ap_const_lv3_4);
}

void Reshape::thread_i_1_fu_173_p2() {
    i_1_fu_173_p2 = (!i_reg_95.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i_reg_95.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void Reshape::thread_i_cast8_fu_163_p1() {
    i_cast8_fu_163_p1 = esl_zext<8,3>(i_reg_95.read());
}

void Reshape::thread_index_fu_179_p2() {
    index_fu_179_p2 = (!tmp_57_reg_242.read().is_01() || !i_cast8_fu_163_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_57_reg_242.read()) + sc_biguint<8>(i_cast8_fu_163_p1.read()));
}

void Reshape::thread_j_1_fu_136_p2() {
    j_1_fu_136_p2 = (!j_reg_84.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(j_reg_84.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void Reshape::thread_n_1_fu_112_p2() {
    n_1_fu_112_p2 = (!n_reg_73.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(n_reg_73.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void Reshape::thread_src_val_V_address0() {
    src_val_V_address0 =  (sc_lv<8>) (tmp_74_cast_fu_206_p1.read());
}

void Reshape::thread_src_val_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1))) {
        src_val_V_ce0 = ap_const_logic_1;
    } else {
        src_val_V_ce0 = ap_const_logic_0;
    }
}

void Reshape::thread_tmp_57_fu_151_p3() {
    tmp_57_fu_151_p3 = esl_concat<6,2>(tmp_s_fu_146_p2.read(), ap_const_lv2_0);
}

void Reshape::thread_tmp_59_fu_211_p1() {
    tmp_59_fu_211_p1 = esl_zext<64,8>(index_reg_261.read());
}

void Reshape::thread_tmp_60_fu_188_p2() {
    tmp_60_fu_188_p2 = (!tmp_65_cast_fu_184_p1.read().is_01() || !tmp_70_cast_reg_228.read().is_01())? sc_lv<7>(): (sc_biguint<7>(tmp_65_cast_fu_184_p1.read()) + sc_biguint<7>(tmp_70_cast_reg_228.read()));
}

void Reshape::thread_tmp_61_fu_201_p2() {
    tmp_61_fu_201_p2 = (!tmp_62_cast_reg_247.read().is_01() || !tmp_73_cast_fu_193_p3.read().is_01())? sc_lv<9>(): (sc_biguint<9>(tmp_62_cast_reg_247.read()) + sc_biguint<9>(tmp_73_cast_fu_193_p3.read()));
}

void Reshape::thread_tmp_62_cast_fu_159_p1() {
    tmp_62_cast_fu_159_p1 = esl_zext<9,3>(j_reg_84.read());
}

void Reshape::thread_tmp_65_cast_fu_184_p1() {
    tmp_65_cast_fu_184_p1 = esl_zext<7,3>(i_reg_95.read());
}

void Reshape::thread_tmp_70_cast_fu_126_p1() {
    tmp_70_cast_fu_126_p1 = esl_zext<7,6>(tmp_fu_118_p3.read());
}

void Reshape::thread_tmp_73_cast_fu_193_p3() {
    tmp_73_cast_fu_193_p3 = esl_concat<7,2>(tmp_60_fu_188_p2.read(), ap_const_lv2_0);
}

void Reshape::thread_tmp_74_cast_fu_206_p1() {
    tmp_74_cast_fu_206_p1 = esl_zext<64,9>(tmp_61_fu_201_p2.read());
}

void Reshape::thread_tmp_95_cast_fu_142_p1() {
    tmp_95_cast_fu_142_p1 = esl_zext<6,3>(j_reg_84.read());
}

void Reshape::thread_tmp_fu_118_p3() {
    tmp_fu_118_p3 = esl_concat<4,2>(n_reg_73.read(), ap_const_lv2_0);
}

void Reshape::thread_tmp_s_fu_146_p2() {
    tmp_s_fu_146_p2 = (!tmp_reg_223.read().is_01() || !tmp_95_cast_fu_142_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_reg_223.read()) + sc_biguint<6>(tmp_95_cast_fu_142_p1.read()));
}

void Reshape::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(exitcond3_fu_106_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(exitcond2_fu_130_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 8 : 
            if (!(esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && esl_seteq<1,1,1>(exitcond_fu_167_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && esl_seteq<1,1,1>(exitcond_fu_167_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        default : 
            ap_NS_fsm = "XXXXX";
            break;
    }
}

}

