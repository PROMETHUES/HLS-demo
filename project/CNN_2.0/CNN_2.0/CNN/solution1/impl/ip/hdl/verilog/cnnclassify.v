// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module cnnclassify (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        input_val_V_address0,
        input_val_V_ce0,
        input_val_V_q0,
        input_rows_dout,
        input_rows_empty_n,
        input_rows_read,
        input_cols_dout,
        input_cols_empty_n,
        input_cols_read,
        label_r,
        label_r_ap_vld,
        score,
        score_ap_vld
);

parameter    ap_ST_fsm_state1 = 22'd1;
parameter    ap_ST_fsm_state2 = 22'd2;
parameter    ap_ST_fsm_state3 = 22'd4;
parameter    ap_ST_fsm_state4 = 22'd8;
parameter    ap_ST_fsm_pp0_stage0 = 22'd16;
parameter    ap_ST_fsm_state7 = 22'd32;
parameter    ap_ST_fsm_state8 = 22'd64;
parameter    ap_ST_fsm_state9 = 22'd128;
parameter    ap_ST_fsm_state10 = 22'd256;
parameter    ap_ST_fsm_state11 = 22'd512;
parameter    ap_ST_fsm_state12 = 22'd1024;
parameter    ap_ST_fsm_state13 = 22'd2048;
parameter    ap_ST_fsm_state14 = 22'd4096;
parameter    ap_ST_fsm_state15 = 22'd8192;
parameter    ap_ST_fsm_state16 = 22'd16384;
parameter    ap_ST_fsm_state17 = 22'd32768;
parameter    ap_ST_fsm_state18 = 22'd65536;
parameter    ap_ST_fsm_pp1_stage0 = 22'd131072;
parameter    ap_ST_fsm_state21 = 22'd262144;
parameter    ap_ST_fsm_state22 = 22'd524288;
parameter    ap_ST_fsm_state23 = 22'd1048576;
parameter    ap_ST_fsm_state24 = 22'd2097152;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [9:0] input_val_V_address0;
output   input_val_V_ce0;
input  [23:0] input_val_V_q0;
input  [5:0] input_rows_dout;
input   input_rows_empty_n;
output   input_rows_read;
input  [5:0] input_cols_dout;
input   input_cols_empty_n;
output   input_cols_read;
output  [31:0] label_r;
output   label_r_ap_vld;
output  [31:0] score;
output   score_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg input_val_V_ce0;
reg input_rows_read;
reg input_cols_read;
reg label_r_ap_vld;
reg score_ap_vld;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [21:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    input_rows_blk_n;
reg    input_cols_blk_n;
reg   [4:0] j_0_i_i_i_reg_271;
reg   [31:0] outputlayer_label_reg_282;
reg   [31:0] outputlayer_score_V_reg_295;
reg   [3:0] i_0_i_i3925_i_reg_305;
reg   [5:0] input_rows_read_reg_639;
reg    ap_block_state1;
reg   [5:0] input_cols_read_reg_644;
wire   [2:0] tmp_270_i_fu_378_p2;
wire    ap_CS_fsm_state2;
wire   [3:0] tmp_280_i_fu_390_p2;
wire    ap_CS_fsm_state3;
wire   [0:0] tmp_i_i_fu_406_p2;
wire    ap_CS_fsm_state4;
wire   [4:0] i_fu_411_p2;
reg   [4:0] i_reg_669;
wire   [10:0] tmp_2_fu_441_p2;
reg   [10:0] tmp_2_reg_674;
wire   [0:0] tmp_117_i_i_fu_451_p2;
reg   [0:0] tmp_117_i_i_reg_679;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state5_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [4:0] j_fu_456_p2;
reg    ap_enable_reg_pp0_iter0;
wire  signed [63:0] tmp_3_cast_fu_471_p1;
reg  signed [63:0] tmp_3_cast_reg_688;
wire    ap_CS_fsm_state17;
wire   [31:0] cconlayer_output_V_q0;
wire    ap_CS_fsm_state18;
wire   [0:0] exitcond_i_i_i_fu_476_p2;
reg   [0:0] exitcond_i_i_i_reg_708;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state19_pp1_stage0_iter0;
wire    ap_block_state20_pp1_stage0_iter1;
wire    ap_block_pp1_stage0_11001;
wire   [3:0] i_1_fu_487_p2;
reg   [3:0] i_1_reg_717;
reg    ap_enable_reg_pp1_iter0;
wire   [31:0] sel_SEBB_fu_503_p3;
reg    ap_enable_reg_pp1_iter1;
wire   [31:0] input_V_load_1_i_i_o_fu_511_p3;
wire   [0:0] tmp_286_i_fu_519_p2;
reg   [0:0] tmp_286_i_reg_732;
wire    ap_CS_fsm_state21;
wire   [0:0] is_neg_fu_525_p3;
reg   [0:0] is_neg_reg_737;
wire   [31:0] tmp32_V_1_fu_565_p2;
reg   [31:0] tmp32_V_1_reg_742;
wire   [7:0] tmp_5_fu_571_p1;
reg   [7:0] tmp_5_reg_747;
wire   [31:0] tmp32_V_fu_575_p1;
reg   [31:0] tmp32_V_reg_752;
wire    ap_CS_fsm_state23;
reg   [7:0] p_Result_i_reg_757;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state5;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state19;
reg   [9:0] inputlayer_output_0_address0;
reg    inputlayer_output_0_ce0;
reg    inputlayer_output_0_we0;
wire   [23:0] inputlayer_output_0_q0;
reg   [11:0] convlayer1_output_va_address0;
reg    convlayer1_output_va_ce0;
reg    convlayer1_output_va_we0;
wire   [31:0] convlayer1_output_va_q0;
reg   [9:0] poollayer1_output_va_address0;
reg    poollayer1_output_va_ce0;
reg    poollayer1_output_va_we0;
wire   [31:0] poollayer1_output_va_q0;
reg   [9:0] convlayer2_output_va_address0;
reg    convlayer2_output_va_ce0;
reg    convlayer2_output_va_we0;
wire   [31:0] convlayer2_output_va_q0;
reg   [7:0] poollayer2_output_va_address0;
reg    poollayer2_output_va_ce0;
reg    poollayer2_output_va_we0;
wire   [31:0] poollayer2_output_va_q0;
reg   [3:0] cconlayer_output_V_address0;
reg    cconlayer_output_V_ce0;
reg    cconlayer_output_V_we0;
wire    grp_ConvLayer_1_fu_317_ap_start;
wire    grp_ConvLayer_1_fu_317_ap_done;
wire    grp_ConvLayer_1_fu_317_ap_idle;
wire    grp_ConvLayer_1_fu_317_ap_ready;
wire   [9:0] grp_ConvLayer_1_fu_317_input_0_val_V_address0;
wire    grp_ConvLayer_1_fu_317_input_0_val_V_ce0;
wire   [11:0] grp_ConvLayer_1_fu_317_convlayer_output_val_V_address0;
wire    grp_ConvLayer_1_fu_317_convlayer_output_val_V_ce0;
wire    grp_ConvLayer_1_fu_317_convlayer_output_val_V_we0;
wire   [31:0] grp_ConvLayer_1_fu_317_convlayer_output_val_V_d0;
wire   [2:0] grp_ConvLayer_1_fu_317_convlayer_output_rows_address0;
wire    grp_ConvLayer_1_fu_317_convlayer_output_rows_ce0;
wire    grp_ConvLayer_1_fu_317_convlayer_output_rows_we0;
wire   [5:0] grp_ConvLayer_1_fu_317_convlayer_output_rows_d0;
wire   [2:0] grp_ConvLayer_1_fu_317_convlayer_output_cols_address0;
wire    grp_ConvLayer_1_fu_317_convlayer_output_cols_ce0;
wire    grp_ConvLayer_1_fu_317_convlayer_output_cols_we0;
wire   [5:0] grp_ConvLayer_1_fu_317_convlayer_output_cols_d0;
wire    grp_ConvLayer_fu_335_ap_start;
wire    grp_ConvLayer_fu_335_ap_done;
wire    grp_ConvLayer_fu_335_ap_idle;
wire    grp_ConvLayer_fu_335_ap_ready;
wire   [9:0] grp_ConvLayer_fu_335_input_val_V_address0;
wire    grp_ConvLayer_fu_335_input_val_V_ce0;
wire   [9:0] grp_ConvLayer_fu_335_convlayer_output_val_V_address0;
wire    grp_ConvLayer_fu_335_convlayer_output_val_V_ce0;
wire    grp_ConvLayer_fu_335_convlayer_output_val_V_we0;
wire   [31:0] grp_ConvLayer_fu_335_convlayer_output_val_V_d0;
wire   [3:0] grp_ConvLayer_fu_335_convlayer_output_rows_address0;
wire    grp_ConvLayer_fu_335_convlayer_output_rows_ce0;
wire    grp_ConvLayer_fu_335_convlayer_output_rows_we0;
wire   [4:0] grp_ConvLayer_fu_335_convlayer_output_rows_d0;
wire   [3:0] grp_ConvLayer_fu_335_convlayer_output_cols_address0;
wire    grp_ConvLayer_fu_335_convlayer_output_cols_ce0;
wire    grp_ConvLayer_fu_335_convlayer_output_cols_we0;
wire   [4:0] grp_ConvLayer_fu_335_convlayer_output_cols_d0;
wire    grp_CconLayer_fu_353_ap_start;
wire    grp_CconLayer_fu_353_ap_done;
wire    grp_CconLayer_fu_353_ap_idle;
wire    grp_CconLayer_fu_353_ap_ready;
wire   [7:0] grp_CconLayer_fu_353_input_val_V_address0;
wire    grp_CconLayer_fu_353_input_val_V_ce0;
wire   [3:0] grp_CconLayer_fu_353_cconlayer_output_V_address0;
wire    grp_CconLayer_fu_353_cconlayer_output_V_ce0;
wire    grp_CconLayer_fu_353_cconlayer_output_V_we0;
wire   [31:0] grp_CconLayer_fu_353_cconlayer_output_V_d0;
wire    grp_PoolLayer_fu_363_ap_start;
wire    grp_PoolLayer_fu_363_ap_done;
wire    grp_PoolLayer_fu_363_ap_idle;
wire    grp_PoolLayer_fu_363_ap_ready;
wire   [11:0] grp_PoolLayer_fu_363_input_val_V_address0;
wire    grp_PoolLayer_fu_363_input_val_V_ce0;
wire   [9:0] grp_PoolLayer_fu_363_poollayer_output_val_V_address0;
wire    grp_PoolLayer_fu_363_poollayer_output_val_V_ce0;
wire    grp_PoolLayer_fu_363_poollayer_output_val_V_we0;
wire   [31:0] grp_PoolLayer_fu_363_poollayer_output_val_V_d0;
wire    grp_PoolLayer_1_fu_369_ap_start;
wire    grp_PoolLayer_1_fu_369_ap_done;
wire    grp_PoolLayer_1_fu_369_ap_idle;
wire    grp_PoolLayer_1_fu_369_ap_ready;
wire   [9:0] grp_PoolLayer_1_fu_369_input_val_V_address0;
wire    grp_PoolLayer_1_fu_369_input_val_V_ce0;
wire   [7:0] grp_PoolLayer_1_fu_369_poollayer_output_val_V_address0;
wire    grp_PoolLayer_1_fu_369_poollayer_output_val_V_ce0;
wire    grp_PoolLayer_1_fu_369_poollayer_output_val_V_we0;
wire   [31:0] grp_PoolLayer_1_fu_369_poollayer_output_val_V_d0;
reg   [2:0] tmp_269_i_reg_238;
wire   [0:0] tmp_272_i_fu_384_p2;
reg   [3:0] tmp_279_i_reg_249;
wire   [0:0] tmp_282_i_fu_396_p2;
reg   [4:0] i_0_i_i_i_reg_260;
wire    ap_CS_fsm_state7;
wire    ap_block_pp1_stage0;
reg   [3:0] ap_phi_mux_i_0_i_i3925_i_phi_fu_309_p4;
reg    grp_ConvLayer_1_fu_317_ap_start_reg;
wire    ap_CS_fsm_state8;
reg    grp_ConvLayer_fu_335_ap_start_reg;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
reg    grp_CconLayer_fu_353_ap_start_reg;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state16;
reg    grp_PoolLayer_fu_363_ap_start_reg;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
reg    grp_PoolLayer_1_fu_369_ap_start_reg;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
wire    ap_block_pp0_stage0;
wire   [63:0] tmp_i3926_i_fu_482_p1;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state22;
wire   [5:0] i_0_i_i_cast_cast_i_fu_402_p1;
wire   [9:0] tmp_fu_417_p3;
wire   [6:0] tmp_1_fu_429_p3;
wire   [10:0] p_shl_cast_fu_425_p1;
wire   [10:0] p_shl1_cast_fu_437_p1;
wire   [5:0] j_0_i_i_cast_cast_i_fu_447_p1;
wire   [10:0] tmp_118_i_i_cast_fu_462_p1;
wire   [10:0] tmp_3_fu_466_p2;
wire   [0:0] tmp_i3927_i_fu_497_p2;
wire   [31:0] i_0_i_i3925_cast_fu_493_p1;
wire   [31:0] tmp_287_i_fu_533_p2;
wire   [31:0] outputlayer_score_V_1_fu_539_p3;
reg   [31:0] p_Result_s_fu_547_p4;
reg   [31:0] num_zeros_fu_557_p3;
wire   [31:0] grp_fu_375_p1;
wire   [0:0] tmp_288_i_fu_589_p2;
wire   [7:0] tmp_186_i_fu_594_p2;
wire   [7:0] tmp_187_i_fu_599_p1;
wire   [7:0] p_Repl2_7_trunc_i_fu_603_p2;
wire   [8:0] tmp_188_i_fu_609_p3;
wire   [31:0] p_Result_1_fu_616_p5;
wire   [31:0] f_fu_627_p1;
reg   [21:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 22'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 grp_ConvLayer_1_fu_317_ap_start_reg = 1'b0;
#0 grp_ConvLayer_fu_335_ap_start_reg = 1'b0;
#0 grp_CconLayer_fu_353_ap_start_reg = 1'b0;
#0 grp_PoolLayer_fu_363_ap_start_reg = 1'b0;
#0 grp_PoolLayer_1_fu_369_ap_start_reg = 1'b0;
end

cnnclassify_convlNgs #(
    .DataWidth( 6 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
convlayer1_output_ro_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_ConvLayer_1_fu_317_convlayer_output_rows_address0),
    .ce0(grp_ConvLayer_1_fu_317_convlayer_output_rows_ce0),
    .we0(grp_ConvLayer_1_fu_317_convlayer_output_rows_we0),
    .d0(grp_ConvLayer_1_fu_317_convlayer_output_rows_d0)
);

cnnclassify_convlNgs #(
    .DataWidth( 6 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
convlayer1_output_co_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_ConvLayer_1_fu_317_convlayer_output_cols_address0),
    .ce0(grp_ConvLayer_1_fu_317_convlayer_output_cols_ce0),
    .we0(grp_ConvLayer_1_fu_317_convlayer_output_cols_we0),
    .d0(grp_ConvLayer_1_fu_317_convlayer_output_cols_d0)
);

cnnclassify_convlPgM #(
    .DataWidth( 5 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
convlayer2_output_ro_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_ConvLayer_fu_335_convlayer_output_rows_address0),
    .ce0(grp_ConvLayer_fu_335_convlayer_output_rows_ce0),
    .we0(grp_ConvLayer_fu_335_convlayer_output_rows_we0),
    .d0(grp_ConvLayer_fu_335_convlayer_output_rows_d0)
);

cnnclassify_convlPgM #(
    .DataWidth( 5 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
convlayer2_output_co_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_ConvLayer_fu_335_convlayer_output_cols_address0),
    .ce0(grp_ConvLayer_fu_335_convlayer_output_cols_ce0),
    .we0(grp_ConvLayer_fu_335_convlayer_output_cols_we0),
    .d0(grp_ConvLayer_fu_335_convlayer_output_cols_d0)
);

cnnclassify_inputRg6 #(
    .DataWidth( 24 ),
    .AddressRange( 784 ),
    .AddressWidth( 10 ))
inputlayer_output_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inputlayer_output_0_address0),
    .ce0(inputlayer_output_0_ce0),
    .we0(inputlayer_output_0_we0),
    .d0(input_val_V_q0),
    .q0(inputlayer_output_0_q0)
);

cnnclassify_convlShg #(
    .DataWidth( 32 ),
    .AddressRange( 3456 ),
    .AddressWidth( 12 ))
convlayer1_output_va_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(convlayer1_output_va_address0),
    .ce0(convlayer1_output_va_ce0),
    .we0(convlayer1_output_va_we0),
    .d0(grp_ConvLayer_1_fu_317_convlayer_output_val_V_d0),
    .q0(convlayer1_output_va_q0)
);

cnnclassify_poollThq #(
    .DataWidth( 32 ),
    .AddressRange( 864 ),
    .AddressWidth( 10 ))
poollayer1_output_va_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(poollayer1_output_va_address0),
    .ce0(poollayer1_output_va_ce0),
    .we0(poollayer1_output_va_we0),
    .d0(grp_PoolLayer_fu_363_poollayer_output_val_V_d0),
    .q0(poollayer1_output_va_q0)
);

cnnclassify_convlUhA #(
    .DataWidth( 32 ),
    .AddressRange( 768 ),
    .AddressWidth( 10 ))
convlayer2_output_va_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(convlayer2_output_va_address0),
    .ce0(convlayer2_output_va_ce0),
    .we0(convlayer2_output_va_we0),
    .d0(grp_ConvLayer_fu_335_convlayer_output_val_V_d0),
    .q0(convlayer2_output_va_q0)
);

CconLayer_p_temp #(
    .DataWidth( 32 ),
    .AddressRange( 192 ),
    .AddressWidth( 8 ))
poollayer2_output_va_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(poollayer2_output_va_address0),
    .ce0(poollayer2_output_va_ce0),
    .we0(poollayer2_output_va_we0),
    .d0(grp_PoolLayer_1_fu_369_poollayer_output_val_V_d0),
    .q0(poollayer2_output_va_q0)
);

cnnclassify_cconlWhU #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
cconlayer_output_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(cconlayer_output_V_address0),
    .ce0(cconlayer_output_V_ce0),
    .we0(cconlayer_output_V_we0),
    .d0(grp_CconLayer_fu_353_cconlayer_output_V_d0),
    .q0(cconlayer_output_V_q0)
);

ConvLayer_1 grp_ConvLayer_1_fu_317(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_ConvLayer_1_fu_317_ap_start),
    .ap_done(grp_ConvLayer_1_fu_317_ap_done),
    .ap_idle(grp_ConvLayer_1_fu_317_ap_idle),
    .ap_ready(grp_ConvLayer_1_fu_317_ap_ready),
    .input_0_val_V_address0(grp_ConvLayer_1_fu_317_input_0_val_V_address0),
    .input_0_val_V_ce0(grp_ConvLayer_1_fu_317_input_0_val_V_ce0),
    .input_0_val_V_q0(inputlayer_output_0_q0),
    .convlayer_output_val_V_address0(grp_ConvLayer_1_fu_317_convlayer_output_val_V_address0),
    .convlayer_output_val_V_ce0(grp_ConvLayer_1_fu_317_convlayer_output_val_V_ce0),
    .convlayer_output_val_V_we0(grp_ConvLayer_1_fu_317_convlayer_output_val_V_we0),
    .convlayer_output_val_V_d0(grp_ConvLayer_1_fu_317_convlayer_output_val_V_d0),
    .convlayer_output_rows_address0(grp_ConvLayer_1_fu_317_convlayer_output_rows_address0),
    .convlayer_output_rows_ce0(grp_ConvLayer_1_fu_317_convlayer_output_rows_ce0),
    .convlayer_output_rows_we0(grp_ConvLayer_1_fu_317_convlayer_output_rows_we0),
    .convlayer_output_rows_d0(grp_ConvLayer_1_fu_317_convlayer_output_rows_d0),
    .convlayer_output_cols_address0(grp_ConvLayer_1_fu_317_convlayer_output_cols_address0),
    .convlayer_output_cols_ce0(grp_ConvLayer_1_fu_317_convlayer_output_cols_ce0),
    .convlayer_output_cols_we0(grp_ConvLayer_1_fu_317_convlayer_output_cols_we0),
    .convlayer_output_cols_d0(grp_ConvLayer_1_fu_317_convlayer_output_cols_d0)
);

ConvLayer grp_ConvLayer_fu_335(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_ConvLayer_fu_335_ap_start),
    .ap_done(grp_ConvLayer_fu_335_ap_done),
    .ap_idle(grp_ConvLayer_fu_335_ap_idle),
    .ap_ready(grp_ConvLayer_fu_335_ap_ready),
    .input_val_V_address0(grp_ConvLayer_fu_335_input_val_V_address0),
    .input_val_V_ce0(grp_ConvLayer_fu_335_input_val_V_ce0),
    .input_val_V_q0(poollayer1_output_va_q0),
    .convlayer_output_val_V_address0(grp_ConvLayer_fu_335_convlayer_output_val_V_address0),
    .convlayer_output_val_V_ce0(grp_ConvLayer_fu_335_convlayer_output_val_V_ce0),
    .convlayer_output_val_V_we0(grp_ConvLayer_fu_335_convlayer_output_val_V_we0),
    .convlayer_output_val_V_d0(grp_ConvLayer_fu_335_convlayer_output_val_V_d0),
    .convlayer_output_rows_address0(grp_ConvLayer_fu_335_convlayer_output_rows_address0),
    .convlayer_output_rows_ce0(grp_ConvLayer_fu_335_convlayer_output_rows_ce0),
    .convlayer_output_rows_we0(grp_ConvLayer_fu_335_convlayer_output_rows_we0),
    .convlayer_output_rows_d0(grp_ConvLayer_fu_335_convlayer_output_rows_d0),
    .convlayer_output_cols_address0(grp_ConvLayer_fu_335_convlayer_output_cols_address0),
    .convlayer_output_cols_ce0(grp_ConvLayer_fu_335_convlayer_output_cols_ce0),
    .convlayer_output_cols_we0(grp_ConvLayer_fu_335_convlayer_output_cols_we0),
    .convlayer_output_cols_d0(grp_ConvLayer_fu_335_convlayer_output_cols_d0)
);

CconLayer grp_CconLayer_fu_353(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_CconLayer_fu_353_ap_start),
    .ap_done(grp_CconLayer_fu_353_ap_done),
    .ap_idle(grp_CconLayer_fu_353_ap_idle),
    .ap_ready(grp_CconLayer_fu_353_ap_ready),
    .input_val_V_address0(grp_CconLayer_fu_353_input_val_V_address0),
    .input_val_V_ce0(grp_CconLayer_fu_353_input_val_V_ce0),
    .input_val_V_q0(poollayer2_output_va_q0),
    .cconlayer_output_V_address0(grp_CconLayer_fu_353_cconlayer_output_V_address0),
    .cconlayer_output_V_ce0(grp_CconLayer_fu_353_cconlayer_output_V_ce0),
    .cconlayer_output_V_we0(grp_CconLayer_fu_353_cconlayer_output_V_we0),
    .cconlayer_output_V_d0(grp_CconLayer_fu_353_cconlayer_output_V_d0)
);

PoolLayer grp_PoolLayer_fu_363(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_PoolLayer_fu_363_ap_start),
    .ap_done(grp_PoolLayer_fu_363_ap_done),
    .ap_idle(grp_PoolLayer_fu_363_ap_idle),
    .ap_ready(grp_PoolLayer_fu_363_ap_ready),
    .input_val_V_address0(grp_PoolLayer_fu_363_input_val_V_address0),
    .input_val_V_ce0(grp_PoolLayer_fu_363_input_val_V_ce0),
    .input_val_V_q0(convlayer1_output_va_q0),
    .poollayer_output_val_V_address0(grp_PoolLayer_fu_363_poollayer_output_val_V_address0),
    .poollayer_output_val_V_ce0(grp_PoolLayer_fu_363_poollayer_output_val_V_ce0),
    .poollayer_output_val_V_we0(grp_PoolLayer_fu_363_poollayer_output_val_V_we0),
    .poollayer_output_val_V_d0(grp_PoolLayer_fu_363_poollayer_output_val_V_d0)
);

PoolLayer_1 grp_PoolLayer_1_fu_369(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_PoolLayer_1_fu_369_ap_start),
    .ap_done(grp_PoolLayer_1_fu_369_ap_done),
    .ap_idle(grp_PoolLayer_1_fu_369_ap_idle),
    .ap_ready(grp_PoolLayer_1_fu_369_ap_ready),
    .input_val_V_address0(grp_PoolLayer_1_fu_369_input_val_V_address0),
    .input_val_V_ce0(grp_PoolLayer_1_fu_369_input_val_V_ce0),
    .input_val_V_q0(convlayer2_output_va_q0),
    .poollayer_output_val_V_address0(grp_PoolLayer_1_fu_369_poollayer_output_val_V_address0),
    .poollayer_output_val_V_ce0(grp_PoolLayer_1_fu_369_poollayer_output_val_V_ce0),
    .poollayer_output_val_V_we0(grp_PoolLayer_1_fu_369_poollayer_output_val_V_we0),
    .poollayer_output_val_V_d0(grp_PoolLayer_1_fu_369_poollayer_output_val_V_d0)
);

CNN_Core_uitofp_3qcK #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
CNN_Core_uitofp_3qcK_U176(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp32_V_1_reg_742),
    .ce(1'b1),
    .dout(grp_fu_375_p1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state24)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state5) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state4) & (tmp_i_i_fu_406_p2 == 1'd1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state5))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state5);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state4) & (tmp_i_i_fu_406_p2 == 1'd1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state19) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state18)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state19))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state19);
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if ((1'b1 == ap_CS_fsm_state18)) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_CconLayer_fu_353_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state15)) begin
            grp_CconLayer_fu_353_ap_start_reg <= 1'b1;
        end else if ((grp_CconLayer_fu_353_ap_ready == 1'b1)) begin
            grp_CconLayer_fu_353_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_ConvLayer_1_fu_317_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state4) & (tmp_i_i_fu_406_p2 == 1'd0))) begin
            grp_ConvLayer_1_fu_317_ap_start_reg <= 1'b1;
        end else if ((grp_ConvLayer_1_fu_317_ap_ready == 1'b1)) begin
            grp_ConvLayer_1_fu_317_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_ConvLayer_fu_335_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state11)) begin
            grp_ConvLayer_fu_335_ap_start_reg <= 1'b1;
        end else if ((grp_ConvLayer_fu_335_ap_ready == 1'b1)) begin
            grp_ConvLayer_fu_335_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_PoolLayer_1_fu_369_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state13)) begin
            grp_PoolLayer_1_fu_369_ap_start_reg <= 1'b1;
        end else if ((grp_PoolLayer_1_fu_369_ap_ready == 1'b1)) begin
            grp_PoolLayer_1_fu_369_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_PoolLayer_fu_363_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state9)) begin
            grp_PoolLayer_fu_363_ap_start_reg <= 1'b1;
        end else if ((grp_PoolLayer_fu_363_ap_ready == 1'b1)) begin
            grp_PoolLayer_fu_363_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (exitcond_i_i_i_reg_708 == 1'd0))) begin
        i_0_i_i3925_i_reg_305 <= i_1_reg_717;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        i_0_i_i3925_i_reg_305 <= 4'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (tmp_282_i_fu_396_p2 == 1'd1))) begin
        i_0_i_i_i_reg_260 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        i_0_i_i_i_reg_260 <= i_reg_669;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (tmp_i_i_fu_406_p2 == 1'd1))) begin
        j_0_i_i_i_reg_271 <= 5'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_117_i_i_fu_451_p2 == 1'd1))) begin
        j_0_i_i_i_reg_271 <= j_fu_456_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (exitcond_i_i_i_reg_708 == 1'd0))) begin
        outputlayer_label_reg_282 <= sel_SEBB_fu_503_p3;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        outputlayer_label_reg_282 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (exitcond_i_i_i_reg_708 == 1'd0))) begin
        outputlayer_score_V_reg_295 <= input_V_load_1_i_i_o_fu_511_p3;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        outputlayer_score_V_reg_295 <= cconlayer_output_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_done_reg == 1'b1) | (input_cols_empty_n == 1'b0) | (input_rows_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_269_i_reg_238 <= 3'd0;
    end else if (((tmp_272_i_fu_384_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_269_i_reg_238 <= tmp_270_i_fu_378_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_272_i_fu_384_p2 == 1'd1))) begin
        tmp_279_i_reg_249 <= 4'd0;
    end else if (((tmp_282_i_fu_396_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_279_i_reg_249 <= tmp_280_i_fu_390_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        exitcond_i_i_i_reg_708 <= exitcond_i_i_i_fu_476_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (exitcond_i_i_i_fu_476_p2 == 1'd0))) begin
        i_1_reg_717 <= i_1_fu_487_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        i_reg_669 <= i_fu_411_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_done_reg == 1'b1) | (input_cols_empty_n == 1'b0) | (input_rows_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        input_cols_read_reg_644 <= input_cols_dout;
        input_rows_read_reg_639 <= input_rows_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        is_neg_reg_737 <= outputlayer_score_V_reg_295[32'd31];
        tmp32_V_1_reg_742 <= tmp32_V_1_fu_565_p2;
        tmp_286_i_reg_732 <= tmp_286_i_fu_519_p2;
        tmp_5_reg_747 <= tmp_5_fu_571_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_286_i_reg_732 == 1'd0) & (1'b1 == ap_CS_fsm_state23))) begin
        p_Result_i_reg_757 <= {{tmp32_V_fu_575_p1[30:23]}};
        tmp32_V_reg_752 <= tmp32_V_fu_575_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_117_i_i_reg_679 <= tmp_117_i_i_fu_451_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (tmp_i_i_fu_406_p2 == 1'd1))) begin
        tmp_2_reg_674[10 : 2] <= tmp_2_fu_441_p2[10 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_117_i_i_fu_451_p2 == 1'd1))) begin
        tmp_3_cast_reg_688 <= tmp_3_cast_fu_471_p1;
    end
end

always @ (*) begin
    if ((tmp_117_i_i_fu_451_p2 == 1'd0)) begin
        ap_condition_pp0_exit_iter0_state5 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state5 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_i_i_i_fu_476_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state19 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state19 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_i_i_i_reg_708 == 1'd0))) begin
        ap_phi_mux_i_0_i_i3925_i_phi_fu_309_p4 = i_1_reg_717;
    end else begin
        ap_phi_mux_i_0_i_i3925_i_phi_fu_309_p4 = i_0_i_i3925_i_reg_305;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        cconlayer_output_V_address0 = tmp_i3926_i_fu_482_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        cconlayer_output_V_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        cconlayer_output_V_address0 = grp_CconLayer_fu_353_cconlayer_output_V_address0;
    end else begin
        cconlayer_output_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        cconlayer_output_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        cconlayer_output_V_ce0 = grp_CconLayer_fu_353_cconlayer_output_V_ce0;
    end else begin
        cconlayer_output_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        cconlayer_output_V_we0 = grp_CconLayer_fu_353_cconlayer_output_V_we0;
    end else begin
        cconlayer_output_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        convlayer1_output_va_address0 = grp_PoolLayer_fu_363_input_val_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        convlayer1_output_va_address0 = grp_ConvLayer_1_fu_317_convlayer_output_val_V_address0;
    end else begin
        convlayer1_output_va_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        convlayer1_output_va_ce0 = grp_PoolLayer_fu_363_input_val_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        convlayer1_output_va_ce0 = grp_ConvLayer_1_fu_317_convlayer_output_val_V_ce0;
    end else begin
        convlayer1_output_va_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        convlayer1_output_va_we0 = grp_ConvLayer_1_fu_317_convlayer_output_val_V_we0;
    end else begin
        convlayer1_output_va_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        convlayer2_output_va_address0 = grp_PoolLayer_1_fu_369_input_val_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        convlayer2_output_va_address0 = grp_ConvLayer_fu_335_convlayer_output_val_V_address0;
    end else begin
        convlayer2_output_va_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        convlayer2_output_va_ce0 = grp_PoolLayer_1_fu_369_input_val_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        convlayer2_output_va_ce0 = grp_ConvLayer_fu_335_convlayer_output_val_V_ce0;
    end else begin
        convlayer2_output_va_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        convlayer2_output_va_we0 = grp_ConvLayer_fu_335_convlayer_output_val_V_we0;
    end else begin
        convlayer2_output_va_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        input_cols_blk_n = input_cols_empty_n;
    end else begin
        input_cols_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (input_cols_empty_n == 1'b0) | (input_rows_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        input_cols_read = 1'b1;
    end else begin
        input_cols_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        input_rows_blk_n = input_rows_empty_n;
    end else begin
        input_rows_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (input_cols_empty_n == 1'b0) | (input_rows_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        input_rows_read = 1'b1;
    end else begin
        input_rows_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_val_V_ce0 = 1'b1;
    end else begin
        input_val_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputlayer_output_0_address0 = tmp_3_cast_reg_688;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        inputlayer_output_0_address0 = grp_ConvLayer_1_fu_317_input_0_val_V_address0;
    end else begin
        inputlayer_output_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inputlayer_output_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        inputlayer_output_0_ce0 = grp_ConvLayer_1_fu_317_input_0_val_V_ce0;
    end else begin
        inputlayer_output_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_117_i_i_reg_679 == 1'd1))) begin
        inputlayer_output_0_we0 = 1'b1;
    end else begin
        inputlayer_output_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        label_r_ap_vld = 1'b1;
    end else begin
        label_r_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        poollayer1_output_va_address0 = grp_PoolLayer_fu_363_poollayer_output_val_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        poollayer1_output_va_address0 = grp_ConvLayer_fu_335_input_val_V_address0;
    end else begin
        poollayer1_output_va_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        poollayer1_output_va_ce0 = grp_PoolLayer_fu_363_poollayer_output_val_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        poollayer1_output_va_ce0 = grp_ConvLayer_fu_335_input_val_V_ce0;
    end else begin
        poollayer1_output_va_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        poollayer1_output_va_we0 = grp_PoolLayer_fu_363_poollayer_output_val_V_we0;
    end else begin
        poollayer1_output_va_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        poollayer2_output_va_address0 = grp_PoolLayer_1_fu_369_poollayer_output_val_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        poollayer2_output_va_address0 = grp_CconLayer_fu_353_input_val_V_address0;
    end else begin
        poollayer2_output_va_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        poollayer2_output_va_ce0 = grp_PoolLayer_1_fu_369_poollayer_output_val_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        poollayer2_output_va_ce0 = grp_CconLayer_fu_353_input_val_V_ce0;
    end else begin
        poollayer2_output_va_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        poollayer2_output_va_we0 = grp_PoolLayer_1_fu_369_poollayer_output_val_V_we0;
    end else begin
        poollayer2_output_va_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        score_ap_vld = 1'b1;
    end else begin
        score_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (input_cols_empty_n == 1'b0) | (input_rows_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (tmp_272_i_fu_384_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (tmp_282_i_fu_396_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (tmp_i_i_fu_406_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_117_i_i_fu_451_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_117_i_i_fu_451_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state8 : begin
            if (((grp_ConvLayer_1_fu_317_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((grp_PoolLayer_fu_363_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((grp_ConvLayer_fu_335_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((grp_PoolLayer_1_fu_369_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((grp_CconLayer_fu_353_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (exitcond_i_i_i_fu_476_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (exitcond_i_i_i_fu_476_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (input_cols_empty_n == 1'b0) | (input_rows_empty_n == 1'b0) | (ap_start == 1'b0));
end

assign ap_block_state19_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign exitcond_i_i_i_fu_476_p2 = ((ap_phi_mux_i_0_i_i3925_i_phi_fu_309_p4 == 4'd10) ? 1'b1 : 1'b0);

assign f_fu_627_p1 = p_Result_1_fu_616_p5;

assign grp_CconLayer_fu_353_ap_start = grp_CconLayer_fu_353_ap_start_reg;

assign grp_ConvLayer_1_fu_317_ap_start = grp_ConvLayer_1_fu_317_ap_start_reg;

assign grp_ConvLayer_fu_335_ap_start = grp_ConvLayer_fu_335_ap_start_reg;

assign grp_PoolLayer_1_fu_369_ap_start = grp_PoolLayer_1_fu_369_ap_start_reg;

assign grp_PoolLayer_fu_363_ap_start = grp_PoolLayer_fu_363_ap_start_reg;

assign i_0_i_i3925_cast_fu_493_p1 = i_0_i_i3925_i_reg_305;

assign i_0_i_i_cast_cast_i_fu_402_p1 = i_0_i_i_i_reg_260;

assign i_1_fu_487_p2 = (ap_phi_mux_i_0_i_i3925_i_phi_fu_309_p4 + 4'd1);

assign i_fu_411_p2 = (i_0_i_i_i_reg_260 + 5'd1);

assign input_V_load_1_i_i_o_fu_511_p3 = ((tmp_i3927_i_fu_497_p2[0:0] === 1'b1) ? cconlayer_output_V_q0 : outputlayer_score_V_reg_295);

assign input_val_V_address0 = tmp_3_cast_fu_471_p1;

assign is_neg_fu_525_p3 = outputlayer_score_V_reg_295[32'd31];

assign j_0_i_i_cast_cast_i_fu_447_p1 = j_0_i_i_i_reg_271;

assign j_fu_456_p2 = (j_0_i_i_i_reg_271 + 5'd1);

assign label_r = outputlayer_label_reg_282;


always @ (p_Result_s_fu_547_p4) begin
    if (p_Result_s_fu_547_p4[0] == 1'b1) begin
        num_zeros_fu_557_p3 = 32'd0;
    end else if (p_Result_s_fu_547_p4[1] == 1'b1) begin
        num_zeros_fu_557_p3 = 32'd1;
    end else if (p_Result_s_fu_547_p4[2] == 1'b1) begin
        num_zeros_fu_557_p3 = 32'd2;
    end else if (p_Result_s_fu_547_p4[3] == 1'b1) begin
        num_zeros_fu_557_p3 = 32'd3;
    end else if (p_Result_s_fu_547_p4[4] == 1'b1) begin
        num_zeros_fu_557_p3 = 32'd4;
    end else if (p_Result_s_fu_547_p4[5] == 1'b1) begin
        num_zeros_fu_557_p3 = 32'd5;
    end else if (p_Result_s_fu_547_p4[6] == 1'b1) begin
        num_zeros_fu_557_p3 = 32'd6;
    end else if (p_Result_s_fu_547_p4[7] == 1'b1) begin
        num_zeros_fu_557_p3 = 32'd7;
    end else if (p_Result_s_fu_547_p4[8] == 1'b1) begin
        num_zeros_fu_557_p3 = 32'd8;
    end else if (p_Result_s_fu_547_p4[9] == 1'b1) begin
        num_zeros_fu_557_p3 = 32'd9;
    end else if (p_Result_s_fu_547_p4[10] == 1'b1) begin
        num_zeros_fu_557_p3 = 32'd10;
    end else if (p_Result_s_fu_547_p4[11] == 1'b1) begin
        num_zeros_fu_557_p3 = 32'd11;
    end else if (p_Result_s_fu_547_p4[12] == 1'b1) begin
        num_zeros_fu_557_p3 = 32'd12;
    end else if (p_Result_s_fu_547_p4[13] == 1'b1) begin
        num_zeros_fu_557_p3 = 32'd13;
    end else if (p_Result_s_fu_547_p4[14] == 1'b1) begin
        num_zeros_fu_557_p3 = 32'd14;
    end else if (p_Result_s_fu_547_p4[15] == 1'b1) begin
        num_zeros_fu_557_p3 = 32'd15;
    end else if (p_Result_s_fu_547_p4[16] == 1'b1) begin
        num_zeros_fu_557_p3 = 32'd16;
    end else if (p_Result_s_fu_547_p4[17] == 1'b1) begin
        num_zeros_fu_557_p3 = 32'd17;
    end else if (p_Result_s_fu_547_p4[18] == 1'b1) begin
        num_zeros_fu_557_p3 = 32'd18;
    end else if (p_Result_s_fu_547_p4[19] == 1'b1) begin
        num_zeros_fu_557_p3 = 32'd19;
    end else if (p_Result_s_fu_547_p4[20] == 1'b1) begin
        num_zeros_fu_557_p3 = 32'd20;
    end else if (p_Result_s_fu_547_p4[21] == 1'b1) begin
        num_zeros_fu_557_p3 = 32'd21;
    end else if (p_Result_s_fu_547_p4[22] == 1'b1) begin
        num_zeros_fu_557_p3 = 32'd22;
    end else if (p_Result_s_fu_547_p4[23] == 1'b1) begin
        num_zeros_fu_557_p3 = 32'd23;
    end else if (p_Result_s_fu_547_p4[24] == 1'b1) begin
        num_zeros_fu_557_p3 = 32'd24;
    end else if (p_Result_s_fu_547_p4[25] == 1'b1) begin
        num_zeros_fu_557_p3 = 32'd25;
    end else if (p_Result_s_fu_547_p4[26] == 1'b1) begin
        num_zeros_fu_557_p3 = 32'd26;
    end else if (p_Result_s_fu_547_p4[27] == 1'b1) begin
        num_zeros_fu_557_p3 = 32'd27;
    end else if (p_Result_s_fu_547_p4[28] == 1'b1) begin
        num_zeros_fu_557_p3 = 32'd28;
    end else if (p_Result_s_fu_547_p4[29] == 1'b1) begin
        num_zeros_fu_557_p3 = 32'd29;
    end else if (p_Result_s_fu_547_p4[30] == 1'b1) begin
        num_zeros_fu_557_p3 = 32'd30;
    end else if (p_Result_s_fu_547_p4[31] == 1'b1) begin
        num_zeros_fu_557_p3 = 32'd31;
    end else begin
        num_zeros_fu_557_p3 = 32'd32;
    end
end

assign outputlayer_score_V_1_fu_539_p3 = ((is_neg_fu_525_p3[0:0] === 1'b1) ? tmp_287_i_fu_533_p2 : outputlayer_score_V_reg_295);

assign p_Repl2_7_trunc_i_fu_603_p2 = (tmp_186_i_fu_594_p2 + tmp_187_i_fu_599_p1);

assign p_Result_1_fu_616_p5 = {{tmp_188_i_fu_609_p3}, {tmp32_V_reg_752[22:0]}};

integer ap_tvar_int_0;

always @ (outputlayer_score_V_1_fu_539_p3) begin
    for (ap_tvar_int_0 = 32 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 31 - 0) begin
            p_Result_s_fu_547_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_s_fu_547_p4[ap_tvar_int_0] = outputlayer_score_V_1_fu_539_p3[31 - ap_tvar_int_0];
        end
    end
end

assign p_shl1_cast_fu_437_p1 = tmp_1_fu_429_p3;

assign p_shl_cast_fu_425_p1 = tmp_fu_417_p3;

assign score = ((tmp_286_i_reg_732[0:0] === 1'b1) ? 32'd0 : f_fu_627_p1);

assign sel_SEBB_fu_503_p3 = ((tmp_i3927_i_fu_497_p2[0:0] === 1'b1) ? i_0_i_i3925_cast_fu_493_p1 : outputlayer_label_reg_282);

assign tmp32_V_1_fu_565_p2 = outputlayer_score_V_1_fu_539_p3 << num_zeros_fu_557_p3;

assign tmp32_V_fu_575_p1 = grp_fu_375_p1;

assign tmp_117_i_i_fu_451_p2 = (($signed(j_0_i_i_cast_cast_i_fu_447_p1) < $signed(input_cols_read_reg_644)) ? 1'b1 : 1'b0);

assign tmp_118_i_i_cast_fu_462_p1 = j_0_i_i_i_reg_271;

assign tmp_186_i_fu_594_p2 = ($signed(8'd142) - $signed(tmp_5_reg_747));

assign tmp_187_i_fu_599_p1 = tmp_288_i_fu_589_p2;

assign tmp_188_i_fu_609_p3 = {{is_neg_reg_737}, {p_Repl2_7_trunc_i_fu_603_p2}};

assign tmp_1_fu_429_p3 = {{i_0_i_i_i_reg_260}, {2'd0}};

assign tmp_270_i_fu_378_p2 = (tmp_269_i_reg_238 + 3'd1);

assign tmp_272_i_fu_384_p2 = ((tmp_269_i_reg_238 == 3'd5) ? 1'b1 : 1'b0);

assign tmp_280_i_fu_390_p2 = (tmp_279_i_reg_249 + 4'd1);

assign tmp_282_i_fu_396_p2 = ((tmp_279_i_reg_249 == 4'd11) ? 1'b1 : 1'b0);

assign tmp_286_i_fu_519_p2 = ((outputlayer_score_V_reg_295 == 32'd0) ? 1'b1 : 1'b0);

assign tmp_287_i_fu_533_p2 = (32'd0 - outputlayer_score_V_reg_295);

assign tmp_288_i_fu_589_p2 = ((p_Result_i_reg_757 != 8'd158) ? 1'b1 : 1'b0);

assign tmp_2_fu_441_p2 = (p_shl_cast_fu_425_p1 - p_shl1_cast_fu_437_p1);

assign tmp_3_cast_fu_471_p1 = $signed(tmp_3_fu_466_p2);

assign tmp_3_fu_466_p2 = (tmp_2_reg_674 + tmp_118_i_i_cast_fu_462_p1);

assign tmp_5_fu_571_p1 = num_zeros_fu_557_p3[7:0];

assign tmp_fu_417_p3 = {{i_0_i_i_i_reg_260}, {5'd0}};

assign tmp_i3926_i_fu_482_p1 = ap_phi_mux_i_0_i_i3925_i_phi_fu_309_p4;

assign tmp_i3927_i_fu_497_p2 = (($signed(cconlayer_output_V_q0) > $signed(outputlayer_score_V_reg_295)) ? 1'b1 : 1'b0);

assign tmp_i_i_fu_406_p2 = (($signed(i_0_i_i_cast_cast_i_fu_402_p1) < $signed(input_rows_read_reg_639)) ? 1'b1 : 1'b0);

always @ (posedge ap_clk) begin
    tmp_2_reg_674[1:0] <= 2'b00;
end

endmodule //cnnclassify
