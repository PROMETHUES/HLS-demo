// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module ConvLayer_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_0_val_V_address0,
        input_0_val_V_ce0,
        input_0_val_V_q0,
        convlayer_output_val_V_address0,
        convlayer_output_val_V_ce0,
        convlayer_output_val_V_we0,
        convlayer_output_val_V_d0,
        convlayer_output_rows_address0,
        convlayer_output_rows_ce0,
        convlayer_output_rows_we0,
        convlayer_output_rows_d0,
        convlayer_output_cols_address0,
        convlayer_output_cols_ce0,
        convlayer_output_cols_we0,
        convlayer_output_cols_d0
);

parameter    ap_ST_fsm_state1 = 20'd1;
parameter    ap_ST_fsm_state2 = 20'd2;
parameter    ap_ST_fsm_state3 = 20'd4;
parameter    ap_ST_fsm_state4 = 20'd8;
parameter    ap_ST_fsm_state5 = 20'd16;
parameter    ap_ST_fsm_state6 = 20'd32;
parameter    ap_ST_fsm_state7 = 20'd64;
parameter    ap_ST_fsm_pp1_stage0 = 20'd128;
parameter    ap_ST_fsm_state10 = 20'd256;
parameter    ap_ST_fsm_state11 = 20'd512;
parameter    ap_ST_fsm_state12 = 20'd1024;
parameter    ap_ST_fsm_pp2_stage0 = 20'd2048;
parameter    ap_ST_fsm_state15 = 20'd4096;
parameter    ap_ST_fsm_state16 = 20'd8192;
parameter    ap_ST_fsm_state17 = 20'd16384;
parameter    ap_ST_fsm_pp3_stage0 = 20'd32768;
parameter    ap_ST_fsm_state51 = 20'd65536;
parameter    ap_ST_fsm_state52 = 20'd131072;
parameter    ap_ST_fsm_pp4_stage0 = 20'd262144;
parameter    ap_ST_fsm_state55 = 20'd524288;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] input_0_val_V_address0;
output   input_0_val_V_ce0;
input  [23:0] input_0_val_V_q0;
output  [11:0] convlayer_output_val_V_address0;
output   convlayer_output_val_V_ce0;
output   convlayer_output_val_V_we0;
output  [31:0] convlayer_output_val_V_d0;
output  [2:0] convlayer_output_rows_address0;
output   convlayer_output_rows_ce0;
output   convlayer_output_rows_we0;
output  [5:0] convlayer_output_rows_d0;
output  [2:0] convlayer_output_cols_address0;
output   convlayer_output_cols_ce0;
output   convlayer_output_cols_we0;
output  [5:0] convlayer_output_cols_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg convlayer_output_val_V_ce0;
reg convlayer_output_val_V_we0;
reg convlayer_output_rows_ce0;
reg convlayer_output_rows_we0;
reg convlayer_output_cols_ce0;
reg convlayer_output_cols_we0;

(* fsm_encoding = "none" *) reg   [19:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [7:0] convlayer1_k_val_V_address0;
reg    convlayer1_k_val_V_ce0;
wire   [17:0] convlayer1_k_val_V_q0;
wire   [2:0] convlayer1_k_rows_address0;
reg    convlayer1_k_rows_ce0;
wire   [2:0] convlayer1_k_rows_q0;
wire   [2:0] convlayer1_k_cols_address0;
reg    convlayer1_k_cols_ce0;
wire   [2:0] convlayer1_k_cols_q0;
wire   [2:0] convlayer1_b_V_address0;
reg    convlayer1_b_V_ce0;
wire   [17:0] convlayer1_b_V_q0;
reg   [2:0] j_0_i6_reg_476;
reg   [4:0] j_0_i8_reg_499;
reg   [4:0] j_0_i5_reg_521;
reg   [4:0] j_0_i7_reg_543;
wire   [2:0] i_2_fu_621_p2;
reg   [2:0] i_2_reg_2013;
wire    ap_CS_fsm_state2;
wire   [0:0] exitcond7_fu_627_p2;
wire    ap_CS_fsm_state3;
wire   [4:0] i_5_fu_633_p2;
reg   [4:0] i_5_reg_2022;
wire   [10:0] tmp_96_fu_663_p2;
reg   [10:0] tmp_96_reg_2027;
wire   [63:0] tmp_s_fu_669_p1;
reg   [63:0] tmp_s_reg_2032;
wire   [4:0] j_fu_681_p2;
wire    ap_CS_fsm_state4;
wire   [5:0] tmp_81_fu_717_p2;
reg   [5:0] tmp_81_reg_2057;
wire    ap_CS_fsm_state6;
wire  signed [9:0] tmp_98_cast_fu_753_p1;
reg  signed [9:0] tmp_98_cast_reg_2062;
reg   [2:0] convlayer1_k_rows_lo_reg_2067;
reg   [2:0] convlayer1_k_cols_lo_reg_2072;
wire   [0:0] exitcond1_fu_757_p2;
wire    ap_CS_fsm_state7;
wire   [2:0] i_s_fu_762_p2;
reg   [2:0] i_s_reg_2081;
wire   [8:0] tmp_99_fu_793_p2;
reg   [8:0] tmp_99_reg_2086;
wire   [0:0] exitcond_fu_899_p2;
reg   [0:0] exitcond_reg_2216;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state8_pp1_stage0_iter0;
wire    ap_block_state9_pp1_stage0_iter1;
wire    ap_block_pp1_stage0_11001;
wire   [2:0] j_1_fu_904_p2;
reg   [2:0] j_1_reg_2220;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] exitcond8_i_fu_1053_p2;
wire    ap_CS_fsm_state12;
wire   [4:0] i_1_fu_1059_p2;
reg   [4:0] i_1_reg_2234;
wire   [10:0] tmp_103_fu_1089_p2;
reg   [10:0] tmp_103_reg_2239;
wire   [0:0] exitcond_i_fu_1095_p2;
reg   [0:0] exitcond_i_reg_2249;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state13_pp2_stage0_iter0;
wire    ap_block_state14_pp2_stage0_iter1;
wire    ap_block_pp2_stage0_11001;
wire   [4:0] j_s_fu_1101_p2;
reg    ap_enable_reg_pp2_iter0;
reg   [9:0] p_output_val_V_addr_1_reg_2263;
wire  signed [32:0] tmp_70_fu_1129_p1;
reg  signed [32:0] tmp_70_reg_2269;
wire    ap_CS_fsm_state16;
wire  signed [31:0] tmp_67_fu_1133_p1;
reg  signed [31:0] tmp_67_reg_2274;
wire   [0:0] exitcond2_i_fu_1137_p2;
wire    ap_CS_fsm_state17;
wire   [4:0] i_3_fu_1143_p2;
reg   [4:0] i_3_reg_2283;
wire   [10:0] tmp_107_fu_1173_p2;
reg   [10:0] tmp_107_reg_2288;
wire   [0:0] exitcond_i2_fu_1179_p2;
reg   [0:0] exitcond_i2_reg_2293;
wire    ap_CS_fsm_pp3_stage0;
wire    ap_block_state18_pp3_stage0_iter0;
wire    ap_block_state19_pp3_stage0_iter1;
wire    ap_block_state20_pp3_stage0_iter2;
wire    ap_block_state21_pp3_stage0_iter3;
wire    ap_block_state22_pp3_stage0_iter4;
wire    ap_block_state23_pp3_stage0_iter5;
wire    ap_block_state24_pp3_stage0_iter6;
wire    ap_block_state25_pp3_stage0_iter7;
wire    ap_block_state26_pp3_stage0_iter8;
wire    ap_block_state27_pp3_stage0_iter9;
wire    ap_block_state28_pp3_stage0_iter10;
wire    ap_block_state29_pp3_stage0_iter11;
wire    ap_block_state30_pp3_stage0_iter12;
wire    ap_block_state31_pp3_stage0_iter13;
wire    ap_block_state32_pp3_stage0_iter14;
wire    ap_block_state33_pp3_stage0_iter15;
wire    ap_block_state34_pp3_stage0_iter16;
wire    ap_block_state35_pp3_stage0_iter17;
wire    ap_block_state36_pp3_stage0_iter18;
wire    ap_block_state37_pp3_stage0_iter19;
wire    ap_block_state38_pp3_stage0_iter20;
wire    ap_block_state39_pp3_stage0_iter21;
wire    ap_block_state40_pp3_stage0_iter22;
wire    ap_block_state41_pp3_stage0_iter23;
wire    ap_block_state42_pp3_stage0_iter24;
wire    ap_block_state43_pp3_stage0_iter25;
wire    ap_block_state44_pp3_stage0_iter26;
wire    ap_block_state45_pp3_stage0_iter27;
wire    ap_block_state46_pp3_stage0_iter28;
wire    ap_block_state47_pp3_stage0_iter29;
wire    ap_block_state48_pp3_stage0_iter30;
wire    ap_block_state49_pp3_stage0_iter31;
wire    ap_block_state50_pp3_stage0_iter32;
wire    ap_block_pp3_stage0_11001;
reg   [0:0] exitcond_i2_reg_2293_pp3_iter1_reg;
reg   [0:0] exitcond_i2_reg_2293_pp3_iter2_reg;
reg   [0:0] exitcond_i2_reg_2293_pp3_iter3_reg;
reg   [0:0] exitcond_i2_reg_2293_pp3_iter4_reg;
reg   [0:0] exitcond_i2_reg_2293_pp3_iter5_reg;
reg   [0:0] exitcond_i2_reg_2293_pp3_iter6_reg;
reg   [0:0] exitcond_i2_reg_2293_pp3_iter7_reg;
reg   [0:0] exitcond_i2_reg_2293_pp3_iter8_reg;
reg   [0:0] exitcond_i2_reg_2293_pp3_iter9_reg;
reg   [0:0] exitcond_i2_reg_2293_pp3_iter10_reg;
reg   [0:0] exitcond_i2_reg_2293_pp3_iter11_reg;
reg   [0:0] exitcond_i2_reg_2293_pp3_iter12_reg;
reg   [0:0] exitcond_i2_reg_2293_pp3_iter13_reg;
reg   [0:0] exitcond_i2_reg_2293_pp3_iter14_reg;
reg   [0:0] exitcond_i2_reg_2293_pp3_iter15_reg;
reg   [0:0] exitcond_i2_reg_2293_pp3_iter16_reg;
reg   [0:0] exitcond_i2_reg_2293_pp3_iter17_reg;
reg   [0:0] exitcond_i2_reg_2293_pp3_iter18_reg;
reg   [0:0] exitcond_i2_reg_2293_pp3_iter19_reg;
reg   [0:0] exitcond_i2_reg_2293_pp3_iter20_reg;
reg   [0:0] exitcond_i2_reg_2293_pp3_iter21_reg;
reg   [0:0] exitcond_i2_reg_2293_pp3_iter22_reg;
reg   [0:0] exitcond_i2_reg_2293_pp3_iter23_reg;
reg   [0:0] exitcond_i2_reg_2293_pp3_iter24_reg;
reg   [0:0] exitcond_i2_reg_2293_pp3_iter25_reg;
reg   [0:0] exitcond_i2_reg_2293_pp3_iter26_reg;
reg   [0:0] exitcond_i2_reg_2293_pp3_iter27_reg;
reg   [0:0] exitcond_i2_reg_2293_pp3_iter28_reg;
reg   [0:0] exitcond_i2_reg_2293_pp3_iter29_reg;
reg   [0:0] exitcond_i2_reg_2293_pp3_iter30_reg;
reg   [0:0] exitcond_i2_reg_2293_pp3_iter31_reg;
wire   [4:0] j_3_fu_1185_p2;
reg    ap_enable_reg_pp3_iter0;
reg   [9:0] p_output_val_V_addr_2_reg_2302;
reg   [9:0] p_output_val_V_addr_2_reg_2302_pp3_iter1_reg;
reg   [9:0] p_output_val_V_addr_2_reg_2302_pp3_iter2_reg;
reg   [9:0] p_output_val_V_addr_2_reg_2302_pp3_iter3_reg;
reg   [9:0] p_output_val_V_addr_2_reg_2302_pp3_iter4_reg;
reg   [9:0] p_output_val_V_addr_2_reg_2302_pp3_iter5_reg;
reg   [9:0] p_output_val_V_addr_2_reg_2302_pp3_iter6_reg;
reg   [9:0] p_output_val_V_addr_2_reg_2302_pp3_iter7_reg;
reg   [9:0] p_output_val_V_addr_2_reg_2302_pp3_iter8_reg;
reg   [9:0] p_output_val_V_addr_2_reg_2302_pp3_iter9_reg;
reg   [9:0] p_output_val_V_addr_2_reg_2302_pp3_iter10_reg;
reg   [9:0] p_output_val_V_addr_2_reg_2302_pp3_iter11_reg;
reg   [9:0] p_output_val_V_addr_2_reg_2302_pp3_iter12_reg;
reg   [9:0] p_output_val_V_addr_2_reg_2302_pp3_iter13_reg;
reg   [9:0] p_output_val_V_addr_2_reg_2302_pp3_iter14_reg;
reg   [9:0] p_output_val_V_addr_2_reg_2302_pp3_iter15_reg;
reg   [9:0] p_output_val_V_addr_2_reg_2302_pp3_iter16_reg;
reg   [9:0] p_output_val_V_addr_2_reg_2302_pp3_iter17_reg;
reg   [9:0] p_output_val_V_addr_2_reg_2302_pp3_iter18_reg;
reg   [9:0] p_output_val_V_addr_2_reg_2302_pp3_iter19_reg;
reg   [9:0] p_output_val_V_addr_2_reg_2302_pp3_iter20_reg;
reg   [9:0] p_output_val_V_addr_2_reg_2302_pp3_iter21_reg;
reg   [9:0] p_output_val_V_addr_2_reg_2302_pp3_iter22_reg;
reg   [9:0] p_output_val_V_addr_2_reg_2302_pp3_iter23_reg;
reg   [9:0] p_output_val_V_addr_2_reg_2302_pp3_iter24_reg;
reg   [9:0] p_output_val_V_addr_2_reg_2302_pp3_iter25_reg;
reg   [9:0] p_output_val_V_addr_2_reg_2302_pp3_iter26_reg;
reg   [9:0] p_output_val_V_addr_2_reg_2302_pp3_iter27_reg;
reg   [9:0] p_output_val_V_addr_2_reg_2302_pp3_iter28_reg;
reg   [9:0] p_output_val_V_addr_2_reg_2302_pp3_iter29_reg;
reg   [9:0] p_output_val_V_addr_2_reg_2302_pp3_iter30_reg;
reg   [9:0] p_output_val_V_addr_2_reg_2302_pp3_iter31_reg;
wire   [0:0] tmp_79_fu_1219_p2;
reg   [0:0] tmp_79_reg_2308;
reg   [0:0] tmp_79_reg_2308_pp3_iter2_reg;
reg   [0:0] tmp_79_reg_2308_pp3_iter3_reg;
reg   [0:0] tmp_79_reg_2308_pp3_iter4_reg;
wire   [0:0] is_neg_fu_1225_p3;
reg   [0:0] is_neg_reg_2313;
reg   [0:0] is_neg_reg_2313_pp3_iter2_reg;
reg   [0:0] is_neg_reg_2313_pp3_iter3_reg;
reg   [0:0] is_neg_reg_2313_pp3_iter4_reg;
wire   [31:0] p_Val2_38_fu_1239_p3;
reg   [31:0] p_Val2_38_reg_2318;
wire   [32:0] p_Val2_40_cast_fu_1247_p1;
reg   [32:0] p_Val2_40_cast_reg_2323;
wire   [31:0] num_zeros_fu_1277_p1;
reg   [31:0] num_zeros_reg_2329;
wire   [31:0] msb_idx_fu_1281_p2;
reg   [31:0] msb_idx_reg_2334;
reg   [31:0] msb_idx_reg_2334_pp3_iter3_reg;
reg   [31:0] msb_idx_reg_2334_pp3_iter4_reg;
wire   [31:0] tmp32_V_5_fu_1397_p3;
reg   [31:0] tmp32_V_5_reg_2339;
wire   [31:0] tmp32_V_8_fu_1405_p1;
reg   [31:0] tmp32_V_8_reg_2344;
reg   [7:0] p_Result_s_197_reg_2349;
wire   [31:0] x_assign_fu_1469_p3;
reg   [31:0] x_assign_reg_2354;
wire   [31:0] grp_fu_600_p2;
reg   [31:0] tmp_i_i_reg_2359;
wire   [63:0] tmp_88_fu_593_p1;
reg   [63:0] tmp_88_reg_2364;
wire   [63:0] grp_fu_605_p2;
reg   [63:0] tmp_89_reg_2369;
wire   [63:0] grp_fu_610_p2;
reg   [63:0] tmp_90_reg_2374;
reg   [0:0] isneg_reg_2379;
wire   [51:0] tmp_145_fu_1506_p1;
reg   [51:0] tmp_145_reg_2385;
wire   [0:0] tmp_93_fu_1510_p2;
reg   [0:0] tmp_93_reg_2390;
wire   [0:0] tmp_116_fu_1522_p2;
reg   [0:0] tmp_116_reg_2396;
wire   [11:0] tmp_117_fu_1528_p2;
reg   [11:0] tmp_117_reg_2403;
wire   [11:0] tmp_122_fu_1534_p2;
reg   [11:0] tmp_122_reg_2408;
wire   [0:0] tmp_123_fu_1540_p2;
reg   [0:0] tmp_123_reg_2413;
wire   [0:0] exitcond5_fu_1743_p2;
wire    ap_CS_fsm_state52;
wire   [4:0] i_4_fu_1749_p2;
reg   [4:0] i_4_reg_2423;
wire   [12:0] tmp_111_fu_1784_p2;
reg   [12:0] tmp_111_reg_2428;
wire   [10:0] tmp_114_fu_1814_p2;
reg   [10:0] tmp_114_reg_2433;
wire   [0:0] exitcond4_fu_1820_p2;
reg   [0:0] exitcond4_reg_2438;
wire    ap_CS_fsm_pp4_stage0;
wire    ap_block_state53_pp4_stage0_iter0;
wire    ap_block_state54_pp4_stage0_iter1;
wire    ap_block_pp4_stage0_11001;
wire   [4:0] j_2_fu_1826_p2;
reg   [4:0] j_2_reg_2442;
reg    ap_enable_reg_pp4_iter0;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state8;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state13;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state18;
reg    ap_enable_reg_pp3_iter1;
reg    ap_enable_reg_pp3_iter2;
reg    ap_enable_reg_pp3_iter3;
reg    ap_enable_reg_pp3_iter4;
reg    ap_enable_reg_pp3_iter5;
reg    ap_enable_reg_pp3_iter6;
reg    ap_enable_reg_pp3_iter7;
reg    ap_enable_reg_pp3_iter8;
reg    ap_enable_reg_pp3_iter9;
reg    ap_enable_reg_pp3_iter10;
reg    ap_enable_reg_pp3_iter11;
reg    ap_enable_reg_pp3_iter12;
reg    ap_enable_reg_pp3_iter13;
reg    ap_enable_reg_pp3_iter14;
reg    ap_enable_reg_pp3_iter15;
reg    ap_enable_reg_pp3_iter16;
reg    ap_enable_reg_pp3_iter17;
reg    ap_enable_reg_pp3_iter18;
reg    ap_enable_reg_pp3_iter19;
reg    ap_enable_reg_pp3_iter20;
reg    ap_enable_reg_pp3_iter21;
reg    ap_enable_reg_pp3_iter22;
reg    ap_enable_reg_pp3_iter23;
reg    ap_enable_reg_pp3_iter24;
reg    ap_enable_reg_pp3_iter25;
reg    ap_enable_reg_pp3_iter26;
reg    ap_enable_reg_pp3_iter27;
reg    ap_enable_reg_pp3_iter28;
reg    ap_enable_reg_pp3_iter29;
reg    ap_enable_reg_pp3_iter30;
reg    ap_enable_reg_pp3_iter31;
reg    ap_enable_reg_pp3_iter32;
wire    ap_block_pp4_stage0_subdone;
reg    ap_condition_pp4_exit_iter0_state53;
reg    ap_enable_reg_pp4_iter1;
reg   [9:0] p_temp_val_V_address0;
reg    p_temp_val_V_ce0;
reg    p_temp_val_V_we0;
wire   [31:0] p_temp_val_V_q0;
reg   [9:0] p_output_val_V_address0;
reg    p_output_val_V_ce0;
reg    p_output_val_V_we0;
reg   [31:0] p_output_val_V_d0;
wire   [31:0] p_output_val_V_q0;
reg   [9:0] p_output_val_V_address1;
reg    p_output_val_V_ce1;
reg    p_output_val_V_we1;
wire   [31:0] p_output_val_V_d1;
wire   [31:0] p_output_val_V_q1;
wire    grp_Conv8_fu_555_ap_start;
wire    grp_Conv8_fu_555_ap_done;
wire    grp_Conv8_fu_555_ap_idle;
wire    grp_Conv8_fu_555_ap_ready;
wire   [9:0] grp_Conv8_fu_555_src_0_val_V_address0;
wire    grp_Conv8_fu_555_src_0_val_V_ce0;
wire   [9:0] grp_Conv8_fu_555_dst_val_V_address0;
wire    grp_Conv8_fu_555_dst_val_V_ce0;
wire    grp_Conv8_fu_555_dst_val_V_we0;
wire   [31:0] grp_Conv8_fu_555_dst_val_V_d0;
reg   [2:0] i_reg_430;
reg   [4:0] i_0_i_reg_442;
wire    ap_CS_fsm_state5;
wire   [0:0] exitcond3_fu_615_p2;
reg   [4:0] j_0_i_reg_453;
wire   [0:0] exitcond6_fu_675_p2;
reg   [2:0] i_0_i6_reg_464;
wire    ap_CS_fsm_state10;
reg   [2:0] ap_phi_mux_j_0_i6_phi_fu_480_p4;
wire    ap_block_pp1_stage0;
reg   [4:0] i_0_i8_reg_488;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state15;
reg   [4:0] i_0_i5_reg_510;
wire    ap_CS_fsm_state51;
reg   [4:0] i_0_i7_reg_532;
wire    ap_CS_fsm_state55;
reg   [4:0] ap_phi_mux_j_0_i7_phi_fu_547_p4;
wire    ap_block_pp4_stage0;
reg    grp_Conv8_fu_555_ap_start_reg;
wire  signed [63:0] tmp_105_cast_fu_696_p1;
wire   [63:0] tmp_109_cast_fu_919_p1;
wire  signed [63:0] tmp_113_cast_fu_1116_p1;
wire    ap_block_pp2_stage0;
wire  signed [63:0] tmp_121_cast_fu_1200_p1;
wire    ap_block_pp3_stage0;
wire  signed [63:0] tmp_136_cast_fu_1841_p1;
wire   [63:0] tmp_135_cast_fu_1855_p1;
reg   [31:0] p_kernel_val_V_0_0_s_fu_178;
wire  signed [31:0] p_kernel_val_4_V_0_s_fu_924_p1;
reg   [31:0] p_kernel_val_V_0_1_s_fu_182;
reg   [31:0] p_kernel_val_V_0_2_s_fu_186;
reg   [31:0] p_kernel_val_V_0_3_s_fu_190;
reg   [31:0] p_kernel_val_V_0_4_s_fu_194;
reg   [31:0] p_kernel_val_V_1_0_s_fu_198;
reg   [31:0] p_kernel_val_V_1_1_s_fu_202;
reg   [31:0] p_kernel_val_V_1_2_s_fu_206;
reg   [31:0] p_kernel_val_V_1_3_s_fu_210;
reg   [31:0] p_kernel_val_V_1_4_s_fu_214;
reg   [31:0] p_kernel_val_V_2_0_s_fu_218;
reg   [31:0] p_kernel_val_V_2_1_s_fu_222;
reg   [31:0] p_kernel_val_V_2_2_s_fu_226;
reg   [31:0] p_kernel_val_V_2_3_s_fu_230;
reg   [31:0] p_kernel_val_V_2_4_s_fu_234;
reg   [31:0] p_kernel_val_V_3_0_s_fu_238;
reg   [31:0] p_kernel_val_V_3_1_s_fu_242;
reg   [31:0] p_kernel_val_V_3_2_s_fu_246;
reg   [31:0] p_kernel_val_V_3_3_s_fu_250;
reg   [31:0] p_kernel_val_V_3_4_s_fu_254;
reg   [31:0] p_kernel_val_V_4_0_s_fu_258;
reg   [31:0] p_kernel_val_V_4_1_s_fu_262;
reg   [31:0] p_kernel_val_V_4_2_s_fu_266;
reg   [31:0] p_kernel_val_V_4_3_s_fu_270;
reg   [31:0] p_kernel_val_V_4_4_s_fu_274;
wire   [31:0] newSel6_fu_1734_p3;
wire   [31:0] res_fu_590_p1;
wire   [9:0] tmp_94_fu_639_p3;
wire   [7:0] tmp_95_fu_651_p3;
wire   [10:0] p_shl_cast_fu_647_p1;
wire   [10:0] p_shl1_cast_fu_659_p1;
wire   [10:0] tmp_69_cast_fu_687_p1;
wire   [10:0] tmp_100_fu_691_p2;
wire   [4:0] tmp_77_fu_705_p3;
wire   [5:0] tmp_cast_fu_701_p1;
wire   [5:0] p_shl4_cast_fu_713_p1;
wire   [7:0] tmp_82_fu_723_p3;
wire   [5:0] tmp_84_fu_735_p3;
wire   [8:0] p_shl2_cast_fu_731_p1;
wire   [8:0] p_shl3_cast_fu_743_p1;
wire   [8:0] tmp_86_fu_747_p2;
wire   [5:0] tmp_66_cast_fu_768_p1;
wire   [5:0] tmp_97_fu_772_p2;
wire   [7:0] tmp_98_fu_781_p3;
wire   [8:0] p_shl5_cast_fu_789_p1;
wire   [8:0] tmp_102_cast_fu_777_p1;
wire   [8:0] tmp_72_cast_fu_910_p1;
wire   [8:0] tmp_104_fu_914_p2;
wire   [9:0] tmp_101_fu_1065_p3;
wire   [7:0] tmp_102_fu_1077_p3;
wire   [10:0] p_shl6_cast_fu_1073_p1;
wire   [10:0] p_shl7_cast_fu_1085_p1;
wire   [10:0] tmp_74_cast_fu_1107_p1;
wire   [10:0] tmp_108_fu_1111_p2;
wire  signed [17:0] tmp_70_fu_1129_p0;
wire  signed [17:0] tmp_67_fu_1133_p0;
wire   [9:0] tmp_105_fu_1149_p3;
wire   [7:0] tmp_106_fu_1161_p3;
wire   [10:0] p_shl8_cast_fu_1157_p1;
wire   [10:0] p_shl9_cast_fu_1169_p1;
wire   [10:0] tmp_77_cast_fu_1191_p1;
wire   [10:0] tmp_115_fu_1195_p2;
wire  signed [31:0] tmp_78_fu_1205_p0;
wire  signed [32:0] tmp_78_fu_1205_p1;
wire  signed [31:0] p_Val2_38_cast_fu_1214_p1;
wire   [32:0] p_Val2_34_fu_1209_p2;
wire   [31:0] p_Val2_38_cast_fu_1214_p2;
wire   [31:0] tmp_176_cast_fu_1233_p2;
reg   [32:0] p_Result_s_fu_1251_p4;
wire   [63:0] p_Result_2_fu_1261_p3;
reg   [63:0] tmp_80_fu_1269_p3;
wire   [0:0] tmp_119_fu_1290_p3;
wire   [30:0] tmp_118_fu_1286_p1;
wire   [30:0] msb_idx_1_fu_1298_p3;
wire   [25:0] tmp_120_fu_1306_p4;
wire   [30:0] tmp_83_fu_1322_p2;
wire   [31:0] tmp_181_cast_fu_1328_p1;
wire   [5:0] tmp_121_fu_1337_p1;
wire   [0:0] tmp_126_fu_1341_p2;
reg   [32:0] tmp_131_fu_1353_p4;
wire   [5:0] tmp_134_fu_1362_p2;
wire   [5:0] tmp_128_fu_1347_p2;
wire   [5:0] tmp_138_fu_1375_p3;
wire   [32:0] tmp_137_fu_1368_p3;
wire   [32:0] tmp_139_fu_1383_p1;
wire   [32:0] tmp_140_fu_1387_p2;
wire   [0:0] icmp_fu_1316_p2;
wire   [31:0] tmp32_V_4_fu_1332_p2;
wire   [31:0] tmp32_V_fu_1393_p1;
wire   [31:0] grp_fu_587_p1;
wire   [0:0] tmp_85_fu_1419_p2;
wire   [7:0] tmp_142_fu_1424_p1;
wire   [7:0] tmp24_cast_cast_fu_1427_p3;
wire   [7:0] p_Repl2_3_trunc_fu_1435_p2;
wire   [8:0] tmp_87_fu_1441_p3;
wire   [31:0] p_Result_3_fu_1448_p5;
wire   [31:0] p_Result_12_op_fu_1459_p2;
wire   [31:0] tmp_68_fu_1465_p1;
wire   [63:0] d_assign_fu_596_p1;
wire   [63:0] ireg_V_fu_1476_p1;
wire   [10:0] exp_tmp_V_fu_1492_p4;
wire   [62:0] tmp_143_fu_1480_p1;
wire   [11:0] tmp_91_fu_1502_p1;
wire   [11:0] F2_fu_1516_p2;
wire   [52:0] tmp_92_fu_1546_p3;
wire   [53:0] p_Result_4_fu_1553_p1;
wire   [53:0] man_V_1_fu_1557_p2;
wire  signed [11:0] sh_amt_fu_1570_p3;
wire   [53:0] man_V_2_fu_1563_p3;
wire   [6:0] tmp_147_fu_1589_p4;
wire  signed [31:0] sh_amt_cast_fu_1575_p1;
wire   [53:0] tmp_125_fu_1605_p1;
wire   [53:0] tmp_127_fu_1609_p2;
wire   [31:0] tmp_146_fu_1579_p1;
wire   [0:0] sel_tmp1_fu_1632_p2;
wire   [0:0] sel_tmp6_demorgan_fu_1642_p2;
wire   [0:0] sel_tmp6_fu_1646_p2;
wire   [0:0] sel_tmp7_fu_1652_p2;
wire   [0:0] tmp_124_fu_1583_p2;
wire   [0:0] sel_tmp_fu_1663_p2;
wire   [0:0] sel_tmp21_demorgan_fu_1675_p2;
wire   [0:0] icmp6_fu_1599_p2;
wire   [0:0] sel_tmp3_fu_1680_p2;
wire   [0:0] sel_tmp4_fu_1686_p2;
wire   [31:0] tmp_129_fu_1626_p2;
wire   [31:0] this_assign_fu_1619_p3;
wire   [0:0] sel_tmp9_fu_1669_p2;
wire   [0:0] sel_tmp8_fu_1657_p2;
wire   [31:0] tmp_148_fu_1615_p1;
wire   [0:0] sel_tmp2_fu_1637_p2;
wire   [0:0] or_cond_fu_1700_p2;
wire   [31:0] newSel_fu_1692_p3;
wire   [31:0] newSel4_fu_1706_p3;
wire   [0:0] or_cond3_fu_1714_p2;
wire   [0:0] or_cond4_fu_1728_p2;
wire   [31:0] newSel5_fu_1720_p3;
wire   [9:0] tmp_75_cast_fu_1755_p1;
wire   [9:0] tmp_109_fu_1759_p2;
wire   [7:0] tmp_110_fu_1764_p1;
wire   [12:0] p_shl12_cast_fu_1768_p3;
wire   [12:0] p_shl13_cast_fu_1776_p3;
wire   [9:0] tmp_112_fu_1790_p3;
wire   [7:0] tmp_113_fu_1802_p3;
wire   [10:0] p_shl10_cast_fu_1798_p1;
wire   [10:0] p_shl11_cast_fu_1810_p1;
wire   [10:0] tmp_134_cast1_fu_1832_p1;
wire   [10:0] tmp_133_fu_1836_p2;
wire   [12:0] tmp_134_cast_fu_1846_p1;
wire   [12:0] tmp_132_fu_1850_p2;
reg   [19:0] ap_NS_fsm;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_idle_pp4;
wire    ap_enable_pp4;

// power-on initialization
initial begin
#0 ap_CS_fsm = 20'd1;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter3 = 1'b0;
#0 ap_enable_reg_pp3_iter4 = 1'b0;
#0 ap_enable_reg_pp3_iter5 = 1'b0;
#0 ap_enable_reg_pp3_iter6 = 1'b0;
#0 ap_enable_reg_pp3_iter7 = 1'b0;
#0 ap_enable_reg_pp3_iter8 = 1'b0;
#0 ap_enable_reg_pp3_iter9 = 1'b0;
#0 ap_enable_reg_pp3_iter10 = 1'b0;
#0 ap_enable_reg_pp3_iter11 = 1'b0;
#0 ap_enable_reg_pp3_iter12 = 1'b0;
#0 ap_enable_reg_pp3_iter13 = 1'b0;
#0 ap_enable_reg_pp3_iter14 = 1'b0;
#0 ap_enable_reg_pp3_iter15 = 1'b0;
#0 ap_enable_reg_pp3_iter16 = 1'b0;
#0 ap_enable_reg_pp3_iter17 = 1'b0;
#0 ap_enable_reg_pp3_iter18 = 1'b0;
#0 ap_enable_reg_pp3_iter19 = 1'b0;
#0 ap_enable_reg_pp3_iter20 = 1'b0;
#0 ap_enable_reg_pp3_iter21 = 1'b0;
#0 ap_enable_reg_pp3_iter22 = 1'b0;
#0 ap_enable_reg_pp3_iter23 = 1'b0;
#0 ap_enable_reg_pp3_iter24 = 1'b0;
#0 ap_enable_reg_pp3_iter25 = 1'b0;
#0 ap_enable_reg_pp3_iter26 = 1'b0;
#0 ap_enable_reg_pp3_iter27 = 1'b0;
#0 ap_enable_reg_pp3_iter28 = 1'b0;
#0 ap_enable_reg_pp3_iter29 = 1'b0;
#0 ap_enable_reg_pp3_iter30 = 1'b0;
#0 ap_enable_reg_pp3_iter31 = 1'b0;
#0 ap_enable_reg_pp3_iter32 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 grp_Conv8_fu_555_ap_start_reg = 1'b0;
end

ConvLayer_1_convlkbM #(
    .DataWidth( 18 ),
    .AddressRange( 150 ),
    .AddressWidth( 8 ))
convlayer1_k_val_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(convlayer1_k_val_V_address0),
    .ce0(convlayer1_k_val_V_ce0),
    .q0(convlayer1_k_val_V_q0)
);

ConvLayer_1_convllbW #(
    .DataWidth( 3 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
convlayer1_k_rows_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(convlayer1_k_rows_address0),
    .ce0(convlayer1_k_rows_ce0),
    .q0(convlayer1_k_rows_q0)
);

ConvLayer_1_convllbW #(
    .DataWidth( 3 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
convlayer1_k_cols_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(convlayer1_k_cols_address0),
    .ce0(convlayer1_k_cols_ce0),
    .q0(convlayer1_k_cols_q0)
);

ConvLayer_1_convlncg #(
    .DataWidth( 18 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
convlayer1_b_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(convlayer1_b_V_address0),
    .ce0(convlayer1_b_V_ce0),
    .q0(convlayer1_b_V_q0)
);

ConvLayer_1_p_temocq #(
    .DataWidth( 32 ),
    .AddressRange( 576 ),
    .AddressWidth( 10 ))
p_temp_val_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_temp_val_V_address0),
    .ce0(p_temp_val_V_ce0),
    .we0(p_temp_val_V_we0),
    .d0(grp_Conv8_fu_555_dst_val_V_d0),
    .q0(p_temp_val_V_q0)
);

ConvLayer_1_p_outpcA #(
    .DataWidth( 32 ),
    .AddressRange( 576 ),
    .AddressWidth( 10 ))
p_output_val_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_output_val_V_address0),
    .ce0(p_output_val_V_ce0),
    .we0(p_output_val_V_we0),
    .d0(p_output_val_V_d0),
    .q0(p_output_val_V_q0),
    .address1(p_output_val_V_address1),
    .ce1(p_output_val_V_ce1),
    .we1(p_output_val_V_we1),
    .d1(p_output_val_V_d1),
    .q1(p_output_val_V_q1)
);

Conv8 grp_Conv8_fu_555(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Conv8_fu_555_ap_start),
    .ap_done(grp_Conv8_fu_555_ap_done),
    .ap_idle(grp_Conv8_fu_555_ap_idle),
    .ap_ready(grp_Conv8_fu_555_ap_ready),
    .src_0_val_V_address0(grp_Conv8_fu_555_src_0_val_V_address0),
    .src_0_val_V_ce0(grp_Conv8_fu_555_src_0_val_V_ce0),
    .src_0_val_V_q0(input_0_val_V_q0),
    .kernel_val_0_V_0_read(p_kernel_val_V_0_0_s_fu_178),
    .kernel_val_0_V_1_read(p_kernel_val_V_0_1_s_fu_182),
    .kernel_val_0_V_2_read(p_kernel_val_V_0_2_s_fu_186),
    .kernel_val_0_V_3_read(p_kernel_val_V_0_3_s_fu_190),
    .kernel_val_0_V_4_read(p_kernel_val_V_0_4_s_fu_194),
    .kernel_val_1_V_0_read(p_kernel_val_V_1_0_s_fu_198),
    .kernel_val_1_V_1_read(p_kernel_val_V_1_1_s_fu_202),
    .kernel_val_1_V_2_read(p_kernel_val_V_1_2_s_fu_206),
    .kernel_val_1_V_3_read(p_kernel_val_V_1_3_s_fu_210),
    .kernel_val_1_V_4_read(p_kernel_val_V_1_4_s_fu_214),
    .kernel_val_2_V_0_read(p_kernel_val_V_2_0_s_fu_218),
    .kernel_val_2_V_1_read(p_kernel_val_V_2_1_s_fu_222),
    .kernel_val_2_V_2_read(p_kernel_val_V_2_2_s_fu_226),
    .kernel_val_2_V_3_read(p_kernel_val_V_2_3_s_fu_230),
    .kernel_val_2_V_4_read(p_kernel_val_V_2_4_s_fu_234),
    .kernel_val_3_V_0_read(p_kernel_val_V_3_0_s_fu_238),
    .kernel_val_3_V_1_read(p_kernel_val_V_3_1_s_fu_242),
    .kernel_val_3_V_2_read(p_kernel_val_V_3_2_s_fu_246),
    .kernel_val_3_V_3_read(p_kernel_val_V_3_3_s_fu_250),
    .kernel_val_3_V_4_read(p_kernel_val_V_3_4_s_fu_254),
    .kernel_val_4_V_0_read(p_kernel_val_V_4_0_s_fu_258),
    .kernel_val_4_V_1_read(p_kernel_val_V_4_1_s_fu_262),
    .kernel_val_4_V_2_read(p_kernel_val_V_4_2_s_fu_266),
    .kernel_val_4_V_3_read(p_kernel_val_V_4_3_s_fu_270),
    .kernel_val_4_V_4_read(p_kernel_val_V_4_4_s_fu_274),
    .dst_val_V_address0(grp_Conv8_fu_555_dst_val_V_address0),
    .dst_val_V_ce0(grp_Conv8_fu_555_dst_val_V_ce0),
    .dst_val_V_we0(grp_Conv8_fu_555_dst_val_V_we0),
    .dst_val_V_d0(grp_Conv8_fu_555_dst_val_V_d0)
);

CNN_Core_uitofp_3qcK #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
CNN_Core_uitofp_3qcK_U80(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp32_V_5_reg_2339),
    .ce(1'b1),
    .dout(grp_fu_587_p1)
);

CNN_Core_fptrunc_rcU #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
CNN_Core_fptrunc_rcU_U81(
    .din0(tmp_90_reg_2374),
    .dout(res_fu_590_p1)
);

CNN_Core_fpext_32sc4 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
CNN_Core_fpext_32sc4_U82(
    .din0(tmp_i_i_reg_2359),
    .dout(tmp_88_fu_593_p1)
);

CNN_Core_fpext_32sc4 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
CNN_Core_fpext_32sc4_U83(
    .din0(res_fu_590_p1),
    .dout(d_assign_fu_596_p1)
);

CNN_Core_fexp_32ntde #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
CNN_Core_fexp_32ntde_U84(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(32'd0),
    .din1(x_assign_reg_2354),
    .ce(1'b1),
    .dout(grp_fu_600_p2)
);

CNN_Core_dadd_64nudo #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
CNN_Core_dadd_64nudo_U85(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_88_reg_2364),
    .din1(64'd4607182418800017408),
    .ce(1'b1),
    .dout(grp_fu_605_p2)
);

CNN_Core_ddiv_64nvdy #(
    .ID( 1 ),
    .NUM_STAGE( 15 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
CNN_Core_ddiv_64nvdy_U86(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(64'd4607182418800017408),
    .din1(tmp_89_reg_2369),
    .ce(1'b1),
    .dout(grp_fu_610_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state8) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state7) & (exitcond1_fu_757_p2 == 1'd0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state8))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state8);
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if (((1'b1 == ap_CS_fsm_state7) & (exitcond1_fu_757_p2 == 1'd0))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state13) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state12) & (exitcond8_i_fu_1053_p2 == 1'd0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state13))) begin
            ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state13);
        end else if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if (((1'b1 == ap_CS_fsm_state12) & (exitcond8_i_fu_1053_p2 == 1'd0))) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_condition_pp3_exit_iter0_state18) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state17) & (exitcond2_i_fu_1137_p2 == 1'd0))) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter0_state18)) begin
                ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state18);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter10 <= ap_enable_reg_pp3_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter11 <= ap_enable_reg_pp3_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter12 <= ap_enable_reg_pp3_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter13 <= ap_enable_reg_pp3_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter14 <= ap_enable_reg_pp3_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter15 <= ap_enable_reg_pp3_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter16 <= ap_enable_reg_pp3_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter17 <= ap_enable_reg_pp3_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter18 <= ap_enable_reg_pp3_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter19 <= ap_enable_reg_pp3_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter20 <= ap_enable_reg_pp3_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter21 <= ap_enable_reg_pp3_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter22 <= ap_enable_reg_pp3_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter23 <= ap_enable_reg_pp3_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter24 <= ap_enable_reg_pp3_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter25 <= ap_enable_reg_pp3_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter26 <= ap_enable_reg_pp3_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter27 <= ap_enable_reg_pp3_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter28 <= ap_enable_reg_pp3_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter29 <= ap_enable_reg_pp3_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter30 <= ap_enable_reg_pp3_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter31 <= ap_enable_reg_pp3_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter32 <= ap_enable_reg_pp3_iter31;
        end else if (((1'b1 == ap_CS_fsm_state17) & (exitcond2_i_fu_1137_p2 == 1'd0))) begin
            ap_enable_reg_pp3_iter32 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter4 <= ap_enable_reg_pp3_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter5 <= ap_enable_reg_pp3_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter6 <= ap_enable_reg_pp3_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter7 <= ap_enable_reg_pp3_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter8 <= ap_enable_reg_pp3_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter9 <= ap_enable_reg_pp3_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage0_subdone) & (1'b1 == ap_condition_pp4_exit_iter0_state53) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state52) & (exitcond5_fu_1743_p2 == 1'd0))) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage0_subdone) & (1'b1 == ap_condition_pp4_exit_iter0_state53))) begin
            ap_enable_reg_pp4_iter1 <= (1'b1 ^ ap_condition_pp4_exit_iter0_state53);
        end else if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
        end else if (((1'b1 == ap_CS_fsm_state52) & (exitcond5_fu_1743_p2 == 1'd0))) begin
            ap_enable_reg_pp4_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_Conv8_fu_555_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state7) & (exitcond1_fu_757_p2 == 1'd1))) begin
            grp_Conv8_fu_555_ap_start_reg <= 1'b1;
        end else if ((grp_Conv8_fu_555_ap_ready == 1'b1)) begin
            grp_Conv8_fu_555_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        i_0_i5_reg_510 <= i_3_reg_2283;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        i_0_i5_reg_510 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        i_0_i6_reg_464 <= i_s_reg_2081;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        i_0_i6_reg_464 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        i_0_i7_reg_532 <= i_4_reg_2423;
    end else if (((1'b1 == ap_CS_fsm_state17) & (exitcond2_i_fu_1137_p2 == 1'd1))) begin
        i_0_i7_reg_532 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        i_0_i8_reg_488 <= i_1_reg_2234;
    end else if (((grp_Conv8_fu_555_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        i_0_i8_reg_488 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond3_fu_615_p2 == 1'd0))) begin
        i_0_i_reg_442 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        i_0_i_reg_442 <= i_5_reg_2022;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state52) & (exitcond5_fu_1743_p2 == 1'd1))) begin
        i_reg_430 <= i_2_reg_2013;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_430 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & (exitcond2_i_fu_1137_p2 == 1'd0))) begin
        j_0_i5_reg_521 <= 5'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (exitcond_i2_fu_1179_p2 == 1'd0))) begin
        j_0_i5_reg_521 <= j_3_fu_1185_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_reg_2216 == 1'd0))) begin
        j_0_i6_reg_476 <= j_1_reg_2220;
    end else if (((1'b1 == ap_CS_fsm_state7) & (exitcond1_fu_757_p2 == 1'd0))) begin
        j_0_i6_reg_476 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state52) & (exitcond5_fu_1743_p2 == 1'd0))) begin
        j_0_i7_reg_543 <= 5'd0;
    end else if (((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (exitcond4_reg_2438 == 1'd0))) begin
        j_0_i7_reg_543 <= j_2_reg_2442;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & (exitcond8_i_fu_1053_p2 == 1'd0))) begin
        j_0_i8_reg_499 <= 5'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond_i_fu_1095_p2 == 1'd0))) begin
        j_0_i8_reg_499 <= j_s_fu_1101_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (exitcond7_fu_627_p2 == 1'd0))) begin
        j_0_i_reg_453 <= 5'd0;
    end else if (((1'b1 == ap_CS_fsm_state4) & (exitcond6_fu_675_p2 == 1'd0))) begin
        j_0_i_reg_453 <= j_fu_681_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        convlayer1_k_cols_lo_reg_2072 <= convlayer1_k_cols_q0;
        convlayer1_k_rows_lo_reg_2067 <= convlayer1_k_rows_q0;
        tmp_81_reg_2057 <= tmp_81_fu_717_p2;
        tmp_98_cast_reg_2062[9 : 3] <= tmp_98_cast_fu_753_p1[9 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        exitcond4_reg_2438 <= exitcond4_fu_1820_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        exitcond_i2_reg_2293 <= exitcond_i2_fu_1179_p2;
        exitcond_i2_reg_2293_pp3_iter1_reg <= exitcond_i2_reg_2293;
        p_output_val_V_addr_2_reg_2302_pp3_iter1_reg <= p_output_val_V_addr_2_reg_2302;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp3_stage0_11001)) begin
        exitcond_i2_reg_2293_pp3_iter10_reg <= exitcond_i2_reg_2293_pp3_iter9_reg;
        exitcond_i2_reg_2293_pp3_iter11_reg <= exitcond_i2_reg_2293_pp3_iter10_reg;
        exitcond_i2_reg_2293_pp3_iter12_reg <= exitcond_i2_reg_2293_pp3_iter11_reg;
        exitcond_i2_reg_2293_pp3_iter13_reg <= exitcond_i2_reg_2293_pp3_iter12_reg;
        exitcond_i2_reg_2293_pp3_iter14_reg <= exitcond_i2_reg_2293_pp3_iter13_reg;
        exitcond_i2_reg_2293_pp3_iter15_reg <= exitcond_i2_reg_2293_pp3_iter14_reg;
        exitcond_i2_reg_2293_pp3_iter16_reg <= exitcond_i2_reg_2293_pp3_iter15_reg;
        exitcond_i2_reg_2293_pp3_iter17_reg <= exitcond_i2_reg_2293_pp3_iter16_reg;
        exitcond_i2_reg_2293_pp3_iter18_reg <= exitcond_i2_reg_2293_pp3_iter17_reg;
        exitcond_i2_reg_2293_pp3_iter19_reg <= exitcond_i2_reg_2293_pp3_iter18_reg;
        exitcond_i2_reg_2293_pp3_iter20_reg <= exitcond_i2_reg_2293_pp3_iter19_reg;
        exitcond_i2_reg_2293_pp3_iter21_reg <= exitcond_i2_reg_2293_pp3_iter20_reg;
        exitcond_i2_reg_2293_pp3_iter22_reg <= exitcond_i2_reg_2293_pp3_iter21_reg;
        exitcond_i2_reg_2293_pp3_iter23_reg <= exitcond_i2_reg_2293_pp3_iter22_reg;
        exitcond_i2_reg_2293_pp3_iter24_reg <= exitcond_i2_reg_2293_pp3_iter23_reg;
        exitcond_i2_reg_2293_pp3_iter25_reg <= exitcond_i2_reg_2293_pp3_iter24_reg;
        exitcond_i2_reg_2293_pp3_iter26_reg <= exitcond_i2_reg_2293_pp3_iter25_reg;
        exitcond_i2_reg_2293_pp3_iter27_reg <= exitcond_i2_reg_2293_pp3_iter26_reg;
        exitcond_i2_reg_2293_pp3_iter28_reg <= exitcond_i2_reg_2293_pp3_iter27_reg;
        exitcond_i2_reg_2293_pp3_iter29_reg <= exitcond_i2_reg_2293_pp3_iter28_reg;
        exitcond_i2_reg_2293_pp3_iter2_reg <= exitcond_i2_reg_2293_pp3_iter1_reg;
        exitcond_i2_reg_2293_pp3_iter30_reg <= exitcond_i2_reg_2293_pp3_iter29_reg;
        exitcond_i2_reg_2293_pp3_iter31_reg <= exitcond_i2_reg_2293_pp3_iter30_reg;
        exitcond_i2_reg_2293_pp3_iter3_reg <= exitcond_i2_reg_2293_pp3_iter2_reg;
        exitcond_i2_reg_2293_pp3_iter4_reg <= exitcond_i2_reg_2293_pp3_iter3_reg;
        exitcond_i2_reg_2293_pp3_iter5_reg <= exitcond_i2_reg_2293_pp3_iter4_reg;
        exitcond_i2_reg_2293_pp3_iter6_reg <= exitcond_i2_reg_2293_pp3_iter5_reg;
        exitcond_i2_reg_2293_pp3_iter7_reg <= exitcond_i2_reg_2293_pp3_iter6_reg;
        exitcond_i2_reg_2293_pp3_iter8_reg <= exitcond_i2_reg_2293_pp3_iter7_reg;
        exitcond_i2_reg_2293_pp3_iter9_reg <= exitcond_i2_reg_2293_pp3_iter8_reg;
        is_neg_reg_2313_pp3_iter2_reg <= is_neg_reg_2313;
        is_neg_reg_2313_pp3_iter3_reg <= is_neg_reg_2313_pp3_iter2_reg;
        is_neg_reg_2313_pp3_iter4_reg <= is_neg_reg_2313_pp3_iter3_reg;
        msb_idx_reg_2334_pp3_iter3_reg <= msb_idx_reg_2334;
        msb_idx_reg_2334_pp3_iter4_reg <= msb_idx_reg_2334_pp3_iter3_reg;
        p_output_val_V_addr_2_reg_2302_pp3_iter10_reg <= p_output_val_V_addr_2_reg_2302_pp3_iter9_reg;
        p_output_val_V_addr_2_reg_2302_pp3_iter11_reg <= p_output_val_V_addr_2_reg_2302_pp3_iter10_reg;
        p_output_val_V_addr_2_reg_2302_pp3_iter12_reg <= p_output_val_V_addr_2_reg_2302_pp3_iter11_reg;
        p_output_val_V_addr_2_reg_2302_pp3_iter13_reg <= p_output_val_V_addr_2_reg_2302_pp3_iter12_reg;
        p_output_val_V_addr_2_reg_2302_pp3_iter14_reg <= p_output_val_V_addr_2_reg_2302_pp3_iter13_reg;
        p_output_val_V_addr_2_reg_2302_pp3_iter15_reg <= p_output_val_V_addr_2_reg_2302_pp3_iter14_reg;
        p_output_val_V_addr_2_reg_2302_pp3_iter16_reg <= p_output_val_V_addr_2_reg_2302_pp3_iter15_reg;
        p_output_val_V_addr_2_reg_2302_pp3_iter17_reg <= p_output_val_V_addr_2_reg_2302_pp3_iter16_reg;
        p_output_val_V_addr_2_reg_2302_pp3_iter18_reg <= p_output_val_V_addr_2_reg_2302_pp3_iter17_reg;
        p_output_val_V_addr_2_reg_2302_pp3_iter19_reg <= p_output_val_V_addr_2_reg_2302_pp3_iter18_reg;
        p_output_val_V_addr_2_reg_2302_pp3_iter20_reg <= p_output_val_V_addr_2_reg_2302_pp3_iter19_reg;
        p_output_val_V_addr_2_reg_2302_pp3_iter21_reg <= p_output_val_V_addr_2_reg_2302_pp3_iter20_reg;
        p_output_val_V_addr_2_reg_2302_pp3_iter22_reg <= p_output_val_V_addr_2_reg_2302_pp3_iter21_reg;
        p_output_val_V_addr_2_reg_2302_pp3_iter23_reg <= p_output_val_V_addr_2_reg_2302_pp3_iter22_reg;
        p_output_val_V_addr_2_reg_2302_pp3_iter24_reg <= p_output_val_V_addr_2_reg_2302_pp3_iter23_reg;
        p_output_val_V_addr_2_reg_2302_pp3_iter25_reg <= p_output_val_V_addr_2_reg_2302_pp3_iter24_reg;
        p_output_val_V_addr_2_reg_2302_pp3_iter26_reg <= p_output_val_V_addr_2_reg_2302_pp3_iter25_reg;
        p_output_val_V_addr_2_reg_2302_pp3_iter27_reg <= p_output_val_V_addr_2_reg_2302_pp3_iter26_reg;
        p_output_val_V_addr_2_reg_2302_pp3_iter28_reg <= p_output_val_V_addr_2_reg_2302_pp3_iter27_reg;
        p_output_val_V_addr_2_reg_2302_pp3_iter29_reg <= p_output_val_V_addr_2_reg_2302_pp3_iter28_reg;
        p_output_val_V_addr_2_reg_2302_pp3_iter2_reg <= p_output_val_V_addr_2_reg_2302_pp3_iter1_reg;
        p_output_val_V_addr_2_reg_2302_pp3_iter30_reg <= p_output_val_V_addr_2_reg_2302_pp3_iter29_reg;
        p_output_val_V_addr_2_reg_2302_pp3_iter31_reg <= p_output_val_V_addr_2_reg_2302_pp3_iter30_reg;
        p_output_val_V_addr_2_reg_2302_pp3_iter3_reg <= p_output_val_V_addr_2_reg_2302_pp3_iter2_reg;
        p_output_val_V_addr_2_reg_2302_pp3_iter4_reg <= p_output_val_V_addr_2_reg_2302_pp3_iter3_reg;
        p_output_val_V_addr_2_reg_2302_pp3_iter5_reg <= p_output_val_V_addr_2_reg_2302_pp3_iter4_reg;
        p_output_val_V_addr_2_reg_2302_pp3_iter6_reg <= p_output_val_V_addr_2_reg_2302_pp3_iter5_reg;
        p_output_val_V_addr_2_reg_2302_pp3_iter7_reg <= p_output_val_V_addr_2_reg_2302_pp3_iter6_reg;
        p_output_val_V_addr_2_reg_2302_pp3_iter8_reg <= p_output_val_V_addr_2_reg_2302_pp3_iter7_reg;
        p_output_val_V_addr_2_reg_2302_pp3_iter9_reg <= p_output_val_V_addr_2_reg_2302_pp3_iter8_reg;
        tmp_79_reg_2308_pp3_iter2_reg <= tmp_79_reg_2308;
        tmp_79_reg_2308_pp3_iter3_reg <= tmp_79_reg_2308_pp3_iter2_reg;
        tmp_79_reg_2308_pp3_iter4_reg <= tmp_79_reg_2308_pp3_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        exitcond_i_reg_2249 <= exitcond_i_fu_1095_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        exitcond_reg_2216 <= exitcond_fu_899_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        i_1_reg_2234 <= i_1_fu_1059_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_2_reg_2013 <= i_2_fu_621_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        i_3_reg_2283 <= i_3_fu_1143_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        i_4_reg_2423 <= i_4_fu_1749_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_5_reg_2022 <= i_5_fu_633_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        i_s_reg_2081 <= i_s_fu_762_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (exitcond_i2_reg_2293 == 1'd0))) begin
        is_neg_reg_2313 <= p_Val2_34_fu_1209_p2[32'd32];
        num_zeros_reg_2329 <= num_zeros_fu_1277_p1;
        p_Val2_38_reg_2318 <= p_Val2_38_fu_1239_p3;
        p_Val2_40_cast_reg_2323[31 : 0] <= p_Val2_40_cast_fu_1247_p1[31 : 0];
        tmp_79_reg_2308 <= tmp_79_fu_1219_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (exitcond_i2_reg_2293_pp3_iter30_reg == 1'd0))) begin
        isneg_reg_2379 <= ireg_V_fu_1476_p1[32'd63];
        tmp_116_reg_2396 <= tmp_116_fu_1522_p2;
        tmp_117_reg_2403 <= tmp_117_fu_1528_p2;
        tmp_122_reg_2408 <= tmp_122_fu_1534_p2;
        tmp_123_reg_2413 <= tmp_123_fu_1540_p2;
        tmp_145_reg_2385 <= tmp_145_fu_1506_p1;
        tmp_93_reg_2390 <= tmp_93_fu_1510_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        j_1_reg_2220 <= j_1_fu_904_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        j_2_reg_2442 <= j_2_fu_1826_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (tmp_79_reg_2308 == 1'd0) & (exitcond_i2_reg_2293_pp3_iter1_reg == 1'd0))) begin
        msb_idx_reg_2334 <= msb_idx_fu_1281_p2;
        tmp32_V_5_reg_2339 <= tmp32_V_5_fu_1397_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (tmp_79_reg_2308_pp3_iter3_reg == 1'd0) & (exitcond_i2_reg_2293_pp3_iter3_reg == 1'd0))) begin
        p_Result_s_197_reg_2349 <= {{tmp32_V_8_fu_1405_p1[30:23]}};
        tmp32_V_8_reg_2344 <= tmp32_V_8_fu_1405_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j_0_i6_reg_476 == 3'd0) & (i_0_i6_reg_464 == 3'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        p_kernel_val_V_0_0_s_fu_178 <= p_kernel_val_4_V_0_s_fu_924_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j_0_i6_reg_476 == 3'd1) & (i_0_i6_reg_464 == 3'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        p_kernel_val_V_0_1_s_fu_182 <= p_kernel_val_4_V_0_s_fu_924_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j_0_i6_reg_476 == 3'd2) & (i_0_i6_reg_464 == 3'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        p_kernel_val_V_0_2_s_fu_186 <= p_kernel_val_4_V_0_s_fu_924_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j_0_i6_reg_476 == 3'd3) & (i_0_i6_reg_464 == 3'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        p_kernel_val_V_0_3_s_fu_190 <= p_kernel_val_4_V_0_s_fu_924_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(j_0_i6_reg_476 == 3'd3) & ~(j_0_i6_reg_476 == 3'd2) & ~(j_0_i6_reg_476 == 3'd1) & ~(j_0_i6_reg_476 == 3'd0) & (i_0_i6_reg_464 == 3'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        p_kernel_val_V_0_4_s_fu_194 <= p_kernel_val_4_V_0_s_fu_924_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j_0_i6_reg_476 == 3'd0) & (i_0_i6_reg_464 == 3'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        p_kernel_val_V_1_0_s_fu_198 <= p_kernel_val_4_V_0_s_fu_924_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j_0_i6_reg_476 == 3'd1) & (i_0_i6_reg_464 == 3'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        p_kernel_val_V_1_1_s_fu_202 <= p_kernel_val_4_V_0_s_fu_924_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j_0_i6_reg_476 == 3'd2) & (i_0_i6_reg_464 == 3'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        p_kernel_val_V_1_2_s_fu_206 <= p_kernel_val_4_V_0_s_fu_924_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j_0_i6_reg_476 == 3'd3) & (i_0_i6_reg_464 == 3'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        p_kernel_val_V_1_3_s_fu_210 <= p_kernel_val_4_V_0_s_fu_924_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(j_0_i6_reg_476 == 3'd3) & ~(j_0_i6_reg_476 == 3'd2) & ~(j_0_i6_reg_476 == 3'd1) & ~(j_0_i6_reg_476 == 3'd0) & (i_0_i6_reg_464 == 3'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        p_kernel_val_V_1_4_s_fu_214 <= p_kernel_val_4_V_0_s_fu_924_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j_0_i6_reg_476 == 3'd0) & (i_0_i6_reg_464 == 3'd2) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        p_kernel_val_V_2_0_s_fu_218 <= p_kernel_val_4_V_0_s_fu_924_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j_0_i6_reg_476 == 3'd1) & (i_0_i6_reg_464 == 3'd2) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        p_kernel_val_V_2_1_s_fu_222 <= p_kernel_val_4_V_0_s_fu_924_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j_0_i6_reg_476 == 3'd2) & (i_0_i6_reg_464 == 3'd2) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        p_kernel_val_V_2_2_s_fu_226 <= p_kernel_val_4_V_0_s_fu_924_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j_0_i6_reg_476 == 3'd3) & (i_0_i6_reg_464 == 3'd2) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        p_kernel_val_V_2_3_s_fu_230 <= p_kernel_val_4_V_0_s_fu_924_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(j_0_i6_reg_476 == 3'd3) & ~(j_0_i6_reg_476 == 3'd2) & ~(j_0_i6_reg_476 == 3'd1) & ~(j_0_i6_reg_476 == 3'd0) & (i_0_i6_reg_464 == 3'd2) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        p_kernel_val_V_2_4_s_fu_234 <= p_kernel_val_4_V_0_s_fu_924_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j_0_i6_reg_476 == 3'd0) & (i_0_i6_reg_464 == 3'd3) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        p_kernel_val_V_3_0_s_fu_238 <= p_kernel_val_4_V_0_s_fu_924_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j_0_i6_reg_476 == 3'd1) & (i_0_i6_reg_464 == 3'd3) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        p_kernel_val_V_3_1_s_fu_242 <= p_kernel_val_4_V_0_s_fu_924_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j_0_i6_reg_476 == 3'd2) & (i_0_i6_reg_464 == 3'd3) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        p_kernel_val_V_3_2_s_fu_246 <= p_kernel_val_4_V_0_s_fu_924_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((j_0_i6_reg_476 == 3'd3) & (i_0_i6_reg_464 == 3'd3) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        p_kernel_val_V_3_3_s_fu_250 <= p_kernel_val_4_V_0_s_fu_924_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(j_0_i6_reg_476 == 3'd3) & ~(j_0_i6_reg_476 == 3'd2) & ~(j_0_i6_reg_476 == 3'd1) & ~(j_0_i6_reg_476 == 3'd0) & (i_0_i6_reg_464 == 3'd3) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        p_kernel_val_V_3_4_s_fu_254 <= p_kernel_val_4_V_0_s_fu_924_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(i_0_i6_reg_464 == 3'd3) & ~(i_0_i6_reg_464 == 3'd2) & ~(i_0_i6_reg_464 == 3'd1) & ~(i_0_i6_reg_464 == 3'd0) & (j_0_i6_reg_476 == 3'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        p_kernel_val_V_4_0_s_fu_258 <= p_kernel_val_4_V_0_s_fu_924_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(i_0_i6_reg_464 == 3'd3) & ~(i_0_i6_reg_464 == 3'd2) & ~(i_0_i6_reg_464 == 3'd1) & ~(i_0_i6_reg_464 == 3'd0) & (j_0_i6_reg_476 == 3'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        p_kernel_val_V_4_1_s_fu_262 <= p_kernel_val_4_V_0_s_fu_924_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(i_0_i6_reg_464 == 3'd3) & ~(i_0_i6_reg_464 == 3'd2) & ~(i_0_i6_reg_464 == 3'd1) & ~(i_0_i6_reg_464 == 3'd0) & (j_0_i6_reg_476 == 3'd2) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        p_kernel_val_V_4_2_s_fu_266 <= p_kernel_val_4_V_0_s_fu_924_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(i_0_i6_reg_464 == 3'd3) & ~(i_0_i6_reg_464 == 3'd2) & ~(i_0_i6_reg_464 == 3'd1) & ~(i_0_i6_reg_464 == 3'd0) & (j_0_i6_reg_476 == 3'd3) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        p_kernel_val_V_4_3_s_fu_270 <= p_kernel_val_4_V_0_s_fu_924_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(i_0_i6_reg_464 == 3'd3) & ~(i_0_i6_reg_464 == 3'd2) & ~(i_0_i6_reg_464 == 3'd1) & ~(j_0_i6_reg_476 == 3'd3) & ~(j_0_i6_reg_476 == 3'd2) & ~(j_0_i6_reg_476 == 3'd1) & ~(j_0_i6_reg_476 == 3'd0) & ~(i_0_i6_reg_464 == 3'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        p_kernel_val_V_4_4_s_fu_274 <= p_kernel_val_4_V_0_s_fu_924_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond_i_fu_1095_p2 == 1'd0))) begin
        p_output_val_V_addr_1_reg_2263 <= tmp_113_cast_fu_1116_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (exitcond_i2_fu_1179_p2 == 1'd0))) begin
        p_output_val_V_addr_2_reg_2302 <= tmp_121_cast_fu_1200_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & (exitcond8_i_fu_1053_p2 == 1'd0))) begin
        tmp_103_reg_2239[10 : 3] <= tmp_103_fu_1089_p2[10 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & (exitcond2_i_fu_1137_p2 == 1'd0))) begin
        tmp_107_reg_2288[10 : 3] <= tmp_107_fu_1173_p2[10 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state52) & (exitcond5_fu_1743_p2 == 1'd0))) begin
        tmp_111_reg_2428[12 : 3] <= tmp_111_fu_1784_p2[12 : 3];
        tmp_114_reg_2433[10 : 3] <= tmp_114_fu_1814_p2[10 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        tmp_67_reg_2274 <= tmp_67_fu_1133_p1;
        tmp_70_reg_2269 <= tmp_70_fu_1129_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (exitcond_i2_reg_2293_pp3_iter10_reg == 1'd0))) begin
        tmp_88_reg_2364 <= tmp_88_fu_593_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (exitcond_i2_reg_2293_pp3_iter14_reg == 1'd0))) begin
        tmp_89_reg_2369 <= grp_fu_605_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (exitcond_i2_reg_2293_pp3_iter29_reg == 1'd0))) begin
        tmp_90_reg_2374 <= grp_fu_610_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (exitcond7_fu_627_p2 == 1'd0))) begin
        tmp_96_reg_2027[10 : 3] <= tmp_96_fu_663_p2[10 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (exitcond1_fu_757_p2 == 1'd0))) begin
        tmp_99_reg_2086 <= tmp_99_fu_793_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (exitcond_i2_reg_2293_pp3_iter9_reg == 1'd0))) begin
        tmp_i_i_reg_2359 <= grp_fu_600_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (exitcond7_fu_627_p2 == 1'd1))) begin
        tmp_s_reg_2032[2 : 0] <= tmp_s_fu_669_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (exitcond_i2_reg_2293_pp3_iter4_reg == 1'd0))) begin
        x_assign_reg_2354 <= x_assign_fu_1469_p3;
    end
end

always @ (*) begin
    if ((exitcond_fu_899_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state8 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state8 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_i_fu_1095_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state13 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state13 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_i2_fu_1179_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state18 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state18 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond4_fu_1820_p2 == 1'd1)) begin
        ap_condition_pp4_exit_iter0_state53 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter0_state53 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state2) & (exitcond3_fu_615_p2 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter32 == 1'b0) & (ap_enable_reg_pp3_iter31 == 1'b0) & (ap_enable_reg_pp3_iter30 == 1'b0) & (ap_enable_reg_pp3_iter29 == 1'b0) & (ap_enable_reg_pp3_iter28 == 1'b0) & (ap_enable_reg_pp3_iter27 == 1'b0) & (ap_enable_reg_pp3_iter26 == 1'b0) & (ap_enable_reg_pp3_iter25 == 1'b0) & (ap_enable_reg_pp3_iter24 == 1'b0) & (ap_enable_reg_pp3_iter23 == 1'b0) & (ap_enable_reg_pp3_iter22 == 1'b0) & (ap_enable_reg_pp3_iter21 == 1'b0) & (ap_enable_reg_pp3_iter20 == 1'b0) & (ap_enable_reg_pp3_iter19 == 1'b0) & (ap_enable_reg_pp3_iter18 == 1'b0) & (ap_enable_reg_pp3_iter17 == 1'b0) & (ap_enable_reg_pp3_iter16 == 1'b0) & (ap_enable_reg_pp3_iter15 == 1'b0) & (ap_enable_reg_pp3_iter14 == 1'b0) & (ap_enable_reg_pp3_iter13 == 1'b0) & (ap_enable_reg_pp3_iter12 == 1'b0) & (ap_enable_reg_pp3_iter11 == 1'b0) & (ap_enable_reg_pp3_iter10 == 1'b0) & (ap_enable_reg_pp3_iter9 == 1'b0) & (ap_enable_reg_pp3_iter8 == 1'b0) & (ap_enable_reg_pp3_iter7 == 1'b0) & (ap_enable_reg_pp3_iter6 == 1'b0) & (ap_enable_reg_pp3_iter5 == 1'b0) & (ap_enable_reg_pp3_iter4 == 1'b0) & (ap_enable_reg_pp3_iter3 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_reg_2216 == 1'd0))) begin
        ap_phi_mux_j_0_i6_phi_fu_480_p4 = j_1_reg_2220;
    end else begin
        ap_phi_mux_j_0_i6_phi_fu_480_p4 = j_0_i6_reg_476;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (exitcond4_reg_2438 == 1'd0))) begin
        ap_phi_mux_j_0_i7_phi_fu_547_p4 = j_2_reg_2442;
    end else begin
        ap_phi_mux_j_0_i7_phi_fu_547_p4 = j_0_i7_reg_543;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond3_fu_615_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        convlayer1_b_V_ce0 = 1'b1;
    end else begin
        convlayer1_b_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        convlayer1_k_cols_ce0 = 1'b1;
    end else begin
        convlayer1_k_cols_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        convlayer1_k_rows_ce0 = 1'b1;
    end else begin
        convlayer1_k_rows_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        convlayer1_k_val_V_ce0 = 1'b1;
    end else begin
        convlayer1_k_val_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        convlayer_output_cols_ce0 = 1'b1;
    end else begin
        convlayer_output_cols_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) & (exitcond2_i_fu_1137_p2 == 1'd1))) begin
        convlayer_output_cols_we0 = 1'b1;
    end else begin
        convlayer_output_cols_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        convlayer_output_rows_ce0 = 1'b1;
    end else begin
        convlayer_output_rows_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) & (exitcond2_i_fu_1137_p2 == 1'd1))) begin
        convlayer_output_rows_we0 = 1'b1;
    end else begin
        convlayer_output_rows_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        convlayer_output_val_V_ce0 = 1'b1;
    end else begin
        convlayer_output_val_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (exitcond4_reg_2438 == 1'd0))) begin
        convlayer_output_val_V_we0 = 1'b1;
    end else begin
        convlayer_output_val_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter32 == 1'b1))) begin
        p_output_val_V_address0 = p_output_val_V_addr_2_reg_2302_pp3_iter31_reg;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        p_output_val_V_address0 = tmp_113_cast_fu_1116_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        p_output_val_V_address0 = tmp_105_cast_fu_696_p1;
    end else begin
        p_output_val_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        p_output_val_V_address1 = tmp_136_cast_fu_1841_p1;
    end else if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        p_output_val_V_address1 = tmp_121_cast_fu_1200_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        p_output_val_V_address1 = p_output_val_V_addr_1_reg_2263;
    end else begin
        p_output_val_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter32 == 1'b1)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
        p_output_val_V_ce0 = 1'b1;
    end else begin
        p_output_val_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
        p_output_val_V_ce1 = 1'b1;
    end else begin
        p_output_val_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter32 == 1'b1))) begin
        p_output_val_V_d0 = newSel6_fu_1734_p3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        p_output_val_V_d0 = 32'd0;
    end else begin
        p_output_val_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter32 == 1'b1) & (exitcond_i2_reg_2293_pp3_iter31_reg == 1'd0)) | ((1'b1 == ap_CS_fsm_state4) & (exitcond6_fu_675_p2 == 1'd0)))) begin
        p_output_val_V_we0 = 1'b1;
    end else begin
        p_output_val_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond_i_reg_2249 == 1'd0))) begin
        p_output_val_V_we1 = 1'b1;
    end else begin
        p_output_val_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        p_temp_val_V_address0 = tmp_113_cast_fu_1116_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        p_temp_val_V_address0 = grp_Conv8_fu_555_dst_val_V_address0;
    end else begin
        p_temp_val_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        p_temp_val_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        p_temp_val_V_ce0 = grp_Conv8_fu_555_dst_val_V_ce0;
    end else begin
        p_temp_val_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        p_temp_val_V_we0 = grp_Conv8_fu_555_dst_val_V_we0;
    end else begin
        p_temp_val_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (exitcond3_fu_615_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (exitcond7_fu_627_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (exitcond6_fu_675_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (exitcond1_fu_757_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (exitcond_fu_899_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (exitcond_fu_899_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state11 : begin
            if (((grp_Conv8_fu_555_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            if (((1'b1 == ap_CS_fsm_state12) & (exitcond8_i_fu_1053_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_pp2_stage0 : begin
            if (~((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter0 == 1'b1) & (exitcond_i_fu_1095_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter0 == 1'b1) & (exitcond_i_fu_1095_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            if (((1'b1 == ap_CS_fsm_state17) & (exitcond2_i_fu_1137_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter0 == 1'b1) & (exitcond_i2_fu_1179_p2 == 1'd1)) & ~((ap_enable_reg_pp3_iter31 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter32 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((ap_enable_reg_pp3_iter31 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter32 == 1'b1)) | ((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter0 == 1'b1) & (exitcond_i2_fu_1179_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state52 : begin
            if (((1'b1 == ap_CS_fsm_state52) & (exitcond5_fu_1743_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_pp4_stage0 : begin
            if (~((1'b0 == ap_block_pp4_stage0_subdone) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond4_fu_1820_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if (((1'b0 == ap_block_pp4_stage0_subdone) & (ap_enable_reg_pp4_iter0 == 1'b1) & (exitcond4_fu_1820_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_fu_1516_p2 = (12'd1075 - tmp_91_fu_1502_p1);

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state13_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp3_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp3_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp3_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp3_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp3_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp3_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp3_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp3_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp3_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp3_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp3_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp3_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp3_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp3_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp3_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp3_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp3_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp3_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp3_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp3_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp3_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp3_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp3_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp3_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp3_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp3_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp3_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp3_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp3_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp3_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp4_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp4_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

assign convlayer1_b_V_address0 = tmp_s_reg_2032;

assign convlayer1_k_cols_address0 = tmp_s_fu_669_p1;

assign convlayer1_k_rows_address0 = tmp_s_fu_669_p1;

assign convlayer1_k_val_V_address0 = tmp_109_cast_fu_919_p1;

assign convlayer_output_cols_address0 = tmp_s_reg_2032;

assign convlayer_output_cols_d0 = 6'd24;

assign convlayer_output_rows_address0 = tmp_s_reg_2032;

assign convlayer_output_rows_d0 = 6'd24;

assign convlayer_output_val_V_address0 = tmp_135_cast_fu_1855_p1;

assign convlayer_output_val_V_d0 = p_output_val_V_q1;

assign exitcond1_fu_757_p2 = ((i_0_i6_reg_464 == convlayer1_k_rows_lo_reg_2067) ? 1'b1 : 1'b0);

assign exitcond2_i_fu_1137_p2 = ((i_0_i5_reg_510 == 5'd24) ? 1'b1 : 1'b0);

assign exitcond3_fu_615_p2 = ((i_reg_430 == 3'd6) ? 1'b1 : 1'b0);

assign exitcond4_fu_1820_p2 = ((ap_phi_mux_j_0_i7_phi_fu_547_p4 == 5'd24) ? 1'b1 : 1'b0);

assign exitcond5_fu_1743_p2 = ((i_0_i7_reg_532 == 5'd24) ? 1'b1 : 1'b0);

assign exitcond6_fu_675_p2 = ((j_0_i_reg_453 == 5'd24) ? 1'b1 : 1'b0);

assign exitcond7_fu_627_p2 = ((i_0_i_reg_442 == 5'd24) ? 1'b1 : 1'b0);

assign exitcond8_i_fu_1053_p2 = ((i_0_i8_reg_488 == 5'd24) ? 1'b1 : 1'b0);

assign exitcond_fu_899_p2 = ((ap_phi_mux_j_0_i6_phi_fu_480_p4 == convlayer1_k_cols_lo_reg_2072) ? 1'b1 : 1'b0);

assign exitcond_i2_fu_1179_p2 = ((j_0_i5_reg_521 == 5'd24) ? 1'b1 : 1'b0);

assign exitcond_i_fu_1095_p2 = ((j_0_i8_reg_499 == 5'd24) ? 1'b1 : 1'b0);

assign exp_tmp_V_fu_1492_p4 = {{ireg_V_fu_1476_p1[62:52]}};

assign grp_Conv8_fu_555_ap_start = grp_Conv8_fu_555_ap_start_reg;

assign i_1_fu_1059_p2 = (i_0_i8_reg_488 + 5'd1);

assign i_2_fu_621_p2 = (i_reg_430 + 3'd1);

assign i_3_fu_1143_p2 = (i_0_i5_reg_510 + 5'd1);

assign i_4_fu_1749_p2 = (i_0_i7_reg_532 + 5'd1);

assign i_5_fu_633_p2 = (i_0_i_reg_442 + 5'd1);

assign i_s_fu_762_p2 = (i_0_i6_reg_464 + 3'd1);

assign icmp6_fu_1599_p2 = ((tmp_147_fu_1589_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_fu_1316_p2 = ((tmp_120_fu_1306_p4 == 26'd0) ? 1'b1 : 1'b0);

assign input_0_val_V_address0 = grp_Conv8_fu_555_src_0_val_V_address0;

assign input_0_val_V_ce0 = grp_Conv8_fu_555_src_0_val_V_ce0;

assign ireg_V_fu_1476_p1 = d_assign_fu_596_p1;

assign is_neg_fu_1225_p3 = p_Val2_34_fu_1209_p2[32'd32];

assign j_1_fu_904_p2 = (ap_phi_mux_j_0_i6_phi_fu_480_p4 + 3'd1);

assign j_2_fu_1826_p2 = (ap_phi_mux_j_0_i7_phi_fu_547_p4 + 5'd1);

assign j_3_fu_1185_p2 = (j_0_i5_reg_521 + 5'd1);

assign j_fu_681_p2 = (j_0_i_reg_453 + 5'd1);

assign j_s_fu_1101_p2 = (j_0_i8_reg_499 + 5'd1);

assign man_V_1_fu_1557_p2 = (54'd0 - p_Result_4_fu_1553_p1);

assign man_V_2_fu_1563_p3 = ((isneg_reg_2379[0:0] === 1'b1) ? man_V_1_fu_1557_p2 : p_Result_4_fu_1553_p1);

assign msb_idx_1_fu_1298_p3 = ((tmp_119_fu_1290_p3[0:0] === 1'b1) ? 31'd0 : tmp_118_fu_1286_p1);

assign msb_idx_fu_1281_p2 = (32'd32 - num_zeros_reg_2329);

assign newSel4_fu_1706_p3 = ((sel_tmp8_fu_1657_p2[0:0] === 1'b1) ? tmp_148_fu_1615_p1 : tmp_146_fu_1579_p1);

assign newSel5_fu_1720_p3 = ((or_cond_fu_1700_p2[0:0] === 1'b1) ? newSel_fu_1692_p3 : newSel4_fu_1706_p3);

assign newSel6_fu_1734_p3 = ((or_cond4_fu_1728_p2[0:0] === 1'b1) ? newSel5_fu_1720_p3 : 32'd0);

assign newSel_fu_1692_p3 = ((sel_tmp4_fu_1686_p2[0:0] === 1'b1) ? tmp_129_fu_1626_p2 : this_assign_fu_1619_p3);

assign num_zeros_fu_1277_p1 = tmp_80_fu_1269_p3[31:0];

assign or_cond3_fu_1714_p2 = (sel_tmp8_fu_1657_p2 | sel_tmp2_fu_1637_p2);

assign or_cond4_fu_1728_p2 = (or_cond_fu_1700_p2 | or_cond3_fu_1714_p2);

assign or_cond_fu_1700_p2 = (sel_tmp9_fu_1669_p2 | sel_tmp4_fu_1686_p2);

assign p_Repl2_3_trunc_fu_1435_p2 = (tmp_142_fu_1424_p1 + tmp24_cast_cast_fu_1427_p3);

assign p_Result_12_op_fu_1459_p2 = (p_Result_3_fu_1448_p5 ^ 32'd2147483648);

assign p_Result_2_fu_1261_p3 = {{31'd2147483647}, {p_Result_s_fu_1251_p4}};

assign p_Result_3_fu_1448_p5 = {{tmp_87_fu_1441_p3}, {tmp32_V_8_reg_2344[22:0]}};

assign p_Result_4_fu_1553_p1 = tmp_92_fu_1546_p3;

integer ap_tvar_int_0;

always @ (p_Val2_40_cast_fu_1247_p1) begin
    for (ap_tvar_int_0 = 33 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 32 - 0) begin
            p_Result_s_fu_1251_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_s_fu_1251_p4[ap_tvar_int_0] = p_Val2_40_cast_fu_1247_p1[32 - ap_tvar_int_0];
        end
    end
end

assign p_Val2_34_fu_1209_p2 = ($signed(tmp_70_reg_2269) + $signed(tmp_78_fu_1205_p1));

assign p_Val2_38_cast_fu_1214_p1 = p_output_val_V_q1;

assign p_Val2_38_cast_fu_1214_p2 = ($signed(tmp_67_reg_2274) + $signed(p_Val2_38_cast_fu_1214_p1));

assign p_Val2_38_fu_1239_p3 = ((is_neg_fu_1225_p3[0:0] === 1'b1) ? tmp_176_cast_fu_1233_p2 : p_Val2_38_cast_fu_1214_p2);

assign p_Val2_40_cast_fu_1247_p1 = p_Val2_38_fu_1239_p3;

assign p_kernel_val_4_V_0_s_fu_924_p1 = $signed(convlayer1_k_val_V_q0);

assign p_output_val_V_d1 = (p_temp_val_V_q0 + p_output_val_V_q0);

assign p_shl10_cast_fu_1798_p1 = tmp_112_fu_1790_p3;

assign p_shl11_cast_fu_1810_p1 = tmp_113_fu_1802_p3;

assign p_shl12_cast_fu_1768_p3 = {{tmp_110_fu_1764_p1}, {5'd0}};

assign p_shl13_cast_fu_1776_p3 = {{tmp_109_fu_1759_p2}, {3'd0}};

assign p_shl1_cast_fu_659_p1 = tmp_95_fu_651_p3;

assign p_shl2_cast_fu_731_p1 = tmp_82_fu_723_p3;

assign p_shl3_cast_fu_743_p1 = tmp_84_fu_735_p3;

assign p_shl4_cast_fu_713_p1 = tmp_77_fu_705_p3;

assign p_shl5_cast_fu_789_p1 = tmp_98_fu_781_p3;

assign p_shl6_cast_fu_1073_p1 = tmp_101_fu_1065_p3;

assign p_shl7_cast_fu_1085_p1 = tmp_102_fu_1077_p3;

assign p_shl8_cast_fu_1157_p1 = tmp_105_fu_1149_p3;

assign p_shl9_cast_fu_1169_p1 = tmp_106_fu_1161_p3;

assign p_shl_cast_fu_647_p1 = tmp_94_fu_639_p3;

assign sel_tmp1_fu_1632_p2 = (tmp_93_reg_2390 ^ 1'd1);

assign sel_tmp21_demorgan_fu_1675_p2 = (tmp_116_reg_2396 | sel_tmp6_demorgan_fu_1642_p2);

assign sel_tmp2_fu_1637_p2 = (tmp_123_reg_2413 & sel_tmp1_fu_1632_p2);

assign sel_tmp3_fu_1680_p2 = (sel_tmp21_demorgan_fu_1675_p2 ^ 1'd1);

assign sel_tmp4_fu_1686_p2 = (sel_tmp3_fu_1680_p2 & icmp6_fu_1599_p2);

assign sel_tmp6_demorgan_fu_1642_p2 = (tmp_93_reg_2390 | tmp_123_reg_2413);

assign sel_tmp6_fu_1646_p2 = (sel_tmp6_demorgan_fu_1642_p2 ^ 1'd1);

assign sel_tmp7_fu_1652_p2 = (tmp_116_reg_2396 & sel_tmp6_fu_1646_p2);

assign sel_tmp8_fu_1657_p2 = (tmp_124_fu_1583_p2 & sel_tmp7_fu_1652_p2);

assign sel_tmp9_fu_1669_p2 = (sel_tmp_fu_1663_p2 & sel_tmp7_fu_1652_p2);

assign sel_tmp_fu_1663_p2 = (tmp_124_fu_1583_p2 ^ 1'd1);

assign sh_amt_cast_fu_1575_p1 = sh_amt_fu_1570_p3;

assign sh_amt_fu_1570_p3 = ((tmp_116_reg_2396[0:0] === 1'b1) ? tmp_117_reg_2403 : tmp_122_reg_2408);

assign this_assign_fu_1619_p3 = ((isneg_reg_2379[0:0] === 1'b1) ? 32'd4294967295 : 32'd0);

assign tmp24_cast_cast_fu_1427_p3 = ((tmp_85_fu_1419_p2[0:0] === 1'b1) ? 8'd112 : 8'd111);

assign tmp32_V_4_fu_1332_p2 = p_Val2_38_reg_2318 << tmp_181_cast_fu_1328_p1;

assign tmp32_V_5_fu_1397_p3 = ((icmp_fu_1316_p2[0:0] === 1'b1) ? tmp32_V_4_fu_1332_p2 : tmp32_V_fu_1393_p1);

assign tmp32_V_8_fu_1405_p1 = grp_fu_587_p1;

assign tmp32_V_fu_1393_p1 = tmp_140_fu_1387_p2[31:0];

assign tmp_100_fu_691_p2 = (tmp_96_reg_2027 + tmp_69_cast_fu_687_p1);

assign tmp_101_fu_1065_p3 = {{i_0_i8_reg_488}, {5'd0}};

assign tmp_102_cast_fu_777_p1 = tmp_97_fu_772_p2;

assign tmp_102_fu_1077_p3 = {{i_0_i8_reg_488}, {3'd0}};

assign tmp_103_fu_1089_p2 = (p_shl6_cast_fu_1073_p1 - p_shl7_cast_fu_1085_p1);

assign tmp_104_fu_914_p2 = (tmp_99_reg_2086 + tmp_72_cast_fu_910_p1);

assign tmp_105_cast_fu_696_p1 = $signed(tmp_100_fu_691_p2);

assign tmp_105_fu_1149_p3 = {{i_0_i5_reg_510}, {5'd0}};

assign tmp_106_fu_1161_p3 = {{i_0_i5_reg_510}, {3'd0}};

assign tmp_107_fu_1173_p2 = (p_shl8_cast_fu_1157_p1 - p_shl9_cast_fu_1169_p1);

assign tmp_108_fu_1111_p2 = (tmp_103_reg_2239 + tmp_74_cast_fu_1107_p1);

assign tmp_109_cast_fu_919_p1 = tmp_104_fu_914_p2;

assign tmp_109_fu_1759_p2 = ($signed(tmp_75_cast_fu_1755_p1) + $signed(tmp_98_cast_reg_2062));

assign tmp_110_fu_1764_p1 = tmp_109_fu_1759_p2[7:0];

assign tmp_111_fu_1784_p2 = (p_shl12_cast_fu_1768_p3 - p_shl13_cast_fu_1776_p3);

assign tmp_112_fu_1790_p3 = {{i_0_i7_reg_532}, {5'd0}};

assign tmp_113_cast_fu_1116_p1 = $signed(tmp_108_fu_1111_p2);

assign tmp_113_fu_1802_p3 = {{i_0_i7_reg_532}, {3'd0}};

assign tmp_114_fu_1814_p2 = (p_shl10_cast_fu_1798_p1 - p_shl11_cast_fu_1810_p1);

assign tmp_115_fu_1195_p2 = (tmp_77_cast_fu_1191_p1 + tmp_107_reg_2288);

assign tmp_116_fu_1522_p2 = (($signed(F2_fu_1516_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign tmp_117_fu_1528_p2 = ($signed(12'd4080) + $signed(F2_fu_1516_p2));

assign tmp_118_fu_1286_p1 = msb_idx_fu_1281_p2[30:0];

assign tmp_119_fu_1290_p3 = msb_idx_fu_1281_p2[32'd31];

assign tmp_120_fu_1306_p4 = {{msb_idx_1_fu_1298_p3[30:5]}};

assign tmp_121_cast_fu_1200_p1 = $signed(tmp_115_fu_1195_p2);

assign tmp_121_fu_1337_p1 = msb_idx_1_fu_1298_p3[5:0];

assign tmp_122_fu_1534_p2 = (12'd16 - F2_fu_1516_p2);

assign tmp_123_fu_1540_p2 = ((F2_fu_1516_p2 == 12'd16) ? 1'b1 : 1'b0);

assign tmp_124_fu_1583_p2 = ((sh_amt_fu_1570_p3 < 12'd54) ? 1'b1 : 1'b0);

assign tmp_125_fu_1605_p1 = $unsigned(sh_amt_cast_fu_1575_p1);

assign tmp_126_fu_1341_p2 = ((msb_idx_1_fu_1298_p3 < 31'd31) ? 1'b1 : 1'b0);

assign tmp_127_fu_1609_p2 = $signed(man_V_2_fu_1563_p3) >>> tmp_125_fu_1605_p1;

assign tmp_128_fu_1347_p2 = ($signed(6'd33) + $signed(tmp_121_fu_1337_p1));

assign tmp_129_fu_1626_p2 = tmp_146_fu_1579_p1 << sh_amt_cast_fu_1575_p1;

integer ap_tvar_int_1;

always @ (p_Val2_40_cast_reg_2323) begin
    for (ap_tvar_int_1 = 33 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 32 - 0) begin
            tmp_131_fu_1353_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            tmp_131_fu_1353_p4[ap_tvar_int_1] = p_Val2_40_cast_reg_2323[32 - ap_tvar_int_1];
        end
    end
end

assign tmp_132_fu_1850_p2 = (tmp_111_reg_2428 + tmp_134_cast_fu_1846_p1);

assign tmp_133_fu_1836_p2 = (tmp_114_reg_2433 + tmp_134_cast1_fu_1832_p1);

assign tmp_134_cast1_fu_1832_p1 = ap_phi_mux_j_0_i7_phi_fu_547_p4;

assign tmp_134_cast_fu_1846_p1 = j_0_i7_reg_543;

assign tmp_134_fu_1362_p2 = (tmp_121_fu_1337_p1 ^ 6'd63);

assign tmp_135_cast_fu_1855_p1 = tmp_132_fu_1850_p2;

assign tmp_136_cast_fu_1841_p1 = $signed(tmp_133_fu_1836_p2);

assign tmp_137_fu_1368_p3 = ((tmp_126_fu_1341_p2[0:0] === 1'b1) ? tmp_131_fu_1353_p4 : p_Val2_40_cast_reg_2323);

assign tmp_138_fu_1375_p3 = ((tmp_126_fu_1341_p2[0:0] === 1'b1) ? tmp_134_fu_1362_p2 : tmp_128_fu_1347_p2);

assign tmp_139_fu_1383_p1 = tmp_138_fu_1375_p3;

assign tmp_140_fu_1387_p2 = tmp_137_fu_1368_p3 >> tmp_139_fu_1383_p1;

assign tmp_142_fu_1424_p1 = msb_idx_reg_2334_pp3_iter4_reg[7:0];

assign tmp_143_fu_1480_p1 = ireg_V_fu_1476_p1[62:0];

assign tmp_145_fu_1506_p1 = ireg_V_fu_1476_p1[51:0];

assign tmp_146_fu_1579_p1 = man_V_2_fu_1563_p3[31:0];

assign tmp_147_fu_1589_p4 = {{sh_amt_fu_1570_p3[11:5]}};

assign tmp_148_fu_1615_p1 = tmp_127_fu_1609_p2[31:0];

assign tmp_176_cast_fu_1233_p2 = (32'd0 - p_Val2_38_cast_fu_1214_p2);

assign tmp_181_cast_fu_1328_p1 = tmp_83_fu_1322_p2;

assign tmp_66_cast_fu_768_p1 = i_0_i6_reg_464;

assign tmp_67_fu_1133_p0 = convlayer1_b_V_q0;

assign tmp_67_fu_1133_p1 = tmp_67_fu_1133_p0;

assign tmp_68_fu_1465_p1 = p_Result_12_op_fu_1459_p2;

assign tmp_69_cast_fu_687_p1 = j_0_i_reg_453;

assign tmp_70_fu_1129_p0 = convlayer1_b_V_q0;

assign tmp_70_fu_1129_p1 = tmp_70_fu_1129_p0;

assign tmp_72_cast_fu_910_p1 = ap_phi_mux_j_0_i6_phi_fu_480_p4;

assign tmp_74_cast_fu_1107_p1 = j_0_i8_reg_499;

assign tmp_75_cast_fu_1755_p1 = i_0_i7_reg_532;

assign tmp_77_cast_fu_1191_p1 = j_0_i5_reg_521;

assign tmp_77_fu_705_p3 = {{i_reg_430}, {2'd0}};

assign tmp_78_fu_1205_p0 = p_output_val_V_q1;

assign tmp_78_fu_1205_p1 = tmp_78_fu_1205_p0;

assign tmp_79_fu_1219_p2 = ((p_Val2_34_fu_1209_p2 == 33'd0) ? 1'b1 : 1'b0);


always @ (p_Result_2_fu_1261_p3) begin
    if (p_Result_2_fu_1261_p3[0] == 1'b1) begin
        tmp_80_fu_1269_p3 = 64'd0;
    end else if (p_Result_2_fu_1261_p3[1] == 1'b1) begin
        tmp_80_fu_1269_p3 = 64'd1;
    end else if (p_Result_2_fu_1261_p3[2] == 1'b1) begin
        tmp_80_fu_1269_p3 = 64'd2;
    end else if (p_Result_2_fu_1261_p3[3] == 1'b1) begin
        tmp_80_fu_1269_p3 = 64'd3;
    end else if (p_Result_2_fu_1261_p3[4] == 1'b1) begin
        tmp_80_fu_1269_p3 = 64'd4;
    end else if (p_Result_2_fu_1261_p3[5] == 1'b1) begin
        tmp_80_fu_1269_p3 = 64'd5;
    end else if (p_Result_2_fu_1261_p3[6] == 1'b1) begin
        tmp_80_fu_1269_p3 = 64'd6;
    end else if (p_Result_2_fu_1261_p3[7] == 1'b1) begin
        tmp_80_fu_1269_p3 = 64'd7;
    end else if (p_Result_2_fu_1261_p3[8] == 1'b1) begin
        tmp_80_fu_1269_p3 = 64'd8;
    end else if (p_Result_2_fu_1261_p3[9] == 1'b1) begin
        tmp_80_fu_1269_p3 = 64'd9;
    end else if (p_Result_2_fu_1261_p3[10] == 1'b1) begin
        tmp_80_fu_1269_p3 = 64'd10;
    end else if (p_Result_2_fu_1261_p3[11] == 1'b1) begin
        tmp_80_fu_1269_p3 = 64'd11;
    end else if (p_Result_2_fu_1261_p3[12] == 1'b1) begin
        tmp_80_fu_1269_p3 = 64'd12;
    end else if (p_Result_2_fu_1261_p3[13] == 1'b1) begin
        tmp_80_fu_1269_p3 = 64'd13;
    end else if (p_Result_2_fu_1261_p3[14] == 1'b1) begin
        tmp_80_fu_1269_p3 = 64'd14;
    end else if (p_Result_2_fu_1261_p3[15] == 1'b1) begin
        tmp_80_fu_1269_p3 = 64'd15;
    end else if (p_Result_2_fu_1261_p3[16] == 1'b1) begin
        tmp_80_fu_1269_p3 = 64'd16;
    end else if (p_Result_2_fu_1261_p3[17] == 1'b1) begin
        tmp_80_fu_1269_p3 = 64'd17;
    end else if (p_Result_2_fu_1261_p3[18] == 1'b1) begin
        tmp_80_fu_1269_p3 = 64'd18;
    end else if (p_Result_2_fu_1261_p3[19] == 1'b1) begin
        tmp_80_fu_1269_p3 = 64'd19;
    end else if (p_Result_2_fu_1261_p3[20] == 1'b1) begin
        tmp_80_fu_1269_p3 = 64'd20;
    end else if (p_Result_2_fu_1261_p3[21] == 1'b1) begin
        tmp_80_fu_1269_p3 = 64'd21;
    end else if (p_Result_2_fu_1261_p3[22] == 1'b1) begin
        tmp_80_fu_1269_p3 = 64'd22;
    end else if (p_Result_2_fu_1261_p3[23] == 1'b1) begin
        tmp_80_fu_1269_p3 = 64'd23;
    end else if (p_Result_2_fu_1261_p3[24] == 1'b1) begin
        tmp_80_fu_1269_p3 = 64'd24;
    end else if (p_Result_2_fu_1261_p3[25] == 1'b1) begin
        tmp_80_fu_1269_p3 = 64'd25;
    end else if (p_Result_2_fu_1261_p3[26] == 1'b1) begin
        tmp_80_fu_1269_p3 = 64'd26;
    end else if (p_Result_2_fu_1261_p3[27] == 1'b1) begin
        tmp_80_fu_1269_p3 = 64'd27;
    end else if (p_Result_2_fu_1261_p3[28] == 1'b1) begin
        tmp_80_fu_1269_p3 = 64'd28;
    end else if (p_Result_2_fu_1261_p3[29] == 1'b1) begin
        tmp_80_fu_1269_p3 = 64'd29;
    end else if (p_Result_2_fu_1261_p3[30] == 1'b1) begin
        tmp_80_fu_1269_p3 = 64'd30;
    end else if (p_Result_2_fu_1261_p3[31] == 1'b1) begin
        tmp_80_fu_1269_p3 = 64'd31;
    end else if (p_Result_2_fu_1261_p3[32] == 1'b1) begin
        tmp_80_fu_1269_p3 = 64'd32;
    end else if (p_Result_2_fu_1261_p3[33] == 1'b1) begin
        tmp_80_fu_1269_p3 = 64'd33;
    end else if (p_Result_2_fu_1261_p3[34] == 1'b1) begin
        tmp_80_fu_1269_p3 = 64'd34;
    end else if (p_Result_2_fu_1261_p3[35] == 1'b1) begin
        tmp_80_fu_1269_p3 = 64'd35;
    end else if (p_Result_2_fu_1261_p3[36] == 1'b1) begin
        tmp_80_fu_1269_p3 = 64'd36;
    end else if (p_Result_2_fu_1261_p3[37] == 1'b1) begin
        tmp_80_fu_1269_p3 = 64'd37;
    end else if (p_Result_2_fu_1261_p3[38] == 1'b1) begin
        tmp_80_fu_1269_p3 = 64'd38;
    end else if (p_Result_2_fu_1261_p3[39] == 1'b1) begin
        tmp_80_fu_1269_p3 = 64'd39;
    end else if (p_Result_2_fu_1261_p3[40] == 1'b1) begin
        tmp_80_fu_1269_p3 = 64'd40;
    end else if (p_Result_2_fu_1261_p3[41] == 1'b1) begin
        tmp_80_fu_1269_p3 = 64'd41;
    end else if (p_Result_2_fu_1261_p3[42] == 1'b1) begin
        tmp_80_fu_1269_p3 = 64'd42;
    end else if (p_Result_2_fu_1261_p3[43] == 1'b1) begin
        tmp_80_fu_1269_p3 = 64'd43;
    end else if (p_Result_2_fu_1261_p3[44] == 1'b1) begin
        tmp_80_fu_1269_p3 = 64'd44;
    end else if (p_Result_2_fu_1261_p3[45] == 1'b1) begin
        tmp_80_fu_1269_p3 = 64'd45;
    end else if (p_Result_2_fu_1261_p3[46] == 1'b1) begin
        tmp_80_fu_1269_p3 = 64'd46;
    end else if (p_Result_2_fu_1261_p3[47] == 1'b1) begin
        tmp_80_fu_1269_p3 = 64'd47;
    end else if (p_Result_2_fu_1261_p3[48] == 1'b1) begin
        tmp_80_fu_1269_p3 = 64'd48;
    end else if (p_Result_2_fu_1261_p3[49] == 1'b1) begin
        tmp_80_fu_1269_p3 = 64'd49;
    end else if (p_Result_2_fu_1261_p3[50] == 1'b1) begin
        tmp_80_fu_1269_p3 = 64'd50;
    end else if (p_Result_2_fu_1261_p3[51] == 1'b1) begin
        tmp_80_fu_1269_p3 = 64'd51;
    end else if (p_Result_2_fu_1261_p3[52] == 1'b1) begin
        tmp_80_fu_1269_p3 = 64'd52;
    end else if (p_Result_2_fu_1261_p3[53] == 1'b1) begin
        tmp_80_fu_1269_p3 = 64'd53;
    end else if (p_Result_2_fu_1261_p3[54] == 1'b1) begin
        tmp_80_fu_1269_p3 = 64'd54;
    end else if (p_Result_2_fu_1261_p3[55] == 1'b1) begin
        tmp_80_fu_1269_p3 = 64'd55;
    end else if (p_Result_2_fu_1261_p3[56] == 1'b1) begin
        tmp_80_fu_1269_p3 = 64'd56;
    end else if (p_Result_2_fu_1261_p3[57] == 1'b1) begin
        tmp_80_fu_1269_p3 = 64'd57;
    end else if (p_Result_2_fu_1261_p3[58] == 1'b1) begin
        tmp_80_fu_1269_p3 = 64'd58;
    end else if (p_Result_2_fu_1261_p3[59] == 1'b1) begin
        tmp_80_fu_1269_p3 = 64'd59;
    end else if (p_Result_2_fu_1261_p3[60] == 1'b1) begin
        tmp_80_fu_1269_p3 = 64'd60;
    end else if (p_Result_2_fu_1261_p3[61] == 1'b1) begin
        tmp_80_fu_1269_p3 = 64'd61;
    end else if (p_Result_2_fu_1261_p3[62] == 1'b1) begin
        tmp_80_fu_1269_p3 = 64'd62;
    end else if (p_Result_2_fu_1261_p3[63] == 1'b1) begin
        tmp_80_fu_1269_p3 = 64'd63;
    end else begin
        tmp_80_fu_1269_p3 = 64'd64;
    end
end

assign tmp_81_fu_717_p2 = (tmp_cast_fu_701_p1 + p_shl4_cast_fu_713_p1);

assign tmp_82_fu_723_p3 = {{i_reg_430}, {5'd0}};

assign tmp_83_fu_1322_p2 = (31'd31 - msb_idx_1_fu_1298_p3);

assign tmp_84_fu_735_p3 = {{i_reg_430}, {3'd0}};

assign tmp_85_fu_1419_p2 = ((p_Result_s_197_reg_2349 != 8'd158) ? 1'b1 : 1'b0);

assign tmp_86_fu_747_p2 = (p_shl2_cast_fu_731_p1 - p_shl3_cast_fu_743_p1);

assign tmp_87_fu_1441_p3 = {{is_neg_reg_2313_pp3_iter4_reg}, {p_Repl2_3_trunc_fu_1435_p2}};

assign tmp_91_fu_1502_p1 = exp_tmp_V_fu_1492_p4;

assign tmp_92_fu_1546_p3 = {{1'd1}, {tmp_145_reg_2385}};

assign tmp_93_fu_1510_p2 = ((tmp_143_fu_1480_p1 == 63'd0) ? 1'b1 : 1'b0);

assign tmp_94_fu_639_p3 = {{i_0_i_reg_442}, {5'd0}};

assign tmp_95_fu_651_p3 = {{i_0_i_reg_442}, {3'd0}};

assign tmp_96_fu_663_p2 = (p_shl_cast_fu_647_p1 - p_shl1_cast_fu_659_p1);

assign tmp_97_fu_772_p2 = (tmp_66_cast_fu_768_p1 + tmp_81_reg_2057);

assign tmp_98_cast_fu_753_p1 = $signed(tmp_86_fu_747_p2);

assign tmp_98_fu_781_p3 = {{tmp_97_fu_772_p2}, {2'd0}};

assign tmp_99_fu_793_p2 = (p_shl5_cast_fu_789_p1 + tmp_102_cast_fu_777_p1);

assign tmp_cast_fu_701_p1 = i_reg_430;

assign tmp_s_fu_669_p1 = i_reg_430;

assign x_assign_fu_1469_p3 = ((tmp_79_reg_2308_pp3_iter4_reg[0:0] === 1'b1) ? 32'd2147483648 : tmp_68_fu_1465_p1);

always @ (posedge ap_clk) begin
    tmp_96_reg_2027[2:0] <= 3'b000;
    tmp_s_reg_2032[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    tmp_98_cast_reg_2062[2:0] <= 3'b000;
    tmp_103_reg_2239[2:0] <= 3'b000;
    tmp_107_reg_2288[2:0] <= 3'b000;
    p_Val2_40_cast_reg_2323[32] <= 1'b0;
    tmp_111_reg_2428[2:0] <= 3'b000;
    tmp_114_reg_2433[2:0] <= 3'b000;
end

endmodule //ConvLayer_1
