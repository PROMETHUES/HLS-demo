-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Resize_opr_linear is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_src_rows_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
    p_src_cols_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
    p_src_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_data_stream_V_empty_n : IN STD_LOGIC;
    p_src_data_stream_V_read : OUT STD_LOGIC;
    p_dst_rows_V_read : IN STD_LOGIC_VECTOR (5 downto 0);
    p_dst_cols_V_read : IN STD_LOGIC_VECTOR (5 downto 0);
    p_dst_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_dst_data_stream_V_full_n : IN STD_LOGIC;
    p_dst_data_stream_V_write : OUT STD_LOGIC );
end;


architecture behav of Resize_opr_linear is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (54 downto 0) := "0000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (54 downto 0) := "0000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (54 downto 0) := "0000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (54 downto 0) := "0000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (54 downto 0) := "0000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (54 downto 0) := "0000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (54 downto 0) := "0001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (54 downto 0) := "0010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (54 downto 0) := "0100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state94 : STD_LOGIC_VECTOR (54 downto 0) := "1000000000000000000000000000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv16_FFF6 : STD_LOGIC_VECTOR (15 downto 0) := "1111111111110110";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv33_1FFFF8000 : STD_LOGIC_VECTOR (32 downto 0) := "111111111111111111000000000000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv17_1FFFF : STD_LOGIC_VECTOR (16 downto 0) := "11111111111111111";
    constant ap_const_lv16_FFFF : STD_LOGIC_VECTOR (15 downto 0) := "1111111111111111";
    constant ap_const_lv32_10000 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000010000000000000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv15_1 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv33_0 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv20_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    constant ap_const_lv20_40000 : STD_LOGIC_VECTOR (19 downto 0) := "01000000000000000000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_src_data_stream_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter36 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal tmp_29_reg_1953 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_reg_1953_pp0_iter35_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal col_rd_2_reg_2033 : STD_LOGIC_VECTOR (0 downto 0);
    signal row_rd_5_reg_2029 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_51_reg_2058 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_52_reg_2062 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_dst_data_stream_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter39 : STD_LOGIC := '0';
    signal brmerge_demorgan_reg_2070 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_demorgan_reg_2070_pp0_iter38_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_16_reg_298 : STD_LOGIC_VECTOR (14 downto 0);
    signal srows_fu_352_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal srows_reg_1813 : STD_LOGIC_VECTOR (15 downto 0);
    signal scols_fu_356_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal scols_reg_1821 : STD_LOGIC_VECTOR (15 downto 0);
    signal row_rate_V_fu_452_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal row_rate_V_reg_1849 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state52 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state52 : signal is "none";
    signal col_rate_V_fu_459_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal col_rate_V_reg_1855 : STD_LOGIC_VECTOR (31 downto 0);
    signal rows_fu_666_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal rows_reg_1861 : STD_LOGIC_VECTOR (15 downto 0);
    signal cols_fu_688_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal cols_reg_1866 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_19_fu_695_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_19_reg_1871 : STD_LOGIC_VECTOR (16 downto 0);
    signal sx_fu_701_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sx_reg_1878 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_20_fu_706_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_20_reg_1883 : STD_LOGIC_VECTOR (16 downto 0);
    signal sy_fu_712_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sy_reg_1889 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_21_fu_717_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_reg_1894 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_fu_723_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_1899 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_57_cast_fu_737_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_57_cast_reg_1906 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_59_cast_fu_749_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_59_cast_reg_1911 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_25_fu_757_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state53 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state53 : signal is "none";
    signal i_fu_762_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal i_reg_1920 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_26_fu_768_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_26_reg_1925 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_27_fu_774_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_27_reg_1931 : STD_LOGIC_VECTOR (0 downto 0);
    signal row_wr_2_fu_780_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal row_wr_2_reg_1937 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_cast_fu_794_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_47_cast_reg_1942 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_op_assign_cast_fu_798_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_op_assign_cast_reg_1947 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state54_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state55_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state56_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state57_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state58_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state59_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state60_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state61_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state62_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state63_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state64_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state65_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state66_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state67_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state68_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state69_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_state70_pp0_stage0_iter16 : BOOLEAN;
    signal ap_block_state71_pp0_stage0_iter17 : BOOLEAN;
    signal ap_block_state72_pp0_stage0_iter18 : BOOLEAN;
    signal ap_block_state73_pp0_stage0_iter19 : BOOLEAN;
    signal ap_block_state74_pp0_stage0_iter20 : BOOLEAN;
    signal ap_block_state75_pp0_stage0_iter21 : BOOLEAN;
    signal ap_block_state76_pp0_stage0_iter22 : BOOLEAN;
    signal ap_block_state77_pp0_stage0_iter23 : BOOLEAN;
    signal ap_block_state78_pp0_stage0_iter24 : BOOLEAN;
    signal ap_block_state79_pp0_stage0_iter25 : BOOLEAN;
    signal ap_block_state80_pp0_stage0_iter26 : BOOLEAN;
    signal ap_block_state81_pp0_stage0_iter27 : BOOLEAN;
    signal ap_block_state82_pp0_stage0_iter28 : BOOLEAN;
    signal ap_block_state83_pp0_stage0_iter29 : BOOLEAN;
    signal ap_block_state84_pp0_stage0_iter30 : BOOLEAN;
    signal ap_block_state85_pp0_stage0_iter31 : BOOLEAN;
    signal ap_block_state86_pp0_stage0_iter32 : BOOLEAN;
    signal ap_block_state87_pp0_stage0_iter33 : BOOLEAN;
    signal ap_block_state88_pp0_stage0_iter34 : BOOLEAN;
    signal ap_block_state89_pp0_stage0_iter35 : BOOLEAN;
    signal ap_predicate_op503_read_state90 : BOOLEAN;
    signal ap_block_state90_pp0_stage0_iter36 : BOOLEAN;
    signal ap_block_state91_pp0_stage0_iter37 : BOOLEAN;
    signal ap_block_state92_pp0_stage0_iter38 : BOOLEAN;
    signal ap_block_state93_pp0_stage0_iter39 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal i_op_assign_cast_reg_1947_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal i_op_assign_cast_reg_1947_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal i_op_assign_cast_reg_1947_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal i_op_assign_cast_reg_1947_pp0_iter4_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal i_op_assign_cast_reg_1947_pp0_iter5_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal i_op_assign_cast_reg_1947_pp0_iter6_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal i_op_assign_cast_reg_1947_pp0_iter7_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal i_op_assign_cast_reg_1947_pp0_iter8_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal i_op_assign_cast_reg_1947_pp0_iter9_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal i_op_assign_cast_reg_1947_pp0_iter10_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal i_op_assign_cast_reg_1947_pp0_iter11_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal i_op_assign_cast_reg_1947_pp0_iter12_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal i_op_assign_cast_reg_1947_pp0_iter13_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal i_op_assign_cast_reg_1947_pp0_iter14_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal i_op_assign_cast_reg_1947_pp0_iter15_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal i_op_assign_cast_reg_1947_pp0_iter16_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal i_op_assign_cast_reg_1947_pp0_iter17_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal i_op_assign_cast_reg_1947_pp0_iter18_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal i_op_assign_cast_reg_1947_pp0_iter19_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal i_op_assign_cast_reg_1947_pp0_iter20_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal i_op_assign_cast_reg_1947_pp0_iter21_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal i_op_assign_cast_reg_1947_pp0_iter22_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal i_op_assign_cast_reg_1947_pp0_iter23_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal i_op_assign_cast_reg_1947_pp0_iter24_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal i_op_assign_cast_reg_1947_pp0_iter25_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal i_op_assign_cast_reg_1947_pp0_iter26_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal i_op_assign_cast_reg_1947_pp0_iter27_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal i_op_assign_cast_reg_1947_pp0_iter28_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal i_op_assign_cast_reg_1947_pp0_iter29_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal i_op_assign_cast_reg_1947_pp0_iter30_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal i_op_assign_cast_reg_1947_pp0_iter31_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal i_op_assign_cast_reg_1947_pp0_iter32_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal i_op_assign_cast_reg_1947_pp0_iter33_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal i_op_assign_cast_reg_1947_pp0_iter34_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_29_fu_802_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_reg_1953_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_reg_1953_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_reg_1953_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_reg_1953_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_reg_1953_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_reg_1953_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_reg_1953_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_reg_1953_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_reg_1953_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_reg_1953_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_reg_1953_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_reg_1953_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_reg_1953_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_reg_1953_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_reg_1953_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_reg_1953_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_reg_1953_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_reg_1953_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_reg_1953_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_reg_1953_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_reg_1953_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_reg_1953_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_reg_1953_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_reg_1953_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_reg_1953_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_reg_1953_pp0_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_reg_1953_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_reg_1953_pp0_iter28_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_reg_1953_pp0_iter29_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_reg_1953_pp0_iter30_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_reg_1953_pp0_iter31_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_reg_1953_pp0_iter32_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_reg_1953_pp0_iter33_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_reg_1953_pp0_iter34_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_reg_1953_pp0_iter36_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal j_fu_807_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal tmp_48_fu_834_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_reg_1967 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_reg_1967_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_reg_1967_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_reg_1967_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_reg_1967_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_reg_1967_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_reg_1967_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_reg_1967_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_reg_1967_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_reg_1967_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_reg_1967_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_reg_1967_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_reg_1967_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_reg_1967_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_reg_1967_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_reg_1967_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_reg_1967_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_reg_1967_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_reg_1967_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_reg_1967_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_reg_1967_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_reg_1967_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_reg_1967_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_reg_1967_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_reg_1967_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_reg_1967_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_reg_1967_pp0_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_reg_1967_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_reg_1967_pp0_iter28_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_reg_1967_pp0_iter29_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_reg_1967_pp0_iter30_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_reg_1967_pp0_iter31_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_reg_1967_pp0_iter32_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_reg_1967_pp0_iter33_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_reg_1967_pp0_iter34_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal col_wr_1_fu_840_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal col_wr_1_reg_1979 : STD_LOGIC_VECTOR (0 downto 0);
    signal col_wr_1_reg_1979_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal col_wr_1_reg_1979_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal col_wr_1_reg_1979_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal col_wr_1_reg_1979_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal col_wr_1_reg_1979_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal col_wr_1_reg_1979_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal col_wr_1_reg_1979_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal col_wr_1_reg_1979_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal col_wr_1_reg_1979_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal col_wr_1_reg_1979_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal col_wr_1_reg_1979_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal col_wr_1_reg_1979_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal col_wr_1_reg_1979_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal col_wr_1_reg_1979_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal col_wr_1_reg_1979_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal col_wr_1_reg_1979_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal col_wr_1_reg_1979_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal col_wr_1_reg_1979_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal col_wr_1_reg_1979_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal col_wr_1_reg_1979_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal col_wr_1_reg_1979_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal col_wr_1_reg_1979_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal col_wr_1_reg_1979_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal col_wr_1_reg_1979_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal col_wr_1_reg_1979_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal col_wr_1_reg_1979_pp0_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal col_wr_1_reg_1979_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal col_wr_1_reg_1979_pp0_iter28_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal col_wr_1_reg_1979_pp0_iter29_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal col_wr_1_reg_1979_pp0_iter30_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal col_wr_1_reg_1979_pp0_iter31_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal col_wr_1_reg_1979_pp0_iter32_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal col_wr_1_reg_1979_pp0_iter33_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal col_wr_1_reg_1979_pp0_iter34_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_35_fu_846_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_s_fu_865_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_s_reg_1989 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_1_fu_874_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_1_reg_1994 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_40_fu_1024_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_40_reg_1999 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_40_reg_1999_pp0_iter36_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_70_fu_1030_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_70_reg_2004 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_70_reg_2004_pp0_iter36_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_44_fu_1056_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_44_reg_2009 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_44_reg_2009_pp0_iter36_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_71_fu_1062_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_71_reg_2014 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_71_reg_2014_pp0_iter36_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_46_fu_1070_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_46_reg_2019 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_46_reg_2019_pp0_iter36_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_fu_1086_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_reg_2024 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_reg_2024_pp0_iter36_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal row_rd_5_fu_1160_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal col_rd_2_fu_1217_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_50_fu_1233_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_50_reg_2037 : STD_LOGIC_VECTOR (63 downto 0);
    signal k_buf_val_val_0_0_ad_gep_fu_263_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal k_buf_val_val_0_0_ad_reg_2052 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_51_fu_1244_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_52_fu_1253_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_53_fu_1262_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_53_reg_2066 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_demorgan_fu_1278_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_demorgan_reg_2070_pp0_iter36_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_demorgan_reg_2070_pp0_iter37_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal v1_V_fu_1373_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal v1_V_reg_2074 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_u_V_fu_1379_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_u_V_reg_2079 : STD_LOGIC_VECTOR (19 downto 0);
    signal v_V_fu_1386_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal v_V_reg_2084 : STD_LOGIC_VECTOR (19 downto 0);
    signal r_V_fu_1708_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal r_V_reg_2089 : STD_LOGIC_VECTOR (27 downto 0);
    signal r_V_1_fu_1714_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal r_V_1_reg_2094 : STD_LOGIC_VECTOR (27 downto 0);
    signal r_V_2_fu_1720_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal r_V_2_reg_2099 : STD_LOGIC_VECTOR (27 downto 0);
    signal r_V_3_fu_1726_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal r_V_3_reg_2105 : STD_LOGIC_VECTOR (27 downto 0);
    signal p_Val2_27_fu_1457_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_27_reg_2111 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_28_fu_1472_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_28_reg_2117 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_29_fu_1484_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_29_reg_2122 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp20_fu_1500_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp20_reg_2127 : STD_LOGIC_VECTOR (47 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter19 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter20 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter21 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter22 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter23 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter24 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter25 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter26 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter27 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter28 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter29 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter30 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter31 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter32 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter33 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter34 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter35 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter37 : STD_LOGIC := '0';
    signal ap_condition_pp0_exit_iter36_state90 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter38 : STD_LOGIC := '0';
    signal k_buf_val_val_0_0_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal k_buf_val_val_0_0_ce0 : STD_LOGIC;
    signal k_buf_val_val_0_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_val_val_0_0_ce1 : STD_LOGIC;
    signal k_buf_val_val_0_0_we1 : STD_LOGIC;
    signal k_buf_val_val_0_0_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_val_val_1_0_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal k_buf_val_val_1_0_ce0 : STD_LOGIC;
    signal k_buf_val_val_1_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_val_val_1_0_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal k_buf_val_val_1_0_ce1 : STD_LOGIC;
    signal k_buf_val_val_1_0_we1 : STD_LOGIC;
    signal p_Val2_15_reg_287 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_state94 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state94 : signal is "none";
    signal ap_phi_mux_dy_phi_fu_312_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_64_fu_851_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter34_dy_reg_309 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter0_dy_reg_309 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_dy_reg_309 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter2_dy_reg_309 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter3_dy_reg_309 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter4_dy_reg_309 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter5_dy_reg_309 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter6_dy_reg_309 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter7_dy_reg_309 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter8_dy_reg_309 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter9_dy_reg_309 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter10_dy_reg_309 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter11_dy_reg_309 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter12_dy_reg_309 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter13_dy_reg_309 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter14_dy_reg_309 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter15_dy_reg_309 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter16_dy_reg_309 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter17_dy_reg_309 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter18_dy_reg_309 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter19_dy_reg_309 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter20_dy_reg_309 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter21_dy_reg_309 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter22_dy_reg_309 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter23_dy_reg_309 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter24_dy_reg_309 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter25_dy_reg_309 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter26_dy_reg_309 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter27_dy_reg_309 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter28_dy_reg_309 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter29_dy_reg_309 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter30_dy_reg_309 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter31_dy_reg_309 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter32_dy_reg_309 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter33_dy_reg_309 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_dx_phi_fu_321_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_65_fu_856_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter34_dx_reg_318 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter0_dx_reg_318 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_dx_reg_318 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter2_dx_reg_318 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter3_dx_reg_318 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter4_dx_reg_318 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter5_dx_reg_318 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter6_dx_reg_318 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter7_dx_reg_318 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter8_dx_reg_318 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter9_dx_reg_318 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter10_dx_reg_318 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter11_dx_reg_318 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter12_dx_reg_318 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter13_dx_reg_318 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter14_dx_reg_318 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter15_dx_reg_318 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter16_dx_reg_318 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter17_dx_reg_318 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter18_dx_reg_318 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter19_dx_reg_318 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter20_dx_reg_318 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter21_dx_reg_318 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter22_dx_reg_318 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter23_dx_reg_318 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter24_dx_reg_318 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter25_dx_reg_318 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter26_dx_reg_318 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter27_dx_reg_318 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter28_dx_reg_318 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter29_dx_reg_318 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter30_dx_reg_318 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter31_dx_reg_318 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter32_dx_reg_318 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter33_dx_reg_318 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_win_val_val_1_0_0_2_phi_fu_330_p10 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter36_win_val_val_1_0_0_2_reg_327 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal row_wr_fu_154 : STD_LOGIC_VECTOR (0 downto 0);
    signal row_wr_3_fu_1174_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal row_rd_fu_158 : STD_LOGIC_VECTOR (0 downto 0);
    signal pre_fx_fu_162 : STD_LOGIC_VECTOR (15 downto 0);
    signal pre_fx_5_fu_1205_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal pre_fy_fu_166 : STD_LOGIC_VECTOR (15 downto 0);
    signal pre_fy_5_fu_1135_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal x_fu_170 : STD_LOGIC_VECTOR (15 downto 0);
    signal x_2_fu_1116_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal x_1_fu_1267_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal win_val_0_val_1_0_fu_174 : STD_LOGIC_VECTOR (7 downto 0);
    signal win_val_0_val_1_0_1_fu_178 : STD_LOGIC_VECTOR (7 downto 0);
    signal win_val_1_val_1_0_fu_182 : STD_LOGIC_VECTOR (7 downto 0);
    signal win_val_1_val_1_0_1_fu_186 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_fu_190 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_fu_360_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_2_fu_360_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_380_p0 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_9_fu_386_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_9_fu_386_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_406_p0 : STD_LOGIC_VECTOR (47 downto 0);
    signal dcols_fu_437_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal dcols_cast_fu_440_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal drows_fu_443_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal drows_cast_fu_446_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_380_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal grp_fu_406_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_neg_fu_471_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr_fu_477_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_7_fu_487_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr_f_fu_497_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_60_fu_463_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_neg_t_fu_491_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_fu_507_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_511_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_26_cast_fu_519_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal p_Val2_8_fu_523_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_61_fu_539_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_9_fu_529_p4 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_10_fu_547_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_neg1_fu_565_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr1_fu_571_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_16_fu_581_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr_f1_fu_591_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_62_fu_557_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_neg_t1_fu_585_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_32_fu_601_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_fu_605_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_30_cast_fu_613_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal p_Val2_12_fu_617_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_63_fu_633_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_13_fu_623_p4 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_12_fu_641_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal drows_fu_443_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal drows_cast_fu_446_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_15_fu_656_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_14_fu_651_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_cast_fu_662_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal dcols_fu_437_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal dcols_cast_fu_440_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_18_fu_678_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_17_fu_673_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_cast_fu_684_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_18_cast_fu_456_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_11_cast_fu_449_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_17_fu_551_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_23_fu_729_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal p_Val2_18_fu_645_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_24_fu_741_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal i_op_assign_15_cast_fu_753_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_28_fu_786_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_813_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_33_fu_817_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_829_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_813_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_829_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_s_fu_865_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_1_fu_874_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_2_fu_898_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_67_fu_920_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_fu_902_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_36_fu_924_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_1_fu_930_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_66_fu_912_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_6_fu_936_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_3_fu_894_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_69_fu_970_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_2_fu_952_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_37_fu_974_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_3_fu_980_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_68_fu_962_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_7_fu_986_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sx_2_fu_944_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_39_fu_1006_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_38_fu_1002_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_64_cast_fu_1014_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal r_V_6_fu_1018_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal sy_3_fu_994_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_43_fu_1038_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_42_fu_1034_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_70_cast_fu_1046_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal r_V_7_fu_1050_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_74_cast_fu_1066_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_76_cast_fu_1082_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sy_4_fu_1091_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sel_tmp5_fu_1123_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal pre_fy_1_sy_fu_1109_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sel_tmp6_fu_1127_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal not_1_fu_1103_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp17_fu_1149_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_fu_1155_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal row_wr_1_fu_1098_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal row_wr_4_fu_1167_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal pre_fx_1_fu_1075_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_49_fu_1181_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal pre_fx_2_fu_1142_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal pre_fx_2_sx_fu_1198_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal not_s_fu_1192_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp18_fu_1212_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal col_wr_fu_1186_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_84_cast_fu_1240_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_86_cast_fu_1249_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_88_cast_fu_1258_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal col_wr_2_fu_1222_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_fu_1339_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_45_fu_1353_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal u_V_fu_1346_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal v_V_2_fu_1360_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal u1_V_fu_1367_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Val2_21_fu_1439_p0 : STD_LOGIC_VECTOR (27 downto 0);
    signal p_Val2_21_fu_1439_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Val2_24_fu_1451_p0 : STD_LOGIC_VECTOR (27 downto 0);
    signal p_Val2_24_fu_1451_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_Val2_24_fu_1451_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_21_fu_1439_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_28_fu_1472_p0 : STD_LOGIC_VECTOR (27 downto 0);
    signal p_Val2_28_fu_1472_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal OP2_V_6_fu_1469_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_29_fu_1484_p0 : STD_LOGIC_VECTOR (27 downto 0);
    signal p_Val2_29_fu_1484_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal OP1_V_7_cast_fu_1466_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal OP1_V_9_cast_fu_1481_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal p_Val2_31_fu_1490_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp20_fu_1500_p0 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp20_fu_1500_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_63_cast_fu_1506_p1 : STD_LOGIC_VECTOR (48 downto 0);
    signal tmp_1268_cast_cast_fu_1512_p1 : STD_LOGIC_VECTOR (48 downto 0);
    signal tmp19_fu_1515_p2 : STD_LOGIC_VECTOR (48 downto 0);
    signal tmp29_cast_fu_1521_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal tmp_55_fu_1509_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal p_Val2_44_cast_fu_1531_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_30_fu_1525_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal tmp_74_fu_1553_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_32_fu_1543_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_3_i_i_fu_1561_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_33_fu_1573_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_76_fu_1579_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_75_fu_1565_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_i_i_fu_1587_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_6_i_i_fu_1599_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal carry_fu_1593_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_fu_1609_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_fu_1615_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_38_i_i_i_fu_1629_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal signbit_fu_1535_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_fu_1635_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_fu_1621_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal signbit_not_fu_1653_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_39_demorgan_i_i_i_fu_1647_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_src_not_i_i_fu_1659_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_39_demorgan_i_not_i_fu_1671_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_not_i_i_fu_1665_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_src_fu_1641_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_fu_1677_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_mux_i_i_fu_1683_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_i_i_fu_1691_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_fu_1708_p0 : STD_LOGIC_VECTOR (19 downto 0);
    signal OP2_V_fu_1405_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal r_V_fu_1708_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_1_fu_1714_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_2_fu_1720_p0 : STD_LOGIC_VECTOR (19 downto 0);
    signal r_V_2_fu_1720_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_3_fu_1726_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_380_ap_start : STD_LOGIC;
    signal grp_fu_380_ap_done : STD_LOGIC;
    signal grp_fu_406_ap_start : STD_LOGIC;
    signal grp_fu_406_ap_done : STD_LOGIC;
    signal grp_fu_813_ce : STD_LOGIC;
    signal grp_fu_829_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (54 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_829_p00 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_1_fu_1714_p10 : STD_LOGIC_VECTOR (27 downto 0);
    signal r_V_2_fu_1720_p10 : STD_LOGIC_VECTOR (27 downto 0);
    signal r_V_3_fu_1726_p10 : STD_LOGIC_VECTOR (27 downto 0);
    signal r_V_fu_1708_p10 : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_condition_333 : BOOLEAN;
    signal ap_condition_2488 : BOOLEAN;
    signal ap_condition_836 : BOOLEAN;

    component CNN_Core_sdiv_48ndEe IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        start : IN STD_LOGIC;
        done : OUT STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (47 downto 0);
        din1 : IN STD_LOGIC_VECTOR (21 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (47 downto 0) );
    end component;


    component CNN_Core_udiv_31neOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (30 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component CNN_Core_mul_mul_fYi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (19 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (27 downto 0) );
    end component;


    component Resize_opr_linearbkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    k_buf_val_val_0_0_U : component Resize_opr_linearbkb
    generic map (
        DataWidth => 8,
        AddressRange => 101,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_val_val_0_0_address0,
        ce0 => k_buf_val_val_0_0_ce0,
        q0 => k_buf_val_val_0_0_q0,
        address1 => k_buf_val_val_0_0_ad_reg_2052,
        ce1 => k_buf_val_val_0_0_ce1,
        we1 => k_buf_val_val_0_0_we1,
        d1 => k_buf_val_val_0_0_d1);

    k_buf_val_val_1_0_U : component Resize_opr_linearbkb
    generic map (
        DataWidth => 8,
        AddressRange => 101,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_val_val_1_0_address0,
        ce0 => k_buf_val_val_1_0_ce0,
        q0 => k_buf_val_val_1_0_q0,
        address1 => k_buf_val_val_1_0_address1,
        ce1 => k_buf_val_val_1_0_ce1,
        we1 => k_buf_val_val_1_0_we1,
        d1 => k_buf_val_val_0_0_q0);

    CNN_Core_sdiv_48ndEe_U19 : component CNN_Core_sdiv_48ndEe
    generic map (
        ID => 1,
        NUM_STAGE => 52,
        din0_WIDTH => 48,
        din1_WIDTH => 22,
        dout_WIDTH => 48)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        start => grp_fu_380_ap_start,
        done => grp_fu_380_ap_done,
        din0 => grp_fu_380_p0,
        din1 => tmp_2_fu_360_p3,
        ce => ap_const_logic_1,
        dout => grp_fu_380_p2);

    CNN_Core_sdiv_48ndEe_U20 : component CNN_Core_sdiv_48ndEe
    generic map (
        ID => 1,
        NUM_STAGE => 52,
        din0_WIDTH => 48,
        din1_WIDTH => 22,
        dout_WIDTH => 48)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        start => grp_fu_406_ap_start,
        done => grp_fu_406_ap_done,
        din0 => grp_fu_406_p0,
        din1 => tmp_9_fu_386_p3,
        ce => ap_const_logic_1,
        dout => grp_fu_406_p2);

    CNN_Core_udiv_31neOg_U21 : component CNN_Core_udiv_31neOg
    generic map (
        ID => 1,
        NUM_STAGE => 35,
        din0_WIDTH => 31,
        din1_WIDTH => 32,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_813_p0,
        din1 => row_rate_V_reg_1849,
        ce => grp_fu_813_ce,
        dout => grp_fu_813_p2);

    CNN_Core_udiv_31neOg_U22 : component CNN_Core_udiv_31neOg
    generic map (
        ID => 1,
        NUM_STAGE => 35,
        din0_WIDTH => 31,
        din1_WIDTH => 32,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_829_p0,
        din1 => col_rate_V_reg_1855,
        ce => grp_fu_829_ce,
        dout => grp_fu_829_p2);

    CNN_Core_mul_mul_fYi_U23 : component CNN_Core_mul_mul_fYi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 20,
        din1_WIDTH => 8,
        dout_WIDTH => 28)
    port map (
        din0 => r_V_fu_1708_p0,
        din1 => r_V_fu_1708_p1,
        dout => r_V_fu_1708_p2);

    CNN_Core_mul_mul_fYi_U24 : component CNN_Core_mul_mul_fYi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 20,
        din1_WIDTH => 8,
        dout_WIDTH => 28)
    port map (
        din0 => v1_V_fu_1373_p2,
        din1 => r_V_1_fu_1714_p1,
        dout => r_V_1_fu_1714_p2);

    CNN_Core_mul_mul_fYi_U25 : component CNN_Core_mul_mul_fYi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 20,
        din1_WIDTH => 8,
        dout_WIDTH => 28)
    port map (
        din0 => r_V_2_fu_1720_p0,
        din1 => r_V_2_fu_1720_p1,
        dout => r_V_2_fu_1720_p2);

    CNN_Core_mul_mul_fYi_U26 : component CNN_Core_mul_mul_fYi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 20,
        din1_WIDTH => 8,
        dout_WIDTH => 28)
    port map (
        din0 => p_u_V_fu_1379_p3,
        din1 => r_V_3_fu_1726_p1,
        dout => r_V_3_fu_1726_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (tmp_29_fu_802_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((tmp_25_fu_757_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state53))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter19 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter20 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter21 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter22 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter23 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter24_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter24 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter25_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter25 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter26_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter26 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter27_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter27 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter28_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter28 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter29_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter29 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter30_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter30 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter31_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter31 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter32_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter32 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter33_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter33 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter34_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter34 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter35_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter35 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter36_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter36 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter37_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter37 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter36_state90)) then 
                        ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter35;
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter38_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter38 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter38 <= ap_enable_reg_pp0_iter37;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter39_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter39 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter39 <= ap_enable_reg_pp0_iter38;
                elsif (((tmp_25_fu_757_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state53))) then 
                    ap_enable_reg_pp0_iter39 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_dy_reg_309_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_333)) then
                if (((tmp_29_fu_802_p2 = ap_const_lv1_1) and (tmp_21_reg_1894 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_dy_reg_309 <= tmp_26_reg_1925;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_dy_reg_309 <= ap_phi_reg_pp0_iter0_dy_reg_309;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter34_dx_reg_318_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter33 = ap_const_logic_1))) then
                if (((tmp_29_reg_1953_pp0_iter32_reg = ap_const_lv1_1) and (tmp_22_reg_1899 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter34_dx_reg_318 <= tmp_35_fu_846_p2;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter34_dx_reg_318 <= ap_phi_reg_pp0_iter33_dx_reg_318;
                end if;
            end if; 
        end if;
    end process;

    p_Val2_15_reg_287_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state94)) then 
                p_Val2_15_reg_287 <= i_reg_1920;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
                p_Val2_15_reg_287 <= ap_const_lv15_0;
            end if; 
        end if;
    end process;

    p_Val2_16_reg_298_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_29_fu_802_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                p_Val2_16_reg_298 <= j_fu_807_p2;
            elsif (((tmp_25_fu_757_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state53))) then 
                p_Val2_16_reg_298 <= ap_const_lv15_0;
            end if; 
        end if;
    end process;

    pre_fx_fu_162_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_29_reg_1953_pp0_iter34_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter35 = ap_const_logic_1))) then 
                pre_fx_fu_162 <= pre_fx_5_fu_1205_p3;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                pre_fx_fu_162 <= ap_const_lv16_FFF6;
            end if; 
        end if;
    end process;

    pre_fy_fu_166_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_29_reg_1953_pp0_iter34_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter35 = ap_const_logic_1))) then 
                pre_fy_fu_166 <= pre_fy_5_fu_1135_p3;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                pre_fy_fu_166 <= ap_const_lv16_FFF6;
            end if; 
        end if;
    end process;

    row_rd_fu_158_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_29_reg_1953_pp0_iter34_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter35 = ap_const_logic_1))) then 
                row_rd_fu_158 <= row_rd_5_fu_1160_p3;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                row_rd_fu_158 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    row_wr_fu_154_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_29_reg_1953_pp0_iter34_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter35 = ap_const_logic_1))) then 
                row_wr_fu_154 <= row_wr_3_fu_1174_p3;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                row_wr_fu_154 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    win_val_0_val_1_0_fu_174_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_predicate_op503_read_state90 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
                win_val_0_val_1_0_fu_174 <= p_src_data_stream_V_dout;
            elsif ((((col_rd_2_reg_2033 = ap_const_lv1_1) and (tmp_29_reg_1953_pp0_iter35_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1) and (row_rd_5_reg_2029 = ap_const_lv1_0)) or ((col_rd_2_reg_2033 = ap_const_lv1_1) and (row_rd_5_reg_2029 = ap_const_lv1_1) and (tmp_29_reg_1953_pp0_iter35_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1) and (tmp_51_reg_2058 = ap_const_lv1_0)))) then 
                win_val_0_val_1_0_fu_174 <= k_buf_val_val_0_0_q0;
            end if; 
        end if;
    end process;

    x_fu_170_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((col_rd_2_fu_1217_p2 = ap_const_lv1_1) and (tmp_29_reg_1953_pp0_iter34_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter35 = ap_const_logic_1))) then 
                x_fu_170 <= x_1_fu_1267_p2;
            elsif (((tmp_29_reg_1953_pp0_iter34_reg = ap_const_lv1_1) and (col_rd_2_fu_1217_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter35 = ap_const_logic_1))) then 
                x_fu_170 <= x_2_fu_1116_p3;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                x_fu_170 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter10_dx_reg_318 <= ap_phi_reg_pp0_iter9_dx_reg_318;
                ap_phi_reg_pp0_iter10_dy_reg_309 <= ap_phi_reg_pp0_iter9_dy_reg_309;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter11_dx_reg_318 <= ap_phi_reg_pp0_iter10_dx_reg_318;
                ap_phi_reg_pp0_iter11_dy_reg_309 <= ap_phi_reg_pp0_iter10_dy_reg_309;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter12_dx_reg_318 <= ap_phi_reg_pp0_iter11_dx_reg_318;
                ap_phi_reg_pp0_iter12_dy_reg_309 <= ap_phi_reg_pp0_iter11_dy_reg_309;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter13_dx_reg_318 <= ap_phi_reg_pp0_iter12_dx_reg_318;
                ap_phi_reg_pp0_iter13_dy_reg_309 <= ap_phi_reg_pp0_iter12_dy_reg_309;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter14_dx_reg_318 <= ap_phi_reg_pp0_iter13_dx_reg_318;
                ap_phi_reg_pp0_iter14_dy_reg_309 <= ap_phi_reg_pp0_iter13_dy_reg_309;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter15_dx_reg_318 <= ap_phi_reg_pp0_iter14_dx_reg_318;
                ap_phi_reg_pp0_iter15_dy_reg_309 <= ap_phi_reg_pp0_iter14_dy_reg_309;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter15 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter16_dx_reg_318 <= ap_phi_reg_pp0_iter15_dx_reg_318;
                ap_phi_reg_pp0_iter16_dy_reg_309 <= ap_phi_reg_pp0_iter15_dy_reg_309;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter17_dx_reg_318 <= ap_phi_reg_pp0_iter16_dx_reg_318;
                ap_phi_reg_pp0_iter17_dy_reg_309 <= ap_phi_reg_pp0_iter16_dy_reg_309;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter17 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter18_dx_reg_318 <= ap_phi_reg_pp0_iter17_dx_reg_318;
                ap_phi_reg_pp0_iter18_dy_reg_309 <= ap_phi_reg_pp0_iter17_dy_reg_309;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter19_dx_reg_318 <= ap_phi_reg_pp0_iter18_dx_reg_318;
                ap_phi_reg_pp0_iter19_dy_reg_309 <= ap_phi_reg_pp0_iter18_dy_reg_309;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_phi_reg_pp0_iter1_dx_reg_318 <= ap_phi_reg_pp0_iter0_dx_reg_318;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter19 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter20_dx_reg_318 <= ap_phi_reg_pp0_iter19_dx_reg_318;
                ap_phi_reg_pp0_iter20_dy_reg_309 <= ap_phi_reg_pp0_iter19_dy_reg_309;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter20 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter21_dx_reg_318 <= ap_phi_reg_pp0_iter20_dx_reg_318;
                ap_phi_reg_pp0_iter21_dy_reg_309 <= ap_phi_reg_pp0_iter20_dy_reg_309;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter21 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter22_dx_reg_318 <= ap_phi_reg_pp0_iter21_dx_reg_318;
                ap_phi_reg_pp0_iter22_dy_reg_309 <= ap_phi_reg_pp0_iter21_dy_reg_309;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter22 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter23_dx_reg_318 <= ap_phi_reg_pp0_iter22_dx_reg_318;
                ap_phi_reg_pp0_iter23_dy_reg_309 <= ap_phi_reg_pp0_iter22_dy_reg_309;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter23 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter24_dx_reg_318 <= ap_phi_reg_pp0_iter23_dx_reg_318;
                ap_phi_reg_pp0_iter24_dy_reg_309 <= ap_phi_reg_pp0_iter23_dy_reg_309;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter24 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter25_dx_reg_318 <= ap_phi_reg_pp0_iter24_dx_reg_318;
                ap_phi_reg_pp0_iter25_dy_reg_309 <= ap_phi_reg_pp0_iter24_dy_reg_309;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter25 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter26_dx_reg_318 <= ap_phi_reg_pp0_iter25_dx_reg_318;
                ap_phi_reg_pp0_iter26_dy_reg_309 <= ap_phi_reg_pp0_iter25_dy_reg_309;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter26 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter27_dx_reg_318 <= ap_phi_reg_pp0_iter26_dx_reg_318;
                ap_phi_reg_pp0_iter27_dy_reg_309 <= ap_phi_reg_pp0_iter26_dy_reg_309;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter28_dx_reg_318 <= ap_phi_reg_pp0_iter27_dx_reg_318;
                ap_phi_reg_pp0_iter28_dy_reg_309 <= ap_phi_reg_pp0_iter27_dy_reg_309;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter28 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter29_dx_reg_318 <= ap_phi_reg_pp0_iter28_dx_reg_318;
                ap_phi_reg_pp0_iter29_dy_reg_309 <= ap_phi_reg_pp0_iter28_dy_reg_309;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_phi_reg_pp0_iter2_dx_reg_318 <= ap_phi_reg_pp0_iter1_dx_reg_318;
                ap_phi_reg_pp0_iter2_dy_reg_309 <= ap_phi_reg_pp0_iter1_dy_reg_309;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter29 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter30_dx_reg_318 <= ap_phi_reg_pp0_iter29_dx_reg_318;
                ap_phi_reg_pp0_iter30_dy_reg_309 <= ap_phi_reg_pp0_iter29_dy_reg_309;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter30 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter31_dx_reg_318 <= ap_phi_reg_pp0_iter30_dx_reg_318;
                ap_phi_reg_pp0_iter31_dy_reg_309 <= ap_phi_reg_pp0_iter30_dy_reg_309;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter31 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter32_dx_reg_318 <= ap_phi_reg_pp0_iter31_dx_reg_318;
                ap_phi_reg_pp0_iter32_dy_reg_309 <= ap_phi_reg_pp0_iter31_dy_reg_309;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter32 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter33_dx_reg_318 <= ap_phi_reg_pp0_iter32_dx_reg_318;
                ap_phi_reg_pp0_iter33_dy_reg_309 <= ap_phi_reg_pp0_iter32_dy_reg_309;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter33 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter34_dy_reg_309 <= ap_phi_reg_pp0_iter33_dy_reg_309;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter3_dx_reg_318 <= ap_phi_reg_pp0_iter2_dx_reg_318;
                ap_phi_reg_pp0_iter3_dy_reg_309 <= ap_phi_reg_pp0_iter2_dy_reg_309;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter4_dx_reg_318 <= ap_phi_reg_pp0_iter3_dx_reg_318;
                ap_phi_reg_pp0_iter4_dy_reg_309 <= ap_phi_reg_pp0_iter3_dy_reg_309;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter5_dx_reg_318 <= ap_phi_reg_pp0_iter4_dx_reg_318;
                ap_phi_reg_pp0_iter5_dy_reg_309 <= ap_phi_reg_pp0_iter4_dy_reg_309;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter6_dx_reg_318 <= ap_phi_reg_pp0_iter5_dx_reg_318;
                ap_phi_reg_pp0_iter6_dy_reg_309 <= ap_phi_reg_pp0_iter5_dy_reg_309;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter7_dx_reg_318 <= ap_phi_reg_pp0_iter6_dx_reg_318;
                ap_phi_reg_pp0_iter7_dy_reg_309 <= ap_phi_reg_pp0_iter6_dy_reg_309;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter8_dx_reg_318 <= ap_phi_reg_pp0_iter7_dx_reg_318;
                ap_phi_reg_pp0_iter8_dy_reg_309 <= ap_phi_reg_pp0_iter7_dy_reg_309;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter9_dx_reg_318 <= ap_phi_reg_pp0_iter8_dx_reg_318;
                ap_phi_reg_pp0_iter9_dy_reg_309 <= ap_phi_reg_pp0_iter8_dy_reg_309;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_29_reg_1953_pp0_iter34_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                brmerge_demorgan_reg_2070 <= brmerge_demorgan_fu_1278_p2;
                col_rd_2_reg_2033 <= col_rd_2_fu_1217_p2;
                row_rd_5_reg_2029 <= row_rd_5_fu_1160_p3;
                tmp_40_reg_1999 <= tmp_40_fu_1024_p2;
                tmp_44_reg_2009 <= tmp_44_fu_1056_p2;
                tmp_46_reg_2019 <= tmp_46_fu_1070_p2;
                tmp_47_reg_2024 <= tmp_47_fu_1086_p2;
                tmp_70_reg_2004 <= tmp_70_fu_1030_p1;
                tmp_71_reg_2014 <= tmp_71_fu_1062_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                brmerge_demorgan_reg_2070_pp0_iter36_reg <= brmerge_demorgan_reg_2070;
                brmerge_demorgan_reg_2070_pp0_iter37_reg <= brmerge_demorgan_reg_2070_pp0_iter36_reg;
                brmerge_demorgan_reg_2070_pp0_iter38_reg <= brmerge_demorgan_reg_2070_pp0_iter37_reg;
                col_wr_1_reg_1979_pp0_iter10_reg <= col_wr_1_reg_1979_pp0_iter9_reg;
                col_wr_1_reg_1979_pp0_iter11_reg <= col_wr_1_reg_1979_pp0_iter10_reg;
                col_wr_1_reg_1979_pp0_iter12_reg <= col_wr_1_reg_1979_pp0_iter11_reg;
                col_wr_1_reg_1979_pp0_iter13_reg <= col_wr_1_reg_1979_pp0_iter12_reg;
                col_wr_1_reg_1979_pp0_iter14_reg <= col_wr_1_reg_1979_pp0_iter13_reg;
                col_wr_1_reg_1979_pp0_iter15_reg <= col_wr_1_reg_1979_pp0_iter14_reg;
                col_wr_1_reg_1979_pp0_iter16_reg <= col_wr_1_reg_1979_pp0_iter15_reg;
                col_wr_1_reg_1979_pp0_iter17_reg <= col_wr_1_reg_1979_pp0_iter16_reg;
                col_wr_1_reg_1979_pp0_iter18_reg <= col_wr_1_reg_1979_pp0_iter17_reg;
                col_wr_1_reg_1979_pp0_iter19_reg <= col_wr_1_reg_1979_pp0_iter18_reg;
                col_wr_1_reg_1979_pp0_iter20_reg <= col_wr_1_reg_1979_pp0_iter19_reg;
                col_wr_1_reg_1979_pp0_iter21_reg <= col_wr_1_reg_1979_pp0_iter20_reg;
                col_wr_1_reg_1979_pp0_iter22_reg <= col_wr_1_reg_1979_pp0_iter21_reg;
                col_wr_1_reg_1979_pp0_iter23_reg <= col_wr_1_reg_1979_pp0_iter22_reg;
                col_wr_1_reg_1979_pp0_iter24_reg <= col_wr_1_reg_1979_pp0_iter23_reg;
                col_wr_1_reg_1979_pp0_iter25_reg <= col_wr_1_reg_1979_pp0_iter24_reg;
                col_wr_1_reg_1979_pp0_iter26_reg <= col_wr_1_reg_1979_pp0_iter25_reg;
                col_wr_1_reg_1979_pp0_iter27_reg <= col_wr_1_reg_1979_pp0_iter26_reg;
                col_wr_1_reg_1979_pp0_iter28_reg <= col_wr_1_reg_1979_pp0_iter27_reg;
                col_wr_1_reg_1979_pp0_iter29_reg <= col_wr_1_reg_1979_pp0_iter28_reg;
                col_wr_1_reg_1979_pp0_iter2_reg <= col_wr_1_reg_1979_pp0_iter1_reg;
                col_wr_1_reg_1979_pp0_iter30_reg <= col_wr_1_reg_1979_pp0_iter29_reg;
                col_wr_1_reg_1979_pp0_iter31_reg <= col_wr_1_reg_1979_pp0_iter30_reg;
                col_wr_1_reg_1979_pp0_iter32_reg <= col_wr_1_reg_1979_pp0_iter31_reg;
                col_wr_1_reg_1979_pp0_iter33_reg <= col_wr_1_reg_1979_pp0_iter32_reg;
                col_wr_1_reg_1979_pp0_iter34_reg <= col_wr_1_reg_1979_pp0_iter33_reg;
                col_wr_1_reg_1979_pp0_iter3_reg <= col_wr_1_reg_1979_pp0_iter2_reg;
                col_wr_1_reg_1979_pp0_iter4_reg <= col_wr_1_reg_1979_pp0_iter3_reg;
                col_wr_1_reg_1979_pp0_iter5_reg <= col_wr_1_reg_1979_pp0_iter4_reg;
                col_wr_1_reg_1979_pp0_iter6_reg <= col_wr_1_reg_1979_pp0_iter5_reg;
                col_wr_1_reg_1979_pp0_iter7_reg <= col_wr_1_reg_1979_pp0_iter6_reg;
                col_wr_1_reg_1979_pp0_iter8_reg <= col_wr_1_reg_1979_pp0_iter7_reg;
                col_wr_1_reg_1979_pp0_iter9_reg <= col_wr_1_reg_1979_pp0_iter8_reg;
                    i_op_assign_cast_reg_1947_pp0_iter10_reg(14 downto 0) <= i_op_assign_cast_reg_1947_pp0_iter9_reg(14 downto 0);
                    i_op_assign_cast_reg_1947_pp0_iter11_reg(14 downto 0) <= i_op_assign_cast_reg_1947_pp0_iter10_reg(14 downto 0);
                    i_op_assign_cast_reg_1947_pp0_iter12_reg(14 downto 0) <= i_op_assign_cast_reg_1947_pp0_iter11_reg(14 downto 0);
                    i_op_assign_cast_reg_1947_pp0_iter13_reg(14 downto 0) <= i_op_assign_cast_reg_1947_pp0_iter12_reg(14 downto 0);
                    i_op_assign_cast_reg_1947_pp0_iter14_reg(14 downto 0) <= i_op_assign_cast_reg_1947_pp0_iter13_reg(14 downto 0);
                    i_op_assign_cast_reg_1947_pp0_iter15_reg(14 downto 0) <= i_op_assign_cast_reg_1947_pp0_iter14_reg(14 downto 0);
                    i_op_assign_cast_reg_1947_pp0_iter16_reg(14 downto 0) <= i_op_assign_cast_reg_1947_pp0_iter15_reg(14 downto 0);
                    i_op_assign_cast_reg_1947_pp0_iter17_reg(14 downto 0) <= i_op_assign_cast_reg_1947_pp0_iter16_reg(14 downto 0);
                    i_op_assign_cast_reg_1947_pp0_iter18_reg(14 downto 0) <= i_op_assign_cast_reg_1947_pp0_iter17_reg(14 downto 0);
                    i_op_assign_cast_reg_1947_pp0_iter19_reg(14 downto 0) <= i_op_assign_cast_reg_1947_pp0_iter18_reg(14 downto 0);
                    i_op_assign_cast_reg_1947_pp0_iter20_reg(14 downto 0) <= i_op_assign_cast_reg_1947_pp0_iter19_reg(14 downto 0);
                    i_op_assign_cast_reg_1947_pp0_iter21_reg(14 downto 0) <= i_op_assign_cast_reg_1947_pp0_iter20_reg(14 downto 0);
                    i_op_assign_cast_reg_1947_pp0_iter22_reg(14 downto 0) <= i_op_assign_cast_reg_1947_pp0_iter21_reg(14 downto 0);
                    i_op_assign_cast_reg_1947_pp0_iter23_reg(14 downto 0) <= i_op_assign_cast_reg_1947_pp0_iter22_reg(14 downto 0);
                    i_op_assign_cast_reg_1947_pp0_iter24_reg(14 downto 0) <= i_op_assign_cast_reg_1947_pp0_iter23_reg(14 downto 0);
                    i_op_assign_cast_reg_1947_pp0_iter25_reg(14 downto 0) <= i_op_assign_cast_reg_1947_pp0_iter24_reg(14 downto 0);
                    i_op_assign_cast_reg_1947_pp0_iter26_reg(14 downto 0) <= i_op_assign_cast_reg_1947_pp0_iter25_reg(14 downto 0);
                    i_op_assign_cast_reg_1947_pp0_iter27_reg(14 downto 0) <= i_op_assign_cast_reg_1947_pp0_iter26_reg(14 downto 0);
                    i_op_assign_cast_reg_1947_pp0_iter28_reg(14 downto 0) <= i_op_assign_cast_reg_1947_pp0_iter27_reg(14 downto 0);
                    i_op_assign_cast_reg_1947_pp0_iter29_reg(14 downto 0) <= i_op_assign_cast_reg_1947_pp0_iter28_reg(14 downto 0);
                    i_op_assign_cast_reg_1947_pp0_iter2_reg(14 downto 0) <= i_op_assign_cast_reg_1947_pp0_iter1_reg(14 downto 0);
                    i_op_assign_cast_reg_1947_pp0_iter30_reg(14 downto 0) <= i_op_assign_cast_reg_1947_pp0_iter29_reg(14 downto 0);
                    i_op_assign_cast_reg_1947_pp0_iter31_reg(14 downto 0) <= i_op_assign_cast_reg_1947_pp0_iter30_reg(14 downto 0);
                    i_op_assign_cast_reg_1947_pp0_iter32_reg(14 downto 0) <= i_op_assign_cast_reg_1947_pp0_iter31_reg(14 downto 0);
                    i_op_assign_cast_reg_1947_pp0_iter33_reg(14 downto 0) <= i_op_assign_cast_reg_1947_pp0_iter32_reg(14 downto 0);
                    i_op_assign_cast_reg_1947_pp0_iter34_reg(14 downto 0) <= i_op_assign_cast_reg_1947_pp0_iter33_reg(14 downto 0);
                    i_op_assign_cast_reg_1947_pp0_iter3_reg(14 downto 0) <= i_op_assign_cast_reg_1947_pp0_iter2_reg(14 downto 0);
                    i_op_assign_cast_reg_1947_pp0_iter4_reg(14 downto 0) <= i_op_assign_cast_reg_1947_pp0_iter3_reg(14 downto 0);
                    i_op_assign_cast_reg_1947_pp0_iter5_reg(14 downto 0) <= i_op_assign_cast_reg_1947_pp0_iter4_reg(14 downto 0);
                    i_op_assign_cast_reg_1947_pp0_iter6_reg(14 downto 0) <= i_op_assign_cast_reg_1947_pp0_iter5_reg(14 downto 0);
                    i_op_assign_cast_reg_1947_pp0_iter7_reg(14 downto 0) <= i_op_assign_cast_reg_1947_pp0_iter6_reg(14 downto 0);
                    i_op_assign_cast_reg_1947_pp0_iter8_reg(14 downto 0) <= i_op_assign_cast_reg_1947_pp0_iter7_reg(14 downto 0);
                    i_op_assign_cast_reg_1947_pp0_iter9_reg(14 downto 0) <= i_op_assign_cast_reg_1947_pp0_iter8_reg(14 downto 0);
                tmp_29_reg_1953_pp0_iter10_reg <= tmp_29_reg_1953_pp0_iter9_reg;
                tmp_29_reg_1953_pp0_iter11_reg <= tmp_29_reg_1953_pp0_iter10_reg;
                tmp_29_reg_1953_pp0_iter12_reg <= tmp_29_reg_1953_pp0_iter11_reg;
                tmp_29_reg_1953_pp0_iter13_reg <= tmp_29_reg_1953_pp0_iter12_reg;
                tmp_29_reg_1953_pp0_iter14_reg <= tmp_29_reg_1953_pp0_iter13_reg;
                tmp_29_reg_1953_pp0_iter15_reg <= tmp_29_reg_1953_pp0_iter14_reg;
                tmp_29_reg_1953_pp0_iter16_reg <= tmp_29_reg_1953_pp0_iter15_reg;
                tmp_29_reg_1953_pp0_iter17_reg <= tmp_29_reg_1953_pp0_iter16_reg;
                tmp_29_reg_1953_pp0_iter18_reg <= tmp_29_reg_1953_pp0_iter17_reg;
                tmp_29_reg_1953_pp0_iter19_reg <= tmp_29_reg_1953_pp0_iter18_reg;
                tmp_29_reg_1953_pp0_iter20_reg <= tmp_29_reg_1953_pp0_iter19_reg;
                tmp_29_reg_1953_pp0_iter21_reg <= tmp_29_reg_1953_pp0_iter20_reg;
                tmp_29_reg_1953_pp0_iter22_reg <= tmp_29_reg_1953_pp0_iter21_reg;
                tmp_29_reg_1953_pp0_iter23_reg <= tmp_29_reg_1953_pp0_iter22_reg;
                tmp_29_reg_1953_pp0_iter24_reg <= tmp_29_reg_1953_pp0_iter23_reg;
                tmp_29_reg_1953_pp0_iter25_reg <= tmp_29_reg_1953_pp0_iter24_reg;
                tmp_29_reg_1953_pp0_iter26_reg <= tmp_29_reg_1953_pp0_iter25_reg;
                tmp_29_reg_1953_pp0_iter27_reg <= tmp_29_reg_1953_pp0_iter26_reg;
                tmp_29_reg_1953_pp0_iter28_reg <= tmp_29_reg_1953_pp0_iter27_reg;
                tmp_29_reg_1953_pp0_iter29_reg <= tmp_29_reg_1953_pp0_iter28_reg;
                tmp_29_reg_1953_pp0_iter2_reg <= tmp_29_reg_1953_pp0_iter1_reg;
                tmp_29_reg_1953_pp0_iter30_reg <= tmp_29_reg_1953_pp0_iter29_reg;
                tmp_29_reg_1953_pp0_iter31_reg <= tmp_29_reg_1953_pp0_iter30_reg;
                tmp_29_reg_1953_pp0_iter32_reg <= tmp_29_reg_1953_pp0_iter31_reg;
                tmp_29_reg_1953_pp0_iter33_reg <= tmp_29_reg_1953_pp0_iter32_reg;
                tmp_29_reg_1953_pp0_iter34_reg <= tmp_29_reg_1953_pp0_iter33_reg;
                tmp_29_reg_1953_pp0_iter35_reg <= tmp_29_reg_1953_pp0_iter34_reg;
                tmp_29_reg_1953_pp0_iter36_reg <= tmp_29_reg_1953_pp0_iter35_reg;
                tmp_29_reg_1953_pp0_iter3_reg <= tmp_29_reg_1953_pp0_iter2_reg;
                tmp_29_reg_1953_pp0_iter4_reg <= tmp_29_reg_1953_pp0_iter3_reg;
                tmp_29_reg_1953_pp0_iter5_reg <= tmp_29_reg_1953_pp0_iter4_reg;
                tmp_29_reg_1953_pp0_iter6_reg <= tmp_29_reg_1953_pp0_iter5_reg;
                tmp_29_reg_1953_pp0_iter7_reg <= tmp_29_reg_1953_pp0_iter6_reg;
                tmp_29_reg_1953_pp0_iter8_reg <= tmp_29_reg_1953_pp0_iter7_reg;
                tmp_29_reg_1953_pp0_iter9_reg <= tmp_29_reg_1953_pp0_iter8_reg;
                tmp_40_reg_1999_pp0_iter36_reg <= tmp_40_reg_1999;
                tmp_44_reg_2009_pp0_iter36_reg <= tmp_44_reg_2009;
                tmp_46_reg_2019_pp0_iter36_reg <= tmp_46_reg_2019;
                tmp_47_reg_2024_pp0_iter36_reg <= tmp_47_reg_2024;
                tmp_48_reg_1967_pp0_iter10_reg <= tmp_48_reg_1967_pp0_iter9_reg;
                tmp_48_reg_1967_pp0_iter11_reg <= tmp_48_reg_1967_pp0_iter10_reg;
                tmp_48_reg_1967_pp0_iter12_reg <= tmp_48_reg_1967_pp0_iter11_reg;
                tmp_48_reg_1967_pp0_iter13_reg <= tmp_48_reg_1967_pp0_iter12_reg;
                tmp_48_reg_1967_pp0_iter14_reg <= tmp_48_reg_1967_pp0_iter13_reg;
                tmp_48_reg_1967_pp0_iter15_reg <= tmp_48_reg_1967_pp0_iter14_reg;
                tmp_48_reg_1967_pp0_iter16_reg <= tmp_48_reg_1967_pp0_iter15_reg;
                tmp_48_reg_1967_pp0_iter17_reg <= tmp_48_reg_1967_pp0_iter16_reg;
                tmp_48_reg_1967_pp0_iter18_reg <= tmp_48_reg_1967_pp0_iter17_reg;
                tmp_48_reg_1967_pp0_iter19_reg <= tmp_48_reg_1967_pp0_iter18_reg;
                tmp_48_reg_1967_pp0_iter20_reg <= tmp_48_reg_1967_pp0_iter19_reg;
                tmp_48_reg_1967_pp0_iter21_reg <= tmp_48_reg_1967_pp0_iter20_reg;
                tmp_48_reg_1967_pp0_iter22_reg <= tmp_48_reg_1967_pp0_iter21_reg;
                tmp_48_reg_1967_pp0_iter23_reg <= tmp_48_reg_1967_pp0_iter22_reg;
                tmp_48_reg_1967_pp0_iter24_reg <= tmp_48_reg_1967_pp0_iter23_reg;
                tmp_48_reg_1967_pp0_iter25_reg <= tmp_48_reg_1967_pp0_iter24_reg;
                tmp_48_reg_1967_pp0_iter26_reg <= tmp_48_reg_1967_pp0_iter25_reg;
                tmp_48_reg_1967_pp0_iter27_reg <= tmp_48_reg_1967_pp0_iter26_reg;
                tmp_48_reg_1967_pp0_iter28_reg <= tmp_48_reg_1967_pp0_iter27_reg;
                tmp_48_reg_1967_pp0_iter29_reg <= tmp_48_reg_1967_pp0_iter28_reg;
                tmp_48_reg_1967_pp0_iter2_reg <= tmp_48_reg_1967_pp0_iter1_reg;
                tmp_48_reg_1967_pp0_iter30_reg <= tmp_48_reg_1967_pp0_iter29_reg;
                tmp_48_reg_1967_pp0_iter31_reg <= tmp_48_reg_1967_pp0_iter30_reg;
                tmp_48_reg_1967_pp0_iter32_reg <= tmp_48_reg_1967_pp0_iter31_reg;
                tmp_48_reg_1967_pp0_iter33_reg <= tmp_48_reg_1967_pp0_iter32_reg;
                tmp_48_reg_1967_pp0_iter34_reg <= tmp_48_reg_1967_pp0_iter33_reg;
                tmp_48_reg_1967_pp0_iter3_reg <= tmp_48_reg_1967_pp0_iter2_reg;
                tmp_48_reg_1967_pp0_iter4_reg <= tmp_48_reg_1967_pp0_iter3_reg;
                tmp_48_reg_1967_pp0_iter5_reg <= tmp_48_reg_1967_pp0_iter4_reg;
                tmp_48_reg_1967_pp0_iter6_reg <= tmp_48_reg_1967_pp0_iter5_reg;
                tmp_48_reg_1967_pp0_iter7_reg <= tmp_48_reg_1967_pp0_iter6_reg;
                tmp_48_reg_1967_pp0_iter8_reg <= tmp_48_reg_1967_pp0_iter7_reg;
                tmp_48_reg_1967_pp0_iter9_reg <= tmp_48_reg_1967_pp0_iter8_reg;
                tmp_70_reg_2004_pp0_iter36_reg <= tmp_70_reg_2004;
                tmp_71_reg_2014_pp0_iter36_reg <= tmp_71_reg_2014;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state52)) then
                col_rate_V_reg_1855 <= col_rate_V_fu_459_p1;
                cols_reg_1866 <= cols_fu_688_p3;
                row_rate_V_reg_1849 <= row_rate_V_fu_452_p1;
                rows_reg_1861 <= rows_fu_666_p3;
                sx_reg_1878 <= sx_fu_701_p2;
                sy_reg_1889 <= sy_fu_712_p2;
                tmp_19_reg_1871 <= tmp_19_fu_695_p2;
                tmp_20_reg_1883 <= tmp_20_fu_706_p2;
                tmp_21_reg_1894 <= tmp_21_fu_717_p2;
                tmp_22_reg_1899 <= tmp_22_fu_723_p2;
                    tmp_57_cast_reg_1906(31 downto 6) <= tmp_57_cast_fu_737_p1(31 downto 6);
                    tmp_59_cast_reg_1911(31 downto 6) <= tmp_59_cast_fu_749_p1(31 downto 6);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_29_fu_802_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_22_reg_1899 = ap_const_lv1_0))) then
                col_wr_1_reg_1979 <= col_wr_1_fu_840_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                col_wr_1_reg_1979_pp0_iter1_reg <= col_wr_1_reg_1979;
                    i_op_assign_cast_reg_1947(14 downto 0) <= i_op_assign_cast_fu_798_p1(14 downto 0);
                    i_op_assign_cast_reg_1947_pp0_iter1_reg(14 downto 0) <= i_op_assign_cast_reg_1947(14 downto 0);
                tmp_29_reg_1953 <= tmp_29_fu_802_p2;
                tmp_29_reg_1953_pp0_iter1_reg <= tmp_29_reg_1953;
                tmp_48_reg_1967_pp0_iter1_reg <= tmp_48_reg_1967;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state53)) then
                i_reg_1920 <= i_fu_762_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((col_rd_2_fu_1217_p2 = ap_const_lv1_1) and (row_rd_5_fu_1160_p3 = ap_const_lv1_1) and (tmp_29_reg_1953_pp0_iter34_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                k_buf_val_val_0_0_ad_reg_2052 <= tmp_50_fu_1233_p1(7 - 1 downto 0);
                tmp_51_reg_2058 <= tmp_51_fu_1244_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_29_reg_1953_pp0_iter33_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Val2_1_reg_1994 <= p_Val2_1_fu_874_p2;
                p_Val2_s_reg_1989 <= p_Val2_s_fu_865_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((brmerge_demorgan_reg_2070_pp0_iter37_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                    p_Val2_27_reg_2111(47 downto 2) <= p_Val2_27_fu_1457_p2(47 downto 2);
                    p_Val2_28_reg_2117(47 downto 2) <= p_Val2_28_fu_1472_p2(47 downto 2);
                    p_Val2_29_reg_2122(47 downto 2) <= p_Val2_29_fu_1484_p2(47 downto 2);
                tmp20_reg_2127 <= tmp20_fu_1500_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_29_reg_1953_pp0_iter36_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                    p_u_V_reg_2079(19 downto 2) <= p_u_V_fu_1379_p3(19 downto 2);
                    v1_V_reg_2074(19 downto 2) <= v1_V_fu_1373_p2(19 downto 2);
                    v_V_reg_2084(19 downto 2) <= v_V_fu_1386_p3(19 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((brmerge_demorgan_reg_2070_pp0_iter36_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                r_V_1_reg_2094 <= r_V_1_fu_1714_p2;
                r_V_2_reg_2099 <= r_V_2_fu_1720_p2;
                r_V_3_reg_2105 <= r_V_3_fu_1726_p2;
                r_V_reg_2089 <= r_V_fu_1708_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_25_fu_757_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state53))) then
                row_wr_2_reg_1937 <= row_wr_2_fu_780_p2;
                tmp_26_reg_1925 <= tmp_26_fu_768_p2;
                tmp_27_reg_1931 <= tmp_27_fu_774_p2;
                    tmp_47_cast_reg_1942(30 downto 16) <= tmp_47_cast_fu_794_p1(30 downto 16);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                scols_reg_1821 <= scols_fu_356_p1;
                srows_reg_1813 <= srows_fu_352_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_29_fu_802_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_48_reg_1967 <= tmp_48_fu_834_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((col_rd_2_fu_1217_p2 = ap_const_lv1_1) and (tmp_29_reg_1953_pp0_iter34_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_50_reg_2037 <= tmp_50_fu_1233_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_51_fu_1244_p2 = ap_const_lv1_1) and (col_rd_2_fu_1217_p2 = ap_const_lv1_1) and (row_rd_5_fu_1160_p3 = ap_const_lv1_1) and (tmp_29_reg_1953_pp0_iter34_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_52_reg_2062 <= tmp_52_fu_1253_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (((col_rd_2_fu_1217_p2 = ap_const_lv1_1) and (row_rd_5_fu_1160_p3 = ap_const_lv1_1) and (tmp_29_reg_1953_pp0_iter34_reg = ap_const_lv1_1) and (tmp_52_fu_1253_p2 = ap_const_lv1_0)) or ((col_rd_2_fu_1217_p2 = ap_const_lv1_1) and (row_rd_5_fu_1160_p3 = ap_const_lv1_1) and (tmp_29_reg_1953_pp0_iter34_reg = ap_const_lv1_1) and (tmp_51_fu_1244_p2 = ap_const_lv1_0))))) then
                tmp_53_reg_2066 <= tmp_53_fu_1262_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_predicate_op503_read_state90 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then
                tmp_fu_190 <= p_src_data_stream_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((col_rd_2_reg_2033 = ap_const_lv1_1) and (tmp_29_reg_1953_pp0_iter35_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then
                win_val_0_val_1_0_1_fu_178 <= win_val_0_val_1_0_fu_174;
                win_val_1_val_1_0_1_fu_186 <= win_val_1_val_1_0_fu_182;
                win_val_1_val_1_0_fu_182 <= ap_phi_mux_win_val_val_1_0_0_2_phi_fu_330_p10;
            end if;
        end if;
    end process;
    tmp_57_cast_reg_1906(5 downto 0) <= "000000";
    tmp_59_cast_reg_1911(5 downto 0) <= "000000";
    tmp_47_cast_reg_1942(15 downto 0) <= "0000000000000000";
    tmp_47_cast_reg_1942(31) <= '0';
    i_op_assign_cast_reg_1947(15) <= '0';
    i_op_assign_cast_reg_1947_pp0_iter1_reg(15) <= '0';
    i_op_assign_cast_reg_1947_pp0_iter2_reg(15) <= '0';
    i_op_assign_cast_reg_1947_pp0_iter3_reg(15) <= '0';
    i_op_assign_cast_reg_1947_pp0_iter4_reg(15) <= '0';
    i_op_assign_cast_reg_1947_pp0_iter5_reg(15) <= '0';
    i_op_assign_cast_reg_1947_pp0_iter6_reg(15) <= '0';
    i_op_assign_cast_reg_1947_pp0_iter7_reg(15) <= '0';
    i_op_assign_cast_reg_1947_pp0_iter8_reg(15) <= '0';
    i_op_assign_cast_reg_1947_pp0_iter9_reg(15) <= '0';
    i_op_assign_cast_reg_1947_pp0_iter10_reg(15) <= '0';
    i_op_assign_cast_reg_1947_pp0_iter11_reg(15) <= '0';
    i_op_assign_cast_reg_1947_pp0_iter12_reg(15) <= '0';
    i_op_assign_cast_reg_1947_pp0_iter13_reg(15) <= '0';
    i_op_assign_cast_reg_1947_pp0_iter14_reg(15) <= '0';
    i_op_assign_cast_reg_1947_pp0_iter15_reg(15) <= '0';
    i_op_assign_cast_reg_1947_pp0_iter16_reg(15) <= '0';
    i_op_assign_cast_reg_1947_pp0_iter17_reg(15) <= '0';
    i_op_assign_cast_reg_1947_pp0_iter18_reg(15) <= '0';
    i_op_assign_cast_reg_1947_pp0_iter19_reg(15) <= '0';
    i_op_assign_cast_reg_1947_pp0_iter20_reg(15) <= '0';
    i_op_assign_cast_reg_1947_pp0_iter21_reg(15) <= '0';
    i_op_assign_cast_reg_1947_pp0_iter22_reg(15) <= '0';
    i_op_assign_cast_reg_1947_pp0_iter23_reg(15) <= '0';
    i_op_assign_cast_reg_1947_pp0_iter24_reg(15) <= '0';
    i_op_assign_cast_reg_1947_pp0_iter25_reg(15) <= '0';
    i_op_assign_cast_reg_1947_pp0_iter26_reg(15) <= '0';
    i_op_assign_cast_reg_1947_pp0_iter27_reg(15) <= '0';
    i_op_assign_cast_reg_1947_pp0_iter28_reg(15) <= '0';
    i_op_assign_cast_reg_1947_pp0_iter29_reg(15) <= '0';
    i_op_assign_cast_reg_1947_pp0_iter30_reg(15) <= '0';
    i_op_assign_cast_reg_1947_pp0_iter31_reg(15) <= '0';
    i_op_assign_cast_reg_1947_pp0_iter32_reg(15) <= '0';
    i_op_assign_cast_reg_1947_pp0_iter33_reg(15) <= '0';
    i_op_assign_cast_reg_1947_pp0_iter34_reg(15) <= '0';
    v1_V_reg_2074(1 downto 0) <= "00";
    p_u_V_reg_2079(1 downto 0) <= "00";
    v_V_reg_2084(1 downto 0) <= "00";
    p_Val2_27_reg_2111(1 downto 0) <= "00";
    p_Val2_28_reg_2117(1 downto 0) <= "00";
    p_Val2_29_reg_2122(1 downto 0) <= "00";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter36, ap_enable_reg_pp0_iter39, tmp_25_fu_757_p2, ap_CS_fsm_state53, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter35, ap_enable_reg_pp0_iter37, ap_enable_reg_pp0_iter38)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                ap_NS_fsm <= ap_ST_fsm_state53;
            when ap_ST_fsm_state53 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state53) and (tmp_25_fu_757_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter37 = ap_const_logic_0) and (ap_enable_reg_pp0_iter35 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) and not(((ap_enable_reg_pp0_iter38 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter39 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter37 = ap_const_logic_0) and (ap_enable_reg_pp0_iter35 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter38 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter39 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state94;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state94 => 
                ap_NS_fsm <= ap_ST_fsm_state53;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
        OP1_V_7_cast_fu_1466_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_2_reg_2099),29));

        OP1_V_9_cast_fu_1481_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_3_reg_2105),29));

        OP2_V_6_fu_1469_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(v_V_reg_2084),48));

        OP2_V_fu_1405_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(u1_V_fu_1367_p2),28));

    Range1_all_ones_fu_1609_p2 <= "1" when (p_Result_6_i_i_fu_1599_p4 = ap_const_lv4_F) else "0";
    Range1_all_zeros_fu_1615_p2 <= "1" when (p_Result_6_i_i_fu_1599_p4 = ap_const_lv4_0) else "0";
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(53);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state52 <= ap_CS_fsm(51);
    ap_CS_fsm_state53 <= ap_CS_fsm(52);
    ap_CS_fsm_state94 <= ap_CS_fsm(54);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter36, ap_enable_reg_pp0_iter39, brmerge_demorgan_reg_2070_pp0_iter38_reg, ap_predicate_op503_read_state90)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_predicate_op503_read_state90 = ap_const_boolean_1) and (p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1)) or ((brmerge_demorgan_reg_2070_pp0_iter38_reg = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter39 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter36, ap_enable_reg_pp0_iter39, brmerge_demorgan_reg_2070_pp0_iter38_reg, ap_predicate_op503_read_state90)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_predicate_op503_read_state90 = ap_const_boolean_1) and (p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1)) or ((brmerge_demorgan_reg_2070_pp0_iter38_reg = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter39 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter36, ap_enable_reg_pp0_iter39, brmerge_demorgan_reg_2070_pp0_iter38_reg, ap_predicate_op503_read_state90)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_predicate_op503_read_state90 = ap_const_boolean_1) and (p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1)) or ((brmerge_demorgan_reg_2070_pp0_iter38_reg = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter39 = ap_const_logic_1)));
    end process;

        ap_block_state54_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state55_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state56_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state57_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state58_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state59_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state60_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state61_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state62_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state63_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state64_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state65_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state66_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state67_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state68_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state69_pp0_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state70_pp0_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state71_pp0_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state72_pp0_stage0_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state73_pp0_stage0_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state74_pp0_stage0_iter20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state75_pp0_stage0_iter21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state76_pp0_stage0_iter22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state77_pp0_stage0_iter23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state78_pp0_stage0_iter24 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state79_pp0_stage0_iter25 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state80_pp0_stage0_iter26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state81_pp0_stage0_iter27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state82_pp0_stage0_iter28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state83_pp0_stage0_iter29 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state84_pp0_stage0_iter30 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state85_pp0_stage0_iter31 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state86_pp0_stage0_iter32 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state87_pp0_stage0_iter33 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state88_pp0_stage0_iter34 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state89_pp0_stage0_iter35 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state90_pp0_stage0_iter36_assign_proc : process(p_src_data_stream_V_empty_n, ap_predicate_op503_read_state90)
    begin
                ap_block_state90_pp0_stage0_iter36 <= ((ap_predicate_op503_read_state90 = ap_const_boolean_1) and (p_src_data_stream_V_empty_n = ap_const_logic_0));
    end process;

        ap_block_state91_pp0_stage0_iter37 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state92_pp0_stage0_iter38 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state93_pp0_stage0_iter39_assign_proc : process(p_dst_data_stream_V_full_n, brmerge_demorgan_reg_2070_pp0_iter38_reg)
    begin
                ap_block_state93_pp0_stage0_iter39 <= ((brmerge_demorgan_reg_2070_pp0_iter38_reg = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0));
    end process;


    ap_condition_2488_assign_proc : process(ap_block_pp0_stage0, tmp_29_reg_1953_pp0_iter34_reg, col_rd_2_fu_1217_p2, ap_enable_reg_pp0_iter35)
    begin
                ap_condition_2488 <= ((col_rd_2_fu_1217_p2 = ap_const_lv1_1) and (tmp_29_reg_1953_pp0_iter34_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter35 = ap_const_logic_1));
    end process;


    ap_condition_333_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
                ap_condition_333 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_836_assign_proc : process(tmp_29_reg_1953_pp0_iter35_reg, col_rd_2_reg_2033, row_rd_5_reg_2029, tmp_51_reg_2058, tmp_52_reg_2062, tmp_53_reg_2066)
    begin
                ap_condition_836 <= ((col_rd_2_reg_2033 = ap_const_lv1_1) and (tmp_51_reg_2058 = ap_const_lv1_1) and (row_rd_5_reg_2029 = ap_const_lv1_1) and (tmp_29_reg_1953_pp0_iter35_reg = ap_const_lv1_1) and (tmp_53_reg_2066 = ap_const_lv1_0) and (tmp_52_reg_2062 = ap_const_lv1_0));
    end process;


    ap_condition_pp0_exit_iter36_state90_assign_proc : process(ap_enable_reg_pp0_iter36, ap_enable_reg_pp0_iter35)
    begin
        if (((ap_enable_reg_pp0_iter36 = ap_const_logic_1) and (ap_enable_reg_pp0_iter35 = ap_const_logic_0))) then 
            ap_condition_pp0_exit_iter36_state90 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter36_state90 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, tmp_25_fu_757_p2, ap_CS_fsm_state53)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_logic_1 = ap_CS_fsm_state53) and (tmp_25_fu_757_p2 = ap_const_lv1_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter36, ap_enable_reg_pp0_iter39, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter21, ap_enable_reg_pp0_iter22, ap_enable_reg_pp0_iter23, ap_enable_reg_pp0_iter24, ap_enable_reg_pp0_iter25, ap_enable_reg_pp0_iter26, ap_enable_reg_pp0_iter27, ap_enable_reg_pp0_iter28, ap_enable_reg_pp0_iter29, ap_enable_reg_pp0_iter30, ap_enable_reg_pp0_iter31, ap_enable_reg_pp0_iter32, ap_enable_reg_pp0_iter33, ap_enable_reg_pp0_iter34, ap_enable_reg_pp0_iter35, ap_enable_reg_pp0_iter37, ap_enable_reg_pp0_iter38)
    begin
        if (((ap_enable_reg_pp0_iter36 = ap_const_logic_0) and (ap_enable_reg_pp0_iter38 = ap_const_logic_0) and (ap_enable_reg_pp0_iter37 = ap_const_logic_0) and (ap_enable_reg_pp0_iter35 = ap_const_logic_0) and (ap_enable_reg_pp0_iter34 = ap_const_logic_0) and (ap_enable_reg_pp0_iter33 = ap_const_logic_0) and (ap_enable_reg_pp0_iter32 = ap_const_logic_0) and (ap_enable_reg_pp0_iter31 = ap_const_logic_0) and (ap_enable_reg_pp0_iter30 = ap_const_logic_0) and (ap_enable_reg_pp0_iter29 = ap_const_logic_0) and (ap_enable_reg_pp0_iter28 = ap_const_logic_0) and (ap_enable_reg_pp0_iter27 = ap_const_logic_0) and (ap_enable_reg_pp0_iter26 = ap_const_logic_0) and (ap_enable_reg_pp0_iter25 = ap_const_logic_0) and (ap_enable_reg_pp0_iter24 = ap_const_logic_0) and (ap_enable_reg_pp0_iter23 = ap_const_logic_0) and (ap_enable_reg_pp0_iter22 = ap_const_logic_0) and (ap_enable_reg_pp0_iter21 = ap_const_logic_0) and (ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter39 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_dx_phi_fu_321_p4_assign_proc : process(ap_block_pp0_stage0, tmp_22_reg_1899, tmp_29_reg_1953_pp0_iter33_reg, ap_enable_reg_pp0_iter34, tmp_65_fu_856_p1, ap_phi_reg_pp0_iter34_dx_reg_318)
    begin
        if (((tmp_29_reg_1953_pp0_iter33_reg = ap_const_lv1_1) and (tmp_22_reg_1899 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter34 = ap_const_logic_1))) then 
            ap_phi_mux_dx_phi_fu_321_p4 <= tmp_65_fu_856_p1;
        else 
            ap_phi_mux_dx_phi_fu_321_p4 <= ap_phi_reg_pp0_iter34_dx_reg_318;
        end if; 
    end process;


    ap_phi_mux_dy_phi_fu_312_p4_assign_proc : process(ap_block_pp0_stage0, tmp_21_reg_1894, tmp_29_reg_1953_pp0_iter33_reg, ap_enable_reg_pp0_iter34, tmp_64_fu_851_p1, ap_phi_reg_pp0_iter34_dy_reg_309)
    begin
        if (((tmp_29_reg_1953_pp0_iter33_reg = ap_const_lv1_1) and (tmp_21_reg_1894 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter34 = ap_const_logic_1))) then 
            ap_phi_mux_dy_phi_fu_312_p4 <= tmp_64_fu_851_p1;
        else 
            ap_phi_mux_dy_phi_fu_312_p4 <= ap_phi_reg_pp0_iter34_dy_reg_309;
        end if; 
    end process;


    ap_phi_mux_win_val_val_1_0_0_2_phi_fu_330_p10_assign_proc : process(ap_enable_reg_pp0_iter36, ap_block_pp0_stage0, tmp_29_reg_1953_pp0_iter35_reg, col_rd_2_reg_2033, row_rd_5_reg_2029, tmp_51_reg_2058, tmp_52_reg_2062, tmp_53_reg_2066, k_buf_val_val_0_0_q0, k_buf_val_val_1_0_q0, ap_phi_reg_pp0_iter36_win_val_val_1_0_0_2_reg_327)
    begin
        if ((((col_rd_2_reg_2033 = ap_const_lv1_1) and (row_rd_5_reg_2029 = ap_const_lv1_1) and (tmp_29_reg_1953_pp0_iter35_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1) and (tmp_51_reg_2058 = ap_const_lv1_0)) or ((col_rd_2_reg_2033 = ap_const_lv1_1) and (tmp_51_reg_2058 = ap_const_lv1_1) and (row_rd_5_reg_2029 = ap_const_lv1_1) and (tmp_29_reg_1953_pp0_iter35_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_53_reg_2066 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1) and (tmp_52_reg_2062 = ap_const_lv1_0)) or ((col_rd_2_reg_2033 = ap_const_lv1_1) and (tmp_53_reg_2066 = ap_const_lv1_1) and (tmp_51_reg_2058 = ap_const_lv1_1) and (row_rd_5_reg_2029 = ap_const_lv1_1) and (tmp_29_reg_1953_pp0_iter35_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1) and (tmp_52_reg_2062 = ap_const_lv1_0)) or ((col_rd_2_reg_2033 = ap_const_lv1_1) and (tmp_52_reg_2062 = ap_const_lv1_1) and (tmp_51_reg_2058 = ap_const_lv1_1) and (row_rd_5_reg_2029 = ap_const_lv1_1) and (tmp_29_reg_1953_pp0_iter35_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1)))) then 
            ap_phi_mux_win_val_val_1_0_0_2_phi_fu_330_p10 <= k_buf_val_val_0_0_q0;
        elsif (((col_rd_2_reg_2033 = ap_const_lv1_1) and (tmp_29_reg_1953_pp0_iter35_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1) and (row_rd_5_reg_2029 = ap_const_lv1_0))) then 
            ap_phi_mux_win_val_val_1_0_0_2_phi_fu_330_p10 <= k_buf_val_val_1_0_q0;
        else 
            ap_phi_mux_win_val_val_1_0_0_2_phi_fu_330_p10 <= ap_phi_reg_pp0_iter36_win_val_val_1_0_0_2_reg_327;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_dx_reg_318 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_dy_reg_309 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter36_win_val_val_1_0_0_2_reg_327 <= "XXXXXXXX";

    ap_predicate_op503_read_state90_assign_proc : process(tmp_29_reg_1953_pp0_iter35_reg, col_rd_2_reg_2033, row_rd_5_reg_2029, tmp_51_reg_2058, tmp_52_reg_2062)
    begin
                ap_predicate_op503_read_state90 <= ((col_rd_2_reg_2033 = ap_const_lv1_1) and (tmp_52_reg_2062 = ap_const_lv1_1) and (tmp_51_reg_2058 = ap_const_lv1_1) and (row_rd_5_reg_2029 = ap_const_lv1_1) and (tmp_29_reg_1953_pp0_iter35_reg = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(tmp_25_fu_757_p2, ap_CS_fsm_state53)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state53) and (tmp_25_fu_757_p2 = ap_const_lv1_0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    brmerge_demorgan_fu_1278_p2 <= (row_wr_3_fu_1174_p3 and col_wr_2_fu_1222_p3);
    brmerge_i_i_fu_1677_p2 <= (p_39_demorgan_i_not_i_fu_1671_p2 or neg_src_not_i_i_fu_1659_p2);
    brmerge_i_i_not_i_i_fu_1665_p2 <= (p_39_demorgan_i_i_i_fu_1647_p2 and neg_src_not_i_i_fu_1659_p2);
    carry_fu_1593_p2 <= (tmp_8_i_i_fu_1587_p2 and tmp_75_fu_1565_p3);
    col_rate_V_fu_459_p1 <= grp_fu_406_p2(32 - 1 downto 0);
    col_rd_2_fu_1217_p2 <= (tmp_48_reg_1967_pp0_iter34_reg or tmp18_fu_1212_p2);
    col_wr_1_fu_840_p2 <= "0" when (p_Val2_16_reg_298 = ap_const_lv15_0) else "1";
    col_wr_2_fu_1222_p3 <= 
        col_wr_fu_1186_p2 when (tmp_22_reg_1899(0) = '1') else 
        col_wr_1_reg_1979_pp0_iter34_reg;
    col_wr_fu_1186_p2 <= "1" when (pre_fx_1_fu_1075_p3 = tmp_49_fu_1181_p2) else "0";
    cols_fu_688_p3 <= 
        scols_reg_1821 when (tmp_17_fu_673_p2(0) = '1') else 
        tmp_23_cast_fu_684_p1;
    dcols_cast_fu_440_p0 <= p_dst_cols_V_read;
        dcols_cast_fu_440_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(dcols_cast_fu_440_p0),7));

    dcols_fu_437_p0 <= p_dst_cols_V_read;
        dcols_fu_437_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(dcols_fu_437_p0),16));

    deleted_zeros_fu_1621_p3 <= 
        Range1_all_ones_fu_1609_p2 when (carry_fu_1593_p2(0) = '1') else 
        Range1_all_zeros_fu_1615_p2;
    drows_cast_fu_446_p0 <= p_dst_rows_V_read;
        drows_cast_fu_446_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(drows_cast_fu_446_p0),7));

    drows_fu_443_p0 <= p_dst_rows_V_read;
        drows_fu_443_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(drows_fu_443_p0),16));


    grp_fu_380_ap_start_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            grp_fu_380_ap_start <= ap_const_logic_1;
        else 
            grp_fu_380_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_380_p0 <= (srows_fu_352_p1 & ap_const_lv32_0);

    grp_fu_406_ap_start_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            grp_fu_406_ap_start <= ap_const_logic_1;
        else 
            grp_fu_406_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_406_p0 <= (scols_fu_356_p1 & ap_const_lv32_0);

    grp_fu_813_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_813_ce <= ap_const_logic_1;
        else 
            grp_fu_813_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_813_p0 <= tmp_47_cast_reg_1942(31 - 1 downto 0);

    grp_fu_829_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_829_ce <= ap_const_logic_1;
        else 
            grp_fu_829_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_829_p0 <= grp_fu_829_p00(31 - 1 downto 0);
    grp_fu_829_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_33_fu_817_p3),32));
    i_fu_762_p2 <= std_logic_vector(unsigned(p_Val2_15_reg_287) + unsigned(ap_const_lv15_1));
    i_op_assign_15_cast_fu_753_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_15_reg_287),16));
    i_op_assign_cast_fu_798_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_16_reg_298),16));
    j_fu_807_p2 <= std_logic_vector(unsigned(p_Val2_16_reg_298) + unsigned(ap_const_lv15_1));
    k_buf_val_val_0_0_ad_gep_fu_263_p3 <= tmp_50_fu_1233_p1(7 - 1 downto 0);

    k_buf_val_val_0_0_address0_assign_proc : process(row_rd_5_fu_1160_p3, tmp_50_fu_1233_p1, k_buf_val_val_0_0_ad_gep_fu_263_p3, ap_condition_2488)
    begin
        if ((ap_const_boolean_1 = ap_condition_2488)) then
            if ((row_rd_5_fu_1160_p3 = ap_const_lv1_1)) then 
                k_buf_val_val_0_0_address0 <= k_buf_val_val_0_0_ad_gep_fu_263_p3;
            elsif ((row_rd_5_fu_1160_p3 = ap_const_lv1_0)) then 
                k_buf_val_val_0_0_address0 <= tmp_50_fu_1233_p1(7 - 1 downto 0);
            else 
                k_buf_val_val_0_0_address0 <= "XXXXXXX";
            end if;
        else 
            k_buf_val_val_0_0_address0 <= "XXXXXXX";
        end if; 
    end process;


    k_buf_val_val_0_0_ce0_assign_proc : process(ap_block_pp0_stage0_11001, tmp_29_reg_1953_pp0_iter34_reg, row_rd_5_fu_1160_p3, col_rd_2_fu_1217_p2, ap_enable_reg_pp0_iter35)
    begin
        if ((((col_rd_2_fu_1217_p2 = ap_const_lv1_1) and (row_rd_5_fu_1160_p3 = ap_const_lv1_1) and (tmp_29_reg_1953_pp0_iter34_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter35 = ap_const_logic_1)) or ((col_rd_2_fu_1217_p2 = ap_const_lv1_1) and (tmp_29_reg_1953_pp0_iter34_reg = ap_const_lv1_1) and (row_rd_5_fu_1160_p3 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter35 = ap_const_logic_1)))) then 
            k_buf_val_val_0_0_ce0 <= ap_const_logic_1;
        else 
            k_buf_val_val_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_val_val_0_0_ce1_assign_proc : process(ap_enable_reg_pp0_iter36, tmp_29_reg_1953_pp0_iter35_reg, col_rd_2_reg_2033, row_rd_5_reg_2029, tmp_51_reg_2058, tmp_52_reg_2062, ap_predicate_op503_read_state90, ap_block_pp0_stage0_11001, tmp_53_reg_2066)
    begin
        if ((((col_rd_2_reg_2033 = ap_const_lv1_1) and (tmp_51_reg_2058 = ap_const_lv1_1) and (row_rd_5_reg_2029 = ap_const_lv1_1) and (tmp_29_reg_1953_pp0_iter35_reg = ap_const_lv1_1) and (tmp_53_reg_2066 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1) and (tmp_52_reg_2062 = ap_const_lv1_0)) or ((ap_predicate_op503_read_state90 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1)))) then 
            k_buf_val_val_0_0_ce1 <= ap_const_logic_1;
        else 
            k_buf_val_val_0_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_val_val_0_0_d1_assign_proc : process(p_src_data_stream_V_dout, ap_enable_reg_pp0_iter36, ap_block_pp0_stage0, ap_predicate_op503_read_state90, tmp_fu_190, ap_condition_836)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then
            if ((ap_predicate_op503_read_state90 = ap_const_boolean_1)) then 
                k_buf_val_val_0_0_d1 <= p_src_data_stream_V_dout;
            elsif ((ap_const_boolean_1 = ap_condition_836)) then 
                k_buf_val_val_0_0_d1 <= tmp_fu_190;
            else 
                k_buf_val_val_0_0_d1 <= "XXXXXXXX";
            end if;
        else 
            k_buf_val_val_0_0_d1 <= "XXXXXXXX";
        end if; 
    end process;


    k_buf_val_val_0_0_we1_assign_proc : process(ap_enable_reg_pp0_iter36, tmp_29_reg_1953_pp0_iter35_reg, col_rd_2_reg_2033, row_rd_5_reg_2029, tmp_51_reg_2058, tmp_52_reg_2062, ap_predicate_op503_read_state90, ap_block_pp0_stage0_11001, tmp_53_reg_2066)
    begin
        if ((((col_rd_2_reg_2033 = ap_const_lv1_1) and (tmp_51_reg_2058 = ap_const_lv1_1) and (row_rd_5_reg_2029 = ap_const_lv1_1) and (tmp_29_reg_1953_pp0_iter35_reg = ap_const_lv1_1) and (tmp_53_reg_2066 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1) and (tmp_52_reg_2062 = ap_const_lv1_0)) or ((ap_predicate_op503_read_state90 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1)))) then 
            k_buf_val_val_0_0_we1 <= ap_const_logic_1;
        else 
            k_buf_val_val_0_0_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_val_val_1_0_address0 <= tmp_50_fu_1233_p1(7 - 1 downto 0);
    k_buf_val_val_1_0_address1 <= tmp_50_reg_2037(7 - 1 downto 0);

    k_buf_val_val_1_0_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter35)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter35 = ap_const_logic_1))) then 
            k_buf_val_val_1_0_ce0 <= ap_const_logic_1;
        else 
            k_buf_val_val_1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_val_val_1_0_ce1_assign_proc : process(ap_enable_reg_pp0_iter36, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            k_buf_val_val_1_0_ce1 <= ap_const_logic_1;
        else 
            k_buf_val_val_1_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_val_val_1_0_we1_assign_proc : process(ap_enable_reg_pp0_iter36, tmp_29_reg_1953_pp0_iter35_reg, col_rd_2_reg_2033, row_rd_5_reg_2029, ap_block_pp0_stage0_11001)
    begin
        if (((col_rd_2_reg_2033 = ap_const_lv1_1) and (row_rd_5_reg_2029 = ap_const_lv1_1) and (tmp_29_reg_1953_pp0_iter35_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            k_buf_val_val_1_0_we1 <= ap_const_logic_1;
        else 
            k_buf_val_val_1_0_we1 <= ap_const_logic_0;
        end if; 
    end process;

    neg_src_fu_1641_p2 <= (tmp_i_i_fu_1635_p2 and signbit_fu_1535_p3);
    neg_src_not_i_i_fu_1659_p2 <= (signbit_not_fu_1653_p2 or p_38_i_i_i_fu_1629_p2);
    not_1_fu_1103_p2 <= "0" when (sy_4_fu_1091_p3 = pre_fy_fu_166) else "1";
    not_s_fu_1192_p2 <= "0" when (pre_fx_1_fu_1075_p3 = pre_fx_2_fu_1142_p3) else "1";
    p_38_i_i_i_fu_1629_p2 <= (carry_fu_1593_p2 and Range1_all_ones_fu_1609_p2);
    p_39_demorgan_i_i_i_fu_1647_p2 <= (signbit_fu_1535_p3 or deleted_zeros_fu_1621_p3);
    p_39_demorgan_i_not_i_fu_1671_p2 <= (p_39_demorgan_i_i_i_fu_1647_p2 xor ap_const_lv1_1);
    p_6_fu_936_p3 <= 
        ret_V_fu_902_p4 when (tmp_36_fu_924_p2(0) = '1') else 
        ret_V_1_fu_930_p2;
    p_7_fu_986_p3 <= 
        ret_V_2_fu_952_p4 when (tmp_37_fu_974_p2(0) = '1') else 
        ret_V_3_fu_980_p2;
    p_Result_6_i_i_fu_1599_p4 <= p_Val2_44_cast_fu_1531_p2(47 downto 44);
    p_Val2_12_fu_617_p2 <= std_logic_vector(signed(ap_const_lv33_1FFFF8000) + signed(tmp_30_cast_fu_613_p1));
    p_Val2_13_fu_623_p4 <= p_Val2_12_fu_617_p2(25 downto 6);
    p_Val2_17_fu_551_p2 <= std_logic_vector(unsigned(p_Val2_9_fu_529_p4) + unsigned(tmp_10_fu_547_p1));
    p_Val2_18_fu_645_p2 <= std_logic_vector(unsigned(p_Val2_13_fu_623_p4) + unsigned(tmp_12_fu_641_p1));
    p_Val2_1_fu_874_p1 <= ap_phi_mux_dx_phi_fu_321_p4;
    p_Val2_1_fu_874_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(col_rate_V_reg_1855) * signed(p_Val2_1_fu_874_p1))), 32));
    p_Val2_21_fu_1439_p0 <= r_V_reg_2089;
    p_Val2_21_fu_1439_p1 <= v1_V_reg_2074;
    p_Val2_21_fu_1439_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_21_fu_1439_p0) * signed(p_Val2_21_fu_1439_p1))), 48));
    p_Val2_24_fu_1451_p0 <= r_V_1_reg_2094;
    p_Val2_24_fu_1451_p1 <= p_u_V_reg_2079;
    p_Val2_24_fu_1451_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_24_fu_1451_p0) * signed(p_Val2_24_fu_1451_p1))), 48));
    p_Val2_27_fu_1457_p2 <= std_logic_vector(unsigned(p_Val2_24_fu_1451_p2) + unsigned(p_Val2_21_fu_1439_p2));
    p_Val2_28_fu_1472_p0 <= r_V_2_reg_2099;
    p_Val2_28_fu_1472_p1 <= OP2_V_6_fu_1469_p1(20 - 1 downto 0);
    p_Val2_28_fu_1472_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_28_fu_1472_p0) * signed(p_Val2_28_fu_1472_p1))), 48));
    p_Val2_29_fu_1484_p0 <= r_V_3_reg_2105;
    p_Val2_29_fu_1484_p1 <= OP2_V_6_fu_1469_p1(20 - 1 downto 0);
    p_Val2_29_fu_1484_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_29_fu_1484_p0) * signed(p_Val2_29_fu_1484_p1))), 48));
    p_Val2_2_fu_898_p2 <= std_logic_vector(unsigned(p_Val2_1_reg_1994) + unsigned(tmp_59_cast_reg_1911));
    p_Val2_30_fu_1525_p2 <= std_logic_vector(unsigned(tmp29_cast_fu_1521_p1) + unsigned(tmp_55_fu_1509_p1));
    p_Val2_31_fu_1490_p2 <= std_logic_vector(signed(OP1_V_7_cast_fu_1466_p1) + signed(OP1_V_9_cast_fu_1481_p1));
    p_Val2_32_fu_1543_p4 <= p_Val2_30_fu_1525_p2(43 downto 36);
    p_Val2_33_fu_1573_p2 <= std_logic_vector(unsigned(p_Val2_32_fu_1543_p4) + unsigned(tmp_3_i_i_fu_1561_p1));
    p_Val2_3_fu_894_p2 <= std_logic_vector(unsigned(p_Val2_s_reg_1989) + unsigned(tmp_57_cast_reg_1906));
    p_Val2_44_cast_fu_1531_p2 <= std_logic_vector(unsigned(tmp20_reg_2127) + unsigned(p_Val2_27_reg_2111));
    p_Val2_8_fu_523_p2 <= std_logic_vector(signed(ap_const_lv33_1FFFF8000) + signed(tmp_26_cast_fu_519_p1));
    p_Val2_9_fu_529_p4 <= p_Val2_8_fu_523_p2(25 downto 6);
    p_Val2_s_fu_865_p1 <= ap_phi_mux_dy_phi_fu_312_p4;
    p_Val2_s_fu_865_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(row_rate_V_reg_1849) * signed(p_Val2_s_fu_865_p1))), 32));

    p_dst_data_stream_V_blk_n_assign_proc : process(p_dst_data_stream_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter39, brmerge_demorgan_reg_2070_pp0_iter38_reg)
    begin
        if (((brmerge_demorgan_reg_2070_pp0_iter38_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter39 = ap_const_logic_1))) then 
            p_dst_data_stream_V_blk_n <= p_dst_data_stream_V_full_n;
        else 
            p_dst_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_dst_data_stream_V_din <= 
        p_mux_i_i_fu_1683_p3 when (brmerge_i_i_fu_1677_p2(0) = '1') else 
        p_i_i_fu_1691_p3;

    p_dst_data_stream_V_write_assign_proc : process(ap_enable_reg_pp0_iter39, brmerge_demorgan_reg_2070_pp0_iter38_reg, ap_block_pp0_stage0_11001)
    begin
        if (((brmerge_demorgan_reg_2070_pp0_iter38_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter39 = ap_const_logic_1))) then 
            p_dst_data_stream_V_write <= ap_const_logic_1;
        else 
            p_dst_data_stream_V_write <= ap_const_logic_0;
        end if; 
    end process;

    p_i_i_fu_1691_p3 <= 
        ap_const_lv8_0 when (neg_src_fu_1641_p2(0) = '1') else 
        p_Val2_33_fu_1573_p2;
    p_lshr1_fu_571_p4 <= p_neg1_fu_565_p2(31 downto 1);
    p_lshr_f1_fu_591_p4 <= grp_fu_406_p2(31 downto 1);
    p_lshr_f_fu_497_p4 <= grp_fu_380_p2(31 downto 1);
    p_lshr_fu_477_p4 <= p_neg_fu_471_p2(31 downto 1);
    p_mux_i_i_fu_1683_p3 <= 
        p_Val2_33_fu_1573_p2 when (brmerge_i_i_not_i_i_fu_1665_p2(0) = '1') else 
        ap_const_lv8_FF;
    p_neg1_fu_565_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(col_rate_V_fu_459_p1));
    p_neg_fu_471_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(row_rate_V_fu_452_p1));
    p_neg_t1_fu_585_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(tmp_16_fu_581_p1));
    p_neg_t_fu_491_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(tmp_7_fu_487_p1));

    p_src_data_stream_V_blk_n_assign_proc : process(p_src_data_stream_V_empty_n, ap_enable_reg_pp0_iter36, ap_block_pp0_stage0, tmp_29_reg_1953_pp0_iter35_reg, col_rd_2_reg_2033, row_rd_5_reg_2029, tmp_51_reg_2058, tmp_52_reg_2062)
    begin
        if (((col_rd_2_reg_2033 = ap_const_lv1_1) and (tmp_52_reg_2062 = ap_const_lv1_1) and (tmp_51_reg_2058 = ap_const_lv1_1) and (row_rd_5_reg_2029 = ap_const_lv1_1) and (tmp_29_reg_1953_pp0_iter35_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            p_src_data_stream_V_blk_n <= p_src_data_stream_V_empty_n;
        else 
            p_src_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_data_stream_V_read_assign_proc : process(ap_enable_reg_pp0_iter36, ap_predicate_op503_read_state90, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op503_read_state90 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            p_src_data_stream_V_read <= ap_const_logic_1;
        else 
            p_src_data_stream_V_read <= ap_const_logic_0;
        end if; 
    end process;

    p_u_V_fu_1379_p3 <= 
        ap_const_lv20_0 when (tmp_46_reg_2019_pp0_iter36_reg(0) = '1') else 
        u_V_fu_1346_p3;
    pre_fx_1_fu_1075_p3 <= 
        sx_reg_1878 when (tmp_46_fu_1070_p2(0) = '1') else 
        sx_2_fu_944_p3;
    pre_fx_2_fu_1142_p3 <= 
        ap_const_lv16_FFF6 when (tmp_48_reg_1967_pp0_iter34_reg(0) = '1') else 
        pre_fx_fu_162;
    pre_fx_2_sx_fu_1198_p3 <= 
        ap_const_lv16_FFF6 when (tmp_48_reg_1967_pp0_iter34_reg(0) = '1') else 
        pre_fx_1_fu_1075_p3;
    pre_fx_5_fu_1205_p3 <= 
        pre_fx_2_fu_1142_p3 when (tmp_22_reg_1899(0) = '1') else 
        pre_fx_2_sx_fu_1198_p3;
    pre_fy_1_sy_fu_1109_p3 <= 
        pre_fy_fu_166 when (tmp_27_reg_1931(0) = '1') else 
        sy_4_fu_1091_p3;
    pre_fy_5_fu_1135_p3 <= 
        sel_tmp6_fu_1127_p3 when (tmp_48_reg_1967_pp0_iter34_reg(0) = '1') else 
        pre_fy_fu_166;
    r_V_1_fu_1714_p1 <= r_V_1_fu_1714_p10(8 - 1 downto 0);
    r_V_1_fu_1714_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(win_val_1_val_1_0_fu_182),28));
    r_V_2_fu_1720_p0 <= OP2_V_fu_1405_p1(20 - 1 downto 0);
    r_V_2_fu_1720_p1 <= r_V_2_fu_1720_p10(8 - 1 downto 0);
    r_V_2_fu_1720_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(win_val_0_val_1_0_1_fu_178),28));
    r_V_3_fu_1726_p1 <= r_V_3_fu_1726_p10(8 - 1 downto 0);
    r_V_3_fu_1726_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(win_val_0_val_1_0_fu_174),28));
    r_V_6_fu_1018_p2 <= std_logic_vector(signed(tmp_38_fu_1002_p1) - signed(tmp_64_cast_fu_1014_p1));
    r_V_7_fu_1050_p2 <= std_logic_vector(signed(tmp_42_fu_1034_p1) - signed(tmp_70_cast_fu_1046_p1));
    r_V_fu_1708_p0 <= OP2_V_fu_1405_p1(20 - 1 downto 0);
    r_V_fu_1708_p1 <= r_V_fu_1708_p10(8 - 1 downto 0);
    r_V_fu_1708_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(win_val_1_val_1_0_1_fu_186),28));
    ret_V_1_fu_930_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(ret_V_fu_902_p4));
    ret_V_2_fu_952_p4 <= p_Val2_3_fu_894_p2(31 downto 16);
    ret_V_3_fu_980_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(ret_V_2_fu_952_p4));
    ret_V_fu_902_p4 <= p_Val2_2_fu_898_p2(31 downto 16);
    row_rate_V_fu_452_p1 <= grp_fu_380_p2(32 - 1 downto 0);
    row_rd_5_fu_1160_p3 <= 
        sel_tmp_fu_1155_p2 when (tmp_48_reg_1967_pp0_iter34_reg(0) = '1') else 
        row_rd_fu_158;
    row_wr_1_fu_1098_p2 <= "1" when (sy_4_fu_1091_p3 = tmp_26_reg_1925) else "0";
    row_wr_2_fu_780_p2 <= "0" when (p_Val2_15_reg_287 = ap_const_lv15_0) else "1";
    row_wr_3_fu_1174_p3 <= 
        row_wr_4_fu_1167_p3 when (tmp_48_reg_1967_pp0_iter34_reg(0) = '1') else 
        row_wr_fu_154;
    row_wr_4_fu_1167_p3 <= 
        row_wr_1_fu_1098_p2 when (sel_tmp5_fu_1123_p2(0) = '1') else 
        row_wr_2_reg_1937;
    rows_fu_666_p3 <= 
        srows_reg_1813 when (tmp_14_fu_651_p2(0) = '1') else 
        tmp_21_cast_fu_662_p1;
    scols_fu_356_p1 <= p_src_cols_V_read(16 - 1 downto 0);
    sel_tmp5_fu_1123_p2 <= (tmp_48_reg_1967_pp0_iter34_reg and tmp_21_reg_1894);
    sel_tmp6_fu_1127_p3 <= 
        pre_fy_fu_166 when (sel_tmp5_fu_1123_p2(0) = '1') else 
        pre_fy_1_sy_fu_1109_p3;
    sel_tmp_fu_1155_p2 <= (tmp_27_reg_1931 or tmp17_fu_1149_p2);
    signbit_fu_1535_p3 <= p_Val2_44_cast_fu_1531_p2(47 downto 47);
    signbit_not_fu_1653_p2 <= (signbit_fu_1535_p3 xor ap_const_lv1_1);
    srows_fu_352_p1 <= p_src_rows_V_read(16 - 1 downto 0);
    sx_2_fu_944_p3 <= 
        p_6_fu_936_p3 when (tmp_66_fu_912_p3(0) = '1') else 
        ret_V_fu_902_p4;
    sx_fu_701_p2 <= std_logic_vector(signed(ap_const_lv16_FFFF) + signed(scols_reg_1821));
    sy_3_fu_994_p3 <= 
        p_7_fu_986_p3 when (tmp_68_fu_962_p3(0) = '1') else 
        ret_V_2_fu_952_p4;
    sy_4_fu_1091_p3 <= 
        sy_reg_1889 when (tmp_47_fu_1086_p2(0) = '1') else 
        sy_3_fu_994_p3;
    sy_fu_712_p2 <= std_logic_vector(signed(ap_const_lv16_FFFF) + signed(srows_reg_1813));
    tmp17_fu_1149_p2 <= (sel_tmp5_fu_1123_p2 or not_1_fu_1103_p2);
    tmp18_fu_1212_p2 <= (tmp_22_reg_1899 or not_s_fu_1192_p2);
    tmp19_fu_1515_p2 <= std_logic_vector(unsigned(tmp_63_cast_fu_1506_p1) + unsigned(tmp_1268_cast_cast_fu_1512_p1));
    tmp20_fu_1500_p0 <= OP2_V_6_fu_1469_p1(20 - 1 downto 0);
    tmp20_fu_1500_p1 <= p_Val2_31_fu_1490_p2;
    tmp20_fu_1500_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp20_fu_1500_p0) * signed(tmp20_fu_1500_p1))), 48));
    tmp29_cast_fu_1521_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp19_fu_1515_p2),50));
    tmp_10_fu_547_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_61_fu_539_p3),20));
        tmp_11_cast_fu_449_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(srows_reg_1813),17));

    tmp_11_fu_605_p3 <= 
        p_neg_t1_fu_585_p2 when (tmp_62_fu_557_p3(0) = '1') else 
        tmp_32_fu_601_p1;
    tmp_1268_cast_cast_fu_1512_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_29_reg_2122),49));
    tmp_12_fu_641_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_63_fu_633_p3),20));
    tmp_13_fu_507_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_lshr_f_fu_497_p4),32));
    tmp_14_fu_651_p2 <= "1" when (signed(srows_reg_1813) > signed(drows_fu_443_p1)) else "0";
    tmp_15_fu_656_p2 <= std_logic_vector(unsigned(ap_const_lv7_1) + unsigned(drows_cast_fu_446_p1));
    tmp_16_fu_581_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_lshr1_fu_571_p4),32));
    tmp_17_fu_673_p2 <= "1" when (signed(scols_reg_1821) > signed(dcols_fu_437_p1)) else "0";
        tmp_18_cast_fu_456_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(scols_reg_1821),17));

    tmp_18_fu_678_p2 <= std_logic_vector(unsigned(ap_const_lv7_1) + unsigned(dcols_cast_fu_440_p1));
    tmp_19_fu_695_p2 <= std_logic_vector(signed(ap_const_lv17_1FFFF) + signed(tmp_18_cast_fu_456_p1));
    tmp_20_fu_706_p2 <= std_logic_vector(signed(ap_const_lv17_1FFFF) + signed(tmp_11_cast_fu_449_p1));
        tmp_21_cast_fu_662_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_15_fu_656_p2),16));

    tmp_21_fu_717_p2 <= "1" when (signed(row_rate_V_fu_452_p1) > signed(ap_const_lv32_10000)) else "0";
    tmp_22_fu_723_p2 <= "1" when (signed(col_rate_V_fu_459_p1) > signed(ap_const_lv32_10000)) else "0";
        tmp_23_cast_fu_684_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_18_fu_678_p2),16));

    tmp_23_fu_729_p3 <= (p_Val2_17_fu_551_p2 & ap_const_lv6_0);
    tmp_24_fu_741_p3 <= (p_Val2_18_fu_645_p2 & ap_const_lv6_0);
    tmp_25_fu_757_p2 <= "1" when (signed(i_op_assign_15_cast_fu_753_p1) < signed(rows_reg_1861)) else "0";
        tmp_26_cast_fu_519_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_3_fu_511_p3),33));

    tmp_26_fu_768_p2 <= std_logic_vector(unsigned(i_op_assign_15_cast_fu_753_p1) + unsigned(ap_const_lv16_FFFF));
    tmp_27_fu_774_p2 <= "1" when (p_Val2_15_reg_287 = ap_const_lv15_0) else "0";
    tmp_28_fu_786_p3 <= (p_Val2_15_reg_287 & ap_const_lv16_0);
    tmp_29_fu_802_p2 <= "1" when (signed(i_op_assign_cast_fu_798_p1) < signed(cols_reg_1866)) else "0";
    tmp_2_fu_360_p1 <= p_dst_rows_V_read;
    tmp_2_fu_360_p3 <= (tmp_2_fu_360_p1 & ap_const_lv16_0);
        tmp_30_cast_fu_613_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_11_fu_605_p3),33));

    tmp_32_fu_601_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_lshr_f1_fu_591_p4),32));
    tmp_33_fu_817_p3 <= (p_Val2_16_reg_298 & ap_const_lv16_0);
    tmp_35_fu_846_p2 <= std_logic_vector(unsigned(i_op_assign_cast_reg_1947_pp0_iter32_reg) + unsigned(ap_const_lv16_FFFF));
    tmp_36_fu_924_p2 <= "1" when (tmp_67_fu_920_p1 = ap_const_lv16_0) else "0";
    tmp_37_fu_974_p2 <= "1" when (tmp_69_fu_970_p1 = ap_const_lv16_0) else "0";
        tmp_38_fu_1002_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_2_fu_898_p2),33));

    tmp_39_fu_1006_p3 <= (sx_2_fu_944_p3 & ap_const_lv16_0);
    tmp_3_fu_511_p3 <= 
        p_neg_t_fu_491_p2 when (tmp_60_fu_463_p3(0) = '1') else 
        tmp_13_fu_507_p1;
    tmp_3_i_i_fu_1561_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_74_fu_1553_p3),8));
    tmp_40_fu_1024_p2 <= "1" when (signed(r_V_6_fu_1018_p2) > signed(ap_const_lv33_0)) else "0";
    tmp_41_fu_1339_p3 <= (tmp_70_reg_2004_pp0_iter36_reg & ap_const_lv2_0);
        tmp_42_fu_1034_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_3_fu_894_p2),33));

    tmp_43_fu_1038_p3 <= (sy_3_fu_994_p3 & ap_const_lv16_0);
    tmp_44_fu_1056_p2 <= "1" when (signed(r_V_7_fu_1050_p2) > signed(ap_const_lv33_0)) else "0";
    tmp_45_fu_1353_p3 <= (tmp_71_reg_2014_pp0_iter36_reg & ap_const_lv2_0);
    tmp_46_fu_1070_p2 <= "1" when (signed(tmp_74_cast_fu_1066_p1) > signed(tmp_19_reg_1871)) else "0";
    tmp_47_cast_fu_794_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_28_fu_786_p3),32));
    tmp_47_fu_1086_p2 <= "1" when (signed(tmp_76_cast_fu_1082_p1) > signed(tmp_20_reg_1883)) else "0";
    tmp_48_fu_834_p2 <= "1" when (p_Val2_16_reg_298 = ap_const_lv15_0) else "0";
    tmp_49_fu_1181_p2 <= std_logic_vector(signed(ap_const_lv16_FFFF) + signed(i_op_assign_cast_reg_1947_pp0_iter34_reg));
        tmp_50_fu_1233_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_2_fu_1116_p3),64));

    tmp_51_fu_1244_p2 <= "1" when (signed(tmp_84_cast_fu_1240_p1) < signed(tmp_20_reg_1883)) else "0";
    tmp_52_fu_1253_p2 <= "1" when (signed(tmp_86_cast_fu_1249_p1) < signed(tmp_19_reg_1871)) else "0";
    tmp_53_fu_1262_p2 <= "1" when (signed(tmp_88_cast_fu_1258_p1) < signed(tmp_19_reg_1871)) else "0";
    tmp_55_fu_1509_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_28_reg_2117),50));
        tmp_57_cast_fu_737_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_23_fu_729_p3),32));

        tmp_59_cast_fu_749_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_24_fu_741_p3),32));

    tmp_60_fu_463_p3 <= grp_fu_380_p2(31 downto 31);
    tmp_61_fu_539_p3 <= p_Val2_8_fu_523_p2(5 downto 5);
    tmp_62_fu_557_p3 <= grp_fu_406_p2(31 downto 31);
    tmp_63_cast_fu_1506_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_27_reg_2111),49));
    tmp_63_fu_633_p3 <= p_Val2_12_fu_617_p2(5 downto 5);
        tmp_64_cast_fu_1014_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_39_fu_1006_p3),33));

    tmp_64_fu_851_p1 <= grp_fu_813_p2(16 - 1 downto 0);
    tmp_65_fu_856_p1 <= grp_fu_829_p2(16 - 1 downto 0);
    tmp_66_fu_912_p3 <= p_Val2_2_fu_898_p2(31 downto 31);
    tmp_67_fu_920_p1 <= p_Val2_2_fu_898_p2(16 - 1 downto 0);
    tmp_68_fu_962_p3 <= p_Val2_3_fu_894_p2(31 downto 31);
    tmp_69_fu_970_p1 <= p_Val2_3_fu_894_p2(16 - 1 downto 0);
        tmp_70_cast_fu_1046_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_43_fu_1038_p3),33));

    tmp_70_fu_1030_p1 <= r_V_6_fu_1018_p2(18 - 1 downto 0);
    tmp_71_fu_1062_p1 <= r_V_7_fu_1050_p2(18 - 1 downto 0);
        tmp_74_cast_fu_1066_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sx_2_fu_944_p3),17));

    tmp_74_fu_1553_p3 <= p_Val2_44_cast_fu_1531_p2(35 downto 35);
    tmp_75_fu_1565_p3 <= p_Val2_44_cast_fu_1531_p2(43 downto 43);
        tmp_76_cast_fu_1082_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sy_3_fu_994_p3),17));

    tmp_76_fu_1579_p3 <= p_Val2_33_fu_1573_p2(7 downto 7);
    tmp_7_fu_487_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_lshr_fu_477_p4),32));
        tmp_84_cast_fu_1240_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sy_4_fu_1091_p3),17));

        tmp_86_cast_fu_1249_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(pre_fx_1_fu_1075_p3),17));

        tmp_88_cast_fu_1258_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(pre_fx_1_fu_1075_p3),17));

    tmp_8_i_i_fu_1587_p2 <= (tmp_76_fu_1579_p3 xor ap_const_lv1_1);
    tmp_9_fu_386_p1 <= p_dst_cols_V_read;
    tmp_9_fu_386_p3 <= (tmp_9_fu_386_p1 & ap_const_lv16_0);
    tmp_i_i_fu_1635_p2 <= (p_38_i_i_i_fu_1629_p2 xor ap_const_lv1_1);
    u1_V_fu_1367_p2 <= std_logic_vector(unsigned(ap_const_lv20_40000) - unsigned(u_V_fu_1346_p3));
    u_V_fu_1346_p3 <= 
        tmp_41_fu_1339_p3 when (tmp_40_reg_1999_pp0_iter36_reg(0) = '1') else 
        ap_const_lv20_0;
    v1_V_fu_1373_p2 <= std_logic_vector(unsigned(ap_const_lv20_40000) - unsigned(v_V_2_fu_1360_p3));
    v_V_2_fu_1360_p3 <= 
        tmp_45_fu_1353_p3 when (tmp_44_reg_2009_pp0_iter36_reg(0) = '1') else 
        ap_const_lv20_0;
    v_V_fu_1386_p3 <= 
        ap_const_lv20_0 when (tmp_47_reg_2024_pp0_iter36_reg(0) = '1') else 
        v_V_2_fu_1360_p3;
    x_1_fu_1267_p2 <= std_logic_vector(signed(x_2_fu_1116_p3) + signed(ap_const_lv16_1));
    x_2_fu_1116_p3 <= 
        ap_const_lv16_0 when (tmp_48_reg_1967_pp0_iter34_reg(0) = '1') else 
        x_fu_170;
end behav;
