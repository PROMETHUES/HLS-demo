// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Conv10 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        src_val_V_address0,
        src_val_V_ce0,
        src_val_V_q0,
        src_val_V_offset,
        kernel_val_0_V_0_read,
        kernel_val_0_V_1_read,
        kernel_val_0_V_2_read,
        kernel_val_0_V_3_read,
        kernel_val_0_V_4_read,
        kernel_val_1_V_0_read,
        kernel_val_1_V_1_read,
        kernel_val_1_V_2_read,
        kernel_val_1_V_3_read,
        kernel_val_1_V_4_read,
        kernel_val_2_V_0_read,
        kernel_val_2_V_1_read,
        kernel_val_2_V_2_read,
        kernel_val_2_V_3_read,
        kernel_val_2_V_4_read,
        kernel_val_3_V_0_read,
        kernel_val_3_V_1_read,
        kernel_val_3_V_2_read,
        kernel_val_3_V_3_read,
        kernel_val_3_V_4_read,
        kernel_val_4_V_0_read,
        kernel_val_4_V_1_read,
        kernel_val_4_V_2_read,
        kernel_val_4_V_3_read,
        kernel_val_4_V_4_read,
        dst_val_V_address0,
        dst_val_V_ce0,
        dst_val_V_we0,
        dst_val_V_d0
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state10 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] src_val_V_address0;
output   src_val_V_ce0;
input  [31:0] src_val_V_q0;
input  [2:0] src_val_V_offset;
input  [31:0] kernel_val_0_V_0_read;
input  [31:0] kernel_val_0_V_1_read;
input  [31:0] kernel_val_0_V_2_read;
input  [31:0] kernel_val_0_V_3_read;
input  [31:0] kernel_val_0_V_4_read;
input  [31:0] kernel_val_1_V_0_read;
input  [31:0] kernel_val_1_V_1_read;
input  [31:0] kernel_val_1_V_2_read;
input  [31:0] kernel_val_1_V_3_read;
input  [31:0] kernel_val_1_V_4_read;
input  [31:0] kernel_val_2_V_0_read;
input  [31:0] kernel_val_2_V_1_read;
input  [31:0] kernel_val_2_V_2_read;
input  [31:0] kernel_val_2_V_3_read;
input  [31:0] kernel_val_2_V_4_read;
input  [31:0] kernel_val_3_V_0_read;
input  [31:0] kernel_val_3_V_1_read;
input  [31:0] kernel_val_3_V_2_read;
input  [31:0] kernel_val_3_V_3_read;
input  [31:0] kernel_val_3_V_4_read;
input  [31:0] kernel_val_4_V_0_read;
input  [31:0] kernel_val_4_V_1_read;
input  [31:0] kernel_val_4_V_2_read;
input  [31:0] kernel_val_4_V_3_read;
input  [31:0] kernel_val_4_V_4_read;
output  [5:0] dst_val_V_address0;
output   dst_val_V_ce0;
output   dst_val_V_we0;
output  [31:0] dst_val_V_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg src_val_V_ce0;
reg dst_val_V_ce0;
reg dst_val_V_we0;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [3:0] j_reg_475;
wire  signed [8:0] tmp_221_cast_fu_516_p1;
reg  signed [8:0] tmp_221_cast_reg_1830;
wire  signed [47:0] OP2_V_0_cast_fu_520_p1;
reg  signed [47:0] OP2_V_0_cast_reg_1835;
wire  signed [47:0] OP2_V_0_1_fu_524_p1;
reg  signed [47:0] OP2_V_0_1_reg_1840;
wire  signed [47:0] OP2_V_0_2_fu_528_p1;
reg  signed [47:0] OP2_V_0_2_reg_1845;
wire  signed [47:0] OP2_V_0_3_fu_532_p1;
reg  signed [47:0] OP2_V_0_3_reg_1850;
wire  signed [47:0] OP2_V_0_4_fu_536_p1;
reg  signed [47:0] OP2_V_0_4_reg_1855;
wire  signed [47:0] OP2_V_1_fu_540_p1;
reg  signed [47:0] OP2_V_1_reg_1860;
wire  signed [47:0] OP2_V_1_1_fu_544_p1;
reg  signed [47:0] OP2_V_1_1_reg_1865;
wire  signed [47:0] OP2_V_1_2_fu_548_p1;
reg  signed [47:0] OP2_V_1_2_reg_1870;
wire  signed [47:0] OP2_V_1_3_fu_552_p1;
reg  signed [47:0] OP2_V_1_3_reg_1875;
wire  signed [47:0] OP2_V_1_4_fu_556_p1;
reg  signed [47:0] OP2_V_1_4_reg_1880;
wire  signed [47:0] OP2_V_2_fu_560_p1;
reg  signed [47:0] OP2_V_2_reg_1885;
wire  signed [47:0] OP2_V_2_1_fu_564_p1;
reg  signed [47:0] OP2_V_2_1_reg_1890;
wire  signed [47:0] OP2_V_2_2_fu_568_p1;
reg  signed [47:0] OP2_V_2_2_reg_1895;
wire  signed [47:0] OP2_V_2_3_fu_572_p1;
reg  signed [47:0] OP2_V_2_3_reg_1900;
wire  signed [47:0] OP2_V_2_4_fu_576_p1;
reg  signed [47:0] OP2_V_2_4_reg_1905;
wire  signed [47:0] OP2_V_3_fu_580_p1;
reg  signed [47:0] OP2_V_3_reg_1910;
wire  signed [47:0] OP2_V_3_1_fu_584_p1;
reg  signed [47:0] OP2_V_3_1_reg_1915;
wire  signed [47:0] OP2_V_3_2_fu_588_p1;
reg  signed [47:0] OP2_V_3_2_reg_1920;
wire  signed [47:0] OP2_V_3_3_fu_592_p1;
reg  signed [47:0] OP2_V_3_3_reg_1925;
wire  signed [47:0] OP2_V_3_4_fu_596_p1;
reg  signed [47:0] OP2_V_3_4_reg_1930;
wire  signed [47:0] OP2_V_4_fu_600_p1;
reg  signed [47:0] OP2_V_4_reg_1935;
wire  signed [47:0] OP2_V_4_1_fu_604_p1;
reg  signed [47:0] OP2_V_4_1_reg_1940;
wire  signed [47:0] OP2_V_4_2_fu_608_p1;
reg  signed [47:0] OP2_V_4_2_reg_1945;
wire  signed [47:0] OP2_V_4_3_fu_612_p1;
reg  signed [47:0] OP2_V_4_3_reg_1950;
wire  signed [47:0] OP2_V_4_4_fu_616_p1;
reg  signed [47:0] OP2_V_4_4_reg_1955;
wire   [0:0] exitcond_fu_620_p2;
wire    ap_CS_fsm_state2;
wire   [3:0] i_15_fu_626_p2;
reg   [3:0] i_15_reg_1964;
wire   [10:0] tmp_203_fu_661_p2;
reg   [10:0] tmp_203_reg_1969;
wire   [0:0] icmp_fu_677_p2;
reg   [0:0] icmp_reg_1974;
wire  signed [7:0] tmp_227_cast_fu_697_p1;
reg  signed [7:0] tmp_227_cast_reg_1979;
wire   [0:0] exitcond3_fu_701_p2;
reg   [0:0] exitcond3_reg_1984;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state6_pp0_stage0_iter3;
wire    ap_block_state7_pp0_stage0_iter4;
wire    ap_block_state8_pp0_stage0_iter5;
wire    ap_block_state9_pp0_stage0_iter6;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] exitcond3_reg_1984_pp0_iter1_reg;
reg   [0:0] exitcond3_reg_1984_pp0_iter2_reg;
reg   [0:0] exitcond3_reg_1984_pp0_iter3_reg;
wire   [3:0] j_13_fu_707_p2;
reg    ap_enable_reg_pp0_iter0;
reg   [3:0] LineBuffer_val_1_V_s_reg_1998;
reg   [3:0] LineBuffer_val_2_V_s_reg_2004;
reg   [3:0] LineBuffer_val_3_V_s_reg_2010;
reg   [3:0] LineBuffer_val_4_V_s_reg_2016;
wire   [0:0] or_cond_fu_751_p2;
reg   [0:0] or_cond_reg_2022;
reg   [0:0] or_cond_reg_2022_pp0_iter1_reg;
reg   [0:0] or_cond_reg_2022_pp0_iter2_reg;
reg   [0:0] or_cond_reg_2022_pp0_iter3_reg;
reg   [0:0] or_cond_reg_2022_pp0_iter4_reg;
reg   [0:0] or_cond_reg_2022_pp0_iter5_reg;
wire   [3:0] tmp_159_fu_756_p2;
reg   [3:0] tmp_159_reg_2026;
reg   [3:0] tmp_159_reg_2026_pp0_iter1_reg;
reg   [3:0] tmp_159_reg_2026_pp0_iter2_reg;
reg   [3:0] tmp_159_reg_2026_pp0_iter3_reg;
reg   [3:0] tmp_159_reg_2026_pp0_iter4_reg;
reg   [3:0] tmp_159_reg_2026_pp0_iter5_reg;
reg  signed [31:0] BlockBuffer_val_1_V_16_reg_2031;
reg  signed [31:0] BlockBuffer_val_1_V_17_reg_2036;
reg  signed [31:0] BlockBuffer_val_1_V_18_reg_2041;
reg  signed [31:0] BlockBuffer_val_2_V_12_reg_2046;
reg  signed [31:0] BlockBuffer_val_2_V_12_reg_2046_pp0_iter2_reg;
reg  signed [31:0] BlockBuffer_val_2_V_13_reg_2052;
reg  signed [31:0] BlockBuffer_val_2_V_13_reg_2052_pp0_iter2_reg;
reg  signed [31:0] BlockBuffer_val_2_V_14_reg_2057;
reg  signed [31:0] BlockBuffer_val_2_V_14_reg_2057_pp0_iter2_reg;
reg  signed [31:0] BlockBuffer_val_3_V_12_reg_2062;
reg  signed [31:0] BlockBuffer_val_3_V_12_reg_2062_pp0_iter2_reg;
reg  signed [31:0] BlockBuffer_val_3_V_12_reg_2062_pp0_iter3_reg;
reg  signed [31:0] BlockBuffer_val_3_V_13_reg_2068;
reg  signed [31:0] BlockBuffer_val_3_V_13_reg_2068_pp0_iter2_reg;
reg  signed [31:0] BlockBuffer_val_3_V_13_reg_2068_pp0_iter3_reg;
reg  signed [31:0] BlockBuffer_val_3_V_14_reg_2073;
reg  signed [31:0] BlockBuffer_val_3_V_14_reg_2073_pp0_iter2_reg;
reg  signed [31:0] BlockBuffer_val_3_V_14_reg_2073_pp0_iter3_reg;
reg  signed [31:0] BlockBuffer_val_4_V_12_reg_2078;
reg  signed [31:0] BlockBuffer_val_4_V_12_reg_2078_pp0_iter2_reg;
reg  signed [31:0] BlockBuffer_val_4_V_12_reg_2078_pp0_iter3_reg;
reg  signed [31:0] BlockBuffer_val_4_V_12_reg_2078_pp0_iter4_reg;
reg  signed [31:0] BlockBuffer_val_4_V_13_reg_2084;
reg  signed [31:0] BlockBuffer_val_4_V_13_reg_2084_pp0_iter2_reg;
reg  signed [31:0] BlockBuffer_val_4_V_13_reg_2084_pp0_iter3_reg;
reg  signed [31:0] BlockBuffer_val_4_V_13_reg_2084_pp0_iter4_reg;
reg  signed [31:0] BlockBuffer_val_4_V_14_reg_2089;
reg  signed [31:0] BlockBuffer_val_4_V_14_reg_2089_pp0_iter2_reg;
reg  signed [31:0] BlockBuffer_val_4_V_14_reg_2089_pp0_iter3_reg;
reg  signed [31:0] BlockBuffer_val_4_V_14_reg_2089_pp0_iter4_reg;
wire   [31:0] LineBuffer_val_2_V_q0;
reg  signed [31:0] BlockBuffer_val_1_V_19_reg_2094;
reg    ap_enable_reg_pp0_iter1;
wire   [31:0] LineBuffer_val_3_V_q0;
reg  signed [31:0] BlockBuffer_val_2_V_15_reg_2099;
reg  signed [31:0] BlockBuffer_val_2_V_15_reg_2099_pp0_iter2_reg;
wire   [31:0] LineBuffer_val_4_V_q0;
reg  signed [31:0] BlockBuffer_val_3_V_15_reg_2104;
reg  signed [31:0] BlockBuffer_val_3_V_15_reg_2104_pp0_iter2_reg;
reg  signed [31:0] BlockBuffer_val_3_V_15_reg_2104_pp0_iter3_reg;
reg  signed [31:0] BlockBuffer_val_4_V_15_reg_2109;
reg  signed [31:0] BlockBuffer_val_4_V_15_reg_2109_pp0_iter2_reg;
reg  signed [31:0] BlockBuffer_val_4_V_15_reg_2109_pp0_iter3_reg;
reg  signed [31:0] BlockBuffer_val_4_V_15_reg_2109_pp0_iter4_reg;
reg  signed [31:0] BlockBuffer_val_4_V_15_reg_2109_pp0_iter5_reg;
wire   [47:0] p_Val2_77_0_3_fu_892_p2;
reg   [47:0] p_Val2_77_0_3_reg_2114;
reg   [31:0] tmp_208_reg_2119;
wire   [47:0] p_Val2_77_0_4_fu_911_p2;
reg   [47:0] p_Val2_77_0_4_reg_2124;
wire   [47:0] p_Val2_77_1_fu_920_p2;
reg   [47:0] p_Val2_77_1_reg_2129;
wire   [47:0] p_Val2_77_1_3_fu_1138_p2;
reg   [47:0] p_Val2_77_1_3_reg_2134;
reg   [31:0] tmp_215_reg_2139;
wire   [47:0] p_Val2_77_1_4_fu_1156_p2;
reg   [47:0] p_Val2_77_1_4_reg_2144;
wire   [47:0] p_Val2_77_2_fu_1165_p2;
reg   [47:0] p_Val2_77_2_reg_2149;
wire   [47:0] p_Val2_77_2_3_fu_1302_p2;
reg   [47:0] p_Val2_77_2_3_reg_2154;
reg   [31:0] tmp_220_reg_2159;
wire   [47:0] p_Val2_77_2_4_fu_1320_p2;
reg   [47:0] p_Val2_77_2_4_reg_2164;
wire   [47:0] p_Val2_77_3_fu_1329_p2;
reg   [47:0] p_Val2_77_3_reg_2169;
wire   [47:0] p_Val2_77_3_3_fu_1466_p2;
reg   [47:0] p_Val2_77_3_3_reg_2174;
reg   [31:0] tmp_225_reg_2179;
wire   [47:0] p_Val2_77_3_4_fu_1484_p2;
reg   [47:0] p_Val2_77_3_4_reg_2184;
wire   [47:0] p_Val2_77_4_fu_1493_p2;
reg   [47:0] p_Val2_77_4_reg_2189;
wire   [47:0] p_Val2_77_4_3_fu_1627_p2;
reg   [47:0] p_Val2_77_4_3_reg_2194;
reg   [31:0] tmp_230_reg_2199;
wire    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter2;
reg    ap_condition_pp0_exit_iter1_state4;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
wire   [3:0] LineBuffer_val_1_V_address0;
reg    LineBuffer_val_1_V_ce0;
wire   [31:0] LineBuffer_val_1_V_q0;
reg    LineBuffer_val_1_V_ce1;
reg    LineBuffer_val_1_V_we1;
wire   [3:0] LineBuffer_val_2_V_address0;
reg    LineBuffer_val_2_V_ce0;
reg    LineBuffer_val_2_V_ce1;
reg    LineBuffer_val_2_V_we1;
wire   [3:0] LineBuffer_val_3_V_address0;
reg    LineBuffer_val_3_V_ce0;
reg    LineBuffer_val_3_V_ce1;
reg    LineBuffer_val_3_V_we1;
wire   [3:0] LineBuffer_val_4_V_address0;
reg    LineBuffer_val_4_V_ce0;
reg    LineBuffer_val_4_V_ce1;
reg    LineBuffer_val_4_V_we1;
reg   [3:0] i_reg_464;
wire    ap_CS_fsm_state10;
wire   [63:0] tmp_228_cast_fu_730_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] tmp_157_fu_713_p1;
wire  signed [63:0] tmp_253_cast_fu_1705_p1;
reg   [31:0] BlockBuffer_val_0_V_fu_118;
reg   [31:0] BlockBuffer_val_0_V_13_fu_122;
reg   [31:0] BlockBuffer_val_0_V_14_fu_126;
reg   [31:0] BlockBuffer_val_0_V_15_fu_130;
reg   [31:0] BlockBuffer_val_1_V_fu_134;
reg   [31:0] BlockBuffer_val_1_V_13_fu_138;
reg   [31:0] BlockBuffer_val_1_V_14_fu_142;
reg   [31:0] BlockBuffer_val_1_V_15_fu_146;
reg   [31:0] BlockBuffer_val_2_V_fu_150;
reg   [31:0] BlockBuffer_val_2_V_9_fu_154;
reg   [31:0] BlockBuffer_val_2_V_10_fu_158;
reg   [31:0] BlockBuffer_val_2_V_11_fu_162;
reg   [31:0] BlockBuffer_val_3_V_fu_166;
reg   [31:0] BlockBuffer_val_3_V_9_fu_170;
reg   [31:0] BlockBuffer_val_3_V_10_fu_174;
reg   [31:0] BlockBuffer_val_3_V_11_fu_178;
reg   [31:0] BlockBuffer_val_4_V_fu_182;
reg   [31:0] BlockBuffer_val_4_V_9_fu_186;
reg   [31:0] BlockBuffer_val_4_V_10_fu_190;
reg   [31:0] BlockBuffer_val_4_V_11_fu_194;
wire   [6:0] tmp_s_fu_486_p3;
wire   [4:0] tmp_200_fu_498_p3;
wire   [7:0] p_shl_cast_fu_494_p1;
wire   [7:0] p_shl1_cast_fu_506_p1;
wire   [7:0] tmp_201_fu_510_p2;
wire   [8:0] tmp_cast_fu_632_p1;
wire   [8:0] tmp_202_fu_636_p2;
wire   [6:0] tmp_fu_641_p1;
wire   [10:0] p_shl2_cast_fu_645_p3;
wire   [10:0] p_shl3_cast_fu_653_p3;
wire   [1:0] tmp_209_fu_667_p4;
wire   [3:0] tmp_155_fu_683_p2;
wire   [6:0] tmp_204_fu_689_p3;
wire   [10:0] tmp_157_cast_fu_721_p1;
wire   [10:0] tmp_205_fu_725_p2;
wire   [1:0] tmp_210_fu_735_p4;
wire   [0:0] icmp3_fu_745_p2;
wire  signed [31:0] OP1_V_0_cast_fu_813_p0;
wire  signed [31:0] p_Val2_s_fu_817_p0;
wire  signed [31:0] p_Val2_s_fu_817_p1;
wire  signed [31:0] OP1_V_0_1_fu_822_p0;
wire  signed [31:0] p_Val2_77_0_1_fu_826_p0;
wire  signed [31:0] p_Val2_77_0_1_fu_826_p1;
wire   [47:0] p_Val2_s_fu_817_p2;
wire   [31:0] tmp_206_fu_831_p4;
wire   [47:0] tmp_460_0_1_fu_841_p3;
wire   [47:0] p_Val2_77_0_1_fu_826_p2;
wire  signed [31:0] OP1_V_0_2_fu_855_p0;
wire  signed [31:0] p_Val2_77_0_2_fu_859_p0;
wire  signed [31:0] p_Val2_77_0_2_fu_859_p1;
wire   [47:0] p_Val2_78_0_1_fu_849_p2;
wire   [31:0] tmp_207_fu_864_p4;
wire   [47:0] tmp_460_0_2_fu_874_p3;
wire   [47:0] p_Val2_77_0_2_fu_859_p2;
wire  signed [31:0] OP1_V_0_3_fu_888_p0;
wire  signed [31:0] p_Val2_77_0_3_fu_892_p0;
wire  signed [31:0] p_Val2_77_0_3_fu_892_p1;
wire   [47:0] p_Val2_78_0_2_fu_882_p2;
wire  signed [31:0] OP1_V_0_4_fu_907_p0;
wire  signed [31:0] p_Val2_77_0_4_fu_911_p0;
wire  signed [31:0] p_Val2_77_0_4_fu_911_p1;
wire  signed [31:0] OP1_V_1_fu_916_p0;
wire  signed [31:0] p_Val2_77_1_fu_920_p0;
wire  signed [31:0] p_Val2_77_1_fu_920_p1;
wire   [47:0] tmp_460_0_3_fu_1013_p3;
wire   [47:0] p_Val2_78_0_3_fu_1020_p2;
wire   [31:0] tmp_211_fu_1025_p4;
wire   [47:0] tmp_460_0_4_fu_1035_p3;
wire   [47:0] p_Val2_78_0_4_fu_1043_p2;
wire   [31:0] tmp_212_fu_1048_p4;
wire   [47:0] tmp_460_1_fu_1058_p3;
wire  signed [31:0] p_Val2_77_1_1_fu_1074_p0;
wire  signed [31:0] p_Val2_77_1_1_fu_1074_p1;
wire   [47:0] p_Val2_78_1_fu_1066_p2;
wire   [31:0] tmp_213_fu_1079_p4;
wire   [47:0] tmp_460_1_1_fu_1089_p3;
wire   [47:0] p_Val2_77_1_1_fu_1074_p2;
wire  signed [31:0] p_Val2_77_1_2_fu_1106_p0;
wire  signed [31:0] p_Val2_77_1_2_fu_1106_p1;
wire   [47:0] p_Val2_78_1_1_fu_1097_p2;
wire   [31:0] tmp_214_fu_1111_p4;
wire   [47:0] tmp_460_1_2_fu_1121_p3;
wire   [47:0] p_Val2_77_1_2_fu_1106_p2;
wire  signed [31:0] p_Val2_77_1_3_fu_1138_p0;
wire  signed [31:0] p_Val2_77_1_3_fu_1138_p1;
wire   [47:0] p_Val2_78_1_2_fu_1129_p2;
wire  signed [31:0] p_Val2_77_1_4_fu_1156_p0;
wire  signed [31:0] p_Val2_77_1_4_fu_1156_p1;
wire  signed [31:0] OP1_V_2_fu_1161_p0;
wire  signed [31:0] p_Val2_77_2_fu_1165_p0;
wire  signed [31:0] p_Val2_77_2_fu_1165_p1;
wire   [47:0] tmp_460_1_3_fu_1177_p3;
wire   [47:0] p_Val2_78_1_3_fu_1184_p2;
wire   [31:0] tmp_216_fu_1189_p4;
wire   [47:0] tmp_460_1_4_fu_1199_p3;
wire   [47:0] p_Val2_78_1_4_fu_1207_p2;
wire   [31:0] tmp_217_fu_1212_p4;
wire   [47:0] tmp_460_2_fu_1222_p3;
wire  signed [31:0] p_Val2_77_2_1_fu_1238_p0;
wire  signed [31:0] p_Val2_77_2_1_fu_1238_p1;
wire   [47:0] p_Val2_78_2_fu_1230_p2;
wire   [31:0] tmp_218_fu_1243_p4;
wire   [47:0] tmp_460_2_1_fu_1253_p3;
wire   [47:0] p_Val2_77_2_1_fu_1238_p2;
wire  signed [31:0] p_Val2_77_2_2_fu_1270_p0;
wire  signed [31:0] p_Val2_77_2_2_fu_1270_p1;
wire   [47:0] p_Val2_78_2_1_fu_1261_p2;
wire   [31:0] tmp_219_fu_1275_p4;
wire   [47:0] tmp_460_2_2_fu_1285_p3;
wire   [47:0] p_Val2_77_2_2_fu_1270_p2;
wire  signed [31:0] p_Val2_77_2_3_fu_1302_p0;
wire  signed [31:0] p_Val2_77_2_3_fu_1302_p1;
wire   [47:0] p_Val2_78_2_2_fu_1293_p2;
wire  signed [31:0] p_Val2_77_2_4_fu_1320_p0;
wire  signed [31:0] p_Val2_77_2_4_fu_1320_p1;
wire  signed [31:0] OP1_V_3_fu_1325_p0;
wire  signed [31:0] p_Val2_77_3_fu_1329_p0;
wire  signed [31:0] p_Val2_77_3_fu_1329_p1;
wire   [47:0] tmp_460_2_3_fu_1341_p3;
wire   [47:0] p_Val2_78_2_3_fu_1348_p2;
wire   [31:0] tmp_221_fu_1353_p4;
wire   [47:0] tmp_460_2_4_fu_1363_p3;
wire   [47:0] p_Val2_78_2_4_fu_1371_p2;
wire   [31:0] tmp_222_fu_1376_p4;
wire   [47:0] tmp_460_3_fu_1386_p3;
wire  signed [31:0] p_Val2_77_3_1_fu_1402_p0;
wire  signed [31:0] p_Val2_77_3_1_fu_1402_p1;
wire   [47:0] p_Val2_78_3_fu_1394_p2;
wire   [31:0] tmp_223_fu_1407_p4;
wire   [47:0] tmp_460_3_1_fu_1417_p3;
wire   [47:0] p_Val2_77_3_1_fu_1402_p2;
wire  signed [31:0] p_Val2_77_3_2_fu_1434_p0;
wire  signed [31:0] p_Val2_77_3_2_fu_1434_p1;
wire   [47:0] p_Val2_78_3_1_fu_1425_p2;
wire   [31:0] tmp_224_fu_1439_p4;
wire   [47:0] tmp_460_3_2_fu_1449_p3;
wire   [47:0] p_Val2_77_3_2_fu_1434_p2;
wire  signed [31:0] p_Val2_77_3_3_fu_1466_p0;
wire  signed [31:0] p_Val2_77_3_3_fu_1466_p1;
wire   [47:0] p_Val2_78_3_2_fu_1457_p2;
wire  signed [31:0] p_Val2_77_3_4_fu_1484_p0;
wire  signed [31:0] p_Val2_77_3_4_fu_1484_p1;
wire  signed [31:0] OP1_V_4_fu_1489_p0;
wire  signed [31:0] p_Val2_77_4_fu_1493_p0;
wire  signed [31:0] p_Val2_77_4_fu_1493_p1;
wire   [47:0] tmp_460_3_3_fu_1502_p3;
wire   [47:0] p_Val2_78_3_3_fu_1509_p2;
wire   [31:0] tmp_226_fu_1514_p4;
wire   [47:0] tmp_460_3_4_fu_1524_p3;
wire   [47:0] p_Val2_78_3_4_fu_1532_p2;
wire   [31:0] tmp_227_fu_1537_p4;
wire   [47:0] tmp_460_4_fu_1547_p3;
wire  signed [31:0] p_Val2_77_4_1_fu_1563_p0;
wire  signed [31:0] p_Val2_77_4_1_fu_1563_p1;
wire   [47:0] p_Val2_78_4_fu_1555_p2;
wire   [31:0] tmp_228_fu_1568_p4;
wire   [47:0] tmp_460_4_1_fu_1578_p3;
wire   [47:0] p_Val2_77_4_1_fu_1563_p2;
wire  signed [31:0] p_Val2_77_4_2_fu_1595_p0;
wire  signed [31:0] p_Val2_77_4_2_fu_1595_p1;
wire   [47:0] p_Val2_78_4_1_fu_1586_p2;
wire   [31:0] tmp_229_fu_1600_p4;
wire   [47:0] tmp_460_4_2_fu_1610_p3;
wire   [47:0] p_Val2_77_4_2_fu_1595_p2;
wire  signed [31:0] p_Val2_77_4_3_fu_1627_p0;
wire  signed [31:0] p_Val2_77_4_3_fu_1627_p1;
wire   [47:0] p_Val2_78_4_2_fu_1618_p2;
wire   [47:0] tmp_460_4_3_fu_1642_p3;
wire  signed [31:0] p_Val2_77_4_4_fu_1657_p0;
wire  signed [31:0] p_Val2_77_4_4_fu_1657_p1;
wire   [47:0] p_Val2_78_4_3_fu_1649_p2;
wire   [31:0] tmp_231_fu_1662_p4;
wire   [47:0] tmp_460_4_4_fu_1672_p3;
wire   [47:0] p_Val2_77_4_4_fu_1657_p2;
wire   [47:0] p_Val2_78_4_4_fu_1680_p2;
wire   [7:0] tmp_160_cast_fu_1697_p1;
wire   [7:0] tmp_232_fu_1700_p2;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
end

Conv10_LineBufferzec #(
    .DataWidth( 32 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
LineBuffer_val_1_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(LineBuffer_val_1_V_address0),
    .ce0(LineBuffer_val_1_V_ce0),
    .q0(LineBuffer_val_1_V_q0),
    .address1(LineBuffer_val_1_V_s_reg_1998),
    .ce1(LineBuffer_val_1_V_ce1),
    .we1(LineBuffer_val_1_V_we1),
    .d1(LineBuffer_val_2_V_q0)
);

Conv10_LineBufferzec #(
    .DataWidth( 32 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
LineBuffer_val_2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(LineBuffer_val_2_V_address0),
    .ce0(LineBuffer_val_2_V_ce0),
    .q0(LineBuffer_val_2_V_q0),
    .address1(LineBuffer_val_2_V_s_reg_2004),
    .ce1(LineBuffer_val_2_V_ce1),
    .we1(LineBuffer_val_2_V_we1),
    .d1(LineBuffer_val_3_V_q0)
);

Conv10_LineBufferzec #(
    .DataWidth( 32 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
LineBuffer_val_3_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(LineBuffer_val_3_V_address0),
    .ce0(LineBuffer_val_3_V_ce0),
    .q0(LineBuffer_val_3_V_q0),
    .address1(LineBuffer_val_3_V_s_reg_2010),
    .ce1(LineBuffer_val_3_V_ce1),
    .we1(LineBuffer_val_3_V_we1),
    .d1(LineBuffer_val_4_V_q0)
);

Conv10_LineBufferzec #(
    .DataWidth( 32 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
LineBuffer_val_4_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(LineBuffer_val_4_V_address0),
    .ce0(LineBuffer_val_4_V_ce0),
    .q0(LineBuffer_val_4_V_q0),
    .address1(LineBuffer_val_4_V_s_reg_2016),
    .ce1(LineBuffer_val_4_V_ce1),
    .we1(LineBuffer_val_4_V_we1),
    .d1(src_val_V_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond3_fu_701_p2 == 1'd1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_620_p2 == 1'd0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter1_state4)) begin
                ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter0;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_620_p2 == 1'd0))) begin
            ap_enable_reg_pp0_iter6 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        i_reg_464 <= i_15_reg_1964;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_464 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond3_fu_701_p2 == 1'd0))) begin
        j_reg_475 <= j_13_fu_707_p2;
    end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_620_p2 == 1'd0))) begin
        j_reg_475 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond3_reg_1984 == 1'd0))) begin
        BlockBuffer_val_0_V_13_fu_122 <= BlockBuffer_val_0_V_14_fu_126;
        BlockBuffer_val_0_V_14_fu_126 <= BlockBuffer_val_0_V_15_fu_130;
        BlockBuffer_val_0_V_15_fu_130 <= LineBuffer_val_1_V_q0;
        BlockBuffer_val_0_V_fu_118 <= BlockBuffer_val_0_V_13_fu_122;
        BlockBuffer_val_1_V_13_fu_138 <= BlockBuffer_val_1_V_14_fu_142;
        BlockBuffer_val_1_V_14_fu_142 <= BlockBuffer_val_1_V_15_fu_146;
        BlockBuffer_val_1_V_15_fu_146 <= LineBuffer_val_2_V_q0;
        BlockBuffer_val_1_V_19_reg_2094 <= LineBuffer_val_2_V_q0;
        BlockBuffer_val_1_V_fu_134 <= BlockBuffer_val_1_V_13_fu_138;
        BlockBuffer_val_2_V_10_fu_158 <= BlockBuffer_val_2_V_11_fu_162;
        BlockBuffer_val_2_V_11_fu_162 <= LineBuffer_val_3_V_q0;
        BlockBuffer_val_2_V_15_reg_2099 <= LineBuffer_val_3_V_q0;
        BlockBuffer_val_2_V_9_fu_154 <= BlockBuffer_val_2_V_10_fu_158;
        BlockBuffer_val_3_V_10_fu_174 <= BlockBuffer_val_3_V_11_fu_178;
        BlockBuffer_val_3_V_11_fu_178 <= LineBuffer_val_4_V_q0;
        BlockBuffer_val_3_V_15_reg_2104 <= LineBuffer_val_4_V_q0;
        BlockBuffer_val_3_V_9_fu_170 <= BlockBuffer_val_3_V_10_fu_174;
        BlockBuffer_val_4_V_10_fu_190 <= BlockBuffer_val_4_V_11_fu_194;
        BlockBuffer_val_4_V_11_fu_194 <= src_val_V_q0;
        BlockBuffer_val_4_V_9_fu_186 <= BlockBuffer_val_4_V_10_fu_190;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        BlockBuffer_val_1_V_16_reg_2031 <= BlockBuffer_val_1_V_13_fu_138;
        BlockBuffer_val_1_V_17_reg_2036 <= BlockBuffer_val_1_V_14_fu_142;
        BlockBuffer_val_1_V_18_reg_2041 <= BlockBuffer_val_1_V_15_fu_146;
        BlockBuffer_val_2_V_12_reg_2046 <= BlockBuffer_val_2_V_9_fu_154;
        BlockBuffer_val_2_V_13_reg_2052 <= BlockBuffer_val_2_V_10_fu_158;
        BlockBuffer_val_2_V_14_reg_2057 <= BlockBuffer_val_2_V_11_fu_162;
        BlockBuffer_val_3_V_12_reg_2062 <= BlockBuffer_val_3_V_9_fu_170;
        BlockBuffer_val_3_V_13_reg_2068 <= BlockBuffer_val_3_V_10_fu_174;
        BlockBuffer_val_3_V_14_reg_2073 <= BlockBuffer_val_3_V_11_fu_178;
        BlockBuffer_val_4_V_12_reg_2078 <= BlockBuffer_val_4_V_9_fu_186;
        BlockBuffer_val_4_V_13_reg_2084 <= BlockBuffer_val_4_V_10_fu_190;
        BlockBuffer_val_4_V_14_reg_2089 <= BlockBuffer_val_4_V_11_fu_194;
        exitcond3_reg_1984 <= exitcond3_fu_701_p2;
        exitcond3_reg_1984_pp0_iter1_reg <= exitcond3_reg_1984;
        or_cond_reg_2022_pp0_iter1_reg <= or_cond_reg_2022;
        tmp_159_reg_2026_pp0_iter1_reg <= tmp_159_reg_2026;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        BlockBuffer_val_2_V_12_reg_2046_pp0_iter2_reg <= BlockBuffer_val_2_V_12_reg_2046;
        BlockBuffer_val_2_V_13_reg_2052_pp0_iter2_reg <= BlockBuffer_val_2_V_13_reg_2052;
        BlockBuffer_val_2_V_14_reg_2057_pp0_iter2_reg <= BlockBuffer_val_2_V_14_reg_2057;
        BlockBuffer_val_2_V_15_reg_2099_pp0_iter2_reg <= BlockBuffer_val_2_V_15_reg_2099;
        BlockBuffer_val_3_V_12_reg_2062_pp0_iter2_reg <= BlockBuffer_val_3_V_12_reg_2062;
        BlockBuffer_val_3_V_12_reg_2062_pp0_iter3_reg <= BlockBuffer_val_3_V_12_reg_2062_pp0_iter2_reg;
        BlockBuffer_val_3_V_13_reg_2068_pp0_iter2_reg <= BlockBuffer_val_3_V_13_reg_2068;
        BlockBuffer_val_3_V_13_reg_2068_pp0_iter3_reg <= BlockBuffer_val_3_V_13_reg_2068_pp0_iter2_reg;
        BlockBuffer_val_3_V_14_reg_2073_pp0_iter2_reg <= BlockBuffer_val_3_V_14_reg_2073;
        BlockBuffer_val_3_V_14_reg_2073_pp0_iter3_reg <= BlockBuffer_val_3_V_14_reg_2073_pp0_iter2_reg;
        BlockBuffer_val_3_V_15_reg_2104_pp0_iter2_reg <= BlockBuffer_val_3_V_15_reg_2104;
        BlockBuffer_val_3_V_15_reg_2104_pp0_iter3_reg <= BlockBuffer_val_3_V_15_reg_2104_pp0_iter2_reg;
        BlockBuffer_val_4_V_12_reg_2078_pp0_iter2_reg <= BlockBuffer_val_4_V_12_reg_2078;
        BlockBuffer_val_4_V_12_reg_2078_pp0_iter3_reg <= BlockBuffer_val_4_V_12_reg_2078_pp0_iter2_reg;
        BlockBuffer_val_4_V_12_reg_2078_pp0_iter4_reg <= BlockBuffer_val_4_V_12_reg_2078_pp0_iter3_reg;
        BlockBuffer_val_4_V_13_reg_2084_pp0_iter2_reg <= BlockBuffer_val_4_V_13_reg_2084;
        BlockBuffer_val_4_V_13_reg_2084_pp0_iter3_reg <= BlockBuffer_val_4_V_13_reg_2084_pp0_iter2_reg;
        BlockBuffer_val_4_V_13_reg_2084_pp0_iter4_reg <= BlockBuffer_val_4_V_13_reg_2084_pp0_iter3_reg;
        BlockBuffer_val_4_V_14_reg_2089_pp0_iter2_reg <= BlockBuffer_val_4_V_14_reg_2089;
        BlockBuffer_val_4_V_14_reg_2089_pp0_iter3_reg <= BlockBuffer_val_4_V_14_reg_2089_pp0_iter2_reg;
        BlockBuffer_val_4_V_14_reg_2089_pp0_iter4_reg <= BlockBuffer_val_4_V_14_reg_2089_pp0_iter3_reg;
        BlockBuffer_val_4_V_15_reg_2109_pp0_iter2_reg <= BlockBuffer_val_4_V_15_reg_2109;
        BlockBuffer_val_4_V_15_reg_2109_pp0_iter3_reg <= BlockBuffer_val_4_V_15_reg_2109_pp0_iter2_reg;
        BlockBuffer_val_4_V_15_reg_2109_pp0_iter4_reg <= BlockBuffer_val_4_V_15_reg_2109_pp0_iter3_reg;
        BlockBuffer_val_4_V_15_reg_2109_pp0_iter5_reg <= BlockBuffer_val_4_V_15_reg_2109_pp0_iter4_reg;
        exitcond3_reg_1984_pp0_iter2_reg <= exitcond3_reg_1984_pp0_iter1_reg;
        exitcond3_reg_1984_pp0_iter3_reg <= exitcond3_reg_1984_pp0_iter2_reg;
        or_cond_reg_2022_pp0_iter2_reg <= or_cond_reg_2022_pp0_iter1_reg;
        or_cond_reg_2022_pp0_iter3_reg <= or_cond_reg_2022_pp0_iter2_reg;
        or_cond_reg_2022_pp0_iter4_reg <= or_cond_reg_2022_pp0_iter3_reg;
        or_cond_reg_2022_pp0_iter5_reg <= or_cond_reg_2022_pp0_iter4_reg;
        tmp_159_reg_2026_pp0_iter2_reg <= tmp_159_reg_2026_pp0_iter1_reg;
        tmp_159_reg_2026_pp0_iter3_reg <= tmp_159_reg_2026_pp0_iter2_reg;
        tmp_159_reg_2026_pp0_iter4_reg <= tmp_159_reg_2026_pp0_iter3_reg;
        tmp_159_reg_2026_pp0_iter5_reg <= tmp_159_reg_2026_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond3_reg_1984_pp0_iter1_reg == 1'd0))) begin
        BlockBuffer_val_2_V_fu_150 <= BlockBuffer_val_2_V_12_reg_2046;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond3_reg_1984_pp0_iter2_reg == 1'd0))) begin
        BlockBuffer_val_3_V_fu_166 <= BlockBuffer_val_3_V_12_reg_2062_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond3_reg_1984 == 1'd0))) begin
        BlockBuffer_val_4_V_15_reg_2109 <= src_val_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond3_reg_1984_pp0_iter3_reg == 1'd0))) begin
        BlockBuffer_val_4_V_fu_182 <= BlockBuffer_val_4_V_12_reg_2078_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond3_fu_701_p2 == 1'd0))) begin
        LineBuffer_val_1_V_s_reg_1998 <= tmp_157_fu_713_p1;
        LineBuffer_val_2_V_s_reg_2004 <= tmp_157_fu_713_p1;
        LineBuffer_val_3_V_s_reg_2010 <= tmp_157_fu_713_p1;
        LineBuffer_val_4_V_s_reg_2016 <= tmp_157_fu_713_p1;
        or_cond_reg_2022 <= or_cond_fu_751_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        OP2_V_0_1_reg_1840 <= OP2_V_0_1_fu_524_p1;
        OP2_V_0_2_reg_1845 <= OP2_V_0_2_fu_528_p1;
        OP2_V_0_3_reg_1850 <= OP2_V_0_3_fu_532_p1;
        OP2_V_0_4_reg_1855 <= OP2_V_0_4_fu_536_p1;
        OP2_V_0_cast_reg_1835 <= OP2_V_0_cast_fu_520_p1;
        OP2_V_1_1_reg_1865 <= OP2_V_1_1_fu_544_p1;
        OP2_V_1_2_reg_1870 <= OP2_V_1_2_fu_548_p1;
        OP2_V_1_3_reg_1875 <= OP2_V_1_3_fu_552_p1;
        OP2_V_1_4_reg_1880 <= OP2_V_1_4_fu_556_p1;
        OP2_V_1_reg_1860 <= OP2_V_1_fu_540_p1;
        OP2_V_2_1_reg_1890 <= OP2_V_2_1_fu_564_p1;
        OP2_V_2_2_reg_1895 <= OP2_V_2_2_fu_568_p1;
        OP2_V_2_3_reg_1900 <= OP2_V_2_3_fu_572_p1;
        OP2_V_2_4_reg_1905 <= OP2_V_2_4_fu_576_p1;
        OP2_V_2_reg_1885 <= OP2_V_2_fu_560_p1;
        OP2_V_3_1_reg_1915 <= OP2_V_3_1_fu_584_p1;
        OP2_V_3_2_reg_1920 <= OP2_V_3_2_fu_588_p1;
        OP2_V_3_3_reg_1925 <= OP2_V_3_3_fu_592_p1;
        OP2_V_3_4_reg_1930 <= OP2_V_3_4_fu_596_p1;
        OP2_V_3_reg_1910 <= OP2_V_3_fu_580_p1;
        OP2_V_4_1_reg_1940 <= OP2_V_4_1_fu_604_p1;
        OP2_V_4_2_reg_1945 <= OP2_V_4_2_fu_608_p1;
        OP2_V_4_3_reg_1950 <= OP2_V_4_3_fu_612_p1;
        OP2_V_4_4_reg_1955 <= OP2_V_4_4_fu_616_p1;
        OP2_V_4_reg_1935 <= OP2_V_4_fu_600_p1;
        tmp_221_cast_reg_1830[8 : 2] <= tmp_221_cast_fu_516_p1[8 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_15_reg_1964 <= i_15_fu_626_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_620_p2 == 1'd0))) begin
        icmp_reg_1974 <= icmp_fu_677_p2;
        tmp_203_reg_1969[10 : 2] <= tmp_203_fu_661_p2[10 : 2];
        tmp_227_cast_reg_1979[7 : 3] <= tmp_227_cast_fu_697_p1[7 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (or_cond_reg_2022 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond3_reg_1984 == 1'd0))) begin
        p_Val2_77_0_3_reg_2114 <= p_Val2_77_0_3_fu_892_p2;
        p_Val2_77_0_4_reg_2124 <= p_Val2_77_0_4_fu_911_p2;
        p_Val2_77_1_reg_2129 <= p_Val2_77_1_fu_920_p2;
        tmp_208_reg_2119 <= {{p_Val2_78_0_2_fu_882_p2[47:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_reg_2022_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_77_1_3_reg_2134 <= p_Val2_77_1_3_fu_1138_p2;
        p_Val2_77_1_4_reg_2144 <= p_Val2_77_1_4_fu_1156_p2;
        p_Val2_77_2_reg_2149 <= p_Val2_77_2_fu_1165_p2;
        tmp_215_reg_2139 <= {{p_Val2_78_1_2_fu_1129_p2[47:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_reg_2022_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_77_2_3_reg_2154 <= p_Val2_77_2_3_fu_1302_p2;
        p_Val2_77_2_4_reg_2164 <= p_Val2_77_2_4_fu_1320_p2;
        p_Val2_77_3_reg_2169 <= p_Val2_77_3_fu_1329_p2;
        tmp_220_reg_2159 <= {{p_Val2_78_2_2_fu_1293_p2[47:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_reg_2022_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_77_3_3_reg_2174 <= p_Val2_77_3_3_fu_1466_p2;
        p_Val2_77_3_4_reg_2184 <= p_Val2_77_3_4_fu_1484_p2;
        p_Val2_77_4_reg_2189 <= p_Val2_77_4_fu_1493_p2;
        tmp_225_reg_2179 <= {{p_Val2_78_3_2_fu_1457_p2[47:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_reg_2022_pp0_iter4_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_77_4_3_reg_2194 <= p_Val2_77_4_3_fu_1627_p2;
        tmp_230_reg_2199 <= {{p_Val2_78_4_2_fu_1618_p2[47:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (or_cond_fu_751_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond3_fu_701_p2 == 1'd0))) begin
        tmp_159_reg_2026 <= tmp_159_fu_756_p2;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        LineBuffer_val_1_V_ce0 = 1'b1;
    end else begin
        LineBuffer_val_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        LineBuffer_val_1_V_ce1 = 1'b1;
    end else begin
        LineBuffer_val_1_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond3_reg_1984 == 1'd0))) begin
        LineBuffer_val_1_V_we1 = 1'b1;
    end else begin
        LineBuffer_val_1_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        LineBuffer_val_2_V_ce0 = 1'b1;
    end else begin
        LineBuffer_val_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        LineBuffer_val_2_V_ce1 = 1'b1;
    end else begin
        LineBuffer_val_2_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond3_reg_1984 == 1'd0))) begin
        LineBuffer_val_2_V_we1 = 1'b1;
    end else begin
        LineBuffer_val_2_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        LineBuffer_val_3_V_ce0 = 1'b1;
    end else begin
        LineBuffer_val_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        LineBuffer_val_3_V_ce1 = 1'b1;
    end else begin
        LineBuffer_val_3_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond3_reg_1984 == 1'd0))) begin
        LineBuffer_val_3_V_we1 = 1'b1;
    end else begin
        LineBuffer_val_3_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        LineBuffer_val_4_V_ce0 = 1'b1;
    end else begin
        LineBuffer_val_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        LineBuffer_val_4_V_ce1 = 1'b1;
    end else begin
        LineBuffer_val_4_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond3_reg_1984 == 1'd0))) begin
        LineBuffer_val_4_V_we1 = 1'b1;
    end else begin
        LineBuffer_val_4_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_condition_pp0_exit_iter1_state4 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter1_state4 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_620_p2 == 1'd1)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_620_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dst_val_V_ce0 = 1'b1;
    end else begin
        dst_val_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (or_cond_reg_2022_pp0_iter5_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dst_val_V_we0 = 1'b1;
    end else begin
        dst_val_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_val_V_ce0 = 1'b1;
    end else begin
        src_val_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_620_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b0)) & ~((ap_enable_reg_pp0_iter5 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter6 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter5 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter6 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign LineBuffer_val_1_V_address0 = tmp_157_fu_713_p1;

assign LineBuffer_val_2_V_address0 = tmp_157_fu_713_p1;

assign LineBuffer_val_3_V_address0 = tmp_157_fu_713_p1;

assign LineBuffer_val_4_V_address0 = tmp_157_fu_713_p1;

assign OP1_V_0_1_fu_822_p0 = BlockBuffer_val_0_V_13_fu_122;

assign OP1_V_0_2_fu_855_p0 = BlockBuffer_val_0_V_14_fu_126;

assign OP1_V_0_3_fu_888_p0 = BlockBuffer_val_0_V_15_fu_130;

assign OP1_V_0_4_fu_907_p0 = LineBuffer_val_1_V_q0;

assign OP1_V_0_cast_fu_813_p0 = BlockBuffer_val_0_V_fu_118;

assign OP1_V_1_fu_916_p0 = BlockBuffer_val_1_V_fu_134;

assign OP1_V_2_fu_1161_p0 = BlockBuffer_val_2_V_fu_150;

assign OP1_V_3_fu_1325_p0 = BlockBuffer_val_3_V_fu_166;

assign OP1_V_4_fu_1489_p0 = BlockBuffer_val_4_V_fu_182;

assign OP2_V_0_1_fu_524_p1 = $signed(kernel_val_4_V_3_read);

assign OP2_V_0_2_fu_528_p1 = $signed(kernel_val_4_V_2_read);

assign OP2_V_0_3_fu_532_p1 = $signed(kernel_val_4_V_1_read);

assign OP2_V_0_4_fu_536_p1 = $signed(kernel_val_4_V_0_read);

assign OP2_V_0_cast_fu_520_p1 = $signed(kernel_val_4_V_4_read);

assign OP2_V_1_1_fu_544_p1 = $signed(kernel_val_3_V_3_read);

assign OP2_V_1_2_fu_548_p1 = $signed(kernel_val_3_V_2_read);

assign OP2_V_1_3_fu_552_p1 = $signed(kernel_val_3_V_1_read);

assign OP2_V_1_4_fu_556_p1 = $signed(kernel_val_3_V_0_read);

assign OP2_V_1_fu_540_p1 = $signed(kernel_val_3_V_4_read);

assign OP2_V_2_1_fu_564_p1 = $signed(kernel_val_2_V_3_read);

assign OP2_V_2_2_fu_568_p1 = $signed(kernel_val_2_V_2_read);

assign OP2_V_2_3_fu_572_p1 = $signed(kernel_val_2_V_1_read);

assign OP2_V_2_4_fu_576_p1 = $signed(kernel_val_2_V_0_read);

assign OP2_V_2_fu_560_p1 = $signed(kernel_val_2_V_4_read);

assign OP2_V_3_1_fu_584_p1 = $signed(kernel_val_1_V_3_read);

assign OP2_V_3_2_fu_588_p1 = $signed(kernel_val_1_V_2_read);

assign OP2_V_3_3_fu_592_p1 = $signed(kernel_val_1_V_1_read);

assign OP2_V_3_4_fu_596_p1 = $signed(kernel_val_1_V_0_read);

assign OP2_V_3_fu_580_p1 = $signed(kernel_val_1_V_4_read);

assign OP2_V_4_1_fu_604_p1 = $signed(kernel_val_0_V_3_read);

assign OP2_V_4_2_fu_608_p1 = $signed(kernel_val_0_V_2_read);

assign OP2_V_4_3_fu_612_p1 = $signed(kernel_val_0_V_1_read);

assign OP2_V_4_4_fu_616_p1 = $signed(kernel_val_0_V_0_read);

assign OP2_V_4_fu_600_p1 = $signed(kernel_val_0_V_4_read);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign dst_val_V_address0 = tmp_253_cast_fu_1705_p1;

assign dst_val_V_d0 = {{p_Val2_78_4_4_fu_1680_p2[47:16]}};

assign exitcond3_fu_701_p2 = ((j_reg_475 == 4'd12) ? 1'b1 : 1'b0);

assign exitcond_fu_620_p2 = ((i_reg_464 == 4'd12) ? 1'b1 : 1'b0);

assign i_15_fu_626_p2 = (i_reg_464 + 4'd1);

assign icmp3_fu_745_p2 = ((tmp_210_fu_735_p4 != 2'd0) ? 1'b1 : 1'b0);

assign icmp_fu_677_p2 = ((tmp_209_fu_667_p4 != 2'd0) ? 1'b1 : 1'b0);

assign j_13_fu_707_p2 = (j_reg_475 + 4'd1);

assign or_cond_fu_751_p2 = (icmp_reg_1974 & icmp3_fu_745_p2);

assign p_Val2_77_0_1_fu_826_p0 = OP2_V_0_1_reg_1840;

assign p_Val2_77_0_1_fu_826_p1 = OP1_V_0_1_fu_822_p0;

assign p_Val2_77_0_1_fu_826_p2 = ($signed(p_Val2_77_0_1_fu_826_p0) * $signed(p_Val2_77_0_1_fu_826_p1));

assign p_Val2_77_0_2_fu_859_p0 = OP2_V_0_2_reg_1845;

assign p_Val2_77_0_2_fu_859_p1 = OP1_V_0_2_fu_855_p0;

assign p_Val2_77_0_2_fu_859_p2 = ($signed(p_Val2_77_0_2_fu_859_p0) * $signed(p_Val2_77_0_2_fu_859_p1));

assign p_Val2_77_0_3_fu_892_p0 = OP2_V_0_3_reg_1850;

assign p_Val2_77_0_3_fu_892_p1 = OP1_V_0_3_fu_888_p0;

assign p_Val2_77_0_3_fu_892_p2 = ($signed(p_Val2_77_0_3_fu_892_p0) * $signed(p_Val2_77_0_3_fu_892_p1));

assign p_Val2_77_0_4_fu_911_p0 = OP2_V_0_4_reg_1855;

assign p_Val2_77_0_4_fu_911_p1 = OP1_V_0_4_fu_907_p0;

assign p_Val2_77_0_4_fu_911_p2 = ($signed(p_Val2_77_0_4_fu_911_p0) * $signed(p_Val2_77_0_4_fu_911_p1));

assign p_Val2_77_1_1_fu_1074_p0 = OP2_V_1_1_reg_1865;

assign p_Val2_77_1_1_fu_1074_p1 = BlockBuffer_val_1_V_16_reg_2031;

assign p_Val2_77_1_1_fu_1074_p2 = ($signed(p_Val2_77_1_1_fu_1074_p0) * $signed(p_Val2_77_1_1_fu_1074_p1));

assign p_Val2_77_1_2_fu_1106_p0 = OP2_V_1_2_reg_1870;

assign p_Val2_77_1_2_fu_1106_p1 = BlockBuffer_val_1_V_17_reg_2036;

assign p_Val2_77_1_2_fu_1106_p2 = ($signed(p_Val2_77_1_2_fu_1106_p0) * $signed(p_Val2_77_1_2_fu_1106_p1));

assign p_Val2_77_1_3_fu_1138_p0 = OP2_V_1_3_reg_1875;

assign p_Val2_77_1_3_fu_1138_p1 = BlockBuffer_val_1_V_18_reg_2041;

assign p_Val2_77_1_3_fu_1138_p2 = ($signed(p_Val2_77_1_3_fu_1138_p0) * $signed(p_Val2_77_1_3_fu_1138_p1));

assign p_Val2_77_1_4_fu_1156_p0 = OP2_V_1_4_reg_1880;

assign p_Val2_77_1_4_fu_1156_p1 = BlockBuffer_val_1_V_19_reg_2094;

assign p_Val2_77_1_4_fu_1156_p2 = ($signed(p_Val2_77_1_4_fu_1156_p0) * $signed(p_Val2_77_1_4_fu_1156_p1));

assign p_Val2_77_1_fu_920_p0 = OP2_V_1_reg_1860;

assign p_Val2_77_1_fu_920_p1 = OP1_V_1_fu_916_p0;

assign p_Val2_77_1_fu_920_p2 = ($signed(p_Val2_77_1_fu_920_p0) * $signed(p_Val2_77_1_fu_920_p1));

assign p_Val2_77_2_1_fu_1238_p0 = OP2_V_2_1_reg_1890;

assign p_Val2_77_2_1_fu_1238_p1 = BlockBuffer_val_2_V_12_reg_2046_pp0_iter2_reg;

assign p_Val2_77_2_1_fu_1238_p2 = ($signed(p_Val2_77_2_1_fu_1238_p0) * $signed(p_Val2_77_2_1_fu_1238_p1));

assign p_Val2_77_2_2_fu_1270_p0 = OP2_V_2_2_reg_1895;

assign p_Val2_77_2_2_fu_1270_p1 = BlockBuffer_val_2_V_13_reg_2052_pp0_iter2_reg;

assign p_Val2_77_2_2_fu_1270_p2 = ($signed(p_Val2_77_2_2_fu_1270_p0) * $signed(p_Val2_77_2_2_fu_1270_p1));

assign p_Val2_77_2_3_fu_1302_p0 = OP2_V_2_3_reg_1900;

assign p_Val2_77_2_3_fu_1302_p1 = BlockBuffer_val_2_V_14_reg_2057_pp0_iter2_reg;

assign p_Val2_77_2_3_fu_1302_p2 = ($signed(p_Val2_77_2_3_fu_1302_p0) * $signed(p_Val2_77_2_3_fu_1302_p1));

assign p_Val2_77_2_4_fu_1320_p0 = OP2_V_2_4_reg_1905;

assign p_Val2_77_2_4_fu_1320_p1 = BlockBuffer_val_2_V_15_reg_2099_pp0_iter2_reg;

assign p_Val2_77_2_4_fu_1320_p2 = ($signed(p_Val2_77_2_4_fu_1320_p0) * $signed(p_Val2_77_2_4_fu_1320_p1));

assign p_Val2_77_2_fu_1165_p0 = OP2_V_2_reg_1885;

assign p_Val2_77_2_fu_1165_p1 = OP1_V_2_fu_1161_p0;

assign p_Val2_77_2_fu_1165_p2 = ($signed(p_Val2_77_2_fu_1165_p0) * $signed(p_Val2_77_2_fu_1165_p1));

assign p_Val2_77_3_1_fu_1402_p0 = OP2_V_3_1_reg_1915;

assign p_Val2_77_3_1_fu_1402_p1 = BlockBuffer_val_3_V_12_reg_2062_pp0_iter3_reg;

assign p_Val2_77_3_1_fu_1402_p2 = ($signed(p_Val2_77_3_1_fu_1402_p0) * $signed(p_Val2_77_3_1_fu_1402_p1));

assign p_Val2_77_3_2_fu_1434_p0 = OP2_V_3_2_reg_1920;

assign p_Val2_77_3_2_fu_1434_p1 = BlockBuffer_val_3_V_13_reg_2068_pp0_iter3_reg;

assign p_Val2_77_3_2_fu_1434_p2 = ($signed(p_Val2_77_3_2_fu_1434_p0) * $signed(p_Val2_77_3_2_fu_1434_p1));

assign p_Val2_77_3_3_fu_1466_p0 = OP2_V_3_3_reg_1925;

assign p_Val2_77_3_3_fu_1466_p1 = BlockBuffer_val_3_V_14_reg_2073_pp0_iter3_reg;

assign p_Val2_77_3_3_fu_1466_p2 = ($signed(p_Val2_77_3_3_fu_1466_p0) * $signed(p_Val2_77_3_3_fu_1466_p1));

assign p_Val2_77_3_4_fu_1484_p0 = OP2_V_3_4_reg_1930;

assign p_Val2_77_3_4_fu_1484_p1 = BlockBuffer_val_3_V_15_reg_2104_pp0_iter3_reg;

assign p_Val2_77_3_4_fu_1484_p2 = ($signed(p_Val2_77_3_4_fu_1484_p0) * $signed(p_Val2_77_3_4_fu_1484_p1));

assign p_Val2_77_3_fu_1329_p0 = OP2_V_3_reg_1910;

assign p_Val2_77_3_fu_1329_p1 = OP1_V_3_fu_1325_p0;

assign p_Val2_77_3_fu_1329_p2 = ($signed(p_Val2_77_3_fu_1329_p0) * $signed(p_Val2_77_3_fu_1329_p1));

assign p_Val2_77_4_1_fu_1563_p0 = OP2_V_4_1_reg_1940;

assign p_Val2_77_4_1_fu_1563_p1 = BlockBuffer_val_4_V_12_reg_2078_pp0_iter4_reg;

assign p_Val2_77_4_1_fu_1563_p2 = ($signed(p_Val2_77_4_1_fu_1563_p0) * $signed(p_Val2_77_4_1_fu_1563_p1));

assign p_Val2_77_4_2_fu_1595_p0 = OP2_V_4_2_reg_1945;

assign p_Val2_77_4_2_fu_1595_p1 = BlockBuffer_val_4_V_13_reg_2084_pp0_iter4_reg;

assign p_Val2_77_4_2_fu_1595_p2 = ($signed(p_Val2_77_4_2_fu_1595_p0) * $signed(p_Val2_77_4_2_fu_1595_p1));

assign p_Val2_77_4_3_fu_1627_p0 = OP2_V_4_3_reg_1950;

assign p_Val2_77_4_3_fu_1627_p1 = BlockBuffer_val_4_V_14_reg_2089_pp0_iter4_reg;

assign p_Val2_77_4_3_fu_1627_p2 = ($signed(p_Val2_77_4_3_fu_1627_p0) * $signed(p_Val2_77_4_3_fu_1627_p1));

assign p_Val2_77_4_4_fu_1657_p0 = OP2_V_4_4_reg_1955;

assign p_Val2_77_4_4_fu_1657_p1 = BlockBuffer_val_4_V_15_reg_2109_pp0_iter5_reg;

assign p_Val2_77_4_4_fu_1657_p2 = ($signed(p_Val2_77_4_4_fu_1657_p0) * $signed(p_Val2_77_4_4_fu_1657_p1));

assign p_Val2_77_4_fu_1493_p0 = OP2_V_4_reg_1935;

assign p_Val2_77_4_fu_1493_p1 = OP1_V_4_fu_1489_p0;

assign p_Val2_77_4_fu_1493_p2 = ($signed(p_Val2_77_4_fu_1493_p0) * $signed(p_Val2_77_4_fu_1493_p1));

assign p_Val2_78_0_1_fu_849_p2 = (tmp_460_0_1_fu_841_p3 + p_Val2_77_0_1_fu_826_p2);

assign p_Val2_78_0_2_fu_882_p2 = (tmp_460_0_2_fu_874_p3 + p_Val2_77_0_2_fu_859_p2);

assign p_Val2_78_0_3_fu_1020_p2 = (tmp_460_0_3_fu_1013_p3 + p_Val2_77_0_3_reg_2114);

assign p_Val2_78_0_4_fu_1043_p2 = (tmp_460_0_4_fu_1035_p3 + p_Val2_77_0_4_reg_2124);

assign p_Val2_78_1_1_fu_1097_p2 = (tmp_460_1_1_fu_1089_p3 + p_Val2_77_1_1_fu_1074_p2);

assign p_Val2_78_1_2_fu_1129_p2 = (tmp_460_1_2_fu_1121_p3 + p_Val2_77_1_2_fu_1106_p2);

assign p_Val2_78_1_3_fu_1184_p2 = (tmp_460_1_3_fu_1177_p3 + p_Val2_77_1_3_reg_2134);

assign p_Val2_78_1_4_fu_1207_p2 = (tmp_460_1_4_fu_1199_p3 + p_Val2_77_1_4_reg_2144);

assign p_Val2_78_1_fu_1066_p2 = (tmp_460_1_fu_1058_p3 + p_Val2_77_1_reg_2129);

assign p_Val2_78_2_1_fu_1261_p2 = (tmp_460_2_1_fu_1253_p3 + p_Val2_77_2_1_fu_1238_p2);

assign p_Val2_78_2_2_fu_1293_p2 = (tmp_460_2_2_fu_1285_p3 + p_Val2_77_2_2_fu_1270_p2);

assign p_Val2_78_2_3_fu_1348_p2 = (tmp_460_2_3_fu_1341_p3 + p_Val2_77_2_3_reg_2154);

assign p_Val2_78_2_4_fu_1371_p2 = (tmp_460_2_4_fu_1363_p3 + p_Val2_77_2_4_reg_2164);

assign p_Val2_78_2_fu_1230_p2 = (tmp_460_2_fu_1222_p3 + p_Val2_77_2_reg_2149);

assign p_Val2_78_3_1_fu_1425_p2 = (tmp_460_3_1_fu_1417_p3 + p_Val2_77_3_1_fu_1402_p2);

assign p_Val2_78_3_2_fu_1457_p2 = (tmp_460_3_2_fu_1449_p3 + p_Val2_77_3_2_fu_1434_p2);

assign p_Val2_78_3_3_fu_1509_p2 = (tmp_460_3_3_fu_1502_p3 + p_Val2_77_3_3_reg_2174);

assign p_Val2_78_3_4_fu_1532_p2 = (tmp_460_3_4_fu_1524_p3 + p_Val2_77_3_4_reg_2184);

assign p_Val2_78_3_fu_1394_p2 = (tmp_460_3_fu_1386_p3 + p_Val2_77_3_reg_2169);

assign p_Val2_78_4_1_fu_1586_p2 = (tmp_460_4_1_fu_1578_p3 + p_Val2_77_4_1_fu_1563_p2);

assign p_Val2_78_4_2_fu_1618_p2 = (tmp_460_4_2_fu_1610_p3 + p_Val2_77_4_2_fu_1595_p2);

assign p_Val2_78_4_3_fu_1649_p2 = (tmp_460_4_3_fu_1642_p3 + p_Val2_77_4_3_reg_2194);

assign p_Val2_78_4_4_fu_1680_p2 = (tmp_460_4_4_fu_1672_p3 + p_Val2_77_4_4_fu_1657_p2);

assign p_Val2_78_4_fu_1555_p2 = (tmp_460_4_fu_1547_p3 + p_Val2_77_4_reg_2189);

assign p_Val2_s_fu_817_p0 = OP2_V_0_cast_reg_1835;

assign p_Val2_s_fu_817_p1 = OP1_V_0_cast_fu_813_p0;

assign p_Val2_s_fu_817_p2 = ($signed(p_Val2_s_fu_817_p0) * $signed(p_Val2_s_fu_817_p1));

assign p_shl1_cast_fu_506_p1 = tmp_200_fu_498_p3;

assign p_shl2_cast_fu_645_p3 = {{tmp_fu_641_p1}, {4'd0}};

assign p_shl3_cast_fu_653_p3 = {{tmp_202_fu_636_p2}, {2'd0}};

assign p_shl_cast_fu_494_p1 = tmp_s_fu_486_p3;

assign src_val_V_address0 = tmp_228_cast_fu_730_p1;

assign tmp_155_fu_683_p2 = ($signed(4'd12) + $signed(i_reg_464));

assign tmp_157_cast_fu_721_p1 = j_reg_475;

assign tmp_157_fu_713_p1 = j_reg_475;

assign tmp_159_fu_756_p2 = ($signed(j_reg_475) + $signed(4'd12));

assign tmp_160_cast_fu_1697_p1 = tmp_159_reg_2026_pp0_iter5_reg;

assign tmp_200_fu_498_p3 = {{src_val_V_offset}, {2'd0}};

assign tmp_201_fu_510_p2 = (p_shl_cast_fu_494_p1 - p_shl1_cast_fu_506_p1);

assign tmp_202_fu_636_p2 = ($signed(tmp_221_cast_reg_1830) + $signed(tmp_cast_fu_632_p1));

assign tmp_203_fu_661_p2 = (p_shl2_cast_fu_645_p3 - p_shl3_cast_fu_653_p3);

assign tmp_204_fu_689_p3 = {{tmp_155_fu_683_p2}, {3'd0}};

assign tmp_205_fu_725_p2 = (tmp_203_reg_1969 + tmp_157_cast_fu_721_p1);

assign tmp_206_fu_831_p4 = {{p_Val2_s_fu_817_p2[47:16]}};

assign tmp_207_fu_864_p4 = {{p_Val2_78_0_1_fu_849_p2[47:16]}};

assign tmp_209_fu_667_p4 = {{i_reg_464[3:2]}};

assign tmp_210_fu_735_p4 = {{j_reg_475[3:2]}};

assign tmp_211_fu_1025_p4 = {{p_Val2_78_0_3_fu_1020_p2[47:16]}};

assign tmp_212_fu_1048_p4 = {{p_Val2_78_0_4_fu_1043_p2[47:16]}};

assign tmp_213_fu_1079_p4 = {{p_Val2_78_1_fu_1066_p2[47:16]}};

assign tmp_214_fu_1111_p4 = {{p_Val2_78_1_1_fu_1097_p2[47:16]}};

assign tmp_216_fu_1189_p4 = {{p_Val2_78_1_3_fu_1184_p2[47:16]}};

assign tmp_217_fu_1212_p4 = {{p_Val2_78_1_4_fu_1207_p2[47:16]}};

assign tmp_218_fu_1243_p4 = {{p_Val2_78_2_fu_1230_p2[47:16]}};

assign tmp_219_fu_1275_p4 = {{p_Val2_78_2_1_fu_1261_p2[47:16]}};

assign tmp_221_cast_fu_516_p1 = $signed(tmp_201_fu_510_p2);

assign tmp_221_fu_1353_p4 = {{p_Val2_78_2_3_fu_1348_p2[47:16]}};

assign tmp_222_fu_1376_p4 = {{p_Val2_78_2_4_fu_1371_p2[47:16]}};

assign tmp_223_fu_1407_p4 = {{p_Val2_78_3_fu_1394_p2[47:16]}};

assign tmp_224_fu_1439_p4 = {{p_Val2_78_3_1_fu_1425_p2[47:16]}};

assign tmp_226_fu_1514_p4 = {{p_Val2_78_3_3_fu_1509_p2[47:16]}};

assign tmp_227_cast_fu_697_p1 = $signed(tmp_204_fu_689_p3);

assign tmp_227_fu_1537_p4 = {{p_Val2_78_3_4_fu_1532_p2[47:16]}};

assign tmp_228_cast_fu_730_p1 = tmp_205_fu_725_p2;

assign tmp_228_fu_1568_p4 = {{p_Val2_78_4_fu_1555_p2[47:16]}};

assign tmp_229_fu_1600_p4 = {{p_Val2_78_4_1_fu_1586_p2[47:16]}};

assign tmp_231_fu_1662_p4 = {{p_Val2_78_4_3_fu_1649_p2[47:16]}};

assign tmp_232_fu_1700_p2 = ($signed(tmp_227_cast_reg_1979) + $signed(tmp_160_cast_fu_1697_p1));

assign tmp_253_cast_fu_1705_p1 = $signed(tmp_232_fu_1700_p2);

assign tmp_460_0_1_fu_841_p3 = {{tmp_206_fu_831_p4}, {16'd0}};

assign tmp_460_0_2_fu_874_p3 = {{tmp_207_fu_864_p4}, {16'd0}};

assign tmp_460_0_3_fu_1013_p3 = {{tmp_208_reg_2119}, {16'd0}};

assign tmp_460_0_4_fu_1035_p3 = {{tmp_211_fu_1025_p4}, {16'd0}};

assign tmp_460_1_1_fu_1089_p3 = {{tmp_213_fu_1079_p4}, {16'd0}};

assign tmp_460_1_2_fu_1121_p3 = {{tmp_214_fu_1111_p4}, {16'd0}};

assign tmp_460_1_3_fu_1177_p3 = {{tmp_215_reg_2139}, {16'd0}};

assign tmp_460_1_4_fu_1199_p3 = {{tmp_216_fu_1189_p4}, {16'd0}};

assign tmp_460_1_fu_1058_p3 = {{tmp_212_fu_1048_p4}, {16'd0}};

assign tmp_460_2_1_fu_1253_p3 = {{tmp_218_fu_1243_p4}, {16'd0}};

assign tmp_460_2_2_fu_1285_p3 = {{tmp_219_fu_1275_p4}, {16'd0}};

assign tmp_460_2_3_fu_1341_p3 = {{tmp_220_reg_2159}, {16'd0}};

assign tmp_460_2_4_fu_1363_p3 = {{tmp_221_fu_1353_p4}, {16'd0}};

assign tmp_460_2_fu_1222_p3 = {{tmp_217_fu_1212_p4}, {16'd0}};

assign tmp_460_3_1_fu_1417_p3 = {{tmp_223_fu_1407_p4}, {16'd0}};

assign tmp_460_3_2_fu_1449_p3 = {{tmp_224_fu_1439_p4}, {16'd0}};

assign tmp_460_3_3_fu_1502_p3 = {{tmp_225_reg_2179}, {16'd0}};

assign tmp_460_3_4_fu_1524_p3 = {{tmp_226_fu_1514_p4}, {16'd0}};

assign tmp_460_3_fu_1386_p3 = {{tmp_222_fu_1376_p4}, {16'd0}};

assign tmp_460_4_1_fu_1578_p3 = {{tmp_228_fu_1568_p4}, {16'd0}};

assign tmp_460_4_2_fu_1610_p3 = {{tmp_229_fu_1600_p4}, {16'd0}};

assign tmp_460_4_3_fu_1642_p3 = {{tmp_230_reg_2199}, {16'd0}};

assign tmp_460_4_4_fu_1672_p3 = {{tmp_231_fu_1662_p4}, {16'd0}};

assign tmp_460_4_fu_1547_p3 = {{tmp_227_fu_1537_p4}, {16'd0}};

assign tmp_cast_fu_632_p1 = i_reg_464;

assign tmp_fu_641_p1 = tmp_202_fu_636_p2[6:0];

assign tmp_s_fu_486_p3 = {{src_val_V_offset}, {4'd0}};

always @ (posedge ap_clk) begin
    tmp_221_cast_reg_1830[1:0] <= 2'b00;
    tmp_203_reg_1969[1:0] <= 2'b00;
    tmp_227_cast_reg_1979[2:0] <= 3'b000;
end

endmodule //Conv10
