// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module CconLayer (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_val_V_address0,
        input_val_V_ce0,
        input_val_V_q0,
        cconlayer_output_V_address0,
        cconlayer_output_V_ce0,
        cconlayer_output_V_we0,
        cconlayer_output_V_d0
);

parameter    ap_ST_fsm_state1 = 38'd1;
parameter    ap_ST_fsm_state2 = 38'd2;
parameter    ap_ST_fsm_state3 = 38'd4;
parameter    ap_ST_fsm_pp0_stage0 = 38'd8;
parameter    ap_ST_fsm_state6 = 38'd16;
parameter    ap_ST_fsm_state7 = 38'd32;
parameter    ap_ST_fsm_state8 = 38'd64;
parameter    ap_ST_fsm_state9 = 38'd128;
parameter    ap_ST_fsm_state10 = 38'd256;
parameter    ap_ST_fsm_state11 = 38'd512;
parameter    ap_ST_fsm_state12 = 38'd1024;
parameter    ap_ST_fsm_state13 = 38'd2048;
parameter    ap_ST_fsm_state14 = 38'd4096;
parameter    ap_ST_fsm_state15 = 38'd8192;
parameter    ap_ST_fsm_state16 = 38'd16384;
parameter    ap_ST_fsm_state17 = 38'd32768;
parameter    ap_ST_fsm_state18 = 38'd65536;
parameter    ap_ST_fsm_state19 = 38'd131072;
parameter    ap_ST_fsm_state20 = 38'd262144;
parameter    ap_ST_fsm_state21 = 38'd524288;
parameter    ap_ST_fsm_state22 = 38'd1048576;
parameter    ap_ST_fsm_state23 = 38'd2097152;
parameter    ap_ST_fsm_state24 = 38'd4194304;
parameter    ap_ST_fsm_state25 = 38'd8388608;
parameter    ap_ST_fsm_state26 = 38'd16777216;
parameter    ap_ST_fsm_state27 = 38'd33554432;
parameter    ap_ST_fsm_state28 = 38'd67108864;
parameter    ap_ST_fsm_state29 = 38'd134217728;
parameter    ap_ST_fsm_state30 = 38'd268435456;
parameter    ap_ST_fsm_state31 = 38'd536870912;
parameter    ap_ST_fsm_state32 = 38'd1073741824;
parameter    ap_ST_fsm_state33 = 38'd2147483648;
parameter    ap_ST_fsm_state34 = 38'd4294967296;
parameter    ap_ST_fsm_state35 = 38'd8589934592;
parameter    ap_ST_fsm_state36 = 38'd17179869184;
parameter    ap_ST_fsm_state37 = 38'd34359738368;
parameter    ap_ST_fsm_state38 = 38'd68719476736;
parameter    ap_ST_fsm_state39 = 38'd137438953472;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] input_val_V_address0;
output   input_val_V_ce0;
input  [31:0] input_val_V_q0;
output  [3:0] cconlayer_output_V_address0;
output   cconlayer_output_V_ce0;
output   cconlayer_output_V_we0;
output  [31:0] cconlayer_output_V_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg cconlayer_output_V_ce0;
reg cconlayer_output_V_we0;

(* fsm_encoding = "none" *) reg   [37:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [10:0] cconlayer_k_V_address0;
reg    cconlayer_k_V_ce0;
wire   [18:0] cconlayer_k_V_q0;
wire   [3:0] cconlayer_b_V_address0;
reg    cconlayer_b_V_ce0;
wire   [15:0] cconlayer_b_V_q0;
reg  signed [31:0] p_Val2_s_reg_219;
reg   [7:0] j_reg_231;
wire   [0:0] exitcond4_fu_275_p2;
wire    ap_CS_fsm_state3;
wire   [3:0] i_16_fu_281_p2;
reg   [3:0] i_16_reg_946;
wire   [12:0] tmp_fu_311_p2;
reg   [12:0] tmp_reg_951;
wire   [0:0] exitcond_fu_321_p2;
reg   [0:0] exitcond_reg_956;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state4_pp0_stage0_iter0;
wire    ap_block_state5_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [7:0] j_14_fu_327_p2;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
wire   [63:0] tmp_s_fu_390_p1;
reg   [63:0] tmp_s_reg_980;
wire    ap_CS_fsm_state6;
wire   [0:0] tmp_163_fu_419_p2;
reg   [0:0] tmp_163_reg_990;
wire    ap_CS_fsm_state7;
wire   [0:0] is_neg_fu_425_p3;
reg   [0:0] is_neg_reg_995;
wire   [31:0] p_Val2_52_fu_439_p3;
reg   [31:0] p_Val2_52_reg_1000;
wire   [31:0] msb_idx_fu_480_p2;
reg   [31:0] msb_idx_reg_1006;
wire    ap_CS_fsm_state8;
wire   [30:0] msb_idx_2_fu_498_p3;
reg   [30:0] msb_idx_2_reg_1011;
wire   [0:0] icmp_fu_516_p2;
reg   [0:0] icmp_reg_1016;
wire   [31:0] tmp32_V_fu_580_p1;
reg   [31:0] tmp32_V_reg_1021;
wire   [31:0] tmp32_V_12_fu_598_p3;
reg   [31:0] tmp32_V_12_reg_1026;
wire    ap_CS_fsm_state9;
wire   [31:0] tmp32_V_15_fu_604_p1;
reg   [31:0] tmp32_V_15_reg_1031;
wire    ap_CS_fsm_state11;
reg   [7:0] p_Result_s_206_reg_1036;
wire   [31:0] x_assign_fu_668_p3;
reg   [31:0] x_assign_reg_1041;
wire    ap_CS_fsm_state12;
wire   [31:0] grp_fu_260_p2;
reg   [31:0] tmp_i_i_reg_1046;
wire    ap_CS_fsm_state17;
wire   [63:0] grp_fu_256_p1;
reg   [63:0] tmp_172_reg_1051;
wire    ap_CS_fsm_state18;
wire   [63:0] grp_fu_265_p2;
reg   [63:0] tmp_173_reg_1056;
wire    ap_CS_fsm_state22;
wire   [63:0] grp_fu_270_p2;
reg   [63:0] tmp_174_reg_1061;
wire    ap_CS_fsm_state37;
reg   [0:0] isneg_reg_1066;
wire    ap_CS_fsm_state38;
wire   [51:0] tmp_229_fu_705_p1;
reg   [51:0] tmp_229_reg_1072;
wire   [0:0] tmp_178_fu_709_p2;
reg   [0:0] tmp_178_reg_1077;
wire   [0:0] tmp_179_fu_721_p2;
reg   [0:0] tmp_179_reg_1083;
wire   [11:0] tmp_180_fu_727_p2;
reg   [11:0] tmp_180_reg_1090;
wire   [11:0] tmp_181_fu_733_p2;
reg   [11:0] tmp_181_reg_1095;
wire   [0:0] tmp_182_fu_739_p2;
reg   [0:0] tmp_182_reg_1100;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state4;
reg   [7:0] p_temp_address0;
reg    p_temp_ce0;
reg    p_temp_we0;
wire   [31:0] p_temp_q0;
wire    grp_Reshape_fu_242_ap_start;
wire    grp_Reshape_fu_242_ap_done;
wire    grp_Reshape_fu_242_ap_idle;
wire    grp_Reshape_fu_242_ap_ready;
wire   [7:0] grp_Reshape_fu_242_src_val_V_address0;
wire    grp_Reshape_fu_242_src_val_V_ce0;
wire   [7:0] grp_Reshape_fu_242_dst_V_address0;
wire    grp_Reshape_fu_242_dst_V_ce0;
wire    grp_Reshape_fu_242_dst_V_we0;
wire   [31:0] grp_Reshape_fu_242_dst_V_d0;
reg   [3:0] i_reg_207;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state39;
wire    ap_block_pp0_stage0;
reg    grp_Reshape_fu_242_ap_start_reg;
wire   [63:0] tmp_191_fu_342_p1;
wire   [63:0] tmp_192_fu_347_p1;
wire    ap_CS_fsm_state10;
reg   [31:0] grp_fu_256_p0;
wire   [31:0] res_fu_253_p1;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state23;
wire   [11:0] p_shl_fu_287_p3;
wire   [9:0] p_shl2_fu_299_p3;
wire   [12:0] p_shl_cast_fu_295_p1;
wire   [12:0] p_shl2_cast_fu_307_p1;
wire   [12:0] j_cast2_fu_317_p1;
wire   [12:0] tmp_190_fu_333_p2;
wire  signed [31:0] tmp_232_cast_fu_338_p1;
wire  signed [18:0] p_Val2_17_fu_360_p0;
wire  signed [31:0] p_Val2_17_fu_360_p1;
wire   [47:0] tmp_193_fu_366_p3;
wire   [47:0] p_Val2_17_fu_360_p2;
wire   [47:0] p_Val2_18_fu_374_p2;
wire  signed [15:0] tmp_162_fu_399_p0;
wire  signed [15:0] tmp_75_fu_403_p0;
wire  signed [32:0] tmp_161_fu_395_p1;
wire  signed [32:0] tmp_162_fu_399_p1;
wire  signed [31:0] tmp_75_fu_403_p1;
wire   [32:0] p_Val2_49_fu_407_p2;
wire   [31:0] p_Val2_46_cast_fu_413_p2;
wire   [31:0] tmp_239_cast_fu_433_p2;
wire   [32:0] p_Val2_48_cast_fu_447_p1;
reg   [32:0] p_Result_s_fu_450_p4;
wire   [63:0] p_Result_8_fu_460_p3;
reg   [63:0] tmp_164_fu_468_p3;
wire   [31:0] num_zeros_fu_476_p1;
wire   [0:0] tmp_214_fu_490_p3;
wire   [30:0] tmp_213_fu_486_p1;
wire   [25:0] tmp_215_fu_506_p4;
wire   [5:0] tmp_216_fu_522_p1;
wire   [0:0] tmp_217_fu_526_p2;
reg   [32:0] tmp_219_fu_538_p4;
wire   [5:0] tmp_220_fu_548_p2;
wire   [5:0] tmp_218_fu_532_p2;
wire   [5:0] tmp_222_fu_562_p3;
wire   [32:0] tmp_221_fu_554_p3;
wire   [32:0] tmp_223_fu_570_p1;
wire   [32:0] tmp_224_fu_574_p2;
wire   [30:0] tmp_167_fu_584_p2;
wire   [31:0] tmp_243_cast_fu_589_p1;
wire   [31:0] tmp32_V_9_fu_593_p2;
wire   [31:0] grp_fu_250_p1;
wire   [0:0] tmp_169_fu_618_p2;
wire   [7:0] tmp24_cast_cast_fu_626_p3;
wire   [7:0] tmp_226_fu_623_p1;
wire   [7:0] p_Repl2_5_trunc_fu_634_p2;
wire   [8:0] tmp_171_fu_640_p3;
wire   [31:0] p_Result_9_fu_647_p5;
wire   [31:0] p_Result_16_op_fu_658_p2;
wire   [31:0] tmp_76_fu_664_p1;
wire   [63:0] ireg_V_fu_675_p1;
wire   [10:0] exp_tmp_V_fu_691_p4;
wire   [62:0] tmp_227_fu_679_p1;
wire   [11:0] tmp_176_fu_701_p1;
wire   [11:0] F2_fu_715_p2;
wire   [52:0] tmp_177_fu_745_p3;
wire   [53:0] p_Result_10_fu_752_p1;
wire   [53:0] man_V_3_fu_756_p2;
wire  signed [11:0] sh_amt_fu_769_p3;
wire   [53:0] man_V_4_fu_762_p3;
wire   [6:0] tmp_231_fu_788_p4;
wire  signed [31:0] sh_amt_cast_fu_774_p1;
wire   [53:0] tmp_186_fu_804_p1;
wire   [53:0] tmp_187_fu_808_p2;
wire   [31:0] tmp_230_fu_778_p1;
wire   [0:0] sel_tmp1_fu_831_p2;
wire   [0:0] sel_tmp6_demorgan_fu_841_p2;
wire   [0:0] sel_tmp6_fu_845_p2;
wire   [0:0] sel_tmp7_fu_851_p2;
wire   [0:0] tmp_184_fu_782_p2;
wire   [0:0] sel_tmp_fu_862_p2;
wire   [0:0] sel_tmp21_demorgan_fu_874_p2;
wire   [0:0] icmp4_fu_798_p2;
wire   [0:0] sel_tmp9_fu_879_p2;
wire   [0:0] sel_tmp3_fu_885_p2;
wire   [31:0] tmp_189_fu_825_p2;
wire   [31:0] this_assign_fu_818_p3;
wire   [0:0] sel_tmp5_fu_868_p2;
wire   [0:0] sel_tmp8_fu_856_p2;
wire   [31:0] tmp_232_fu_814_p1;
wire   [0:0] sel_tmp2_fu_836_p2;
wire   [0:0] or_cond_fu_899_p2;
wire   [31:0] newSel_fu_891_p3;
wire   [31:0] newSel7_fu_905_p3;
wire   [0:0] or_cond5_fu_913_p2;
wire   [0:0] or_cond6_fu_927_p2;
wire   [31:0] newSel8_fu_919_p3;
reg   [37:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 38'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 grp_Reshape_fu_242_ap_start_reg = 1'b0;
end

CconLayer_cconlayLf8 #(
    .DataWidth( 19 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
cconlayer_k_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(cconlayer_k_V_address0),
    .ce0(cconlayer_k_V_ce0),
    .q0(cconlayer_k_V_q0)
);

CconLayer_cconlayMgi #(
    .DataWidth( 16 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
cconlayer_b_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(cconlayer_b_V_address0),
    .ce0(cconlayer_b_V_ce0),
    .q0(cconlayer_b_V_q0)
);

CconLayer_p_temp #(
    .DataWidth( 32 ),
    .AddressRange( 192 ),
    .AddressWidth( 8 ))
p_temp_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_temp_address0),
    .ce0(p_temp_ce0),
    .we0(p_temp_we0),
    .d0(grp_Reshape_fu_242_dst_V_d0),
    .q0(p_temp_q0)
);

Reshape grp_Reshape_fu_242(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Reshape_fu_242_ap_start),
    .ap_done(grp_Reshape_fu_242_ap_done),
    .ap_idle(grp_Reshape_fu_242_ap_idle),
    .ap_ready(grp_Reshape_fu_242_ap_ready),
    .src_val_V_address0(grp_Reshape_fu_242_src_val_V_address0),
    .src_val_V_ce0(grp_Reshape_fu_242_src_val_V_ce0),
    .src_val_V_q0(input_val_V_q0),
    .dst_V_address0(grp_Reshape_fu_242_dst_V_address0),
    .dst_V_ce0(grp_Reshape_fu_242_dst_V_ce0),
    .dst_V_we0(grp_Reshape_fu_242_dst_V_we0),
    .dst_V_d0(grp_Reshape_fu_242_dst_V_d0)
);

CNN_Core_uitofp_3qcK #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
CNN_Core_uitofp_3qcK_U165(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp32_V_12_reg_1026),
    .ce(1'b1),
    .dout(grp_fu_250_p1)
);

CNN_Core_fptrunc_rcU #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
CNN_Core_fptrunc_rcU_U166(
    .din0(tmp_174_reg_1061),
    .dout(res_fu_253_p1)
);

CNN_Core_fpext_32sc4 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
CNN_Core_fpext_32sc4_U167(
    .din0(grp_fu_256_p0),
    .dout(grp_fu_256_p1)
);

CNN_Core_fexp_32ntde #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
CNN_Core_fexp_32ntde_U168(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(32'd0),
    .din1(x_assign_reg_1041),
    .ce(1'b1),
    .dout(grp_fu_260_p2)
);

CNN_Core_dadd_64nudo #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
CNN_Core_dadd_64nudo_U169(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_172_reg_1051),
    .din1(64'd4607182418800017408),
    .ce(1'b1),
    .dout(grp_fu_265_p2)
);

CNN_Core_ddiv_64nvdy #(
    .ID( 1 ),
    .NUM_STAGE( 15 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
CNN_Core_ddiv_64nvdy_U170(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(64'd4607182418800017408),
    .din1(tmp_173_reg_1056),
    .ce(1'b1),
    .dout(grp_fu_270_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state4) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((exitcond4_fu_275_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state4))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state4);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((exitcond4_fu_275_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_Reshape_fu_242_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_Reshape_fu_242_ap_start_reg <= 1'b1;
        end else if ((grp_Reshape_fu_242_ap_ready == 1'b1)) begin
            grp_Reshape_fu_242_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        i_reg_207 <= i_16_reg_946;
    end else if (((grp_Reshape_fu_242_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        i_reg_207 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_fu_321_p2 == 1'd0))) begin
        j_reg_231 <= j_14_fu_327_p2;
    end else if (((exitcond4_fu_275_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        j_reg_231 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_reg_956 == 1'd0))) begin
        p_Val2_s_reg_219 <= {{p_Val2_18_fu_374_p2[47:16]}};
    end else if (((exitcond4_fu_275_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        p_Val2_s_reg_219 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exitcond_reg_956 <= exitcond_fu_321_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_16_reg_946 <= i_16_fu_281_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (tmp_163_reg_990 == 1'd0))) begin
        icmp_reg_1016 <= icmp_fu_516_p2;
        msb_idx_2_reg_1011 <= msb_idx_2_fu_498_p3;
        msb_idx_reg_1006 <= msb_idx_fu_480_p2;
        tmp32_V_reg_1021 <= tmp32_V_fu_580_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        is_neg_reg_995 <= p_Val2_49_fu_407_p2[32'd32];
        p_Val2_52_reg_1000 <= p_Val2_52_fu_439_p3;
        tmp_163_reg_990 <= tmp_163_fu_419_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        isneg_reg_1066 <= ireg_V_fu_675_p1[32'd63];
        tmp_178_reg_1077 <= tmp_178_fu_709_p2;
        tmp_179_reg_1083 <= tmp_179_fu_721_p2;
        tmp_180_reg_1090 <= tmp_180_fu_727_p2;
        tmp_181_reg_1095 <= tmp_181_fu_733_p2;
        tmp_182_reg_1100 <= tmp_182_fu_739_p2;
        tmp_229_reg_1072 <= tmp_229_fu_705_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (tmp_163_reg_990 == 1'd0))) begin
        p_Result_s_206_reg_1036 <= {{tmp32_V_15_fu_604_p1[30:23]}};
        tmp32_V_15_reg_1031 <= tmp32_V_15_fu_604_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (tmp_163_reg_990 == 1'd0))) begin
        tmp32_V_12_reg_1026 <= tmp32_V_12_fu_598_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        tmp_172_reg_1051 <= grp_fu_256_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        tmp_173_reg_1056 <= grp_fu_265_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        tmp_174_reg_1061 <= grp_fu_270_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        tmp_i_i_reg_1046 <= grp_fu_260_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_fu_275_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_reg_951[12 : 6] <= tmp_fu_311_p2[12 : 6];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        tmp_s_reg_980[3 : 0] <= tmp_s_fu_390_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        x_assign_reg_1041 <= x_assign_fu_668_p3;
    end
end

always @ (*) begin
    if ((exitcond_fu_321_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state4 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state4 = 1'b0;
    end
end

always @ (*) begin
    if ((((exitcond4_fu_275_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond4_fu_275_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        cconlayer_b_V_ce0 = 1'b1;
    end else begin
        cconlayer_b_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        cconlayer_k_V_ce0 = 1'b1;
    end else begin
        cconlayer_k_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        cconlayer_output_V_ce0 = 1'b1;
    end else begin
        cconlayer_output_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        cconlayer_output_V_we0 = 1'b1;
    end else begin
        cconlayer_output_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_fu_256_p0 = res_fu_253_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_256_p0 = tmp_i_i_reg_1046;
    end else begin
        grp_fu_256_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_temp_address0 = tmp_192_fu_347_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        p_temp_address0 = grp_Reshape_fu_242_dst_V_address0;
    end else begin
        p_temp_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_temp_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        p_temp_ce0 = grp_Reshape_fu_242_dst_V_ce0;
    end else begin
        p_temp_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        p_temp_we0 = grp_Reshape_fu_242_dst_V_we0;
    end else begin
        p_temp_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_Reshape_fu_242_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((exitcond4_fu_275_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_fu_321_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_fu_321_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_fu_715_p2 = (12'd1075 - tmp_176_fu_701_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign cconlayer_b_V_address0 = tmp_s_fu_390_p1;

assign cconlayer_k_V_address0 = tmp_191_fu_342_p1;

assign cconlayer_output_V_address0 = tmp_s_reg_980;

assign cconlayer_output_V_d0 = ((or_cond6_fu_927_p2[0:0] === 1'b1) ? newSel8_fu_919_p3 : 32'd0);

assign exitcond4_fu_275_p2 = ((i_reg_207 == 4'd10) ? 1'b1 : 1'b0);

assign exitcond_fu_321_p2 = ((j_reg_231 == 8'd192) ? 1'b1 : 1'b0);

assign exp_tmp_V_fu_691_p4 = {{ireg_V_fu_675_p1[62:52]}};

assign grp_Reshape_fu_242_ap_start = grp_Reshape_fu_242_ap_start_reg;

assign i_16_fu_281_p2 = (i_reg_207 + 4'd1);

assign icmp4_fu_798_p2 = ((tmp_231_fu_788_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_fu_516_p2 = ((tmp_215_fu_506_p4 == 26'd0) ? 1'b1 : 1'b0);

assign input_val_V_address0 = grp_Reshape_fu_242_src_val_V_address0;

assign input_val_V_ce0 = grp_Reshape_fu_242_src_val_V_ce0;

assign ireg_V_fu_675_p1 = grp_fu_256_p1;

assign is_neg_fu_425_p3 = p_Val2_49_fu_407_p2[32'd32];

assign j_14_fu_327_p2 = (j_reg_231 + 8'd1);

assign j_cast2_fu_317_p1 = j_reg_231;

assign man_V_3_fu_756_p2 = (54'd0 - p_Result_10_fu_752_p1);

assign man_V_4_fu_762_p3 = ((isneg_reg_1066[0:0] === 1'b1) ? man_V_3_fu_756_p2 : p_Result_10_fu_752_p1);

assign msb_idx_2_fu_498_p3 = ((tmp_214_fu_490_p3[0:0] === 1'b1) ? 31'd0 : tmp_213_fu_486_p1);

assign msb_idx_fu_480_p2 = (32'd32 - num_zeros_fu_476_p1);

assign newSel7_fu_905_p3 = ((sel_tmp8_fu_856_p2[0:0] === 1'b1) ? tmp_232_fu_814_p1 : tmp_230_fu_778_p1);

assign newSel8_fu_919_p3 = ((or_cond_fu_899_p2[0:0] === 1'b1) ? newSel_fu_891_p3 : newSel7_fu_905_p3);

assign newSel_fu_891_p3 = ((sel_tmp3_fu_885_p2[0:0] === 1'b1) ? tmp_189_fu_825_p2 : this_assign_fu_818_p3);

assign num_zeros_fu_476_p1 = tmp_164_fu_468_p3[31:0];

assign or_cond5_fu_913_p2 = (sel_tmp8_fu_856_p2 | sel_tmp2_fu_836_p2);

assign or_cond6_fu_927_p2 = (or_cond_fu_899_p2 | or_cond5_fu_913_p2);

assign or_cond_fu_899_p2 = (sel_tmp5_fu_868_p2 | sel_tmp3_fu_885_p2);

assign p_Repl2_5_trunc_fu_634_p2 = (tmp24_cast_cast_fu_626_p3 + tmp_226_fu_623_p1);

assign p_Result_10_fu_752_p1 = tmp_177_fu_745_p3;

assign p_Result_16_op_fu_658_p2 = (p_Result_9_fu_647_p5 ^ 32'd2147483648);

assign p_Result_8_fu_460_p3 = {{31'd2147483647}, {p_Result_s_fu_450_p4}};

assign p_Result_9_fu_647_p5 = {{tmp_171_fu_640_p3}, {tmp32_V_15_reg_1031[22:0]}};

integer ap_tvar_int_0;

always @ (p_Val2_48_cast_fu_447_p1) begin
    for (ap_tvar_int_0 = 33 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 32 - 0) begin
            p_Result_s_fu_450_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_s_fu_450_p4[ap_tvar_int_0] = p_Val2_48_cast_fu_447_p1[32 - ap_tvar_int_0];
        end
    end
end

assign p_Val2_17_fu_360_p0 = cconlayer_k_V_q0;

assign p_Val2_17_fu_360_p1 = p_temp_q0;

assign p_Val2_17_fu_360_p2 = ($signed(p_Val2_17_fu_360_p0) * $signed(p_Val2_17_fu_360_p1));

assign p_Val2_18_fu_374_p2 = (tmp_193_fu_366_p3 + p_Val2_17_fu_360_p2);

assign p_Val2_46_cast_fu_413_p2 = ($signed(p_Val2_s_reg_219) + $signed(tmp_75_fu_403_p1));

assign p_Val2_48_cast_fu_447_p1 = p_Val2_52_reg_1000;

assign p_Val2_49_fu_407_p2 = ($signed(tmp_161_fu_395_p1) + $signed(tmp_162_fu_399_p1));

assign p_Val2_52_fu_439_p3 = ((is_neg_fu_425_p3[0:0] === 1'b1) ? tmp_239_cast_fu_433_p2 : p_Val2_46_cast_fu_413_p2);

assign p_shl2_cast_fu_307_p1 = p_shl2_fu_299_p3;

assign p_shl2_fu_299_p3 = {{i_reg_207}, {6'd0}};

assign p_shl_cast_fu_295_p1 = p_shl_fu_287_p3;

assign p_shl_fu_287_p3 = {{i_reg_207}, {8'd0}};

assign sel_tmp1_fu_831_p2 = (tmp_178_reg_1077 ^ 1'd1);

assign sel_tmp21_demorgan_fu_874_p2 = (tmp_179_reg_1083 | sel_tmp6_demorgan_fu_841_p2);

assign sel_tmp2_fu_836_p2 = (tmp_182_reg_1100 & sel_tmp1_fu_831_p2);

assign sel_tmp3_fu_885_p2 = (sel_tmp9_fu_879_p2 & icmp4_fu_798_p2);

assign sel_tmp5_fu_868_p2 = (sel_tmp_fu_862_p2 & sel_tmp7_fu_851_p2);

assign sel_tmp6_demorgan_fu_841_p2 = (tmp_182_reg_1100 | tmp_178_reg_1077);

assign sel_tmp6_fu_845_p2 = (sel_tmp6_demorgan_fu_841_p2 ^ 1'd1);

assign sel_tmp7_fu_851_p2 = (tmp_179_reg_1083 & sel_tmp6_fu_845_p2);

assign sel_tmp8_fu_856_p2 = (tmp_184_fu_782_p2 & sel_tmp7_fu_851_p2);

assign sel_tmp9_fu_879_p2 = (sel_tmp21_demorgan_fu_874_p2 ^ 1'd1);

assign sel_tmp_fu_862_p2 = (tmp_184_fu_782_p2 ^ 1'd1);

assign sh_amt_cast_fu_774_p1 = sh_amt_fu_769_p3;

assign sh_amt_fu_769_p3 = ((tmp_179_reg_1083[0:0] === 1'b1) ? tmp_180_reg_1090 : tmp_181_reg_1095);

assign this_assign_fu_818_p3 = ((isneg_reg_1066[0:0] === 1'b1) ? 32'd4294967295 : 32'd0);

assign tmp24_cast_cast_fu_626_p3 = ((tmp_169_fu_618_p2[0:0] === 1'b1) ? 8'd112 : 8'd111);

assign tmp32_V_12_fu_598_p3 = ((icmp_reg_1016[0:0] === 1'b1) ? tmp32_V_9_fu_593_p2 : tmp32_V_reg_1021);

assign tmp32_V_15_fu_604_p1 = grp_fu_250_p1;

assign tmp32_V_9_fu_593_p2 = p_Val2_52_reg_1000 << tmp_243_cast_fu_589_p1;

assign tmp32_V_fu_580_p1 = tmp_224_fu_574_p2[31:0];

assign tmp_161_fu_395_p1 = p_Val2_s_reg_219;

assign tmp_162_fu_399_p0 = cconlayer_b_V_q0;

assign tmp_162_fu_399_p1 = tmp_162_fu_399_p0;

assign tmp_163_fu_419_p2 = ((p_Val2_49_fu_407_p2 == 33'd0) ? 1'b1 : 1'b0);


always @ (p_Result_8_fu_460_p3) begin
    if (p_Result_8_fu_460_p3[0] == 1'b1) begin
        tmp_164_fu_468_p3 = 64'd0;
    end else if (p_Result_8_fu_460_p3[1] == 1'b1) begin
        tmp_164_fu_468_p3 = 64'd1;
    end else if (p_Result_8_fu_460_p3[2] == 1'b1) begin
        tmp_164_fu_468_p3 = 64'd2;
    end else if (p_Result_8_fu_460_p3[3] == 1'b1) begin
        tmp_164_fu_468_p3 = 64'd3;
    end else if (p_Result_8_fu_460_p3[4] == 1'b1) begin
        tmp_164_fu_468_p3 = 64'd4;
    end else if (p_Result_8_fu_460_p3[5] == 1'b1) begin
        tmp_164_fu_468_p3 = 64'd5;
    end else if (p_Result_8_fu_460_p3[6] == 1'b1) begin
        tmp_164_fu_468_p3 = 64'd6;
    end else if (p_Result_8_fu_460_p3[7] == 1'b1) begin
        tmp_164_fu_468_p3 = 64'd7;
    end else if (p_Result_8_fu_460_p3[8] == 1'b1) begin
        tmp_164_fu_468_p3 = 64'd8;
    end else if (p_Result_8_fu_460_p3[9] == 1'b1) begin
        tmp_164_fu_468_p3 = 64'd9;
    end else if (p_Result_8_fu_460_p3[10] == 1'b1) begin
        tmp_164_fu_468_p3 = 64'd10;
    end else if (p_Result_8_fu_460_p3[11] == 1'b1) begin
        tmp_164_fu_468_p3 = 64'd11;
    end else if (p_Result_8_fu_460_p3[12] == 1'b1) begin
        tmp_164_fu_468_p3 = 64'd12;
    end else if (p_Result_8_fu_460_p3[13] == 1'b1) begin
        tmp_164_fu_468_p3 = 64'd13;
    end else if (p_Result_8_fu_460_p3[14] == 1'b1) begin
        tmp_164_fu_468_p3 = 64'd14;
    end else if (p_Result_8_fu_460_p3[15] == 1'b1) begin
        tmp_164_fu_468_p3 = 64'd15;
    end else if (p_Result_8_fu_460_p3[16] == 1'b1) begin
        tmp_164_fu_468_p3 = 64'd16;
    end else if (p_Result_8_fu_460_p3[17] == 1'b1) begin
        tmp_164_fu_468_p3 = 64'd17;
    end else if (p_Result_8_fu_460_p3[18] == 1'b1) begin
        tmp_164_fu_468_p3 = 64'd18;
    end else if (p_Result_8_fu_460_p3[19] == 1'b1) begin
        tmp_164_fu_468_p3 = 64'd19;
    end else if (p_Result_8_fu_460_p3[20] == 1'b1) begin
        tmp_164_fu_468_p3 = 64'd20;
    end else if (p_Result_8_fu_460_p3[21] == 1'b1) begin
        tmp_164_fu_468_p3 = 64'd21;
    end else if (p_Result_8_fu_460_p3[22] == 1'b1) begin
        tmp_164_fu_468_p3 = 64'd22;
    end else if (p_Result_8_fu_460_p3[23] == 1'b1) begin
        tmp_164_fu_468_p3 = 64'd23;
    end else if (p_Result_8_fu_460_p3[24] == 1'b1) begin
        tmp_164_fu_468_p3 = 64'd24;
    end else if (p_Result_8_fu_460_p3[25] == 1'b1) begin
        tmp_164_fu_468_p3 = 64'd25;
    end else if (p_Result_8_fu_460_p3[26] == 1'b1) begin
        tmp_164_fu_468_p3 = 64'd26;
    end else if (p_Result_8_fu_460_p3[27] == 1'b1) begin
        tmp_164_fu_468_p3 = 64'd27;
    end else if (p_Result_8_fu_460_p3[28] == 1'b1) begin
        tmp_164_fu_468_p3 = 64'd28;
    end else if (p_Result_8_fu_460_p3[29] == 1'b1) begin
        tmp_164_fu_468_p3 = 64'd29;
    end else if (p_Result_8_fu_460_p3[30] == 1'b1) begin
        tmp_164_fu_468_p3 = 64'd30;
    end else if (p_Result_8_fu_460_p3[31] == 1'b1) begin
        tmp_164_fu_468_p3 = 64'd31;
    end else if (p_Result_8_fu_460_p3[32] == 1'b1) begin
        tmp_164_fu_468_p3 = 64'd32;
    end else if (p_Result_8_fu_460_p3[33] == 1'b1) begin
        tmp_164_fu_468_p3 = 64'd33;
    end else if (p_Result_8_fu_460_p3[34] == 1'b1) begin
        tmp_164_fu_468_p3 = 64'd34;
    end else if (p_Result_8_fu_460_p3[35] == 1'b1) begin
        tmp_164_fu_468_p3 = 64'd35;
    end else if (p_Result_8_fu_460_p3[36] == 1'b1) begin
        tmp_164_fu_468_p3 = 64'd36;
    end else if (p_Result_8_fu_460_p3[37] == 1'b1) begin
        tmp_164_fu_468_p3 = 64'd37;
    end else if (p_Result_8_fu_460_p3[38] == 1'b1) begin
        tmp_164_fu_468_p3 = 64'd38;
    end else if (p_Result_8_fu_460_p3[39] == 1'b1) begin
        tmp_164_fu_468_p3 = 64'd39;
    end else if (p_Result_8_fu_460_p3[40] == 1'b1) begin
        tmp_164_fu_468_p3 = 64'd40;
    end else if (p_Result_8_fu_460_p3[41] == 1'b1) begin
        tmp_164_fu_468_p3 = 64'd41;
    end else if (p_Result_8_fu_460_p3[42] == 1'b1) begin
        tmp_164_fu_468_p3 = 64'd42;
    end else if (p_Result_8_fu_460_p3[43] == 1'b1) begin
        tmp_164_fu_468_p3 = 64'd43;
    end else if (p_Result_8_fu_460_p3[44] == 1'b1) begin
        tmp_164_fu_468_p3 = 64'd44;
    end else if (p_Result_8_fu_460_p3[45] == 1'b1) begin
        tmp_164_fu_468_p3 = 64'd45;
    end else if (p_Result_8_fu_460_p3[46] == 1'b1) begin
        tmp_164_fu_468_p3 = 64'd46;
    end else if (p_Result_8_fu_460_p3[47] == 1'b1) begin
        tmp_164_fu_468_p3 = 64'd47;
    end else if (p_Result_8_fu_460_p3[48] == 1'b1) begin
        tmp_164_fu_468_p3 = 64'd48;
    end else if (p_Result_8_fu_460_p3[49] == 1'b1) begin
        tmp_164_fu_468_p3 = 64'd49;
    end else if (p_Result_8_fu_460_p3[50] == 1'b1) begin
        tmp_164_fu_468_p3 = 64'd50;
    end else if (p_Result_8_fu_460_p3[51] == 1'b1) begin
        tmp_164_fu_468_p3 = 64'd51;
    end else if (p_Result_8_fu_460_p3[52] == 1'b1) begin
        tmp_164_fu_468_p3 = 64'd52;
    end else if (p_Result_8_fu_460_p3[53] == 1'b1) begin
        tmp_164_fu_468_p3 = 64'd53;
    end else if (p_Result_8_fu_460_p3[54] == 1'b1) begin
        tmp_164_fu_468_p3 = 64'd54;
    end else if (p_Result_8_fu_460_p3[55] == 1'b1) begin
        tmp_164_fu_468_p3 = 64'd55;
    end else if (p_Result_8_fu_460_p3[56] == 1'b1) begin
        tmp_164_fu_468_p3 = 64'd56;
    end else if (p_Result_8_fu_460_p3[57] == 1'b1) begin
        tmp_164_fu_468_p3 = 64'd57;
    end else if (p_Result_8_fu_460_p3[58] == 1'b1) begin
        tmp_164_fu_468_p3 = 64'd58;
    end else if (p_Result_8_fu_460_p3[59] == 1'b1) begin
        tmp_164_fu_468_p3 = 64'd59;
    end else if (p_Result_8_fu_460_p3[60] == 1'b1) begin
        tmp_164_fu_468_p3 = 64'd60;
    end else if (p_Result_8_fu_460_p3[61] == 1'b1) begin
        tmp_164_fu_468_p3 = 64'd61;
    end else if (p_Result_8_fu_460_p3[62] == 1'b1) begin
        tmp_164_fu_468_p3 = 64'd62;
    end else if (p_Result_8_fu_460_p3[63] == 1'b1) begin
        tmp_164_fu_468_p3 = 64'd63;
    end else begin
        tmp_164_fu_468_p3 = 64'd64;
    end
end

assign tmp_167_fu_584_p2 = (31'd31 - msb_idx_2_reg_1011);

assign tmp_169_fu_618_p2 = ((p_Result_s_206_reg_1036 != 8'd158) ? 1'b1 : 1'b0);

assign tmp_171_fu_640_p3 = {{is_neg_reg_995}, {p_Repl2_5_trunc_fu_634_p2}};

assign tmp_176_fu_701_p1 = exp_tmp_V_fu_691_p4;

assign tmp_177_fu_745_p3 = {{1'd1}, {tmp_229_reg_1072}};

assign tmp_178_fu_709_p2 = ((tmp_227_fu_679_p1 == 63'd0) ? 1'b1 : 1'b0);

assign tmp_179_fu_721_p2 = (($signed(F2_fu_715_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign tmp_180_fu_727_p2 = ($signed(12'd4080) + $signed(F2_fu_715_p2));

assign tmp_181_fu_733_p2 = (12'd16 - F2_fu_715_p2);

assign tmp_182_fu_739_p2 = ((F2_fu_715_p2 == 12'd16) ? 1'b1 : 1'b0);

assign tmp_184_fu_782_p2 = ((sh_amt_fu_769_p3 < 12'd54) ? 1'b1 : 1'b0);

assign tmp_186_fu_804_p1 = $unsigned(sh_amt_cast_fu_774_p1);

assign tmp_187_fu_808_p2 = $signed(man_V_4_fu_762_p3) >>> tmp_186_fu_804_p1;

assign tmp_189_fu_825_p2 = tmp_230_fu_778_p1 << sh_amt_cast_fu_774_p1;

assign tmp_190_fu_333_p2 = (j_cast2_fu_317_p1 + tmp_reg_951);

assign tmp_191_fu_342_p1 = $unsigned(tmp_232_cast_fu_338_p1);

assign tmp_192_fu_347_p1 = j_reg_231;

assign tmp_193_fu_366_p3 = {{p_Val2_s_reg_219}, {16'd0}};

assign tmp_213_fu_486_p1 = msb_idx_fu_480_p2[30:0];

assign tmp_214_fu_490_p3 = msb_idx_fu_480_p2[32'd31];

assign tmp_215_fu_506_p4 = {{msb_idx_2_fu_498_p3[30:5]}};

assign tmp_216_fu_522_p1 = msb_idx_2_fu_498_p3[5:0];

assign tmp_217_fu_526_p2 = ((msb_idx_2_fu_498_p3 < 31'd31) ? 1'b1 : 1'b0);

assign tmp_218_fu_532_p2 = ($signed(6'd33) + $signed(tmp_216_fu_522_p1));

integer ap_tvar_int_1;

always @ (p_Val2_48_cast_fu_447_p1) begin
    for (ap_tvar_int_1 = 33 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 32 - 0) begin
            tmp_219_fu_538_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            tmp_219_fu_538_p4[ap_tvar_int_1] = p_Val2_48_cast_fu_447_p1[32 - ap_tvar_int_1];
        end
    end
end

assign tmp_220_fu_548_p2 = (tmp_216_fu_522_p1 ^ 6'd63);

assign tmp_221_fu_554_p3 = ((tmp_217_fu_526_p2[0:0] === 1'b1) ? tmp_219_fu_538_p4 : p_Val2_48_cast_fu_447_p1);

assign tmp_222_fu_562_p3 = ((tmp_217_fu_526_p2[0:0] === 1'b1) ? tmp_220_fu_548_p2 : tmp_218_fu_532_p2);

assign tmp_223_fu_570_p1 = tmp_222_fu_562_p3;

assign tmp_224_fu_574_p2 = tmp_221_fu_554_p3 >> tmp_223_fu_570_p1;

assign tmp_226_fu_623_p1 = msb_idx_reg_1006[7:0];

assign tmp_227_fu_679_p1 = ireg_V_fu_675_p1[62:0];

assign tmp_229_fu_705_p1 = ireg_V_fu_675_p1[51:0];

assign tmp_230_fu_778_p1 = man_V_4_fu_762_p3[31:0];

assign tmp_231_fu_788_p4 = {{sh_amt_fu_769_p3[11:5]}};

assign tmp_232_cast_fu_338_p1 = $signed(tmp_190_fu_333_p2);

assign tmp_232_fu_814_p1 = tmp_187_fu_808_p2[31:0];

assign tmp_239_cast_fu_433_p2 = (32'd0 - p_Val2_46_cast_fu_413_p2);

assign tmp_243_cast_fu_589_p1 = tmp_167_fu_584_p2;

assign tmp_75_fu_403_p0 = cconlayer_b_V_q0;

assign tmp_75_fu_403_p1 = tmp_75_fu_403_p0;

assign tmp_76_fu_664_p1 = p_Result_16_op_fu_658_p2;

assign tmp_fu_311_p2 = (p_shl_cast_fu_295_p1 - p_shl2_cast_fu_307_p1);

assign tmp_s_fu_390_p1 = i_reg_207;

assign x_assign_fu_668_p3 = ((tmp_163_reg_990[0:0] === 1'b1) ? 32'd2147483648 : tmp_76_fu_664_p1);

always @ (posedge ap_clk) begin
    tmp_reg_951[5:0] <= 6'b000000;
    tmp_s_reg_980[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
end

endmodule //CconLayer
