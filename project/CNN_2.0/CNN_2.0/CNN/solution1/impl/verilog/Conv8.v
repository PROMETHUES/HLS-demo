// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Conv8 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        src_0_val_V_address0,
        src_0_val_V_ce0,
        src_0_val_V_q0,
        kernel_val_0_V_0_read,
        kernel_val_0_V_1_read,
        kernel_val_0_V_2_read,
        kernel_val_0_V_3_read,
        kernel_val_0_V_4_read,
        kernel_val_1_V_0_read,
        kernel_val_1_V_1_read,
        kernel_val_1_V_2_read,
        kernel_val_1_V_3_read,
        kernel_val_1_V_4_read,
        kernel_val_2_V_0_read,
        kernel_val_2_V_1_read,
        kernel_val_2_V_2_read,
        kernel_val_2_V_3_read,
        kernel_val_2_V_4_read,
        kernel_val_3_V_0_read,
        kernel_val_3_V_1_read,
        kernel_val_3_V_2_read,
        kernel_val_3_V_3_read,
        kernel_val_3_V_4_read,
        kernel_val_4_V_0_read,
        kernel_val_4_V_1_read,
        kernel_val_4_V_2_read,
        kernel_val_4_V_3_read,
        kernel_val_4_V_4_read,
        dst_val_V_address0,
        dst_val_V_ce0,
        dst_val_V_we0,
        dst_val_V_d0
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state10 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] src_0_val_V_address0;
output   src_0_val_V_ce0;
input  [23:0] src_0_val_V_q0;
input  [31:0] kernel_val_0_V_0_read;
input  [31:0] kernel_val_0_V_1_read;
input  [31:0] kernel_val_0_V_2_read;
input  [31:0] kernel_val_0_V_3_read;
input  [31:0] kernel_val_0_V_4_read;
input  [31:0] kernel_val_1_V_0_read;
input  [31:0] kernel_val_1_V_1_read;
input  [31:0] kernel_val_1_V_2_read;
input  [31:0] kernel_val_1_V_3_read;
input  [31:0] kernel_val_1_V_4_read;
input  [31:0] kernel_val_2_V_0_read;
input  [31:0] kernel_val_2_V_1_read;
input  [31:0] kernel_val_2_V_2_read;
input  [31:0] kernel_val_2_V_3_read;
input  [31:0] kernel_val_2_V_4_read;
input  [31:0] kernel_val_3_V_0_read;
input  [31:0] kernel_val_3_V_1_read;
input  [31:0] kernel_val_3_V_2_read;
input  [31:0] kernel_val_3_V_3_read;
input  [31:0] kernel_val_3_V_4_read;
input  [31:0] kernel_val_4_V_0_read;
input  [31:0] kernel_val_4_V_1_read;
input  [31:0] kernel_val_4_V_2_read;
input  [31:0] kernel_val_4_V_3_read;
input  [31:0] kernel_val_4_V_4_read;
output  [9:0] dst_val_V_address0;
output   dst_val_V_ce0;
output   dst_val_V_we0;
output  [31:0] dst_val_V_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg src_0_val_V_ce0;
reg dst_val_V_ce0;
reg dst_val_V_we0;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [4:0] j_reg_464;
wire  signed [47:0] OP2_V_0_cast_fu_475_p1;
reg  signed [47:0] OP2_V_0_cast_reg_1807;
wire  signed [47:0] OP2_V_0_1_fu_479_p1;
reg  signed [47:0] OP2_V_0_1_reg_1812;
wire  signed [47:0] OP2_V_0_2_fu_483_p1;
reg  signed [47:0] OP2_V_0_2_reg_1817;
wire  signed [47:0] OP2_V_0_3_fu_487_p1;
reg  signed [47:0] OP2_V_0_3_reg_1822;
wire  signed [47:0] OP2_V_0_4_fu_491_p1;
reg  signed [47:0] OP2_V_0_4_reg_1827;
wire  signed [47:0] OP2_V_1_fu_495_p1;
reg  signed [47:0] OP2_V_1_reg_1832;
wire  signed [47:0] OP2_V_1_1_fu_499_p1;
reg  signed [47:0] OP2_V_1_1_reg_1837;
wire  signed [47:0] OP2_V_1_2_fu_503_p1;
reg  signed [47:0] OP2_V_1_2_reg_1842;
wire  signed [47:0] OP2_V_1_3_fu_507_p1;
reg  signed [47:0] OP2_V_1_3_reg_1847;
wire  signed [47:0] OP2_V_1_4_fu_511_p1;
reg  signed [47:0] OP2_V_1_4_reg_1852;
wire  signed [47:0] OP2_V_2_fu_515_p1;
reg  signed [47:0] OP2_V_2_reg_1857;
wire  signed [47:0] OP2_V_2_1_fu_519_p1;
reg  signed [47:0] OP2_V_2_1_reg_1862;
wire  signed [47:0] OP2_V_2_2_fu_523_p1;
reg  signed [47:0] OP2_V_2_2_reg_1867;
wire  signed [47:0] OP2_V_2_3_fu_527_p1;
reg  signed [47:0] OP2_V_2_3_reg_1872;
wire  signed [47:0] OP2_V_2_4_fu_531_p1;
reg  signed [47:0] OP2_V_2_4_reg_1877;
wire  signed [47:0] OP2_V_3_fu_535_p1;
reg  signed [47:0] OP2_V_3_reg_1882;
wire  signed [47:0] OP2_V_3_1_fu_539_p1;
reg  signed [47:0] OP2_V_3_1_reg_1887;
wire  signed [47:0] OP2_V_3_2_fu_543_p1;
reg  signed [47:0] OP2_V_3_2_reg_1892;
wire  signed [47:0] OP2_V_3_3_fu_547_p1;
reg  signed [47:0] OP2_V_3_3_reg_1897;
wire  signed [47:0] OP2_V_3_4_fu_551_p1;
reg  signed [47:0] OP2_V_3_4_reg_1902;
wire  signed [47:0] OP2_V_4_fu_555_p1;
reg  signed [47:0] OP2_V_4_reg_1907;
wire  signed [47:0] OP2_V_4_1_fu_559_p1;
reg  signed [47:0] OP2_V_4_1_reg_1912;
wire  signed [47:0] OP2_V_4_2_fu_563_p1;
reg  signed [47:0] OP2_V_4_2_reg_1917;
wire  signed [47:0] OP2_V_4_3_fu_567_p1;
reg  signed [47:0] OP2_V_4_3_reg_1922;
wire  signed [47:0] OP2_V_4_4_fu_571_p1;
reg  signed [47:0] OP2_V_4_4_reg_1927;
wire   [0:0] exitcond_fu_579_p2;
wire    ap_CS_fsm_state2;
wire   [4:0] i_13_fu_585_p2;
reg   [4:0] i_13_reg_1936;
wire   [10:0] tmp_161_fu_615_p2;
reg   [10:0] tmp_161_reg_1941;
wire   [0:0] icmp_fu_631_p2;
reg   [0:0] icmp_reg_1946;
wire   [10:0] tmp_164_fu_663_p2;
reg   [10:0] tmp_164_reg_1951;
wire   [0:0] exitcond1_fu_669_p2;
reg   [0:0] exitcond1_reg_1956;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state6_pp0_stage0_iter3;
wire    ap_block_state7_pp0_stage0_iter4;
wire    ap_block_state8_pp0_stage0_iter5;
wire    ap_block_state9_pp0_stage0_iter6;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] exitcond1_reg_1956_pp0_iter1_reg;
reg   [0:0] exitcond1_reg_1956_pp0_iter2_reg;
reg   [0:0] exitcond1_reg_1956_pp0_iter3_reg;
wire   [4:0] j_11_fu_675_p2;
reg    ap_enable_reg_pp0_iter0;
reg   [4:0] LineBuffer_val_1_V_s_reg_1970;
reg   [4:0] LineBuffer_val_2_V_s_reg_1976;
reg   [4:0] LineBuffer_val_3_V_s_reg_1982;
reg   [4:0] LineBuffer_val_4_V_s_reg_1988;
wire   [0:0] or_cond_fu_719_p2;
reg   [0:0] or_cond_reg_1994;
reg   [0:0] or_cond_reg_1994_pp0_iter1_reg;
reg   [0:0] or_cond_reg_1994_pp0_iter2_reg;
reg   [0:0] or_cond_reg_1994_pp0_iter3_reg;
reg   [0:0] or_cond_reg_1994_pp0_iter4_reg;
reg   [0:0] or_cond_reg_1994_pp0_iter5_reg;
wire   [4:0] tmp_146_fu_724_p2;
reg   [4:0] tmp_146_reg_1998;
reg   [4:0] tmp_146_reg_1998_pp0_iter1_reg;
reg   [4:0] tmp_146_reg_1998_pp0_iter2_reg;
reg   [4:0] tmp_146_reg_1998_pp0_iter3_reg;
reg   [4:0] tmp_146_reg_1998_pp0_iter4_reg;
reg   [4:0] tmp_146_reg_1998_pp0_iter5_reg;
reg  signed [31:0] BlockBuffer_val_1_V_6_reg_2003;
reg  signed [31:0] BlockBuffer_val_1_V_7_reg_2008;
reg  signed [31:0] BlockBuffer_val_1_V_8_reg_2013;
reg  signed [31:0] BlockBuffer_val_2_V_4_reg_2018;
reg  signed [31:0] BlockBuffer_val_2_V_4_reg_2018_pp0_iter2_reg;
reg  signed [31:0] BlockBuffer_val_2_V_5_reg_2024;
reg  signed [31:0] BlockBuffer_val_2_V_5_reg_2024_pp0_iter2_reg;
reg  signed [31:0] BlockBuffer_val_2_V_6_reg_2029;
reg  signed [31:0] BlockBuffer_val_2_V_6_reg_2029_pp0_iter2_reg;
reg  signed [31:0] BlockBuffer_val_3_V_4_reg_2034;
reg  signed [31:0] BlockBuffer_val_3_V_4_reg_2034_pp0_iter2_reg;
reg  signed [31:0] BlockBuffer_val_3_V_4_reg_2034_pp0_iter3_reg;
reg  signed [31:0] BlockBuffer_val_3_V_5_reg_2040;
reg  signed [31:0] BlockBuffer_val_3_V_5_reg_2040_pp0_iter2_reg;
reg  signed [31:0] BlockBuffer_val_3_V_5_reg_2040_pp0_iter3_reg;
reg  signed [31:0] BlockBuffer_val_3_V_6_reg_2045;
reg  signed [31:0] BlockBuffer_val_3_V_6_reg_2045_pp0_iter2_reg;
reg  signed [31:0] BlockBuffer_val_3_V_6_reg_2045_pp0_iter3_reg;
reg  signed [31:0] BlockBuffer_val_4_V_4_reg_2050;
reg  signed [31:0] BlockBuffer_val_4_V_4_reg_2050_pp0_iter2_reg;
reg  signed [31:0] BlockBuffer_val_4_V_4_reg_2050_pp0_iter3_reg;
reg  signed [31:0] BlockBuffer_val_4_V_4_reg_2050_pp0_iter4_reg;
reg  signed [31:0] BlockBuffer_val_4_V_5_reg_2056;
reg  signed [31:0] BlockBuffer_val_4_V_5_reg_2056_pp0_iter2_reg;
reg  signed [31:0] BlockBuffer_val_4_V_5_reg_2056_pp0_iter3_reg;
reg  signed [31:0] BlockBuffer_val_4_V_5_reg_2056_pp0_iter4_reg;
reg  signed [31:0] BlockBuffer_val_4_V_6_reg_2061;
reg  signed [31:0] BlockBuffer_val_4_V_6_reg_2061_pp0_iter2_reg;
reg  signed [31:0] BlockBuffer_val_4_V_6_reg_2061_pp0_iter3_reg;
reg  signed [31:0] BlockBuffer_val_4_V_6_reg_2061_pp0_iter4_reg;
wire   [31:0] LineBuffer_val_2_V_q0;
reg  signed [31:0] BlockBuffer_val_1_V_9_reg_2066;
reg    ap_enable_reg_pp0_iter1;
wire   [31:0] LineBuffer_val_3_V_q0;
reg  signed [31:0] BlockBuffer_val_2_V_7_reg_2071;
reg  signed [31:0] BlockBuffer_val_2_V_7_reg_2071_pp0_iter2_reg;
wire   [23:0] LineBuffer_val_4_V_q0;
reg   [23:0] LineBuffer_val_4_V_1_reg_2076;
reg   [23:0] LineBuffer_val_4_V_1_reg_2076_pp0_iter2_reg;
reg   [23:0] LineBuffer_val_4_V_1_reg_2076_pp0_iter3_reg;
reg   [23:0] src_0_val_V_load_reg_2081;
reg   [23:0] src_0_val_V_load_reg_2081_pp0_iter2_reg;
reg   [23:0] src_0_val_V_load_reg_2081_pp0_iter3_reg;
reg   [23:0] src_0_val_V_load_reg_2081_pp0_iter4_reg;
reg   [23:0] src_0_val_V_load_reg_2081_pp0_iter5_reg;
wire   [47:0] p_Val2_73_0_3_fu_869_p2;
reg   [47:0] p_Val2_73_0_3_reg_2086;
reg   [31:0] tmp_168_reg_2091;
wire   [47:0] p_Val2_73_0_4_fu_888_p2;
reg   [47:0] p_Val2_73_0_4_reg_2096;
wire   [47:0] p_Val2_73_1_fu_897_p2;
reg   [47:0] p_Val2_73_1_reg_2101;
wire   [47:0] p_Val2_73_1_3_fu_1115_p2;
reg   [47:0] p_Val2_73_1_3_reg_2106;
reg   [31:0] tmp_173_reg_2111;
wire   [47:0] p_Val2_73_1_4_fu_1133_p2;
reg   [47:0] p_Val2_73_1_4_reg_2116;
wire   [47:0] p_Val2_73_2_fu_1142_p2;
reg   [47:0] p_Val2_73_2_reg_2121;
wire   [47:0] p_Val2_73_2_3_fu_1279_p2;
reg   [47:0] p_Val2_73_2_3_reg_2126;
reg   [31:0] tmp_178_reg_2131;
wire   [47:0] p_Val2_73_2_4_fu_1297_p2;
reg   [47:0] p_Val2_73_2_4_reg_2136;
wire   [47:0] p_Val2_73_3_fu_1306_p2;
reg   [47:0] p_Val2_73_3_reg_2141;
wire   [47:0] p_Val2_73_3_3_fu_1443_p2;
reg   [47:0] p_Val2_73_3_3_reg_2146;
reg   [31:0] tmp_183_reg_2151;
wire   [47:0] p_Val2_73_3_4_fu_1461_p2;
reg   [47:0] p_Val2_73_3_4_reg_2156;
wire   [47:0] p_Val2_73_4_fu_1470_p2;
reg   [47:0] p_Val2_73_4_reg_2161;
wire   [47:0] p_Val2_73_4_3_fu_1604_p2;
reg   [47:0] p_Val2_73_4_3_reg_2166;
reg   [31:0] tmp_188_reg_2171;
wire    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter2;
reg    ap_condition_pp0_exit_iter1_state4;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
wire   [4:0] LineBuffer_val_1_V_address0;
reg    LineBuffer_val_1_V_ce0;
wire   [31:0] LineBuffer_val_1_V_q0;
reg    LineBuffer_val_1_V_ce1;
reg    LineBuffer_val_1_V_we1;
wire   [4:0] LineBuffer_val_2_V_address0;
reg    LineBuffer_val_2_V_ce0;
reg    LineBuffer_val_2_V_ce1;
reg    LineBuffer_val_2_V_we1;
wire   [4:0] LineBuffer_val_3_V_address0;
reg    LineBuffer_val_3_V_ce0;
reg    LineBuffer_val_3_V_ce1;
reg    LineBuffer_val_3_V_we1;
wire   [31:0] LineBuffer_val_3_V_d1;
wire   [4:0] LineBuffer_val_4_V_address0;
reg    LineBuffer_val_4_V_ce0;
reg    LineBuffer_val_4_V_ce1;
reg    LineBuffer_val_4_V_we1;
reg   [4:0] i_reg_453;
wire    ap_CS_fsm_state10;
wire  signed [63:0] tmp_181_cast_fu_698_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] tmp_144_fu_681_p1;
wire  signed [63:0] tmp_206_cast_fu_1682_p1;
reg   [31:0] BlockBuffer_val_0_V_fu_114;
reg   [31:0] BlockBuffer_val_0_V_3_fu_118;
reg   [31:0] BlockBuffer_val_0_V_4_fu_122;
reg   [31:0] BlockBuffer_val_0_V_5_fu_126;
reg   [31:0] BlockBuffer_val_1_V_fu_130;
reg   [31:0] BlockBuffer_val_1_V_3_fu_134;
reg   [31:0] BlockBuffer_val_1_V_4_fu_138;
reg   [31:0] BlockBuffer_val_1_V_5_fu_142;
reg   [31:0] BlockBuffer_val_2_V_fu_146;
reg   [31:0] BlockBuffer_val_2_V_1_fu_150;
reg   [31:0] BlockBuffer_val_2_V_2_fu_154;
reg   [31:0] BlockBuffer_val_2_V_3_fu_158;
reg   [31:0] BlockBuffer_val_3_V_fu_162;
reg   [31:0] BlockBuffer_val_3_V_1_fu_166;
reg   [31:0] BlockBuffer_val_3_V_2_fu_170;
reg   [31:0] BlockBuffer_val_3_V_3_fu_174;
wire   [31:0] BlockBuffer_val_3_V_7_fu_775_p1;
reg   [31:0] BlockBuffer_val_4_V_fu_178;
reg   [31:0] BlockBuffer_val_4_V_1_fu_182;
reg   [31:0] BlockBuffer_val_4_V_2_fu_186;
reg   [31:0] BlockBuffer_val_4_V_3_fu_190;
wire   [31:0] BlockBuffer_val_4_V_7_fu_780_p1;
wire   [9:0] tmp_fu_591_p3;
wire   [6:0] tmp_s_fu_603_p3;
wire   [10:0] p_shl2_cast_fu_599_p1;
wire   [10:0] p_shl3_cast_fu_611_p1;
wire   [2:0] tmp_207_fu_621_p4;
wire   [5:0] i_cast_fu_575_p1;
wire   [5:0] tmp_142_fu_637_p2;
wire   [8:0] tmp_163_fu_651_p3;
wire   [10:0] tmp_162_fu_643_p3;
wire  signed [10:0] p_shl1_cast_fu_659_p1;
wire   [10:0] tmp_144_cast_fu_689_p1;
wire   [10:0] tmp_165_fu_693_p2;
wire   [2:0] tmp_208_fu_703_p4;
wire   [0:0] icmp2_fu_713_p2;
wire  signed [31:0] OP1_V_0_cast_fu_790_p0;
wire  signed [31:0] p_Val2_s_fu_794_p0;
wire  signed [31:0] p_Val2_s_fu_794_p1;
wire  signed [31:0] OP1_V_0_1_fu_799_p0;
wire  signed [31:0] p_Val2_73_0_1_fu_803_p0;
wire  signed [31:0] p_Val2_73_0_1_fu_803_p1;
wire   [47:0] p_Val2_s_fu_794_p2;
wire   [31:0] tmp_166_fu_808_p4;
wire   [47:0] tmp_412_0_1_fu_818_p3;
wire   [47:0] p_Val2_73_0_1_fu_803_p2;
wire  signed [31:0] OP1_V_0_2_fu_832_p0;
wire  signed [31:0] p_Val2_73_0_2_fu_836_p0;
wire  signed [31:0] p_Val2_73_0_2_fu_836_p1;
wire   [47:0] p_Val2_74_0_1_fu_826_p2;
wire   [31:0] tmp_167_fu_841_p4;
wire   [47:0] tmp_412_0_2_fu_851_p3;
wire   [47:0] p_Val2_73_0_2_fu_836_p2;
wire  signed [31:0] OP1_V_0_3_fu_865_p0;
wire  signed [31:0] p_Val2_73_0_3_fu_869_p0;
wire  signed [31:0] p_Val2_73_0_3_fu_869_p1;
wire   [47:0] p_Val2_74_0_2_fu_859_p2;
wire  signed [31:0] OP1_V_0_4_fu_884_p0;
wire  signed [31:0] p_Val2_73_0_4_fu_888_p0;
wire  signed [31:0] p_Val2_73_0_4_fu_888_p1;
wire  signed [31:0] OP1_V_1_fu_893_p0;
wire  signed [31:0] p_Val2_73_1_fu_897_p0;
wire  signed [31:0] p_Val2_73_1_fu_897_p1;
wire   [47:0] tmp_412_0_3_fu_990_p3;
wire   [47:0] p_Val2_74_0_3_fu_997_p2;
wire   [31:0] tmp_169_fu_1002_p4;
wire   [47:0] tmp_412_0_4_fu_1012_p3;
wire   [47:0] p_Val2_74_0_4_fu_1020_p2;
wire   [31:0] tmp_170_fu_1025_p4;
wire   [47:0] tmp_412_1_fu_1035_p3;
wire  signed [31:0] p_Val2_73_1_1_fu_1051_p0;
wire  signed [31:0] p_Val2_73_1_1_fu_1051_p1;
wire   [47:0] p_Val2_74_1_fu_1043_p2;
wire   [31:0] tmp_171_fu_1056_p4;
wire   [47:0] tmp_412_1_1_fu_1066_p3;
wire   [47:0] p_Val2_73_1_1_fu_1051_p2;
wire  signed [31:0] p_Val2_73_1_2_fu_1083_p0;
wire  signed [31:0] p_Val2_73_1_2_fu_1083_p1;
wire   [47:0] p_Val2_74_1_1_fu_1074_p2;
wire   [31:0] tmp_172_fu_1088_p4;
wire   [47:0] tmp_412_1_2_fu_1098_p3;
wire   [47:0] p_Val2_73_1_2_fu_1083_p2;
wire  signed [31:0] p_Val2_73_1_3_fu_1115_p0;
wire  signed [31:0] p_Val2_73_1_3_fu_1115_p1;
wire   [47:0] p_Val2_74_1_2_fu_1106_p2;
wire  signed [31:0] p_Val2_73_1_4_fu_1133_p0;
wire  signed [31:0] p_Val2_73_1_4_fu_1133_p1;
wire  signed [31:0] OP1_V_2_fu_1138_p0;
wire  signed [31:0] p_Val2_73_2_fu_1142_p0;
wire  signed [31:0] p_Val2_73_2_fu_1142_p1;
wire   [47:0] tmp_412_1_3_fu_1154_p3;
wire   [47:0] p_Val2_74_1_3_fu_1161_p2;
wire   [31:0] tmp_174_fu_1166_p4;
wire   [47:0] tmp_412_1_4_fu_1176_p3;
wire   [47:0] p_Val2_74_1_4_fu_1184_p2;
wire   [31:0] tmp_175_fu_1189_p4;
wire   [47:0] tmp_412_2_fu_1199_p3;
wire  signed [31:0] p_Val2_73_2_1_fu_1215_p0;
wire  signed [31:0] p_Val2_73_2_1_fu_1215_p1;
wire   [47:0] p_Val2_74_2_fu_1207_p2;
wire   [31:0] tmp_176_fu_1220_p4;
wire   [47:0] tmp_412_2_1_fu_1230_p3;
wire   [47:0] p_Val2_73_2_1_fu_1215_p2;
wire  signed [31:0] p_Val2_73_2_2_fu_1247_p0;
wire  signed [31:0] p_Val2_73_2_2_fu_1247_p1;
wire   [47:0] p_Val2_74_2_1_fu_1238_p2;
wire   [31:0] tmp_177_fu_1252_p4;
wire   [47:0] tmp_412_2_2_fu_1262_p3;
wire   [47:0] p_Val2_73_2_2_fu_1247_p2;
wire  signed [31:0] p_Val2_73_2_3_fu_1279_p0;
wire  signed [31:0] p_Val2_73_2_3_fu_1279_p1;
wire   [47:0] p_Val2_74_2_2_fu_1270_p2;
wire  signed [31:0] p_Val2_73_2_4_fu_1297_p0;
wire  signed [31:0] p_Val2_73_2_4_fu_1297_p1;
wire  signed [31:0] OP1_V_3_fu_1302_p0;
wire  signed [31:0] p_Val2_73_3_fu_1306_p0;
wire  signed [31:0] p_Val2_73_3_fu_1306_p1;
wire   [47:0] tmp_412_2_3_fu_1318_p3;
wire   [47:0] p_Val2_74_2_3_fu_1325_p2;
wire   [31:0] tmp_179_fu_1330_p4;
wire   [47:0] tmp_412_2_4_fu_1340_p3;
wire   [47:0] p_Val2_74_2_4_fu_1348_p2;
wire   [31:0] tmp_180_fu_1353_p4;
wire   [47:0] tmp_412_3_fu_1363_p3;
wire  signed [31:0] p_Val2_73_3_1_fu_1379_p0;
wire  signed [31:0] p_Val2_73_3_1_fu_1379_p1;
wire   [47:0] p_Val2_74_3_fu_1371_p2;
wire   [31:0] tmp_181_fu_1384_p4;
wire   [47:0] tmp_412_3_1_fu_1394_p3;
wire   [47:0] p_Val2_73_3_1_fu_1379_p2;
wire  signed [31:0] p_Val2_73_3_2_fu_1411_p0;
wire  signed [31:0] p_Val2_73_3_2_fu_1411_p1;
wire   [47:0] p_Val2_74_3_1_fu_1402_p2;
wire   [31:0] tmp_182_fu_1416_p4;
wire   [47:0] tmp_412_3_2_fu_1426_p3;
wire   [47:0] p_Val2_73_3_2_fu_1411_p2;
wire  signed [31:0] p_Val2_73_3_3_fu_1443_p0;
wire  signed [31:0] p_Val2_73_3_3_fu_1443_p1;
wire   [47:0] p_Val2_74_3_2_fu_1434_p2;
wire  signed [31:0] p_Val2_73_3_4_fu_1461_p0;
wire   [23:0] p_Val2_73_3_4_fu_1461_p1;
wire  signed [31:0] OP1_V_4_fu_1466_p0;
wire  signed [31:0] p_Val2_73_4_fu_1470_p0;
wire  signed [31:0] p_Val2_73_4_fu_1470_p1;
wire   [47:0] tmp_412_3_3_fu_1479_p3;
wire   [47:0] p_Val2_74_3_3_fu_1486_p2;
wire   [31:0] tmp_184_fu_1491_p4;
wire   [47:0] tmp_412_3_4_fu_1501_p3;
wire   [47:0] p_Val2_74_3_4_fu_1509_p2;
wire   [31:0] tmp_185_fu_1514_p4;
wire   [47:0] tmp_412_4_fu_1524_p3;
wire  signed [31:0] p_Val2_73_4_1_fu_1540_p0;
wire  signed [31:0] p_Val2_73_4_1_fu_1540_p1;
wire   [47:0] p_Val2_74_4_fu_1532_p2;
wire   [31:0] tmp_186_fu_1545_p4;
wire   [47:0] tmp_412_4_1_fu_1555_p3;
wire   [47:0] p_Val2_73_4_1_fu_1540_p2;
wire  signed [31:0] p_Val2_73_4_2_fu_1572_p0;
wire  signed [31:0] p_Val2_73_4_2_fu_1572_p1;
wire   [47:0] p_Val2_74_4_1_fu_1563_p2;
wire   [31:0] tmp_187_fu_1577_p4;
wire   [47:0] tmp_412_4_2_fu_1587_p3;
wire   [47:0] p_Val2_73_4_2_fu_1572_p2;
wire  signed [31:0] p_Val2_73_4_3_fu_1604_p0;
wire  signed [31:0] p_Val2_73_4_3_fu_1604_p1;
wire   [47:0] p_Val2_74_4_2_fu_1595_p2;
wire   [47:0] tmp_412_4_3_fu_1619_p3;
wire  signed [31:0] p_Val2_73_4_4_fu_1634_p0;
wire   [23:0] p_Val2_73_4_4_fu_1634_p1;
wire   [47:0] p_Val2_74_4_3_fu_1626_p2;
wire   [31:0] tmp_189_fu_1639_p4;
wire   [47:0] tmp_412_4_4_fu_1649_p3;
wire   [47:0] p_Val2_73_4_4_fu_1634_p2;
wire   [47:0] p_Val2_74_4_4_fu_1657_p2;
wire   [10:0] tmp_147_cast_fu_1674_p1;
wire   [10:0] tmp_190_fu_1677_p2;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [47:0] p_Val2_73_3_4_fu_1461_p10;
wire   [47:0] p_Val2_73_4_4_fu_1634_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
end

Conv8_LineBuffer_g8j #(
    .DataWidth( 32 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
LineBuffer_val_1_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(LineBuffer_val_1_V_address0),
    .ce0(LineBuffer_val_1_V_ce0),
    .q0(LineBuffer_val_1_V_q0),
    .address1(LineBuffer_val_1_V_s_reg_1970),
    .ce1(LineBuffer_val_1_V_ce1),
    .we1(LineBuffer_val_1_V_we1),
    .d1(LineBuffer_val_2_V_q0)
);

Conv8_LineBuffer_g8j #(
    .DataWidth( 32 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
LineBuffer_val_2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(LineBuffer_val_2_V_address0),
    .ce0(LineBuffer_val_2_V_ce0),
    .q0(LineBuffer_val_2_V_q0),
    .address1(LineBuffer_val_2_V_s_reg_1976),
    .ce1(LineBuffer_val_2_V_ce1),
    .we1(LineBuffer_val_2_V_we1),
    .d1(LineBuffer_val_3_V_q0)
);

Conv8_LineBuffer_g8j #(
    .DataWidth( 32 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
LineBuffer_val_3_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(LineBuffer_val_3_V_address0),
    .ce0(LineBuffer_val_3_V_ce0),
    .q0(LineBuffer_val_3_V_q0),
    .address1(LineBuffer_val_3_V_s_reg_1982),
    .ce1(LineBuffer_val_3_V_ce1),
    .we1(LineBuffer_val_3_V_we1),
    .d1(LineBuffer_val_3_V_d1)
);

Conv8_LineBuffer_jbC #(
    .DataWidth( 24 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
LineBuffer_val_4_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(LineBuffer_val_4_V_address0),
    .ce0(LineBuffer_val_4_V_ce0),
    .q0(LineBuffer_val_4_V_q0),
    .address1(LineBuffer_val_4_V_s_reg_1988),
    .ce1(LineBuffer_val_4_V_ce1),
    .we1(LineBuffer_val_4_V_we1),
    .d1(src_0_val_V_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond1_fu_669_p2 == 1'd1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_579_p2 == 1'd0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter1_state4)) begin
                ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter0;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_579_p2 == 1'd0))) begin
            ap_enable_reg_pp0_iter6 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        i_reg_453 <= i_13_reg_1936;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_453 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond1_fu_669_p2 == 1'd0))) begin
        j_reg_464 <= j_11_fu_675_p2;
    end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_579_p2 == 1'd0))) begin
        j_reg_464 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond1_reg_1956 == 1'd0))) begin
        BlockBuffer_val_0_V_3_fu_118 <= BlockBuffer_val_0_V_4_fu_122;
        BlockBuffer_val_0_V_4_fu_122 <= BlockBuffer_val_0_V_5_fu_126;
        BlockBuffer_val_0_V_5_fu_126 <= LineBuffer_val_1_V_q0;
        BlockBuffer_val_0_V_fu_114 <= BlockBuffer_val_0_V_3_fu_118;
        BlockBuffer_val_1_V_3_fu_134 <= BlockBuffer_val_1_V_4_fu_138;
        BlockBuffer_val_1_V_4_fu_138 <= BlockBuffer_val_1_V_5_fu_142;
        BlockBuffer_val_1_V_5_fu_142 <= LineBuffer_val_2_V_q0;
        BlockBuffer_val_1_V_9_reg_2066 <= LineBuffer_val_2_V_q0;
        BlockBuffer_val_1_V_fu_130 <= BlockBuffer_val_1_V_3_fu_134;
        BlockBuffer_val_2_V_1_fu_150 <= BlockBuffer_val_2_V_2_fu_154;
        BlockBuffer_val_2_V_2_fu_154 <= BlockBuffer_val_2_V_3_fu_158;
        BlockBuffer_val_2_V_3_fu_158 <= LineBuffer_val_3_V_q0;
        BlockBuffer_val_2_V_7_reg_2071 <= LineBuffer_val_3_V_q0;
        BlockBuffer_val_3_V_1_fu_166[23 : 0] <= BlockBuffer_val_3_V_2_fu_170[23 : 0];
        BlockBuffer_val_3_V_2_fu_170[23 : 0] <= BlockBuffer_val_3_V_3_fu_174[23 : 0];
        BlockBuffer_val_3_V_3_fu_174[23 : 0] <= BlockBuffer_val_3_V_7_fu_775_p1[23 : 0];
        BlockBuffer_val_4_V_1_fu_182[23 : 0] <= BlockBuffer_val_4_V_2_fu_186[23 : 0];
        BlockBuffer_val_4_V_2_fu_186[23 : 0] <= BlockBuffer_val_4_V_3_fu_190[23 : 0];
        BlockBuffer_val_4_V_3_fu_190[23 : 0] <= BlockBuffer_val_4_V_7_fu_780_p1[23 : 0];
        LineBuffer_val_4_V_1_reg_2076 <= LineBuffer_val_4_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        BlockBuffer_val_1_V_6_reg_2003 <= BlockBuffer_val_1_V_3_fu_134;
        BlockBuffer_val_1_V_7_reg_2008 <= BlockBuffer_val_1_V_4_fu_138;
        BlockBuffer_val_1_V_8_reg_2013 <= BlockBuffer_val_1_V_5_fu_142;
        BlockBuffer_val_2_V_4_reg_2018 <= BlockBuffer_val_2_V_1_fu_150;
        BlockBuffer_val_2_V_5_reg_2024 <= BlockBuffer_val_2_V_2_fu_154;
        BlockBuffer_val_2_V_6_reg_2029 <= BlockBuffer_val_2_V_3_fu_158;
        BlockBuffer_val_3_V_4_reg_2034[23 : 0] <= BlockBuffer_val_3_V_1_fu_166[23 : 0];
        BlockBuffer_val_3_V_5_reg_2040[23 : 0] <= BlockBuffer_val_3_V_2_fu_170[23 : 0];
        BlockBuffer_val_3_V_6_reg_2045[23 : 0] <= BlockBuffer_val_3_V_3_fu_174[23 : 0];
        BlockBuffer_val_4_V_4_reg_2050[23 : 0] <= BlockBuffer_val_4_V_1_fu_182[23 : 0];
        BlockBuffer_val_4_V_5_reg_2056[23 : 0] <= BlockBuffer_val_4_V_2_fu_186[23 : 0];
        BlockBuffer_val_4_V_6_reg_2061[23 : 0] <= BlockBuffer_val_4_V_3_fu_190[23 : 0];
        exitcond1_reg_1956 <= exitcond1_fu_669_p2;
        exitcond1_reg_1956_pp0_iter1_reg <= exitcond1_reg_1956;
        or_cond_reg_1994_pp0_iter1_reg <= or_cond_reg_1994;
        tmp_146_reg_1998_pp0_iter1_reg <= tmp_146_reg_1998;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        BlockBuffer_val_2_V_4_reg_2018_pp0_iter2_reg <= BlockBuffer_val_2_V_4_reg_2018;
        BlockBuffer_val_2_V_5_reg_2024_pp0_iter2_reg <= BlockBuffer_val_2_V_5_reg_2024;
        BlockBuffer_val_2_V_6_reg_2029_pp0_iter2_reg <= BlockBuffer_val_2_V_6_reg_2029;
        BlockBuffer_val_2_V_7_reg_2071_pp0_iter2_reg <= BlockBuffer_val_2_V_7_reg_2071;
        BlockBuffer_val_3_V_4_reg_2034_pp0_iter2_reg[23 : 0] <= BlockBuffer_val_3_V_4_reg_2034[23 : 0];
        BlockBuffer_val_3_V_4_reg_2034_pp0_iter3_reg[23 : 0] <= BlockBuffer_val_3_V_4_reg_2034_pp0_iter2_reg[23 : 0];
        BlockBuffer_val_3_V_5_reg_2040_pp0_iter2_reg[23 : 0] <= BlockBuffer_val_3_V_5_reg_2040[23 : 0];
        BlockBuffer_val_3_V_5_reg_2040_pp0_iter3_reg[23 : 0] <= BlockBuffer_val_3_V_5_reg_2040_pp0_iter2_reg[23 : 0];
        BlockBuffer_val_3_V_6_reg_2045_pp0_iter2_reg[23 : 0] <= BlockBuffer_val_3_V_6_reg_2045[23 : 0];
        BlockBuffer_val_3_V_6_reg_2045_pp0_iter3_reg[23 : 0] <= BlockBuffer_val_3_V_6_reg_2045_pp0_iter2_reg[23 : 0];
        BlockBuffer_val_4_V_4_reg_2050_pp0_iter2_reg[23 : 0] <= BlockBuffer_val_4_V_4_reg_2050[23 : 0];
        BlockBuffer_val_4_V_4_reg_2050_pp0_iter3_reg[23 : 0] <= BlockBuffer_val_4_V_4_reg_2050_pp0_iter2_reg[23 : 0];
        BlockBuffer_val_4_V_4_reg_2050_pp0_iter4_reg[23 : 0] <= BlockBuffer_val_4_V_4_reg_2050_pp0_iter3_reg[23 : 0];
        BlockBuffer_val_4_V_5_reg_2056_pp0_iter2_reg[23 : 0] <= BlockBuffer_val_4_V_5_reg_2056[23 : 0];
        BlockBuffer_val_4_V_5_reg_2056_pp0_iter3_reg[23 : 0] <= BlockBuffer_val_4_V_5_reg_2056_pp0_iter2_reg[23 : 0];
        BlockBuffer_val_4_V_5_reg_2056_pp0_iter4_reg[23 : 0] <= BlockBuffer_val_4_V_5_reg_2056_pp0_iter3_reg[23 : 0];
        BlockBuffer_val_4_V_6_reg_2061_pp0_iter2_reg[23 : 0] <= BlockBuffer_val_4_V_6_reg_2061[23 : 0];
        BlockBuffer_val_4_V_6_reg_2061_pp0_iter3_reg[23 : 0] <= BlockBuffer_val_4_V_6_reg_2061_pp0_iter2_reg[23 : 0];
        BlockBuffer_val_4_V_6_reg_2061_pp0_iter4_reg[23 : 0] <= BlockBuffer_val_4_V_6_reg_2061_pp0_iter3_reg[23 : 0];
        LineBuffer_val_4_V_1_reg_2076_pp0_iter2_reg <= LineBuffer_val_4_V_1_reg_2076;
        LineBuffer_val_4_V_1_reg_2076_pp0_iter3_reg <= LineBuffer_val_4_V_1_reg_2076_pp0_iter2_reg;
        exitcond1_reg_1956_pp0_iter2_reg <= exitcond1_reg_1956_pp0_iter1_reg;
        exitcond1_reg_1956_pp0_iter3_reg <= exitcond1_reg_1956_pp0_iter2_reg;
        or_cond_reg_1994_pp0_iter2_reg <= or_cond_reg_1994_pp0_iter1_reg;
        or_cond_reg_1994_pp0_iter3_reg <= or_cond_reg_1994_pp0_iter2_reg;
        or_cond_reg_1994_pp0_iter4_reg <= or_cond_reg_1994_pp0_iter3_reg;
        or_cond_reg_1994_pp0_iter5_reg <= or_cond_reg_1994_pp0_iter4_reg;
        src_0_val_V_load_reg_2081_pp0_iter2_reg <= src_0_val_V_load_reg_2081;
        src_0_val_V_load_reg_2081_pp0_iter3_reg <= src_0_val_V_load_reg_2081_pp0_iter2_reg;
        src_0_val_V_load_reg_2081_pp0_iter4_reg <= src_0_val_V_load_reg_2081_pp0_iter3_reg;
        src_0_val_V_load_reg_2081_pp0_iter5_reg <= src_0_val_V_load_reg_2081_pp0_iter4_reg;
        tmp_146_reg_1998_pp0_iter2_reg <= tmp_146_reg_1998_pp0_iter1_reg;
        tmp_146_reg_1998_pp0_iter3_reg <= tmp_146_reg_1998_pp0_iter2_reg;
        tmp_146_reg_1998_pp0_iter4_reg <= tmp_146_reg_1998_pp0_iter3_reg;
        tmp_146_reg_1998_pp0_iter5_reg <= tmp_146_reg_1998_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond1_reg_1956_pp0_iter1_reg == 1'd0))) begin
        BlockBuffer_val_2_V_fu_146 <= BlockBuffer_val_2_V_4_reg_2018;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond1_reg_1956_pp0_iter2_reg == 1'd0))) begin
        BlockBuffer_val_3_V_fu_162[23 : 0] <= BlockBuffer_val_3_V_4_reg_2034_pp0_iter2_reg[23 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond1_reg_1956_pp0_iter3_reg == 1'd0))) begin
        BlockBuffer_val_4_V_fu_178[23 : 0] <= BlockBuffer_val_4_V_4_reg_2050_pp0_iter3_reg[23 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond1_fu_669_p2 == 1'd0))) begin
        LineBuffer_val_1_V_s_reg_1970 <= tmp_144_fu_681_p1;
        LineBuffer_val_2_V_s_reg_1976 <= tmp_144_fu_681_p1;
        LineBuffer_val_3_V_s_reg_1982 <= tmp_144_fu_681_p1;
        LineBuffer_val_4_V_s_reg_1988 <= tmp_144_fu_681_p1;
        or_cond_reg_1994 <= or_cond_fu_719_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        OP2_V_0_1_reg_1812 <= OP2_V_0_1_fu_479_p1;
        OP2_V_0_2_reg_1817 <= OP2_V_0_2_fu_483_p1;
        OP2_V_0_3_reg_1822 <= OP2_V_0_3_fu_487_p1;
        OP2_V_0_4_reg_1827 <= OP2_V_0_4_fu_491_p1;
        OP2_V_0_cast_reg_1807 <= OP2_V_0_cast_fu_475_p1;
        OP2_V_1_1_reg_1837 <= OP2_V_1_1_fu_499_p1;
        OP2_V_1_2_reg_1842 <= OP2_V_1_2_fu_503_p1;
        OP2_V_1_3_reg_1847 <= OP2_V_1_3_fu_507_p1;
        OP2_V_1_4_reg_1852 <= OP2_V_1_4_fu_511_p1;
        OP2_V_1_reg_1832 <= OP2_V_1_fu_495_p1;
        OP2_V_2_1_reg_1862 <= OP2_V_2_1_fu_519_p1;
        OP2_V_2_2_reg_1867 <= OP2_V_2_2_fu_523_p1;
        OP2_V_2_3_reg_1872 <= OP2_V_2_3_fu_527_p1;
        OP2_V_2_4_reg_1877 <= OP2_V_2_4_fu_531_p1;
        OP2_V_2_reg_1857 <= OP2_V_2_fu_515_p1;
        OP2_V_3_1_reg_1887 <= OP2_V_3_1_fu_539_p1;
        OP2_V_3_2_reg_1892 <= OP2_V_3_2_fu_543_p1;
        OP2_V_3_3_reg_1897 <= OP2_V_3_3_fu_547_p1;
        OP2_V_3_4_reg_1902 <= OP2_V_3_4_fu_551_p1;
        OP2_V_3_reg_1882 <= OP2_V_3_fu_535_p1;
        OP2_V_4_1_reg_1912 <= OP2_V_4_1_fu_559_p1;
        OP2_V_4_2_reg_1917 <= OP2_V_4_2_fu_563_p1;
        OP2_V_4_3_reg_1922 <= OP2_V_4_3_fu_567_p1;
        OP2_V_4_4_reg_1927 <= OP2_V_4_4_fu_571_p1;
        OP2_V_4_reg_1907 <= OP2_V_4_fu_555_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_13_reg_1936 <= i_13_fu_585_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_579_p2 == 1'd0))) begin
        icmp_reg_1946 <= icmp_fu_631_p2;
        tmp_161_reg_1941[10 : 2] <= tmp_161_fu_615_p2[10 : 2];
        tmp_164_reg_1951[10 : 3] <= tmp_164_fu_663_p2[10 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (or_cond_reg_1994 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond1_reg_1956 == 1'd0))) begin
        p_Val2_73_0_3_reg_2086 <= p_Val2_73_0_3_fu_869_p2;
        p_Val2_73_0_4_reg_2096 <= p_Val2_73_0_4_fu_888_p2;
        p_Val2_73_1_reg_2101 <= p_Val2_73_1_fu_897_p2;
        tmp_168_reg_2091 <= {{p_Val2_74_0_2_fu_859_p2[47:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_reg_1994_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_73_1_3_reg_2106 <= p_Val2_73_1_3_fu_1115_p2;
        p_Val2_73_1_4_reg_2116 <= p_Val2_73_1_4_fu_1133_p2;
        p_Val2_73_2_reg_2121 <= p_Val2_73_2_fu_1142_p2;
        tmp_173_reg_2111 <= {{p_Val2_74_1_2_fu_1106_p2[47:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_reg_1994_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_73_2_3_reg_2126 <= p_Val2_73_2_3_fu_1279_p2;
        p_Val2_73_2_4_reg_2136 <= p_Val2_73_2_4_fu_1297_p2;
        p_Val2_73_3_reg_2141 <= p_Val2_73_3_fu_1306_p2;
        tmp_178_reg_2131 <= {{p_Val2_74_2_2_fu_1270_p2[47:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_reg_1994_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_73_3_3_reg_2146 <= p_Val2_73_3_3_fu_1443_p2;
        p_Val2_73_3_4_reg_2156 <= p_Val2_73_3_4_fu_1461_p2;
        p_Val2_73_4_reg_2161 <= p_Val2_73_4_fu_1470_p2;
        tmp_183_reg_2151 <= {{p_Val2_74_3_2_fu_1434_p2[47:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_reg_1994_pp0_iter4_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_73_4_3_reg_2166 <= p_Val2_73_4_3_fu_1604_p2;
        tmp_188_reg_2171 <= {{p_Val2_74_4_2_fu_1595_p2[47:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond1_reg_1956 == 1'd0))) begin
        src_0_val_V_load_reg_2081 <= src_0_val_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (or_cond_fu_719_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond1_fu_669_p2 == 1'd0))) begin
        tmp_146_reg_1998 <= tmp_146_fu_724_p2;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        LineBuffer_val_1_V_ce0 = 1'b1;
    end else begin
        LineBuffer_val_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        LineBuffer_val_1_V_ce1 = 1'b1;
    end else begin
        LineBuffer_val_1_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond1_reg_1956 == 1'd0))) begin
        LineBuffer_val_1_V_we1 = 1'b1;
    end else begin
        LineBuffer_val_1_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        LineBuffer_val_2_V_ce0 = 1'b1;
    end else begin
        LineBuffer_val_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        LineBuffer_val_2_V_ce1 = 1'b1;
    end else begin
        LineBuffer_val_2_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond1_reg_1956 == 1'd0))) begin
        LineBuffer_val_2_V_we1 = 1'b1;
    end else begin
        LineBuffer_val_2_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        LineBuffer_val_3_V_ce0 = 1'b1;
    end else begin
        LineBuffer_val_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        LineBuffer_val_3_V_ce1 = 1'b1;
    end else begin
        LineBuffer_val_3_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond1_reg_1956 == 1'd0))) begin
        LineBuffer_val_3_V_we1 = 1'b1;
    end else begin
        LineBuffer_val_3_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        LineBuffer_val_4_V_ce0 = 1'b1;
    end else begin
        LineBuffer_val_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        LineBuffer_val_4_V_ce1 = 1'b1;
    end else begin
        LineBuffer_val_4_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond1_reg_1956 == 1'd0))) begin
        LineBuffer_val_4_V_we1 = 1'b1;
    end else begin
        LineBuffer_val_4_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_condition_pp0_exit_iter1_state4 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter1_state4 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_579_p2 == 1'd1)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_579_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dst_val_V_ce0 = 1'b1;
    end else begin
        dst_val_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (or_cond_reg_1994_pp0_iter5_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dst_val_V_we0 = 1'b1;
    end else begin
        dst_val_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_0_val_V_ce0 = 1'b1;
    end else begin
        src_0_val_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_579_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b0)) & ~((ap_enable_reg_pp0_iter5 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter6 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter5 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter6 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign BlockBuffer_val_3_V_7_fu_775_p1 = LineBuffer_val_4_V_q0;

assign BlockBuffer_val_4_V_7_fu_780_p1 = src_0_val_V_q0;

assign LineBuffer_val_1_V_address0 = tmp_144_fu_681_p1;

assign LineBuffer_val_2_V_address0 = tmp_144_fu_681_p1;

assign LineBuffer_val_3_V_address0 = tmp_144_fu_681_p1;

assign LineBuffer_val_3_V_d1 = LineBuffer_val_4_V_q0;

assign LineBuffer_val_4_V_address0 = tmp_144_fu_681_p1;

assign OP1_V_0_1_fu_799_p0 = BlockBuffer_val_0_V_3_fu_118;

assign OP1_V_0_2_fu_832_p0 = BlockBuffer_val_0_V_4_fu_122;

assign OP1_V_0_3_fu_865_p0 = BlockBuffer_val_0_V_5_fu_126;

assign OP1_V_0_4_fu_884_p0 = LineBuffer_val_1_V_q0;

assign OP1_V_0_cast_fu_790_p0 = BlockBuffer_val_0_V_fu_114;

assign OP1_V_1_fu_893_p0 = BlockBuffer_val_1_V_fu_130;

assign OP1_V_2_fu_1138_p0 = BlockBuffer_val_2_V_fu_146;

assign OP1_V_3_fu_1302_p0 = BlockBuffer_val_3_V_fu_162;

assign OP1_V_4_fu_1466_p0 = BlockBuffer_val_4_V_fu_178;

assign OP2_V_0_1_fu_479_p1 = $signed(kernel_val_4_V_3_read);

assign OP2_V_0_2_fu_483_p1 = $signed(kernel_val_4_V_2_read);

assign OP2_V_0_3_fu_487_p1 = $signed(kernel_val_4_V_1_read);

assign OP2_V_0_4_fu_491_p1 = $signed(kernel_val_4_V_0_read);

assign OP2_V_0_cast_fu_475_p1 = $signed(kernel_val_4_V_4_read);

assign OP2_V_1_1_fu_499_p1 = $signed(kernel_val_3_V_3_read);

assign OP2_V_1_2_fu_503_p1 = $signed(kernel_val_3_V_2_read);

assign OP2_V_1_3_fu_507_p1 = $signed(kernel_val_3_V_1_read);

assign OP2_V_1_4_fu_511_p1 = $signed(kernel_val_3_V_0_read);

assign OP2_V_1_fu_495_p1 = $signed(kernel_val_3_V_4_read);

assign OP2_V_2_1_fu_519_p1 = $signed(kernel_val_2_V_3_read);

assign OP2_V_2_2_fu_523_p1 = $signed(kernel_val_2_V_2_read);

assign OP2_V_2_3_fu_527_p1 = $signed(kernel_val_2_V_1_read);

assign OP2_V_2_4_fu_531_p1 = $signed(kernel_val_2_V_0_read);

assign OP2_V_2_fu_515_p1 = $signed(kernel_val_2_V_4_read);

assign OP2_V_3_1_fu_539_p1 = $signed(kernel_val_1_V_3_read);

assign OP2_V_3_2_fu_543_p1 = $signed(kernel_val_1_V_2_read);

assign OP2_V_3_3_fu_547_p1 = $signed(kernel_val_1_V_1_read);

assign OP2_V_3_4_fu_551_p1 = $signed(kernel_val_1_V_0_read);

assign OP2_V_3_fu_535_p1 = $signed(kernel_val_1_V_4_read);

assign OP2_V_4_1_fu_559_p1 = $signed(kernel_val_0_V_3_read);

assign OP2_V_4_2_fu_563_p1 = $signed(kernel_val_0_V_2_read);

assign OP2_V_4_3_fu_567_p1 = $signed(kernel_val_0_V_1_read);

assign OP2_V_4_4_fu_571_p1 = $signed(kernel_val_0_V_0_read);

assign OP2_V_4_fu_555_p1 = $signed(kernel_val_0_V_4_read);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign dst_val_V_address0 = tmp_206_cast_fu_1682_p1;

assign dst_val_V_d0 = {{p_Val2_74_4_4_fu_1657_p2[47:16]}};

assign exitcond1_fu_669_p2 = ((j_reg_464 == 5'd28) ? 1'b1 : 1'b0);

assign exitcond_fu_579_p2 = ((i_reg_453 == 5'd28) ? 1'b1 : 1'b0);

assign i_13_fu_585_p2 = (i_reg_453 + 5'd1);

assign i_cast_fu_575_p1 = i_reg_453;

assign icmp2_fu_713_p2 = ((tmp_208_fu_703_p4 != 3'd0) ? 1'b1 : 1'b0);

assign icmp_fu_631_p2 = ((tmp_207_fu_621_p4 != 3'd0) ? 1'b1 : 1'b0);

assign j_11_fu_675_p2 = (j_reg_464 + 5'd1);

assign or_cond_fu_719_p2 = (icmp_reg_1946 & icmp2_fu_713_p2);

assign p_Val2_73_0_1_fu_803_p0 = OP2_V_0_1_reg_1812;

assign p_Val2_73_0_1_fu_803_p1 = OP1_V_0_1_fu_799_p0;

assign p_Val2_73_0_1_fu_803_p2 = ($signed(p_Val2_73_0_1_fu_803_p0) * $signed(p_Val2_73_0_1_fu_803_p1));

assign p_Val2_73_0_2_fu_836_p0 = OP2_V_0_2_reg_1817;

assign p_Val2_73_0_2_fu_836_p1 = OP1_V_0_2_fu_832_p0;

assign p_Val2_73_0_2_fu_836_p2 = ($signed(p_Val2_73_0_2_fu_836_p0) * $signed(p_Val2_73_0_2_fu_836_p1));

assign p_Val2_73_0_3_fu_869_p0 = OP2_V_0_3_reg_1822;

assign p_Val2_73_0_3_fu_869_p1 = OP1_V_0_3_fu_865_p0;

assign p_Val2_73_0_3_fu_869_p2 = ($signed(p_Val2_73_0_3_fu_869_p0) * $signed(p_Val2_73_0_3_fu_869_p1));

assign p_Val2_73_0_4_fu_888_p0 = OP2_V_0_4_reg_1827;

assign p_Val2_73_0_4_fu_888_p1 = OP1_V_0_4_fu_884_p0;

assign p_Val2_73_0_4_fu_888_p2 = ($signed(p_Val2_73_0_4_fu_888_p0) * $signed(p_Val2_73_0_4_fu_888_p1));

assign p_Val2_73_1_1_fu_1051_p0 = OP2_V_1_1_reg_1837;

assign p_Val2_73_1_1_fu_1051_p1 = BlockBuffer_val_1_V_6_reg_2003;

assign p_Val2_73_1_1_fu_1051_p2 = ($signed(p_Val2_73_1_1_fu_1051_p0) * $signed(p_Val2_73_1_1_fu_1051_p1));

assign p_Val2_73_1_2_fu_1083_p0 = OP2_V_1_2_reg_1842;

assign p_Val2_73_1_2_fu_1083_p1 = BlockBuffer_val_1_V_7_reg_2008;

assign p_Val2_73_1_2_fu_1083_p2 = ($signed(p_Val2_73_1_2_fu_1083_p0) * $signed(p_Val2_73_1_2_fu_1083_p1));

assign p_Val2_73_1_3_fu_1115_p0 = OP2_V_1_3_reg_1847;

assign p_Val2_73_1_3_fu_1115_p1 = BlockBuffer_val_1_V_8_reg_2013;

assign p_Val2_73_1_3_fu_1115_p2 = ($signed(p_Val2_73_1_3_fu_1115_p0) * $signed(p_Val2_73_1_3_fu_1115_p1));

assign p_Val2_73_1_4_fu_1133_p0 = OP2_V_1_4_reg_1852;

assign p_Val2_73_1_4_fu_1133_p1 = BlockBuffer_val_1_V_9_reg_2066;

assign p_Val2_73_1_4_fu_1133_p2 = ($signed(p_Val2_73_1_4_fu_1133_p0) * $signed(p_Val2_73_1_4_fu_1133_p1));

assign p_Val2_73_1_fu_897_p0 = OP2_V_1_reg_1832;

assign p_Val2_73_1_fu_897_p1 = OP1_V_1_fu_893_p0;

assign p_Val2_73_1_fu_897_p2 = ($signed(p_Val2_73_1_fu_897_p0) * $signed(p_Val2_73_1_fu_897_p1));

assign p_Val2_73_2_1_fu_1215_p0 = OP2_V_2_1_reg_1862;

assign p_Val2_73_2_1_fu_1215_p1 = BlockBuffer_val_2_V_4_reg_2018_pp0_iter2_reg;

assign p_Val2_73_2_1_fu_1215_p2 = ($signed(p_Val2_73_2_1_fu_1215_p0) * $signed(p_Val2_73_2_1_fu_1215_p1));

assign p_Val2_73_2_2_fu_1247_p0 = OP2_V_2_2_reg_1867;

assign p_Val2_73_2_2_fu_1247_p1 = BlockBuffer_val_2_V_5_reg_2024_pp0_iter2_reg;

assign p_Val2_73_2_2_fu_1247_p2 = ($signed(p_Val2_73_2_2_fu_1247_p0) * $signed(p_Val2_73_2_2_fu_1247_p1));

assign p_Val2_73_2_3_fu_1279_p0 = OP2_V_2_3_reg_1872;

assign p_Val2_73_2_3_fu_1279_p1 = BlockBuffer_val_2_V_6_reg_2029_pp0_iter2_reg;

assign p_Val2_73_2_3_fu_1279_p2 = ($signed(p_Val2_73_2_3_fu_1279_p0) * $signed(p_Val2_73_2_3_fu_1279_p1));

assign p_Val2_73_2_4_fu_1297_p0 = OP2_V_2_4_reg_1877;

assign p_Val2_73_2_4_fu_1297_p1 = BlockBuffer_val_2_V_7_reg_2071_pp0_iter2_reg;

assign p_Val2_73_2_4_fu_1297_p2 = ($signed(p_Val2_73_2_4_fu_1297_p0) * $signed(p_Val2_73_2_4_fu_1297_p1));

assign p_Val2_73_2_fu_1142_p0 = OP2_V_2_reg_1857;

assign p_Val2_73_2_fu_1142_p1 = OP1_V_2_fu_1138_p0;

assign p_Val2_73_2_fu_1142_p2 = ($signed(p_Val2_73_2_fu_1142_p0) * $signed(p_Val2_73_2_fu_1142_p1));

assign p_Val2_73_3_1_fu_1379_p0 = OP2_V_3_1_reg_1887;

assign p_Val2_73_3_1_fu_1379_p1 = BlockBuffer_val_3_V_4_reg_2034_pp0_iter3_reg;

assign p_Val2_73_3_1_fu_1379_p2 = ($signed(p_Val2_73_3_1_fu_1379_p0) * $signed(p_Val2_73_3_1_fu_1379_p1));

assign p_Val2_73_3_2_fu_1411_p0 = OP2_V_3_2_reg_1892;

assign p_Val2_73_3_2_fu_1411_p1 = BlockBuffer_val_3_V_5_reg_2040_pp0_iter3_reg;

assign p_Val2_73_3_2_fu_1411_p2 = ($signed(p_Val2_73_3_2_fu_1411_p0) * $signed(p_Val2_73_3_2_fu_1411_p1));

assign p_Val2_73_3_3_fu_1443_p0 = OP2_V_3_3_reg_1897;

assign p_Val2_73_3_3_fu_1443_p1 = BlockBuffer_val_3_V_6_reg_2045_pp0_iter3_reg;

assign p_Val2_73_3_3_fu_1443_p2 = ($signed(p_Val2_73_3_3_fu_1443_p0) * $signed(p_Val2_73_3_3_fu_1443_p1));

assign p_Val2_73_3_4_fu_1461_p0 = OP2_V_3_4_reg_1902;

assign p_Val2_73_3_4_fu_1461_p1 = p_Val2_73_3_4_fu_1461_p10;

assign p_Val2_73_3_4_fu_1461_p10 = LineBuffer_val_4_V_1_reg_2076_pp0_iter3_reg;

assign p_Val2_73_3_4_fu_1461_p2 = ($signed(p_Val2_73_3_4_fu_1461_p0) * $signed({{1'b0}, {p_Val2_73_3_4_fu_1461_p1}}));

assign p_Val2_73_3_fu_1306_p0 = OP2_V_3_reg_1882;

assign p_Val2_73_3_fu_1306_p1 = OP1_V_3_fu_1302_p0;

assign p_Val2_73_3_fu_1306_p2 = ($signed(p_Val2_73_3_fu_1306_p0) * $signed(p_Val2_73_3_fu_1306_p1));

assign p_Val2_73_4_1_fu_1540_p0 = OP2_V_4_1_reg_1912;

assign p_Val2_73_4_1_fu_1540_p1 = BlockBuffer_val_4_V_4_reg_2050_pp0_iter4_reg;

assign p_Val2_73_4_1_fu_1540_p2 = ($signed(p_Val2_73_4_1_fu_1540_p0) * $signed(p_Val2_73_4_1_fu_1540_p1));

assign p_Val2_73_4_2_fu_1572_p0 = OP2_V_4_2_reg_1917;

assign p_Val2_73_4_2_fu_1572_p1 = BlockBuffer_val_4_V_5_reg_2056_pp0_iter4_reg;

assign p_Val2_73_4_2_fu_1572_p2 = ($signed(p_Val2_73_4_2_fu_1572_p0) * $signed(p_Val2_73_4_2_fu_1572_p1));

assign p_Val2_73_4_3_fu_1604_p0 = OP2_V_4_3_reg_1922;

assign p_Val2_73_4_3_fu_1604_p1 = BlockBuffer_val_4_V_6_reg_2061_pp0_iter4_reg;

assign p_Val2_73_4_3_fu_1604_p2 = ($signed(p_Val2_73_4_3_fu_1604_p0) * $signed(p_Val2_73_4_3_fu_1604_p1));

assign p_Val2_73_4_4_fu_1634_p0 = OP2_V_4_4_reg_1927;

assign p_Val2_73_4_4_fu_1634_p1 = p_Val2_73_4_4_fu_1634_p10;

assign p_Val2_73_4_4_fu_1634_p10 = src_0_val_V_load_reg_2081_pp0_iter5_reg;

assign p_Val2_73_4_4_fu_1634_p2 = ($signed(p_Val2_73_4_4_fu_1634_p0) * $signed({{1'b0}, {p_Val2_73_4_4_fu_1634_p1}}));

assign p_Val2_73_4_fu_1470_p0 = OP2_V_4_reg_1907;

assign p_Val2_73_4_fu_1470_p1 = OP1_V_4_fu_1466_p0;

assign p_Val2_73_4_fu_1470_p2 = ($signed(p_Val2_73_4_fu_1470_p0) * $signed(p_Val2_73_4_fu_1470_p1));

assign p_Val2_74_0_1_fu_826_p2 = (tmp_412_0_1_fu_818_p3 + p_Val2_73_0_1_fu_803_p2);

assign p_Val2_74_0_2_fu_859_p2 = (tmp_412_0_2_fu_851_p3 + p_Val2_73_0_2_fu_836_p2);

assign p_Val2_74_0_3_fu_997_p2 = (tmp_412_0_3_fu_990_p3 + p_Val2_73_0_3_reg_2086);

assign p_Val2_74_0_4_fu_1020_p2 = (tmp_412_0_4_fu_1012_p3 + p_Val2_73_0_4_reg_2096);

assign p_Val2_74_1_1_fu_1074_p2 = (tmp_412_1_1_fu_1066_p3 + p_Val2_73_1_1_fu_1051_p2);

assign p_Val2_74_1_2_fu_1106_p2 = (tmp_412_1_2_fu_1098_p3 + p_Val2_73_1_2_fu_1083_p2);

assign p_Val2_74_1_3_fu_1161_p2 = (tmp_412_1_3_fu_1154_p3 + p_Val2_73_1_3_reg_2106);

assign p_Val2_74_1_4_fu_1184_p2 = (tmp_412_1_4_fu_1176_p3 + p_Val2_73_1_4_reg_2116);

assign p_Val2_74_1_fu_1043_p2 = (tmp_412_1_fu_1035_p3 + p_Val2_73_1_reg_2101);

assign p_Val2_74_2_1_fu_1238_p2 = (tmp_412_2_1_fu_1230_p3 + p_Val2_73_2_1_fu_1215_p2);

assign p_Val2_74_2_2_fu_1270_p2 = (tmp_412_2_2_fu_1262_p3 + p_Val2_73_2_2_fu_1247_p2);

assign p_Val2_74_2_3_fu_1325_p2 = (tmp_412_2_3_fu_1318_p3 + p_Val2_73_2_3_reg_2126);

assign p_Val2_74_2_4_fu_1348_p2 = (tmp_412_2_4_fu_1340_p3 + p_Val2_73_2_4_reg_2136);

assign p_Val2_74_2_fu_1207_p2 = (tmp_412_2_fu_1199_p3 + p_Val2_73_2_reg_2121);

assign p_Val2_74_3_1_fu_1402_p2 = (tmp_412_3_1_fu_1394_p3 + p_Val2_73_3_1_fu_1379_p2);

assign p_Val2_74_3_2_fu_1434_p2 = (tmp_412_3_2_fu_1426_p3 + p_Val2_73_3_2_fu_1411_p2);

assign p_Val2_74_3_3_fu_1486_p2 = (tmp_412_3_3_fu_1479_p3 + p_Val2_73_3_3_reg_2146);

assign p_Val2_74_3_4_fu_1509_p2 = (tmp_412_3_4_fu_1501_p3 + p_Val2_73_3_4_reg_2156);

assign p_Val2_74_3_fu_1371_p2 = (tmp_412_3_fu_1363_p3 + p_Val2_73_3_reg_2141);

assign p_Val2_74_4_1_fu_1563_p2 = (tmp_412_4_1_fu_1555_p3 + p_Val2_73_4_1_fu_1540_p2);

assign p_Val2_74_4_2_fu_1595_p2 = (tmp_412_4_2_fu_1587_p3 + p_Val2_73_4_2_fu_1572_p2);

assign p_Val2_74_4_3_fu_1626_p2 = (tmp_412_4_3_fu_1619_p3 + p_Val2_73_4_3_reg_2166);

assign p_Val2_74_4_4_fu_1657_p2 = (tmp_412_4_4_fu_1649_p3 + p_Val2_73_4_4_fu_1634_p2);

assign p_Val2_74_4_fu_1532_p2 = (tmp_412_4_fu_1524_p3 + p_Val2_73_4_reg_2161);

assign p_Val2_s_fu_794_p0 = OP2_V_0_cast_reg_1807;

assign p_Val2_s_fu_794_p1 = OP1_V_0_cast_fu_790_p0;

assign p_Val2_s_fu_794_p2 = ($signed(p_Val2_s_fu_794_p0) * $signed(p_Val2_s_fu_794_p1));

assign p_shl1_cast_fu_659_p1 = $signed(tmp_163_fu_651_p3);

assign p_shl2_cast_fu_599_p1 = tmp_fu_591_p3;

assign p_shl3_cast_fu_611_p1 = tmp_s_fu_603_p3;

assign src_0_val_V_address0 = tmp_181_cast_fu_698_p1;

assign tmp_142_fu_637_p2 = ($signed(i_cast_fu_575_p1) + $signed(6'd60));

assign tmp_144_cast_fu_689_p1 = j_reg_464;

assign tmp_144_fu_681_p1 = j_reg_464;

assign tmp_146_fu_724_p2 = ($signed(j_reg_464) + $signed(5'd28));

assign tmp_147_cast_fu_1674_p1 = tmp_146_reg_1998_pp0_iter5_reg;

assign tmp_161_fu_615_p2 = (p_shl2_cast_fu_599_p1 - p_shl3_cast_fu_611_p1);

assign tmp_162_fu_643_p3 = {{tmp_142_fu_637_p2}, {5'd0}};

assign tmp_163_fu_651_p3 = {{tmp_142_fu_637_p2}, {3'd0}};

assign tmp_164_fu_663_p2 = ($signed(tmp_162_fu_643_p3) - $signed(p_shl1_cast_fu_659_p1));

assign tmp_165_fu_693_p2 = (tmp_161_reg_1941 + tmp_144_cast_fu_689_p1);

assign tmp_166_fu_808_p4 = {{p_Val2_s_fu_794_p2[47:16]}};

assign tmp_167_fu_841_p4 = {{p_Val2_74_0_1_fu_826_p2[47:16]}};

assign tmp_169_fu_1002_p4 = {{p_Val2_74_0_3_fu_997_p2[47:16]}};

assign tmp_170_fu_1025_p4 = {{p_Val2_74_0_4_fu_1020_p2[47:16]}};

assign tmp_171_fu_1056_p4 = {{p_Val2_74_1_fu_1043_p2[47:16]}};

assign tmp_172_fu_1088_p4 = {{p_Val2_74_1_1_fu_1074_p2[47:16]}};

assign tmp_174_fu_1166_p4 = {{p_Val2_74_1_3_fu_1161_p2[47:16]}};

assign tmp_175_fu_1189_p4 = {{p_Val2_74_1_4_fu_1184_p2[47:16]}};

assign tmp_176_fu_1220_p4 = {{p_Val2_74_2_fu_1207_p2[47:16]}};

assign tmp_177_fu_1252_p4 = {{p_Val2_74_2_1_fu_1238_p2[47:16]}};

assign tmp_179_fu_1330_p4 = {{p_Val2_74_2_3_fu_1325_p2[47:16]}};

assign tmp_180_fu_1353_p4 = {{p_Val2_74_2_4_fu_1348_p2[47:16]}};

assign tmp_181_cast_fu_698_p1 = $signed(tmp_165_fu_693_p2);

assign tmp_181_fu_1384_p4 = {{p_Val2_74_3_fu_1371_p2[47:16]}};

assign tmp_182_fu_1416_p4 = {{p_Val2_74_3_1_fu_1402_p2[47:16]}};

assign tmp_184_fu_1491_p4 = {{p_Val2_74_3_3_fu_1486_p2[47:16]}};

assign tmp_185_fu_1514_p4 = {{p_Val2_74_3_4_fu_1509_p2[47:16]}};

assign tmp_186_fu_1545_p4 = {{p_Val2_74_4_fu_1532_p2[47:16]}};

assign tmp_187_fu_1577_p4 = {{p_Val2_74_4_1_fu_1563_p2[47:16]}};

assign tmp_189_fu_1639_p4 = {{p_Val2_74_4_3_fu_1626_p2[47:16]}};

assign tmp_190_fu_1677_p2 = (tmp_164_reg_1951 + tmp_147_cast_fu_1674_p1);

assign tmp_206_cast_fu_1682_p1 = $signed(tmp_190_fu_1677_p2);

assign tmp_207_fu_621_p4 = {{i_reg_453[4:2]}};

assign tmp_208_fu_703_p4 = {{j_reg_464[4:2]}};

assign tmp_412_0_1_fu_818_p3 = {{tmp_166_fu_808_p4}, {16'd0}};

assign tmp_412_0_2_fu_851_p3 = {{tmp_167_fu_841_p4}, {16'd0}};

assign tmp_412_0_3_fu_990_p3 = {{tmp_168_reg_2091}, {16'd0}};

assign tmp_412_0_4_fu_1012_p3 = {{tmp_169_fu_1002_p4}, {16'd0}};

assign tmp_412_1_1_fu_1066_p3 = {{tmp_171_fu_1056_p4}, {16'd0}};

assign tmp_412_1_2_fu_1098_p3 = {{tmp_172_fu_1088_p4}, {16'd0}};

assign tmp_412_1_3_fu_1154_p3 = {{tmp_173_reg_2111}, {16'd0}};

assign tmp_412_1_4_fu_1176_p3 = {{tmp_174_fu_1166_p4}, {16'd0}};

assign tmp_412_1_fu_1035_p3 = {{tmp_170_fu_1025_p4}, {16'd0}};

assign tmp_412_2_1_fu_1230_p3 = {{tmp_176_fu_1220_p4}, {16'd0}};

assign tmp_412_2_2_fu_1262_p3 = {{tmp_177_fu_1252_p4}, {16'd0}};

assign tmp_412_2_3_fu_1318_p3 = {{tmp_178_reg_2131}, {16'd0}};

assign tmp_412_2_4_fu_1340_p3 = {{tmp_179_fu_1330_p4}, {16'd0}};

assign tmp_412_2_fu_1199_p3 = {{tmp_175_fu_1189_p4}, {16'd0}};

assign tmp_412_3_1_fu_1394_p3 = {{tmp_181_fu_1384_p4}, {16'd0}};

assign tmp_412_3_2_fu_1426_p3 = {{tmp_182_fu_1416_p4}, {16'd0}};

assign tmp_412_3_3_fu_1479_p3 = {{tmp_183_reg_2151}, {16'd0}};

assign tmp_412_3_4_fu_1501_p3 = {{tmp_184_fu_1491_p4}, {16'd0}};

assign tmp_412_3_fu_1363_p3 = {{tmp_180_fu_1353_p4}, {16'd0}};

assign tmp_412_4_1_fu_1555_p3 = {{tmp_186_fu_1545_p4}, {16'd0}};

assign tmp_412_4_2_fu_1587_p3 = {{tmp_187_fu_1577_p4}, {16'd0}};

assign tmp_412_4_3_fu_1619_p3 = {{tmp_188_reg_2171}, {16'd0}};

assign tmp_412_4_4_fu_1649_p3 = {{tmp_189_fu_1639_p4}, {16'd0}};

assign tmp_412_4_fu_1524_p3 = {{tmp_185_fu_1514_p4}, {16'd0}};

assign tmp_fu_591_p3 = {{i_reg_453}, {5'd0}};

assign tmp_s_fu_603_p3 = {{i_reg_453}, {2'd0}};

always @ (posedge ap_clk) begin
    tmp_161_reg_1941[1:0] <= 2'b00;
    tmp_164_reg_1951[2:0] <= 3'b000;
    BlockBuffer_val_3_V_4_reg_2034[31:24] <= 8'b00000000;
    BlockBuffer_val_3_V_4_reg_2034_pp0_iter2_reg[31:24] <= 8'b00000000;
    BlockBuffer_val_3_V_4_reg_2034_pp0_iter3_reg[31:24] <= 8'b00000000;
    BlockBuffer_val_3_V_5_reg_2040[31:24] <= 8'b00000000;
    BlockBuffer_val_3_V_5_reg_2040_pp0_iter2_reg[31:24] <= 8'b00000000;
    BlockBuffer_val_3_V_5_reg_2040_pp0_iter3_reg[31:24] <= 8'b00000000;
    BlockBuffer_val_3_V_6_reg_2045[31:24] <= 8'b00000000;
    BlockBuffer_val_3_V_6_reg_2045_pp0_iter2_reg[31:24] <= 8'b00000000;
    BlockBuffer_val_3_V_6_reg_2045_pp0_iter3_reg[31:24] <= 8'b00000000;
    BlockBuffer_val_4_V_4_reg_2050[31:24] <= 8'b00000000;
    BlockBuffer_val_4_V_4_reg_2050_pp0_iter2_reg[31:24] <= 8'b00000000;
    BlockBuffer_val_4_V_4_reg_2050_pp0_iter3_reg[31:24] <= 8'b00000000;
    BlockBuffer_val_4_V_4_reg_2050_pp0_iter4_reg[31:24] <= 8'b00000000;
    BlockBuffer_val_4_V_5_reg_2056[31:24] <= 8'b00000000;
    BlockBuffer_val_4_V_5_reg_2056_pp0_iter2_reg[31:24] <= 8'b00000000;
    BlockBuffer_val_4_V_5_reg_2056_pp0_iter3_reg[31:24] <= 8'b00000000;
    BlockBuffer_val_4_V_5_reg_2056_pp0_iter4_reg[31:24] <= 8'b00000000;
    BlockBuffer_val_4_V_6_reg_2061[31:24] <= 8'b00000000;
    BlockBuffer_val_4_V_6_reg_2061_pp0_iter2_reg[31:24] <= 8'b00000000;
    BlockBuffer_val_4_V_6_reg_2061_pp0_iter3_reg[31:24] <= 8'b00000000;
    BlockBuffer_val_4_V_6_reg_2061_pp0_iter4_reg[31:24] <= 8'b00000000;
    BlockBuffer_val_3_V_fu_162[31:24] <= 8'b00000000;
    BlockBuffer_val_3_V_1_fu_166[31:24] <= 8'b00000000;
    BlockBuffer_val_3_V_2_fu_170[31:24] <= 8'b00000000;
    BlockBuffer_val_3_V_3_fu_174[31:24] <= 8'b00000000;
    BlockBuffer_val_4_V_fu_178[31:24] <= 8'b00000000;
    BlockBuffer_val_4_V_1_fu_182[31:24] <= 8'b00000000;
    BlockBuffer_val_4_V_2_fu_186[31:24] <= 8'b00000000;
    BlockBuffer_val_4_V_3_fu_190[31:24] <= 8'b00000000;
end

endmodule //Conv8
