// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Integral7_HH_
#define _Integral7_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "Haar_Core_mac_mulibs.h"
#include "Integral7_sLineBug8j.h"

namespace ap_rtl {

struct Integral7 : public sc_module {
    // Port declarations 27
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<17> > src_val_address0;
    sc_out< sc_logic > src_val_ce0;
    sc_in< sc_lv<8> > src_val_q0;
    sc_in< sc_lv<32> > src_rows_read;
    sc_in< sc_lv<32> > src_cols_read;
    sc_out< sc_lv<18> > swin_val_address0;
    sc_out< sc_logic > swin_val_ce0;
    sc_out< sc_logic > swin_val_we0;
    sc_out< sc_lv<32> > swin_val_d0;
    sc_out< sc_lv<18> > swin_val_address1;
    sc_out< sc_logic > swin_val_ce1;
    sc_out< sc_logic > swin_val_we1;
    sc_out< sc_lv<32> > swin_val_d1;
    sc_out< sc_lv<18> > sqwin_val_address0;
    sc_out< sc_logic > sqwin_val_ce0;
    sc_out< sc_logic > sqwin_val_we0;
    sc_out< sc_lv<32> > sqwin_val_d0;
    sc_out< sc_lv<18> > sqwin_val_address1;
    sc_out< sc_logic > sqwin_val_ce1;
    sc_out< sc_logic > sqwin_val_we1;
    sc_out< sc_lv<32> > sqwin_val_d1;
    sc_signal< sc_lv<32> > ap_var_for_const0;


    // Module declarations
    Integral7(sc_module_name name);
    SC_HAS_PROCESS(Integral7);

    ~Integral7();

    sc_trace_file* mVcdFile;

    Integral7_sLineBug8j* sLineBuffer_U;
    Integral7_sLineBug8j* sqLineBuffer_U;
    Haar_Core_mac_mulibs<1,1,8,8,32,32>* Haar_Core_mac_mulibs_U47;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<31> > j_reg_208;
    sc_signal< sc_lv<32> > tmp_s_fu_231_p2;
    sc_signal< sc_lv<32> > tmp_s_reg_533;
    sc_signal< sc_lv<32> > tmp_104_fu_237_p2;
    sc_signal< sc_lv<32> > tmp_104_reg_538;
    sc_signal< sc_lv<1> > tmp_105_fu_247_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<31> > i_9_fu_252_p2;
    sc_signal< sc_lv<31> > i_9_reg_547;
    sc_signal< sc_lv<1> > tmp_106_fu_258_p2;
    sc_signal< sc_lv<1> > tmp_106_reg_552;
    sc_signal< sc_lv<19> > tmp_53_fu_280_p2;
    sc_signal< sc_lv<19> > tmp_53_reg_557;
    sc_signal< sc_lv<19> > tmp_55_cast_fu_296_p3;
    sc_signal< sc_lv<19> > tmp_55_cast_reg_563;
    sc_signal< sc_lv<1> > tmp_107_fu_308_p2;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<31> > j_2_fu_313_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<1> > tmp_108_fu_319_p2;
    sc_signal< sc_lv<1> > tmp_108_reg_577;
    sc_signal< sc_lv<1> > tmp_108_reg_577_pp0_iter1_reg;
    sc_signal< sc_lv<1> > or_cond_fu_325_p2;
    sc_signal< sc_lv<1> > or_cond_reg_585;
    sc_signal< sc_lv<1> > or_cond_reg_585_pp0_iter1_reg;
    sc_signal< sc_lv<19> > tmp_58_fu_360_p2;
    sc_signal< sc_lv<19> > tmp_58_reg_594;
    sc_signal< sc_lv<19> > tmp_58_reg_594_pp0_iter1_reg;
    sc_signal< sc_lv<10> > sLineBuffer_addr_reg_599;
    sc_signal< sc_lv<10> > sqLineBuffer_addr_reg_605;
    sc_signal< sc_lv<10> > sqLineBuffer_addr_reg_605_pp0_iter1_reg;
    sc_signal< sc_lv<8> > src_val_load_reg_611;
    sc_signal< sc_lv<32> > swinBuffer_1_0_fu_402_p2;
    sc_signal< sc_lv<32> > swinBuffer_1_0_reg_616;
    sc_signal< sc_lv<32> > sqLineBuffer_q0;
    sc_signal< sc_lv<32> > sqwinBuffer_0_0_reg_621;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<10> > sLineBuffer_address0;
    sc_signal< sc_logic > sLineBuffer_ce0;
    sc_signal< sc_logic > sLineBuffer_we0;
    sc_signal< sc_lv<32> > sLineBuffer_q0;
    sc_signal< sc_logic > sLineBuffer_ce1;
    sc_signal< sc_logic > sLineBuffer_we1;
    sc_signal< sc_lv<32> > sLineBuffer_d1;
    sc_signal< sc_lv<10> > sqLineBuffer_address0;
    sc_signal< sc_logic > sqLineBuffer_ce0;
    sc_signal< sc_logic > sqLineBuffer_we0;
    sc_signal< sc_logic > sqLineBuffer_ce1;
    sc_signal< sc_logic > sqLineBuffer_we1;
    sc_signal< sc_lv<31> > i_reg_197;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<64> > tmp_57_cast_fu_345_p1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<64> > tmp_110_fu_350_p1;
    sc_signal< sc_lv<64> > tmp_56_cast_fu_380_p1;
    sc_signal< sc_lv<64> > tmp_109_fu_365_p1;
    sc_signal< sc_lv<64> > tmp_58_cast_fu_446_p1;
    sc_signal< sc_lv<32> > swinBuffer_0_0_1_fu_48;
    sc_signal< sc_lv<32> > p_swinBuffer_0_0_1_fu_426_p3;
    sc_signal< sc_lv<32> > swinBuffer_1_0_1_fu_52;
    sc_signal< sc_lv<32> > p_swinBuffer_1_0_1_fu_419_p3;
    sc_signal< sc_lv<32> > sqwinBuffer_0_0_1_fu_56;
    sc_signal< sc_lv<32> > p_sqwinBuffer_0_0_1_fu_479_p3;
    sc_signal< sc_lv<32> > sqwinBuffer_1_0_1_fu_60;
    sc_signal< sc_lv<32> > sqwinBuffer_1_0_fu_455_p2;
    sc_signal< sc_lv<32> > p_sqwinBuffer_1_0_1_fu_472_p3;
    sc_signal< sc_lv<32> > i_cast_fu_243_p1;
    sc_signal< sc_lv<10> > tmp_138_fu_268_p1;
    sc_signal< sc_lv<19> > p_shl_cast_fu_272_p3;
    sc_signal< sc_lv<19> > tmp_137_fu_264_p1;
    sc_signal< sc_lv<10> > tmp_139_fu_286_p1;
    sc_signal< sc_lv<10> > tmp_140_fu_290_p2;
    sc_signal< sc_lv<32> > j_cast_fu_304_p1;
    sc_signal< sc_lv<19> > tmp_142_fu_330_p1;
    sc_signal< sc_lv<19> > tmp_143_fu_334_p2;
    sc_signal< sc_lv<19> > tmp_57_fu_340_p2;
    sc_signal< sc_lv<19> > tmp_144_fu_356_p1;
    sc_signal< sc_lv<19> > tmp_141_fu_371_p1;
    sc_signal< sc_lv<19> > tmp_56_fu_375_p2;
    sc_signal< sc_lv<32> > value_fu_386_p1;
    sc_signal< sc_lv<32> > tmp1_fu_390_p2;
    sc_signal< sc_lv<32> > tmp_111_fu_396_p2;
    sc_signal< sc_lv<32> > grp_fu_496_p3;
    sc_signal< sc_lv<32> > tmp_113_fu_451_p2;
    sc_signal< sc_lv<8> > grp_fu_496_p0;
    sc_signal< sc_lv<16> > value_cast_fu_443_p1;
    sc_signal< sc_lv<8> > grp_fu_496_p1;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< bool > ap_condition_434;
    sc_signal< bool > ap_condition_139;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_state2;
    static const sc_lv<4> ap_ST_fsm_pp0_stage0;
    static const sc_lv<4> ap_ST_fsm_state6;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<31> ap_const_lv31_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<31> ap_const_lv31_1;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<10> ap_const_lv10_3FF;
    static const sc_lv<19> ap_const_lv19_7FFFF;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state6();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state3_pp0_stage0_iter0();
    void thread_ap_block_state4_pp0_stage0_iter1();
    void thread_ap_block_state5_pp0_stage0_iter2();
    void thread_ap_condition_139();
    void thread_ap_condition_434();
    void thread_ap_condition_pp0_exit_iter0_state3();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_grp_fu_496_p0();
    void thread_grp_fu_496_p1();
    void thread_i_9_fu_252_p2();
    void thread_i_cast_fu_243_p1();
    void thread_j_2_fu_313_p2();
    void thread_j_cast_fu_304_p1();
    void thread_or_cond_fu_325_p2();
    void thread_p_shl_cast_fu_272_p3();
    void thread_p_sqwinBuffer_0_0_1_fu_479_p3();
    void thread_p_sqwinBuffer_1_0_1_fu_472_p3();
    void thread_p_swinBuffer_0_0_1_fu_426_p3();
    void thread_p_swinBuffer_1_0_1_fu_419_p3();
    void thread_sLineBuffer_address0();
    void thread_sLineBuffer_ce0();
    void thread_sLineBuffer_ce1();
    void thread_sLineBuffer_d1();
    void thread_sLineBuffer_we0();
    void thread_sLineBuffer_we1();
    void thread_sqLineBuffer_address0();
    void thread_sqLineBuffer_ce0();
    void thread_sqLineBuffer_ce1();
    void thread_sqLineBuffer_we0();
    void thread_sqLineBuffer_we1();
    void thread_sqwinBuffer_1_0_fu_455_p2();
    void thread_sqwin_val_address0();
    void thread_sqwin_val_address1();
    void thread_sqwin_val_ce0();
    void thread_sqwin_val_ce1();
    void thread_sqwin_val_d0();
    void thread_sqwin_val_d1();
    void thread_sqwin_val_we0();
    void thread_sqwin_val_we1();
    void thread_src_val_address0();
    void thread_src_val_ce0();
    void thread_swinBuffer_1_0_fu_402_p2();
    void thread_swin_val_address0();
    void thread_swin_val_address1();
    void thread_swin_val_ce0();
    void thread_swin_val_ce1();
    void thread_swin_val_d0();
    void thread_swin_val_d1();
    void thread_swin_val_we0();
    void thread_swin_val_we1();
    void thread_tmp1_fu_390_p2();
    void thread_tmp_104_fu_237_p2();
    void thread_tmp_105_fu_247_p2();
    void thread_tmp_106_fu_258_p2();
    void thread_tmp_107_fu_308_p2();
    void thread_tmp_108_fu_319_p2();
    void thread_tmp_109_fu_365_p1();
    void thread_tmp_110_fu_350_p1();
    void thread_tmp_111_fu_396_p2();
    void thread_tmp_113_fu_451_p2();
    void thread_tmp_137_fu_264_p1();
    void thread_tmp_138_fu_268_p1();
    void thread_tmp_139_fu_286_p1();
    void thread_tmp_140_fu_290_p2();
    void thread_tmp_141_fu_371_p1();
    void thread_tmp_142_fu_330_p1();
    void thread_tmp_143_fu_334_p2();
    void thread_tmp_144_fu_356_p1();
    void thread_tmp_53_fu_280_p2();
    void thread_tmp_55_cast_fu_296_p3();
    void thread_tmp_56_cast_fu_380_p1();
    void thread_tmp_56_fu_375_p2();
    void thread_tmp_57_cast_fu_345_p1();
    void thread_tmp_57_fu_340_p2();
    void thread_tmp_58_cast_fu_446_p1();
    void thread_tmp_58_fu_360_p2();
    void thread_tmp_s_fu_231_p2();
    void thread_value_cast_fu_443_p1();
    void thread_value_fu_386_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
