// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Resize5 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        src_val_address0,
        src_val_ce0,
        src_val_q0,
        src_rows_read,
        src_cols_read,
        dst_val_address0,
        dst_val_ce0,
        dst_val_we0,
        dst_val_d0,
        scale,
        ap_return_0,
        ap_return_1
);

parameter    ap_ST_fsm_state1 = 42'd1;
parameter    ap_ST_fsm_state2 = 42'd2;
parameter    ap_ST_fsm_state3 = 42'd4;
parameter    ap_ST_fsm_state4 = 42'd8;
parameter    ap_ST_fsm_state5 = 42'd16;
parameter    ap_ST_fsm_state6 = 42'd32;
parameter    ap_ST_fsm_state7 = 42'd64;
parameter    ap_ST_fsm_state8 = 42'd128;
parameter    ap_ST_fsm_state9 = 42'd256;
parameter    ap_ST_fsm_state10 = 42'd512;
parameter    ap_ST_fsm_state11 = 42'd1024;
parameter    ap_ST_fsm_state12 = 42'd2048;
parameter    ap_ST_fsm_state13 = 42'd4096;
parameter    ap_ST_fsm_state14 = 42'd8192;
parameter    ap_ST_fsm_state15 = 42'd16384;
parameter    ap_ST_fsm_state16 = 42'd32768;
parameter    ap_ST_fsm_state17 = 42'd65536;
parameter    ap_ST_fsm_state18 = 42'd131072;
parameter    ap_ST_fsm_state19 = 42'd262144;
parameter    ap_ST_fsm_state20 = 42'd524288;
parameter    ap_ST_fsm_state21 = 42'd1048576;
parameter    ap_ST_fsm_state22 = 42'd2097152;
parameter    ap_ST_fsm_state23 = 42'd4194304;
parameter    ap_ST_fsm_state24 = 42'd8388608;
parameter    ap_ST_fsm_state25 = 42'd16777216;
parameter    ap_ST_fsm_state26 = 42'd33554432;
parameter    ap_ST_fsm_state27 = 42'd67108864;
parameter    ap_ST_fsm_state28 = 42'd134217728;
parameter    ap_ST_fsm_state29 = 42'd268435456;
parameter    ap_ST_fsm_state30 = 42'd536870912;
parameter    ap_ST_fsm_state31 = 42'd1073741824;
parameter    ap_ST_fsm_state32 = 42'd2147483648;
parameter    ap_ST_fsm_state33 = 42'd4294967296;
parameter    ap_ST_fsm_state34 = 42'd8589934592;
parameter    ap_ST_fsm_state35 = 42'd17179869184;
parameter    ap_ST_fsm_state36 = 42'd34359738368;
parameter    ap_ST_fsm_state37 = 42'd68719476736;
parameter    ap_ST_fsm_state38 = 42'd137438953472;
parameter    ap_ST_fsm_state39 = 42'd274877906944;
parameter    ap_ST_fsm_state40 = 42'd549755813888;
parameter    ap_ST_fsm_pp0_stage0 = 42'd1099511627776;
parameter    ap_ST_fsm_state43 = 42'd2199023255552;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [16:0] src_val_address0;
output   src_val_ce0;
input  [7:0] src_val_q0;
input  [31:0] src_rows_read;
input  [31:0] src_cols_read;
output  [16:0] dst_val_address0;
output   dst_val_ce0;
output   dst_val_we0;
output  [7:0] dst_val_d0;
input  [31:0] scale;
output  [31:0] ap_return_0;
output  [31:0] ap_return_1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg src_val_ce0;
reg dst_val_ce0;
reg dst_val_we0;

(* fsm_encoding = "none" *) reg   [41:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [30:0] i_op_assign_4_reg_188;
reg  signed [31:0] p_Val2_32_reg_199;
reg   [0:0] isneg_reg_1086;
wire   [51:0] tmp_117_fu_270_p1;
reg   [51:0] tmp_117_reg_1092;
wire   [0:0] tmp_88_fu_274_p2;
reg   [0:0] tmp_88_reg_1097;
wire   [11:0] F2_fu_280_p2;
reg   [11:0] F2_reg_1103;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state31;
wire   [18:0] tmp_122_fu_519_p1;
reg   [18:0] tmp_122_reg_1129;
wire   [31:0] grp_fu_228_p1;
reg   [31:0] tmp_reg_1134;
wire    ap_CS_fsm_state32;
wire   [31:0] grp_fu_232_p1;
reg   [31:0] tmp_85_reg_1139;
wire   [31:0] grp_fu_220_p2;
reg   [31:0] tmp_s_reg_1144;
wire    ap_CS_fsm_state34;
wire   [31:0] grp_fu_224_p2;
reg   [31:0] tmp_86_reg_1149;
wire   [31:0] grp_fu_210_p2;
reg   [31:0] x_assign_reg_1154;
wire    ap_CS_fsm_state38;
wire   [31:0] grp_fu_215_p2;
reg   [31:0] x_assign_8_reg_1159;
wire   [31:0] p_Val2_34_fu_658_p3;
reg   [31:0] p_Val2_34_reg_1164;
wire    ap_CS_fsm_state39;
wire   [31:0] p_Val2_35_fu_801_p3;
reg   [31:0] p_Val2_35_reg_1170;
wire  signed [31:0] iscale_V_fu_809_p1;
reg  signed [31:0] iscale_V_reg_1176;
wire   [0:0] tmp_97_fu_817_p2;
wire    ap_CS_fsm_state40;
wire   [30:0] i_fu_822_p2;
reg   [30:0] i_reg_1186;
wire   [18:0] tmp_43_cast_fu_832_p3;
reg   [18:0] tmp_43_cast_reg_1191;
wire   [32:0] r_V_fu_849_p2;
reg   [32:0] r_V_reg_1196;
wire   [0:0] tmp_99_fu_869_p2;
reg   [0:0] tmp_99_reg_1203;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state41_pp0_stage0_iter0;
wire    ap_block_state42_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [30:0] j_fu_874_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [18:0] tmp_44_fu_884_p2;
reg   [18:0] tmp_44_reg_1212;
wire   [31:0] next_mul_fu_889_p2;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state41;
reg    ap_enable_reg_pp0_iter1;
reg   [30:0] i_op_assign_reg_177;
wire    ap_CS_fsm_state43;
wire  signed [63:0] tmp_48_cast_fu_1071_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] tmp_44_cast_fu_1076_p1;
wire    ap_CS_fsm_state35;
wire    ap_CS_fsm_state33;
wire   [63:0] d_assign_fu_236_p1;
wire   [63:0] ireg_V_fu_240_p1;
wire   [10:0] exp_tmp_V_fu_256_p4;
wire   [62:0] tmp_115_fu_244_p1;
wire   [11:0] tmp_87_fu_266_p1;
wire   [52:0] tmp_57_fu_286_p3;
wire   [53:0] p_Result_4_fu_293_p1;
wire   [53:0] man_V_3_fu_297_p2;
wire   [0:0] tmp_89_fu_310_p2;
wire   [11:0] tmp_90_fu_315_p2;
wire   [11:0] tmp_91_fu_320_p2;
wire  signed [11:0] sh_amt_fu_325_p3;
wire   [53:0] man_V_4_fu_303_p3;
wire   [6:0] tmp_119_fu_352_p4;
wire  signed [31:0] sh_amt_cast_fu_333_p1;
wire   [53:0] tmp_94_fu_368_p1;
wire   [53:0] tmp_95_fu_372_p2;
wire   [31:0] tmp_118_fu_342_p1;
wire   [0:0] tmp_92_fu_337_p2;
wire   [0:0] sel_tmp1_fu_395_p2;
wire   [0:0] sel_tmp6_demorgan_fu_406_p2;
wire   [0:0] sel_tmp6_fu_411_p2;
wire   [0:0] tmp_93_fu_346_p2;
wire   [0:0] sel_tmp7_fu_417_p2;
wire   [0:0] sel_tmp8_fu_423_p2;
wire   [0:0] sel_tmp21_demorgan_fu_441_p2;
wire   [0:0] icmp_fu_362_p2;
wire   [0:0] sel_tmp12_fu_447_p2;
wire   [0:0] sel_tmp13_fu_453_p2;
wire   [31:0] tmp_96_fu_389_p2;
wire   [31:0] tmp_120_fu_378_p1;
wire   [0:0] sel_tmp_fu_435_p2;
wire   [0:0] sel_tmp9_fu_429_p2;
wire   [31:0] p_071_s_fu_382_p3;
wire   [0:0] sel_tmp2_fu_400_p2;
wire   [0:0] or_cond_fu_467_p2;
wire   [31:0] newSel_fu_459_p3;
wire   [31:0] newSel1_fu_473_p3;
wire   [0:0] or_cond1_fu_481_p2;
wire   [0:0] or_cond2_fu_495_p2;
wire   [31:0] newSel2_fu_487_p3;
wire  signed [31:0] newSel3_fu_501_p3;
wire   [31:0] p_Val2_s_fu_523_p1;
wire   [22:0] loc_V_2_fu_544_p1;
wire   [24:0] tmp_238_i_i_i_fu_548_p4;
wire   [7:0] loc_V_fu_534_p4;
wire   [8:0] tmp_i_i_i_i_cast_fu_562_p1;
wire   [8:0] sh_assign_fu_566_p2;
wire   [7:0] tmp_239_i_i_i_fu_580_p2;
wire   [0:0] isNeg_fu_572_p3;
wire  signed [8:0] tmp_239_i_i_i_cast_fu_586_p1;
wire  signed [8:0] sh_assign_2_fu_590_p3;
wire  signed [31:0] sh_assign_2_i_i_i_ca_fu_598_p1;
wire  signed [24:0] sh_assign_2_i_i_i_ca_1_fu_602_p1;
wire   [78:0] tmp_238_i_i_i_cast1_fu_558_p1;
wire   [78:0] tmp_240_i_i_i_fu_606_p1;
wire   [24:0] tmp_241_i_i_i_fu_610_p2;
wire   [0:0] tmp_110_fu_622_p3;
wire   [78:0] tmp_242_i_i_i_fu_616_p2;
wire   [31:0] tmp_35_fu_630_p1;
wire   [31:0] tmp_36_fu_634_p4;
wire   [31:0] p_Val2_20_fu_644_p3;
wire   [0:0] p_Result_s_fu_526_p3;
wire   [31:0] p_Val2_i_i_i_fu_652_p2;
wire   [31:0] p_Val2_23_fu_666_p1;
wire   [22:0] loc_V_4_fu_687_p1;
wire   [24:0] tmp_238_i_i_i7_fu_691_p4;
wire   [7:0] loc_V_3_fu_677_p4;
wire   [8:0] tmp_i_i_i_i8_cast_fu_705_p1;
wire   [8:0] sh_assign_3_fu_709_p2;
wire   [7:0] tmp_239_i_i_i1_fu_723_p2;
wire   [0:0] isNeg_1_fu_715_p3;
wire  signed [8:0] tmp_239_i_i_i11_cast_fu_729_p1;
wire  signed [8:0] sh_assign_4_fu_733_p3;
wire  signed [31:0] sh_assign_2_i_i_i12_s_fu_741_p1;
wire  signed [24:0] sh_assign_2_i_i_i12_1_fu_745_p1;
wire   [78:0] tmp_238_i_i_i7_cast1_fu_701_p1;
wire   [78:0] tmp_240_i_i_i1_fu_749_p1;
wire   [24:0] tmp_241_i_i_i1_fu_753_p2;
wire   [0:0] tmp_114_fu_765_p3;
wire   [78:0] tmp_242_i_i_i1_fu_759_p2;
wire   [31:0] tmp_39_fu_773_p1;
wire   [31:0] tmp_40_fu_777_p4;
wire   [31:0] p_Val2_25_fu_787_p3;
wire   [0:0] p_Result_3_fu_669_p3;
wire   [31:0] p_Val2_i_i_i1_fu_795_p2;
wire   [31:0] grp_fu_513_p2;
wire   [31:0] i_op_assign_cast_fu_813_p1;
wire   [9:0] tmp_123_fu_828_p1;
wire   [30:0] p_Val2_30_fu_840_p0;
wire   [31:0] p_Val2_30_fu_840_p2;
wire  signed [32:0] tmp_98_fu_845_p1;
wire   [31:0] i_op_assign_4_cast_fu_865_p1;
wire   [18:0] tmp_124_fu_880_p1;
wire   [15:0] tmp_126_fu_910_p1;
wire   [16:0] ret_V_fu_894_p4;
wire   [0:0] tmp_100_fu_913_p2;
wire   [16:0] ret_V_6_fu_919_p2;
wire   [0:0] tmp_125_fu_903_p3;
wire   [16:0] p_s_fu_925_p3;
wire  signed [16:0] p_4_fu_933_p3;
wire  signed [32:0] tmp_101_fu_945_p1;
wire   [32:0] r_V_5_fu_949_p2;
wire   [15:0] tmp_128_fu_973_p1;
wire   [16:0] ret_V_7_fu_955_p4;
wire   [0:0] tmp_102_fu_977_p2;
wire   [16:0] ret_V_8_fu_983_p2;
wire   [0:0] tmp_127_fu_965_p3;
wire   [16:0] p_9_fu_989_p3;
wire  signed [16:0] p_5_fu_997_p3;
wire  signed [31:0] r0_fu_941_p1;
wire   [0:0] slt_fu_1009_p2;
wire  signed [31:0] c0_fu_1005_p1;
wire   [0:0] tmp_103_fu_1020_p2;
wire  signed [18:0] tmp_129_fu_1025_p1;
wire   [18:0] tmp_130_fu_1029_p2;
wire   [0:0] rev_fu_1014_p2;
wire   [9:0] tmp_132_fu_1042_p1;
wire   [9:0] tmp_133_fu_1045_p1;
wire   [9:0] tmp_134_fu_1049_p3;
wire   [18:0] tmp_131_fu_1034_p3;
wire   [18:0] tmp_47_cast_fu_1057_p3;
wire   [18:0] tmp_48_fu_1065_p2;
reg    grp_fu_513_ap_start;
wire    grp_fu_513_ap_done;
reg   [41:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 42'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

Haar_Core_fadd_32bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Haar_Core_fadd_32bkb_U29(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_s_reg_1144),
    .din1(32'd1056964608),
    .ce(1'b1),
    .dout(grp_fu_210_p2)
);

Haar_Core_fadd_32bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Haar_Core_fadd_32bkb_U30(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_86_reg_1149),
    .din1(32'd1056964608),
    .ce(1'b1),
    .dout(grp_fu_215_p2)
);

Haar_Core_fmul_32cud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Haar_Core_fmul_32cud_U31(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_reg_1134),
    .din1(scale),
    .ce(1'b1),
    .dout(grp_fu_220_p2)
);

Haar_Core_fmul_32cud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Haar_Core_fmul_32cud_U32(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_85_reg_1139),
    .din1(scale),
    .ce(1'b1),
    .dout(grp_fu_224_p2)
);

Haar_Core_sitofp_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Haar_Core_sitofp_dEe_U33(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(src_rows_read),
    .ce(1'b1),
    .dout(grp_fu_228_p1)
);

Haar_Core_sitofp_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Haar_Core_sitofp_dEe_U34(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(src_cols_read),
    .ce(1'b1),
    .dout(grp_fu_232_p1)
);

Haar_Core_fpext_3eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
Haar_Core_fpext_3eOg_U35(
    .din0(scale),
    .dout(d_assign_fu_236_p1)
);

Haar_Core_sdiv_34fYi #(
    .ID( 1 ),
    .NUM_STAGE( 38 ),
    .din0_WIDTH( 34 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Haar_Core_sdiv_34fYi_U36(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_513_ap_start),
    .done(grp_fu_513_ap_done),
    .din0(34'd4294967296),
    .din1(newSel3_fu_501_p3),
    .ce(1'b1),
    .dout(grp_fu_513_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state41) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state40) & (tmp_97_fu_817_p2 == 1'd1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state41) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state41);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state40) & (tmp_97_fu_817_p2 == 1'd1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state40) & (tmp_97_fu_817_p2 == 1'd1))) begin
        i_op_assign_4_reg_188 <= 31'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_99_fu_869_p2 == 1'd1))) begin
        i_op_assign_4_reg_188 <= j_fu_874_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        i_op_assign_reg_177 <= i_reg_1186;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        i_op_assign_reg_177 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state40) & (tmp_97_fu_817_p2 == 1'd1))) begin
        p_Val2_32_reg_199 <= 32'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_99_fu_869_p2 == 1'd1))) begin
        p_Val2_32_reg_199 <= next_mul_fu_889_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        F2_reg_1103 <= F2_fu_280_p2;
        isneg_reg_1086 <= ireg_V_fu_240_p1[32'd63];
        tmp_117_reg_1092 <= tmp_117_fu_270_p1;
        tmp_88_reg_1097 <= tmp_88_fu_274_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        i_reg_1186 <= i_fu_822_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        iscale_V_reg_1176 <= iscale_V_fu_809_p1;
        p_Val2_34_reg_1164 <= p_Val2_34_fu_658_p3;
        p_Val2_35_reg_1170 <= p_Val2_35_fu_801_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state40) & (tmp_97_fu_817_p2 == 1'd1))) begin
        r_V_reg_1196 <= r_V_fu_849_p2;
        tmp_43_cast_reg_1191[18 : 9] <= tmp_43_cast_fu_832_p3[18 : 9];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        tmp_122_reg_1129 <= tmp_122_fu_519_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_99_fu_869_p2 == 1'd1))) begin
        tmp_44_reg_1212 <= tmp_44_fu_884_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        tmp_85_reg_1139 <= grp_fu_232_p1;
        tmp_reg_1134 <= grp_fu_228_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        tmp_86_reg_1149 <= grp_fu_224_p2;
        tmp_s_reg_1144 <= grp_fu_220_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_99_reg_1203 <= tmp_99_fu_869_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        x_assign_8_reg_1159 <= grp_fu_215_p2;
        x_assign_reg_1154 <= grp_fu_210_p2;
    end
end

always @ (*) begin
    if ((tmp_99_fu_869_p2 == 1'd0)) begin
        ap_condition_pp0_exit_iter0_state41 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state41 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state40) & (tmp_97_fu_817_p2 == 1'd0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) & (tmp_97_fu_817_p2 == 1'd0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dst_val_ce0 = 1'b1;
    end else begin
        dst_val_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_99_reg_1203 == 1'd1))) begin
        dst_val_we0 = 1'b1;
    end else begin
        dst_val_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_513_ap_start = 1'b1;
    end else begin
        grp_fu_513_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_val_ce0 = 1'b1;
    end else begin
        src_val_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            if (((1'b1 == ap_CS_fsm_state40) & (tmp_97_fu_817_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (tmp_99_fu_869_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (tmp_99_fu_869_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_fu_280_p2 = (12'd1075 - tmp_87_fu_266_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd41];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_return_0 = p_Val2_34_reg_1164;

assign ap_return_1 = p_Val2_35_reg_1170;

assign c0_fu_1005_p1 = p_5_fu_997_p3;

assign dst_val_address0 = tmp_44_cast_fu_1076_p1;

assign dst_val_d0 = src_val_q0;

assign exp_tmp_V_fu_256_p4 = {{ireg_V_fu_240_p1[62:52]}};

assign i_fu_822_p2 = (i_op_assign_reg_177 + 31'd1);

assign i_op_assign_4_cast_fu_865_p1 = i_op_assign_4_reg_188;

assign i_op_assign_cast_fu_813_p1 = i_op_assign_reg_177;

assign icmp_fu_362_p2 = ((tmp_119_fu_352_p4 == 7'd0) ? 1'b1 : 1'b0);

assign ireg_V_fu_240_p1 = d_assign_fu_236_p1;

assign isNeg_1_fu_715_p3 = sh_assign_3_fu_709_p2[32'd8];

assign isNeg_fu_572_p3 = sh_assign_fu_566_p2[32'd8];

assign iscale_V_fu_809_p1 = grp_fu_513_p2[31:0];

assign j_fu_874_p2 = (i_op_assign_4_reg_188 + 31'd1);

assign loc_V_2_fu_544_p1 = p_Val2_s_fu_523_p1[22:0];

assign loc_V_3_fu_677_p4 = {{p_Val2_23_fu_666_p1[30:23]}};

assign loc_V_4_fu_687_p1 = p_Val2_23_fu_666_p1[22:0];

assign loc_V_fu_534_p4 = {{p_Val2_s_fu_523_p1[30:23]}};

assign man_V_3_fu_297_p2 = (54'd0 - p_Result_4_fu_293_p1);

assign man_V_4_fu_303_p3 = ((isneg_reg_1086[0:0] === 1'b1) ? man_V_3_fu_297_p2 : p_Result_4_fu_293_p1);

assign newSel1_fu_473_p3 = ((sel_tmp9_fu_429_p2[0:0] === 1'b1) ? p_071_s_fu_382_p3 : tmp_118_fu_342_p1);

assign newSel2_fu_487_p3 = ((or_cond_fu_467_p2[0:0] === 1'b1) ? newSel_fu_459_p3 : newSel1_fu_473_p3);

assign newSel3_fu_501_p3 = ((or_cond2_fu_495_p2[0:0] === 1'b1) ? newSel2_fu_487_p3 : 32'd0);

assign newSel_fu_459_p3 = ((sel_tmp13_fu_453_p2[0:0] === 1'b1) ? tmp_96_fu_389_p2 : tmp_120_fu_378_p1);

assign next_mul_fu_889_p2 = ($signed(iscale_V_reg_1176) + $signed(p_Val2_32_reg_199));

assign or_cond1_fu_481_p2 = (sel_tmp9_fu_429_p2 | sel_tmp2_fu_400_p2);

assign or_cond2_fu_495_p2 = (or_cond_fu_467_p2 | or_cond1_fu_481_p2);

assign or_cond_fu_467_p2 = (sel_tmp_fu_435_p2 | sel_tmp13_fu_453_p2);

assign p_071_s_fu_382_p3 = ((isneg_reg_1086[0:0] === 1'b1) ? 32'd4294967295 : 32'd0);

assign p_4_fu_933_p3 = ((tmp_125_fu_903_p3[0:0] === 1'b1) ? p_s_fu_925_p3 : ret_V_fu_894_p4);

assign p_5_fu_997_p3 = ((tmp_127_fu_965_p3[0:0] === 1'b1) ? p_9_fu_989_p3 : ret_V_7_fu_955_p4);

assign p_9_fu_989_p3 = ((tmp_102_fu_977_p2[0:0] === 1'b1) ? ret_V_7_fu_955_p4 : ret_V_8_fu_983_p2);

assign p_Result_3_fu_669_p3 = p_Val2_23_fu_666_p1[32'd31];

assign p_Result_4_fu_293_p1 = tmp_57_fu_286_p3;

assign p_Result_s_fu_526_p3 = p_Val2_s_fu_523_p1[32'd31];

assign p_Val2_20_fu_644_p3 = ((isNeg_fu_572_p3[0:0] === 1'b1) ? tmp_35_fu_630_p1 : tmp_36_fu_634_p4);

assign p_Val2_23_fu_666_p1 = x_assign_8_reg_1159;

assign p_Val2_25_fu_787_p3 = ((isNeg_1_fu_715_p3[0:0] === 1'b1) ? tmp_39_fu_773_p1 : tmp_40_fu_777_p4);

assign p_Val2_30_fu_840_p0 = i_op_assign_cast_fu_813_p1;

assign p_Val2_30_fu_840_p2 = ($signed({{1'b0}, {p_Val2_30_fu_840_p0}}) * $signed(iscale_V_reg_1176));

assign p_Val2_34_fu_658_p3 = ((p_Result_s_fu_526_p3[0:0] === 1'b1) ? p_Val2_i_i_i_fu_652_p2 : p_Val2_20_fu_644_p3);

assign p_Val2_35_fu_801_p3 = ((p_Result_3_fu_669_p3[0:0] === 1'b1) ? p_Val2_i_i_i1_fu_795_p2 : p_Val2_25_fu_787_p3);

assign p_Val2_i_i_i1_fu_795_p2 = (32'd0 - p_Val2_25_fu_787_p3);

assign p_Val2_i_i_i_fu_652_p2 = (32'd0 - p_Val2_20_fu_644_p3);

assign p_Val2_s_fu_523_p1 = x_assign_reg_1154;

assign p_s_fu_925_p3 = ((tmp_100_fu_913_p2[0:0] === 1'b1) ? ret_V_fu_894_p4 : ret_V_6_fu_919_p2);

assign r0_fu_941_p1 = p_4_fu_933_p3;

assign r_V_5_fu_949_p2 = ($signed(33'd32768) + $signed(tmp_101_fu_945_p1));

assign r_V_fu_849_p2 = ($signed(33'd32768) + $signed(tmp_98_fu_845_p1));

assign ret_V_6_fu_919_p2 = (17'd1 + ret_V_fu_894_p4);

assign ret_V_7_fu_955_p4 = {{r_V_5_fu_949_p2[32:16]}};

assign ret_V_8_fu_983_p2 = (17'd1 + ret_V_7_fu_955_p4);

assign ret_V_fu_894_p4 = {{r_V_reg_1196[32:16]}};

assign rev_fu_1014_p2 = (slt_fu_1009_p2 ^ 1'd1);

assign sel_tmp12_fu_447_p2 = (sel_tmp21_demorgan_fu_441_p2 ^ 1'd1);

assign sel_tmp13_fu_453_p2 = (sel_tmp12_fu_447_p2 & icmp_fu_362_p2);

assign sel_tmp1_fu_395_p2 = (tmp_88_reg_1097 ^ 1'd1);

assign sel_tmp21_demorgan_fu_441_p2 = (tmp_89_fu_310_p2 | sel_tmp6_demorgan_fu_406_p2);

assign sel_tmp2_fu_400_p2 = (tmp_92_fu_337_p2 & sel_tmp1_fu_395_p2);

assign sel_tmp6_demorgan_fu_406_p2 = (tmp_92_fu_337_p2 | tmp_88_reg_1097);

assign sel_tmp6_fu_411_p2 = (sel_tmp6_demorgan_fu_406_p2 ^ 1'd1);

assign sel_tmp7_fu_417_p2 = (tmp_89_fu_310_p2 & sel_tmp6_fu_411_p2);

assign sel_tmp8_fu_423_p2 = (tmp_93_fu_346_p2 ^ 1'd1);

assign sel_tmp9_fu_429_p2 = (sel_tmp8_fu_423_p2 & sel_tmp7_fu_417_p2);

assign sel_tmp_fu_435_p2 = (tmp_93_fu_346_p2 & sel_tmp7_fu_417_p2);

assign sh_amt_cast_fu_333_p1 = sh_amt_fu_325_p3;

assign sh_amt_fu_325_p3 = ((tmp_89_fu_310_p2[0:0] === 1'b1) ? tmp_90_fu_315_p2 : tmp_91_fu_320_p2);

assign sh_assign_2_fu_590_p3 = ((isNeg_fu_572_p3[0:0] === 1'b1) ? tmp_239_i_i_i_cast_fu_586_p1 : sh_assign_fu_566_p2);

assign sh_assign_2_i_i_i12_1_fu_745_p1 = sh_assign_4_fu_733_p3;

assign sh_assign_2_i_i_i12_s_fu_741_p1 = sh_assign_4_fu_733_p3;

assign sh_assign_2_i_i_i_ca_1_fu_602_p1 = sh_assign_2_fu_590_p3;

assign sh_assign_2_i_i_i_ca_fu_598_p1 = sh_assign_2_fu_590_p3;

assign sh_assign_3_fu_709_p2 = ($signed(9'd385) + $signed(tmp_i_i_i_i8_cast_fu_705_p1));

assign sh_assign_4_fu_733_p3 = ((isNeg_1_fu_715_p3[0:0] === 1'b1) ? tmp_239_i_i_i11_cast_fu_729_p1 : sh_assign_3_fu_709_p2);

assign sh_assign_fu_566_p2 = ($signed(9'd385) + $signed(tmp_i_i_i_i_cast_fu_562_p1));

assign slt_fu_1009_p2 = (($signed(r0_fu_941_p1) < $signed(src_rows_read)) ? 1'b1 : 1'b0);

assign src_val_address0 = tmp_48_cast_fu_1071_p1;

assign tmp_100_fu_913_p2 = ((tmp_126_fu_910_p1 == 16'd0) ? 1'b1 : 1'b0);

assign tmp_101_fu_945_p1 = p_Val2_32_reg_199;

assign tmp_102_fu_977_p2 = ((tmp_128_fu_973_p1 == 16'd0) ? 1'b1 : 1'b0);

assign tmp_103_fu_1020_p2 = (($signed(c0_fu_1005_p1) < $signed(src_cols_read)) ? 1'b1 : 1'b0);

assign tmp_110_fu_622_p3 = tmp_241_i_i_i_fu_610_p2[32'd24];

assign tmp_114_fu_765_p3 = tmp_241_i_i_i1_fu_753_p2[32'd24];

assign tmp_115_fu_244_p1 = ireg_V_fu_240_p1[62:0];

assign tmp_117_fu_270_p1 = ireg_V_fu_240_p1[51:0];

assign tmp_118_fu_342_p1 = man_V_4_fu_303_p3[31:0];

assign tmp_119_fu_352_p4 = {{sh_amt_fu_325_p3[11:5]}};

assign tmp_120_fu_378_p1 = tmp_95_fu_372_p2[31:0];

assign tmp_122_fu_519_p1 = src_cols_read[18:0];

assign tmp_123_fu_828_p1 = i_op_assign_reg_177[9:0];

assign tmp_124_fu_880_p1 = i_op_assign_4_reg_188[18:0];

assign tmp_125_fu_903_p3 = r_V_reg_1196[32'd32];

assign tmp_126_fu_910_p1 = r_V_reg_1196[15:0];

assign tmp_127_fu_965_p3 = r_V_5_fu_949_p2[32'd32];

assign tmp_128_fu_973_p1 = r_V_5_fu_949_p2[15:0];

assign tmp_129_fu_1025_p1 = p_5_fu_997_p3;

assign tmp_130_fu_1029_p2 = ($signed(19'd524287) + $signed(tmp_122_reg_1129));

assign tmp_131_fu_1034_p3 = ((tmp_103_fu_1020_p2[0:0] === 1'b1) ? tmp_129_fu_1025_p1 : tmp_130_fu_1029_p2);

assign tmp_132_fu_1042_p1 = src_rows_read[9:0];

assign tmp_133_fu_1045_p1 = p_4_fu_933_p3[9:0];

assign tmp_134_fu_1049_p3 = ((rev_fu_1014_p2[0:0] === 1'b1) ? tmp_132_fu_1042_p1 : tmp_133_fu_1045_p1);

assign tmp_238_i_i_i7_cast1_fu_701_p1 = tmp_238_i_i_i7_fu_691_p4;

assign tmp_238_i_i_i7_fu_691_p4 = {{{{1'd1}, {loc_V_4_fu_687_p1}}}, {1'd0}};

assign tmp_238_i_i_i_cast1_fu_558_p1 = tmp_238_i_i_i_fu_548_p4;

assign tmp_238_i_i_i_fu_548_p4 = {{{{1'd1}, {loc_V_2_fu_544_p1}}}, {1'd0}};

assign tmp_239_i_i_i11_cast_fu_729_p1 = $signed(tmp_239_i_i_i1_fu_723_p2);

assign tmp_239_i_i_i1_fu_723_p2 = (8'd127 - loc_V_3_fu_677_p4);

assign tmp_239_i_i_i_cast_fu_586_p1 = $signed(tmp_239_i_i_i_fu_580_p2);

assign tmp_239_i_i_i_fu_580_p2 = (8'd127 - loc_V_fu_534_p4);

assign tmp_240_i_i_i1_fu_749_p1 = $unsigned(sh_assign_2_i_i_i12_s_fu_741_p1);

assign tmp_240_i_i_i_fu_606_p1 = $unsigned(sh_assign_2_i_i_i_ca_fu_598_p1);

assign tmp_241_i_i_i1_fu_753_p2 = tmp_238_i_i_i7_fu_691_p4 >> sh_assign_2_i_i_i12_1_fu_745_p1;

assign tmp_241_i_i_i_fu_610_p2 = tmp_238_i_i_i_fu_548_p4 >> sh_assign_2_i_i_i_ca_1_fu_602_p1;

assign tmp_242_i_i_i1_fu_759_p2 = tmp_238_i_i_i7_cast1_fu_701_p1 << tmp_240_i_i_i1_fu_749_p1;

assign tmp_242_i_i_i_fu_616_p2 = tmp_238_i_i_i_cast1_fu_558_p1 << tmp_240_i_i_i_fu_606_p1;

assign tmp_35_fu_630_p1 = tmp_110_fu_622_p3;

assign tmp_36_fu_634_p4 = {{tmp_242_i_i_i_fu_616_p2[55:24]}};

assign tmp_39_fu_773_p1 = tmp_114_fu_765_p3;

assign tmp_40_fu_777_p4 = {{tmp_242_i_i_i1_fu_759_p2[55:24]}};

assign tmp_43_cast_fu_832_p3 = {{tmp_123_fu_828_p1}, {9'd0}};

assign tmp_44_cast_fu_1076_p1 = tmp_44_reg_1212;

assign tmp_44_fu_884_p2 = (tmp_124_fu_880_p1 + tmp_43_cast_reg_1191);

assign tmp_47_cast_fu_1057_p3 = {{tmp_134_fu_1049_p3}, {9'd0}};

assign tmp_48_cast_fu_1071_p1 = $signed(tmp_48_fu_1065_p2);

assign tmp_48_fu_1065_p2 = (tmp_131_fu_1034_p3 + tmp_47_cast_fu_1057_p3);

assign tmp_57_fu_286_p3 = {{1'd1}, {tmp_117_reg_1092}};

assign tmp_87_fu_266_p1 = exp_tmp_V_fu_256_p4;

assign tmp_88_fu_274_p2 = ((tmp_115_fu_244_p1 == 63'd0) ? 1'b1 : 1'b0);

assign tmp_89_fu_310_p2 = (($signed(F2_reg_1103) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign tmp_90_fu_315_p2 = ($signed(12'd4080) + $signed(F2_reg_1103));

assign tmp_91_fu_320_p2 = (12'd16 - F2_reg_1103);

assign tmp_92_fu_337_p2 = ((F2_reg_1103 == 12'd16) ? 1'b1 : 1'b0);

assign tmp_93_fu_346_p2 = ((sh_amt_fu_325_p3 < 12'd54) ? 1'b1 : 1'b0);

assign tmp_94_fu_368_p1 = $unsigned(sh_amt_cast_fu_333_p1);

assign tmp_95_fu_372_p2 = $signed(man_V_4_fu_303_p3) >>> tmp_94_fu_368_p1;

assign tmp_96_fu_389_p2 = tmp_118_fu_342_p1 << sh_amt_cast_fu_333_p1;

assign tmp_97_fu_817_p2 = (($signed(i_op_assign_cast_fu_813_p1) < $signed(p_Val2_34_reg_1164)) ? 1'b1 : 1'b0);

assign tmp_98_fu_845_p1 = $signed(p_Val2_30_fu_840_p2);

assign tmp_99_fu_869_p2 = (($signed(i_op_assign_4_cast_fu_865_p1) < $signed(p_Val2_35_reg_1170)) ? 1'b1 : 1'b0);

assign tmp_i_i_i_i8_cast_fu_705_p1 = loc_V_3_fu_677_p4;

assign tmp_i_i_i_i_cast_fu_562_p1 = loc_V_fu_534_p4;

always @ (posedge ap_clk) begin
    tmp_43_cast_reg_1191[8:0] <= 9'b000000000;
end

endmodule //Resize5
