// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module detectMultiScale (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        src_val_address0,
        src_val_ce0,
        src_val_q0,
        src_rows_dout,
        src_rows_empty_n,
        src_rows_read,
        src_cols_dout,
        src_cols_empty_n,
        src_cols_read,
        locations_val_address0,
        locations_val_ce0,
        locations_val_we0,
        locations_val_d0,
        locations_val_address1,
        locations_val_ce1,
        locations_val_we1,
        locations_val_d1,
        locations_rows_dout,
        locations_rows_empty_n,
        locations_rows_read,
        locations_cols_dout,
        locations_cols_empty_n,
        locations_cols_read,
        p_scale0_dout,
        p_scale0_empty_n,
        p_scale0_read,
        neighbors_dout,
        neighbors_empty_n,
        neighbors_read,
        locations_rows_out_din,
        locations_rows_out_full_n,
        locations_rows_out_write,
        locations_cols_out_din,
        locations_cols_out_full_n,
        locations_cols_out_write
);

parameter    ap_ST_fsm_state1 = 22'd1;
parameter    ap_ST_fsm_state2 = 22'd2;
parameter    ap_ST_fsm_state3 = 22'd4;
parameter    ap_ST_fsm_state4 = 22'd8;
parameter    ap_ST_fsm_state5 = 22'd16;
parameter    ap_ST_fsm_state6 = 22'd32;
parameter    ap_ST_fsm_state7 = 22'd64;
parameter    ap_ST_fsm_state8 = 22'd128;
parameter    ap_ST_fsm_state9 = 22'd256;
parameter    ap_ST_fsm_state10 = 22'd512;
parameter    ap_ST_fsm_state11 = 22'd1024;
parameter    ap_ST_fsm_state12 = 22'd2048;
parameter    ap_ST_fsm_state13 = 22'd4096;
parameter    ap_ST_fsm_state14 = 22'd8192;
parameter    ap_ST_fsm_state15 = 22'd16384;
parameter    ap_ST_fsm_state16 = 22'd32768;
parameter    ap_ST_fsm_state17 = 22'd65536;
parameter    ap_ST_fsm_state18 = 22'd131072;
parameter    ap_ST_fsm_state19 = 22'd262144;
parameter    ap_ST_fsm_state20 = 22'd524288;
parameter    ap_ST_fsm_state21 = 22'd1048576;
parameter    ap_ST_fsm_state22 = 22'd2097152;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [16:0] src_val_address0;
output   src_val_ce0;
input  [7:0] src_val_q0;
input  [31:0] src_rows_dout;
input   src_rows_empty_n;
output   src_rows_read;
input  [31:0] src_cols_dout;
input   src_cols_empty_n;
output   src_cols_read;
output  [8:0] locations_val_address0;
output   locations_val_ce0;
output   locations_val_we0;
output  [15:0] locations_val_d0;
output  [8:0] locations_val_address1;
output   locations_val_ce1;
output   locations_val_we1;
output  [15:0] locations_val_d1;
input  [3:0] locations_rows_dout;
input   locations_rows_empty_n;
output   locations_rows_read;
input  [7:0] locations_cols_dout;
input   locations_cols_empty_n;
output   locations_cols_read;
input  [31:0] p_scale0_dout;
input   p_scale0_empty_n;
output   p_scale0_read;
input  [31:0] neighbors_dout;
input   neighbors_empty_n;
output   neighbors_read;
output  [3:0] locations_rows_out_din;
input   locations_rows_out_full_n;
output   locations_rows_out_write;
output  [7:0] locations_cols_out_din;
input   locations_cols_out_full_n;
output   locations_cols_out_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg src_rows_read;
reg src_cols_read;
reg[8:0] locations_val_address0;
reg locations_val_ce0;
reg locations_val_we0;
reg[15:0] locations_val_d0;
reg locations_val_ce1;
reg locations_val_we1;
reg locations_rows_read;
reg locations_cols_read;
reg p_scale0_read;
reg neighbors_read;
reg locations_rows_out_write;
reg locations_cols_out_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [21:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    src_rows_blk_n;
reg    src_cols_blk_n;
reg    locations_rows_blk_n;
reg    locations_cols_blk_n;
reg    p_scale0_blk_n;
reg    neighbors_blk_n;
reg    locations_rows_out_blk_n;
reg    locations_cols_out_blk_n;
reg   [3:0] locations_rows_read_reg_1029;
reg    ap_block_state1;
reg   [7:0] locations_cols_read_reg_1034;
reg   [31:0] neighbors_read_reg_1039;
reg   [31:0] rows_reg_1044;
reg   [31:0] cols_reg_1050;
reg   [0:0] isneg_reg_1056;
wire   [51:0] tmp_74_fu_486_p1;
reg   [51:0] tmp_74_reg_1062;
wire   [0:0] tmp_85_i_fu_490_p2;
reg   [0:0] tmp_85_i_reg_1067;
wire   [11:0] F2_fu_496_p2;
reg   [11:0] F2_reg_1073;
wire  signed [47:0] OP2_V_cast8_i_fu_707_p1;
reg  signed [47:0] OP2_V_cast8_i_reg_1081;
wire    ap_CS_fsm_state2;
wire   [47:0] tmp_101_i_fu_711_p3;
reg   [47:0] tmp_101_i_reg_1087;
wire   [47:0] tmp_105_i_fu_718_p3;
reg   [47:0] tmp_105_i_reg_1092;
wire   [0:0] tmp_108_i_fu_725_p2;
reg   [0:0] tmp_108_i_reg_1097;
wire   [4:0] levels_fu_739_p2;
wire    ap_CS_fsm_state3;
wire   [0:0] tmp_78_fu_731_p3;
wire   [0:0] tmp_103_i_fu_784_p2;
wire   [0:0] or_cond_i_fu_800_p2;
wire   [4:0] i_fu_826_p2;
reg   [4:0] i_reg_1124;
wire    ap_CS_fsm_state4;
wire   [0:0] tmp_i_i_fu_832_p2;
reg   [0:0] tmp_i_i_reg_1129;
wire   [0:0] exitcond_fu_820_p2;
wire   [0:0] is_neg_fu_838_p3;
reg   [0:0] is_neg_reg_1134;
wire   [31:0] tmp32_V_1_fu_878_p2;
reg   [31:0] tmp32_V_1_reg_1139;
wire   [7:0] tmp_80_fu_884_p1;
reg   [7:0] tmp_80_reg_1144;
reg   [31:0] p_scale_V_reg_1149;
wire   [31:0] tmp32_V_fu_907_p1;
reg   [31:0] tmp32_V_reg_1154;
wire    ap_CS_fsm_state6;
reg   [7:0] p_Result_i_i_reg_1159;
wire   [31:0] p_03_i_i_i_fu_963_p3;
reg   [31:0] p_03_i_i_i_reg_1164;
wire    ap_CS_fsm_state7;
wire   [31:0] grp_fu_444_p2;
reg   [31:0] iscale_reg_1169;
wire    ap_CS_fsm_state14;
reg   [31:0] dst_rows_reg_1174;
wire    ap_CS_fsm_state16;
wire    grp_Resize5_fu_434_ap_idle;
wire    grp_Resize5_fu_434_ap_ready;
wire    grp_Resize5_fu_434_ap_done;
reg   [31:0] dst_cols_reg_1179;
wire   [31:0] grp_detect_fu_384_ap_return;
wire    ap_CS_fsm_state18;
wire    grp_detect_fu_384_ap_idle;
wire    grp_detect_fu_384_ap_ready;
wire    grp_detect_fu_384_ap_done;
wire   [9:0] next_mul_fu_978_p2;
reg   [9:0] next_mul_reg_1189;
wire    ap_CS_fsm_state19;
wire   [0:0] tmp_112_i_fu_988_p2;
wire   [2:0] i_7_fu_993_p2;
reg   [2:0] i_7_reg_1198;
wire   [6:0] j_fu_1008_p2;
wire    ap_CS_fsm_state20;
reg   [16:0] dst_val_address0;
reg    dst_val_ce0;
reg    dst_val_we0;
wire   [7:0] dst_val_q0;
reg   [9:0] rects_val_x_address0;
reg    rects_val_x_ce0;
reg    rects_val_x_we0;
wire   [15:0] rects_val_x_q0;
reg   [9:0] rects_val_y_address0;
reg    rects_val_y_ce0;
reg    rects_val_y_we0;
wire   [15:0] rects_val_y_q0;
reg   [9:0] rects_val_width_address0;
reg    rects_val_width_ce0;
reg    rects_val_width_we0;
wire   [15:0] rects_val_width_q0;
reg   [9:0] rects_val_height_address0;
reg    rects_val_height_ce0;
reg    rects_val_height_we0;
wire   [15:0] rects_val_height_q0;
wire    grp_detect_fu_384_ap_start;
wire   [16:0] grp_detect_fu_384_src_val_address0;
wire    grp_detect_fu_384_src_val_ce0;
wire   [9:0] grp_detect_fu_384_rects_val_x_address0;
wire    grp_detect_fu_384_rects_val_x_ce0;
wire    grp_detect_fu_384_rects_val_x_we0;
wire   [15:0] grp_detect_fu_384_rects_val_x_d0;
wire   [9:0] grp_detect_fu_384_rects_val_y_address0;
wire    grp_detect_fu_384_rects_val_y_ce0;
wire    grp_detect_fu_384_rects_val_y_we0;
wire   [15:0] grp_detect_fu_384_rects_val_y_d0;
wire   [9:0] grp_detect_fu_384_rects_val_width_address0;
wire    grp_detect_fu_384_rects_val_width_ce0;
wire    grp_detect_fu_384_rects_val_width_we0;
wire   [15:0] grp_detect_fu_384_rects_val_width_d0;
wire   [9:0] grp_detect_fu_384_rects_val_height_address0;
wire    grp_detect_fu_384_rects_val_height_ce0;
wire    grp_detect_fu_384_rects_val_height_we0;
wire   [15:0] grp_detect_fu_384_rects_val_height_d0;
wire    grp_groupRectangles_fu_421_ap_start;
wire    grp_groupRectangles_fu_421_ap_done;
wire    grp_groupRectangles_fu_421_ap_idle;
wire    grp_groupRectangles_fu_421_ap_ready;
wire   [9:0] grp_groupRectangles_fu_421_rects_val_x_address0;
wire    grp_groupRectangles_fu_421_rects_val_x_ce0;
wire   [9:0] grp_groupRectangles_fu_421_rects_val_y_address0;
wire    grp_groupRectangles_fu_421_rects_val_y_ce0;
wire   [9:0] grp_groupRectangles_fu_421_rects_val_width_address0;
wire    grp_groupRectangles_fu_421_rects_val_width_ce0;
wire   [9:0] grp_groupRectangles_fu_421_rects_val_height_address0;
wire    grp_groupRectangles_fu_421_rects_val_height_ce0;
wire   [8:0] grp_groupRectangles_fu_421_locations_val_address0;
wire    grp_groupRectangles_fu_421_locations_val_ce0;
wire    grp_groupRectangles_fu_421_locations_val_we0;
wire   [15:0] grp_groupRectangles_fu_421_locations_val_d0;
wire   [8:0] grp_groupRectangles_fu_421_locations_val_address1;
wire    grp_groupRectangles_fu_421_locations_val_ce1;
wire    grp_groupRectangles_fu_421_locations_val_we1;
wire   [15:0] grp_groupRectangles_fu_421_locations_val_d1;
wire    grp_Resize5_fu_434_ap_start;
wire   [16:0] grp_Resize5_fu_434_src_val_address0;
wire    grp_Resize5_fu_434_src_val_ce0;
wire   [16:0] grp_Resize5_fu_434_dst_val_address0;
wire    grp_Resize5_fu_434_dst_val_ce0;
wire    grp_Resize5_fu_434_dst_val_we0;
wire   [7:0] grp_Resize5_fu_434_dst_val_d0;
wire   [31:0] grp_Resize5_fu_434_ap_return_0;
wire   [31:0] grp_Resize5_fu_434_ap_return_1;
reg  signed [31:0] p_i_reg_282;
reg   [4:0] levels_i_reg_293;
reg   [4:0] levels_1_i_reg_304;
reg   [31:0] rects_length_read_as_reg_315;
reg   [31:0] p_Val2_14_reg_327;
reg   [4:0] i_i_reg_339;
reg   [2:0] i_0_i_i_reg_350;
wire    ap_CS_fsm_state21;
reg   [9:0] phi_mul_reg_361;
reg   [6:0] j_0_i_i_reg_373;
wire   [0:0] tmp_114_i_fu_1003_p2;
reg    grp_detect_fu_384_ap_start_reg;
wire    ap_CS_fsm_state17;
reg    grp_groupRectangles_fu_421_ap_start_reg;
wire    ap_CS_fsm_state22;
reg    grp_Resize5_fu_434_ap_start_reg;
wire    ap_CS_fsm_state15;
wire   [63:0] tmp_22_cast_fu_1024_p1;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state5;
wire   [63:0] d_assign_fu_452_p1;
wire   [63:0] ireg_V_fu_456_p1;
wire   [10:0] exp_tmp_V_fu_472_p4;
wire   [62:0] tmp_fu_460_p1;
wire   [11:0] tmp_i_fu_482_p1;
wire   [52:0] tmp_i_82_fu_502_p3;
wire   [53:0] p_Result_s_fu_509_p1;
wire   [53:0] man_V_1_fu_513_p2;
wire   [0:0] tmp_87_i_fu_526_p2;
wire   [11:0] tmp_88_i_fu_531_p2;
wire   [11:0] tmp_89_i_fu_536_p2;
wire  signed [11:0] sh_amt_fu_541_p3;
wire   [53:0] man_V_2_fu_519_p3;
wire   [6:0] tmp_76_fu_568_p4;
wire  signed [31:0] sh_amt_cast_i_fu_549_p1;
wire   [53:0] tmp_95_i_fu_584_p1;
wire   [53:0] tmp_96_i_fu_588_p2;
wire   [31:0] tmp_75_fu_558_p1;
wire   [0:0] tmp_90_i_fu_553_p2;
wire   [0:0] sel_tmp1_fu_611_p2;
wire   [0:0] sel_tmp2_fu_616_p2;
wire   [0:0] sel_tmp6_demorgan_fu_630_p2;
wire   [0:0] sel_tmp6_fu_635_p2;
wire   [0:0] tmp_92_i_fu_562_p2;
wire   [0:0] sel_tmp7_fu_641_p2;
wire   [0:0] sel_tmp8_fu_647_p2;
wire   [0:0] sel_tmp9_fu_653_p2;
wire   [31:0] p_023_i_fu_598_p3;
wire   [31:0] sel_tmp3_fu_622_p3;
wire   [0:0] sel_tmp4_fu_667_p2;
wire   [31:0] tmp_77_fu_594_p1;
wire   [31:0] sel_tmp_fu_659_p3;
wire   [0:0] sel_tmp21_demorgan_fu_681_p2;
wire   [0:0] icmp_fu_578_p2;
wire   [0:0] sel_tmp10_fu_687_p2;
wire   [0:0] sel_tmp11_fu_693_p2;
wire   [31:0] tmp_98_i_fu_605_p2;
wire   [31:0] sel_tmp5_fu_673_p3;
wire  signed [31:0] scale0_V_fu_699_p3;
wire   [35:0] p_shl_i_fu_750_p3;
wire   [33:0] p_shl1_i_fu_762_p3;
wire  signed [36:0] p_shl1_cast_i_fu_770_p1;
wire  signed [36:0] p_shl_cast_i_fu_758_p1;
wire   [36:0] r_V_fu_774_p2;
wire  signed [47:0] r_V_cast_i_fu_780_p1;
wire   [0:0] slt_fu_789_p2;
wire   [0:0] rev_fu_794_p2;
wire  signed [31:0] p_Val2_13_fu_805_p0;
wire  signed [31:0] p_Val2_13_fu_805_p1;
wire   [47:0] p_Val2_13_fu_805_p2;
wire   [31:0] tmp_i_i_83_fu_846_p2;
wire   [31:0] p_Val2_16_fu_852_p3;
reg   [31:0] p_Result_1_fu_860_p4;
reg   [31:0] num_zeros_fu_870_p3;
wire  signed [31:0] p_Val2_15_fu_892_p0;
wire  signed [31:0] p_Val2_15_fu_892_p1;
wire   [47:0] p_Val2_15_fu_892_p2;
wire   [31:0] grp_fu_449_p1;
wire   [0:0] tmp_83_i_i_fu_921_p2;
wire   [7:0] tmp_53_i_i_fu_931_p1;
wire   [7:0] tmp_52_i_i_fu_926_p2;
wire   [7:0] p_Repl2_12_trunc_i_fu_935_p2;
wire   [8:0] tmp_54_i_i_fu_941_p3;
wire   [31:0] p_Result_2_fu_948_p5;
wire   [31:0] f_fu_959_p1;
wire   [3:0] i_0_i_cast_cast_i_fu_984_p1;
wire   [7:0] j_0_i_cast_cast_i_fu_999_p1;
wire   [9:0] tmp_115_i_cast_fu_1014_p1;
wire   [9:0] tmp_22_fu_1018_p2;
reg   [21:0] ap_NS_fsm;
reg    ap_condition_394;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 22'd1;
#0 grp_detect_fu_384_ap_start_reg = 1'b0;
#0 grp_groupRectangles_fu_421_ap_start_reg = 1'b0;
#0 grp_Resize5_fu_434_ap_start_reg = 1'b0;
end

detectMultiScale_bil #(
    .DataWidth( 8 ),
    .AddressRange( 131072 ),
    .AddressWidth( 17 ))
dst_val_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dst_val_address0),
    .ce0(dst_val_ce0),
    .we0(dst_val_we0),
    .d0(grp_Resize5_fu_434_dst_val_d0),
    .q0(dst_val_q0)
);

detectMultiScale_bjl #(
    .DataWidth( 16 ),
    .AddressRange( 1000 ),
    .AddressWidth( 10 ))
rects_val_x_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(rects_val_x_address0),
    .ce0(rects_val_x_ce0),
    .we0(rects_val_x_we0),
    .d0(grp_detect_fu_384_rects_val_x_d0),
    .q0(rects_val_x_q0)
);

detectMultiScale_bjl #(
    .DataWidth( 16 ),
    .AddressRange( 1000 ),
    .AddressWidth( 10 ))
rects_val_y_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(rects_val_y_address0),
    .ce0(rects_val_y_ce0),
    .we0(rects_val_y_we0),
    .d0(grp_detect_fu_384_rects_val_y_d0),
    .q0(rects_val_y_q0)
);

detectMultiScale_bjl #(
    .DataWidth( 16 ),
    .AddressRange( 1000 ),
    .AddressWidth( 10 ))
rects_val_width_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(rects_val_width_address0),
    .ce0(rects_val_width_ce0),
    .we0(rects_val_width_we0),
    .d0(grp_detect_fu_384_rects_val_width_d0),
    .q0(rects_val_width_q0)
);

detectMultiScale_bjl #(
    .DataWidth( 16 ),
    .AddressRange( 1000 ),
    .AddressWidth( 10 ))
rects_val_height_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(rects_val_height_address0),
    .ce0(rects_val_height_ce0),
    .we0(rects_val_height_we0),
    .d0(grp_detect_fu_384_rects_val_height_d0),
    .q0(rects_val_height_q0)
);

detect grp_detect_fu_384(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_detect_fu_384_ap_start),
    .ap_done(grp_detect_fu_384_ap_done),
    .ap_idle(grp_detect_fu_384_ap_idle),
    .ap_ready(grp_detect_fu_384_ap_ready),
    .src_val_address0(grp_detect_fu_384_src_val_address0),
    .src_val_ce0(grp_detect_fu_384_src_val_ce0),
    .src_val_q0(dst_val_q0),
    .src_rows_read(dst_rows_reg_1174),
    .src_cols_read(dst_cols_reg_1179),
    .scale_V(p_Val2_14_reg_327),
    .rects_val_x_address0(grp_detect_fu_384_rects_val_x_address0),
    .rects_val_x_ce0(grp_detect_fu_384_rects_val_x_ce0),
    .rects_val_x_we0(grp_detect_fu_384_rects_val_x_we0),
    .rects_val_x_d0(grp_detect_fu_384_rects_val_x_d0),
    .rects_val_y_address0(grp_detect_fu_384_rects_val_y_address0),
    .rects_val_y_ce0(grp_detect_fu_384_rects_val_y_ce0),
    .rects_val_y_we0(grp_detect_fu_384_rects_val_y_we0),
    .rects_val_y_d0(grp_detect_fu_384_rects_val_y_d0),
    .rects_val_width_address0(grp_detect_fu_384_rects_val_width_address0),
    .rects_val_width_ce0(grp_detect_fu_384_rects_val_width_ce0),
    .rects_val_width_we0(grp_detect_fu_384_rects_val_width_we0),
    .rects_val_width_d0(grp_detect_fu_384_rects_val_width_d0),
    .rects_val_height_address0(grp_detect_fu_384_rects_val_height_address0),
    .rects_val_height_ce0(grp_detect_fu_384_rects_val_height_ce0),
    .rects_val_height_we0(grp_detect_fu_384_rects_val_height_we0),
    .rects_val_height_d0(grp_detect_fu_384_rects_val_height_d0),
    .rects_length_read(rects_length_read_as_reg_315),
    .ap_return(grp_detect_fu_384_ap_return)
);

groupRectangles grp_groupRectangles_fu_421(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_groupRectangles_fu_421_ap_start),
    .ap_done(grp_groupRectangles_fu_421_ap_done),
    .ap_idle(grp_groupRectangles_fu_421_ap_idle),
    .ap_ready(grp_groupRectangles_fu_421_ap_ready),
    .rects_val_x_address0(grp_groupRectangles_fu_421_rects_val_x_address0),
    .rects_val_x_ce0(grp_groupRectangles_fu_421_rects_val_x_ce0),
    .rects_val_x_q0(rects_val_x_q0),
    .rects_val_y_address0(grp_groupRectangles_fu_421_rects_val_y_address0),
    .rects_val_y_ce0(grp_groupRectangles_fu_421_rects_val_y_ce0),
    .rects_val_y_q0(rects_val_y_q0),
    .rects_val_width_address0(grp_groupRectangles_fu_421_rects_val_width_address0),
    .rects_val_width_ce0(grp_groupRectangles_fu_421_rects_val_width_ce0),
    .rects_val_width_q0(rects_val_width_q0),
    .rects_val_height_address0(grp_groupRectangles_fu_421_rects_val_height_address0),
    .rects_val_height_ce0(grp_groupRectangles_fu_421_rects_val_height_ce0),
    .rects_val_height_q0(rects_val_height_q0),
    .rects_length_read(rects_length_read_as_reg_315),
    .locations_val_address0(grp_groupRectangles_fu_421_locations_val_address0),
    .locations_val_ce0(grp_groupRectangles_fu_421_locations_val_ce0),
    .locations_val_we0(grp_groupRectangles_fu_421_locations_val_we0),
    .locations_val_d0(grp_groupRectangles_fu_421_locations_val_d0),
    .locations_val_address1(grp_groupRectangles_fu_421_locations_val_address1),
    .locations_val_ce1(grp_groupRectangles_fu_421_locations_val_ce1),
    .locations_val_we1(grp_groupRectangles_fu_421_locations_val_we1),
    .locations_val_d1(grp_groupRectangles_fu_421_locations_val_d1),
    .neighbors(neighbors_read_reg_1039)
);

Resize5 grp_Resize5_fu_434(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Resize5_fu_434_ap_start),
    .ap_done(grp_Resize5_fu_434_ap_done),
    .ap_idle(grp_Resize5_fu_434_ap_idle),
    .ap_ready(grp_Resize5_fu_434_ap_ready),
    .src_val_address0(grp_Resize5_fu_434_src_val_address0),
    .src_val_ce0(grp_Resize5_fu_434_src_val_ce0),
    .src_val_q0(src_val_q0),
    .src_rows_read(rows_reg_1044),
    .src_cols_read(cols_reg_1050),
    .dst_val_address0(grp_Resize5_fu_434_dst_val_address0),
    .dst_val_ce0(grp_Resize5_fu_434_dst_val_ce0),
    .dst_val_we0(grp_Resize5_fu_434_dst_val_we0),
    .dst_val_d0(grp_Resize5_fu_434_dst_val_d0),
    .scale(iscale_reg_1169),
    .ap_return_0(grp_Resize5_fu_434_ap_return_0),
    .ap_return_1(grp_Resize5_fu_434_ap_return_1)
);

Haar_Core_fdiv_32bnm #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Haar_Core_fdiv_32bnm_U568(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(32'd1065353216),
    .din1(p_03_i_i_i_reg_1164),
    .ce(1'b1),
    .dout(grp_fu_444_p2)
);

Haar_Core_uitofp_bom #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Haar_Core_uitofp_bom_U569(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp32_V_1_reg_1139),
    .ce(1'b1),
    .dout(grp_fu_449_p1)
);

Haar_Core_fpext_3eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
Haar_Core_fpext_3eOg_U570(
    .din0(p_scale0_dout),
    .dout(d_assign_fu_452_p1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((grp_groupRectangles_fu_421_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state22))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_Resize5_fu_434_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state15)) begin
            grp_Resize5_fu_434_ap_start_reg <= 1'b1;
        end else if ((grp_Resize5_fu_434_ap_ready == 1'b1)) begin
            grp_Resize5_fu_434_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_detect_fu_384_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state17)) begin
            grp_detect_fu_384_ap_start_reg <= 1'b1;
        end else if ((grp_detect_fu_384_ap_ready == 1'b1)) begin
            grp_detect_fu_384_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_groupRectangles_fu_421_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state19) & (tmp_112_i_fu_988_p2 == 1'd0))) begin
            grp_groupRectangles_fu_421_ap_start_reg <= 1'b1;
        end else if ((grp_groupRectangles_fu_421_ap_ready == 1'b1)) begin
            grp_groupRectangles_fu_421_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (exitcond_fu_820_p2 == 1'd1))) begin
        i_0_i_i_reg_350 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        i_0_i_i_reg_350 <= i_7_reg_1198;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_detect_fu_384_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
        i_i_reg_339 <= i_reg_1124;
    end else if (((1'b1 == ap_CS_fsm_state3) & ((tmp_103_i_fu_784_p2 == 1'd1) | (or_cond_i_fu_800_p2 == 1'd0) | (tmp_78_fu_731_p3 == 1'd1)))) begin
        i_i_reg_339 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) & (tmp_112_i_fu_988_p2 == 1'd1))) begin
        j_0_i_i_reg_373 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_state20) & (tmp_114_i_fu_1003_p2 == 1'd1))) begin
        j_0_i_i_reg_373 <= j_fu_1008_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        if ((tmp_78_fu_731_p3 == 1'd1)) begin
            levels_1_i_reg_304 <= levels_i_reg_293;
        end else if ((1'b1 == ap_condition_394)) begin
            levels_1_i_reg_304 <= levels_fu_739_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (or_cond_i_fu_800_p2 == 1'd1) & (tmp_103_i_fu_784_p2 == 1'd0) & (tmp_78_fu_731_p3 == 1'd0))) begin
        levels_i_reg_293 <= levels_fu_739_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        levels_i_reg_293 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_detect_fu_384_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
        p_Val2_14_reg_327 <= p_scale_V_reg_1149;
    end else if (((1'b1 == ap_CS_fsm_state3) & ((tmp_103_i_fu_784_p2 == 1'd1) | (or_cond_i_fu_800_p2 == 1'd0) | (tmp_78_fu_731_p3 == 1'd1)))) begin
        p_Val2_14_reg_327 <= 32'd65536;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (or_cond_i_fu_800_p2 == 1'd1) & (tmp_103_i_fu_784_p2 == 1'd0) & (tmp_78_fu_731_p3 == 1'd0))) begin
        p_i_reg_282 <= {{p_Val2_13_fu_805_p2[47:16]}};
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        p_i_reg_282 <= 32'd65536;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (exitcond_fu_820_p2 == 1'd1))) begin
        phi_mul_reg_361 <= 10'd0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        phi_mul_reg_361 <= next_mul_reg_1189;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_detect_fu_384_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
        rects_length_read_as_reg_315 <= grp_detect_fu_384_ap_return;
    end else if (((1'b1 == ap_CS_fsm_state3) & ((tmp_103_i_fu_784_p2 == 1'd1) | (or_cond_i_fu_800_p2 == 1'd0) | (tmp_78_fu_731_p3 == 1'd1)))) begin
        rects_length_read_as_reg_315 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_done_reg == 1'b1) | (locations_cols_out_full_n == 1'b0) | (locations_rows_out_full_n == 1'b0) | (neighbors_empty_n == 1'b0) | (p_scale0_empty_n == 1'b0) | (locations_cols_empty_n == 1'b0) | (locations_rows_empty_n == 1'b0) | (src_cols_empty_n == 1'b0) | (src_rows_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        F2_reg_1073 <= F2_fu_496_p2;
        cols_reg_1050 <= src_cols_dout;
        isneg_reg_1056 <= ireg_V_fu_456_p1[32'd63];
        locations_cols_read_reg_1034 <= locations_cols_dout;
        locations_rows_read_reg_1029 <= locations_rows_dout;
        neighbors_read_reg_1039 <= neighbors_dout;
        rows_reg_1044 <= src_rows_dout;
        tmp_74_reg_1062 <= tmp_74_fu_486_p1;
        tmp_85_i_reg_1067 <= tmp_85_i_fu_490_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        OP2_V_cast8_i_reg_1081 <= OP2_V_cast8_i_fu_707_p1;
        tmp_101_i_reg_1087[47 : 16] <= tmp_101_i_fu_711_p3[47 : 16];
        tmp_105_i_reg_1092[47 : 16] <= tmp_105_i_fu_718_p3[47 : 16];
        tmp_108_i_reg_1097 <= tmp_108_i_fu_725_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_Resize5_fu_434_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
        dst_cols_reg_1179 <= grp_Resize5_fu_434_ap_return_1;
        dst_rows_reg_1174 <= grp_Resize5_fu_434_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        i_7_reg_1198 <= i_7_fu_993_p2;
        next_mul_reg_1189 <= next_mul_fu_978_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        i_reg_1124 <= i_fu_826_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (exitcond_fu_820_p2 == 1'd0))) begin
        is_neg_reg_1134 <= p_Val2_14_reg_327[32'd31];
        p_scale_V_reg_1149 <= {{p_Val2_15_fu_892_p2[47:16]}};
        tmp32_V_1_reg_1139 <= tmp32_V_1_fu_878_p2;
        tmp_80_reg_1144 <= tmp_80_fu_884_p1;
        tmp_i_i_reg_1129 <= tmp_i_i_fu_832_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        iscale_reg_1169 <= grp_fu_444_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        p_03_i_i_i_reg_1164 <= p_03_i_i_i_fu_963_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (tmp_i_i_reg_1129 == 1'd0))) begin
        p_Result_i_i_reg_1159 <= {{tmp32_V_fu_907_p1[30:23]}};
        tmp32_V_reg_1154 <= tmp32_V_fu_907_p1;
    end
end

always @ (*) begin
    if (((grp_groupRectangles_fu_421_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state22))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_groupRectangles_fu_421_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state22))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        dst_val_address0 = grp_Resize5_fu_434_dst_val_address0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        dst_val_address0 = grp_detect_fu_384_src_val_address0;
    end else begin
        dst_val_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        dst_val_ce0 = grp_Resize5_fu_434_dst_val_ce0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        dst_val_ce0 = grp_detect_fu_384_src_val_ce0;
    end else begin
        dst_val_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        dst_val_we0 = grp_Resize5_fu_434_dst_val_we0;
    end else begin
        dst_val_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        locations_cols_blk_n = locations_cols_empty_n;
    end else begin
        locations_cols_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        locations_cols_out_blk_n = locations_cols_out_full_n;
    end else begin
        locations_cols_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (locations_cols_out_full_n == 1'b0) | (locations_rows_out_full_n == 1'b0) | (neighbors_empty_n == 1'b0) | (p_scale0_empty_n == 1'b0) | (locations_cols_empty_n == 1'b0) | (locations_rows_empty_n == 1'b0) | (src_cols_empty_n == 1'b0) | (src_rows_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        locations_cols_out_write = 1'b1;
    end else begin
        locations_cols_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (locations_cols_out_full_n == 1'b0) | (locations_rows_out_full_n == 1'b0) | (neighbors_empty_n == 1'b0) | (p_scale0_empty_n == 1'b0) | (locations_cols_empty_n == 1'b0) | (locations_rows_empty_n == 1'b0) | (src_cols_empty_n == 1'b0) | (src_rows_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        locations_cols_read = 1'b1;
    end else begin
        locations_cols_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        locations_rows_blk_n = locations_rows_empty_n;
    end else begin
        locations_rows_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        locations_rows_out_blk_n = locations_rows_out_full_n;
    end else begin
        locations_rows_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (locations_cols_out_full_n == 1'b0) | (locations_rows_out_full_n == 1'b0) | (neighbors_empty_n == 1'b0) | (p_scale0_empty_n == 1'b0) | (locations_cols_empty_n == 1'b0) | (locations_rows_empty_n == 1'b0) | (src_cols_empty_n == 1'b0) | (src_rows_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        locations_rows_out_write = 1'b1;
    end else begin
        locations_rows_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (locations_cols_out_full_n == 1'b0) | (locations_rows_out_full_n == 1'b0) | (neighbors_empty_n == 1'b0) | (p_scale0_empty_n == 1'b0) | (locations_cols_empty_n == 1'b0) | (locations_rows_empty_n == 1'b0) | (src_cols_empty_n == 1'b0) | (src_rows_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        locations_rows_read = 1'b1;
    end else begin
        locations_rows_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        locations_val_address0 = tmp_22_cast_fu_1024_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        locations_val_address0 = grp_groupRectangles_fu_421_locations_val_address0;
    end else begin
        locations_val_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        locations_val_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        locations_val_ce0 = grp_groupRectangles_fu_421_locations_val_ce0;
    end else begin
        locations_val_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        locations_val_ce1 = grp_groupRectangles_fu_421_locations_val_ce1;
    end else begin
        locations_val_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        locations_val_d0 = 16'd0;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        locations_val_d0 = grp_groupRectangles_fu_421_locations_val_d0;
    end else begin
        locations_val_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) & (tmp_114_i_fu_1003_p2 == 1'd1))) begin
        locations_val_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        locations_val_we0 = grp_groupRectangles_fu_421_locations_val_we0;
    end else begin
        locations_val_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        locations_val_we1 = grp_groupRectangles_fu_421_locations_val_we1;
    end else begin
        locations_val_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        neighbors_blk_n = neighbors_empty_n;
    end else begin
        neighbors_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (locations_cols_out_full_n == 1'b0) | (locations_rows_out_full_n == 1'b0) | (neighbors_empty_n == 1'b0) | (p_scale0_empty_n == 1'b0) | (locations_cols_empty_n == 1'b0) | (locations_rows_empty_n == 1'b0) | (src_cols_empty_n == 1'b0) | (src_rows_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        neighbors_read = 1'b1;
    end else begin
        neighbors_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_scale0_blk_n = p_scale0_empty_n;
    end else begin
        p_scale0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (locations_cols_out_full_n == 1'b0) | (locations_rows_out_full_n == 1'b0) | (neighbors_empty_n == 1'b0) | (p_scale0_empty_n == 1'b0) | (locations_cols_empty_n == 1'b0) | (locations_rows_empty_n == 1'b0) | (src_cols_empty_n == 1'b0) | (src_rows_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_scale0_read = 1'b1;
    end else begin
        p_scale0_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        rects_val_height_address0 = grp_groupRectangles_fu_421_rects_val_height_address0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        rects_val_height_address0 = grp_detect_fu_384_rects_val_height_address0;
    end else begin
        rects_val_height_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        rects_val_height_ce0 = grp_groupRectangles_fu_421_rects_val_height_ce0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        rects_val_height_ce0 = grp_detect_fu_384_rects_val_height_ce0;
    end else begin
        rects_val_height_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        rects_val_height_we0 = grp_detect_fu_384_rects_val_height_we0;
    end else begin
        rects_val_height_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        rects_val_width_address0 = grp_groupRectangles_fu_421_rects_val_width_address0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        rects_val_width_address0 = grp_detect_fu_384_rects_val_width_address0;
    end else begin
        rects_val_width_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        rects_val_width_ce0 = grp_groupRectangles_fu_421_rects_val_width_ce0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        rects_val_width_ce0 = grp_detect_fu_384_rects_val_width_ce0;
    end else begin
        rects_val_width_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        rects_val_width_we0 = grp_detect_fu_384_rects_val_width_we0;
    end else begin
        rects_val_width_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        rects_val_x_address0 = grp_groupRectangles_fu_421_rects_val_x_address0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        rects_val_x_address0 = grp_detect_fu_384_rects_val_x_address0;
    end else begin
        rects_val_x_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        rects_val_x_ce0 = grp_groupRectangles_fu_421_rects_val_x_ce0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        rects_val_x_ce0 = grp_detect_fu_384_rects_val_x_ce0;
    end else begin
        rects_val_x_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        rects_val_x_we0 = grp_detect_fu_384_rects_val_x_we0;
    end else begin
        rects_val_x_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        rects_val_y_address0 = grp_groupRectangles_fu_421_rects_val_y_address0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        rects_val_y_address0 = grp_detect_fu_384_rects_val_y_address0;
    end else begin
        rects_val_y_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        rects_val_y_ce0 = grp_groupRectangles_fu_421_rects_val_y_ce0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        rects_val_y_ce0 = grp_detect_fu_384_rects_val_y_ce0;
    end else begin
        rects_val_y_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        rects_val_y_we0 = grp_detect_fu_384_rects_val_y_we0;
    end else begin
        rects_val_y_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        src_cols_blk_n = src_cols_empty_n;
    end else begin
        src_cols_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (locations_cols_out_full_n == 1'b0) | (locations_rows_out_full_n == 1'b0) | (neighbors_empty_n == 1'b0) | (p_scale0_empty_n == 1'b0) | (locations_cols_empty_n == 1'b0) | (locations_rows_empty_n == 1'b0) | (src_cols_empty_n == 1'b0) | (src_rows_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        src_cols_read = 1'b1;
    end else begin
        src_cols_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        src_rows_blk_n = src_rows_empty_n;
    end else begin
        src_rows_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (locations_cols_out_full_n == 1'b0) | (locations_rows_out_full_n == 1'b0) | (neighbors_empty_n == 1'b0) | (p_scale0_empty_n == 1'b0) | (locations_cols_empty_n == 1'b0) | (locations_rows_empty_n == 1'b0) | (src_cols_empty_n == 1'b0) | (src_rows_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        src_rows_read = 1'b1;
    end else begin
        src_rows_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (locations_cols_out_full_n == 1'b0) | (locations_rows_out_full_n == 1'b0) | (neighbors_empty_n == 1'b0) | (p_scale0_empty_n == 1'b0) | (locations_cols_empty_n == 1'b0) | (locations_rows_empty_n == 1'b0) | (src_cols_empty_n == 1'b0) | (src_rows_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & ((tmp_103_i_fu_784_p2 == 1'd1) | (or_cond_i_fu_800_p2 == 1'd0) | (tmp_78_fu_731_p3 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (exitcond_fu_820_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((grp_Resize5_fu_434_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            if (((grp_detect_fu_384_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state19 : begin
            if (((1'b1 == ap_CS_fsm_state19) & (tmp_112_i_fu_988_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state20 : begin
            if (((1'b1 == ap_CS_fsm_state20) & (tmp_114_i_fu_1003_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state22 : begin
            if (((grp_groupRectangles_fu_421_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_fu_496_p2 = (12'd1075 - tmp_i_fu_482_p1);

assign OP2_V_cast8_i_fu_707_p1 = scale0_V_fu_699_p3;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (locations_cols_out_full_n == 1'b0) | (locations_rows_out_full_n == 1'b0) | (neighbors_empty_n == 1'b0) | (p_scale0_empty_n == 1'b0) | (locations_cols_empty_n == 1'b0) | (locations_rows_empty_n == 1'b0) | (src_cols_empty_n == 1'b0) | (src_rows_empty_n == 1'b0) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_condition_394 = (((or_cond_i_fu_800_p2 == 1'd0) & (tmp_78_fu_731_p3 == 1'd0)) | ((tmp_103_i_fu_784_p2 == 1'd1) & (tmp_78_fu_731_p3 == 1'd0)));
end

assign exitcond_fu_820_p2 = ((i_i_reg_339 == levels_1_i_reg_304) ? 1'b1 : 1'b0);

assign exp_tmp_V_fu_472_p4 = {{ireg_V_fu_456_p1[62:52]}};

assign f_fu_959_p1 = p_Result_2_fu_948_p5;

assign grp_Resize5_fu_434_ap_start = grp_Resize5_fu_434_ap_start_reg;

assign grp_detect_fu_384_ap_start = grp_detect_fu_384_ap_start_reg;

assign grp_groupRectangles_fu_421_ap_start = grp_groupRectangles_fu_421_ap_start_reg;

assign i_0_i_cast_cast_i_fu_984_p1 = i_0_i_i_reg_350;

assign i_7_fu_993_p2 = (i_0_i_i_reg_350 + 3'd1);

assign i_fu_826_p2 = (i_i_reg_339 + 5'd1);

assign icmp_fu_578_p2 = ((tmp_76_fu_568_p4 == 7'd0) ? 1'b1 : 1'b0);

assign ireg_V_fu_456_p1 = d_assign_fu_452_p1;

assign is_neg_fu_838_p3 = p_Val2_14_reg_327[32'd31];

assign j_0_i_cast_cast_i_fu_999_p1 = j_0_i_i_reg_373;

assign j_fu_1008_p2 = (j_0_i_i_reg_373 + 7'd1);

assign levels_fu_739_p2 = (levels_i_reg_293 + 5'd1);

assign locations_cols_out_din = locations_cols_dout;

assign locations_rows_out_din = locations_rows_dout;

assign locations_val_address1 = grp_groupRectangles_fu_421_locations_val_address1;

assign locations_val_d1 = grp_groupRectangles_fu_421_locations_val_d1;

assign man_V_1_fu_513_p2 = (54'd0 - p_Result_s_fu_509_p1);

assign man_V_2_fu_519_p3 = ((isneg_reg_1056[0:0] === 1'b1) ? man_V_1_fu_513_p2 : p_Result_s_fu_509_p1);

assign next_mul_fu_978_p2 = (phi_mul_reg_361 + 10'd100);


always @ (p_Result_1_fu_860_p4) begin
    if (p_Result_1_fu_860_p4[0] == 1'b1) begin
        num_zeros_fu_870_p3 = 32'd0;
    end else if (p_Result_1_fu_860_p4[1] == 1'b1) begin
        num_zeros_fu_870_p3 = 32'd1;
    end else if (p_Result_1_fu_860_p4[2] == 1'b1) begin
        num_zeros_fu_870_p3 = 32'd2;
    end else if (p_Result_1_fu_860_p4[3] == 1'b1) begin
        num_zeros_fu_870_p3 = 32'd3;
    end else if (p_Result_1_fu_860_p4[4] == 1'b1) begin
        num_zeros_fu_870_p3 = 32'd4;
    end else if (p_Result_1_fu_860_p4[5] == 1'b1) begin
        num_zeros_fu_870_p3 = 32'd5;
    end else if (p_Result_1_fu_860_p4[6] == 1'b1) begin
        num_zeros_fu_870_p3 = 32'd6;
    end else if (p_Result_1_fu_860_p4[7] == 1'b1) begin
        num_zeros_fu_870_p3 = 32'd7;
    end else if (p_Result_1_fu_860_p4[8] == 1'b1) begin
        num_zeros_fu_870_p3 = 32'd8;
    end else if (p_Result_1_fu_860_p4[9] == 1'b1) begin
        num_zeros_fu_870_p3 = 32'd9;
    end else if (p_Result_1_fu_860_p4[10] == 1'b1) begin
        num_zeros_fu_870_p3 = 32'd10;
    end else if (p_Result_1_fu_860_p4[11] == 1'b1) begin
        num_zeros_fu_870_p3 = 32'd11;
    end else if (p_Result_1_fu_860_p4[12] == 1'b1) begin
        num_zeros_fu_870_p3 = 32'd12;
    end else if (p_Result_1_fu_860_p4[13] == 1'b1) begin
        num_zeros_fu_870_p3 = 32'd13;
    end else if (p_Result_1_fu_860_p4[14] == 1'b1) begin
        num_zeros_fu_870_p3 = 32'd14;
    end else if (p_Result_1_fu_860_p4[15] == 1'b1) begin
        num_zeros_fu_870_p3 = 32'd15;
    end else if (p_Result_1_fu_860_p4[16] == 1'b1) begin
        num_zeros_fu_870_p3 = 32'd16;
    end else if (p_Result_1_fu_860_p4[17] == 1'b1) begin
        num_zeros_fu_870_p3 = 32'd17;
    end else if (p_Result_1_fu_860_p4[18] == 1'b1) begin
        num_zeros_fu_870_p3 = 32'd18;
    end else if (p_Result_1_fu_860_p4[19] == 1'b1) begin
        num_zeros_fu_870_p3 = 32'd19;
    end else if (p_Result_1_fu_860_p4[20] == 1'b1) begin
        num_zeros_fu_870_p3 = 32'd20;
    end else if (p_Result_1_fu_860_p4[21] == 1'b1) begin
        num_zeros_fu_870_p3 = 32'd21;
    end else if (p_Result_1_fu_860_p4[22] == 1'b1) begin
        num_zeros_fu_870_p3 = 32'd22;
    end else if (p_Result_1_fu_860_p4[23] == 1'b1) begin
        num_zeros_fu_870_p3 = 32'd23;
    end else if (p_Result_1_fu_860_p4[24] == 1'b1) begin
        num_zeros_fu_870_p3 = 32'd24;
    end else if (p_Result_1_fu_860_p4[25] == 1'b1) begin
        num_zeros_fu_870_p3 = 32'd25;
    end else if (p_Result_1_fu_860_p4[26] == 1'b1) begin
        num_zeros_fu_870_p3 = 32'd26;
    end else if (p_Result_1_fu_860_p4[27] == 1'b1) begin
        num_zeros_fu_870_p3 = 32'd27;
    end else if (p_Result_1_fu_860_p4[28] == 1'b1) begin
        num_zeros_fu_870_p3 = 32'd28;
    end else if (p_Result_1_fu_860_p4[29] == 1'b1) begin
        num_zeros_fu_870_p3 = 32'd29;
    end else if (p_Result_1_fu_860_p4[30] == 1'b1) begin
        num_zeros_fu_870_p3 = 32'd30;
    end else if (p_Result_1_fu_860_p4[31] == 1'b1) begin
        num_zeros_fu_870_p3 = 32'd31;
    end else begin
        num_zeros_fu_870_p3 = 32'd32;
    end
end

assign or_cond_i_fu_800_p2 = (tmp_108_i_reg_1097 & rev_fu_794_p2);

assign p_023_i_fu_598_p3 = ((isneg_reg_1056[0:0] === 1'b1) ? 32'd4294967295 : 32'd0);

assign p_03_i_i_i_fu_963_p3 = ((tmp_i_i_reg_1129[0:0] === 1'b1) ? 32'd0 : f_fu_959_p1);

assign p_Repl2_12_trunc_i_fu_935_p2 = (tmp_53_i_i_fu_931_p1 + tmp_52_i_i_fu_926_p2);

integer ap_tvar_int_0;

always @ (p_Val2_16_fu_852_p3) begin
    for (ap_tvar_int_0 = 32 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 31 - 0) begin
            p_Result_1_fu_860_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_1_fu_860_p4[ap_tvar_int_0] = p_Val2_16_fu_852_p3[31 - ap_tvar_int_0];
        end
    end
end

assign p_Result_2_fu_948_p5 = {{tmp_54_i_i_fu_941_p3}, {tmp32_V_reg_1154[22:0]}};

assign p_Result_s_fu_509_p1 = tmp_i_82_fu_502_p3;

assign p_Val2_13_fu_805_p0 = p_i_reg_282;

assign p_Val2_13_fu_805_p1 = OP2_V_cast8_i_reg_1081;

assign p_Val2_13_fu_805_p2 = ($signed(p_Val2_13_fu_805_p0) * $signed(p_Val2_13_fu_805_p1));

assign p_Val2_15_fu_892_p0 = OP2_V_cast8_i_reg_1081;

assign p_Val2_15_fu_892_p1 = p_Val2_14_reg_327;

assign p_Val2_15_fu_892_p2 = ($signed(p_Val2_15_fu_892_p0) * $signed(p_Val2_15_fu_892_p1));

assign p_Val2_16_fu_852_p3 = ((is_neg_fu_838_p3[0:0] === 1'b1) ? tmp_i_i_83_fu_846_p2 : p_Val2_14_reg_327);

assign p_shl1_cast_i_fu_770_p1 = $signed(p_shl1_i_fu_762_p3);

assign p_shl1_i_fu_762_p3 = {{p_i_reg_282}, {2'd0}};

assign p_shl_cast_i_fu_758_p1 = $signed(p_shl_i_fu_750_p3);

assign p_shl_i_fu_750_p3 = {{p_i_reg_282}, {4'd0}};

assign r_V_cast_i_fu_780_p1 = $signed(r_V_fu_774_p2);

assign r_V_fu_774_p2 = ($signed(p_shl1_cast_i_fu_770_p1) + $signed(p_shl_cast_i_fu_758_p1));

assign rev_fu_794_p2 = (slt_fu_789_p2 ^ 1'd1);

assign scale0_V_fu_699_p3 = ((sel_tmp11_fu_693_p2[0:0] === 1'b1) ? tmp_98_i_fu_605_p2 : sel_tmp5_fu_673_p3);

assign sel_tmp10_fu_687_p2 = (sel_tmp21_demorgan_fu_681_p2 ^ 1'd1);

assign sel_tmp11_fu_693_p2 = (sel_tmp10_fu_687_p2 & icmp_fu_578_p2);

assign sel_tmp1_fu_611_p2 = (tmp_85_i_reg_1067 ^ 1'd1);

assign sel_tmp21_demorgan_fu_681_p2 = (tmp_87_i_fu_526_p2 | sel_tmp6_demorgan_fu_630_p2);

assign sel_tmp2_fu_616_p2 = (tmp_90_i_fu_553_p2 & sel_tmp1_fu_611_p2);

assign sel_tmp3_fu_622_p3 = ((sel_tmp2_fu_616_p2[0:0] === 1'b1) ? tmp_75_fu_558_p1 : 32'd0);

assign sel_tmp4_fu_667_p2 = (tmp_92_i_fu_562_p2 & sel_tmp7_fu_641_p2);

assign sel_tmp5_fu_673_p3 = ((sel_tmp4_fu_667_p2[0:0] === 1'b1) ? tmp_77_fu_594_p1 : sel_tmp_fu_659_p3);

assign sel_tmp6_demorgan_fu_630_p2 = (tmp_90_i_fu_553_p2 | tmp_85_i_reg_1067);

assign sel_tmp6_fu_635_p2 = (sel_tmp6_demorgan_fu_630_p2 ^ 1'd1);

assign sel_tmp7_fu_641_p2 = (tmp_87_i_fu_526_p2 & sel_tmp6_fu_635_p2);

assign sel_tmp8_fu_647_p2 = (tmp_92_i_fu_562_p2 ^ 1'd1);

assign sel_tmp9_fu_653_p2 = (sel_tmp8_fu_647_p2 & sel_tmp7_fu_641_p2);

assign sel_tmp_fu_659_p3 = ((sel_tmp9_fu_653_p2[0:0] === 1'b1) ? p_023_i_fu_598_p3 : sel_tmp3_fu_622_p3);

assign sh_amt_cast_i_fu_549_p1 = sh_amt_fu_541_p3;

assign sh_amt_fu_541_p3 = ((tmp_87_i_fu_526_p2[0:0] === 1'b1) ? tmp_88_i_fu_531_p2 : tmp_89_i_fu_536_p2);

assign slt_fu_789_p2 = (($signed(tmp_105_i_reg_1092) < $signed(r_V_cast_i_fu_780_p1)) ? 1'b1 : 1'b0);

assign src_val_address0 = grp_Resize5_fu_434_src_val_address0;

assign src_val_ce0 = grp_Resize5_fu_434_src_val_ce0;

assign tmp32_V_1_fu_878_p2 = p_Val2_16_fu_852_p3 << num_zeros_fu_870_p3;

assign tmp32_V_fu_907_p1 = grp_fu_449_p1;

assign tmp_101_i_fu_711_p3 = {{rows_reg_1044}, {16'd0}};

assign tmp_103_i_fu_784_p2 = (($signed(r_V_cast_i_fu_780_p1) > $signed(tmp_101_i_reg_1087)) ? 1'b1 : 1'b0);

assign tmp_105_i_fu_718_p3 = {{cols_reg_1050}, {16'd0}};

assign tmp_108_i_fu_725_p2 = (($signed(scale0_V_fu_699_p3) > $signed(32'd65536)) ? 1'b1 : 1'b0);

assign tmp_112_i_fu_988_p2 = (($signed(i_0_i_cast_cast_i_fu_984_p1) < $signed(locations_rows_read_reg_1029)) ? 1'b1 : 1'b0);

assign tmp_114_i_fu_1003_p2 = (($signed(j_0_i_cast_cast_i_fu_999_p1) < $signed(locations_cols_read_reg_1034)) ? 1'b1 : 1'b0);

assign tmp_115_i_cast_fu_1014_p1 = j_0_i_i_reg_373;

assign tmp_22_cast_fu_1024_p1 = tmp_22_fu_1018_p2;

assign tmp_22_fu_1018_p2 = (phi_mul_reg_361 + tmp_115_i_cast_fu_1014_p1);

assign tmp_52_i_i_fu_926_p2 = ($signed(8'd142) - $signed(tmp_80_reg_1144));

assign tmp_53_i_i_fu_931_p1 = tmp_83_i_i_fu_921_p2;

assign tmp_54_i_i_fu_941_p3 = {{is_neg_reg_1134}, {p_Repl2_12_trunc_i_fu_935_p2}};

assign tmp_74_fu_486_p1 = ireg_V_fu_456_p1[51:0];

assign tmp_75_fu_558_p1 = man_V_2_fu_519_p3[31:0];

assign tmp_76_fu_568_p4 = {{sh_amt_fu_541_p3[11:5]}};

assign tmp_77_fu_594_p1 = tmp_96_i_fu_588_p2[31:0];

assign tmp_78_fu_731_p3 = levels_i_reg_293[32'd4];

assign tmp_80_fu_884_p1 = num_zeros_fu_870_p3[7:0];

assign tmp_83_i_i_fu_921_p2 = ((p_Result_i_i_reg_1159 != 8'd158) ? 1'b1 : 1'b0);

assign tmp_85_i_fu_490_p2 = ((tmp_fu_460_p1 == 63'd0) ? 1'b1 : 1'b0);

assign tmp_87_i_fu_526_p2 = (($signed(F2_reg_1073) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign tmp_88_i_fu_531_p2 = ($signed(12'd4080) + $signed(F2_reg_1073));

assign tmp_89_i_fu_536_p2 = (12'd16 - F2_reg_1073);

assign tmp_90_i_fu_553_p2 = ((F2_reg_1073 == 12'd16) ? 1'b1 : 1'b0);

assign tmp_92_i_fu_562_p2 = ((sh_amt_fu_541_p3 < 12'd54) ? 1'b1 : 1'b0);

assign tmp_95_i_fu_584_p1 = $unsigned(sh_amt_cast_i_fu_549_p1);

assign tmp_96_i_fu_588_p2 = $signed(man_V_2_fu_519_p3) >>> tmp_95_i_fu_584_p1;

assign tmp_98_i_fu_605_p2 = tmp_75_fu_558_p1 << sh_amt_cast_i_fu_549_p1;

assign tmp_fu_460_p1 = ireg_V_fu_456_p1[62:0];

assign tmp_i_82_fu_502_p3 = {{1'd1}, {tmp_74_reg_1062}};

assign tmp_i_fu_482_p1 = exp_tmp_V_fu_472_p4;

assign tmp_i_i_83_fu_846_p2 = (32'd0 - p_Val2_14_reg_327);

assign tmp_i_i_fu_832_p2 = ((p_Val2_14_reg_327 == 32'd0) ? 1'b1 : 1'b0);

always @ (posedge ap_clk) begin
    tmp_101_i_reg_1087[15:0] <= 16'b0000000000000000;
    tmp_105_i_reg_1092[15:0] <= 16'b0000000000000000;
end

endmodule //detectMultiScale
