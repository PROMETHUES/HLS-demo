// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module partition_1000_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        rects_val_x_address0,
        rects_val_x_ce0,
        rects_val_x_q0,
        rects_val_y_address0,
        rects_val_y_ce0,
        rects_val_y_q0,
        rects_val_width_address0,
        rects_val_width_ce0,
        rects_val_width_q0,
        rects_val_height_address0,
        rects_val_height_ce0,
        rects_val_height_q0,
        rects_length_read,
        labels_address0,
        labels_ce0,
        labels_we0,
        labels_d0,
        ap_return
);

parameter    ap_ST_fsm_state1 = 30'd1;
parameter    ap_ST_fsm_state2 = 30'd2;
parameter    ap_ST_fsm_state3 = 30'd4;
parameter    ap_ST_fsm_state4 = 30'd8;
parameter    ap_ST_fsm_state5 = 30'd16;
parameter    ap_ST_fsm_state6 = 30'd32;
parameter    ap_ST_fsm_state7 = 30'd64;
parameter    ap_ST_fsm_state8 = 30'd128;
parameter    ap_ST_fsm_state9 = 30'd256;
parameter    ap_ST_fsm_state10 = 30'd512;
parameter    ap_ST_fsm_state11 = 30'd1024;
parameter    ap_ST_fsm_state12 = 30'd2048;
parameter    ap_ST_fsm_state13 = 30'd4096;
parameter    ap_ST_fsm_state14 = 30'd8192;
parameter    ap_ST_fsm_state15 = 30'd16384;
parameter    ap_ST_fsm_state16 = 30'd32768;
parameter    ap_ST_fsm_state17 = 30'd65536;
parameter    ap_ST_fsm_state18 = 30'd131072;
parameter    ap_ST_fsm_state19 = 30'd262144;
parameter    ap_ST_fsm_state20 = 30'd524288;
parameter    ap_ST_fsm_state21 = 30'd1048576;
parameter    ap_ST_fsm_state22 = 30'd2097152;
parameter    ap_ST_fsm_state23 = 30'd4194304;
parameter    ap_ST_fsm_state24 = 30'd8388608;
parameter    ap_ST_fsm_state25 = 30'd16777216;
parameter    ap_ST_fsm_state26 = 30'd33554432;
parameter    ap_ST_fsm_state27 = 30'd67108864;
parameter    ap_ST_fsm_state28 = 30'd134217728;
parameter    ap_ST_fsm_state29 = 30'd268435456;
parameter    ap_ST_fsm_state30 = 30'd536870912;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] rects_val_x_address0;
output   rects_val_x_ce0;
input  [15:0] rects_val_x_q0;
output  [9:0] rects_val_y_address0;
output   rects_val_y_ce0;
input  [15:0] rects_val_y_q0;
output  [9:0] rects_val_width_address0;
output   rects_val_width_ce0;
input  [15:0] rects_val_width_q0;
output  [9:0] rects_val_height_address0;
output   rects_val_height_ce0;
input  [15:0] rects_val_height_q0;
input  [31:0] rects_length_read;
output  [9:0] labels_address0;
output   labels_ce0;
output   labels_we0;
output  [31:0] labels_d0;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[9:0] rects_val_x_address0;
reg rects_val_x_ce0;
reg[9:0] rects_val_y_address0;
reg rects_val_y_ce0;
reg[9:0] rects_val_width_address0;
reg rects_val_width_ce0;
reg[9:0] rects_val_height_address0;
reg rects_val_height_ce0;
reg labels_ce0;
reg labels_we0;

(* fsm_encoding = "none" *) reg   [29:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [31:0] nodes_0_q0;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state27;
wire   [31:0] grp_fu_448_p2;
reg   [31:0] reg_473;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state16;
wire   [30:0] i_1_fu_487_p2;
wire    ap_CS_fsm_state2;
wire   [31:0] tmp_20_fu_499_p2;
reg   [31:0] tmp_20_reg_1071;
wire    ap_CS_fsm_state3;
wire   [31:0] k_6_cast_fu_504_p1;
reg   [31:0] k_6_cast_reg_1076;
wire    ap_CS_fsm_state4;
wire   [30:0] i_2_fu_513_p2;
reg   [30:0] i_2_reg_1088;
wire    ap_CS_fsm_state5;
wire   [0:0] grp_fu_456_p3;
reg  signed [15:0] rects_val_width_load_1_reg_1128;
wire    ap_CS_fsm_state7;
reg  signed [15:0] rects_val_height_loa_reg_1133;
wire  signed [16:0] tmp_142_i_cast_fu_537_p1;
reg  signed [16:0] tmp_142_i_cast_reg_1138;
wire  signed [16:0] tmp_148_i_cast_fu_541_p1;
reg  signed [16:0] tmp_148_i_cast_reg_1143;
wire  signed [17:0] tmp_155_i_cast_fu_555_p1;
reg  signed [17:0] tmp_155_i_cast_reg_1148;
wire  signed [17:0] tmp_162_i_cast_fu_569_p1;
reg  signed [17:0] tmp_162_i_cast_reg_1153;
wire  signed [31:0] k_7_fu_573_p2;
reg  signed [31:0] k_7_reg_1158;
wire    ap_CS_fsm_state8;
wire   [0:0] exitcond_fu_579_p2;
reg  signed [15:0] rects_val_x_load_1_reg_1190;
wire    ap_CS_fsm_state9;
reg  signed [15:0] rects_val_y_load_1_reg_1196;
reg  signed [15:0] rects_val_width_load_2_reg_1202;
reg  signed [15:0] rects_val_height_loa_1_reg_1207;
wire   [16:0] tmp_138_i_fu_632_p2;
reg   [16:0] tmp_138_i_reg_1222;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire   [31:0] grp_fu_453_p1;
reg   [31:0] tmp_139_i_reg_1232;
wire    ap_CS_fsm_state12;
wire   [0:0] tmp_147_i_fu_825_p2;
reg   [0:0] tmp_147_i_reg_1237;
wire    ap_CS_fsm_state17;
wire   [0:0] tmp_152_i_fu_862_p2;
reg   [0:0] tmp_152_i_reg_1241;
wire   [0:0] tmp_159_i_fu_902_p2;
reg   [0:0] tmp_159_i_reg_1245;
wire   [0:0] tmp_166_i_fu_942_p2;
reg   [0:0] tmp_166_i_reg_1249;
wire  signed [63:0] tmp_30_fu_948_p1;
reg  signed [63:0] tmp_30_reg_1253;
wire    ap_CS_fsm_state18;
reg   [9:0] nodes_0_addr_3_reg_1258;
wire    ap_CS_fsm_state19;
wire   [0:0] tmp_31_fu_953_p2;
reg   [0:0] tmp_31_reg_1271;
wire  signed [63:0] tmp_32_fu_959_p1;
reg  signed [63:0] tmp_32_reg_1275;
reg   [9:0] nodes_1_addr_3_reg_1285;
reg   [9:0] nodes_0_addr_5_reg_1293;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state22;
reg   [9:0] nodes_0_addr_6_reg_1306;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state24;
wire   [31:0] root_3_cast_fu_997_p1;
wire    ap_CS_fsm_state25;
wire   [30:0] i_3_fu_1006_p2;
reg   [30:0] i_3_reg_1327;
wire  signed [63:0] tmp_25_fu_1012_p1;
reg  signed [63:0] tmp_25_reg_1332;
wire    ap_CS_fsm_state26;
reg   [9:0] nodes_1_addr_1_reg_1345;
reg   [9:0] nodes_0_address0;
reg    nodes_0_ce0;
reg    nodes_0_we0;
reg   [31:0] nodes_0_d0;
reg   [9:0] nodes_1_address0;
reg    nodes_1_ce0;
reg    nodes_1_we0;
wire   [31:0] nodes_1_q0;
reg   [9:0] nodes_1_address1;
reg    nodes_1_ce1;
reg    nodes_1_we1;
reg   [31:0] nodes_1_d1;
wire   [31:0] nodes_1_q1;
reg   [30:0] i_reg_306;
wire   [0:0] tmp_s_fu_482_p2;
reg   [30:0] k_6_reg_317;
reg  signed [31:0] root1_reg_329;
wire   [0:0] tmp_21_fu_508_p2;
reg   [31:0] j_0_in_reg_339;
reg  signed [31:0] root_1_reg_348;
reg   [31:0] ap_phi_mux_root_1_be_phi_fu_406_p12;
reg  signed [31:0] root_6_reg_360;
reg   [31:0] root_2_reg_371;
wire    ap_CS_fsm_state20;
wire   [0:0] tmp_33_fu_964_p2;
reg   [31:0] k_reg_384;
reg   [31:0] k_1_reg_393;
reg   [31:0] root_1_be_reg_402;
reg   [30:0] root_3_reg_427;
wire    ap_CS_fsm_state30;
reg   [31:0] root3_reg_439;
wire   [0:0] tmp_23_fu_1001_p2;
wire   [63:0] tmp_19_fu_493_p1;
wire  signed [63:0] tmp_22_fu_524_p1;
wire   [63:0] tmp_24_fu_529_p1;
wire  signed [63:0] tmp_26_fu_584_p1;
wire  signed [63:0] tmp_i_i_cast_fu_603_p1;
wire  signed [63:0] tmp_i2_i_cast_fu_619_p1;
wire  signed [63:0] tmp_37_fu_987_p1;
wire  signed [63:0] tmp_38_fu_992_p1;
wire   [63:0] tmp_29_fu_1050_p1;
reg   [31:0] nclasses_fu_90;
wire   [31:0] nclasses_1_fu_1025_p2;
wire    ap_CS_fsm_state28;
wire   [0:0] tmp_49_fu_1017_p3;
wire   [31:0] tmp_36_fu_980_p2;
wire   [31:0] tmp_27_fu_1031_p2;
wire    ap_CS_fsm_state29;
reg   [31:0] grp_fu_448_p0;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state15;
wire  signed [31:0] grp_fu_453_p0;
wire   [31:0] i_cast_fu_478_p1;
wire  signed [15:0] tmp_153_i_cast_fu_545_p0;
wire  signed [16:0] tmp_153_i_cast_fu_545_p1;
wire   [16:0] tmp_155_i_fu_549_p2;
wire  signed [15:0] tmp_160_i_cast_fu_559_p0;
wire  signed [16:0] tmp_160_i_cast_fu_559_p1;
wire   [16:0] tmp_162_i_fu_563_p2;
wire  signed [15:0] tmp_i_i_fu_592_p1;
wire   [0:0] tmp_i_i_fu_592_p2;
wire   [31:0] tmp_i_i_81_fu_597_p3;
wire  signed [15:0] tmp_i1_i_fu_608_p1;
wire   [0:0] tmp_i1_i_fu_608_p2;
wire   [31:0] tmp_i2_i_fu_613_p3;
wire  signed [16:0] tmp_i_cast_fu_624_p1;
wire  signed [16:0] tmp_137_i_cast_fu_628_p1;
wire   [31:0] p_Val2_1_fu_642_p1;
wire   [22:0] loc_V_1_fu_664_p1;
wire   [24:0] tmp_230_i_i_i_i_fu_668_p4;
wire   [7:0] loc_V_fu_654_p4;
wire   [8:0] tmp_i_i_i_i_i_cast_fu_682_p1;
wire   [8:0] sh_assign_fu_686_p2;
wire   [7:0] tmp_231_i_i_i_i_fu_700_p2;
wire   [0:0] isNeg_fu_692_p3;
wire  signed [8:0] tmp_231_i_i_i_i_cast_fu_706_p1;
wire  signed [8:0] sh_assign_1_fu_710_p3;
wire  signed [31:0] sh_assign_1_i_i_i_i_s_fu_718_p1;
wire  signed [24:0] sh_assign_1_i_i_i_i_1_fu_722_p1;
wire   [62:0] tmp_230_i_i_i_i_cast_fu_678_p1;
wire   [62:0] tmp_232_i_i_i_i_fu_726_p1;
wire   [24:0] tmp_233_i_i_i_i_fu_730_p2;
wire   [0:0] tmp_48_fu_742_p3;
wire   [62:0] tmp_234_i_i_i_i_fu_736_p2;
wire   [15:0] tmp_2_fu_750_p1;
wire   [15:0] tmp_3_fu_754_p4;
wire   [15:0] p_Val2_3_fu_764_p3;
wire   [0:0] p_Result_s_fu_646_p3;
wire   [15:0] p_Val2_i_i_i_i_fu_772_p2;
wire  signed [16:0] tmp_143_i_cast_fu_789_p1;
wire   [16:0] x_assign_3_fu_792_p2;
wire   [0:0] abscond_i_i_fu_803_p2;
wire   [16:0] neg_i_i_fu_797_p2;
wire  signed [15:0] p_Val2_s_fu_778_p3;
wire   [16:0] abs_i_i_fu_809_p3;
wire  signed [16:0] tmp_146_i_cast_fu_821_p1;
wire  signed [16:0] tmp_149_i_cast_fu_834_p1;
wire   [16:0] x_assign_4_fu_837_p2;
wire   [0:0] abscond_i4_i_fu_848_p2;
wire   [16:0] neg_i3_i_fu_842_p2;
wire   [16:0] abs_i5_i_fu_854_p3;
wire  signed [17:0] tmp_143_i_cast5_fu_786_p1;
wire   [17:0] tmp_156_i_fu_871_p2;
wire  signed [17:0] tmp_154_i_cast_fu_868_p1;
wire   [17:0] x_assign_5_fu_876_p2;
wire   [0:0] abscond_i7_i_fu_888_p2;
wire   [17:0] neg_i6_i_fu_882_p2;
wire   [17:0] abs_i8_i_fu_894_p3;
wire  signed [17:0] tmp_146_i_cast4_fu_817_p1;
wire  signed [17:0] tmp_149_i_cast3_fu_831_p1;
wire   [17:0] tmp_163_i_fu_911_p2;
wire  signed [17:0] tmp_161_i_cast_fu_908_p1;
wire   [17:0] x_assign_6_fu_916_p2;
wire   [0:0] abscond_i10_i_fu_928_p2;
wire   [17:0] neg_i9_i_fu_922_p2;
wire   [17:0] abs_i11_i_fu_934_p3;
wire   [0:0] tmp_34_fu_970_p2;
wire   [31:0] tmp_35_fu_976_p1;
reg   [29:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 30'd1;
end

partition_1000_s_9j0 #(
    .DataWidth( 32 ),
    .AddressRange( 1000 ),
    .AddressWidth( 10 ))
nodes_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(nodes_0_address0),
    .ce0(nodes_0_ce0),
    .we0(nodes_0_we0),
    .d0(nodes_0_d0),
    .q0(nodes_0_q0)
);

partition_1000_s_bak #(
    .DataWidth( 32 ),
    .AddressRange( 1000 ),
    .AddressWidth( 10 ))
nodes_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(nodes_1_address0),
    .ce0(nodes_1_ce0),
    .we0(nodes_1_we0),
    .d0(32'd0),
    .q0(nodes_1_q0),
    .address1(nodes_1_address1),
    .ce1(nodes_1_ce1),
    .we1(nodes_1_we1),
    .d1(nodes_1_d1),
    .q1(nodes_1_q1)
);

Haar_Core_fmul_32cud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Haar_Core_fmul_32cud_U548(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_448_p0),
    .din1(32'd1056964608),
    .ce(1'b1),
    .dout(grp_fu_448_p2)
);

Haar_Core_sitofp_bbk #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Haar_Core_sitofp_bbk_U549(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_453_p0),
    .ce(1'b1),
    .dout(grp_fu_453_p1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_s_fu_482_p2 == 1'd1))) begin
        i_reg_306 <= i_1_fu_487_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_306 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state24) & ((tmp_31_reg_1271 == 1'd1) | (tmp_166_i_reg_1249 == 1'd1) | (tmp_159_i_reg_1245 == 1'd1) | (tmp_152_i_reg_1241 == 1'd1) | (tmp_147_i_reg_1237 == 1'd1) | (grp_fu_456_p3 == 1'd1)))) begin
        j_0_in_reg_339 <= k_7_reg_1158;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        j_0_in_reg_339 <= k_6_cast_reg_1076;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state22) & (grp_fu_456_p3 == 1'd1))) begin
        k_1_reg_393 <= k_6_cast_reg_1076;
    end else if (((1'b1 == ap_CS_fsm_state24) & (tmp_31_reg_1271 == 1'd0) & (tmp_166_i_reg_1249 == 1'd0) & (tmp_159_i_reg_1245 == 1'd0) & (tmp_152_i_reg_1241 == 1'd0) & (tmp_147_i_reg_1237 == 1'd0) & (grp_fu_456_p3 == 1'd0))) begin
        k_1_reg_393 <= nodes_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (exitcond_fu_579_p2 == 1'd1))) begin
        k_6_reg_317 <= i_2_reg_1088;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        k_6_reg_317 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        k_reg_384 <= k_7_reg_1158;
    end else if (((1'b1 == ap_CS_fsm_state22) & (grp_fu_456_p3 == 1'd0))) begin
        k_reg_384 <= nodes_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state28) & (tmp_49_fu_1017_p3 == 1'd0))) begin
        nclasses_fu_90 <= nclasses_1_fu_1025_p2;
    end else if (((1'b1 == ap_CS_fsm_state4) & (tmp_21_fu_508_p2 == 1'd0))) begin
        nclasses_fu_90 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (tmp_21_fu_508_p2 == 1'd1))) begin
        root1_reg_329 <= k_6_cast_fu_504_p1;
    end else if (((1'b1 == ap_CS_fsm_state6) & (grp_fu_456_p3 == 1'd0))) begin
        root1_reg_329 <= nodes_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state25) & (tmp_23_fu_1001_p2 == 1'd1))) begin
        root3_reg_439 <= root_3_cast_fu_997_p1;
    end else if (((1'b1 == ap_CS_fsm_state27) & (grp_fu_456_p3 == 1'd0))) begin
        root3_reg_439 <= nodes_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state24) & (tmp_31_reg_1271 == 1'd0) & (tmp_166_i_reg_1249 == 1'd0) & (tmp_159_i_reg_1245 == 1'd0) & (tmp_152_i_reg_1241 == 1'd0) & (tmp_147_i_reg_1237 == 1'd0) & (grp_fu_456_p3 == 1'd1))) begin
        root_1_be_reg_402 <= root_2_reg_371;
    end else if ((((1'b1 == ap_CS_fsm_state17) & (tmp_147_i_fu_825_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state17) & (tmp_147_i_fu_825_p2 == 1'd0) & (tmp_152_i_fu_862_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state17) & (tmp_152_i_fu_862_p2 == 1'd0) & (tmp_147_i_fu_825_p2 == 1'd0) & (tmp_159_i_fu_902_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state17) & (tmp_159_i_fu_902_p2 == 1'd0) & (tmp_152_i_fu_862_p2 == 1'd0) & (tmp_147_i_fu_825_p2 == 1'd0) & (tmp_166_i_fu_942_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state19) & (tmp_31_fu_953_p2 == 1'd1) & (grp_fu_456_p3 == 1'd1)))) begin
        root_1_be_reg_402 <= root_1_reg_348;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state24) & ((tmp_31_reg_1271 == 1'd1) | (tmp_166_i_reg_1249 == 1'd1) | (tmp_159_i_reg_1245 == 1'd1) | (tmp_152_i_reg_1241 == 1'd1) | (tmp_147_i_reg_1237 == 1'd1) | (grp_fu_456_p3 == 1'd1)))) begin
        root_1_reg_348 <= ap_phi_mux_root_1_be_phi_fu_406_p12;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        root_1_reg_348 <= root1_reg_329;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        if ((tmp_33_fu_964_p2 == 1'd0)) begin
            root_2_reg_371 <= root_6_reg_360;
        end else if ((tmp_33_fu_964_p2 == 1'd1)) begin
            root_2_reg_371 <= root_1_reg_348;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (tmp_21_fu_508_p2 == 1'd0))) begin
        root_3_reg_427 <= 31'd0;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        root_3_reg_427 <= i_3_reg_1327;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & (tmp_166_i_fu_942_p2 == 1'd0) & (tmp_159_i_fu_902_p2 == 1'd0) & (tmp_152_i_fu_862_p2 == 1'd0) & (tmp_147_i_fu_825_p2 == 1'd0))) begin
        root_6_reg_360 <= k_7_reg_1158;
    end else if (((1'b1 == ap_CS_fsm_state19) & (grp_fu_456_p3 == 1'd0))) begin
        root_6_reg_360 <= nodes_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        i_2_reg_1088 <= i_2_fu_513_p2;
        k_6_cast_reg_1076[30 : 0] <= k_6_cast_fu_504_p1[30 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        i_3_reg_1327 <= i_3_fu_1006_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        k_7_reg_1158 <= k_7_fu_573_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        nodes_0_addr_3_reg_1258 <= tmp_30_fu_948_p1;
        tmp_30_reg_1253 <= tmp_30_fu_948_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        nodes_0_addr_5_reg_1293 <= tmp_37_fu_987_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        nodes_0_addr_6_reg_1306 <= tmp_38_fu_992_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state27) & (grp_fu_456_p3 == 1'd1))) begin
        nodes_1_addr_1_reg_1345 <= tmp_25_reg_1332;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) & (tmp_31_fu_953_p2 == 1'd0) & (grp_fu_456_p3 == 1'd1))) begin
        nodes_1_addr_3_reg_1285 <= tmp_30_reg_1253;
        tmp_32_reg_1275 <= tmp_32_fu_959_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        rects_val_height_loa_1_reg_1207 <= rects_val_height_q0;
        rects_val_width_load_2_reg_1202 <= rects_val_width_q0;
        rects_val_x_load_1_reg_1190 <= rects_val_x_q0;
        rects_val_y_load_1_reg_1196 <= rects_val_y_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        rects_val_height_loa_reg_1133 <= rects_val_height_q0;
        rects_val_width_load_1_reg_1128 <= rects_val_width_q0;
        tmp_142_i_cast_reg_1138 <= tmp_142_i_cast_fu_537_p1;
        tmp_148_i_cast_reg_1143 <= tmp_148_i_cast_fu_541_p1;
        tmp_155_i_cast_reg_1148 <= tmp_155_i_cast_fu_555_p1;
        tmp_162_i_cast_reg_1153 <= tmp_162_i_cast_fu_569_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state14))) begin
        reg_473 <= grp_fu_448_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        tmp_138_i_reg_1222 <= tmp_138_i_fu_632_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        tmp_139_i_reg_1232 <= grp_fu_453_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        tmp_147_i_reg_1237 <= tmp_147_i_fu_825_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & (tmp_147_i_fu_825_p2 == 1'd0))) begin
        tmp_152_i_reg_1241 <= tmp_152_i_fu_862_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & (tmp_152_i_fu_862_p2 == 1'd0) & (tmp_147_i_fu_825_p2 == 1'd0))) begin
        tmp_159_i_reg_1245 <= tmp_159_i_fu_902_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & (tmp_159_i_fu_902_p2 == 1'd0) & (tmp_152_i_fu_862_p2 == 1'd0) & (tmp_147_i_fu_825_p2 == 1'd0))) begin
        tmp_166_i_reg_1249 <= tmp_166_i_fu_942_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        tmp_20_reg_1071 <= tmp_20_fu_499_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        tmp_25_reg_1332 <= tmp_25_fu_1012_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) & (grp_fu_456_p3 == 1'd1))) begin
        tmp_31_reg_1271 <= tmp_31_fu_953_p2;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state25) & (tmp_23_fu_1001_p2 == 1'd0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) & (tmp_31_reg_1271 == 1'd0) & (tmp_166_i_reg_1249 == 1'd0) & (tmp_159_i_reg_1245 == 1'd0) & (tmp_152_i_reg_1241 == 1'd0) & (tmp_147_i_reg_1237 == 1'd0) & (grp_fu_456_p3 == 1'd1))) begin
        ap_phi_mux_root_1_be_phi_fu_406_p12 = root_2_reg_371;
    end else begin
        ap_phi_mux_root_1_be_phi_fu_406_p12 = root_1_be_reg_402;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state25) & (tmp_23_fu_1001_p2 == 1'd0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_448_p0 = reg_473;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_448_p0 = tmp_139_i_reg_1232;
    end else begin
        grp_fu_448_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        labels_ce0 = 1'b1;
    end else begin
        labels_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        labels_we0 = 1'b1;
    end else begin
        labels_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        nodes_0_address0 = tmp_25_fu_1012_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        nodes_0_address0 = nodes_0_addr_6_reg_1306;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        nodes_0_address0 = tmp_38_fu_992_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        nodes_0_address0 = nodes_0_addr_5_reg_1293;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        nodes_0_address0 = tmp_37_fu_987_p1;
    end else if (((1'b1 == ap_CS_fsm_state20) & (tmp_33_fu_964_p2 == 1'd1))) begin
        nodes_0_address0 = nodes_0_addr_3_reg_1258;
    end else if (((1'b1 == ap_CS_fsm_state20) & (tmp_33_fu_964_p2 == 1'd0))) begin
        nodes_0_address0 = tmp_32_reg_1275;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        nodes_0_address0 = tmp_30_fu_948_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        nodes_0_address0 = tmp_22_fu_524_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        nodes_0_address0 = tmp_19_fu_493_p1;
    end else begin
        nodes_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state20) & (tmp_33_fu_964_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state20) & (tmp_33_fu_964_p2 == 1'd1)))) begin
        nodes_0_ce0 = 1'b1;
    end else begin
        nodes_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state22))) begin
        nodes_0_d0 = root_2_reg_371;
    end else if (((1'b1 == ap_CS_fsm_state20) & (tmp_33_fu_964_p2 == 1'd1))) begin
        nodes_0_d0 = root_1_reg_348;
    end else if (((1'b1 == ap_CS_fsm_state20) & (tmp_33_fu_964_p2 == 1'd0))) begin
        nodes_0_d0 = root_6_reg_360;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        nodes_0_d0 = 32'd4294967295;
    end else begin
        nodes_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state20) & (tmp_33_fu_964_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state20) & (tmp_33_fu_964_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state24) & (tmp_31_reg_1271 == 1'd0) & (tmp_166_i_reg_1249 == 1'd0) & (tmp_159_i_reg_1245 == 1'd0) & (tmp_152_i_reg_1241 == 1'd0) & (tmp_147_i_reg_1237 == 1'd0) & (grp_fu_456_p3 == 1'd0)) | ((1'b1 == ap_CS_fsm_state22) & (grp_fu_456_p3 == 1'd0)) | ((1'b1 == ap_CS_fsm_state2) & (tmp_s_fu_482_p2 == 1'd1)))) begin
        nodes_0_we0 = 1'b1;
    end else begin
        nodes_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        nodes_1_address0 = nodes_1_addr_1_reg_1345;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        nodes_1_address0 = tmp_25_reg_1332;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        nodes_1_address0 = tmp_32_fu_959_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        nodes_1_address0 = tmp_19_fu_493_p1;
    end else begin
        nodes_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        nodes_1_address1 = nodes_1_addr_1_reg_1345;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        nodes_1_address1 = nodes_1_addr_3_reg_1285;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        nodes_1_address1 = tmp_30_reg_1253;
    end else begin
        nodes_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state2))) begin
        nodes_1_ce0 = 1'b1;
    end else begin
        nodes_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19))) begin
        nodes_1_ce1 = 1'b1;
    end else begin
        nodes_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        nodes_1_d1 = tmp_27_fu_1031_p2;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        nodes_1_d1 = tmp_36_fu_980_p2;
    end else begin
        nodes_1_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_s_fu_482_p2 == 1'd1))) begin
        nodes_1_we0 = 1'b1;
    end else begin
        nodes_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state28) & (tmp_49_fu_1017_p3 == 1'd0)) | ((1'b1 == ap_CS_fsm_state20) & (tmp_33_fu_964_p2 == 1'd0)))) begin
        nodes_1_we1 = 1'b1;
    end else begin
        nodes_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        rects_val_height_address0 = tmp_i2_i_cast_fu_619_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        rects_val_height_address0 = tmp_26_fu_584_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        rects_val_height_address0 = tmp_24_fu_529_p1;
    end else begin
        rects_val_height_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        rects_val_height_ce0 = 1'b1;
    end else begin
        rects_val_height_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        rects_val_width_address0 = tmp_i_i_cast_fu_603_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        rects_val_width_address0 = tmp_26_fu_584_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        rects_val_width_address0 = tmp_24_fu_529_p1;
    end else begin
        rects_val_width_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        rects_val_width_ce0 = 1'b1;
    end else begin
        rects_val_width_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        rects_val_x_address0 = tmp_26_fu_584_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        rects_val_x_address0 = tmp_24_fu_529_p1;
    end else begin
        rects_val_x_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state8))) begin
        rects_val_x_ce0 = 1'b1;
    end else begin
        rects_val_x_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        rects_val_y_address0 = tmp_26_fu_584_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        rects_val_y_address0 = tmp_24_fu_529_p1;
    end else begin
        rects_val_y_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state8))) begin
        rects_val_y_ce0 = 1'b1;
    end else begin
        rects_val_y_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (tmp_s_fu_482_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (tmp_21_fu_508_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (grp_fu_456_p3 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (exitcond_fu_579_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            if (((1'b1 == ap_CS_fsm_state17) & (tmp_166_i_fu_942_p2 == 1'd0) & (tmp_159_i_fu_902_p2 == 1'd0) & (tmp_152_i_fu_862_p2 == 1'd0) & (tmp_147_i_fu_825_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            if (((1'b1 == ap_CS_fsm_state19) & (tmp_31_fu_953_p2 == 1'd1) & (grp_fu_456_p3 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else if (((1'b1 == ap_CS_fsm_state19) & (tmp_31_fu_953_p2 == 1'd0) & (grp_fu_456_p3 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            if (((1'b1 == ap_CS_fsm_state22) & (grp_fu_456_p3 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            if (((1'b1 == ap_CS_fsm_state24) & ((tmp_31_reg_1271 == 1'd1) | (tmp_166_i_reg_1249 == 1'd1) | (tmp_159_i_reg_1245 == 1'd1) | (tmp_152_i_reg_1241 == 1'd1) | (tmp_147_i_reg_1237 == 1'd1) | (grp_fu_456_p3 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state25 : begin
            if (((1'b1 == ap_CS_fsm_state25) & (tmp_23_fu_1001_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            if (((1'b1 == ap_CS_fsm_state27) & (grp_fu_456_p3 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign abs_i11_i_fu_934_p3 = ((abscond_i10_i_fu_928_p2[0:0] === 1'b1) ? x_assign_6_fu_916_p2 : neg_i9_i_fu_922_p2);

assign abs_i5_i_fu_854_p3 = ((abscond_i4_i_fu_848_p2[0:0] === 1'b1) ? x_assign_4_fu_837_p2 : neg_i3_i_fu_842_p2);

assign abs_i8_i_fu_894_p3 = ((abscond_i7_i_fu_888_p2[0:0] === 1'b1) ? x_assign_5_fu_876_p2 : neg_i6_i_fu_882_p2);

assign abs_i_i_fu_809_p3 = ((abscond_i_i_fu_803_p2[0:0] === 1'b1) ? x_assign_3_fu_792_p2 : neg_i_i_fu_797_p2);

assign abscond_i10_i_fu_928_p2 = (($signed(x_assign_6_fu_916_p2) > $signed(18'd0)) ? 1'b1 : 1'b0);

assign abscond_i4_i_fu_848_p2 = (($signed(x_assign_4_fu_837_p2) > $signed(17'd0)) ? 1'b1 : 1'b0);

assign abscond_i7_i_fu_888_p2 = (($signed(x_assign_5_fu_876_p2) > $signed(18'd0)) ? 1'b1 : 1'b0);

assign abscond_i_i_fu_803_p2 = (($signed(x_assign_3_fu_792_p2) > $signed(17'd0)) ? 1'b1 : 1'b0);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_return = nclasses_fu_90;

assign exitcond_fu_579_p2 = ((j_0_in_reg_339 == tmp_20_reg_1071) ? 1'b1 : 1'b0);

assign grp_fu_453_p0 = $signed(tmp_138_i_reg_1222);

assign grp_fu_456_p3 = nodes_0_q0[32'd31];

assign i_1_fu_487_p2 = (i_reg_306 + 31'd1);

assign i_2_fu_513_p2 = (k_6_reg_317 + 31'd1);

assign i_3_fu_1006_p2 = (root_3_reg_427 + 31'd1);

assign i_cast_fu_478_p1 = i_reg_306;

assign isNeg_fu_692_p3 = sh_assign_fu_686_p2[32'd8];

assign k_6_cast_fu_504_p1 = k_6_reg_317;

assign k_7_fu_573_p2 = (j_0_in_reg_339 + 32'd1);

assign labels_address0 = tmp_29_fu_1050_p1;

assign labels_d0 = (nodes_1_q0 ^ 32'd4294967295);

assign loc_V_1_fu_664_p1 = p_Val2_1_fu_642_p1[22:0];

assign loc_V_fu_654_p4 = {{p_Val2_1_fu_642_p1[30:23]}};

assign nclasses_1_fu_1025_p2 = (nclasses_fu_90 + 32'd1);

assign neg_i3_i_fu_842_p2 = (17'd0 - x_assign_4_fu_837_p2);

assign neg_i6_i_fu_882_p2 = (18'd0 - x_assign_5_fu_876_p2);

assign neg_i9_i_fu_922_p2 = (18'd0 - x_assign_6_fu_916_p2);

assign neg_i_i_fu_797_p2 = (17'd0 - x_assign_3_fu_792_p2);

assign p_Result_s_fu_646_p3 = p_Val2_1_fu_642_p1[32'd31];

assign p_Val2_1_fu_642_p1 = reg_473;

assign p_Val2_3_fu_764_p3 = ((isNeg_fu_692_p3[0:0] === 1'b1) ? tmp_2_fu_750_p1 : tmp_3_fu_754_p4);

assign p_Val2_i_i_i_i_fu_772_p2 = (16'd0 - p_Val2_3_fu_764_p3);

assign p_Val2_s_fu_778_p3 = ((p_Result_s_fu_646_p3[0:0] === 1'b1) ? p_Val2_i_i_i_i_fu_772_p2 : p_Val2_3_fu_764_p3);

assign root_3_cast_fu_997_p1 = root_3_reg_427;

assign sh_assign_1_fu_710_p3 = ((isNeg_fu_692_p3[0:0] === 1'b1) ? tmp_231_i_i_i_i_cast_fu_706_p1 : sh_assign_fu_686_p2);

assign sh_assign_1_i_i_i_i_1_fu_722_p1 = sh_assign_1_fu_710_p3;

assign sh_assign_1_i_i_i_i_s_fu_718_p1 = sh_assign_1_fu_710_p3;

assign sh_assign_fu_686_p2 = ($signed(9'd385) + $signed(tmp_i_i_i_i_i_cast_fu_682_p1));

assign tmp_137_i_cast_fu_628_p1 = $signed(rects_val_height_q0);

assign tmp_138_i_fu_632_p2 = ($signed(tmp_i_cast_fu_624_p1) + $signed(tmp_137_i_cast_fu_628_p1));

assign tmp_142_i_cast_fu_537_p1 = $signed(rects_val_x_q0);

assign tmp_143_i_cast5_fu_786_p1 = rects_val_x_load_1_reg_1190;

assign tmp_143_i_cast_fu_789_p1 = rects_val_x_load_1_reg_1190;

assign tmp_146_i_cast4_fu_817_p1 = p_Val2_s_fu_778_p3;

assign tmp_146_i_cast_fu_821_p1 = p_Val2_s_fu_778_p3;

assign tmp_147_i_fu_825_p2 = (($signed(abs_i_i_fu_809_p3) > $signed(tmp_146_i_cast_fu_821_p1)) ? 1'b1 : 1'b0);

assign tmp_148_i_cast_fu_541_p1 = $signed(rects_val_y_q0);

assign tmp_149_i_cast3_fu_831_p1 = rects_val_y_load_1_reg_1196;

assign tmp_149_i_cast_fu_834_p1 = rects_val_y_load_1_reg_1196;

assign tmp_152_i_fu_862_p2 = (($signed(abs_i5_i_fu_854_p3) > $signed(tmp_146_i_cast_fu_821_p1)) ? 1'b1 : 1'b0);

assign tmp_153_i_cast_fu_545_p0 = rects_val_width_q0;

assign tmp_153_i_cast_fu_545_p1 = tmp_153_i_cast_fu_545_p0;

assign tmp_154_i_cast_fu_868_p1 = rects_val_width_load_2_reg_1202;

assign tmp_155_i_cast_fu_555_p1 = $signed(tmp_155_i_fu_549_p2);

assign tmp_155_i_fu_549_p2 = ($signed(tmp_153_i_cast_fu_545_p1) + $signed(tmp_142_i_cast_fu_537_p1));

assign tmp_156_i_fu_871_p2 = ($signed(tmp_155_i_cast_reg_1148) - $signed(tmp_143_i_cast5_fu_786_p1));

assign tmp_159_i_fu_902_p2 = (($signed(abs_i8_i_fu_894_p3) > $signed(tmp_146_i_cast4_fu_817_p1)) ? 1'b1 : 1'b0);

assign tmp_160_i_cast_fu_559_p0 = rects_val_height_q0;

assign tmp_160_i_cast_fu_559_p1 = tmp_160_i_cast_fu_559_p0;

assign tmp_161_i_cast_fu_908_p1 = rects_val_height_loa_1_reg_1207;

assign tmp_162_i_cast_fu_569_p1 = $signed(tmp_162_i_fu_563_p2);

assign tmp_162_i_fu_563_p2 = ($signed(tmp_160_i_cast_fu_559_p1) + $signed(tmp_148_i_cast_fu_541_p1));

assign tmp_163_i_fu_911_p2 = ($signed(tmp_162_i_cast_reg_1153) - $signed(tmp_149_i_cast3_fu_831_p1));

assign tmp_166_i_fu_942_p2 = (($signed(abs_i11_i_fu_934_p3) > $signed(tmp_146_i_cast4_fu_817_p1)) ? 1'b1 : 1'b0);

assign tmp_19_fu_493_p1 = i_reg_306;

assign tmp_20_fu_499_p2 = ($signed(rects_length_read) + $signed(32'd4294967295));

assign tmp_21_fu_508_p2 = (($signed(k_6_cast_fu_504_p1) < $signed(rects_length_read)) ? 1'b1 : 1'b0);

assign tmp_22_fu_524_p1 = root1_reg_329;

assign tmp_230_i_i_i_i_cast_fu_678_p1 = tmp_230_i_i_i_i_fu_668_p4;

assign tmp_230_i_i_i_i_fu_668_p4 = {{{{1'd1}, {loc_V_1_fu_664_p1}}}, {1'd0}};

assign tmp_231_i_i_i_i_cast_fu_706_p1 = $signed(tmp_231_i_i_i_i_fu_700_p2);

assign tmp_231_i_i_i_i_fu_700_p2 = (8'd127 - loc_V_fu_654_p4);

assign tmp_232_i_i_i_i_fu_726_p1 = $unsigned(sh_assign_1_i_i_i_i_s_fu_718_p1);

assign tmp_233_i_i_i_i_fu_730_p2 = tmp_230_i_i_i_i_fu_668_p4 >> sh_assign_1_i_i_i_i_1_fu_722_p1;

assign tmp_234_i_i_i_i_fu_736_p2 = tmp_230_i_i_i_i_cast_fu_678_p1 << tmp_232_i_i_i_i_fu_726_p1;

assign tmp_23_fu_1001_p2 = (($signed(root_3_cast_fu_997_p1) < $signed(rects_length_read)) ? 1'b1 : 1'b0);

assign tmp_24_fu_529_p1 = k_6_reg_317;

assign tmp_25_fu_1012_p1 = $signed(root3_reg_439);

assign tmp_26_fu_584_p1 = k_7_fu_573_p2;

assign tmp_27_fu_1031_p2 = (nclasses_fu_90 ^ 32'd4294967295);

assign tmp_29_fu_1050_p1 = root_3_reg_427;

assign tmp_2_fu_750_p1 = tmp_48_fu_742_p3;

assign tmp_30_fu_948_p1 = root_6_reg_360;

assign tmp_31_fu_953_p2 = ((root_6_reg_360 == root_1_reg_348) ? 1'b1 : 1'b0);

assign tmp_32_fu_959_p1 = root_1_reg_348;

assign tmp_33_fu_964_p2 = (($signed(nodes_1_q0) > $signed(nodes_1_q1)) ? 1'b1 : 1'b0);

assign tmp_34_fu_970_p2 = ((nodes_1_q0 == nodes_1_q1) ? 1'b1 : 1'b0);

assign tmp_35_fu_976_p1 = tmp_34_fu_970_p2;

assign tmp_36_fu_980_p2 = (nodes_1_q1 + tmp_35_fu_976_p1);

assign tmp_37_fu_987_p1 = $signed(k_reg_384);

assign tmp_38_fu_992_p1 = $signed(k_1_reg_393);

assign tmp_3_fu_754_p4 = {{tmp_234_i_i_i_i_fu_736_p2[39:24]}};

assign tmp_48_fu_742_p3 = tmp_233_i_i_i_i_fu_730_p2[32'd24];

assign tmp_49_fu_1017_p3 = nodes_1_q0[32'd31];

assign tmp_i1_i_fu_608_p1 = rects_val_height_q0;

assign tmp_i1_i_fu_608_p2 = (($signed(rects_val_height_loa_reg_1133) < $signed(tmp_i1_i_fu_608_p1)) ? 1'b1 : 1'b0);

assign tmp_i2_i_cast_fu_619_p1 = $signed(tmp_i2_i_fu_613_p3);

assign tmp_i2_i_fu_613_p3 = ((tmp_i1_i_fu_608_p2[0:0] === 1'b1) ? k_6_cast_reg_1076 : k_7_reg_1158);

assign tmp_i_cast_fu_624_p1 = $signed(rects_val_width_q0);

assign tmp_i_i_81_fu_597_p3 = ((tmp_i_i_fu_592_p2[0:0] === 1'b1) ? k_6_cast_reg_1076 : k_7_reg_1158);

assign tmp_i_i_cast_fu_603_p1 = $signed(tmp_i_i_81_fu_597_p3);

assign tmp_i_i_fu_592_p1 = rects_val_width_q0;

assign tmp_i_i_fu_592_p2 = (($signed(rects_val_width_load_1_reg_1128) < $signed(tmp_i_i_fu_592_p1)) ? 1'b1 : 1'b0);

assign tmp_i_i_i_i_i_cast_fu_682_p1 = loc_V_fu_654_p4;

assign tmp_s_fu_482_p2 = (($signed(i_cast_fu_478_p1) < $signed(rects_length_read)) ? 1'b1 : 1'b0);

assign x_assign_3_fu_792_p2 = ($signed(tmp_142_i_cast_reg_1138) - $signed(tmp_143_i_cast_fu_789_p1));

assign x_assign_4_fu_837_p2 = ($signed(tmp_148_i_cast_reg_1143) - $signed(tmp_149_i_cast_fu_834_p1));

assign x_assign_5_fu_876_p2 = ($signed(tmp_156_i_fu_871_p2) - $signed(tmp_154_i_cast_fu_868_p1));

assign x_assign_6_fu_916_p2 = ($signed(tmp_163_i_fu_911_p2) - $signed(tmp_161_i_cast_fu_908_p1));

always @ (posedge ap_clk) begin
    k_6_cast_reg_1076[31] <= 1'b0;
end

endmodule //partition_1000_s
