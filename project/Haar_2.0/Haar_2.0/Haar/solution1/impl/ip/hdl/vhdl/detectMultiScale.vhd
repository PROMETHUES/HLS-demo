-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity detectMultiScale is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    src_val_address0 : OUT STD_LOGIC_VECTOR (16 downto 0);
    src_val_ce0 : OUT STD_LOGIC;
    src_val_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    src_rows_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    src_rows_empty_n : IN STD_LOGIC;
    src_rows_read : OUT STD_LOGIC;
    src_cols_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    src_cols_empty_n : IN STD_LOGIC;
    src_cols_read : OUT STD_LOGIC;
    locations_val_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    locations_val_ce0 : OUT STD_LOGIC;
    locations_val_we0 : OUT STD_LOGIC;
    locations_val_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    locations_val_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    locations_val_ce1 : OUT STD_LOGIC;
    locations_val_we1 : OUT STD_LOGIC;
    locations_val_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    locations_rows_dout : IN STD_LOGIC_VECTOR (3 downto 0);
    locations_rows_empty_n : IN STD_LOGIC;
    locations_rows_read : OUT STD_LOGIC;
    locations_cols_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    locations_cols_empty_n : IN STD_LOGIC;
    locations_cols_read : OUT STD_LOGIC;
    p_scale0_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    p_scale0_empty_n : IN STD_LOGIC;
    p_scale0_read : OUT STD_LOGIC;
    neighbors_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    neighbors_empty_n : IN STD_LOGIC;
    neighbors_read : OUT STD_LOGIC;
    locations_rows_out_din : OUT STD_LOGIC_VECTOR (3 downto 0);
    locations_rows_out_full_n : IN STD_LOGIC;
    locations_rows_out_write : OUT STD_LOGIC;
    locations_cols_out_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    locations_cols_out_full_n : IN STD_LOGIC;
    locations_cols_out_write : OUT STD_LOGIC );
end;


architecture behav of detectMultiScale is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (21 downto 0) := "0000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (21 downto 0) := "0000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (21 downto 0) := "0000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (21 downto 0) := "0000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (21 downto 0) := "0000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (21 downto 0) := "0000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (21 downto 0) := "0001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (21 downto 0) := "0010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (21 downto 0) := "0100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (21 downto 0) := "1000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_10000 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000010000000000000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_3F800000 : STD_LOGIC_VECTOR (31 downto 0) := "00111111100000000000000000000000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_433 : STD_LOGIC_VECTOR (11 downto 0) := "010000110011";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_10 : STD_LOGIC_VECTOR (11 downto 0) := "000000010000";
    constant ap_const_lv12_FF0 : STD_LOGIC_VECTOR (11 downto 0) := "111111110000";
    constant ap_const_lv12_36 : STD_LOGIC_VECTOR (11 downto 0) := "000000110110";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_9E : STD_LOGIC_VECTOR (7 downto 0) := "10011110";
    constant ap_const_lv8_8E : STD_LOGIC_VECTOR (7 downto 0) := "10001110";
    constant ap_const_lv10_64 : STD_LOGIC_VECTOR (9 downto 0) := "0001100100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal src_rows_blk_n : STD_LOGIC;
    signal src_cols_blk_n : STD_LOGIC;
    signal locations_rows_blk_n : STD_LOGIC;
    signal locations_cols_blk_n : STD_LOGIC;
    signal p_scale0_blk_n : STD_LOGIC;
    signal neighbors_blk_n : STD_LOGIC;
    signal locations_rows_out_blk_n : STD_LOGIC;
    signal locations_cols_out_blk_n : STD_LOGIC;
    signal locations_rows_read_reg_1029 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal locations_cols_read_reg_1034 : STD_LOGIC_VECTOR (7 downto 0);
    signal neighbors_read_reg_1039 : STD_LOGIC_VECTOR (31 downto 0);
    signal rows_reg_1044 : STD_LOGIC_VECTOR (31 downto 0);
    signal cols_reg_1050 : STD_LOGIC_VECTOR (31 downto 0);
    signal isneg_reg_1056 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_74_fu_486_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_74_reg_1062 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_85_i_fu_490_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_85_i_reg_1067 : STD_LOGIC_VECTOR (0 downto 0);
    signal F2_fu_496_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_reg_1073 : STD_LOGIC_VECTOR (11 downto 0);
    signal OP2_V_cast8_i_fu_707_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal OP2_V_cast8_i_reg_1081 : STD_LOGIC_VECTOR (47 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_101_i_fu_711_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_101_i_reg_1087 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_105_i_fu_718_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_105_i_reg_1092 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_108_i_fu_725_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_108_i_reg_1097 : STD_LOGIC_VECTOR (0 downto 0);
    signal levels_fu_739_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_78_fu_731_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_103_i_fu_784_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_fu_800_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_826_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_reg_1124 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal tmp_i_i_fu_832_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_reg_1129 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_fu_820_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal is_neg_fu_838_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal is_neg_reg_1134 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp32_V_1_fu_878_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_1_reg_1139 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_80_fu_884_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_80_reg_1144 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_scale_V_reg_1149 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_fu_907_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_reg_1154 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal p_Result_i_i_reg_1159 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_03_i_i_i_fu_963_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_03_i_i_i_reg_1164 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal grp_fu_444_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal iscale_reg_1169 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal dst_rows_reg_1174 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal grp_Resize5_fu_434_ap_idle : STD_LOGIC;
    signal grp_Resize5_fu_434_ap_ready : STD_LOGIC;
    signal grp_Resize5_fu_434_ap_done : STD_LOGIC;
    signal dst_cols_reg_1179 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_detect_fu_384_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal grp_detect_fu_384_ap_idle : STD_LOGIC;
    signal grp_detect_fu_384_ap_ready : STD_LOGIC;
    signal grp_detect_fu_384_ap_done : STD_LOGIC;
    signal next_mul_fu_978_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal next_mul_reg_1189 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal tmp_112_i_fu_988_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_7_fu_993_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_7_reg_1198 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_fu_1008_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal dst_val_address0 : STD_LOGIC_VECTOR (16 downto 0);
    signal dst_val_ce0 : STD_LOGIC;
    signal dst_val_we0 : STD_LOGIC;
    signal dst_val_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal rects_val_x_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal rects_val_x_ce0 : STD_LOGIC;
    signal rects_val_x_we0 : STD_LOGIC;
    signal rects_val_x_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal rects_val_y_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal rects_val_y_ce0 : STD_LOGIC;
    signal rects_val_y_we0 : STD_LOGIC;
    signal rects_val_y_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal rects_val_width_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal rects_val_width_ce0 : STD_LOGIC;
    signal rects_val_width_we0 : STD_LOGIC;
    signal rects_val_width_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal rects_val_height_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal rects_val_height_ce0 : STD_LOGIC;
    signal rects_val_height_we0 : STD_LOGIC;
    signal rects_val_height_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_detect_fu_384_ap_start : STD_LOGIC;
    signal grp_detect_fu_384_src_val_address0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_detect_fu_384_src_val_ce0 : STD_LOGIC;
    signal grp_detect_fu_384_rects_val_x_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_detect_fu_384_rects_val_x_ce0 : STD_LOGIC;
    signal grp_detect_fu_384_rects_val_x_we0 : STD_LOGIC;
    signal grp_detect_fu_384_rects_val_x_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_detect_fu_384_rects_val_y_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_detect_fu_384_rects_val_y_ce0 : STD_LOGIC;
    signal grp_detect_fu_384_rects_val_y_we0 : STD_LOGIC;
    signal grp_detect_fu_384_rects_val_y_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_detect_fu_384_rects_val_width_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_detect_fu_384_rects_val_width_ce0 : STD_LOGIC;
    signal grp_detect_fu_384_rects_val_width_we0 : STD_LOGIC;
    signal grp_detect_fu_384_rects_val_width_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_detect_fu_384_rects_val_height_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_detect_fu_384_rects_val_height_ce0 : STD_LOGIC;
    signal grp_detect_fu_384_rects_val_height_we0 : STD_LOGIC;
    signal grp_detect_fu_384_rects_val_height_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_groupRectangles_fu_421_ap_start : STD_LOGIC;
    signal grp_groupRectangles_fu_421_ap_done : STD_LOGIC;
    signal grp_groupRectangles_fu_421_ap_idle : STD_LOGIC;
    signal grp_groupRectangles_fu_421_ap_ready : STD_LOGIC;
    signal grp_groupRectangles_fu_421_rects_val_x_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_groupRectangles_fu_421_rects_val_x_ce0 : STD_LOGIC;
    signal grp_groupRectangles_fu_421_rects_val_y_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_groupRectangles_fu_421_rects_val_y_ce0 : STD_LOGIC;
    signal grp_groupRectangles_fu_421_rects_val_width_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_groupRectangles_fu_421_rects_val_width_ce0 : STD_LOGIC;
    signal grp_groupRectangles_fu_421_rects_val_height_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_groupRectangles_fu_421_rects_val_height_ce0 : STD_LOGIC;
    signal grp_groupRectangles_fu_421_locations_val_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_groupRectangles_fu_421_locations_val_ce0 : STD_LOGIC;
    signal grp_groupRectangles_fu_421_locations_val_we0 : STD_LOGIC;
    signal grp_groupRectangles_fu_421_locations_val_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_groupRectangles_fu_421_locations_val_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_groupRectangles_fu_421_locations_val_ce1 : STD_LOGIC;
    signal grp_groupRectangles_fu_421_locations_val_we1 : STD_LOGIC;
    signal grp_groupRectangles_fu_421_locations_val_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_Resize5_fu_434_ap_start : STD_LOGIC;
    signal grp_Resize5_fu_434_src_val_address0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_Resize5_fu_434_src_val_ce0 : STD_LOGIC;
    signal grp_Resize5_fu_434_dst_val_address0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_Resize5_fu_434_dst_val_ce0 : STD_LOGIC;
    signal grp_Resize5_fu_434_dst_val_we0 : STD_LOGIC;
    signal grp_Resize5_fu_434_dst_val_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_Resize5_fu_434_ap_return_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Resize5_fu_434_ap_return_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_i_reg_282 : STD_LOGIC_VECTOR (31 downto 0);
    signal levels_i_reg_293 : STD_LOGIC_VECTOR (4 downto 0);
    signal levels_1_i_reg_304 : STD_LOGIC_VECTOR (4 downto 0);
    signal rects_length_read_as_reg_315 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_14_reg_327 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_i_reg_339 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_0_i_i_reg_350 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal phi_mul_reg_361 : STD_LOGIC_VECTOR (9 downto 0);
    signal j_0_i_i_reg_373 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_114_i_fu_1003_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_detect_fu_384_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal grp_groupRectangles_fu_421_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal grp_Resize5_fu_434_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal tmp_22_cast_fu_1024_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal d_assign_fu_452_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ireg_V_fu_456_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_tmp_V_fu_472_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_fu_460_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_i_fu_482_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_i_82_fu_502_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal p_Result_s_fu_509_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_1_fu_513_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_87_i_fu_526_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_88_i_fu_531_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_89_i_fu_536_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_fu_541_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal man_V_2_fu_519_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_76_fu_568_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal sh_amt_cast_i_fu_549_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_95_i_fu_584_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_96_i_fu_588_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_75_fu_558_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_90_i_fu_553_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_fu_611_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_fu_616_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_demorgan_fu_630_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_fu_635_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_92_i_fu_562_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_fu_641_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_fu_647_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp9_fu_653_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_023_i_fu_598_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp3_fu_622_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp4_fu_667_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_77_fu_594_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp_fu_659_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp21_demorgan_fu_681_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_fu_578_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp10_fu_687_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp11_fu_693_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_98_i_fu_605_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp5_fu_673_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal scale0_V_fu_699_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_shl_i_fu_750_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal p_shl1_i_fu_762_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal p_shl1_cast_i_fu_770_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal p_shl_cast_i_fu_758_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal r_V_fu_774_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal r_V_cast_i_fu_780_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal slt_fu_789_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_fu_794_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_13_fu_805_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_13_fu_805_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_13_fu_805_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_i_i_83_fu_846_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_16_fu_852_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_1_fu_860_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal num_zeros_fu_870_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_15_fu_892_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_15_fu_892_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_15_fu_892_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal grp_fu_449_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_83_i_i_fu_921_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_53_i_i_fu_931_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_52_i_i_fu_926_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Repl2_12_trunc_i_fu_935_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_54_i_i_fu_941_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_2_fu_948_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal f_fu_959_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_0_i_cast_cast_i_fu_984_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal j_0_i_cast_cast_i_fu_999_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_115_i_cast_fu_1014_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_22_fu_1018_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (21 downto 0);
    signal ap_condition_394 : BOOLEAN;

    component detect IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        src_val_address0 : OUT STD_LOGIC_VECTOR (16 downto 0);
        src_val_ce0 : OUT STD_LOGIC;
        src_val_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        src_rows_read : IN STD_LOGIC_VECTOR (31 downto 0);
        src_cols_read : IN STD_LOGIC_VECTOR (31 downto 0);
        scale_V : IN STD_LOGIC_VECTOR (31 downto 0);
        rects_val_x_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        rects_val_x_ce0 : OUT STD_LOGIC;
        rects_val_x_we0 : OUT STD_LOGIC;
        rects_val_x_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        rects_val_y_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        rects_val_y_ce0 : OUT STD_LOGIC;
        rects_val_y_we0 : OUT STD_LOGIC;
        rects_val_y_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        rects_val_width_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        rects_val_width_ce0 : OUT STD_LOGIC;
        rects_val_width_we0 : OUT STD_LOGIC;
        rects_val_width_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        rects_val_height_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        rects_val_height_ce0 : OUT STD_LOGIC;
        rects_val_height_we0 : OUT STD_LOGIC;
        rects_val_height_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        rects_length_read : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component groupRectangles IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        rects_val_x_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        rects_val_x_ce0 : OUT STD_LOGIC;
        rects_val_x_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        rects_val_y_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        rects_val_y_ce0 : OUT STD_LOGIC;
        rects_val_y_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        rects_val_width_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        rects_val_width_ce0 : OUT STD_LOGIC;
        rects_val_width_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        rects_val_height_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        rects_val_height_ce0 : OUT STD_LOGIC;
        rects_val_height_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        rects_length_read : IN STD_LOGIC_VECTOR (31 downto 0);
        locations_val_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        locations_val_ce0 : OUT STD_LOGIC;
        locations_val_we0 : OUT STD_LOGIC;
        locations_val_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        locations_val_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        locations_val_ce1 : OUT STD_LOGIC;
        locations_val_we1 : OUT STD_LOGIC;
        locations_val_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        neighbors : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Resize5 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        src_val_address0 : OUT STD_LOGIC_VECTOR (16 downto 0);
        src_val_ce0 : OUT STD_LOGIC;
        src_val_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        src_rows_read : IN STD_LOGIC_VECTOR (31 downto 0);
        src_cols_read : IN STD_LOGIC_VECTOR (31 downto 0);
        dst_val_address0 : OUT STD_LOGIC_VECTOR (16 downto 0);
        dst_val_ce0 : OUT STD_LOGIC;
        dst_val_we0 : OUT STD_LOGIC;
        dst_val_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        scale : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Haar_Core_fdiv_32bnm IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Haar_Core_uitofp_bom IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Haar_Core_fpext_3eOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component detectMultiScale_bil IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (16 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component detectMultiScale_bjl IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    dst_val_U : component detectMultiScale_bil
    generic map (
        DataWidth => 8,
        AddressRange => 131072,
        AddressWidth => 17)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dst_val_address0,
        ce0 => dst_val_ce0,
        we0 => dst_val_we0,
        d0 => grp_Resize5_fu_434_dst_val_d0,
        q0 => dst_val_q0);

    rects_val_x_U : component detectMultiScale_bjl
    generic map (
        DataWidth => 16,
        AddressRange => 1000,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => rects_val_x_address0,
        ce0 => rects_val_x_ce0,
        we0 => rects_val_x_we0,
        d0 => grp_detect_fu_384_rects_val_x_d0,
        q0 => rects_val_x_q0);

    rects_val_y_U : component detectMultiScale_bjl
    generic map (
        DataWidth => 16,
        AddressRange => 1000,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => rects_val_y_address0,
        ce0 => rects_val_y_ce0,
        we0 => rects_val_y_we0,
        d0 => grp_detect_fu_384_rects_val_y_d0,
        q0 => rects_val_y_q0);

    rects_val_width_U : component detectMultiScale_bjl
    generic map (
        DataWidth => 16,
        AddressRange => 1000,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => rects_val_width_address0,
        ce0 => rects_val_width_ce0,
        we0 => rects_val_width_we0,
        d0 => grp_detect_fu_384_rects_val_width_d0,
        q0 => rects_val_width_q0);

    rects_val_height_U : component detectMultiScale_bjl
    generic map (
        DataWidth => 16,
        AddressRange => 1000,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => rects_val_height_address0,
        ce0 => rects_val_height_ce0,
        we0 => rects_val_height_we0,
        d0 => grp_detect_fu_384_rects_val_height_d0,
        q0 => rects_val_height_q0);

    grp_detect_fu_384 : component detect
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_detect_fu_384_ap_start,
        ap_done => grp_detect_fu_384_ap_done,
        ap_idle => grp_detect_fu_384_ap_idle,
        ap_ready => grp_detect_fu_384_ap_ready,
        src_val_address0 => grp_detect_fu_384_src_val_address0,
        src_val_ce0 => grp_detect_fu_384_src_val_ce0,
        src_val_q0 => dst_val_q0,
        src_rows_read => dst_rows_reg_1174,
        src_cols_read => dst_cols_reg_1179,
        scale_V => p_Val2_14_reg_327,
        rects_val_x_address0 => grp_detect_fu_384_rects_val_x_address0,
        rects_val_x_ce0 => grp_detect_fu_384_rects_val_x_ce0,
        rects_val_x_we0 => grp_detect_fu_384_rects_val_x_we0,
        rects_val_x_d0 => grp_detect_fu_384_rects_val_x_d0,
        rects_val_y_address0 => grp_detect_fu_384_rects_val_y_address0,
        rects_val_y_ce0 => grp_detect_fu_384_rects_val_y_ce0,
        rects_val_y_we0 => grp_detect_fu_384_rects_val_y_we0,
        rects_val_y_d0 => grp_detect_fu_384_rects_val_y_d0,
        rects_val_width_address0 => grp_detect_fu_384_rects_val_width_address0,
        rects_val_width_ce0 => grp_detect_fu_384_rects_val_width_ce0,
        rects_val_width_we0 => grp_detect_fu_384_rects_val_width_we0,
        rects_val_width_d0 => grp_detect_fu_384_rects_val_width_d0,
        rects_val_height_address0 => grp_detect_fu_384_rects_val_height_address0,
        rects_val_height_ce0 => grp_detect_fu_384_rects_val_height_ce0,
        rects_val_height_we0 => grp_detect_fu_384_rects_val_height_we0,
        rects_val_height_d0 => grp_detect_fu_384_rects_val_height_d0,
        rects_length_read => rects_length_read_as_reg_315,
        ap_return => grp_detect_fu_384_ap_return);

    grp_groupRectangles_fu_421 : component groupRectangles
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_groupRectangles_fu_421_ap_start,
        ap_done => grp_groupRectangles_fu_421_ap_done,
        ap_idle => grp_groupRectangles_fu_421_ap_idle,
        ap_ready => grp_groupRectangles_fu_421_ap_ready,
        rects_val_x_address0 => grp_groupRectangles_fu_421_rects_val_x_address0,
        rects_val_x_ce0 => grp_groupRectangles_fu_421_rects_val_x_ce0,
        rects_val_x_q0 => rects_val_x_q0,
        rects_val_y_address0 => grp_groupRectangles_fu_421_rects_val_y_address0,
        rects_val_y_ce0 => grp_groupRectangles_fu_421_rects_val_y_ce0,
        rects_val_y_q0 => rects_val_y_q0,
        rects_val_width_address0 => grp_groupRectangles_fu_421_rects_val_width_address0,
        rects_val_width_ce0 => grp_groupRectangles_fu_421_rects_val_width_ce0,
        rects_val_width_q0 => rects_val_width_q0,
        rects_val_height_address0 => grp_groupRectangles_fu_421_rects_val_height_address0,
        rects_val_height_ce0 => grp_groupRectangles_fu_421_rects_val_height_ce0,
        rects_val_height_q0 => rects_val_height_q0,
        rects_length_read => rects_length_read_as_reg_315,
        locations_val_address0 => grp_groupRectangles_fu_421_locations_val_address0,
        locations_val_ce0 => grp_groupRectangles_fu_421_locations_val_ce0,
        locations_val_we0 => grp_groupRectangles_fu_421_locations_val_we0,
        locations_val_d0 => grp_groupRectangles_fu_421_locations_val_d0,
        locations_val_address1 => grp_groupRectangles_fu_421_locations_val_address1,
        locations_val_ce1 => grp_groupRectangles_fu_421_locations_val_ce1,
        locations_val_we1 => grp_groupRectangles_fu_421_locations_val_we1,
        locations_val_d1 => grp_groupRectangles_fu_421_locations_val_d1,
        neighbors => neighbors_read_reg_1039);

    grp_Resize5_fu_434 : component Resize5
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_Resize5_fu_434_ap_start,
        ap_done => grp_Resize5_fu_434_ap_done,
        ap_idle => grp_Resize5_fu_434_ap_idle,
        ap_ready => grp_Resize5_fu_434_ap_ready,
        src_val_address0 => grp_Resize5_fu_434_src_val_address0,
        src_val_ce0 => grp_Resize5_fu_434_src_val_ce0,
        src_val_q0 => src_val_q0,
        src_rows_read => rows_reg_1044,
        src_cols_read => cols_reg_1050,
        dst_val_address0 => grp_Resize5_fu_434_dst_val_address0,
        dst_val_ce0 => grp_Resize5_fu_434_dst_val_ce0,
        dst_val_we0 => grp_Resize5_fu_434_dst_val_we0,
        dst_val_d0 => grp_Resize5_fu_434_dst_val_d0,
        scale => iscale_reg_1169,
        ap_return_0 => grp_Resize5_fu_434_ap_return_0,
        ap_return_1 => grp_Resize5_fu_434_ap_return_1);

    Haar_Core_fdiv_32bnm_U568 : component Haar_Core_fdiv_32bnm
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_const_lv32_3F800000,
        din1 => p_03_i_i_i_reg_1164,
        ce => ap_const_logic_1,
        dout => grp_fu_444_p2);

    Haar_Core_uitofp_bom_U569 : component Haar_Core_uitofp_bom
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp32_V_1_reg_1139,
        ce => ap_const_logic_1,
        dout => grp_fu_449_p1);

    Haar_Core_fpext_3eOg_U570 : component Haar_Core_fpext_3eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => p_scale0_dout,
        dout => d_assign_fu_452_p1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((grp_groupRectangles_fu_421_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_Resize5_fu_434_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_Resize5_fu_434_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                    grp_Resize5_fu_434_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_Resize5_fu_434_ap_ready = ap_const_logic_1)) then 
                    grp_Resize5_fu_434_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_detect_fu_384_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_detect_fu_384_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                    grp_detect_fu_384_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_detect_fu_384_ap_ready = ap_const_logic_1)) then 
                    grp_detect_fu_384_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_groupRectangles_fu_421_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_groupRectangles_fu_421_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state19) and (tmp_112_i_fu_988_p2 = ap_const_lv1_0))) then 
                    grp_groupRectangles_fu_421_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_groupRectangles_fu_421_ap_ready = ap_const_logic_1)) then 
                    grp_groupRectangles_fu_421_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_0_i_i_reg_350_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (exitcond_fu_820_p2 = ap_const_lv1_1))) then 
                i_0_i_i_reg_350 <= ap_const_lv3_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
                i_0_i_i_reg_350 <= i_7_reg_1198;
            end if; 
        end if;
    end process;

    i_i_reg_339_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_detect_fu_384_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
                i_i_reg_339 <= i_reg_1124;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and ((tmp_103_i_fu_784_p2 = ap_const_lv1_1) or (or_cond_i_fu_800_p2 = ap_const_lv1_0) or (tmp_78_fu_731_p3 = ap_const_lv1_1)))) then 
                i_i_reg_339 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    j_0_i_i_reg_373_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state19) and (tmp_112_i_fu_988_p2 = ap_const_lv1_1))) then 
                j_0_i_i_reg_373 <= ap_const_lv7_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state20) and (tmp_114_i_fu_1003_p2 = ap_const_lv1_1))) then 
                j_0_i_i_reg_373 <= j_fu_1008_p2;
            end if; 
        end if;
    end process;

    levels_1_i_reg_304_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                if ((tmp_78_fu_731_p3 = ap_const_lv1_1)) then 
                    levels_1_i_reg_304 <= levels_i_reg_293;
                elsif ((ap_const_boolean_1 = ap_condition_394)) then 
                    levels_1_i_reg_304 <= levels_fu_739_p2;
                end if;
            end if; 
        end if;
    end process;

    levels_i_reg_293_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (or_cond_i_fu_800_p2 = ap_const_lv1_1) and (tmp_103_i_fu_784_p2 = ap_const_lv1_0) and (tmp_78_fu_731_p3 = ap_const_lv1_0))) then 
                levels_i_reg_293 <= levels_fu_739_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                levels_i_reg_293 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    p_Val2_14_reg_327_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_detect_fu_384_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
                p_Val2_14_reg_327 <= p_scale_V_reg_1149;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and ((tmp_103_i_fu_784_p2 = ap_const_lv1_1) or (or_cond_i_fu_800_p2 = ap_const_lv1_0) or (tmp_78_fu_731_p3 = ap_const_lv1_1)))) then 
                p_Val2_14_reg_327 <= ap_const_lv32_10000;
            end if; 
        end if;
    end process;

    p_i_reg_282_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (or_cond_i_fu_800_p2 = ap_const_lv1_1) and (tmp_103_i_fu_784_p2 = ap_const_lv1_0) and (tmp_78_fu_731_p3 = ap_const_lv1_0))) then 
                p_i_reg_282 <= p_Val2_13_fu_805_p2(47 downto 16);
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                p_i_reg_282 <= ap_const_lv32_10000;
            end if; 
        end if;
    end process;

    phi_mul_reg_361_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (exitcond_fu_820_p2 = ap_const_lv1_1))) then 
                phi_mul_reg_361 <= ap_const_lv10_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
                phi_mul_reg_361 <= next_mul_reg_1189;
            end if; 
        end if;
    end process;

    rects_length_read_as_reg_315_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_detect_fu_384_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
                rects_length_read_as_reg_315 <= grp_detect_fu_384_ap_return;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and ((tmp_103_i_fu_784_p2 = ap_const_lv1_1) or (or_cond_i_fu_800_p2 = ap_const_lv1_0) or (tmp_78_fu_731_p3 = ap_const_lv1_1)))) then 
                rects_length_read_as_reg_315 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_done_reg = ap_const_logic_1) or (locations_cols_out_full_n = ap_const_logic_0) or (locations_rows_out_full_n = ap_const_logic_0) or (neighbors_empty_n = ap_const_logic_0) or (p_scale0_empty_n = ap_const_logic_0) or (locations_cols_empty_n = ap_const_logic_0) or (locations_rows_empty_n = ap_const_logic_0) or (src_cols_empty_n = ap_const_logic_0) or (src_rows_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                F2_reg_1073 <= F2_fu_496_p2;
                cols_reg_1050 <= src_cols_dout;
                isneg_reg_1056 <= ireg_V_fu_456_p1(63 downto 63);
                locations_cols_read_reg_1034 <= locations_cols_dout;
                locations_rows_read_reg_1029 <= locations_rows_dout;
                neighbors_read_reg_1039 <= neighbors_dout;
                rows_reg_1044 <= src_rows_dout;
                tmp_74_reg_1062 <= tmp_74_fu_486_p1;
                tmp_85_i_reg_1067 <= tmp_85_i_fu_490_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                OP2_V_cast8_i_reg_1081 <= OP2_V_cast8_i_fu_707_p1;
                    tmp_101_i_reg_1087(47 downto 16) <= tmp_101_i_fu_711_p3(47 downto 16);
                    tmp_105_i_reg_1092(47 downto 16) <= tmp_105_i_fu_718_p3(47 downto 16);
                tmp_108_i_reg_1097 <= tmp_108_i_fu_725_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_Resize5_fu_434_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                dst_cols_reg_1179 <= grp_Resize5_fu_434_ap_return_1;
                dst_rows_reg_1174 <= grp_Resize5_fu_434_ap_return_0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then
                i_7_reg_1198 <= i_7_fu_993_p2;
                next_mul_reg_1189 <= next_mul_fu_978_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                i_reg_1124 <= i_fu_826_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (exitcond_fu_820_p2 = ap_const_lv1_0))) then
                is_neg_reg_1134 <= p_Val2_14_reg_327(31 downto 31);
                p_scale_V_reg_1149 <= p_Val2_15_fu_892_p2(47 downto 16);
                tmp32_V_1_reg_1139 <= tmp32_V_1_fu_878_p2;
                tmp_80_reg_1144 <= tmp_80_fu_884_p1;
                tmp_i_i_reg_1129 <= tmp_i_i_fu_832_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                iscale_reg_1169 <= grp_fu_444_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                p_03_i_i_i_reg_1164 <= p_03_i_i_i_fu_963_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (tmp_i_i_reg_1129 = ap_const_lv1_0))) then
                p_Result_i_i_reg_1159 <= tmp32_V_fu_907_p1(30 downto 23);
                tmp32_V_reg_1154 <= tmp32_V_fu_907_p1;
            end if;
        end if;
    end process;
    tmp_101_i_reg_1087(15 downto 0) <= "0000000000000000";
    tmp_105_i_reg_1092(15 downto 0) <= "0000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, src_rows_empty_n, src_cols_empty_n, locations_rows_empty_n, locations_cols_empty_n, p_scale0_empty_n, neighbors_empty_n, locations_rows_out_full_n, locations_cols_out_full_n, ap_CS_fsm_state3, tmp_78_fu_731_p3, tmp_103_i_fu_784_p2, or_cond_i_fu_800_p2, ap_CS_fsm_state4, exitcond_fu_820_p2, ap_CS_fsm_state16, grp_Resize5_fu_434_ap_done, ap_CS_fsm_state18, grp_detect_fu_384_ap_done, ap_CS_fsm_state19, tmp_112_i_fu_988_p2, ap_CS_fsm_state20, grp_groupRectangles_fu_421_ap_done, tmp_114_i_fu_1003_p2, ap_CS_fsm_state22)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (locations_cols_out_full_n = ap_const_logic_0) or (locations_rows_out_full_n = ap_const_logic_0) or (neighbors_empty_n = ap_const_logic_0) or (p_scale0_empty_n = ap_const_logic_0) or (locations_cols_empty_n = ap_const_logic_0) or (locations_rows_empty_n = ap_const_logic_0) or (src_cols_empty_n = ap_const_logic_0) or (src_rows_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and ((tmp_103_i_fu_784_p2 = ap_const_lv1_1) or (or_cond_i_fu_800_p2 = ap_const_lv1_0) or (tmp_78_fu_731_p3 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (exitcond_fu_820_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                if (((grp_Resize5_fu_434_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                if (((grp_detect_fu_384_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state18;
                end if;
            when ap_ST_fsm_state19 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state19) and (tmp_112_i_fu_988_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when ap_ST_fsm_state20 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state20) and (tmp_114_i_fu_1003_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_state21;
                end if;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state22 => 
                if (((grp_groupRectangles_fu_421_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    F2_fu_496_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(tmp_i_fu_482_p1));
        OP2_V_cast8_i_fu_707_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(scale0_V_fu_699_p3),48));

    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, src_rows_empty_n, src_cols_empty_n, locations_rows_empty_n, locations_cols_empty_n, p_scale0_empty_n, neighbors_empty_n, locations_rows_out_full_n, locations_cols_out_full_n)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (locations_cols_out_full_n = ap_const_logic_0) or (locations_rows_out_full_n = ap_const_logic_0) or (neighbors_empty_n = ap_const_logic_0) or (p_scale0_empty_n = ap_const_logic_0) or (locations_cols_empty_n = ap_const_logic_0) or (locations_rows_empty_n = ap_const_logic_0) or (src_cols_empty_n = ap_const_logic_0) or (src_rows_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0));
    end process;


    ap_condition_394_assign_proc : process(tmp_78_fu_731_p3, tmp_103_i_fu_784_p2, or_cond_i_fu_800_p2)
    begin
                ap_condition_394 <= (((or_cond_i_fu_800_p2 = ap_const_lv1_0) and (tmp_78_fu_731_p3 = ap_const_lv1_0)) or ((tmp_103_i_fu_784_p2 = ap_const_lv1_1) and (tmp_78_fu_731_p3 = ap_const_lv1_0)));
    end process;


    ap_done_assign_proc : process(ap_done_reg, grp_groupRectangles_fu_421_ap_done, ap_CS_fsm_state22)
    begin
        if (((grp_groupRectangles_fu_421_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_groupRectangles_fu_421_ap_done, ap_CS_fsm_state22)
    begin
        if (((grp_groupRectangles_fu_421_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    dst_val_address0_assign_proc : process(ap_CS_fsm_state16, ap_CS_fsm_state18, grp_detect_fu_384_src_val_address0, grp_Resize5_fu_434_dst_val_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            dst_val_address0 <= grp_Resize5_fu_434_dst_val_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            dst_val_address0 <= grp_detect_fu_384_src_val_address0;
        else 
            dst_val_address0 <= "XXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dst_val_ce0_assign_proc : process(ap_CS_fsm_state16, ap_CS_fsm_state18, grp_detect_fu_384_src_val_ce0, grp_Resize5_fu_434_dst_val_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            dst_val_ce0 <= grp_Resize5_fu_434_dst_val_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            dst_val_ce0 <= grp_detect_fu_384_src_val_ce0;
        else 
            dst_val_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dst_val_we0_assign_proc : process(ap_CS_fsm_state16, grp_Resize5_fu_434_dst_val_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            dst_val_we0 <= grp_Resize5_fu_434_dst_val_we0;
        else 
            dst_val_we0 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond_fu_820_p2 <= "1" when (i_i_reg_339 = levels_1_i_reg_304) else "0";
    exp_tmp_V_fu_472_p4 <= ireg_V_fu_456_p1(62 downto 52);
    f_fu_959_p1 <= p_Result_2_fu_948_p5;
    grp_Resize5_fu_434_ap_start <= grp_Resize5_fu_434_ap_start_reg;
    grp_detect_fu_384_ap_start <= grp_detect_fu_384_ap_start_reg;
    grp_groupRectangles_fu_421_ap_start <= grp_groupRectangles_fu_421_ap_start_reg;
    i_0_i_cast_cast_i_fu_984_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i_i_reg_350),4));
    i_7_fu_993_p2 <= std_logic_vector(unsigned(i_0_i_i_reg_350) + unsigned(ap_const_lv3_1));
    i_fu_826_p2 <= std_logic_vector(unsigned(i_i_reg_339) + unsigned(ap_const_lv5_1));
    icmp_fu_578_p2 <= "1" when (tmp_76_fu_568_p4 = ap_const_lv7_0) else "0";
    ireg_V_fu_456_p1 <= d_assign_fu_452_p1;
    is_neg_fu_838_p3 <= p_Val2_14_reg_327(31 downto 31);
    j_0_i_cast_cast_i_fu_999_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_0_i_i_reg_373),8));
    j_fu_1008_p2 <= std_logic_vector(unsigned(j_0_i_i_reg_373) + unsigned(ap_const_lv7_1));
    levels_fu_739_p2 <= std_logic_vector(unsigned(levels_i_reg_293) + unsigned(ap_const_lv5_1));

    locations_cols_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, locations_cols_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            locations_cols_blk_n <= locations_cols_empty_n;
        else 
            locations_cols_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    locations_cols_out_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, locations_cols_out_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            locations_cols_out_blk_n <= locations_cols_out_full_n;
        else 
            locations_cols_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    locations_cols_out_din <= locations_cols_dout;

    locations_cols_out_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, src_rows_empty_n, src_cols_empty_n, locations_rows_empty_n, locations_cols_empty_n, p_scale0_empty_n, neighbors_empty_n, locations_rows_out_full_n, locations_cols_out_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (locations_cols_out_full_n = ap_const_logic_0) or (locations_rows_out_full_n = ap_const_logic_0) or (neighbors_empty_n = ap_const_logic_0) or (p_scale0_empty_n = ap_const_logic_0) or (locations_cols_empty_n = ap_const_logic_0) or (locations_rows_empty_n = ap_const_logic_0) or (src_cols_empty_n = ap_const_logic_0) or (src_rows_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            locations_cols_out_write <= ap_const_logic_1;
        else 
            locations_cols_out_write <= ap_const_logic_0;
        end if; 
    end process;


    locations_cols_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, src_rows_empty_n, src_cols_empty_n, locations_rows_empty_n, locations_cols_empty_n, p_scale0_empty_n, neighbors_empty_n, locations_rows_out_full_n, locations_cols_out_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (locations_cols_out_full_n = ap_const_logic_0) or (locations_rows_out_full_n = ap_const_logic_0) or (neighbors_empty_n = ap_const_logic_0) or (p_scale0_empty_n = ap_const_logic_0) or (locations_cols_empty_n = ap_const_logic_0) or (locations_rows_empty_n = ap_const_logic_0) or (src_cols_empty_n = ap_const_logic_0) or (src_rows_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            locations_cols_read <= ap_const_logic_1;
        else 
            locations_cols_read <= ap_const_logic_0;
        end if; 
    end process;


    locations_rows_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, locations_rows_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            locations_rows_blk_n <= locations_rows_empty_n;
        else 
            locations_rows_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    locations_rows_out_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, locations_rows_out_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            locations_rows_out_blk_n <= locations_rows_out_full_n;
        else 
            locations_rows_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    locations_rows_out_din <= locations_rows_dout;

    locations_rows_out_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, src_rows_empty_n, src_cols_empty_n, locations_rows_empty_n, locations_cols_empty_n, p_scale0_empty_n, neighbors_empty_n, locations_rows_out_full_n, locations_cols_out_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (locations_cols_out_full_n = ap_const_logic_0) or (locations_rows_out_full_n = ap_const_logic_0) or (neighbors_empty_n = ap_const_logic_0) or (p_scale0_empty_n = ap_const_logic_0) or (locations_cols_empty_n = ap_const_logic_0) or (locations_rows_empty_n = ap_const_logic_0) or (src_cols_empty_n = ap_const_logic_0) or (src_rows_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            locations_rows_out_write <= ap_const_logic_1;
        else 
            locations_rows_out_write <= ap_const_logic_0;
        end if; 
    end process;


    locations_rows_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, src_rows_empty_n, src_cols_empty_n, locations_rows_empty_n, locations_cols_empty_n, p_scale0_empty_n, neighbors_empty_n, locations_rows_out_full_n, locations_cols_out_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (locations_cols_out_full_n = ap_const_logic_0) or (locations_rows_out_full_n = ap_const_logic_0) or (neighbors_empty_n = ap_const_logic_0) or (p_scale0_empty_n = ap_const_logic_0) or (locations_cols_empty_n = ap_const_logic_0) or (locations_rows_empty_n = ap_const_logic_0) or (src_cols_empty_n = ap_const_logic_0) or (src_rows_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            locations_rows_read <= ap_const_logic_1;
        else 
            locations_rows_read <= ap_const_logic_0;
        end if; 
    end process;


    locations_val_address0_assign_proc : process(ap_CS_fsm_state20, grp_groupRectangles_fu_421_locations_val_address0, ap_CS_fsm_state22, tmp_22_cast_fu_1024_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            locations_val_address0 <= tmp_22_cast_fu_1024_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            locations_val_address0 <= grp_groupRectangles_fu_421_locations_val_address0;
        else 
            locations_val_address0 <= "XXXXXXXXX";
        end if; 
    end process;

    locations_val_address1 <= grp_groupRectangles_fu_421_locations_val_address1;

    locations_val_ce0_assign_proc : process(ap_CS_fsm_state20, grp_groupRectangles_fu_421_locations_val_ce0, ap_CS_fsm_state22)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            locations_val_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            locations_val_ce0 <= grp_groupRectangles_fu_421_locations_val_ce0;
        else 
            locations_val_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    locations_val_ce1_assign_proc : process(grp_groupRectangles_fu_421_locations_val_ce1, ap_CS_fsm_state22)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            locations_val_ce1 <= grp_groupRectangles_fu_421_locations_val_ce1;
        else 
            locations_val_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    locations_val_d0_assign_proc : process(ap_CS_fsm_state20, grp_groupRectangles_fu_421_locations_val_d0, ap_CS_fsm_state22)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            locations_val_d0 <= ap_const_lv16_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            locations_val_d0 <= grp_groupRectangles_fu_421_locations_val_d0;
        else 
            locations_val_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    locations_val_d1 <= grp_groupRectangles_fu_421_locations_val_d1;

    locations_val_we0_assign_proc : process(ap_CS_fsm_state20, grp_groupRectangles_fu_421_locations_val_we0, tmp_114_i_fu_1003_p2, ap_CS_fsm_state22)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state20) and (tmp_114_i_fu_1003_p2 = ap_const_lv1_1))) then 
            locations_val_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            locations_val_we0 <= grp_groupRectangles_fu_421_locations_val_we0;
        else 
            locations_val_we0 <= ap_const_logic_0;
        end if; 
    end process;


    locations_val_we1_assign_proc : process(grp_groupRectangles_fu_421_locations_val_we1, ap_CS_fsm_state22)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            locations_val_we1 <= grp_groupRectangles_fu_421_locations_val_we1;
        else 
            locations_val_we1 <= ap_const_logic_0;
        end if; 
    end process;

    man_V_1_fu_513_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(p_Result_s_fu_509_p1));
    man_V_2_fu_519_p3 <= 
        man_V_1_fu_513_p2 when (isneg_reg_1056(0) = '1') else 
        p_Result_s_fu_509_p1;

    neighbors_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, neighbors_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            neighbors_blk_n <= neighbors_empty_n;
        else 
            neighbors_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    neighbors_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, src_rows_empty_n, src_cols_empty_n, locations_rows_empty_n, locations_cols_empty_n, p_scale0_empty_n, neighbors_empty_n, locations_rows_out_full_n, locations_cols_out_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (locations_cols_out_full_n = ap_const_logic_0) or (locations_rows_out_full_n = ap_const_logic_0) or (neighbors_empty_n = ap_const_logic_0) or (p_scale0_empty_n = ap_const_logic_0) or (locations_cols_empty_n = ap_const_logic_0) or (locations_rows_empty_n = ap_const_logic_0) or (src_cols_empty_n = ap_const_logic_0) or (src_rows_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            neighbors_read <= ap_const_logic_1;
        else 
            neighbors_read <= ap_const_logic_0;
        end if; 
    end process;

    next_mul_fu_978_p2 <= std_logic_vector(unsigned(phi_mul_reg_361) + unsigned(ap_const_lv10_64));
    
    num_zeros_fu_870_p3_proc : process(p_Result_1_fu_860_p4)
    begin
        num_zeros_fu_870_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 0 to 32 - 1 loop
            if p_Result_1_fu_860_p4(i) = '1' then
                num_zeros_fu_870_p3 <= std_logic_vector(to_unsigned(i,32));
                exit;
            end if;
        end loop;
    end process;

    or_cond_i_fu_800_p2 <= (tmp_108_i_reg_1097 and rev_fu_794_p2);
    p_023_i_fu_598_p3 <= 
        ap_const_lv32_FFFFFFFF when (isneg_reg_1056(0) = '1') else 
        ap_const_lv32_0;
    p_03_i_i_i_fu_963_p3 <= 
        ap_const_lv32_0 when (tmp_i_i_reg_1129(0) = '1') else 
        f_fu_959_p1;
    p_Repl2_12_trunc_i_fu_935_p2 <= std_logic_vector(unsigned(tmp_53_i_i_fu_931_p1) + unsigned(tmp_52_i_i_fu_926_p2));
    
    p_Result_1_fu_860_p4_proc : process(p_Val2_16_fu_852_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable p_Result_1_fu_860_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(5 - 1 downto 0) := ap_const_lv32_1F(5 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(5 - 1 downto 0) := ap_const_lv32_0(5 - 1 downto 0);
        v0_cpy := p_Val2_16_fu_852_p3;
        if (vlo_cpy(5 - 1 downto 0) > vhi_cpy(5 - 1 downto 0)) then
            vhi_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_0(5-1 downto 0)));
            vlo_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_1F(5-1 downto 0)));
            for p_Result_1_fu_860_p4_i in 0 to 32-1 loop
                v0_cpy(p_Result_1_fu_860_p4_i) := p_Val2_16_fu_852_p3(32-1-p_Result_1_fu_860_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(5-1 downto 0)))));

        section := (others=>'0');
        section(5-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(5-1 downto 0)) - unsigned(vlo_cpy(5-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(32-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_1_fu_860_p4 <= resvalue(32-1 downto 0);
    end process;

    p_Result_2_fu_948_p5 <= (tmp_54_i_i_fu_941_p3 & tmp32_V_reg_1154(22 downto 0));
    p_Result_s_fu_509_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_i_82_fu_502_p3),54));
    p_Val2_13_fu_805_p0 <= p_i_reg_282;
    p_Val2_13_fu_805_p1 <= OP2_V_cast8_i_reg_1081(32 - 1 downto 0);
    p_Val2_13_fu_805_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_13_fu_805_p0) * signed(p_Val2_13_fu_805_p1))), 48));
    p_Val2_15_fu_892_p0 <= OP2_V_cast8_i_reg_1081(32 - 1 downto 0);
    p_Val2_15_fu_892_p1 <= p_Val2_14_reg_327;
    p_Val2_15_fu_892_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_15_fu_892_p0) * signed(p_Val2_15_fu_892_p1))), 48));
    p_Val2_16_fu_852_p3 <= 
        tmp_i_i_83_fu_846_p2 when (is_neg_fu_838_p3(0) = '1') else 
        p_Val2_14_reg_327;

    p_scale0_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_scale0_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_scale0_blk_n <= p_scale0_empty_n;
        else 
            p_scale0_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_scale0_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, src_rows_empty_n, src_cols_empty_n, locations_rows_empty_n, locations_cols_empty_n, p_scale0_empty_n, neighbors_empty_n, locations_rows_out_full_n, locations_cols_out_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (locations_cols_out_full_n = ap_const_logic_0) or (locations_rows_out_full_n = ap_const_logic_0) or (neighbors_empty_n = ap_const_logic_0) or (p_scale0_empty_n = ap_const_logic_0) or (locations_cols_empty_n = ap_const_logic_0) or (locations_rows_empty_n = ap_const_logic_0) or (src_cols_empty_n = ap_const_logic_0) or (src_rows_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_scale0_read <= ap_const_logic_1;
        else 
            p_scale0_read <= ap_const_logic_0;
        end if; 
    end process;

        p_shl1_cast_i_fu_770_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_shl1_i_fu_762_p3),37));

    p_shl1_i_fu_762_p3 <= (p_i_reg_282 & ap_const_lv2_0);
        p_shl_cast_i_fu_758_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_shl_i_fu_750_p3),37));

    p_shl_i_fu_750_p3 <= (p_i_reg_282 & ap_const_lv4_0);
        r_V_cast_i_fu_780_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_fu_774_p2),48));

    r_V_fu_774_p2 <= std_logic_vector(signed(p_shl1_cast_i_fu_770_p1) + signed(p_shl_cast_i_fu_758_p1));

    rects_val_height_address0_assign_proc : process(ap_CS_fsm_state18, grp_detect_fu_384_rects_val_height_address0, grp_groupRectangles_fu_421_rects_val_height_address0, ap_CS_fsm_state22)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            rects_val_height_address0 <= grp_groupRectangles_fu_421_rects_val_height_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            rects_val_height_address0 <= grp_detect_fu_384_rects_val_height_address0;
        else 
            rects_val_height_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    rects_val_height_ce0_assign_proc : process(ap_CS_fsm_state18, grp_detect_fu_384_rects_val_height_ce0, grp_groupRectangles_fu_421_rects_val_height_ce0, ap_CS_fsm_state22)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            rects_val_height_ce0 <= grp_groupRectangles_fu_421_rects_val_height_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            rects_val_height_ce0 <= grp_detect_fu_384_rects_val_height_ce0;
        else 
            rects_val_height_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    rects_val_height_we0_assign_proc : process(ap_CS_fsm_state18, grp_detect_fu_384_rects_val_height_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            rects_val_height_we0 <= grp_detect_fu_384_rects_val_height_we0;
        else 
            rects_val_height_we0 <= ap_const_logic_0;
        end if; 
    end process;


    rects_val_width_address0_assign_proc : process(ap_CS_fsm_state18, grp_detect_fu_384_rects_val_width_address0, grp_groupRectangles_fu_421_rects_val_width_address0, ap_CS_fsm_state22)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            rects_val_width_address0 <= grp_groupRectangles_fu_421_rects_val_width_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            rects_val_width_address0 <= grp_detect_fu_384_rects_val_width_address0;
        else 
            rects_val_width_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    rects_val_width_ce0_assign_proc : process(ap_CS_fsm_state18, grp_detect_fu_384_rects_val_width_ce0, grp_groupRectangles_fu_421_rects_val_width_ce0, ap_CS_fsm_state22)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            rects_val_width_ce0 <= grp_groupRectangles_fu_421_rects_val_width_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            rects_val_width_ce0 <= grp_detect_fu_384_rects_val_width_ce0;
        else 
            rects_val_width_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    rects_val_width_we0_assign_proc : process(ap_CS_fsm_state18, grp_detect_fu_384_rects_val_width_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            rects_val_width_we0 <= grp_detect_fu_384_rects_val_width_we0;
        else 
            rects_val_width_we0 <= ap_const_logic_0;
        end if; 
    end process;


    rects_val_x_address0_assign_proc : process(ap_CS_fsm_state18, grp_detect_fu_384_rects_val_x_address0, grp_groupRectangles_fu_421_rects_val_x_address0, ap_CS_fsm_state22)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            rects_val_x_address0 <= grp_groupRectangles_fu_421_rects_val_x_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            rects_val_x_address0 <= grp_detect_fu_384_rects_val_x_address0;
        else 
            rects_val_x_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    rects_val_x_ce0_assign_proc : process(ap_CS_fsm_state18, grp_detect_fu_384_rects_val_x_ce0, grp_groupRectangles_fu_421_rects_val_x_ce0, ap_CS_fsm_state22)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            rects_val_x_ce0 <= grp_groupRectangles_fu_421_rects_val_x_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            rects_val_x_ce0 <= grp_detect_fu_384_rects_val_x_ce0;
        else 
            rects_val_x_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    rects_val_x_we0_assign_proc : process(ap_CS_fsm_state18, grp_detect_fu_384_rects_val_x_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            rects_val_x_we0 <= grp_detect_fu_384_rects_val_x_we0;
        else 
            rects_val_x_we0 <= ap_const_logic_0;
        end if; 
    end process;


    rects_val_y_address0_assign_proc : process(ap_CS_fsm_state18, grp_detect_fu_384_rects_val_y_address0, grp_groupRectangles_fu_421_rects_val_y_address0, ap_CS_fsm_state22)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            rects_val_y_address0 <= grp_groupRectangles_fu_421_rects_val_y_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            rects_val_y_address0 <= grp_detect_fu_384_rects_val_y_address0;
        else 
            rects_val_y_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    rects_val_y_ce0_assign_proc : process(ap_CS_fsm_state18, grp_detect_fu_384_rects_val_y_ce0, grp_groupRectangles_fu_421_rects_val_y_ce0, ap_CS_fsm_state22)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            rects_val_y_ce0 <= grp_groupRectangles_fu_421_rects_val_y_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            rects_val_y_ce0 <= grp_detect_fu_384_rects_val_y_ce0;
        else 
            rects_val_y_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    rects_val_y_we0_assign_proc : process(ap_CS_fsm_state18, grp_detect_fu_384_rects_val_y_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            rects_val_y_we0 <= grp_detect_fu_384_rects_val_y_we0;
        else 
            rects_val_y_we0 <= ap_const_logic_0;
        end if; 
    end process;

    rev_fu_794_p2 <= (slt_fu_789_p2 xor ap_const_lv1_1);
    scale0_V_fu_699_p3 <= 
        tmp_98_i_fu_605_p2 when (sel_tmp11_fu_693_p2(0) = '1') else 
        sel_tmp5_fu_673_p3;
    sel_tmp10_fu_687_p2 <= (sel_tmp21_demorgan_fu_681_p2 xor ap_const_lv1_1);
    sel_tmp11_fu_693_p2 <= (sel_tmp10_fu_687_p2 and icmp_fu_578_p2);
    sel_tmp1_fu_611_p2 <= (tmp_85_i_reg_1067 xor ap_const_lv1_1);
    sel_tmp21_demorgan_fu_681_p2 <= (tmp_87_i_fu_526_p2 or sel_tmp6_demorgan_fu_630_p2);
    sel_tmp2_fu_616_p2 <= (tmp_90_i_fu_553_p2 and sel_tmp1_fu_611_p2);
    sel_tmp3_fu_622_p3 <= 
        tmp_75_fu_558_p1 when (sel_tmp2_fu_616_p2(0) = '1') else 
        ap_const_lv32_0;
    sel_tmp4_fu_667_p2 <= (tmp_92_i_fu_562_p2 and sel_tmp7_fu_641_p2);
    sel_tmp5_fu_673_p3 <= 
        tmp_77_fu_594_p1 when (sel_tmp4_fu_667_p2(0) = '1') else 
        sel_tmp_fu_659_p3;
    sel_tmp6_demorgan_fu_630_p2 <= (tmp_90_i_fu_553_p2 or tmp_85_i_reg_1067);
    sel_tmp6_fu_635_p2 <= (sel_tmp6_demorgan_fu_630_p2 xor ap_const_lv1_1);
    sel_tmp7_fu_641_p2 <= (tmp_87_i_fu_526_p2 and sel_tmp6_fu_635_p2);
    sel_tmp8_fu_647_p2 <= (tmp_92_i_fu_562_p2 xor ap_const_lv1_1);
    sel_tmp9_fu_653_p2 <= (sel_tmp8_fu_647_p2 and sel_tmp7_fu_641_p2);
    sel_tmp_fu_659_p3 <= 
        p_023_i_fu_598_p3 when (sel_tmp9_fu_653_p2(0) = '1') else 
        sel_tmp3_fu_622_p3;
        sh_amt_cast_i_fu_549_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_fu_541_p3),32));

    sh_amt_fu_541_p3 <= 
        tmp_88_i_fu_531_p2 when (tmp_87_i_fu_526_p2(0) = '1') else 
        tmp_89_i_fu_536_p2;
    slt_fu_789_p2 <= "1" when (signed(tmp_105_i_reg_1092) < signed(r_V_cast_i_fu_780_p1)) else "0";

    src_cols_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, src_cols_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            src_cols_blk_n <= src_cols_empty_n;
        else 
            src_cols_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    src_cols_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, src_rows_empty_n, src_cols_empty_n, locations_rows_empty_n, locations_cols_empty_n, p_scale0_empty_n, neighbors_empty_n, locations_rows_out_full_n, locations_cols_out_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (locations_cols_out_full_n = ap_const_logic_0) or (locations_rows_out_full_n = ap_const_logic_0) or (neighbors_empty_n = ap_const_logic_0) or (p_scale0_empty_n = ap_const_logic_0) or (locations_cols_empty_n = ap_const_logic_0) or (locations_rows_empty_n = ap_const_logic_0) or (src_cols_empty_n = ap_const_logic_0) or (src_rows_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            src_cols_read <= ap_const_logic_1;
        else 
            src_cols_read <= ap_const_logic_0;
        end if; 
    end process;


    src_rows_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, src_rows_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            src_rows_blk_n <= src_rows_empty_n;
        else 
            src_rows_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    src_rows_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, src_rows_empty_n, src_cols_empty_n, locations_rows_empty_n, locations_cols_empty_n, p_scale0_empty_n, neighbors_empty_n, locations_rows_out_full_n, locations_cols_out_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (locations_cols_out_full_n = ap_const_logic_0) or (locations_rows_out_full_n = ap_const_logic_0) or (neighbors_empty_n = ap_const_logic_0) or (p_scale0_empty_n = ap_const_logic_0) or (locations_cols_empty_n = ap_const_logic_0) or (locations_rows_empty_n = ap_const_logic_0) or (src_cols_empty_n = ap_const_logic_0) or (src_rows_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            src_rows_read <= ap_const_logic_1;
        else 
            src_rows_read <= ap_const_logic_0;
        end if; 
    end process;

    src_val_address0 <= grp_Resize5_fu_434_src_val_address0;
    src_val_ce0 <= grp_Resize5_fu_434_src_val_ce0;
    tmp32_V_1_fu_878_p2 <= std_logic_vector(shift_left(unsigned(p_Val2_16_fu_852_p3),to_integer(unsigned('0' & num_zeros_fu_870_p3(31-1 downto 0)))));
    tmp32_V_fu_907_p1 <= grp_fu_449_p1;
    tmp_101_i_fu_711_p3 <= (rows_reg_1044 & ap_const_lv16_0);
    tmp_103_i_fu_784_p2 <= "1" when (signed(r_V_cast_i_fu_780_p1) > signed(tmp_101_i_reg_1087)) else "0";
    tmp_105_i_fu_718_p3 <= (cols_reg_1050 & ap_const_lv16_0);
    tmp_108_i_fu_725_p2 <= "1" when (signed(scale0_V_fu_699_p3) > signed(ap_const_lv32_10000)) else "0";
    tmp_112_i_fu_988_p2 <= "1" when (signed(i_0_i_cast_cast_i_fu_984_p1) < signed(locations_rows_read_reg_1029)) else "0";
    tmp_114_i_fu_1003_p2 <= "1" when (signed(j_0_i_cast_cast_i_fu_999_p1) < signed(locations_cols_read_reg_1034)) else "0";
    tmp_115_i_cast_fu_1014_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_0_i_i_reg_373),10));
    tmp_22_cast_fu_1024_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_22_fu_1018_p2),64));
    tmp_22_fu_1018_p2 <= std_logic_vector(unsigned(phi_mul_reg_361) + unsigned(tmp_115_i_cast_fu_1014_p1));
    tmp_52_i_i_fu_926_p2 <= std_logic_vector(signed(ap_const_lv8_8E) - signed(tmp_80_reg_1144));
    tmp_53_i_i_fu_931_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_83_i_i_fu_921_p2),8));
    tmp_54_i_i_fu_941_p3 <= (is_neg_reg_1134 & p_Repl2_12_trunc_i_fu_935_p2);
    tmp_74_fu_486_p1 <= ireg_V_fu_456_p1(52 - 1 downto 0);
    tmp_75_fu_558_p1 <= man_V_2_fu_519_p3(32 - 1 downto 0);
    tmp_76_fu_568_p4 <= sh_amt_fu_541_p3(11 downto 5);
    tmp_77_fu_594_p1 <= tmp_96_i_fu_588_p2(32 - 1 downto 0);
    tmp_78_fu_731_p3 <= levels_i_reg_293(4 downto 4);
    tmp_80_fu_884_p1 <= num_zeros_fu_870_p3(8 - 1 downto 0);
    tmp_83_i_i_fu_921_p2 <= "0" when (p_Result_i_i_reg_1159 = ap_const_lv8_9E) else "1";
    tmp_85_i_fu_490_p2 <= "1" when (tmp_fu_460_p1 = ap_const_lv63_0) else "0";
    tmp_87_i_fu_526_p2 <= "1" when (signed(F2_reg_1073) > signed(ap_const_lv12_10)) else "0";
    tmp_88_i_fu_531_p2 <= std_logic_vector(signed(ap_const_lv12_FF0) + signed(F2_reg_1073));
    tmp_89_i_fu_536_p2 <= std_logic_vector(unsigned(ap_const_lv12_10) - unsigned(F2_reg_1073));
    tmp_90_i_fu_553_p2 <= "1" when (F2_reg_1073 = ap_const_lv12_10) else "0";
    tmp_92_i_fu_562_p2 <= "1" when (unsigned(sh_amt_fu_541_p3) < unsigned(ap_const_lv12_36)) else "0";
    tmp_95_i_fu_584_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_amt_cast_i_fu_549_p1),54));
    tmp_96_i_fu_588_p2 <= std_logic_vector(shift_right(signed(man_V_2_fu_519_p3),to_integer(unsigned('0' & tmp_95_i_fu_584_p1(31-1 downto 0)))));
    tmp_98_i_fu_605_p2 <= std_logic_vector(shift_left(unsigned(tmp_75_fu_558_p1),to_integer(unsigned('0' & sh_amt_cast_i_fu_549_p1(31-1 downto 0)))));
    tmp_fu_460_p1 <= ireg_V_fu_456_p1(63 - 1 downto 0);
    tmp_i_82_fu_502_p3 <= (ap_const_lv1_1 & tmp_74_reg_1062);
    tmp_i_fu_482_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_V_fu_472_p4),12));
    tmp_i_i_83_fu_846_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(p_Val2_14_reg_327));
    tmp_i_i_fu_832_p2 <= "1" when (p_Val2_14_reg_327 = ap_const_lv32_0) else "0";
end behav;
