-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity HoughLinesProbabilis is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    edge_val_address0 : OUT STD_LOGIC_VECTOR (16 downto 0);
    edge_val_ce0 : OUT STD_LOGIC;
    edge_val_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    edge_rows_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    edge_rows_empty_n : IN STD_LOGIC;
    edge_rows_read : OUT STD_LOGIC;
    edge_cols_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    edge_cols_empty_n : IN STD_LOGIC;
    edge_cols_read : OUT STD_LOGIC;
    lines_val_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    lines_val_ce0 : OUT STD_LOGIC;
    lines_val_we0 : OUT STD_LOGIC;
    lines_val_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    lines_val_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    lines_val_ce1 : OUT STD_LOGIC;
    lines_val_we1 : OUT STD_LOGIC;
    lines_val_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    lines_rows_dout : IN STD_LOGIC_VECTOR (3 downto 0);
    lines_rows_empty_n : IN STD_LOGIC;
    lines_rows_read : OUT STD_LOGIC;
    lines_cols_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    lines_cols_empty_n : IN STD_LOGIC;
    lines_cols_read : OUT STD_LOGIC;
    threshold_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    threshold_empty_n : IN STD_LOGIC;
    threshold_read : OUT STD_LOGIC;
    lineGap_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    lineGap_empty_n : IN STD_LOGIC;
    lineGap_read : OUT STD_LOGIC;
    lines_rows_out_din : OUT STD_LOGIC_VECTOR (3 downto 0);
    lines_rows_out_full_n : IN STD_LOGIC;
    lines_rows_out_write : OUT STD_LOGIC;
    lines_cols_out_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    lines_cols_out_full_n : IN STD_LOGIC;
    lines_cols_out_write : OUT STD_LOGIC );
end;


architecture behav of HoughLinesProbabilis is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_pp3_stage0 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state70 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state71 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state72 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state73 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state74 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state75 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state76 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state77 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state78 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state79 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state80 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state81 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state82 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state83 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state84 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state85 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp4_stage0 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state96 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state97 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state98 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state99 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state100 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state101 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state102 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state103 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state104 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state105 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state106 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state107 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state108 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state109 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state110 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state111 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state112 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state113 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state114 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state115 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state116 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state117 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state118 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state119 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state120 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state121 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state122 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state123 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state124 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state125 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state126 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state127 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state128 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state129 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state130 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state131 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state132 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state133 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state134 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state135 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state136 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state137 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state138 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state139 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state140 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state141 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state142 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state143 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state144 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state145 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state146 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state147 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state148 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state149 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state150 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state151 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state152 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state153 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state154 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state155 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state156 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state157 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state158 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state159 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state160 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state161 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state162 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state163 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state164 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state165 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state166 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state167 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state168 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state169 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state170 : STD_LOGIC_VECTOR (158 downto 0) := "000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state171 : STD_LOGIC_VECTOR (158 downto 0) := "000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state172 : STD_LOGIC_VECTOR (158 downto 0) := "000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state173 : STD_LOGIC_VECTOR (158 downto 0) := "000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state174 : STD_LOGIC_VECTOR (158 downto 0) := "000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state175 : STD_LOGIC_VECTOR (158 downto 0) := "000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state176 : STD_LOGIC_VECTOR (158 downto 0) := "000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state177 : STD_LOGIC_VECTOR (158 downto 0) := "000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp6_stage0 : STD_LOGIC_VECTOR (158 downto 0) := "000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state188 : STD_LOGIC_VECTOR (158 downto 0) := "000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state189 : STD_LOGIC_VECTOR (158 downto 0) := "001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state190 : STD_LOGIC_VECTOR (158 downto 0) := "010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state191 : STD_LOGIC_VECTOR (158 downto 0) := "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_44 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000100";
    constant ap_const_lv32_45 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000101";
    constant ap_const_lv32_46 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000110";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv32_49 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001001";
    constant ap_const_lv32_4A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001010";
    constant ap_const_lv32_4B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001011";
    constant ap_const_lv32_4D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001101";
    constant ap_const_lv32_4E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001110";
    constant ap_const_lv32_90 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010000";
    constant ap_const_lv32_91 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010001";
    constant ap_const_lv32_92 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010010";
    constant ap_const_lv32_93 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010011";
    constant ap_const_lv32_94 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010100";
    constant ap_const_lv32_95 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010101";
    constant ap_const_lv32_96 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010110";
    constant ap_const_lv32_97 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010111";
    constant ap_const_lv32_98 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011000";
    constant ap_const_lv32_99 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011001";
    constant ap_const_lv32_9A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011010";
    constant ap_const_lv32_9B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011011";
    constant ap_const_lv32_9D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011101";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_6F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101111";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_9C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_9E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011110";
    constant ap_const_lv32_3C8EFA35 : STD_LOGIC_VECTOR (31 downto 0) := "00111100100011101111101000110101";
    constant ap_const_lv32_3FB8AA3B : STD_LOGIC_VECTOR (31 downto 0) := "00111111101110001010101000111011";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_4C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001100";
    constant ap_const_lv10_64 : STD_LOGIC_VECTOR (9 downto 0) := "0001100100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv18_461 : STD_LOGIC_VECTOR (17 downto 0) := "000000010001100001";
    constant ap_const_lv8_B4 : STD_LOGIC_VECTOR (7 downto 0) := "10110100";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv11_461 : STD_LOGIC_VECTOR (10 downto 0) := "10001100001";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_433 : STD_LOGIC_VECTOR (11 downto 0) := "010000110011";
    constant ap_const_lv12_E : STD_LOGIC_VECTOR (11 downto 0) := "000000001110";
    constant ap_const_lv12_FF2 : STD_LOGIC_VECTOR (11 downto 0) := "111111110010";
    constant ap_const_lv12_36 : STD_LOGIC_VECTOR (11 downto 0) := "000000110110";
    constant ap_const_lv12_FF0 : STD_LOGIC_VECTOR (11 downto 0) := "111111110000";
    constant ap_const_lv12_35 : STD_LOGIC_VECTOR (11 downto 0) := "000000110101";
    constant ap_const_lv9_B4 : STD_LOGIC_VECTOR (8 downto 0) := "010110100";
    constant ap_const_lv16_FFFF : STD_LOGIC_VECTOR (15 downto 0) := "1111111111111111";
    constant ap_const_lv12_FF1 : STD_LOGIC_VECTOR (11 downto 0) := "111111110001";
    constant ap_const_lv6_5 : STD_LOGIC_VECTOR (5 downto 0) := "000101";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv54_3FFFFFFFFFFFFF : STD_LOGIC_VECTOR (53 downto 0) := "111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv8_96 : STD_LOGIC_VECTOR (7 downto 0) := "10010110";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv23_7FFFFF : STD_LOGIC_VECTOR (22 downto 0) := "11111111111111111111111";
    constant ap_const_lv32_3F800000 : STD_LOGIC_VECTOR (31 downto 0) := "00111111100000000000000000000000";
    constant ap_const_lv9_181 : STD_LOGIC_VECTOR (8 downto 0) := "110000001";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv17_1FFFF : STD_LOGIC_VECTOR (16 downto 0) := "11111111111111111";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv31_1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_const_lv49_0 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv48_0 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000000000000000000000000000";
    constant ap_const_lv15_7FFF : STD_LOGIC_VECTOR (14 downto 0) := "111111111111111";
    constant ap_const_lv26_0 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000000000";
    constant ap_const_lv31_1F : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000011111";
    constant ap_const_lv6_21 : STD_LOGIC_VECTOR (5 downto 0) := "100001";
    constant ap_const_lv6_F : STD_LOGIC_VECTOR (5 downto 0) := "001111";
    constant ap_const_lv8_9E : STD_LOGIC_VECTOR (7 downto 0) := "10011110";
    constant ap_const_lv8_72 : STD_LOGIC_VECTOR (7 downto 0) := "01110010";
    constant ap_const_lv8_71 : STD_LOGIC_VECTOR (7 downto 0) := "01110001";
    constant ap_const_lv8_7E : STD_LOGIC_VECTOR (7 downto 0) := "01111110";
    constant ap_const_lv19_230 : STD_LOGIC_VECTOR (18 downto 0) := "0000000001000110000";
    constant ap_const_lv10_B4 : STD_LOGIC_VECTOR (9 downto 0) := "0010110100";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_E : STD_LOGIC_VECTOR (4 downto 0) := "01110";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv32_8000 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000001000000000000000";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv10_C8 : STD_LOGIC_VECTOR (9 downto 0) := "0011001000";
    constant ap_const_lv32_62 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100010";
    constant ap_const_lv10_12C : STD_LOGIC_VECTOR (9 downto 0) := "0100101100";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (158 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal mask_table1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal mask_table1_ce0 : STD_LOGIC;
    signal mask_table1_q0 : STD_LOGIC_VECTOR (22 downto 0);
    signal mask_table3_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal mask_table3_ce0 : STD_LOGIC;
    signal mask_table3_q0 : STD_LOGIC_VECTOR (22 downto 0);
    signal one_half_table4_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal one_half_table4_ce0 : STD_LOGIC;
    signal one_half_table4_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal edge_rows_blk_n : STD_LOGIC;
    signal edge_cols_blk_n : STD_LOGIC;
    signal lines_rows_blk_n : STD_LOGIC;
    signal lines_cols_blk_n : STD_LOGIC;
    signal threshold_blk_n : STD_LOGIC;
    signal lineGap_blk_n : STD_LOGIC;
    signal lines_rows_out_blk_n : STD_LOGIC;
    signal lines_cols_out_blk_n : STD_LOGIC;
    signal n4_i_reg_870 : STD_LOGIC_VECTOR (7 downto 0);
    signal n4_i_reg_870_pp2_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal ap_block_state8_pp2_stage0_iter0 : BOOLEAN;
    signal ap_block_state9_pp2_stage0_iter1 : BOOLEAN;
    signal ap_block_state10_pp2_stage0_iter2 : BOOLEAN;
    signal ap_block_state11_pp2_stage0_iter3 : BOOLEAN;
    signal ap_block_state12_pp2_stage0_iter4 : BOOLEAN;
    signal ap_block_state13_pp2_stage0_iter5 : BOOLEAN;
    signal ap_block_state14_pp2_stage0_iter6 : BOOLEAN;
    signal ap_block_state15_pp2_stage0_iter7 : BOOLEAN;
    signal ap_block_state16_pp2_stage0_iter8 : BOOLEAN;
    signal ap_block_state17_pp2_stage0_iter9 : BOOLEAN;
    signal ap_block_state18_pp2_stage0_iter10 : BOOLEAN;
    signal ap_block_state19_pp2_stage0_iter11 : BOOLEAN;
    signal ap_block_state20_pp2_stage0_iter12 : BOOLEAN;
    signal ap_block_state21_pp2_stage0_iter13 : BOOLEAN;
    signal ap_block_pp2_stage0_11001 : BOOLEAN;
    signal n4_i_reg_870_pp2_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal n4_i_reg_870_pp2_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal n4_i_reg_870_pp2_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal n4_i_reg_870_pp2_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal n4_i_reg_870_pp2_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal n4_i_reg_870_pp2_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal n4_i_reg_870_pp2_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal n4_i_reg_870_pp2_iter9_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal n4_i_reg_870_pp2_iter10_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal n4_i_reg_870_pp2_iter11_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal n4_i_reg_870_pp2_iter12_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_x_assign_reg_895 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_val1_i_reg_930 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_n_i_reg_940 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_n_reg_952 : STD_LOGIC_VECTOR (7 downto 0);
    signal max_n_reg_952_pp4_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_pp4_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp4_stage0 : signal is "none";
    signal ap_block_state86_pp4_stage0_iter0 : BOOLEAN;
    signal ap_block_state87_pp4_stage0_iter1 : BOOLEAN;
    signal ap_block_state88_pp4_stage0_iter2 : BOOLEAN;
    signal ap_block_state89_pp4_stage0_iter3 : BOOLEAN;
    signal ap_block_state90_pp4_stage0_iter4 : BOOLEAN;
    signal ap_block_state91_pp4_stage0_iter5 : BOOLEAN;
    signal ap_block_state92_pp4_stage0_iter6 : BOOLEAN;
    signal ap_block_state93_pp4_stage0_iter7 : BOOLEAN;
    signal ap_block_state94_pp4_stage0_iter8 : BOOLEAN;
    signal ap_block_state95_pp4_stage0_iter9 : BOOLEAN;
    signal ap_block_pp4_stage0_11001 : BOOLEAN;
    signal max_n_reg_952_pp4_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal max_n_reg_952_pp4_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal max_n_reg_952_pp4_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal max_n_reg_952_pp4_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal max_n_reg_952_pp4_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal max_n_reg_952_pp4_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal max_n_reg_952_pp4_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal phi_mul2_reg_964 : STD_LOGIC_VECTOR (17 downto 0);
    signal n5_i_reg_1163 : STD_LOGIC_VECTOR (7 downto 0);
    signal phi_mul3_reg_1174 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1275_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1295 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal exitcond5_i_reg_5302 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal grp_fu_1263_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1301 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp2_iter3 : STD_LOGIC := '0';
    signal exitcond5_i_reg_5302_pp2_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal ap_block_state1 : BOOLEAN;
    signal lines_rows_read_reg_5223 : STD_LOGIC_VECTOR (3 downto 0);
    signal lines_cols_read_reg_5228 : STD_LOGIC_VECTOR (7 downto 0);
    signal threshold_read_reg_5233 : STD_LOGIC_VECTOR (31 downto 0);
    signal lineGap_read_reg_5241 : STD_LOGIC_VECTOR (31 downto 0);
    signal rows_reg_5246 : STD_LOGIC_VECTOR (31 downto 0);
    signal cols_reg_5252 : STD_LOGIC_VECTOR (31 downto 0);
    signal next_mul_fu_1307_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal next_mul_reg_5258 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_i_fu_1317_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_1322_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_reg_5267 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_fu_1337_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal next_mul1_fu_1358_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal next_mul1_reg_5280 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal exitcond3_i_fu_1364_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal n_fu_1370_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal n_reg_5289 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_fu_1382_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal exitcond5_i_fu_1403_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond5_i_reg_5302_pp2_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond5_i_reg_5302_pp2_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond5_i_reg_5302_pp2_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond5_i_reg_5302_pp2_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond5_i_reg_5302_pp2_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond5_i_reg_5302_pp2_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond5_i_reg_5302_pp2_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond5_i_reg_5302_pp2_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond5_i_reg_5302_pp2_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond5_i_reg_5302_pp2_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond5_i_reg_5302_pp2_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal n_2_fu_1409_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal n_2_reg_5306 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal n4_cast84_i_fu_1415_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sin_or_cos_float_s_fu_1228_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal v_assign_reg_5316 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sin_or_cos_float_s_fu_1243_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal v_assign_1_reg_5321 : STD_LOGIC_VECTOR (31 downto 0);
    signal isneg_reg_5326 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_123_fu_1462_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal p_Result_123_reg_5334 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_1_fu_1466_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_1_reg_5339 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_98_i_fu_1472_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_98_i_reg_5344 : STD_LOGIC_VECTOR (0 downto 0);
    signal F2_fu_1478_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_reg_5350 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_107_i_fu_1484_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_107_i_reg_5356 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_amt_fu_1502_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_reg_5362 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_fu_1520_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_5369 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_130_i_fu_1526_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_130_i_reg_5374 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp1_fu_1542_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp1_reg_5379 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_128_fu_1548_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_128_reg_5384 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_147_i_fu_1558_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_147_i_reg_5389 : STD_LOGIC_VECTOR (0 downto 0);
    signal isneg_1_reg_5394 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_124_fu_1606_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal p_Result_124_reg_5402 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_3_fu_1610_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_3_reg_5407 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_157_i_fu_1616_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_157_i_reg_5412 : STD_LOGIC_VECTOR (0 downto 0);
    signal F2_1_fu_1622_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_1_reg_5418 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_164_i_fu_1628_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_164_i_reg_5424 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_amt_1_fu_1646_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_1_reg_5430 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp2_fu_1664_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp2_reg_5437 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_193_i_fu_1670_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_193_i_reg_5442 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp3_fu_1686_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp3_reg_5447 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_141_fu_1692_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_141_reg_5452 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_214_i_fu_1702_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_214_i_reg_5457 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond1_i_fu_2167_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal i_1_fu_2172_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_1_reg_5473 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_34_fu_2202_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_34_reg_5478 : STD_LOGIC_VECTOR (17 downto 0);
    signal exitcond2_i_fu_2213_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond2_i_reg_5495 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp3_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp3_stage0 : signal is "none";
    signal ap_block_state24_pp3_stage0_iter0 : BOOLEAN;
    signal ap_block_state25_pp3_stage0_iter1 : BOOLEAN;
    signal ap_block_pp3_stage0_11001 : BOOLEAN;
    signal j_2_fu_2218_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_2_reg_5499 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp3_iter0 : STD_LOGIC := '0';
    signal mask_val_addr_reg_5509 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_log_generic_float_s_fu_1213_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i_i_i_reg_5517 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal p_Result_61_reg_5522 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal loc_V_reg_5531 : STD_LOGIC_VECTOR (7 downto 0);
    signal loc_V_4_fu_2284_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal loc_V_4_reg_5539 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_148_fu_2303_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_148_reg_5550 : STD_LOGIC_VECTOR (30 downto 0);
    signal x_assign_7_fu_2471_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_7_reg_5555 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal M_fu_2622_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal M_reg_5560 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal grp_sqrt_fixed_32_32_s_fu_1258_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_i_i_i_reg_5567 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state46 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state46 : signal is "none";
    signal tmp_155_fu_2628_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_155_reg_5572 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_i_cast_fu_2648_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_i_cast_reg_5577 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state47 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state47 : signal is "none";
    signal max_val_fu_2652_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_val_reg_5582 : STD_LOGIC_VECTOR (31 downto 0);
    signal total_1_load_reg_5607 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state48 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state48 : signal is "none";
    signal cnt_fu_2666_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal cnt_reg_5616 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_112_i_fu_2661_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_2677_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal idx_reg_5626 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state83 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state83 : signal is "none";
    signal tmp_115_i_fu_2682_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_115_i_reg_5631 : STD_LOGIC_VECTOR (0 downto 0);
    signal pt_buf_val_x_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_3_reg_5645 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state84 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state84 : signal is "none";
    signal pt_buf_val_y_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_3_reg_5652 : STD_LOGIC_VECTOR (31 downto 0);
    signal mask_val_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state85 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state85 : signal is "none";
    signal OP1_V_fu_2739_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal OP1_V_reg_5668 : STD_LOGIC_VECTOR (47 downto 0);
    signal OP1_V_4_fu_2742_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal OP1_V_4_reg_5673 : STD_LOGIC_VECTOR (47 downto 0);
    signal phi_mul240_cast_fu_2745_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal phi_mul240_cast_reg_5678 : STD_LOGIC_VECTOR (18 downto 0);
    signal phi_mul240_cast_reg_5678_pp4_iter1_reg : STD_LOGIC_VECTOR (18 downto 0);
    signal phi_mul240_cast_reg_5678_pp4_iter2_reg : STD_LOGIC_VECTOR (18 downto 0);
    signal phi_mul240_cast_reg_5678_pp4_iter3_reg : STD_LOGIC_VECTOR (18 downto 0);
    signal phi_mul240_cast_reg_5678_pp4_iter4_reg : STD_LOGIC_VECTOR (18 downto 0);
    signal phi_mul240_cast_reg_5678_pp4_iter5_reg : STD_LOGIC_VECTOR (18 downto 0);
    signal phi_mul240_cast_reg_5678_pp4_iter6_reg : STD_LOGIC_VECTOR (18 downto 0);
    signal phi_mul240_cast_reg_5678_pp4_iter7_reg : STD_LOGIC_VECTOR (18 downto 0);
    signal exitcond6_i_fu_2749_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond6_i_reg_5683 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond6_i_reg_5683_pp4_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond6_i_reg_5683_pp4_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond6_i_reg_5683_pp4_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond6_i_reg_5683_pp4_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond6_i_reg_5683_pp4_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond6_i_reg_5683_pp4_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond6_i_reg_5683_pp4_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond6_i_reg_5683_pp4_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal n_1_fu_2755_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal n_1_reg_5687 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp4_iter0 : STD_LOGIC := '0';
    signal next_mul2_fu_2770_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_100_fu_2791_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_100_reg_5707 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_23_fu_2800_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_23_reg_5713 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_138_i_fu_2821_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_138_i_reg_5719 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_138_i_reg_5719_pp4_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_138_i_reg_5719_pp4_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_138_i_reg_5719_pp4_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal is_neg_fu_2827_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal is_neg_reg_5724 : STD_LOGIC_VECTOR (0 downto 0);
    signal is_neg_reg_5724_pp4_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal is_neg_reg_5724_pp4_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal is_neg_reg_5724_pp4_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_103_fu_2841_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_103_reg_5729 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_42_cast_i_fu_2849_p1 : STD_LOGIC_VECTOR (48 downto 0);
    signal p_Val2_42_cast_i_reg_5734 : STD_LOGIC_VECTOR (48 downto 0);
    signal num_zeros_fu_2879_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal num_zeros_reg_5740 : STD_LOGIC_VECTOR (31 downto 0);
    signal msb_idx_fu_2883_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal msb_idx_reg_5745 : STD_LOGIC_VECTOR (31 downto 0);
    signal msb_idx_reg_5745_pp4_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal msb_idx_reg_5745_pp4_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_6_fu_3003_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_6_reg_5750 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_24_fu_3011_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_24_reg_5755 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_24_i_reg_5760 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_assign_8_fu_3069_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_8_reg_5765 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_V_10_fu_3076_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_V_10_reg_5770 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i_i_390_fu_3090_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_390_reg_5776 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_273_i_i_fu_3096_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_273_i_i_reg_5782 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_135_reg_5797 : STD_LOGIC_VECTOR (0 downto 0);
    signal loc_V_12_fu_3226_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal loc_V_12_reg_5802 : STD_LOGIC_VECTOR (22 downto 0);
    signal isNeg_1_fu_3240_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal isNeg_1_reg_5807 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_assign_3_fu_3258_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_assign_3_reg_5812 : STD_LOGIC_VECTOR (8 downto 0);
    signal accum_addr_1_reg_5818 : STD_LOGIC_VECTOR (17 downto 0);
    signal val_0_max_val_i_fu_3384_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp4_iter9 : STD_LOGIC := '0';
    signal n7_0_max_n_i_fu_3392_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state96 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state96 : signal is "none";
    signal tmp_134_i_fu_3400_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trigtab_V_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_s_reg_5847 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state97 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state97 : signal is "none";
    signal trigtab_V_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_121_reg_5854 : STD_LOGIC_VECTOR (15 downto 0);
    signal is_neg_2_reg_5863 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_118_fu_3433_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_118_reg_5869 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state98 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state98 : signal is "none";
    signal tmp_141_i_fu_3438_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_141_i_reg_5875 : STD_LOGIC_VECTOR (0 downto 0);
    signal is_neg_1_fu_3443_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal is_neg_1_reg_5880 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_fu_3451_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_V_reg_5885 : STD_LOGIC_VECTOR (15 downto 0);
    signal msb_idx_2_fu_3484_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal msb_idx_2_reg_5890 : STD_LOGIC_VECTOR (31 downto 0);
    signal msb_idx_3_fu_3502_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal msb_idx_3_reg_5895 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp5_fu_3520_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp5_reg_5900 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_97_fu_3588_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_97_reg_5905 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_123_fu_3601_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_123_reg_5910 : STD_LOGIC_VECTOR (15 downto 0);
    signal msb_idx_4_fu_3633_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal msb_idx_4_reg_5915 : STD_LOGIC_VECTOR (31 downto 0);
    signal msb_idx_5_fu_3651_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal msb_idx_5_reg_5920 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp6_fu_3669_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp6_reg_5925 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_102_fu_3737_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_102_reg_5930 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp32_V_9_fu_3766_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_9_reg_5935 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state99 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state99 : signal is "none";
    signal tmp_178_i_fu_3773_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_178_i_reg_5940 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp32_V_15_fu_3799_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_15_reg_5945 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_25_fu_3806_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_25_reg_5950 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state101 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state101 : signal is "none";
    signal p_Result_26_i_reg_5955 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp32_V_26_fu_3820_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_26_reg_5960 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_32_i_reg_5965 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_25_fu_4032_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_reg_5970 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state102 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state102 : signal is "none";
    signal exitcond7_i_fu_4112_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state168 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state168 : signal is "none";
    signal k_fu_4118_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal k_reg_5998 : STD_LOGIC_VECTOR (1 downto 0);
    signal line_end_y_addr_reg_6003 : STD_LOGIC_VECTOR (0 downto 0);
    signal line_end_x_addr_reg_6008 : STD_LOGIC_VECTOR (0 downto 0);
    signal i1_2_fu_4158_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal i1_2_reg_6013 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state169 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state169 : signal is "none";
    signal j1_2_fu_4166_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal j1_2_reg_6018 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_cond1_i_fu_4210_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_i_reg_6023 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_1_fu_4273_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state170 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state170 : signal is "none";
    signal tmp_241_i_fu_4268_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_1_fu_4279_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal dx0_1_fu_4285_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state171 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state171 : signal is "none";
    signal dy0_1_fu_4291_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal line_end_x_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal line_end_x_load_1_reg_6058 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state172 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state172 : signal is "none";
    signal line_end_x_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal line_end_x_load_2_reg_6063 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_220_i_fu_4323_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_220_i_reg_6068 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_224_i_fu_4354_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_224_i_reg_6072 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state173 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state173 : signal is "none";
    signal k_1_fu_4365_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal k_1_reg_6079 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state174 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state174 : signal is "none";
    signal exitcond8_i_fu_4359_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_233_fu_4391_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_233_reg_6094 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_239_i_fu_4410_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_239_i_reg_6100 : STD_LOGIC_VECTOR (0 downto 0);
    signal line_end_y_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal line_end_y_load_reg_6104 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state175 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state175 : signal is "none";
    signal line_end_x_load_reg_6109 : STD_LOGIC_VECTOR (31 downto 0);
    signal i1_5_fu_4449_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal i1_5_reg_6114 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state176 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state176 : signal is "none";
    signal j1_5_fu_4457_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal j1_5_reg_6120 : STD_LOGIC_VECTOR (31 downto 0);
    signal mask_val_addr_3_reg_6126 : STD_LOGIC_VECTOR (16 downto 0);
    signal mask_val_load_2_reg_6131 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state177 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state177 : signal is "none";
    signal OP1_V_5_fu_4510_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal OP1_V_5_reg_6135 : STD_LOGIC_VECTOR (47 downto 0);
    signal OP1_V_6_fu_4513_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal OP1_V_6_reg_6140 : STD_LOGIC_VECTOR (47 downto 0);
    signal phi_mul242_cast_fu_4516_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal phi_mul242_cast_reg_6145 : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_CS_fsm_pp6_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp6_stage0 : signal is "none";
    signal ap_block_state178_pp6_stage0_iter0 : BOOLEAN;
    signal ap_block_state179_pp6_stage0_iter1 : BOOLEAN;
    signal ap_block_state180_pp6_stage0_iter2 : BOOLEAN;
    signal ap_block_state181_pp6_stage0_iter3 : BOOLEAN;
    signal ap_block_state182_pp6_stage0_iter4 : BOOLEAN;
    signal ap_block_state183_pp6_stage0_iter5 : BOOLEAN;
    signal ap_block_state184_pp6_stage0_iter6 : BOOLEAN;
    signal ap_block_state185_pp6_stage0_iter7 : BOOLEAN;
    signal ap_block_state186_pp6_stage0_iter8 : BOOLEAN;
    signal ap_block_state187_pp6_stage0_iter9 : BOOLEAN;
    signal ap_block_pp6_stage0_11001 : BOOLEAN;
    signal phi_mul242_cast_reg_6145_pp6_iter1_reg : STD_LOGIC_VECTOR (18 downto 0);
    signal phi_mul242_cast_reg_6145_pp6_iter2_reg : STD_LOGIC_VECTOR (18 downto 0);
    signal phi_mul242_cast_reg_6145_pp6_iter3_reg : STD_LOGIC_VECTOR (18 downto 0);
    signal phi_mul242_cast_reg_6145_pp6_iter4_reg : STD_LOGIC_VECTOR (18 downto 0);
    signal phi_mul242_cast_reg_6145_pp6_iter5_reg : STD_LOGIC_VECTOR (18 downto 0);
    signal phi_mul242_cast_reg_6145_pp6_iter6_reg : STD_LOGIC_VECTOR (18 downto 0);
    signal phi_mul242_cast_reg_6145_pp6_iter7_reg : STD_LOGIC_VECTOR (18 downto 0);
    signal exitcond_i_fu_4520_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_6150 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_6150_pp6_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_6150_pp6_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_6150_pp6_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_6150_pp6_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_6150_pp6_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_6150_pp6_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_6150_pp6_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_6150_pp6_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal n_3_fu_4526_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp6_iter0 : STD_LOGIC := '0';
    signal next_mul3_fu_4541_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_125_fu_4562_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_125_reg_6174 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_24_fu_4571_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_24_reg_6180 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_253_i_fu_4592_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_253_i_reg_6186 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_253_i_reg_6186_pp6_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_253_i_reg_6186_pp6_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_253_i_reg_6186_pp6_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal is_neg_3_fu_4598_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal is_neg_3_reg_6191 : STD_LOGIC_VECTOR (0 downto 0);
    signal is_neg_3_reg_6191_pp6_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal is_neg_3_reg_6191_pp6_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal is_neg_3_reg_6191_pp6_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_128_fu_4612_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_128_reg_6196 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_62_cast_i_fu_4620_p1 : STD_LOGIC_VECTOR (48 downto 0);
    signal p_Val2_62_cast_i_reg_6201 : STD_LOGIC_VECTOR (48 downto 0);
    signal num_zeros_3_fu_4650_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal num_zeros_3_reg_6207 : STD_LOGIC_VECTOR (31 downto 0);
    signal msb_idx_6_fu_4654_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal msb_idx_6_reg_6212 : STD_LOGIC_VECTOR (31 downto 0);
    signal msb_idx_6_reg_6212_pp6_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal msb_idx_6_reg_6212_pp6_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_21_fu_4774_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_21_reg_6217 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_27_fu_4782_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_27_reg_6222 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_40_i_reg_6227 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_assign_s_fu_4840_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_s_reg_6232 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_V_18_fu_4847_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_V_18_reg_6237 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i_i1_fu_4861_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i1_reg_6243 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_273_i_i1_fu_4867_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_273_i_i1_reg_6249 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_149_reg_6264 : STD_LOGIC_VECTOR (0 downto 0);
    signal loc_V_16_fu_4997_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal loc_V_16_reg_6269 : STD_LOGIC_VECTOR (22 downto 0);
    signal isNeg_2_fu_5011_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal isNeg_2_reg_6274 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_assign_5_fu_5029_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_assign_5_reg_6279 : STD_LOGIC_VECTOR (8 downto 0);
    signal accum_addr_2_reg_6285 : STD_LOGIC_VECTOR (17 downto 0);
    signal x_2_fu_5159_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state188 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state188 : signal is "none";
    signal or_cond2_i_fu_5153_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_2_fu_5165_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal dx0_2_fu_5171_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal dy0_2_fu_5177_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state190 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state190 : signal is "none";
    signal ap_block_pp2_stage0_subdone : BOOLEAN;
    signal ap_condition_pp2_exit_iter0_state8 : STD_LOGIC;
    signal ap_enable_reg_pp2_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter13 : STD_LOGIC := '0';
    signal ap_block_pp3_stage0_subdone : BOOLEAN;
    signal ap_condition_pp3_exit_iter0_state24 : STD_LOGIC;
    signal ap_enable_reg_pp3_iter1 : STD_LOGIC := '0';
    signal ap_block_pp4_stage0_subdone : BOOLEAN;
    signal ap_condition_pp4_exit_iter0_state86 : STD_LOGIC;
    signal ap_enable_reg_pp4_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp4_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp4_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp4_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp4_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp4_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp4_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp4_iter8 : STD_LOGIC := '0';
    signal ap_block_pp6_stage0_subdone : BOOLEAN;
    signal ap_condition_pp6_exit_iter0_state178 : STD_LOGIC;
    signal ap_enable_reg_pp6_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp6_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp6_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp6_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp6_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp6_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp6_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp6_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp6_iter9 : STD_LOGIC := '0';
    signal accum_address0 : STD_LOGIC_VECTOR (17 downto 0);
    signal accum_ce0 : STD_LOGIC;
    signal accum_we0 : STD_LOGIC;
    signal accum_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal accum_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal accum_address1 : STD_LOGIC_VECTOR (17 downto 0);
    signal accum_ce1 : STD_LOGIC;
    signal accum_we1 : STD_LOGIC;
    signal accum_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mask_val_address0 : STD_LOGIC_VECTOR (16 downto 0);
    signal mask_val_ce0 : STD_LOGIC;
    signal mask_val_we0 : STD_LOGIC;
    signal mask_val_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal trigtab_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal trigtab_V_ce0 : STD_LOGIC;
    signal trigtab_V_we0 : STD_LOGIC;
    signal trigtab_V_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal trigtab_V_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal trigtab_V_ce1 : STD_LOGIC;
    signal trigtab_V_we1 : STD_LOGIC;
    signal trigtab_V_d1 : STD_LOGIC_VECTOR (15 downto 0);
    signal pt_buf_val_x_address0 : STD_LOGIC_VECTOR (16 downto 0);
    signal pt_buf_val_x_ce0 : STD_LOGIC;
    signal pt_buf_val_x_we0 : STD_LOGIC;
    signal pt_buf_val_y_address0 : STD_LOGIC_VECTOR (16 downto 0);
    signal pt_buf_val_y_ce0 : STD_LOGIC;
    signal pt_buf_val_y_we0 : STD_LOGIC;
    signal line_end_x_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal line_end_x_ce0 : STD_LOGIC;
    signal line_end_x_we0 : STD_LOGIC;
    signal line_end_x_address1 : STD_LOGIC_VECTOR (0 downto 0);
    signal line_end_x_ce1 : STD_LOGIC;
    signal line_end_y_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal line_end_y_ce0 : STD_LOGIC;
    signal line_end_y_we0 : STD_LOGIC;
    signal line_end_y_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal line_end_y_address1 : STD_LOGIC_VECTOR (0 downto 0);
    signal line_end_y_ce1 : STD_LOGIC;
    signal grp_log_generic_float_s_fu_1213_ap_start : STD_LOGIC;
    signal grp_log_generic_float_s_fu_1213_ap_done : STD_LOGIC;
    signal grp_log_generic_float_s_fu_1213_ap_idle : STD_LOGIC;
    signal grp_log_generic_float_s_fu_1213_ap_ready : STD_LOGIC;
    signal grp_sin_or_cos_float_s_fu_1228_ap_start : STD_LOGIC;
    signal grp_sin_or_cos_float_s_fu_1228_ap_done : STD_LOGIC;
    signal grp_sin_or_cos_float_s_fu_1228_ap_idle : STD_LOGIC;
    signal grp_sin_or_cos_float_s_fu_1228_ap_ready : STD_LOGIC;
    signal grp_sin_or_cos_float_s_fu_1228_do_cos : STD_LOGIC;
    signal grp_sin_or_cos_float_s_fu_1243_ap_start : STD_LOGIC;
    signal grp_sin_or_cos_float_s_fu_1243_ap_done : STD_LOGIC;
    signal grp_sin_or_cos_float_s_fu_1243_ap_idle : STD_LOGIC;
    signal grp_sin_or_cos_float_s_fu_1243_ap_ready : STD_LOGIC;
    signal grp_sin_or_cos_float_s_fu_1243_do_cos : STD_LOGIC;
    signal i_0_i_i_reg_802 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal phi_mul_reg_813 : STD_LOGIC_VECTOR (9 downto 0);
    signal j_0_i_i_reg_825 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_91_i_fu_1332_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal n_i_reg_836 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal phi_mul1_reg_847 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_i_reg_859 : STD_LOGIC_VECTOR (10 downto 0);
    signal exitcond4_i_fu_1376_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_n4_i_phi_fu_874_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp2_stage0 : BOOLEAN;
    signal p_y_assign_reg_882 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal ap_phi_mux_p_x_assign_phi_fu_900_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp3_stage0 : BOOLEAN;
    signal idx_i_reg_908 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_p_1_i_phi_fu_1190_p8 : STD_LOGIC_VECTOR (0 downto 0);
    signal cnt_i_reg_919 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_phi_mux_max_n_phi_fu_956_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp4_stage0 : BOOLEAN;
    signal x0_1_fu_4105_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_reg_975 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state135 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state135 : signal is "none";
    signal y_reg_985 : STD_LOGIC_VECTOR (31 downto 0);
    signal y0_1_fu_4084_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal dx0_fu_4091_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_dx_i_phi_fu_998_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_dy_i_phi_fu_1009_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal dy0_fu_4070_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal xflag_i_reg_1017 : STD_LOGIC_VECTOR (0 downto 0);
    signal dx0_1_i_reg_1029 : STD_LOGIC_VECTOR (31 downto 0);
    signal dy0_1_i_reg_1040 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_i_reg_1051 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_mux_gap_1_i_phi_fu_1100_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal gap_i_reg_1062 : STD_LOGIC_VECTOR (31 downto 0);
    signal j1_1_reg_1074 : STD_LOGIC_VECTOR (31 downto 0);
    signal i1_reg_1085 : STD_LOGIC_VECTOR (31 downto 0);
    signal gap_fu_4261_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal dx0_2_i_reg_1108 : STD_LOGIC_VECTOR (31 downto 0);
    signal dy0_2_i_reg_1119 : STD_LOGIC_VECTOR (31 downto 0);
    signal k1_i_reg_1130 : STD_LOGIC_VECTOR (1 downto 0);
    signal j1_4_reg_1141 : STD_LOGIC_VECTOR (31 downto 0);
    signal i1_3_reg_1152 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_1_i_reg_1185 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state189 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state189 : signal is "none";
    signal total_5_i_reg_1204 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_log_generic_float_s_fu_1213_ap_start_reg : STD_LOGIC := '0';
    signal ap_NS_fsm : STD_LOGIC_VECTOR (158 downto 0);
    signal ap_NS_fsm_state28 : STD_LOGIC;
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal grp_sin_or_cos_float_s_fu_1228_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_or_cos_float_s_fu_1243_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state42 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal tmp_29_cast_fu_1353_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_32_cast_fu_1398_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_95_i_fu_1708_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_31_cast_fu_1723_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_40_cast_fu_2233_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_i_i_fu_2251_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_117_i_fu_2239_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_i_fu_2298_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_121_i_fu_2688_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_44_cast_fu_2734_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_46_cast_fu_2782_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_135_i_fu_2761_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_274_i_i_fu_3112_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_51_cast_fu_3362_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_52_cast_fu_3420_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_140_i_fu_3405_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_221_i_fu_4124_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_58_cast_fu_4256_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_240_i_fu_4371_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_235_i_fu_4386_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_60_cast_fu_4401_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_65_cast_fu_4505_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_67_cast_fu_4553_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp6_stage0 : BOOLEAN;
    signal tmp_250_i_fu_4532_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_274_i_i1_fu_4883_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_72_cast_fu_5133_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_59_cast_fu_5188_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_61_cast_fu_5198_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal pt_buf_length_i_fu_376 : STD_LOGIC_VECTOR (31 downto 0);
    signal pt_buf_length_fu_2245_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal total_1_fu_380 : STD_LOGIC_VECTOR (31 downto 0);
    signal total_fu_4377_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_232_fu_4382_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_235_fu_4406_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_234_fu_5203_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_236_fu_5208_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state191 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state191 : signal is "none";
    signal tmp_240_fu_5213_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal max_val_2_fu_3371_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_269_i_fu_5138_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1263_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1263_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal grp_fu_1269_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state100 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state100 : signal is "none";
    signal grp_fu_1275_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_24_fu_1284_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_24_fu_1284_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_0_i_cast_cast_i_fu_1313_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal j_0_i_cast_cast_i_fu_1328_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_93_i_cast_fu_1343_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_29_fu_1347_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_111_i_cast_fu_1388_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_s_fu_1392_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal d_assign_3_fu_1278_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ireg_V_fu_1420_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_tmp_V_fu_1436_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_122_fu_1450_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_83_i_fu_1454_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal tmp_fu_1424_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_96_i_fu_1446_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_108_i_fu_1490_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_109_i_fu_1496_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_124_fu_1510_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_127_fu_1532_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_146_i_fu_1552_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal d_assign_fu_1281_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ireg_V_1_fu_1564_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_tmp_V_1_fu_1580_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_135_fu_1594_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_87_i_fu_1598_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal tmp_133_fu_1568_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_155_i_fu_1590_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_165_i_fu_1634_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_166_i_fu_1640_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_137_fu_1654_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_140_fu_1676_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_213_i_fu_1696_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_95_i_cast_fu_1713_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_31_fu_1717_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal man_V_5_fu_1728_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal sh_amt_cast_i_fu_1736_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_124_i_fu_1753_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_125_i_fu_1757_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_123_fu_1744_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sh_amt_cast83_i_fu_1733_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_118_i_fu_1748_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_125_fu_1763_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal storemerge1_i_fu_1767_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_131_i_fu_1788_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_131_cast_i_fu_1793_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_126_fu_1797_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_146_cast_i_op_fu_1811_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_129_fu_1816_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_130_fu_1823_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_131_fu_1827_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal p_Result_s_fu_1833_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_149_i_fu_1839_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_1_fu_1845_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_r_i_i_i1_i_fu_1850_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal qb_fu_1805_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal qb_assign_1_fu_1855_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_150_i_fu_1861_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_61_fu_1780_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_110_i_fu_1739_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_fu_1871_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_demorgan_fu_1882_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_fu_1887_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp13_demorgan_fu_1898_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_fu_1903_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_fu_1909_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_128_i_fu_1774_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_62_fu_1865_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sel_tmp7_fu_1893_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_fu_1876_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_fu_1922_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel_fu_1914_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal newSel1_fu_1928_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal man_V_fu_1945_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal sh_amt_1_cast_i_fu_1953_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_185_i_fu_1970_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_186_i_fu_1974_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_136_fu_1961_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sh_amt_1_cast82_i_fu_1950_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_179_i_fu_1965_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_138_fu_1980_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal storemerge_i_fu_1984_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_199_i_fu_2005_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_199_cast_i_fu_2010_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_139_fu_2014_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_213_cast_i_op_fu_2028_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_142_fu_2033_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_143_fu_2040_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_144_fu_2044_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal p_Result_54_fu_2050_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_216_i_fu_2056_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_2_fu_2062_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_r_i_i_i_i_fu_2067_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal qb_1_fu_2022_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal qb_assign_3_fu_2072_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_217_i_fu_2078_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_68_fu_1997_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_167_i_fu_1956_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp4_fu_2088_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp25_demorgan_fu_2099_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_fu_2104_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp32_demorgan_fu_2115_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp10_fu_2120_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp11_fu_2126_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_189_i_fu_1991_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_70_fu_2082_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sel_tmp9_fu_2110_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp5_fu_2093_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_fu_2139_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel3_fu_2131_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal newSel4_fu_2145_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_156_fu_2178_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_157_fu_2190_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl_cast_fu_2182_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_shl1_cast_fu_2194_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_158_fu_2224_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_35_fu_2228_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal pt_buf_length_fu_2245_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i_i_fu_2251_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_78_fu_2262_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal index_V_fu_2288_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_45_i_fu_2317_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_46_i_fu_2322_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_125_fu_2337_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_126_fu_2348_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal mask_cast_i_fu_2333_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_83_fu_2355_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal loc_V_6_fu_2379_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal loc_V_5_fu_2369_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_127_fu_2361_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xs_sig_V_1_fu_2383_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_48_i_fu_2400_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal xs_sign_V_fu_2395_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xs_exp_V_fu_2389_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal xs_sig_V_fu_2406_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Result_128_fu_2412_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_cond_i_fu_2327_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_i_fu_2426_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i1_fu_2307_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_i_fu_2431_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_i_i_i_i_fu_2344_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i1_389_fu_2312_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp5_demorgan_i_fu_2445_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_i_fu_2437_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_i_i_i_fu_2422_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp7_i_fu_2459_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_i_fu_2465_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_i_fu_2451_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_91_fu_2479_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal loc_V_8_fu_2500_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_293_i_i_i_i_fu_2504_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal loc_V_7_fu_2490_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_i_i_i_i_cast_i_fu_2518_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_assign_fu_2522_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_294_i_i_i_i_fu_2536_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal isNeg_fu_2528_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_294_i_i_i_cast_i_fu_2542_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_assign_1_fu_2546_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_assign_2_i_i_i_ca_fu_2554_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sh_assign_2_i_i_i_ca_1_fu_2558_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_293_i_i_i_cast_fu_2514_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_295_i_i_i_i_fu_2562_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_296_i_i_i_i_fu_2566_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_154_fu_2578_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_297_i_i_i_i_fu_2572_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_32_fu_2586_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_33_fu_2590_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_96_fu_2600_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_129_fu_2482_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_i_i_i_i_fu_2608_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_99_fu_2614_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_cast_fu_2632_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal step_fu_2635_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_i_fu_2641_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal cnt_i_cast_fu_2657_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2677_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_159_fu_2694_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_160_fu_2698_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_160_fu_2698_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_161_fu_2710_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_161_fu_2710_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl2_cast_fu_2702_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_shl3_cast_fu_2714_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_159_fu_2694_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_36_fu_2722_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_37_fu_2728_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_135_i_cast_fu_2766_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_38_fu_2776_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_100_fu_2791_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_100_fu_2791_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_23_fu_2800_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_23_fu_2800_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_137_i_fu_2808_p1 : STD_LOGIC_VECTOR (48 downto 0);
    signal tmp_136_i_fu_2805_p1 : STD_LOGIC_VECTOR (48 downto 0);
    signal p_Val2_101_fu_2811_p2 : STD_LOGIC_VECTOR (48 downto 0);
    signal p_Val2_37_cast_i_fu_2817_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_142_cast_i_fu_2835_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Result_130_fu_2853_p4 : STD_LOGIC_VECTOR (48 downto 0);
    signal p_Result_131_fu_2863_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_143_i_fu_2871_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_165_fu_2892_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_164_fu_2888_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal msb_idx_1_fu_2900_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_166_fu_2908_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_153_i_fu_2927_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp32_V_fu_2924_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_153_cast_i_fu_2933_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_168_fu_2943_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_169_fu_2947_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_171_fu_2959_p4 : STD_LOGIC_VECTOR (48 downto 0);
    signal tmp_172_fu_2968_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_170_fu_2953_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_174_fu_2981_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_173_fu_2974_p3 : STD_LOGIC_VECTOR (48 downto 0);
    signal tmp_175_fu_2989_p1 : STD_LOGIC_VECTOR (48 downto 0);
    signal tmp_176_fu_2993_p2 : STD_LOGIC_VECTOR (48 downto 0);
    signal icmp4_fu_2918_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp32_V_1_fu_2937_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_2_fu_2999_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1269_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_160_i_fu_3025_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_178_fu_3030_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_cast_cast_fu_3033_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Repl2_19_trunc_i_fu_3041_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_162_i_fu_3047_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_132_fu_3054_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal f_fu_3065_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal loc_V_9_fu_3080_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal index_V_3_fu_3102_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_Result_85_fu_3118_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal one_half_i_cast_i_fu_3133_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_113_fu_3137_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal loc_V_10_fu_3142_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_276_i_i_fu_3146_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_12_fu_3158_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal xs_sig_V_4_fu_3152_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Result_133_fu_3125_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_134_fu_3168_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp_v_i_fu_3176_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp1_i1_fu_3187_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_i1_fu_3192_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_i1_fu_3183_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_9_fu_3197_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_115_fu_3204_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal loc_V_11_fu_3216_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_i_i_i_i9_cast_i_fu_3230_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_assign_2_fu_3234_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_294_i_i_i12_i_fu_3248_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_294_i_i_i12_cast_fu_3254_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_293_i_i_i8_i_fu_3266_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal sh_assign_2_i_i_i13_s_fu_3279_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sh_assign_2_i_i_i13_1_fu_3282_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_293_i_i_i8_cast7_fu_3275_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_295_i_i_i14_i_fu_3285_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_296_i_i_i15_i_fu_3289_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_184_fu_3301_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_297_i_i_i16_i_fu_3295_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_39_fu_3309_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_40_fu_3313_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_117_fu_3323_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_i_i_i22_i_fu_3330_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_185_fu_3336_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_186_fu_3340_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_187_fu_3344_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_188_fu_3351_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_41_fu_3357_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_175_i_fu_3378_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal max_n_1_cast79_i_fu_3367_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_189_fu_3410_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_42_fu_3414_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal is_neg_2_fu_3425_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_136_fu_3458_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_137_fu_3468_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal num_zeros_1_fu_3476_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_192_fu_3494_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_191_fu_3490_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_193_fu_3510_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_194_fu_3526_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_195_fu_3530_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_197_fu_3542_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_198_fu_3552_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_196_fu_3536_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_200_fu_3566_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_199_fu_3558_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_201_fu_3574_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_202_fu_3578_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_203_fu_3584_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_182_i_fu_3596_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_140_fu_3607_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_141_fu_3617_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal num_zeros_2_fu_3625_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_210_fu_3643_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_209_fu_3639_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_211_fu_3659_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_212_fu_3675_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_213_fu_3679_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_215_fu_3691_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_216_fu_3701_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_214_fu_3685_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_218_fu_3715_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_217_fu_3707_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_219_fu_3723_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_220_fu_3727_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_221_fu_3733_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_158_i_fu_3748_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp32_V_3_fu_3745_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_158_cast_i_fu_3753_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_4_fu_3757_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_5_fu_3763_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_191_i_fu_3781_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp32_V_12_fu_3778_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_191_cast_i_fu_3786_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_13_fu_3790_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_14_fu_3796_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1272_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_168_i_fu_3834_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp82_cast_cast_fu_3842_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_205_fu_3839_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Repl2_21_trunc_i_fu_3850_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_172_i_fu_3856_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_138_fu_3863_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_206_fu_3874_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_14_fu_3878_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Result_139_fu_3889_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_194_i_fu_3902_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp83_cast_cast_fu_3910_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_223_fu_3907_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Repl2_24_trunc_i_fu_3918_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_198_i_fu_3924_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_142_fu_3931_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_224_fu_3942_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_17_fu_3946_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Result_143_fu_3957_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_fu_3970_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_207_fu_3885_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs1_fu_3996_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs1_fu_3990_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_fu_3980_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_225_fu_3953_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs2_fu_4014_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs2_fu_4008_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_fu_4002_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_fu_4020_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_fu_4026_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_fu_1284_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_4048_p0 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_4064_p0 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_4048_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_227_fu_4079_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_4064_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_226_fu_4100_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_227_i_fu_4130_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_229_i_fu_4144_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal i1_1_fu_4154_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal j1_fu_4140_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_26_fu_4174_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_228_fu_4180_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal notrhs_fu_4194_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_fu_4188_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_231_i_fu_4205_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond303_not_i_fu_4199_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_230_fu_4220_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_231_fu_4232_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl4_cast_fu_4224_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_shl5_cast_fu_4236_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_229_fu_4216_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_43_fu_4244_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_44_fu_4250_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal x_assign_fu_4297_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal abscond_i_i_fu_4309_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_i_i_fu_4303_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal abs_i_i_fu_4315_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_2_fu_4328_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal abscond_i43_i_fu_4340_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal neg_i42_i_fu_4334_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal abs_i44_i_fu_4346_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_46_fu_4395_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_243_i_fu_4421_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_245_i_fu_4435_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal i1_4_fu_4445_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal j1_3_fu_4431_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_238_fu_4469_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_239_fu_4481_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl6_cast_fu_4473_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_shl7_cast_fu_4485_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_237_fu_4465_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_48_fu_4493_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_49_fu_4499_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_250_i_cast_fu_4537_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_50_fu_4547_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_125_fu_4562_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_125_fu_4562_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_24_fu_4571_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_24_fu_4571_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_252_i_fu_4579_p1 : STD_LOGIC_VECTOR (48 downto 0);
    signal tmp_251_i_fu_4576_p1 : STD_LOGIC_VECTOR (48 downto 0);
    signal p_Val2_126_fu_4582_p2 : STD_LOGIC_VECTOR (48 downto 0);
    signal p_Val2_60_cast_i_fu_4588_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_255_cast_i_fu_4606_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Result_144_fu_4624_p4 : STD_LOGIC_VECTOR (48 downto 0);
    signal p_Result_145_fu_4634_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_256_i_fu_4642_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_244_fu_4663_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_243_fu_4659_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal msb_idx_7_fu_4671_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_245_fu_4679_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_260_i_fu_4698_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp32_V_18_fu_4695_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_260_cast_i_fu_4704_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_247_fu_4714_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_248_fu_4718_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_250_fu_4730_p4 : STD_LOGIC_VECTOR (48 downto 0);
    signal tmp_251_fu_4739_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_249_fu_4724_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_253_fu_4752_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_252_fu_4745_p3 : STD_LOGIC_VECTOR (48 downto 0);
    signal tmp_254_fu_4760_p1 : STD_LOGIC_VECTOR (48 downto 0);
    signal tmp_255_fu_4764_p2 : STD_LOGIC_VECTOR (48 downto 0);
    signal icmp7_fu_4689_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp32_V_19_fu_4708_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp32_V_20_fu_4770_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_262_i_fu_4796_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_257_fu_4801_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp85_cast_cast_fu_4804_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Repl2_27_trunc_i_fu_4812_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_266_i_fu_4818_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_146_fu_4825_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal f_5_fu_4836_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal loc_V_13_fu_4851_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal index_V_4_fu_4873_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_Result_113_fu_4889_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal one_half_i_cast_i1_fu_4904_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_135_fu_4908_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal loc_V_14_fu_4913_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_276_i_i1_fu_4917_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_27_fu_4929_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal xs_sig_V_5_fu_4923_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Result_147_fu_4896_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_148_fu_4939_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp_v_i1_fu_4947_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp1_i2_fu_4958_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_i2_fu_4963_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_i2_fu_4954_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_1_fu_4968_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_137_fu_4975_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal loc_V_15_fu_4987_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_i_i_i_i52_cast_i_fu_5001_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_assign_4_fu_5005_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_294_i_i_i55_i_fu_5019_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_294_i_i_i55_cast_fu_5025_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_293_i_i_i51_i_fu_5037_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal sh_assign_2_i_i_i56_s_fu_5050_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sh_assign_2_i_i_i56_1_fu_5053_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_293_i_i_i51_cast_fu_5046_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_295_i_i_i57_i_fu_5056_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_296_i_i_i58_i_fu_5060_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_263_fu_5072_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_297_i_i_i59_i_fu_5066_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_51_fu_5080_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_52_fu_5084_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_139_fu_5094_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_i_i_i65_i_fu_5101_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_264_fu_5107_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_265_fu_5111_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_266_fu_5115_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_267_fu_5122_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_53_fu_5128_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_254_i_fu_5145_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_259_i_fu_5149_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_45_fu_5183_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_47_fu_5193_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_2677_ap_start : STD_LOGIC;
    signal grp_fu_2677_ap_done : STD_LOGIC;
    signal grp_fu_4048_ap_start : STD_LOGIC;
    signal grp_fu_4048_ap_done : STD_LOGIC;
    signal grp_fu_4064_ap_start : STD_LOGIC;
    signal grp_fu_4064_ap_done : STD_LOGIC;
    signal ap_idle_pp2 : STD_LOGIC;
    signal ap_enable_pp2 : STD_LOGIC;
    signal ap_idle_pp3 : STD_LOGIC;
    signal ap_enable_pp3 : STD_LOGIC;
    signal ap_idle_pp4 : STD_LOGIC;
    signal ap_enable_pp4 : STD_LOGIC;
    signal ap_idle_pp6 : STD_LOGIC;
    signal ap_enable_pp6 : STD_LOGIC;

    component log_generic_float_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        base_r : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component sin_or_cos_float_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        t_in : IN STD_LOGIC_VECTOR (31 downto 0);
        do_cos : IN STD_LOGIC;
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component sqrt_fixed_32_32_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        x_V : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component HoughLinesP_Core_zec IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component HoughLinesP_Core_Aem IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component HoughLinesP_Core_Bew IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component HoughLinesP_Core_CeG IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component HoughLinesP_Core_DeQ IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component HoughLinesP_Core_Ee0 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        start : IN STD_LOGIC;
        done : OUT STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component HoughLinesP_Core_Ffa IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        start : IN STD_LOGIC;
        done : OUT STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (29 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (29 downto 0) );
    end component;


    component HoughLinesProbabipcA IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (22 downto 0) );
    end component;


    component HoughLinesProbabircU IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component HoughLinesProbabisc4 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (17 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (17 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component HoughLinesProbabitde IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (16 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (0 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component HoughLinesProbabiudo IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        address1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (15 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component HoughLinesProbabivdy IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (16 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component HoughLinesProbabixdS IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (0 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (0 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    mask_table1_U : component HoughLinesProbabipcA
    generic map (
        DataWidth => 23,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => mask_table1_address0,
        ce0 => mask_table1_ce0,
        q0 => mask_table1_q0);

    mask_table3_U : component HoughLinesProbabipcA
    generic map (
        DataWidth => 23,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => mask_table3_address0,
        ce0 => mask_table3_ce0,
        q0 => mask_table3_q0);

    one_half_table4_U : component HoughLinesProbabircU
    generic map (
        DataWidth => 24,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => one_half_table4_address0,
        ce0 => one_half_table4_ce0,
        q0 => one_half_table4_q0);

    accum_U : component HoughLinesProbabisc4
    generic map (
        DataWidth => 32,
        AddressRange => 201780,
        AddressWidth => 18)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => accum_address0,
        ce0 => accum_ce0,
        we0 => accum_we0,
        d0 => accum_d0,
        q0 => accum_q0,
        address1 => accum_address1,
        ce1 => accum_ce1,
        we1 => accum_we1,
        d1 => max_val_2_fu_3371_p2,
        q1 => accum_q1);

    mask_val_U : component HoughLinesProbabitde
    generic map (
        DataWidth => 1,
        AddressRange => 76800,
        AddressWidth => 17)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => mask_val_address0,
        ce0 => mask_val_ce0,
        we0 => mask_val_we0,
        d0 => mask_val_d0,
        q0 => mask_val_q0);

    trigtab_V_U : component HoughLinesProbabiudo
    generic map (
        DataWidth => 16,
        AddressRange => 360,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => trigtab_V_address0,
        ce0 => trigtab_V_ce0,
        we0 => trigtab_V_we0,
        d0 => trigtab_V_d0,
        q0 => trigtab_V_q0,
        address1 => trigtab_V_address1,
        ce1 => trigtab_V_ce1,
        we1 => trigtab_V_we1,
        d1 => trigtab_V_d1,
        q1 => trigtab_V_q1);

    pt_buf_val_x_U : component HoughLinesProbabivdy
    generic map (
        DataWidth => 32,
        AddressRange => 76800,
        AddressWidth => 17)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pt_buf_val_x_address0,
        ce0 => pt_buf_val_x_ce0,
        we0 => pt_buf_val_x_we0,
        d0 => p_x_assign_reg_895,
        q0 => pt_buf_val_x_q0);

    pt_buf_val_y_U : component HoughLinesProbabivdy
    generic map (
        DataWidth => 32,
        AddressRange => 76800,
        AddressWidth => 17)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pt_buf_val_y_address0,
        ce0 => pt_buf_val_y_ce0,
        we0 => pt_buf_val_y_we0,
        d0 => p_y_assign_reg_882,
        q0 => pt_buf_val_y_q0);

    line_end_x_U : component HoughLinesProbabixdS
    generic map (
        DataWidth => 32,
        AddressRange => 2,
        AddressWidth => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => line_end_x_address0,
        ce0 => line_end_x_ce0,
        we0 => line_end_x_we0,
        d0 => j1_2_reg_6018,
        q0 => line_end_x_q0,
        address1 => line_end_x_address1,
        ce1 => line_end_x_ce1,
        q1 => line_end_x_q1);

    line_end_y_U : component HoughLinesProbabixdS
    generic map (
        DataWidth => 32,
        AddressRange => 2,
        AddressWidth => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => line_end_y_address0,
        ce0 => line_end_y_ce0,
        we0 => line_end_y_we0,
        d0 => i1_2_reg_6013,
        q0 => line_end_y_q0,
        address1 => line_end_y_address1,
        ce1 => line_end_y_ce1,
        q1 => line_end_y_q1);

    grp_log_generic_float_s_fu_1213 : component log_generic_float_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_log_generic_float_s_fu_1213_ap_start,
        ap_done => grp_log_generic_float_s_fu_1213_ap_done,
        ap_idle => grp_log_generic_float_s_fu_1213_ap_idle,
        ap_ready => grp_log_generic_float_s_fu_1213_ap_ready,
        base_r => reg_1295,
        ap_return => grp_log_generic_float_s_fu_1213_ap_return);

    grp_sin_or_cos_float_s_fu_1228 : component sin_or_cos_float_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_or_cos_float_s_fu_1228_ap_start,
        ap_done => grp_sin_or_cos_float_s_fu_1228_ap_done,
        ap_idle => grp_sin_or_cos_float_s_fu_1228_ap_idle,
        ap_ready => grp_sin_or_cos_float_s_fu_1228_ap_ready,
        t_in => reg_1301,
        do_cos => grp_sin_or_cos_float_s_fu_1228_do_cos,
        ap_return => grp_sin_or_cos_float_s_fu_1228_ap_return);

    grp_sin_or_cos_float_s_fu_1243 : component sin_or_cos_float_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sin_or_cos_float_s_fu_1243_ap_start,
        ap_done => grp_sin_or_cos_float_s_fu_1243_ap_done,
        ap_idle => grp_sin_or_cos_float_s_fu_1243_ap_idle,
        ap_ready => grp_sin_or_cos_float_s_fu_1243_ap_ready,
        t_in => reg_1301,
        do_cos => grp_sin_or_cos_float_s_fu_1243_do_cos,
        ap_return => grp_sin_or_cos_float_s_fu_1243_ap_return);

    grp_sqrt_fixed_32_32_s_fu_1258 : component sqrt_fixed_32_32_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        x_V => M_reg_5560,
        ap_return => grp_sqrt_fixed_32_32_s_fu_1258_ap_return);

    HoughLinesP_Core_zec_U54 : component HoughLinesP_Core_zec
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1263_p0,
        din1 => grp_fu_1263_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1263_p2);

    HoughLinesP_Core_Aem_U55 : component HoughLinesP_Core_Aem
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1269_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_1269_p1);

    HoughLinesP_Core_Aem_U56 : component HoughLinesP_Core_Aem
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp32_V_15_reg_5945,
        ce => ap_const_logic_1,
        dout => grp_fu_1272_p1);

    HoughLinesP_Core_Bew_U57 : component HoughLinesP_Core_Bew
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1275_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_1275_p1);

    HoughLinesP_Core_CeG_U58 : component HoughLinesP_Core_CeG
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => v_assign_reg_5316,
        dout => d_assign_3_fu_1278_p1);

    HoughLinesP_Core_CeG_U59 : component HoughLinesP_Core_CeG
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => v_assign_1_reg_5321,
        dout => d_assign_fu_1281_p1);

    HoughLinesP_Core_DeQ_U60 : component HoughLinesP_Core_DeQ
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => tmp_24_fu_1284_p0,
        din1 => tmp_24_fu_1284_p1,
        opcode => ap_const_lv5_2,
        dout => tmp_24_fu_1284_p2);

    HoughLinesP_Core_Ee0_U61 : component HoughLinesP_Core_Ee0
    generic map (
        ID => 1,
        NUM_STAGE => 36,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        start => grp_fu_2677_ap_start,
        done => grp_fu_2677_ap_done,
        din0 => grp_fu_2677_p0,
        din1 => M_reg_5560,
        ce => ap_const_logic_1,
        dout => grp_fu_2677_p2);

    HoughLinesP_Core_Ffa_U62 : component HoughLinesP_Core_Ffa
    generic map (
        ID => 1,
        NUM_STAGE => 34,
        din0_WIDTH => 30,
        din1_WIDTH => 16,
        dout_WIDTH => 30)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        start => grp_fu_4048_ap_start,
        done => grp_fu_4048_ap_done,
        din0 => grp_fu_4048_p0,
        din1 => p_Val2_121_reg_5854,
        ce => ap_const_logic_1,
        dout => grp_fu_4048_p2);

    HoughLinesP_Core_Ffa_U63 : component HoughLinesP_Core_Ffa
    generic map (
        ID => 1,
        NUM_STAGE => 34,
        din0_WIDTH => 30,
        din1_WIDTH => 16,
        dout_WIDTH => 30)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        start => grp_fu_4064_ap_start,
        done => grp_fu_4064_ap_done,
        din0 => grp_fu_4064_p0,
        din1 => p_Val2_118_reg_5869,
        ce => ap_const_logic_1,
        dout => grp_fu_4064_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state191)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_condition_pp2_exit_iter0_state8) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif (((exitcond3_i_fu_1364_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp2_exit_iter0_state8)) then 
                        ap_enable_reg_pp2_iter1 <= (ap_const_logic_1 xor ap_condition_pp2_exit_iter0_state8);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter10 <= ap_enable_reg_pp2_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter11 <= ap_enable_reg_pp2_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter12 <= ap_enable_reg_pp2_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter13 <= ap_enable_reg_pp2_iter12;
                elsif (((exitcond3_i_fu_1364_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                    ap_enable_reg_pp2_iter13 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter5 <= ap_enable_reg_pp2_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter6 <= ap_enable_reg_pp2_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter7 <= ap_enable_reg_pp2_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter8 <= ap_enable_reg_pp2_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter9 <= ap_enable_reg_pp2_iter8;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_condition_pp3_exit_iter0_state24) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
                elsif (((exitcond1_i_fu_2167_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state23))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp3_exit_iter0_state24) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone))) then 
                    ap_enable_reg_pp3_iter1 <= (ap_const_logic_1 xor ap_condition_pp3_exit_iter0_state24);
                elsif ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
                elsif (((exitcond1_i_fu_2167_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state23))) then 
                    ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp4_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_logic_1 = ap_condition_pp4_exit_iter0_state86) and (ap_const_boolean_0 = ap_block_pp4_stage0_subdone))) then 
                    ap_enable_reg_pp4_iter0 <= ap_const_logic_0;
                elsif (((mask_val_q0 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state85))) then 
                    ap_enable_reg_pp4_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp4_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp4_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp4_exit_iter0_state86)) then 
                        ap_enable_reg_pp4_iter1 <= (ap_const_logic_1 xor ap_condition_pp4_exit_iter0_state86);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp4_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp4_stage0_subdone)) then 
                    ap_enable_reg_pp4_iter2 <= ap_enable_reg_pp4_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp4_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp4_stage0_subdone)) then 
                    ap_enable_reg_pp4_iter3 <= ap_enable_reg_pp4_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp4_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp4_stage0_subdone)) then 
                    ap_enable_reg_pp4_iter4 <= ap_enable_reg_pp4_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp4_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp4_stage0_subdone)) then 
                    ap_enable_reg_pp4_iter5 <= ap_enable_reg_pp4_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp4_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp4_stage0_subdone)) then 
                    ap_enable_reg_pp4_iter6 <= ap_enable_reg_pp4_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp4_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp4_stage0_subdone)) then 
                    ap_enable_reg_pp4_iter7 <= ap_enable_reg_pp4_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp4_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp4_stage0_subdone)) then 
                    ap_enable_reg_pp4_iter8 <= ap_enable_reg_pp4_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp4_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp4_stage0_subdone)) then 
                    ap_enable_reg_pp4_iter9 <= ap_enable_reg_pp4_iter8;
                elsif (((mask_val_q0 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state85))) then 
                    ap_enable_reg_pp4_iter9 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp6_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp6_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp6_exit_iter0_state178) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_const_boolean_0 = ap_block_pp6_stage0_subdone))) then 
                    ap_enable_reg_pp6_iter0 <= ap_const_logic_0;
                elsif (((mask_val_q0 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state177))) then 
                    ap_enable_reg_pp6_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp6_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp6_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp6_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp6_exit_iter0_state178)) then 
                        ap_enable_reg_pp6_iter1 <= (ap_const_logic_1 xor ap_condition_pp6_exit_iter0_state178);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp6_iter1 <= ap_enable_reg_pp6_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp6_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp6_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp6_stage0_subdone)) then 
                    ap_enable_reg_pp6_iter2 <= ap_enable_reg_pp6_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp6_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp6_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp6_stage0_subdone)) then 
                    ap_enable_reg_pp6_iter3 <= ap_enable_reg_pp6_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp6_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp6_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp6_stage0_subdone)) then 
                    ap_enable_reg_pp6_iter4 <= ap_enable_reg_pp6_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp6_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp6_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp6_stage0_subdone)) then 
                    ap_enable_reg_pp6_iter5 <= ap_enable_reg_pp6_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp6_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp6_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp6_stage0_subdone)) then 
                    ap_enable_reg_pp6_iter6 <= ap_enable_reg_pp6_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp6_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp6_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp6_stage0_subdone)) then 
                    ap_enable_reg_pp6_iter7 <= ap_enable_reg_pp6_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp6_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp6_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp6_stage0_subdone)) then 
                    ap_enable_reg_pp6_iter8 <= ap_enable_reg_pp6_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp6_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp6_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp6_stage0_subdone)) then 
                    ap_enable_reg_pp6_iter9 <= ap_enable_reg_pp6_iter8;
                elsif (((mask_val_q0 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state177))) then 
                    ap_enable_reg_pp6_iter9 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_log_generic_float_s_fu_1213_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_log_generic_float_s_fu_1213_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state27) and (ap_const_logic_1 = ap_NS_fsm_state28))) then 
                    grp_log_generic_float_s_fu_1213_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_log_generic_float_s_fu_1213_ap_ready = ap_const_logic_1)) then 
                    grp_log_generic_float_s_fu_1213_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_or_cos_float_s_fu_1228_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_or_cos_float_s_fu_1228_ap_start_reg <= ap_const_logic_0;
            else
                if (((exitcond5_i_reg_5302_pp2_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter3 = ap_const_logic_1))) then 
                    grp_sin_or_cos_float_s_fu_1228_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_or_cos_float_s_fu_1228_ap_ready = ap_const_logic_1)) then 
                    grp_sin_or_cos_float_s_fu_1228_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_or_cos_float_s_fu_1243_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sin_or_cos_float_s_fu_1243_ap_start_reg <= ap_const_logic_0;
            else
                if (((exitcond5_i_reg_5302_pp2_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter3 = ap_const_logic_1))) then 
                    grp_sin_or_cos_float_s_fu_1243_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_or_cos_float_s_fu_1243_ap_ready = ap_const_logic_1)) then 
                    grp_sin_or_cos_float_s_fu_1243_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    cnt_i_reg_919_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state190) and ((tmp_115_i_reg_5631 = ap_const_lv1_0) or (ap_phi_mux_p_1_i_phi_fu_1190_p8 = ap_const_lv1_0)))) then 
                cnt_i_reg_919 <= cnt_reg_5616;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
                cnt_i_reg_919 <= ap_const_lv31_0;
            end if; 
        end if;
    end process;

    dx0_1_i_reg_1029_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state135)) then 
                dx0_1_i_reg_1029 <= ap_phi_mux_dx_i_phi_fu_998_p4;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state171)) then 
                dx0_1_i_reg_1029 <= dx0_1_fu_4285_p2;
            end if; 
        end if;
    end process;

    dx0_2_i_reg_1108_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond2_i_fu_5153_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state188))) then 
                dx0_2_i_reg_1108 <= dx0_2_fu_5171_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state173) and ((tmp_224_i_fu_4354_p2 = ap_const_lv1_0) or (tmp_220_i_reg_6068 = ap_const_lv1_0)))) then 
                dx0_2_i_reg_1108 <= dx0_1_i_reg_1029;
            end if; 
        end if;
    end process;

    dy0_1_i_reg_1040_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state135)) then 
                dy0_1_i_reg_1040 <= ap_phi_mux_dy_i_phi_fu_1009_p4;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state171)) then 
                dy0_1_i_reg_1040 <= dy0_1_fu_4291_p2;
            end if; 
        end if;
    end process;

    dy0_2_i_reg_1119_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond2_i_fu_5153_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state188))) then 
                dy0_2_i_reg_1119 <= dy0_2_fu_5177_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state173) and ((tmp_224_i_fu_4354_p2 = ap_const_lv1_0) or (tmp_220_i_reg_6068 = ap_const_lv1_0)))) then 
                dy0_2_i_reg_1119 <= dy0_1_i_reg_1040;
            end if; 
        end if;
    end process;

    gap_i_reg_1062_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond7_i_fu_4112_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state168))) then 
                gap_i_reg_1062 <= ap_const_lv32_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state170) and (((or_cond1_i_reg_6023 = ap_const_lv1_1) and (tmp_241_i_fu_4268_p2 = ap_const_lv1_0)) or ((or_cond1_i_reg_6023 = ap_const_lv1_1) and (mask_val_q0 = ap_const_lv1_1))))) then 
                gap_i_reg_1062 <= ap_phi_mux_gap_1_i_phi_fu_1100_p4;
            end if; 
        end if;
    end process;

    i1_3_reg_1152_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond2_i_fu_5153_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state188))) then 
                i1_3_reg_1152 <= y_2_fu_5165_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state175)) then 
                i1_3_reg_1152 <= y_reg_985;
            end if; 
        end if;
    end process;

    i1_reg_1085_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond7_i_fu_4112_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state168))) then 
                i1_reg_1085 <= y_reg_985;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state170) and (((or_cond1_i_reg_6023 = ap_const_lv1_1) and (tmp_241_i_fu_4268_p2 = ap_const_lv1_0)) or ((or_cond1_i_reg_6023 = ap_const_lv1_1) and (mask_val_q0 = ap_const_lv1_1))))) then 
                i1_reg_1085 <= y_1_fu_4279_p2;
            end if; 
        end if;
    end process;

    i_0_i_i_reg_802_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                i_0_i_i_reg_802 <= i_reg_5267;
            elsif ((not(((lines_cols_out_full_n = ap_const_logic_0) or (lines_rows_out_full_n = ap_const_logic_0) or (lineGap_empty_n = ap_const_logic_0) or (threshold_empty_n = ap_const_logic_0) or (lines_cols_empty_n = ap_const_logic_0) or (lines_rows_empty_n = ap_const_logic_0) or (edge_cols_empty_n = ap_const_logic_0) or (edge_rows_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_0_i_i_reg_802 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    idx_i_reg_908_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state190) and ((tmp_115_i_reg_5631 = ap_const_lv1_0) or (ap_phi_mux_p_1_i_phi_fu_1190_p8 = ap_const_lv1_0)))) then 
                idx_i_reg_908 <= idx_reg_5626;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
                idx_i_reg_908 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    j1_1_reg_1074_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond7_i_fu_4112_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state168))) then 
                j1_1_reg_1074 <= x_reg_975;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state170) and (((or_cond1_i_reg_6023 = ap_const_lv1_1) and (tmp_241_i_fu_4268_p2 = ap_const_lv1_0)) or ((or_cond1_i_reg_6023 = ap_const_lv1_1) and (mask_val_q0 = ap_const_lv1_1))))) then 
                j1_1_reg_1074 <= x_1_fu_4273_p2;
            end if; 
        end if;
    end process;

    j1_4_reg_1141_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond2_i_fu_5153_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state188))) then 
                j1_4_reg_1141 <= x_2_fu_5159_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state175)) then 
                j1_4_reg_1141 <= x_reg_975;
            end if; 
        end if;
    end process;

    j_0_i_i_reg_825_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i_fu_1317_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                j_0_i_i_reg_825 <= ap_const_lv7_0;
            elsif (((tmp_91_i_fu_1332_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                j_0_i_i_reg_825 <= j_fu_1337_p2;
            end if; 
        end if;
    end process;

    k1_i_reg_1130_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond2_i_fu_5153_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state188))) then 
                k1_i_reg_1130 <= k_1_reg_6079;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state173) and ((tmp_224_i_fu_4354_p2 = ap_const_lv1_0) or (tmp_220_i_reg_6068 = ap_const_lv1_0)))) then 
                k1_i_reg_1130 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    k_i_reg_1051_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state135)) then 
                k_i_reg_1051 <= ap_const_lv2_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state171)) then 
                k_i_reg_1051 <= k_reg_5998;
            end if; 
        end if;
    end process;

    max_n_i_reg_940_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond6_i_reg_5683_pp4_iter8_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_enable_reg_pp4_iter9 = ap_const_logic_1))) then 
                max_n_i_reg_940 <= n7_0_max_n_i_fu_3392_p3;
            elsif (((mask_val_q0 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state85))) then 
                max_n_i_reg_940 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    max_n_reg_952_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond6_i_reg_5683 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1))) then 
                max_n_reg_952 <= n_1_reg_5687;
            elsif (((mask_val_q0 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state85))) then 
                max_n_reg_952 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    max_val1_i_reg_930_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond6_i_reg_5683_pp4_iter8_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_enable_reg_pp4_iter9 = ap_const_logic_1))) then 
                max_val1_i_reg_930 <= val_0_max_val_i_fu_3384_p3;
            elsif (((mask_val_q0 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state85))) then 
                max_val1_i_reg_930 <= max_val_reg_5582;
            end if; 
        end if;
    end process;

    n4_i_reg_870_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond3_i_fu_1364_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                n4_i_reg_870 <= ap_const_lv8_0;
            elsif (((exitcond5_i_reg_5302 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                n4_i_reg_870 <= n_2_reg_5306;
            end if; 
        end if;
    end process;

    n5_i_reg_1163_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((mask_val_q0 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state177))) then 
                n5_i_reg_1163 <= ap_const_lv8_0;
            elsif (((exitcond_i_fu_4520_p2 = ap_const_lv1_0) and (ap_enable_reg_pp6_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_const_boolean_0 = ap_block_pp6_stage0_11001))) then 
                n5_i_reg_1163 <= n_3_fu_4526_p2;
            end if; 
        end if;
    end process;

    n_i_reg_836_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i_fu_1317_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                n_i_reg_836 <= ap_const_lv8_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                n_i_reg_836 <= n_reg_5289;
            end if; 
        end if;
    end process;

    p_1_i_reg_1185_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state189) and (((tmp_239_i_reg_6100 = ap_const_lv1_1) and (tmp_224_i_reg_6072 = ap_const_lv1_0)) or ((tmp_239_i_reg_6100 = ap_const_lv1_1) and (tmp_220_i_reg_6068 = ap_const_lv1_0))))) then 
                p_1_i_reg_1185 <= ap_const_lv1_1;
            elsif ((((tmp_134_i_fu_3400_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state96)) or ((mask_val_q0 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state85)) or ((ap_const_logic_1 = ap_CS_fsm_state189) and ((tmp_239_i_reg_6100 = ap_const_lv1_0) or ((tmp_224_i_reg_6072 = ap_const_lv1_1) and (tmp_220_i_reg_6068 = ap_const_lv1_1)))))) then 
                p_1_i_reg_1185 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    p_x_assign_reg_895_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (exitcond2_i_reg_5495 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1))) then 
                p_x_assign_reg_895 <= j_2_reg_5499;
            elsif (((exitcond1_i_fu_2167_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state23))) then 
                p_x_assign_reg_895 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    p_y_assign_reg_882_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
                p_y_assign_reg_882 <= i_1_reg_5473;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
                p_y_assign_reg_882 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    phi_mul1_reg_847_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i_fu_1317_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                phi_mul1_reg_847 <= ap_const_lv18_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                phi_mul1_reg_847 <= next_mul1_reg_5280;
            end if; 
        end if;
    end process;

    phi_mul2_reg_964_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond6_i_fu_2749_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then 
                phi_mul2_reg_964 <= next_mul2_fu_2770_p2;
            elsif (((mask_val_q0 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state85))) then 
                phi_mul2_reg_964 <= ap_const_lv18_0;
            end if; 
        end if;
    end process;

    phi_mul3_reg_1174_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((mask_val_q0 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state177))) then 
                phi_mul3_reg_1174 <= ap_const_lv18_0;
            elsif (((exitcond_i_fu_4520_p2 = ap_const_lv1_0) and (ap_enable_reg_pp6_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_const_boolean_0 = ap_block_pp6_stage0_11001))) then 
                phi_mul3_reg_1174 <= next_mul3_fu_4541_p2;
            end if; 
        end if;
    end process;

    phi_mul_reg_813_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                phi_mul_reg_813 <= next_mul_reg_5258;
            elsif ((not(((lines_cols_out_full_n = ap_const_logic_0) or (lines_rows_out_full_n = ap_const_logic_0) or (lineGap_empty_n = ap_const_logic_0) or (threshold_empty_n = ap_const_logic_0) or (lines_cols_empty_n = ap_const_logic_0) or (lines_rows_empty_n = ap_const_logic_0) or (edge_cols_empty_n = ap_const_logic_0) or (edge_rows_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                phi_mul_reg_813 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    pt_buf_length_i_fu_376_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (tmp_117_i_fu_2239_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1))) then 
                pt_buf_length_i_fu_376 <= pt_buf_length_fu_2245_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
                pt_buf_length_i_fu_376 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    r_i_reg_859_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond3_i_fu_1364_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                r_i_reg_859 <= ap_const_lv11_0;
            elsif (((exitcond4_i_fu_1376_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                r_i_reg_859 <= r_fu_1382_p2;
            end if; 
        end if;
    end process;

    total_1_fu_380_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond8_i_fu_4359_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state174))) then 
                total_1_fu_380 <= total_fu_4377_p2;
            elsif (((exitcond1_i_fu_2167_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state23))) then 
                total_1_fu_380 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    x_reg_975_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state135)) then
                if ((tmp_25_reg_5970 = ap_const_lv1_0)) then 
                    x_reg_975 <= j_3_reg_5645;
                elsif ((tmp_25_reg_5970 = ap_const_lv1_1)) then 
                    x_reg_975 <= x0_1_fu_4105_p2;
                end if;
            end if; 
        end if;
    end process;

    xflag_i_reg_1017_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state135)) then
                if ((tmp_25_reg_5970 = ap_const_lv1_0)) then 
                    xflag_i_reg_1017 <= ap_const_lv1_1;
                elsif ((tmp_25_reg_5970 = ap_const_lv1_1)) then 
                    xflag_i_reg_1017 <= ap_const_lv1_0;
                end if;
            end if; 
        end if;
    end process;

    y_reg_985_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state135)) then
                if ((tmp_25_reg_5970 = ap_const_lv1_0)) then 
                    y_reg_985 <= y0_1_fu_4084_p2;
                elsif ((tmp_25_reg_5970 = ap_const_lv1_1)) then 
                    y_reg_985 <= i_3_reg_5652;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond5_i_reg_5302_pp2_iter11_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                F2_1_reg_5418 <= F2_1_fu_1622_p2;
                F2_reg_5350 <= F2_fu_1478_p2;
                icmp1_reg_5379 <= icmp1_fu_1542_p2;
                icmp2_reg_5437 <= icmp2_fu_1664_p2;
                icmp3_reg_5447 <= icmp3_fu_1686_p2;
                icmp_reg_5369 <= icmp_fu_1520_p2;
                isneg_1_reg_5394 <= ireg_V_1_fu_1564_p1(63 downto 63);
                isneg_reg_5326 <= ireg_V_fu_1420_p1(63 downto 63);
                man_V_1_reg_5339 <= man_V_1_fu_1466_p2;
                man_V_3_reg_5407 <= man_V_3_fu_1610_p2;
                    p_Result_123_reg_5334(51 downto 0) <= p_Result_123_fu_1462_p1(51 downto 0);
                    p_Result_124_reg_5402(51 downto 0) <= p_Result_124_fu_1606_p1(51 downto 0);
                sh_amt_1_reg_5430 <= sh_amt_1_fu_1646_p3;
                sh_amt_reg_5362 <= sh_amt_fu_1502_p3;
                tmp_107_i_reg_5356 <= tmp_107_i_fu_1484_p2;
                tmp_128_reg_5384 <= tmp_128_fu_1548_p1;
                tmp_130_i_reg_5374 <= tmp_130_i_fu_1526_p2;
                tmp_141_reg_5452 <= tmp_141_fu_1692_p1;
                tmp_147_i_reg_5389 <= tmp_147_i_fu_1558_p2;
                tmp_157_i_reg_5412 <= tmp_157_i_fu_1616_p2;
                tmp_164_i_reg_5424 <= tmp_164_i_fu_1628_p2;
                tmp_193_i_reg_5442 <= tmp_193_i_fu_1670_p2;
                tmp_214_i_reg_5457 <= tmp_214_i_fu_1702_p2;
                tmp_98_i_reg_5344 <= tmp_98_i_fu_1472_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state41)) then
                M_reg_5560 <= M_fu_2622_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((mask_val_q0 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state85))) then
                OP1_V_4_reg_5673 <= OP1_V_4_fu_2742_p1;
                OP1_V_reg_5668 <= OP1_V_fu_2739_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((mask_val_q0 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state177))) then
                OP1_V_5_reg_6135 <= OP1_V_5_fu_4510_p1;
                OP1_V_6_reg_6140 <= OP1_V_6_fu_4513_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond6_i_reg_5683_pp4_iter7_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001))) then
                accum_addr_1_reg_5818 <= tmp_51_cast_fu_3362_p1(18 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_reg_6150_pp6_iter7_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp6_stage0_11001))) then
                accum_addr_2_reg_6285 <= tmp_72_cast_fu_5133_p1(18 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state48)) then
                cnt_reg_5616 <= cnt_fu_2666_p2;
                total_1_load_reg_5607 <= total_1_fu_380;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((lines_cols_out_full_n = ap_const_logic_0) or (lines_rows_out_full_n = ap_const_logic_0) or (lineGap_empty_n = ap_const_logic_0) or (threshold_empty_n = ap_const_logic_0) or (lines_cols_empty_n = ap_const_logic_0) or (lines_rows_empty_n = ap_const_logic_0) or (edge_cols_empty_n = ap_const_logic_0) or (edge_rows_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                cols_reg_5252 <= edge_cols_dout;
                lineGap_read_reg_5241 <= lineGap_dout;
                lines_cols_read_reg_5228 <= lines_cols_dout;
                lines_rows_read_reg_5223 <= lines_rows_dout;
                rows_reg_5246 <= edge_rows_dout;
                threshold_read_reg_5233 <= threshold_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then
                exitcond2_i_reg_5495 <= exitcond2_i_fu_2213_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                exitcond5_i_reg_5302 <= exitcond5_i_fu_1403_p2;
                exitcond5_i_reg_5302_pp2_iter1_reg <= exitcond5_i_reg_5302;
                n4_i_reg_870_pp2_iter1_reg <= n4_i_reg_870;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp2_stage0_11001)) then
                exitcond5_i_reg_5302_pp2_iter10_reg <= exitcond5_i_reg_5302_pp2_iter9_reg;
                exitcond5_i_reg_5302_pp2_iter11_reg <= exitcond5_i_reg_5302_pp2_iter10_reg;
                exitcond5_i_reg_5302_pp2_iter12_reg <= exitcond5_i_reg_5302_pp2_iter11_reg;
                exitcond5_i_reg_5302_pp2_iter2_reg <= exitcond5_i_reg_5302_pp2_iter1_reg;
                exitcond5_i_reg_5302_pp2_iter3_reg <= exitcond5_i_reg_5302_pp2_iter2_reg;
                exitcond5_i_reg_5302_pp2_iter4_reg <= exitcond5_i_reg_5302_pp2_iter3_reg;
                exitcond5_i_reg_5302_pp2_iter5_reg <= exitcond5_i_reg_5302_pp2_iter4_reg;
                exitcond5_i_reg_5302_pp2_iter6_reg <= exitcond5_i_reg_5302_pp2_iter5_reg;
                exitcond5_i_reg_5302_pp2_iter7_reg <= exitcond5_i_reg_5302_pp2_iter6_reg;
                exitcond5_i_reg_5302_pp2_iter8_reg <= exitcond5_i_reg_5302_pp2_iter7_reg;
                exitcond5_i_reg_5302_pp2_iter9_reg <= exitcond5_i_reg_5302_pp2_iter8_reg;
                n4_i_reg_870_pp2_iter10_reg <= n4_i_reg_870_pp2_iter9_reg;
                n4_i_reg_870_pp2_iter11_reg <= n4_i_reg_870_pp2_iter10_reg;
                n4_i_reg_870_pp2_iter12_reg <= n4_i_reg_870_pp2_iter11_reg;
                n4_i_reg_870_pp2_iter2_reg <= n4_i_reg_870_pp2_iter1_reg;
                n4_i_reg_870_pp2_iter3_reg <= n4_i_reg_870_pp2_iter2_reg;
                n4_i_reg_870_pp2_iter4_reg <= n4_i_reg_870_pp2_iter3_reg;
                n4_i_reg_870_pp2_iter5_reg <= n4_i_reg_870_pp2_iter4_reg;
                n4_i_reg_870_pp2_iter6_reg <= n4_i_reg_870_pp2_iter5_reg;
                n4_i_reg_870_pp2_iter7_reg <= n4_i_reg_870_pp2_iter6_reg;
                n4_i_reg_870_pp2_iter8_reg <= n4_i_reg_870_pp2_iter7_reg;
                n4_i_reg_870_pp2_iter9_reg <= n4_i_reg_870_pp2_iter8_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then
                exitcond6_i_reg_5683 <= exitcond6_i_fu_2749_p2;
                exitcond6_i_reg_5683_pp4_iter1_reg <= exitcond6_i_reg_5683;
                max_n_reg_952_pp4_iter1_reg <= max_n_reg_952;
                    phi_mul240_cast_reg_5678(17 downto 0) <= phi_mul240_cast_fu_2745_p1(17 downto 0);
                    phi_mul240_cast_reg_5678_pp4_iter1_reg(17 downto 0) <= phi_mul240_cast_reg_5678(17 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp4_stage0_11001)) then
                exitcond6_i_reg_5683_pp4_iter2_reg <= exitcond6_i_reg_5683_pp4_iter1_reg;
                exitcond6_i_reg_5683_pp4_iter3_reg <= exitcond6_i_reg_5683_pp4_iter2_reg;
                exitcond6_i_reg_5683_pp4_iter4_reg <= exitcond6_i_reg_5683_pp4_iter3_reg;
                exitcond6_i_reg_5683_pp4_iter5_reg <= exitcond6_i_reg_5683_pp4_iter4_reg;
                exitcond6_i_reg_5683_pp4_iter6_reg <= exitcond6_i_reg_5683_pp4_iter5_reg;
                exitcond6_i_reg_5683_pp4_iter7_reg <= exitcond6_i_reg_5683_pp4_iter6_reg;
                exitcond6_i_reg_5683_pp4_iter8_reg <= exitcond6_i_reg_5683_pp4_iter7_reg;
                is_neg_reg_5724_pp4_iter3_reg <= is_neg_reg_5724;
                is_neg_reg_5724_pp4_iter4_reg <= is_neg_reg_5724_pp4_iter3_reg;
                is_neg_reg_5724_pp4_iter5_reg <= is_neg_reg_5724_pp4_iter4_reg;
                max_n_reg_952_pp4_iter2_reg <= max_n_reg_952_pp4_iter1_reg;
                max_n_reg_952_pp4_iter3_reg <= max_n_reg_952_pp4_iter2_reg;
                max_n_reg_952_pp4_iter4_reg <= max_n_reg_952_pp4_iter3_reg;
                max_n_reg_952_pp4_iter5_reg <= max_n_reg_952_pp4_iter4_reg;
                max_n_reg_952_pp4_iter6_reg <= max_n_reg_952_pp4_iter5_reg;
                max_n_reg_952_pp4_iter7_reg <= max_n_reg_952_pp4_iter6_reg;
                max_n_reg_952_pp4_iter8_reg <= max_n_reg_952_pp4_iter7_reg;
                msb_idx_reg_5745_pp4_iter4_reg <= msb_idx_reg_5745;
                msb_idx_reg_5745_pp4_iter5_reg <= msb_idx_reg_5745_pp4_iter4_reg;
                    phi_mul240_cast_reg_5678_pp4_iter2_reg(17 downto 0) <= phi_mul240_cast_reg_5678_pp4_iter1_reg(17 downto 0);
                    phi_mul240_cast_reg_5678_pp4_iter3_reg(17 downto 0) <= phi_mul240_cast_reg_5678_pp4_iter2_reg(17 downto 0);
                    phi_mul240_cast_reg_5678_pp4_iter4_reg(17 downto 0) <= phi_mul240_cast_reg_5678_pp4_iter3_reg(17 downto 0);
                    phi_mul240_cast_reg_5678_pp4_iter5_reg(17 downto 0) <= phi_mul240_cast_reg_5678_pp4_iter4_reg(17 downto 0);
                    phi_mul240_cast_reg_5678_pp4_iter6_reg(17 downto 0) <= phi_mul240_cast_reg_5678_pp4_iter5_reg(17 downto 0);
                    phi_mul240_cast_reg_5678_pp4_iter7_reg(17 downto 0) <= phi_mul240_cast_reg_5678_pp4_iter6_reg(17 downto 0);
                tmp_138_i_reg_5719_pp4_iter3_reg <= tmp_138_i_reg_5719;
                tmp_138_i_reg_5719_pp4_iter4_reg <= tmp_138_i_reg_5719_pp4_iter3_reg;
                tmp_138_i_reg_5719_pp4_iter5_reg <= tmp_138_i_reg_5719_pp4_iter4_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_const_boolean_0 = ap_block_pp6_stage0_11001))) then
                exitcond_i_reg_6150 <= exitcond_i_fu_4520_p2;
                exitcond_i_reg_6150_pp6_iter1_reg <= exitcond_i_reg_6150;
                    phi_mul242_cast_reg_6145(17 downto 0) <= phi_mul242_cast_fu_4516_p1(17 downto 0);
                    phi_mul242_cast_reg_6145_pp6_iter1_reg(17 downto 0) <= phi_mul242_cast_reg_6145(17 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp6_stage0_11001)) then
                exitcond_i_reg_6150_pp6_iter2_reg <= exitcond_i_reg_6150_pp6_iter1_reg;
                exitcond_i_reg_6150_pp6_iter3_reg <= exitcond_i_reg_6150_pp6_iter2_reg;
                exitcond_i_reg_6150_pp6_iter4_reg <= exitcond_i_reg_6150_pp6_iter3_reg;
                exitcond_i_reg_6150_pp6_iter5_reg <= exitcond_i_reg_6150_pp6_iter4_reg;
                exitcond_i_reg_6150_pp6_iter6_reg <= exitcond_i_reg_6150_pp6_iter5_reg;
                exitcond_i_reg_6150_pp6_iter7_reg <= exitcond_i_reg_6150_pp6_iter6_reg;
                exitcond_i_reg_6150_pp6_iter8_reg <= exitcond_i_reg_6150_pp6_iter7_reg;
                is_neg_3_reg_6191_pp6_iter3_reg <= is_neg_3_reg_6191;
                is_neg_3_reg_6191_pp6_iter4_reg <= is_neg_3_reg_6191_pp6_iter3_reg;
                is_neg_3_reg_6191_pp6_iter5_reg <= is_neg_3_reg_6191_pp6_iter4_reg;
                msb_idx_6_reg_6212_pp6_iter4_reg <= msb_idx_6_reg_6212;
                msb_idx_6_reg_6212_pp6_iter5_reg <= msb_idx_6_reg_6212_pp6_iter4_reg;
                    phi_mul242_cast_reg_6145_pp6_iter2_reg(17 downto 0) <= phi_mul242_cast_reg_6145_pp6_iter1_reg(17 downto 0);
                    phi_mul242_cast_reg_6145_pp6_iter3_reg(17 downto 0) <= phi_mul242_cast_reg_6145_pp6_iter2_reg(17 downto 0);
                    phi_mul242_cast_reg_6145_pp6_iter4_reg(17 downto 0) <= phi_mul242_cast_reg_6145_pp6_iter3_reg(17 downto 0);
                    phi_mul242_cast_reg_6145_pp6_iter5_reg(17 downto 0) <= phi_mul242_cast_reg_6145_pp6_iter4_reg(17 downto 0);
                    phi_mul242_cast_reg_6145_pp6_iter6_reg(17 downto 0) <= phi_mul242_cast_reg_6145_pp6_iter5_reg(17 downto 0);
                    phi_mul242_cast_reg_6145_pp6_iter7_reg(17 downto 0) <= phi_mul242_cast_reg_6145_pp6_iter6_reg(17 downto 0);
                tmp_253_i_reg_6186_pp6_iter3_reg <= tmp_253_i_reg_6186;
                tmp_253_i_reg_6186_pp6_iter4_reg <= tmp_253_i_reg_6186_pp6_iter3_reg;
                tmp_253_i_reg_6186_pp6_iter5_reg <= tmp_253_i_reg_6186_pp6_iter4_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state169)) then
                i1_2_reg_6013 <= i1_2_fu_4158_p3;
                j1_2_reg_6018 <= j1_2_fu_4166_p3;
                or_cond1_i_reg_6023 <= or_cond1_i_fu_4210_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state176)) then
                i1_5_reg_6114 <= i1_5_fu_4449_p3;
                j1_5_reg_6120 <= j1_5_fu_4457_p3;
                mask_val_addr_3_reg_6126 <= tmp_65_cast_fu_4505_p1(17 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then
                i_1_reg_5473 <= i_1_fu_2172_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state84)) then
                i_3_reg_5652 <= pt_buf_val_y_q0;
                j_3_reg_5645 <= pt_buf_val_x_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_reg_5267 <= i_fu_1322_p2;
                next_mul_reg_5258 <= next_mul_fu_1307_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state98)) then
                icmp5_reg_5900 <= icmp5_fu_3520_p2;
                icmp6_reg_5925 <= icmp6_fu_3669_p2;
                is_neg_1_reg_5880 <= p_Val2_118_fu_3433_p2(15 downto 15);
                msb_idx_2_reg_5890 <= msb_idx_2_fu_3484_p2;
                msb_idx_3_reg_5895 <= msb_idx_3_fu_3502_p3;
                msb_idx_4_reg_5915 <= msb_idx_4_fu_3633_p2;
                msb_idx_5_reg_5920 <= msb_idx_5_fu_3651_p3;
                    p_Result_102_reg_5930(1 downto 0) <= p_Result_102_fu_3737_p3(1 downto 0);
                    p_Result_97_reg_5905(1 downto 0) <= p_Result_97_fu_3588_p3(1 downto 0);
                p_Val2_118_reg_5869 <= p_Val2_118_fu_3433_p2;
                p_Val2_123_reg_5910 <= p_Val2_123_fu_3601_p3;
                tmp_141_i_reg_5875 <= tmp_141_i_fu_3438_p2;
                tmp_V_reg_5885 <= tmp_V_fu_3451_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state83)) then
                idx_reg_5626 <= grp_fu_2677_p2;
                tmp_115_i_reg_5631 <= tmp_115_i_fu_2682_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond6_i_reg_5683_pp4_iter6_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001))) then
                isNeg_1_reg_5807 <= sh_assign_2_fu_3234_p2(8 downto 8);
                loc_V_12_reg_5802 <= loc_V_12_fu_3226_p1;
                p_Result_135_reg_5797 <= p_Val2_115_fu_3204_p1(31 downto 31);
                sh_assign_3_reg_5812 <= sh_assign_3_fu_3258_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_reg_6150_pp6_iter6_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp6_stage0_11001))) then
                isNeg_2_reg_6274 <= sh_assign_4_fu_5005_p2(8 downto 8);
                loc_V_16_reg_6269 <= loc_V_16_fu_4997_p1;
                p_Result_149_reg_6264 <= p_Val2_137_fu_4975_p1(31 downto 31);
                sh_assign_5_reg_6279 <= sh_assign_5_fu_5029_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state97)) then
                is_neg_2_reg_5863 <= is_neg_2_fu_3425_p1(15 downto 15);
                p_Val2_121_reg_5854 <= trigtab_V_q1;
                p_Val2_s_reg_5847 <= trigtab_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_reg_6150_pp6_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp6_stage0_11001))) then
                is_neg_3_reg_6191 <= p_Val2_126_fu_4582_p2(48 downto 48);
                num_zeros_3_reg_6207 <= num_zeros_3_fu_4650_p1;
                p_Val2_128_reg_6196 <= p_Val2_128_fu_4612_p3;
                    p_Val2_62_cast_i_reg_6201(47 downto 0) <= p_Val2_62_cast_i_fu_4620_p1(47 downto 0);
                tmp_253_i_reg_6186 <= tmp_253_i_fu_4592_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond6_i_reg_5683_pp4_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001))) then
                is_neg_reg_5724 <= p_Val2_101_fu_2811_p2(48 downto 48);
                num_zeros_reg_5740 <= num_zeros_fu_2879_p1;
                p_Val2_103_reg_5729 <= p_Val2_103_fu_2841_p3;
                    p_Val2_42_cast_i_reg_5734(47 downto 0) <= p_Val2_42_cast_i_fu_2849_p1(47 downto 0);
                tmp_138_i_reg_5719 <= tmp_138_i_fu_2821_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then
                j_2_reg_5499 <= j_2_fu_2218_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state174)) then
                k_1_reg_6079 <= k_1_fu_4365_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state168)) then
                k_reg_5998 <= k_fu_4118_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond7_i_fu_4112_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state168))) then
                line_end_x_addr_reg_6008 <= tmp_221_i_fu_4124_p1(1 - 1 downto 0);
                line_end_y_addr_reg_6003 <= tmp_221_i_fu_4124_p1(1 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state172)) then
                line_end_x_load_1_reg_6058 <= line_end_x_q0;
                line_end_x_load_2_reg_6063 <= line_end_x_q1;
                tmp_220_i_reg_6068 <= tmp_220_i_fu_4323_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state175)) then
                line_end_x_load_reg_6109 <= line_end_x_q1;
                line_end_y_load_reg_6104 <= line_end_y_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state39)) then
                loc_V_4_reg_5539 <= loc_V_4_fu_2284_p1;
                loc_V_reg_5531 <= p_Val2_78_fu_2262_p1(30 downto 23);
                p_Result_61_reg_5522 <= p_Val2_78_fu_2262_p1(31 downto 31);
                tmp_148_reg_5550 <= tmp_148_fu_2303_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (exitcond2_i_fu_2213_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then
                mask_val_addr_reg_5509 <= tmp_40_cast_fu_2233_p1(17 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state177)) then
                mask_val_load_2_reg_6131 <= mask_val_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state47)) then
                max_val_reg_5582 <= max_val_fu_2652_p2;
                p_i_cast_reg_5577 <= p_i_cast_fu_2648_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_253_i_reg_6186 = ap_const_lv1_0) and (exitcond_i_reg_6150_pp6_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp6_stage0_11001))) then
                msb_idx_6_reg_6212 <= msb_idx_6_fu_4654_p2;
                tmp32_V_21_reg_6217 <= tmp32_V_21_fu_4774_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_138_i_reg_5719 = ap_const_lv1_0) and (exitcond6_i_reg_5683_pp4_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001))) then
                msb_idx_reg_5745 <= msb_idx_fu_2883_p2;
                tmp32_V_6_reg_5750 <= tmp32_V_6_fu_3003_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then
                n_1_reg_5687 <= n_1_fu_2755_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                n_2_reg_5306 <= n_2_fu_1409_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                n_reg_5289 <= n_fu_1370_p2;
                next_mul1_reg_5280 <= next_mul1_fu_1358_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_138_i_reg_5719_pp4_iter4_reg = ap_const_lv1_0) and (exitcond6_i_reg_5683_pp4_iter4_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001))) then
                p_Result_24_i_reg_5760 <= tmp32_V_24_fu_3011_p1(30 downto 23);
                tmp32_V_24_reg_5755 <= tmp32_V_24_fu_3011_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_141_i_reg_5875 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state101))) then
                p_Result_26_i_reg_5955 <= tmp32_V_25_fu_3806_p1(30 downto 23);
                tmp32_V_25_reg_5950 <= tmp32_V_25_fu_3806_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_178_i_reg_5940 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state101))) then
                p_Result_32_i_reg_5965 <= tmp32_V_26_fu_3820_p1(30 downto 23);
                tmp32_V_26_reg_5960 <= tmp32_V_26_fu_3820_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_253_i_reg_6186_pp6_iter4_reg = ap_const_lv1_0) and (exitcond_i_reg_6150_pp6_iter4_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp6_stage0_11001))) then
                p_Result_40_i_reg_6227 <= tmp32_V_27_fu_4782_p1(30 downto 23);
                tmp32_V_27_reg_6222 <= tmp32_V_27_fu_4782_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond6_i_reg_5683 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then
                p_Val2_100_reg_5707 <= p_Val2_100_fu_2791_p2;
                p_Val2_23_reg_5713 <= p_Val2_23_fu_2800_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_reg_6150 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_const_boolean_0 = ap_block_pp6_stage0_11001))) then
                p_Val2_125_reg_6174 <= p_Val2_125_fu_4562_p2;
                p_Val2_24_reg_6180 <= p_Val2_24_fu_4571_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state46)) then
                p_Val2_i_i_i_reg_5567 <= grp_sqrt_fixed_32_32_s_fu_1258_ap_return;
                tmp_155_reg_5572 <= tmp_155_fu_2628_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state27) or ((exitcond5_i_reg_5302 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)))) then
                reg_1295 <= grp_fu_1275_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state38) or ((exitcond5_i_reg_5302_pp2_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter3 = ap_const_logic_1)))) then
                reg_1301 <= grp_fu_1263_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond6_i_reg_5683_pp4_iter5_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001))) then
                t_V_10_reg_5770 <= t_V_10_fu_3076_p1;
                tmp_273_i_i_reg_5782 <= tmp_273_i_i_fu_3096_p2;
                tmp_i_i_390_reg_5776 <= tmp_i_i_390_fu_3090_p2;
                x_assign_8_reg_5765 <= x_assign_8_fu_3069_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_reg_6150_pp6_iter5_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp6_stage0_11001))) then
                t_V_18_reg_6237 <= t_V_18_fu_4847_p1;
                tmp_273_i_i1_reg_6249 <= tmp_273_i_i1_fu_4867_p2;
                tmp_i_i1_reg_6243 <= tmp_i_i1_fu_4861_p2;
                x_assign_s_reg_6232 <= x_assign_s_fu_4840_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state99)) then
                tmp32_V_15_reg_5945 <= tmp32_V_15_fu_3799_p3;
                tmp_178_i_reg_5940 <= tmp_178_i_fu_3773_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_141_i_reg_5875 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state99))) then
                tmp32_V_9_reg_5935 <= tmp32_V_9_fu_3766_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_220_i_reg_6068 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state173))) then
                tmp_224_i_reg_6072 <= tmp_224_i_fu_4354_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond8_i_fu_4359_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state174))) then
                tmp_233_reg_6094 <= tmp_233_fu_4391_p1;
                tmp_239_i_reg_6100 <= tmp_239_i_fu_4410_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state102)) then
                tmp_25_reg_5970 <= tmp_25_fu_4032_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_i_fu_2167_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state23))) then
                    tmp_34_reg_5478(17 downto 6) <= tmp_34_fu_2202_p2(17 downto 6);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state36)) then
                tmp_i_i_i_reg_5517 <= grp_log_generic_float_s_fu_1213_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((tmp_112_i_fu_2661_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state48)) or ((tmp_115_i_reg_5631 = ap_const_lv1_1) and (ap_phi_mux_p_1_i_phi_fu_1190_p8 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state190)))) then
                total_5_i_reg_1204 <= total_1_fu_380;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond5_i_reg_5302_pp2_iter10_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                v_assign_1_reg_5321 <= grp_sin_or_cos_float_s_fu_1243_ap_return;
                v_assign_reg_5316 <= grp_sin_or_cos_float_s_fu_1228_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state40)) then
                x_assign_7_reg_5555 <= x_assign_7_fu_2471_p3;
            end if;
        end if;
    end process;
    p_Result_123_reg_5334(53 downto 52) <= "01";
    p_Result_124_reg_5402(53 downto 52) <= "01";
    tmp_34_reg_5478(5 downto 0) <= "000000";
    phi_mul240_cast_reg_5678(18) <= '0';
    phi_mul240_cast_reg_5678_pp4_iter1_reg(18) <= '0';
    phi_mul240_cast_reg_5678_pp4_iter2_reg(18) <= '0';
    phi_mul240_cast_reg_5678_pp4_iter3_reg(18) <= '0';
    phi_mul240_cast_reg_5678_pp4_iter4_reg(18) <= '0';
    phi_mul240_cast_reg_5678_pp4_iter5_reg(18) <= '0';
    phi_mul240_cast_reg_5678_pp4_iter6_reg(18) <= '0';
    phi_mul240_cast_reg_5678_pp4_iter7_reg(18) <= '0';
    p_Val2_42_cast_i_reg_5734(48) <= '0';
    p_Result_97_reg_5905(15 downto 2) <= "00000000000000";
    p_Result_102_reg_5930(15 downto 2) <= "00000000000000";
    phi_mul242_cast_reg_6145(18) <= '0';
    phi_mul242_cast_reg_6145_pp6_iter1_reg(18) <= '0';
    phi_mul242_cast_reg_6145_pp6_iter2_reg(18) <= '0';
    phi_mul242_cast_reg_6145_pp6_iter3_reg(18) <= '0';
    phi_mul242_cast_reg_6145_pp6_iter4_reg(18) <= '0';
    phi_mul242_cast_reg_6145_pp6_iter5_reg(18) <= '0';
    phi_mul242_cast_reg_6145_pp6_iter6_reg(18) <= '0';
    phi_mul242_cast_reg_6145_pp6_iter7_reg(18) <= '0';
    p_Val2_62_cast_i_reg_6201(48) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, edge_rows_empty_n, edge_cols_empty_n, lines_rows_empty_n, lines_cols_empty_n, threshold_empty_n, lineGap_empty_n, lines_rows_out_full_n, lines_cols_out_full_n, ap_enable_reg_pp2_iter1, ap_CS_fsm_state2, tmp_i_fu_1317_p2, ap_CS_fsm_state3, ap_CS_fsm_state5, exitcond3_i_fu_1364_p2, ap_CS_fsm_state6, exitcond5_i_fu_1403_p2, ap_enable_reg_pp2_iter0, exitcond1_i_fu_2167_p2, ap_CS_fsm_state23, exitcond2_i_fu_2213_p2, ap_enable_reg_pp3_iter0, ap_CS_fsm_state48, tmp_112_i_fu_2661_p2, ap_CS_fsm_state83, tmp_115_i_fu_2682_p2, tmp_115_i_reg_5631, mask_val_q0, ap_CS_fsm_state85, exitcond6_i_fu_2749_p2, ap_enable_reg_pp4_iter0, ap_enable_reg_pp4_iter9, ap_CS_fsm_state96, tmp_134_i_fu_3400_p2, tmp_25_fu_4032_p2, ap_CS_fsm_state102, exitcond7_i_fu_4112_p2, ap_CS_fsm_state168, or_cond1_i_reg_6023, ap_CS_fsm_state170, tmp_241_i_fu_4268_p2, tmp_220_i_reg_6068, tmp_224_i_fu_4354_p2, ap_CS_fsm_state173, ap_CS_fsm_state174, exitcond8_i_fu_4359_p2, ap_CS_fsm_state177, exitcond_i_fu_4520_p2, ap_enable_reg_pp6_iter0, ap_CS_fsm_state188, or_cond2_i_fu_5153_p2, ap_CS_fsm_state190, ap_block_pp2_stage0_subdone, ap_enable_reg_pp2_iter12, ap_enable_reg_pp2_iter13, ap_block_pp3_stage0_subdone, ap_block_pp4_stage0_subdone, ap_enable_reg_pp4_iter1, ap_enable_reg_pp4_iter8, ap_block_pp6_stage0_subdone, ap_enable_reg_pp6_iter1, ap_enable_reg_pp6_iter8, ap_enable_reg_pp6_iter9, tmp_91_i_fu_1332_p2, exitcond4_i_fu_1376_p2, ap_phi_mux_p_1_i_phi_fu_1190_p8)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((lines_cols_out_full_n = ap_const_logic_0) or (lines_rows_out_full_n = ap_const_logic_0) or (lineGap_empty_n = ap_const_logic_0) or (threshold_empty_n = ap_const_logic_0) or (lines_cols_empty_n = ap_const_logic_0) or (lines_rows_empty_n = ap_const_logic_0) or (edge_cols_empty_n = ap_const_logic_0) or (edge_rows_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((tmp_i_fu_1317_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((tmp_91_i_fu_1332_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when ap_ST_fsm_state5 => 
                if (((exitcond3_i_fu_1364_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state6 => 
                if (((exitcond4_i_fu_1376_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_pp2_stage0 => 
                if ((not(((exitcond5_i_fu_1403_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone))) and not(((ap_enable_reg_pp2_iter13 = ap_const_logic_1) and (ap_enable_reg_pp2_iter12 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                elsif ((((exitcond5_i_fu_1403_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) or ((ap_enable_reg_pp2_iter13 = ap_const_logic_1) and (ap_enable_reg_pp2_iter12 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                if (((exitcond1_i_fu_2167_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state23))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state27;
                end if;
            when ap_ST_fsm_pp3_stage0 => 
                if (not(((exitcond2_i_fu_2213_p2 = ap_const_lv1_1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                elsif (((exitcond2_i_fu_2213_p2 = ap_const_lv1_1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state26;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                end if;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                if (((tmp_112_i_fu_2661_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state48))) then
                    ap_NS_fsm <= ap_ST_fsm_state191;
                else
                    ap_NS_fsm <= ap_ST_fsm_state49;
                end if;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                ap_NS_fsm <= ap_ST_fsm_state53;
            when ap_ST_fsm_state53 => 
                ap_NS_fsm <= ap_ST_fsm_state54;
            when ap_ST_fsm_state54 => 
                ap_NS_fsm <= ap_ST_fsm_state55;
            when ap_ST_fsm_state55 => 
                ap_NS_fsm <= ap_ST_fsm_state56;
            when ap_ST_fsm_state56 => 
                ap_NS_fsm <= ap_ST_fsm_state57;
            when ap_ST_fsm_state57 => 
                ap_NS_fsm <= ap_ST_fsm_state58;
            when ap_ST_fsm_state58 => 
                ap_NS_fsm <= ap_ST_fsm_state59;
            when ap_ST_fsm_state59 => 
                ap_NS_fsm <= ap_ST_fsm_state60;
            when ap_ST_fsm_state60 => 
                ap_NS_fsm <= ap_ST_fsm_state61;
            when ap_ST_fsm_state61 => 
                ap_NS_fsm <= ap_ST_fsm_state62;
            when ap_ST_fsm_state62 => 
                ap_NS_fsm <= ap_ST_fsm_state63;
            when ap_ST_fsm_state63 => 
                ap_NS_fsm <= ap_ST_fsm_state64;
            when ap_ST_fsm_state64 => 
                ap_NS_fsm <= ap_ST_fsm_state65;
            when ap_ST_fsm_state65 => 
                ap_NS_fsm <= ap_ST_fsm_state66;
            when ap_ST_fsm_state66 => 
                ap_NS_fsm <= ap_ST_fsm_state67;
            when ap_ST_fsm_state67 => 
                ap_NS_fsm <= ap_ST_fsm_state68;
            when ap_ST_fsm_state68 => 
                ap_NS_fsm <= ap_ST_fsm_state69;
            when ap_ST_fsm_state69 => 
                ap_NS_fsm <= ap_ST_fsm_state70;
            when ap_ST_fsm_state70 => 
                ap_NS_fsm <= ap_ST_fsm_state71;
            when ap_ST_fsm_state71 => 
                ap_NS_fsm <= ap_ST_fsm_state72;
            when ap_ST_fsm_state72 => 
                ap_NS_fsm <= ap_ST_fsm_state73;
            when ap_ST_fsm_state73 => 
                ap_NS_fsm <= ap_ST_fsm_state74;
            when ap_ST_fsm_state74 => 
                ap_NS_fsm <= ap_ST_fsm_state75;
            when ap_ST_fsm_state75 => 
                ap_NS_fsm <= ap_ST_fsm_state76;
            when ap_ST_fsm_state76 => 
                ap_NS_fsm <= ap_ST_fsm_state77;
            when ap_ST_fsm_state77 => 
                ap_NS_fsm <= ap_ST_fsm_state78;
            when ap_ST_fsm_state78 => 
                ap_NS_fsm <= ap_ST_fsm_state79;
            when ap_ST_fsm_state79 => 
                ap_NS_fsm <= ap_ST_fsm_state80;
            when ap_ST_fsm_state80 => 
                ap_NS_fsm <= ap_ST_fsm_state81;
            when ap_ST_fsm_state81 => 
                ap_NS_fsm <= ap_ST_fsm_state82;
            when ap_ST_fsm_state82 => 
                ap_NS_fsm <= ap_ST_fsm_state83;
            when ap_ST_fsm_state83 => 
                if (((tmp_115_i_fu_2682_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state83))) then
                    ap_NS_fsm <= ap_ST_fsm_state190;
                else
                    ap_NS_fsm <= ap_ST_fsm_state84;
                end if;
            when ap_ST_fsm_state84 => 
                ap_NS_fsm <= ap_ST_fsm_state85;
            when ap_ST_fsm_state85 => 
                if (((mask_val_q0 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state85))) then
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state190;
                end if;
            when ap_ST_fsm_pp4_stage0 => 
                if ((not(((exitcond6_i_fu_2749_p2 = ap_const_lv1_1) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_enable_reg_pp4_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp4_stage0_subdone))) and not(((ap_enable_reg_pp4_iter9 = ap_const_logic_1) and (ap_enable_reg_pp4_iter8 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp4_stage0_subdone))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage0;
                elsif ((((ap_enable_reg_pp4_iter9 = ap_const_logic_1) and (ap_enable_reg_pp4_iter8 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp4_stage0_subdone)) or ((exitcond6_i_fu_2749_p2 = ap_const_lv1_1) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_enable_reg_pp4_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp4_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_state96;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage0;
                end if;
            when ap_ST_fsm_state96 => 
                if (((tmp_134_i_fu_3400_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state96))) then
                    ap_NS_fsm <= ap_ST_fsm_state190;
                else
                    ap_NS_fsm <= ap_ST_fsm_state97;
                end if;
            when ap_ST_fsm_state97 => 
                ap_NS_fsm <= ap_ST_fsm_state98;
            when ap_ST_fsm_state98 => 
                ap_NS_fsm <= ap_ST_fsm_state99;
            when ap_ST_fsm_state99 => 
                ap_NS_fsm <= ap_ST_fsm_state100;
            when ap_ST_fsm_state100 => 
                ap_NS_fsm <= ap_ST_fsm_state101;
            when ap_ST_fsm_state101 => 
                ap_NS_fsm <= ap_ST_fsm_state102;
            when ap_ST_fsm_state102 => 
                if (((tmp_25_fu_4032_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state102))) then
                    ap_NS_fsm <= ap_ST_fsm_state136;
                else
                    ap_NS_fsm <= ap_ST_fsm_state103;
                end if;
            when ap_ST_fsm_state103 => 
                ap_NS_fsm <= ap_ST_fsm_state104;
            when ap_ST_fsm_state104 => 
                ap_NS_fsm <= ap_ST_fsm_state105;
            when ap_ST_fsm_state105 => 
                ap_NS_fsm <= ap_ST_fsm_state106;
            when ap_ST_fsm_state106 => 
                ap_NS_fsm <= ap_ST_fsm_state107;
            when ap_ST_fsm_state107 => 
                ap_NS_fsm <= ap_ST_fsm_state108;
            when ap_ST_fsm_state108 => 
                ap_NS_fsm <= ap_ST_fsm_state109;
            when ap_ST_fsm_state109 => 
                ap_NS_fsm <= ap_ST_fsm_state110;
            when ap_ST_fsm_state110 => 
                ap_NS_fsm <= ap_ST_fsm_state111;
            when ap_ST_fsm_state111 => 
                ap_NS_fsm <= ap_ST_fsm_state112;
            when ap_ST_fsm_state112 => 
                ap_NS_fsm <= ap_ST_fsm_state113;
            when ap_ST_fsm_state113 => 
                ap_NS_fsm <= ap_ST_fsm_state114;
            when ap_ST_fsm_state114 => 
                ap_NS_fsm <= ap_ST_fsm_state115;
            when ap_ST_fsm_state115 => 
                ap_NS_fsm <= ap_ST_fsm_state116;
            when ap_ST_fsm_state116 => 
                ap_NS_fsm <= ap_ST_fsm_state117;
            when ap_ST_fsm_state117 => 
                ap_NS_fsm <= ap_ST_fsm_state118;
            when ap_ST_fsm_state118 => 
                ap_NS_fsm <= ap_ST_fsm_state119;
            when ap_ST_fsm_state119 => 
                ap_NS_fsm <= ap_ST_fsm_state120;
            when ap_ST_fsm_state120 => 
                ap_NS_fsm <= ap_ST_fsm_state121;
            when ap_ST_fsm_state121 => 
                ap_NS_fsm <= ap_ST_fsm_state122;
            when ap_ST_fsm_state122 => 
                ap_NS_fsm <= ap_ST_fsm_state123;
            when ap_ST_fsm_state123 => 
                ap_NS_fsm <= ap_ST_fsm_state124;
            when ap_ST_fsm_state124 => 
                ap_NS_fsm <= ap_ST_fsm_state125;
            when ap_ST_fsm_state125 => 
                ap_NS_fsm <= ap_ST_fsm_state126;
            when ap_ST_fsm_state126 => 
                ap_NS_fsm <= ap_ST_fsm_state127;
            when ap_ST_fsm_state127 => 
                ap_NS_fsm <= ap_ST_fsm_state128;
            when ap_ST_fsm_state128 => 
                ap_NS_fsm <= ap_ST_fsm_state129;
            when ap_ST_fsm_state129 => 
                ap_NS_fsm <= ap_ST_fsm_state130;
            when ap_ST_fsm_state130 => 
                ap_NS_fsm <= ap_ST_fsm_state131;
            when ap_ST_fsm_state131 => 
                ap_NS_fsm <= ap_ST_fsm_state132;
            when ap_ST_fsm_state132 => 
                ap_NS_fsm <= ap_ST_fsm_state133;
            when ap_ST_fsm_state133 => 
                ap_NS_fsm <= ap_ST_fsm_state134;
            when ap_ST_fsm_state134 => 
                ap_NS_fsm <= ap_ST_fsm_state135;
            when ap_ST_fsm_state135 => 
                ap_NS_fsm <= ap_ST_fsm_state168;
            when ap_ST_fsm_state136 => 
                ap_NS_fsm <= ap_ST_fsm_state137;
            when ap_ST_fsm_state137 => 
                ap_NS_fsm <= ap_ST_fsm_state138;
            when ap_ST_fsm_state138 => 
                ap_NS_fsm <= ap_ST_fsm_state139;
            when ap_ST_fsm_state139 => 
                ap_NS_fsm <= ap_ST_fsm_state140;
            when ap_ST_fsm_state140 => 
                ap_NS_fsm <= ap_ST_fsm_state141;
            when ap_ST_fsm_state141 => 
                ap_NS_fsm <= ap_ST_fsm_state142;
            when ap_ST_fsm_state142 => 
                ap_NS_fsm <= ap_ST_fsm_state143;
            when ap_ST_fsm_state143 => 
                ap_NS_fsm <= ap_ST_fsm_state144;
            when ap_ST_fsm_state144 => 
                ap_NS_fsm <= ap_ST_fsm_state145;
            when ap_ST_fsm_state145 => 
                ap_NS_fsm <= ap_ST_fsm_state146;
            when ap_ST_fsm_state146 => 
                ap_NS_fsm <= ap_ST_fsm_state147;
            when ap_ST_fsm_state147 => 
                ap_NS_fsm <= ap_ST_fsm_state148;
            when ap_ST_fsm_state148 => 
                ap_NS_fsm <= ap_ST_fsm_state149;
            when ap_ST_fsm_state149 => 
                ap_NS_fsm <= ap_ST_fsm_state150;
            when ap_ST_fsm_state150 => 
                ap_NS_fsm <= ap_ST_fsm_state151;
            when ap_ST_fsm_state151 => 
                ap_NS_fsm <= ap_ST_fsm_state152;
            when ap_ST_fsm_state152 => 
                ap_NS_fsm <= ap_ST_fsm_state153;
            when ap_ST_fsm_state153 => 
                ap_NS_fsm <= ap_ST_fsm_state154;
            when ap_ST_fsm_state154 => 
                ap_NS_fsm <= ap_ST_fsm_state155;
            when ap_ST_fsm_state155 => 
                ap_NS_fsm <= ap_ST_fsm_state156;
            when ap_ST_fsm_state156 => 
                ap_NS_fsm <= ap_ST_fsm_state157;
            when ap_ST_fsm_state157 => 
                ap_NS_fsm <= ap_ST_fsm_state158;
            when ap_ST_fsm_state158 => 
                ap_NS_fsm <= ap_ST_fsm_state159;
            when ap_ST_fsm_state159 => 
                ap_NS_fsm <= ap_ST_fsm_state160;
            when ap_ST_fsm_state160 => 
                ap_NS_fsm <= ap_ST_fsm_state161;
            when ap_ST_fsm_state161 => 
                ap_NS_fsm <= ap_ST_fsm_state162;
            when ap_ST_fsm_state162 => 
                ap_NS_fsm <= ap_ST_fsm_state163;
            when ap_ST_fsm_state163 => 
                ap_NS_fsm <= ap_ST_fsm_state164;
            when ap_ST_fsm_state164 => 
                ap_NS_fsm <= ap_ST_fsm_state165;
            when ap_ST_fsm_state165 => 
                ap_NS_fsm <= ap_ST_fsm_state166;
            when ap_ST_fsm_state166 => 
                ap_NS_fsm <= ap_ST_fsm_state167;
            when ap_ST_fsm_state167 => 
                ap_NS_fsm <= ap_ST_fsm_state135;
            when ap_ST_fsm_state168 => 
                if (((exitcond7_i_fu_4112_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state168))) then
                    ap_NS_fsm <= ap_ST_fsm_state169;
                else
                    ap_NS_fsm <= ap_ST_fsm_state172;
                end if;
            when ap_ST_fsm_state169 => 
                ap_NS_fsm <= ap_ST_fsm_state170;
            when ap_ST_fsm_state170 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state170) and (((or_cond1_i_reg_6023 = ap_const_lv1_1) and (tmp_241_i_fu_4268_p2 = ap_const_lv1_0)) or ((or_cond1_i_reg_6023 = ap_const_lv1_1) and (mask_val_q0 = ap_const_lv1_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_state169;
                else
                    ap_NS_fsm <= ap_ST_fsm_state171;
                end if;
            when ap_ST_fsm_state171 => 
                ap_NS_fsm <= ap_ST_fsm_state168;
            when ap_ST_fsm_state172 => 
                ap_NS_fsm <= ap_ST_fsm_state173;
            when ap_ST_fsm_state173 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state173) and ((tmp_224_i_fu_4354_p2 = ap_const_lv1_0) or (tmp_220_i_reg_6068 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state174;
                else
                    ap_NS_fsm <= ap_ST_fsm_state189;
                end if;
            when ap_ST_fsm_state174 => 
                if (((exitcond8_i_fu_4359_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state174))) then
                    ap_NS_fsm <= ap_ST_fsm_state189;
                else
                    ap_NS_fsm <= ap_ST_fsm_state175;
                end if;
            when ap_ST_fsm_state175 => 
                ap_NS_fsm <= ap_ST_fsm_state176;
            when ap_ST_fsm_state176 => 
                ap_NS_fsm <= ap_ST_fsm_state177;
            when ap_ST_fsm_state177 => 
                if (((mask_val_q0 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state177))) then
                    ap_NS_fsm <= ap_ST_fsm_pp6_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state188;
                end if;
            when ap_ST_fsm_pp6_stage0 => 
                if ((not(((exitcond_i_fu_4520_p2 = ap_const_lv1_1) and (ap_enable_reg_pp6_iter0 = ap_const_logic_1) and (ap_enable_reg_pp6_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp6_stage0_subdone))) and not(((ap_enable_reg_pp6_iter9 = ap_const_logic_1) and (ap_enable_reg_pp6_iter8 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp6_stage0_subdone))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp6_stage0;
                elsif ((((ap_enable_reg_pp6_iter9 = ap_const_logic_1) and (ap_enable_reg_pp6_iter8 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp6_stage0_subdone)) or ((exitcond_i_fu_4520_p2 = ap_const_lv1_1) and (ap_enable_reg_pp6_iter0 = ap_const_logic_1) and (ap_enable_reg_pp6_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp6_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_state188;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp6_stage0;
                end if;
            when ap_ST_fsm_state188 => 
                if (((or_cond2_i_fu_5153_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state188))) then
                    ap_NS_fsm <= ap_ST_fsm_state174;
                else
                    ap_NS_fsm <= ap_ST_fsm_state176;
                end if;
            when ap_ST_fsm_state189 => 
                ap_NS_fsm <= ap_ST_fsm_state190;
            when ap_ST_fsm_state190 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state190) and ((tmp_115_i_reg_5631 = ap_const_lv1_0) or (ap_phi_mux_p_1_i_phi_fu_1190_p8 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state48;
                else
                    ap_NS_fsm <= ap_ST_fsm_state191;
                end if;
            when ap_ST_fsm_state191 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    F2_1_fu_1622_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(tmp_155_i_fu_1590_p1));
    F2_fu_1478_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(tmp_96_i_fu_1446_p1));
    M_fu_2622_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv32_1),to_integer(unsigned('0' & p_Val2_99_fu_2614_p3(31-1 downto 0)))));
        OP1_V_4_fu_2742_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(i_3_reg_5652),48));

        OP1_V_5_fu_4510_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(j1_5_reg_6120),48));

        OP1_V_6_fu_4513_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(i1_5_reg_6114),48));

        OP1_V_fu_2739_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(j_3_reg_5645),48));

    abs_i44_i_fu_4346_p3 <= 
        x_assign_2_fu_4328_p2 when (abscond_i43_i_fu_4340_p2(0) = '1') else 
        neg_i42_i_fu_4334_p2;
    abs_i_i_fu_4315_p3 <= 
        x_assign_fu_4297_p2 when (abscond_i_i_fu_4309_p2(0) = '1') else 
        neg_i_i_fu_4303_p2;
    abscond_i43_i_fu_4340_p2 <= "1" when (signed(x_assign_2_fu_4328_p2) > signed(ap_const_lv32_0)) else "0";
    abscond_i_i_fu_4309_p2 <= "1" when (signed(x_assign_fu_4297_p2) > signed(ap_const_lv32_0)) else "0";

    accum_address0_assign_proc : process(ap_CS_fsm_state6, accum_addr_2_reg_6285, ap_enable_reg_pp4_iter8, ap_enable_reg_pp6_iter9, ap_block_pp4_stage0, tmp_32_cast_fu_1398_p1, tmp_51_cast_fu_3362_p1, ap_block_pp6_stage0)
    begin
        if (((ap_enable_reg_pp6_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp6_stage0))) then 
            accum_address0 <= accum_addr_2_reg_6285;
        elsif (((ap_enable_reg_pp4_iter8 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0))) then 
            accum_address0 <= tmp_51_cast_fu_3362_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            accum_address0 <= tmp_32_cast_fu_1398_p1(18 - 1 downto 0);
        else 
            accum_address0 <= "XXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    accum_address1_assign_proc : process(accum_addr_1_reg_5818, ap_enable_reg_pp4_iter9, ap_enable_reg_pp6_iter8, ap_block_pp4_stage0, ap_block_pp6_stage0, tmp_72_cast_fu_5133_p1)
    begin
        if (((ap_enable_reg_pp6_iter8 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp6_stage0))) then 
            accum_address1 <= tmp_72_cast_fu_5133_p1(18 - 1 downto 0);
        elsif (((ap_enable_reg_pp4_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0))) then 
            accum_address1 <= accum_addr_1_reg_5818;
        else 
            accum_address1 <= "XXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    accum_ce0_assign_proc : process(ap_block_pp4_stage0_11001, ap_CS_fsm_state6, ap_block_pp6_stage0_11001, ap_enable_reg_pp4_iter8, ap_enable_reg_pp6_iter9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or ((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_enable_reg_pp4_iter8 = ap_const_logic_1)) or ((ap_enable_reg_pp6_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp6_stage0_11001)))) then 
            accum_ce0 <= ap_const_logic_1;
        else 
            accum_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    accum_ce1_assign_proc : process(ap_block_pp4_stage0_11001, ap_enable_reg_pp4_iter9, ap_block_pp6_stage0_11001, ap_enable_reg_pp6_iter8)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_enable_reg_pp4_iter9 = ap_const_logic_1)) or ((ap_enable_reg_pp6_iter8 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp6_stage0_11001)))) then 
            accum_ce1 <= ap_const_logic_1;
        else 
            accum_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    accum_d0_assign_proc : process(ap_CS_fsm_state6, ap_enable_reg_pp6_iter9, ap_block_pp6_stage0, tmp_269_i_fu_5138_p2)
    begin
        if (((ap_enable_reg_pp6_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp6_stage0))) then 
            accum_d0 <= tmp_269_i_fu_5138_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            accum_d0 <= ap_const_lv32_0;
        else 
            accum_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    accum_we0_assign_proc : process(ap_CS_fsm_state6, ap_block_pp6_stage0_11001, exitcond_i_reg_6150_pp6_iter8_reg, ap_enable_reg_pp6_iter9, exitcond4_i_fu_1376_p2)
    begin
        if ((((exitcond4_i_fu_1376_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((exitcond_i_reg_6150_pp6_iter8_reg = ap_const_lv1_0) and (ap_enable_reg_pp6_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp6_stage0_11001)))) then 
            accum_we0 <= ap_const_logic_1;
        else 
            accum_we0 <= ap_const_logic_0;
        end if; 
    end process;


    accum_we1_assign_proc : process(ap_block_pp4_stage0_11001, exitcond6_i_reg_5683_pp4_iter8_reg, ap_enable_reg_pp4_iter9)
    begin
        if (((exitcond6_i_reg_5683_pp4_iter8_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_enable_reg_pp4_iter9 = ap_const_logic_1))) then 
            accum_we1 <= ap_const_logic_1;
        else 
            accum_we1 <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(7);
    ap_CS_fsm_pp3_stage0 <= ap_CS_fsm(10);
    ap_CS_fsm_pp4_stage0 <= ap_CS_fsm(71);
    ap_CS_fsm_pp6_stage0 <= ap_CS_fsm(154);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state100 <= ap_CS_fsm(76);
    ap_CS_fsm_state101 <= ap_CS_fsm(77);
    ap_CS_fsm_state102 <= ap_CS_fsm(78);
    ap_CS_fsm_state135 <= ap_CS_fsm(111);
    ap_CS_fsm_state168 <= ap_CS_fsm(144);
    ap_CS_fsm_state169 <= ap_CS_fsm(145);
    ap_CS_fsm_state170 <= ap_CS_fsm(146);
    ap_CS_fsm_state171 <= ap_CS_fsm(147);
    ap_CS_fsm_state172 <= ap_CS_fsm(148);
    ap_CS_fsm_state173 <= ap_CS_fsm(149);
    ap_CS_fsm_state174 <= ap_CS_fsm(150);
    ap_CS_fsm_state175 <= ap_CS_fsm(151);
    ap_CS_fsm_state176 <= ap_CS_fsm(152);
    ap_CS_fsm_state177 <= ap_CS_fsm(153);
    ap_CS_fsm_state188 <= ap_CS_fsm(155);
    ap_CS_fsm_state189 <= ap_CS_fsm(156);
    ap_CS_fsm_state190 <= ap_CS_fsm(157);
    ap_CS_fsm_state191 <= ap_CS_fsm(158);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state22 <= ap_CS_fsm(8);
    ap_CS_fsm_state23 <= ap_CS_fsm(9);
    ap_CS_fsm_state26 <= ap_CS_fsm(11);
    ap_CS_fsm_state27 <= ap_CS_fsm(12);
    ap_CS_fsm_state28 <= ap_CS_fsm(13);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state36 <= ap_CS_fsm(21);
    ap_CS_fsm_state37 <= ap_CS_fsm(22);
    ap_CS_fsm_state38 <= ap_CS_fsm(23);
    ap_CS_fsm_state39 <= ap_CS_fsm(24);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state40 <= ap_CS_fsm(25);
    ap_CS_fsm_state41 <= ap_CS_fsm(26);
    ap_CS_fsm_state42 <= ap_CS_fsm(27);
    ap_CS_fsm_state46 <= ap_CS_fsm(31);
    ap_CS_fsm_state47 <= ap_CS_fsm(32);
    ap_CS_fsm_state48 <= ap_CS_fsm(33);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state83 <= ap_CS_fsm(68);
    ap_CS_fsm_state84 <= ap_CS_fsm(69);
    ap_CS_fsm_state85 <= ap_CS_fsm(70);
    ap_CS_fsm_state96 <= ap_CS_fsm(72);
    ap_CS_fsm_state97 <= ap_CS_fsm(73);
    ap_CS_fsm_state98 <= ap_CS_fsm(74);
    ap_CS_fsm_state99 <= ap_CS_fsm(75);
    ap_NS_fsm_state28 <= ap_NS_fsm(13);
        ap_block_pp2_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp6_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp6_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp6_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, edge_rows_empty_n, edge_cols_empty_n, lines_rows_empty_n, lines_cols_empty_n, threshold_empty_n, lineGap_empty_n, lines_rows_out_full_n, lines_cols_out_full_n)
    begin
                ap_block_state1 <= ((lines_cols_out_full_n = ap_const_logic_0) or (lines_rows_out_full_n = ap_const_logic_0) or (lineGap_empty_n = ap_const_logic_0) or (threshold_empty_n = ap_const_logic_0) or (lines_cols_empty_n = ap_const_logic_0) or (lines_rows_empty_n = ap_const_logic_0) or (edge_cols_empty_n = ap_const_logic_0) or (edge_rows_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state10_pp2_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp2_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp2_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp2_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp2_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp2_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp2_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state178_pp6_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state179_pp6_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp2_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state180_pp6_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state181_pp6_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state182_pp6_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state183_pp6_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state184_pp6_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state185_pp6_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state186_pp6_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state187_pp6_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp2_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp2_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp2_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp2_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp3_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp3_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state86_pp4_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state87_pp4_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state88_pp4_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state89_pp4_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp2_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state90_pp4_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state91_pp4_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state92_pp4_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state93_pp4_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state94_pp4_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state95_pp4_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp2_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp2_exit_iter0_state8_assign_proc : process(exitcond5_i_fu_1403_p2)
    begin
        if ((exitcond5_i_fu_1403_p2 = ap_const_lv1_1)) then 
            ap_condition_pp2_exit_iter0_state8 <= ap_const_logic_1;
        else 
            ap_condition_pp2_exit_iter0_state8 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp3_exit_iter0_state24_assign_proc : process(exitcond2_i_fu_2213_p2)
    begin
        if ((exitcond2_i_fu_2213_p2 = ap_const_lv1_1)) then 
            ap_condition_pp3_exit_iter0_state24 <= ap_const_logic_1;
        else 
            ap_condition_pp3_exit_iter0_state24 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp4_exit_iter0_state86_assign_proc : process(exitcond6_i_fu_2749_p2)
    begin
        if ((exitcond6_i_fu_2749_p2 = ap_const_lv1_1)) then 
            ap_condition_pp4_exit_iter0_state86 <= ap_const_logic_1;
        else 
            ap_condition_pp4_exit_iter0_state86 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp6_exit_iter0_state178_assign_proc : process(exitcond_i_fu_4520_p2)
    begin
        if ((exitcond_i_fu_4520_p2 = ap_const_lv1_1)) then 
            ap_condition_pp6_exit_iter0_state178 <= ap_const_logic_1;
        else 
            ap_condition_pp6_exit_iter0_state178 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state191)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state191)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp2 <= (ap_idle_pp2 xor ap_const_logic_1);
    ap_enable_pp3 <= (ap_idle_pp3 xor ap_const_logic_1);
    ap_enable_pp4 <= (ap_idle_pp4 xor ap_const_logic_1);
    ap_enable_pp6 <= (ap_idle_pp6 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp2_assign_proc : process(ap_enable_reg_pp2_iter1, ap_enable_reg_pp2_iter3, ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter2, ap_enable_reg_pp2_iter4, ap_enable_reg_pp2_iter5, ap_enable_reg_pp2_iter6, ap_enable_reg_pp2_iter7, ap_enable_reg_pp2_iter8, ap_enable_reg_pp2_iter9, ap_enable_reg_pp2_iter10, ap_enable_reg_pp2_iter11, ap_enable_reg_pp2_iter12, ap_enable_reg_pp2_iter13)
    begin
        if (((ap_enable_reg_pp2_iter0 = ap_const_logic_0) and (ap_enable_reg_pp2_iter3 = ap_const_logic_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter13 = ap_const_logic_0) and (ap_enable_reg_pp2_iter12 = ap_const_logic_0) and (ap_enable_reg_pp2_iter11 = ap_const_logic_0) and (ap_enable_reg_pp2_iter10 = ap_const_logic_0) and (ap_enable_reg_pp2_iter9 = ap_const_logic_0) and (ap_enable_reg_pp2_iter8 = ap_const_logic_0) and (ap_enable_reg_pp2_iter7 = ap_const_logic_0) and (ap_enable_reg_pp2_iter6 = ap_const_logic_0) and (ap_enable_reg_pp2_iter5 = ap_const_logic_0) and (ap_enable_reg_pp2_iter4 = ap_const_logic_0) and (ap_enable_reg_pp2_iter2 = ap_const_logic_0))) then 
            ap_idle_pp2 <= ap_const_logic_1;
        else 
            ap_idle_pp2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp3_assign_proc : process(ap_enable_reg_pp3_iter0, ap_enable_reg_pp3_iter1)
    begin
        if (((ap_enable_reg_pp3_iter0 = ap_const_logic_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0))) then 
            ap_idle_pp3 <= ap_const_logic_1;
        else 
            ap_idle_pp3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp4_assign_proc : process(ap_enable_reg_pp4_iter0, ap_enable_reg_pp4_iter9, ap_enable_reg_pp4_iter1, ap_enable_reg_pp4_iter2, ap_enable_reg_pp4_iter3, ap_enable_reg_pp4_iter4, ap_enable_reg_pp4_iter5, ap_enable_reg_pp4_iter6, ap_enable_reg_pp4_iter7, ap_enable_reg_pp4_iter8)
    begin
        if (((ap_enable_reg_pp4_iter9 = ap_const_logic_0) and (ap_enable_reg_pp4_iter0 = ap_const_logic_0) and (ap_enable_reg_pp4_iter8 = ap_const_logic_0) and (ap_enable_reg_pp4_iter7 = ap_const_logic_0) and (ap_enable_reg_pp4_iter6 = ap_const_logic_0) and (ap_enable_reg_pp4_iter5 = ap_const_logic_0) and (ap_enable_reg_pp4_iter4 = ap_const_logic_0) and (ap_enable_reg_pp4_iter3 = ap_const_logic_0) and (ap_enable_reg_pp4_iter2 = ap_const_logic_0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_0))) then 
            ap_idle_pp4 <= ap_const_logic_1;
        else 
            ap_idle_pp4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp6_assign_proc : process(ap_enable_reg_pp6_iter0, ap_enable_reg_pp6_iter1, ap_enable_reg_pp6_iter2, ap_enable_reg_pp6_iter3, ap_enable_reg_pp6_iter4, ap_enable_reg_pp6_iter5, ap_enable_reg_pp6_iter6, ap_enable_reg_pp6_iter7, ap_enable_reg_pp6_iter8, ap_enable_reg_pp6_iter9)
    begin
        if (((ap_enable_reg_pp6_iter9 = ap_const_logic_0) and (ap_enable_reg_pp6_iter8 = ap_const_logic_0) and (ap_enable_reg_pp6_iter7 = ap_const_logic_0) and (ap_enable_reg_pp6_iter6 = ap_const_logic_0) and (ap_enable_reg_pp6_iter5 = ap_const_logic_0) and (ap_enable_reg_pp6_iter4 = ap_const_logic_0) and (ap_enable_reg_pp6_iter3 = ap_const_logic_0) and (ap_enable_reg_pp6_iter2 = ap_const_logic_0) and (ap_enable_reg_pp6_iter1 = ap_const_logic_0) and (ap_enable_reg_pp6_iter0 = ap_const_logic_0))) then 
            ap_idle_pp6 <= ap_const_logic_1;
        else 
            ap_idle_pp6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_dx_i_phi_fu_998_p4_assign_proc : process(tmp_25_reg_5970, ap_CS_fsm_state135, dx0_fu_4091_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state135)) then
            if ((tmp_25_reg_5970 = ap_const_lv1_0)) then 
                ap_phi_mux_dx_i_phi_fu_998_p4 <= ap_const_lv32_1;
            elsif ((tmp_25_reg_5970 = ap_const_lv1_1)) then 
                ap_phi_mux_dx_i_phi_fu_998_p4 <= dx0_fu_4091_p3;
            else 
                ap_phi_mux_dx_i_phi_fu_998_p4 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            ap_phi_mux_dx_i_phi_fu_998_p4 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    ap_phi_mux_dy_i_phi_fu_1009_p4_assign_proc : process(tmp_25_reg_5970, ap_CS_fsm_state135, dy0_fu_4070_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state135)) then
            if ((tmp_25_reg_5970 = ap_const_lv1_0)) then 
                ap_phi_mux_dy_i_phi_fu_1009_p4 <= dy0_fu_4070_p3;
            elsif ((tmp_25_reg_5970 = ap_const_lv1_1)) then 
                ap_phi_mux_dy_i_phi_fu_1009_p4 <= ap_const_lv32_1;
            else 
                ap_phi_mux_dy_i_phi_fu_1009_p4 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            ap_phi_mux_dy_i_phi_fu_1009_p4 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    ap_phi_mux_gap_1_i_phi_fu_1100_p4_assign_proc : process(mask_val_q0, or_cond1_i_reg_6023, ap_CS_fsm_state170, tmp_241_i_fu_4268_p2, gap_fu_4261_p2)
    begin
        if (((or_cond1_i_reg_6023 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state170))) then
            if (((tmp_241_i_fu_4268_p2 = ap_const_lv1_0) and (mask_val_q0 = ap_const_lv1_0))) then 
                ap_phi_mux_gap_1_i_phi_fu_1100_p4 <= gap_fu_4261_p2;
            elsif ((mask_val_q0 = ap_const_lv1_1)) then 
                ap_phi_mux_gap_1_i_phi_fu_1100_p4 <= ap_const_lv32_0;
            else 
                ap_phi_mux_gap_1_i_phi_fu_1100_p4 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            ap_phi_mux_gap_1_i_phi_fu_1100_p4 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    ap_phi_mux_max_n_phi_fu_956_p4_assign_proc : process(max_n_reg_952, ap_CS_fsm_pp4_stage0, exitcond6_i_reg_5683, n_1_reg_5687, ap_enable_reg_pp4_iter1, ap_block_pp4_stage0)
    begin
        if (((exitcond6_i_reg_5683 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0))) then 
            ap_phi_mux_max_n_phi_fu_956_p4 <= n_1_reg_5687;
        else 
            ap_phi_mux_max_n_phi_fu_956_p4 <= max_n_reg_952;
        end if; 
    end process;


    ap_phi_mux_n4_i_phi_fu_874_p4_assign_proc : process(n4_i_reg_870, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, exitcond5_i_reg_5302, n_2_reg_5306, ap_block_pp2_stage0)
    begin
        if (((exitcond5_i_reg_5302 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            ap_phi_mux_n4_i_phi_fu_874_p4 <= n_2_reg_5306;
        else 
            ap_phi_mux_n4_i_phi_fu_874_p4 <= n4_i_reg_870;
        end if; 
    end process;

    ap_phi_mux_p_1_i_phi_fu_1190_p8 <= p_1_i_reg_1185;

    ap_phi_mux_p_x_assign_phi_fu_900_p4_assign_proc : process(p_x_assign_reg_895, exitcond2_i_reg_5495, ap_CS_fsm_pp3_stage0, j_2_reg_5499, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0)
    begin
        if (((exitcond2_i_reg_5495 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            ap_phi_mux_p_x_assign_phi_fu_900_p4 <= j_2_reg_5499;
        else 
            ap_phi_mux_p_x_assign_phi_fu_900_p4 <= p_x_assign_reg_895;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state191)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state191)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    cnt_fu_2666_p2 <= std_logic_vector(unsigned(cnt_i_reg_919) + unsigned(ap_const_lv31_1));
    cnt_i_cast_fu_2657_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cnt_i_reg_919),32));
    dx0_1_fu_4285_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(dx0_1_i_reg_1029));
    dx0_2_fu_5171_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(dx0_2_i_reg_1108));
    dx0_fu_4091_p3 <= (grp_fu_4064_p2 & ap_const_lv2_0);
    dy0_1_fu_4291_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(dy0_1_i_reg_1040));
    dy0_2_fu_5177_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(dy0_2_i_reg_1119));
    dy0_fu_4070_p3 <= (grp_fu_4048_p2 & ap_const_lv2_0);

    edge_cols_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, edge_cols_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            edge_cols_blk_n <= edge_cols_empty_n;
        else 
            edge_cols_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    edge_cols_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, edge_rows_empty_n, edge_cols_empty_n, lines_rows_empty_n, lines_cols_empty_n, threshold_empty_n, lineGap_empty_n, lines_rows_out_full_n, lines_cols_out_full_n)
    begin
        if ((not(((lines_cols_out_full_n = ap_const_logic_0) or (lines_rows_out_full_n = ap_const_logic_0) or (lineGap_empty_n = ap_const_logic_0) or (threshold_empty_n = ap_const_logic_0) or (lines_cols_empty_n = ap_const_logic_0) or (lines_rows_empty_n = ap_const_logic_0) or (edge_cols_empty_n = ap_const_logic_0) or (edge_rows_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            edge_cols_read <= ap_const_logic_1;
        else 
            edge_cols_read <= ap_const_logic_0;
        end if; 
    end process;


    edge_rows_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, edge_rows_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            edge_rows_blk_n <= edge_rows_empty_n;
        else 
            edge_rows_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    edge_rows_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, edge_rows_empty_n, edge_cols_empty_n, lines_rows_empty_n, lines_cols_empty_n, threshold_empty_n, lineGap_empty_n, lines_rows_out_full_n, lines_cols_out_full_n)
    begin
        if ((not(((lines_cols_out_full_n = ap_const_logic_0) or (lines_rows_out_full_n = ap_const_logic_0) or (lineGap_empty_n = ap_const_logic_0) or (threshold_empty_n = ap_const_logic_0) or (lines_cols_empty_n = ap_const_logic_0) or (lines_rows_empty_n = ap_const_logic_0) or (edge_cols_empty_n = ap_const_logic_0) or (edge_rows_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            edge_rows_read <= ap_const_logic_1;
        else 
            edge_rows_read <= ap_const_logic_0;
        end if; 
    end process;

    edge_val_address0 <= tmp_40_cast_fu_2233_p1(17 - 1 downto 0);

    edge_val_ce0_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            edge_val_ce0 <= ap_const_logic_1;
        else 
            edge_val_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond1_i_fu_2167_p2 <= "1" when (p_y_assign_reg_882 = rows_reg_5246) else "0";
    exitcond2_i_fu_2213_p2 <= "1" when (ap_phi_mux_p_x_assign_phi_fu_900_p4 = cols_reg_5252) else "0";
    exitcond3_i_fu_1364_p2 <= "1" when (n_i_reg_836 = ap_const_lv8_B4) else "0";
    exitcond4_i_fu_1376_p2 <= "1" when (r_i_reg_859 = ap_const_lv11_461) else "0";
    exitcond5_i_fu_1403_p2 <= "1" when (ap_phi_mux_n4_i_phi_fu_874_p4 = ap_const_lv8_B4) else "0";
    exitcond6_i_fu_2749_p2 <= "1" when (ap_phi_mux_max_n_phi_fu_956_p4 = ap_const_lv8_B4) else "0";
    exitcond7_i_fu_4112_p2 <= "1" when (k_i_reg_1051 = ap_const_lv2_2) else "0";
    exitcond8_i_fu_4359_p2 <= "1" when (k1_i_reg_1130 = ap_const_lv2_2) else "0";
    exitcond_i_fu_4520_p2 <= "1" when (n5_i_reg_1163 = ap_const_lv8_B4) else "0";
    exp_tmp_V_1_fu_1580_p4 <= ireg_V_1_fu_1564_p1(62 downto 52);
    exp_tmp_V_fu_1436_p4 <= ireg_V_fu_1420_p1(62 downto 52);
    f_5_fu_4836_p1 <= p_Result_146_fu_4825_p5;
    f_fu_3065_p1 <= p_Result_132_fu_3054_p5;
    gap_fu_4261_p2 <= std_logic_vector(unsigned(gap_i_reg_1062) + unsigned(ap_const_lv32_1));

    grp_fu_1263_p0_assign_proc : process(reg_1295, tmp_i_i_i_reg_5517, ap_enable_reg_pp2_iter2, ap_block_pp2_stage0, ap_CS_fsm_state37)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            grp_fu_1263_p0 <= tmp_i_i_i_reg_5517;
        elsif (((ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            grp_fu_1263_p0 <= reg_1295;
        else 
            grp_fu_1263_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1263_p1_assign_proc : process(ap_enable_reg_pp2_iter2, ap_block_pp2_stage0, ap_CS_fsm_state37)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            grp_fu_1263_p1 <= ap_const_lv32_3FB8AA3B;
        elsif (((ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            grp_fu_1263_p1 <= ap_const_lv32_3C8EFA35;
        else 
            grp_fu_1263_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1269_p0_assign_proc : process(tmp32_V_6_reg_5750, tmp32_V_9_reg_5935, tmp32_V_21_reg_6217, ap_enable_reg_pp4_iter4, ap_enable_reg_pp6_iter4, ap_block_pp4_stage0, ap_block_pp6_stage0, ap_CS_fsm_state100)
    begin
        if (((ap_enable_reg_pp6_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp6_stage0))) then 
            grp_fu_1269_p0 <= tmp32_V_21_reg_6217;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state100)) then 
            grp_fu_1269_p0 <= tmp32_V_9_reg_5935;
        elsif (((ap_enable_reg_pp4_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0))) then 
            grp_fu_1269_p0 <= tmp32_V_6_reg_5750;
        else 
            grp_fu_1269_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1275_p0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, n4_cast84_i_fu_1415_p1, ap_CS_fsm_state23, ap_block_pp2_stage0, pt_buf_length_i_fu_376)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            grp_fu_1275_p0 <= pt_buf_length_i_fu_376;
        elsif (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            grp_fu_1275_p0 <= n4_cast84_i_fu_1415_p1;
        else 
            grp_fu_1275_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2677_ap_start_assign_proc : process(ap_CS_fsm_state48, tmp_112_i_fu_2661_p2)
    begin
        if (((tmp_112_i_fu_2661_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state48))) then 
            grp_fu_2677_ap_start <= ap_const_logic_1;
        else 
            grp_fu_2677_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2677_p0 <= std_logic_vector(unsigned(idx_i_reg_908) + unsigned(p_i_cast_reg_5577));

    grp_fu_4048_ap_start_assign_proc : process(tmp_25_fu_4032_p2, ap_CS_fsm_state102)
    begin
        if (((tmp_25_fu_4032_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state102))) then 
            grp_fu_4048_ap_start <= ap_const_logic_1;
        else 
            grp_fu_4048_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_4048_p0 <= (p_Val2_118_reg_5869 & ap_const_lv14_0);

    grp_fu_4064_ap_start_assign_proc : process(tmp_25_fu_4032_p2, ap_CS_fsm_state102)
    begin
        if (((tmp_25_fu_4032_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state102))) then 
            grp_fu_4064_ap_start <= ap_const_logic_1;
        else 
            grp_fu_4064_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_4064_p0 <= (p_Val2_121_reg_5854 & ap_const_lv14_0);
    grp_log_generic_float_s_fu_1213_ap_start <= grp_log_generic_float_s_fu_1213_ap_start_reg;
    grp_sin_or_cos_float_s_fu_1228_ap_start <= grp_sin_or_cos_float_s_fu_1228_ap_start_reg;
    grp_sin_or_cos_float_s_fu_1228_do_cos <= ap_const_logic_0;
    grp_sin_or_cos_float_s_fu_1243_ap_start <= grp_sin_or_cos_float_s_fu_1243_ap_start_reg;
    grp_sin_or_cos_float_s_fu_1243_do_cos <= ap_const_logic_1;
        i1_1_fu_4154_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_229_i_fu_4144_p4),32));

    i1_2_fu_4158_p3 <= 
        i1_1_fu_4154_p1 when (xflag_i_reg_1017(0) = '1') else 
        i1_reg_1085;
        i1_4_fu_4445_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_245_i_fu_4435_p4),32));

    i1_5_fu_4449_p3 <= 
        i1_4_fu_4445_p1 when (xflag_i_reg_1017(0) = '1') else 
        i1_3_reg_1152;
    i_0_i_cast_cast_i_fu_1313_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i_i_reg_802),4));
    i_1_fu_2172_p2 <= std_logic_vector(unsigned(p_y_assign_reg_882) + unsigned(ap_const_lv32_1));
    i_fu_1322_p2 <= std_logic_vector(unsigned(i_0_i_i_reg_802) + unsigned(ap_const_lv3_1));
    icmp1_fu_1542_p2 <= "1" when (signed(tmp_127_fu_1532_p4) > signed(ap_const_lv8_0)) else "0";
    icmp2_fu_1664_p2 <= "1" when (tmp_137_fu_1654_p4 = ap_const_lv8_0) else "0";
    icmp3_fu_1686_p2 <= "1" when (signed(tmp_140_fu_1676_p4) > signed(ap_const_lv8_0)) else "0";
    icmp4_fu_2918_p2 <= "1" when (tmp_166_fu_2908_p4 = ap_const_lv26_0) else "0";
    icmp5_fu_3520_p2 <= "1" when (tmp_193_fu_3510_p4 = ap_const_lv26_0) else "0";
    icmp6_fu_3669_p2 <= "1" when (tmp_211_fu_3659_p4 = ap_const_lv26_0) else "0";
    icmp7_fu_4689_p2 <= "1" when (tmp_245_fu_4679_p4 = ap_const_lv26_0) else "0";
    icmp_fu_1520_p2 <= "1" when (tmp_124_fu_1510_p4 = ap_const_lv8_0) else "0";
    index_V_3_fu_3102_p4 <= t_V_10_fu_3076_p1(27 downto 23);
    index_V_4_fu_4873_p4 <= t_V_18_fu_4847_p1(27 downto 23);
    index_V_fu_2288_p4 <= p_Val2_78_fu_2262_p1(27 downto 23);
    ireg_V_1_fu_1564_p1 <= d_assign_fu_1281_p1;
    ireg_V_fu_1420_p1 <= d_assign_3_fu_1278_p1;
    isNeg_1_fu_3240_p3 <= sh_assign_2_fu_3234_p2(8 downto 8);
    isNeg_2_fu_5011_p3 <= sh_assign_4_fu_5005_p2(8 downto 8);
    isNeg_fu_2528_p3 <= sh_assign_fu_2522_p2(8 downto 8);
    is_neg_1_fu_3443_p3 <= p_Val2_118_fu_3433_p2(15 downto 15);
    is_neg_2_fu_3425_p1 <= trigtab_V_q1;
    is_neg_3_fu_4598_p3 <= p_Val2_126_fu_4582_p2(48 downto 48);
    is_neg_fu_2827_p3 <= p_Val2_101_fu_2811_p2(48 downto 48);
    j1_2_fu_4166_p3 <= 
        j1_1_reg_1074 when (xflag_i_reg_1017(0) = '1') else 
        j1_fu_4140_p1;
        j1_3_fu_4431_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_243_i_fu_4421_p4),32));

    j1_5_fu_4457_p3 <= 
        j1_4_reg_1141 when (xflag_i_reg_1017(0) = '1') else 
        j1_3_fu_4431_p1;
        j1_fu_4140_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_227_i_fu_4130_p4),32));

    j_0_i_cast_cast_i_fu_1328_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_0_i_i_reg_825),8));
    j_2_fu_2218_p2 <= std_logic_vector(unsigned(ap_phi_mux_p_x_assign_phi_fu_900_p4) + unsigned(ap_const_lv32_1));
    j_fu_1337_p2 <= std_logic_vector(unsigned(j_0_i_i_reg_825) + unsigned(ap_const_lv7_1));
    k_1_fu_4365_p2 <= std_logic_vector(unsigned(k1_i_reg_1130) + unsigned(ap_const_lv2_1));
    k_fu_4118_p2 <= std_logic_vector(unsigned(k_i_reg_1051) + unsigned(ap_const_lv2_1));

    lineGap_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, lineGap_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            lineGap_blk_n <= lineGap_empty_n;
        else 
            lineGap_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    lineGap_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, edge_rows_empty_n, edge_cols_empty_n, lines_rows_empty_n, lines_cols_empty_n, threshold_empty_n, lineGap_empty_n, lines_rows_out_full_n, lines_cols_out_full_n)
    begin
        if ((not(((lines_cols_out_full_n = ap_const_logic_0) or (lines_rows_out_full_n = ap_const_logic_0) or (lineGap_empty_n = ap_const_logic_0) or (threshold_empty_n = ap_const_logic_0) or (lines_cols_empty_n = ap_const_logic_0) or (lines_rows_empty_n = ap_const_logic_0) or (edge_cols_empty_n = ap_const_logic_0) or (edge_rows_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            lineGap_read <= ap_const_logic_1;
        else 
            lineGap_read <= ap_const_logic_0;
        end if; 
    end process;


    line_end_x_address0_assign_proc : process(ap_CS_fsm_state168, line_end_x_addr_reg_6008, ap_CS_fsm_state170)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state170)) then 
            line_end_x_address0 <= line_end_x_addr_reg_6008;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state168)) then 
            line_end_x_address0 <= ap_const_lv64_1(1 - 1 downto 0);
        else 
            line_end_x_address0 <= "X";
        end if; 
    end process;


    line_end_x_address1_assign_proc : process(ap_CS_fsm_state168, ap_CS_fsm_state174, tmp_240_i_fu_4371_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state174)) then 
            line_end_x_address1 <= tmp_240_i_fu_4371_p1(1 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state168)) then 
            line_end_x_address1 <= ap_const_lv64_0(1 - 1 downto 0);
        else 
            line_end_x_address1 <= "X";
        end if; 
    end process;


    line_end_x_ce0_assign_proc : process(ap_CS_fsm_state168, ap_CS_fsm_state170)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state170) or (ap_const_logic_1 = ap_CS_fsm_state168))) then 
            line_end_x_ce0 <= ap_const_logic_1;
        else 
            line_end_x_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_end_x_ce1_assign_proc : process(ap_CS_fsm_state168, ap_CS_fsm_state174)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state174) or (ap_const_logic_1 = ap_CS_fsm_state168))) then 
            line_end_x_ce1 <= ap_const_logic_1;
        else 
            line_end_x_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    line_end_x_we0_assign_proc : process(mask_val_q0, or_cond1_i_reg_6023, ap_CS_fsm_state170)
    begin
        if (((or_cond1_i_reg_6023 = ap_const_lv1_1) and (mask_val_q0 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state170))) then 
            line_end_x_we0 <= ap_const_logic_1;
        else 
            line_end_x_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_end_y_address0_assign_proc : process(line_end_y_addr_reg_6003, ap_CS_fsm_state170, ap_CS_fsm_state172, ap_CS_fsm_state174)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state174) or (ap_const_logic_1 = ap_CS_fsm_state172))) then 
            line_end_y_address0 <= ap_const_lv64_1(1 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state170)) then 
            line_end_y_address0 <= line_end_y_addr_reg_6003;
        else 
            line_end_y_address0 <= "X";
        end if; 
    end process;


    line_end_y_address1_assign_proc : process(ap_CS_fsm_state172, ap_CS_fsm_state174, exitcond8_i_fu_4359_p2, tmp_240_i_fu_4371_p1)
    begin
        if (((exitcond8_i_fu_4359_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state174))) then 
            line_end_y_address1 <= tmp_240_i_fu_4371_p1(1 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state172) or ((exitcond8_i_fu_4359_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state174)))) then 
            line_end_y_address1 <= ap_const_lv64_0(1 - 1 downto 0);
        else 
            line_end_y_address1 <= "X";
        end if; 
    end process;


    line_end_y_ce0_assign_proc : process(ap_CS_fsm_state170, ap_CS_fsm_state172, ap_CS_fsm_state174)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state174) or (ap_const_logic_1 = ap_CS_fsm_state172) or (ap_const_logic_1 = ap_CS_fsm_state170))) then 
            line_end_y_ce0 <= ap_const_logic_1;
        else 
            line_end_y_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_end_y_ce1_assign_proc : process(ap_CS_fsm_state172, ap_CS_fsm_state174, exitcond8_i_fu_4359_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state172) or ((exitcond8_i_fu_4359_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state174)) or ((exitcond8_i_fu_4359_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state174)))) then 
            line_end_y_ce1 <= ap_const_logic_1;
        else 
            line_end_y_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    line_end_y_we0_assign_proc : process(mask_val_q0, or_cond1_i_reg_6023, ap_CS_fsm_state170)
    begin
        if (((or_cond1_i_reg_6023 = ap_const_lv1_1) and (mask_val_q0 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state170))) then 
            line_end_y_we0 <= ap_const_logic_1;
        else 
            line_end_y_we0 <= ap_const_logic_0;
        end if; 
    end process;


    lines_cols_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, lines_cols_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            lines_cols_blk_n <= lines_cols_empty_n;
        else 
            lines_cols_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    lines_cols_out_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, lines_cols_out_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            lines_cols_out_blk_n <= lines_cols_out_full_n;
        else 
            lines_cols_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    lines_cols_out_din <= lines_cols_dout;

    lines_cols_out_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, edge_rows_empty_n, edge_cols_empty_n, lines_rows_empty_n, lines_cols_empty_n, threshold_empty_n, lineGap_empty_n, lines_rows_out_full_n, lines_cols_out_full_n)
    begin
        if ((not(((lines_cols_out_full_n = ap_const_logic_0) or (lines_rows_out_full_n = ap_const_logic_0) or (lineGap_empty_n = ap_const_logic_0) or (threshold_empty_n = ap_const_logic_0) or (lines_cols_empty_n = ap_const_logic_0) or (lines_rows_empty_n = ap_const_logic_0) or (edge_cols_empty_n = ap_const_logic_0) or (edge_rows_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            lines_cols_out_write <= ap_const_logic_1;
        else 
            lines_cols_out_write <= ap_const_logic_0;
        end if; 
    end process;


    lines_cols_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, edge_rows_empty_n, edge_cols_empty_n, lines_rows_empty_n, lines_cols_empty_n, threshold_empty_n, lineGap_empty_n, lines_rows_out_full_n, lines_cols_out_full_n)
    begin
        if ((not(((lines_cols_out_full_n = ap_const_logic_0) or (lines_rows_out_full_n = ap_const_logic_0) or (lineGap_empty_n = ap_const_logic_0) or (threshold_empty_n = ap_const_logic_0) or (lines_cols_empty_n = ap_const_logic_0) or (lines_rows_empty_n = ap_const_logic_0) or (edge_cols_empty_n = ap_const_logic_0) or (edge_rows_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            lines_cols_read <= ap_const_logic_1;
        else 
            lines_cols_read <= ap_const_logic_0;
        end if; 
    end process;


    lines_rows_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, lines_rows_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            lines_rows_blk_n <= lines_rows_empty_n;
        else 
            lines_rows_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    lines_rows_out_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, lines_rows_out_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            lines_rows_out_blk_n <= lines_rows_out_full_n;
        else 
            lines_rows_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    lines_rows_out_din <= lines_rows_dout;

    lines_rows_out_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, edge_rows_empty_n, edge_cols_empty_n, lines_rows_empty_n, lines_cols_empty_n, threshold_empty_n, lineGap_empty_n, lines_rows_out_full_n, lines_cols_out_full_n)
    begin
        if ((not(((lines_cols_out_full_n = ap_const_logic_0) or (lines_rows_out_full_n = ap_const_logic_0) or (lineGap_empty_n = ap_const_logic_0) or (threshold_empty_n = ap_const_logic_0) or (lines_cols_empty_n = ap_const_logic_0) or (lines_rows_empty_n = ap_const_logic_0) or (edge_cols_empty_n = ap_const_logic_0) or (edge_rows_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            lines_rows_out_write <= ap_const_logic_1;
        else 
            lines_rows_out_write <= ap_const_logic_0;
        end if; 
    end process;


    lines_rows_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, edge_rows_empty_n, edge_cols_empty_n, lines_rows_empty_n, lines_cols_empty_n, threshold_empty_n, lineGap_empty_n, lines_rows_out_full_n, lines_cols_out_full_n)
    begin
        if ((not(((lines_cols_out_full_n = ap_const_logic_0) or (lines_rows_out_full_n = ap_const_logic_0) or (lineGap_empty_n = ap_const_logic_0) or (threshold_empty_n = ap_const_logic_0) or (lines_cols_empty_n = ap_const_logic_0) or (lines_rows_empty_n = ap_const_logic_0) or (edge_cols_empty_n = ap_const_logic_0) or (edge_rows_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            lines_rows_read <= ap_const_logic_1;
        else 
            lines_rows_read <= ap_const_logic_0;
        end if; 
    end process;


    lines_val_address0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state174, ap_CS_fsm_state189, tmp_29_cast_fu_1353_p1, tmp_235_i_fu_4386_p1, tmp_61_cast_fu_5198_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state189)) then 
            lines_val_address0 <= tmp_61_cast_fu_5198_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state174)) then 
            lines_val_address0 <= tmp_235_i_fu_4386_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            lines_val_address0 <= tmp_29_cast_fu_1353_p1(9 - 1 downto 0);
        else 
            lines_val_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    lines_val_address1_assign_proc : process(ap_CS_fsm_state174, ap_CS_fsm_state189, tmp_60_cast_fu_4401_p1, tmp_59_cast_fu_5188_p1, ap_CS_fsm_state191)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state191)) then 
            lines_val_address1 <= ap_const_lv64_0(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state189)) then 
            lines_val_address1 <= tmp_59_cast_fu_5188_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state174)) then 
            lines_val_address1 <= tmp_60_cast_fu_4401_p1(9 - 1 downto 0);
        else 
            lines_val_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    lines_val_ce0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state174, ap_CS_fsm_state189)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state174) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state189))) then 
            lines_val_ce0 <= ap_const_logic_1;
        else 
            lines_val_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    lines_val_ce1_assign_proc : process(ap_CS_fsm_state174, ap_CS_fsm_state189, ap_CS_fsm_state191)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state174) or (ap_const_logic_1 = ap_CS_fsm_state191) or (ap_const_logic_1 = ap_CS_fsm_state189))) then 
            lines_val_ce1 <= ap_const_logic_1;
        else 
            lines_val_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    lines_val_d0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state174, ap_CS_fsm_state189, tmp_232_fu_4382_p1, tmp_236_fu_5208_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state189)) then 
            lines_val_d0 <= tmp_236_fu_5208_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state174)) then 
            lines_val_d0 <= tmp_232_fu_4382_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            lines_val_d0 <= ap_const_lv16_0;
        else 
            lines_val_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    lines_val_d1_assign_proc : process(ap_CS_fsm_state174, ap_CS_fsm_state189, tmp_235_fu_4406_p1, tmp_234_fu_5203_p1, ap_CS_fsm_state191, tmp_240_fu_5213_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state191)) then 
            lines_val_d1 <= tmp_240_fu_5213_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state189)) then 
            lines_val_d1 <= tmp_234_fu_5203_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state174)) then 
            lines_val_d1 <= tmp_235_fu_4406_p1;
        else 
            lines_val_d1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    lines_val_we0_assign_proc : process(ap_CS_fsm_state3, tmp_220_i_reg_6068, tmp_224_i_reg_6072, ap_CS_fsm_state174, exitcond8_i_fu_4359_p2, tmp_91_i_fu_1332_p2, ap_CS_fsm_state189)
    begin
        if ((((exitcond8_i_fu_4359_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state174)) or ((tmp_91_i_fu_1332_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((ap_const_logic_1 = ap_CS_fsm_state189) and ((tmp_224_i_reg_6072 = ap_const_lv1_0) or (tmp_220_i_reg_6068 = ap_const_lv1_0))))) then 
            lines_val_we0 <= ap_const_logic_1;
        else 
            lines_val_we0 <= ap_const_logic_0;
        end if; 
    end process;


    lines_val_we1_assign_proc : process(tmp_220_i_reg_6068, tmp_224_i_reg_6072, ap_CS_fsm_state174, exitcond8_i_fu_4359_p2, ap_CS_fsm_state189, ap_CS_fsm_state191)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state191) or ((exitcond8_i_fu_4359_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state174)) or ((ap_const_logic_1 = ap_CS_fsm_state189) and ((tmp_224_i_reg_6072 = ap_const_lv1_0) or (tmp_220_i_reg_6068 = ap_const_lv1_0))))) then 
            lines_val_we1 <= ap_const_logic_1;
        else 
            lines_val_we1 <= ap_const_logic_0;
        end if; 
    end process;

    loc_V_10_fu_3142_p1 <= p_Val2_113_fu_3137_p2(23 - 1 downto 0);
    loc_V_11_fu_3216_p4 <= p_Val2_115_fu_3204_p1(30 downto 23);
    loc_V_12_fu_3226_p1 <= p_Val2_115_fu_3204_p1(23 - 1 downto 0);
    loc_V_13_fu_4851_p4 <= t_V_18_fu_4847_p1(30 downto 23);
    loc_V_14_fu_4913_p1 <= p_Val2_135_fu_4908_p2(23 - 1 downto 0);
    loc_V_15_fu_4987_p4 <= p_Val2_137_fu_4975_p1(30 downto 23);
    loc_V_16_fu_4997_p1 <= p_Val2_137_fu_4975_p1(23 - 1 downto 0);
    loc_V_4_fu_2284_p1 <= p_Val2_78_fu_2262_p1(23 - 1 downto 0);
    loc_V_5_fu_2369_p4 <= p_Val2_83_fu_2355_p2(30 downto 23);
    loc_V_6_fu_2379_p1 <= p_Val2_83_fu_2355_p2(23 - 1 downto 0);
    loc_V_7_fu_2490_p4 <= p_Val2_91_fu_2479_p1(30 downto 23);
    loc_V_8_fu_2500_p1 <= p_Val2_91_fu_2479_p1(23 - 1 downto 0);
    loc_V_9_fu_3080_p4 <= t_V_10_fu_3076_p1(30 downto 23);
    man_V_1_fu_1466_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(p_Result_123_fu_1462_p1));
    man_V_3_fu_1610_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(p_Result_124_fu_1606_p1));
    man_V_5_fu_1728_p3 <= 
        man_V_1_reg_5339 when (isneg_reg_5326(0) = '1') else 
        p_Result_123_reg_5334;
    man_V_fu_1945_p3 <= 
        man_V_3_reg_5407 when (isneg_1_reg_5394(0) = '1') else 
        p_Result_124_reg_5402;
    mask_cast_i_fu_2333_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mask_table1_q0),32));
    mask_table1_address0 <= tmp_47_i_fu_2298_p1(5 - 1 downto 0);

    mask_table1_ce0_assign_proc : process(ap_CS_fsm_state39)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            mask_table1_ce0 <= ap_const_logic_1;
        else 
            mask_table1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    mask_table3_address0_assign_proc : process(ap_enable_reg_pp4_iter6, ap_enable_reg_pp6_iter6, ap_block_pp4_stage0, tmp_274_i_i_fu_3112_p1, ap_block_pp6_stage0, tmp_274_i_i1_fu_4883_p1)
    begin
        if (((ap_enable_reg_pp6_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp6_stage0))) then 
            mask_table3_address0 <= tmp_274_i_i1_fu_4883_p1(5 - 1 downto 0);
        elsif (((ap_enable_reg_pp4_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0))) then 
            mask_table3_address0 <= tmp_274_i_i_fu_3112_p1(5 - 1 downto 0);
        else 
            mask_table3_address0 <= "XXXXX";
        end if; 
    end process;


    mask_table3_ce0_assign_proc : process(ap_block_pp4_stage0_11001, ap_block_pp6_stage0_11001, ap_enable_reg_pp4_iter6, ap_enable_reg_pp6_iter6)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_enable_reg_pp4_iter6 = ap_const_logic_1)) or ((ap_enable_reg_pp6_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp6_stage0_11001)))) then 
            mask_table3_ce0 <= ap_const_logic_1;
        else 
            mask_table3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    mask_val_address0_assign_proc : process(ap_CS_fsm_pp3_stage0, mask_val_addr_reg_5509, ap_CS_fsm_state84, ap_CS_fsm_state169, ap_CS_fsm_state176, mask_val_addr_3_reg_6126, ap_CS_fsm_state188, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0, tmp_117_i_fu_2239_p2, tmp_44_cast_fu_2734_p1, tmp_58_cast_fu_4256_p1, tmp_65_cast_fu_4505_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state188)) then 
            mask_val_address0 <= mask_val_addr_3_reg_6126;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state176)) then 
            mask_val_address0 <= tmp_65_cast_fu_4505_p1(17 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state169)) then 
            mask_val_address0 <= tmp_58_cast_fu_4256_p1(17 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
            mask_val_address0 <= tmp_44_cast_fu_2734_p1(17 - 1 downto 0);
        elsif ((((tmp_117_i_fu_2239_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0)) or ((tmp_117_i_fu_2239_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0)))) then 
            mask_val_address0 <= mask_val_addr_reg_5509;
        else 
            mask_val_address0 <= "XXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    mask_val_ce0_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_CS_fsm_state84, ap_CS_fsm_state169, ap_CS_fsm_state176, ap_CS_fsm_state188, ap_enable_reg_pp3_iter1, tmp_117_i_fu_2239_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state169) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state188) or (ap_const_logic_1 = ap_CS_fsm_state176) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (tmp_117_i_fu_2239_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (tmp_117_i_fu_2239_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1)))) then 
            mask_val_ce0 <= ap_const_logic_1;
        else 
            mask_val_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    mask_val_d0_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_CS_fsm_state188, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0, tmp_117_i_fu_2239_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state188) or ((tmp_117_i_fu_2239_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0)))) then 
            mask_val_d0 <= ap_const_lv1_0;
        elsif (((tmp_117_i_fu_2239_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            mask_val_d0 <= ap_const_lv1_1;
        else 
            mask_val_d0 <= "X";
        end if; 
    end process;


    mask_val_we0_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, mask_val_load_2_reg_6131, ap_CS_fsm_state188, ap_enable_reg_pp3_iter1, tmp_117_i_fu_2239_p2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (tmp_117_i_fu_2239_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (tmp_117_i_fu_2239_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1)) or ((mask_val_load_2_reg_6131 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state188)))) then 
            mask_val_we0 <= ap_const_logic_1;
        else 
            mask_val_we0 <= ap_const_logic_0;
        end if; 
    end process;

    max_n_1_cast79_i_fu_3367_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(max_n_reg_952_pp4_iter8_reg),32));
    max_val_2_fu_3371_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(accum_q0));
    max_val_fu_2652_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFF) + signed(threshold_read_reg_5233));
    msb_idx_1_fu_2900_p3 <= 
        ap_const_lv31_0 when (tmp_165_fu_2892_p3(0) = '1') else 
        tmp_164_fu_2888_p1;
    msb_idx_2_fu_3484_p2 <= std_logic_vector(unsigned(ap_const_lv32_F) - unsigned(num_zeros_1_fu_3476_p3));
    msb_idx_3_fu_3502_p3 <= 
        ap_const_lv31_0 when (tmp_192_fu_3494_p3(0) = '1') else 
        tmp_191_fu_3490_p1;
    msb_idx_4_fu_3633_p2 <= std_logic_vector(unsigned(ap_const_lv32_F) - unsigned(num_zeros_2_fu_3625_p3));
    msb_idx_5_fu_3651_p3 <= 
        ap_const_lv31_0 when (tmp_210_fu_3643_p3(0) = '1') else 
        tmp_209_fu_3639_p1;
    msb_idx_6_fu_4654_p2 <= std_logic_vector(unsigned(ap_const_lv32_30) - unsigned(num_zeros_3_reg_6207));
    msb_idx_7_fu_4671_p3 <= 
        ap_const_lv31_0 when (tmp_244_fu_4663_p3(0) = '1') else 
        tmp_243_fu_4659_p1;
    msb_idx_fu_2883_p2 <= std_logic_vector(unsigned(ap_const_lv32_30) - unsigned(num_zeros_reg_5740));
    n4_cast84_i_fu_1415_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_n4_i_phi_fu_874_p4),32));
    n7_0_max_n_i_fu_3392_p3 <= 
        max_n_1_cast79_i_fu_3367_p1 when (tmp_175_i_fu_3378_p2(0) = '1') else 
        max_n_i_reg_940;
    n_1_fu_2755_p2 <= std_logic_vector(unsigned(ap_phi_mux_max_n_phi_fu_956_p4) + unsigned(ap_const_lv8_1));
    n_2_fu_1409_p2 <= std_logic_vector(unsigned(ap_phi_mux_n4_i_phi_fu_874_p4) + unsigned(ap_const_lv8_1));
    n_3_fu_4526_p2 <= std_logic_vector(unsigned(n5_i_reg_1163) + unsigned(ap_const_lv8_1));
    n_fu_1370_p2 <= std_logic_vector(unsigned(n_i_reg_836) + unsigned(ap_const_lv8_1));
    neg_i42_i_fu_4334_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(x_assign_2_fu_4328_p2));
    neg_i_i_fu_4303_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(x_assign_fu_4297_p2));
    newSel1_fu_1928_p3 <= 
        tmp_123_fu_1744_p1 when (sel_tmp2_fu_1876_p2(0) = '1') else 
        ap_const_lv16_0;
    newSel3_fu_2131_p3 <= 
        tmp_189_i_fu_1991_p2 when (sel_tmp11_fu_2126_p2(0) = '1') else 
        p_Val2_70_fu_2082_p2;
    newSel4_fu_2145_p3 <= 
        tmp_136_fu_1961_p1 when (sel_tmp5_fu_2093_p2(0) = '1') else 
        ap_const_lv16_0;
    newSel_fu_1914_p3 <= 
        tmp_128_i_fu_1774_p2 when (sel_tmp3_fu_1909_p2(0) = '1') else 
        p_Val2_62_fu_1865_p2;
    next_mul1_fu_1358_p2 <= std_logic_vector(unsigned(phi_mul1_reg_847) + unsigned(ap_const_lv18_461));
    next_mul2_fu_2770_p2 <= std_logic_vector(unsigned(ap_const_lv18_461) + unsigned(phi_mul2_reg_964));
    next_mul3_fu_4541_p2 <= std_logic_vector(unsigned(ap_const_lv18_461) + unsigned(phi_mul3_reg_1174));
    next_mul_fu_1307_p2 <= std_logic_vector(unsigned(phi_mul_reg_813) + unsigned(ap_const_lv10_64));
    notlhs1_fu_3990_p2 <= "0" when (tmp_19_fu_3970_p4 = ap_const_lv8_FF) else "1";
    notlhs2_fu_4008_p2 <= "0" when (tmp_20_fu_3980_p4 = ap_const_lv8_FF) else "1";
    notrhs1_fu_3996_p2 <= "1" when (tmp_207_fu_3885_p1 = ap_const_lv23_0) else "0";
    notrhs2_fu_4014_p2 <= "1" when (tmp_225_fu_3953_p1 = ap_const_lv23_0) else "0";
    notrhs_fu_4194_p2 <= "1" when (signed(j1_2_fu_4166_p3) < signed(cols_reg_5252)) else "0";
    
    num_zeros_1_fu_3476_p3_proc : process(p_Result_137_fu_3468_p3)
    begin
        num_zeros_1_fu_3476_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 0 to 32 - 1 loop
            if p_Result_137_fu_3468_p3(i) = '1' then
                num_zeros_1_fu_3476_p3 <= std_logic_vector(to_unsigned(i,32));
                exit;
            end if;
        end loop;
    end process;

    
    num_zeros_2_fu_3625_p3_proc : process(p_Result_141_fu_3617_p3)
    begin
        num_zeros_2_fu_3625_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 0 to 32 - 1 loop
            if p_Result_141_fu_3617_p3(i) = '1' then
                num_zeros_2_fu_3625_p3 <= std_logic_vector(to_unsigned(i,32));
                exit;
            end if;
        end loop;
    end process;

    num_zeros_3_fu_4650_p1 <= tmp_256_i_fu_4642_p3(32 - 1 downto 0);
    num_zeros_fu_2879_p1 <= tmp_143_i_fu_2871_p3(32 - 1 downto 0);
    one_half_i_cast_i1_fu_4904_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(one_half_table4_q0),32));
    one_half_i_cast_i_fu_3133_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(one_half_table4_q0),32));

    one_half_table4_address0_assign_proc : process(ap_enable_reg_pp4_iter6, ap_enable_reg_pp6_iter6, ap_block_pp4_stage0, tmp_274_i_i_fu_3112_p1, ap_block_pp6_stage0, tmp_274_i_i1_fu_4883_p1)
    begin
        if (((ap_enable_reg_pp6_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp6_stage0))) then 
            one_half_table4_address0 <= tmp_274_i_i1_fu_4883_p1(5 - 1 downto 0);
        elsif (((ap_enable_reg_pp4_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0))) then 
            one_half_table4_address0 <= tmp_274_i_i_fu_3112_p1(5 - 1 downto 0);
        else 
            one_half_table4_address0 <= "XXXXX";
        end if; 
    end process;


    one_half_table4_ce0_assign_proc : process(ap_block_pp4_stage0_11001, ap_block_pp6_stage0_11001, ap_enable_reg_pp4_iter6, ap_enable_reg_pp6_iter6)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_enable_reg_pp4_iter6 = ap_const_logic_1)) or ((ap_enable_reg_pp6_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp6_stage0_11001)))) then 
            one_half_table4_ce0 <= ap_const_logic_1;
        else 
            one_half_table4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    or_cond1_fu_2139_p2 <= (sel_tmp9_fu_2110_p2 or sel_tmp11_fu_2126_p2);
    or_cond1_i_fu_4210_p2 <= (tmp_231_i_fu_4205_p2 and or_cond303_not_i_fu_4199_p2);
    or_cond2_i_fu_5153_p2 <= (tmp_259_i_fu_5149_p2 and tmp_254_i_fu_5145_p2);
    or_cond303_not_i_fu_4199_p2 <= (rev_fu_4188_p2 and notrhs_fu_4194_p2);
    or_cond_fu_1922_p2 <= (sel_tmp7_fu_1893_p2 or sel_tmp3_fu_1909_p2);
    or_cond_i_fu_2327_p2 <= (tmp_46_i_fu_2322_p2 and tmp_45_i_fu_2317_p2);
    p_Repl2_19_trunc_i_fu_3041_p2 <= std_logic_vector(unsigned(tmp_178_fu_3030_p1) + unsigned(tmp_cast_cast_fu_3033_p3));
    p_Repl2_21_trunc_i_fu_3850_p2 <= std_logic_vector(unsigned(tmp82_cast_cast_fu_3842_p3) + unsigned(tmp_205_fu_3839_p1));
    p_Repl2_24_trunc_i_fu_3918_p2 <= std_logic_vector(unsigned(tmp83_cast_cast_fu_3910_p3) + unsigned(tmp_223_fu_3907_p1));
    p_Repl2_27_trunc_i_fu_4812_p2 <= std_logic_vector(unsigned(tmp_257_fu_4801_p1) + unsigned(tmp85_cast_cast_fu_4804_p3));
    p_Result_102_fu_3737_p3 <= (ap_const_lv14_0 & tmp_221_fu_3733_p1);
    p_Result_113_fu_4889_p3 <= t_V_18_reg_6237(31 downto 31);
    p_Result_123_fu_1462_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_83_i_fu_1454_p3),54));
    p_Result_124_fu_1606_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_87_i_fu_1598_p3),54));
    p_Result_125_fu_2337_p3 <= (p_Result_61_reg_5522 & ap_const_lv31_0);
    p_Result_126_fu_2348_p3 <= (ap_const_lv1_0 & tmp_148_reg_5550);
    p_Result_127_fu_2361_p3 <= p_Val2_83_fu_2355_p2(31 downto 31);
    p_Result_128_fu_2412_p4 <= ((xs_sign_V_fu_2395_p2 & xs_exp_V_fu_2389_p3) & xs_sig_V_fu_2406_p2);
    p_Result_129_fu_2482_p3 <= p_Val2_91_fu_2479_p1(31 downto 31);
    
    p_Result_130_fu_2853_p4_proc : process(p_Val2_42_cast_i_fu_2849_p1)
    variable vlo_cpy : STD_LOGIC_VECTOR(49+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(49+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(49 - 1 downto 0);
    variable p_Result_130_fu_2853_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(49 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(49 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(49 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_30(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := p_Val2_42_cast_i_fu_2849_p1;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(49-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(49-1-unsigned(ap_const_lv32_30(6-1 downto 0)));
            for p_Result_130_fu_2853_p4_i in 0 to 49-1 loop
                v0_cpy(p_Result_130_fu_2853_p4_i) := p_Val2_42_cast_i_fu_2849_p1(49-1-p_Result_130_fu_2853_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(49-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_130_fu_2853_p4 <= resvalue(49-1 downto 0);
    end process;

    p_Result_131_fu_2863_p3 <= (ap_const_lv15_7FFF & p_Result_130_fu_2853_p4);
    p_Result_132_fu_3054_p5 <= (tmp_162_i_fu_3047_p3 & tmp32_V_24_reg_5755(22 downto 0));
    p_Result_133_fu_3125_p3 <= (p_Result_85_fu_3118_p3 & ap_const_lv31_0);
    p_Result_134_fu_3168_p3 <= (tmp_12_fu_3158_p4 & xs_sig_V_4_fu_3152_p2);
    
    p_Result_136_fu_3458_p4_proc : process(tmp_V_fu_3451_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(16+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(16+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(16 - 1 downto 0);
    variable p_Result_136_fu_3458_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(16 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(16 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(16 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(4 - 1 downto 0) := ap_const_lv32_F(4 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(4 - 1 downto 0) := ap_const_lv32_0(4 - 1 downto 0);
        v0_cpy := tmp_V_fu_3451_p3;
        if (vlo_cpy(4 - 1 downto 0) > vhi_cpy(4 - 1 downto 0)) then
            vhi_cpy(4-1 downto 0) := std_logic_vector(16-1-unsigned(ap_const_lv32_0(4-1 downto 0)));
            vlo_cpy(4-1 downto 0) := std_logic_vector(16-1-unsigned(ap_const_lv32_F(4-1 downto 0)));
            for p_Result_136_fu_3458_p4_i in 0 to 16-1 loop
                v0_cpy(p_Result_136_fu_3458_p4_i) := tmp_V_fu_3451_p3(16-1-p_Result_136_fu_3458_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(4-1 downto 0)))));

        section := (others=>'0');
        section(4-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(4-1 downto 0)) - unsigned(vlo_cpy(4-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(16-1 downto 0)))));
        res_mask := res_mask(16-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_136_fu_3458_p4 <= resvalue(16-1 downto 0);
    end process;

    p_Result_137_fu_3468_p3 <= (ap_const_lv16_FFFF & p_Result_136_fu_3458_p4);
    p_Result_138_fu_3863_p5 <= (tmp_172_i_fu_3856_p3 & tmp32_V_25_reg_5950(22 downto 0));
    p_Result_139_fu_3889_p3 <= (ap_const_lv1_0 & tmp_14_fu_3878_p3);
    
    p_Result_140_fu_3607_p4_proc : process(p_Val2_123_fu_3601_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(16+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(16+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(16 - 1 downto 0);
    variable p_Result_140_fu_3607_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(16 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(16 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(16 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(4 - 1 downto 0) := ap_const_lv32_F(4 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(4 - 1 downto 0) := ap_const_lv32_0(4 - 1 downto 0);
        v0_cpy := p_Val2_123_fu_3601_p3;
        if (vlo_cpy(4 - 1 downto 0) > vhi_cpy(4 - 1 downto 0)) then
            vhi_cpy(4-1 downto 0) := std_logic_vector(16-1-unsigned(ap_const_lv32_0(4-1 downto 0)));
            vlo_cpy(4-1 downto 0) := std_logic_vector(16-1-unsigned(ap_const_lv32_F(4-1 downto 0)));
            for p_Result_140_fu_3607_p4_i in 0 to 16-1 loop
                v0_cpy(p_Result_140_fu_3607_p4_i) := p_Val2_123_fu_3601_p3(16-1-p_Result_140_fu_3607_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(4-1 downto 0)))));

        section := (others=>'0');
        section(4-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(4-1 downto 0)) - unsigned(vlo_cpy(4-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(16-1 downto 0)))));
        res_mask := res_mask(16-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_140_fu_3607_p4 <= resvalue(16-1 downto 0);
    end process;

    p_Result_141_fu_3617_p3 <= (ap_const_lv16_FFFF & p_Result_140_fu_3607_p4);
    p_Result_142_fu_3931_p5 <= (tmp_198_i_fu_3924_p3 & tmp32_V_26_reg_5960(22 downto 0));
    p_Result_143_fu_3957_p3 <= (ap_const_lv1_0 & tmp_17_fu_3946_p3);
    
    p_Result_144_fu_4624_p4_proc : process(p_Val2_62_cast_i_fu_4620_p1)
    variable vlo_cpy : STD_LOGIC_VECTOR(49+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(49+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(49 - 1 downto 0);
    variable p_Result_144_fu_4624_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(49 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(49 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(49 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_30(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := p_Val2_62_cast_i_fu_4620_p1;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(49-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(49-1-unsigned(ap_const_lv32_30(6-1 downto 0)));
            for p_Result_144_fu_4624_p4_i in 0 to 49-1 loop
                v0_cpy(p_Result_144_fu_4624_p4_i) := p_Val2_62_cast_i_fu_4620_p1(49-1-p_Result_144_fu_4624_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(49-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_144_fu_4624_p4 <= resvalue(49-1 downto 0);
    end process;

    p_Result_145_fu_4634_p3 <= (ap_const_lv15_7FFF & p_Result_144_fu_4624_p4);
    p_Result_146_fu_4825_p5 <= (tmp_266_i_fu_4818_p3 & tmp32_V_27_reg_6222(22 downto 0));
    p_Result_147_fu_4896_p3 <= (p_Result_113_fu_4889_p3 & ap_const_lv31_0);
    p_Result_148_fu_4939_p3 <= (tmp_27_fu_4929_p4 & xs_sig_V_5_fu_4923_p2);
    p_Result_54_fu_2050_p2 <= (tmp_144_fu_2044_p2 and man_V_fu_1945_p3);
    p_Result_85_fu_3118_p3 <= t_V_10_reg_5770(31 downto 31);
    p_Result_97_fu_3588_p3 <= (ap_const_lv14_0 & tmp_203_fu_3584_p1);
    p_Result_s_fu_1833_p2 <= (tmp_131_fu_1827_p2 and man_V_5_fu_1728_p3);
    p_Val2_100_fu_2791_p0 <= trigtab_V_q0;
    p_Val2_100_fu_2791_p1 <= OP1_V_reg_5668(32 - 1 downto 0);
    p_Val2_100_fu_2791_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_100_fu_2791_p0) * signed(p_Val2_100_fu_2791_p1))), 48));
    p_Val2_101_fu_2811_p2 <= std_logic_vector(signed(tmp_137_i_fu_2808_p1) + signed(tmp_136_i_fu_2805_p1));
    p_Val2_103_fu_2841_p3 <= 
        tmp_142_cast_i_fu_2835_p2 when (is_neg_fu_2827_p3(0) = '1') else 
        p_Val2_37_cast_i_fu_2817_p2;
    p_Val2_113_fu_3137_p2 <= std_logic_vector(unsigned(one_half_i_cast_i_fu_3133_p1) + unsigned(t_V_10_reg_5770));
    p_Val2_115_fu_3204_p1 <= x_assign_9_fu_3197_p3;
    p_Val2_117_fu_3323_p3 <= 
        tmp_39_fu_3309_p1 when (isNeg_1_reg_5807(0) = '1') else 
        tmp_40_fu_3313_p4;
    p_Val2_118_fu_3433_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(p_Val2_s_reg_5847));
    p_Val2_123_fu_3601_p3 <= 
        tmp_182_i_fu_3596_p2 when (is_neg_2_reg_5863(0) = '1') else 
        p_Val2_121_reg_5854;
    p_Val2_125_fu_4562_p0 <= trigtab_V_q0;
    p_Val2_125_fu_4562_p1 <= OP1_V_5_reg_6135(32 - 1 downto 0);
    p_Val2_125_fu_4562_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_125_fu_4562_p0) * signed(p_Val2_125_fu_4562_p1))), 48));
    p_Val2_126_fu_4582_p2 <= std_logic_vector(signed(tmp_252_i_fu_4579_p1) + signed(tmp_251_i_fu_4576_p1));
    p_Val2_128_fu_4612_p3 <= 
        tmp_255_cast_i_fu_4606_p2 when (is_neg_3_fu_4598_p3(0) = '1') else 
        p_Val2_60_cast_i_fu_4588_p2;
    p_Val2_135_fu_4908_p2 <= std_logic_vector(unsigned(one_half_i_cast_i1_fu_4904_p1) + unsigned(t_V_18_reg_6237));
    p_Val2_137_fu_4975_p1 <= x_assign_1_fu_4968_p3;
    p_Val2_139_fu_5094_p3 <= 
        tmp_51_fu_5080_p1 when (isNeg_2_reg_6274(0) = '1') else 
        tmp_52_fu_5084_p4;
    p_Val2_23_fu_2800_p0 <= trigtab_V_q1;
    p_Val2_23_fu_2800_p1 <= OP1_V_4_reg_5673(32 - 1 downto 0);
    p_Val2_23_fu_2800_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_23_fu_2800_p0) * signed(p_Val2_23_fu_2800_p1))), 48));
    p_Val2_24_fu_4571_p0 <= trigtab_V_q1;
    p_Val2_24_fu_4571_p1 <= OP1_V_6_reg_6140(32 - 1 downto 0);
    p_Val2_24_fu_4571_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_24_fu_4571_p0) * signed(p_Val2_24_fu_4571_p1))), 48));
    p_Val2_37_cast_i_fu_2817_p2 <= std_logic_vector(signed(p_Val2_100_reg_5707) + signed(p_Val2_23_reg_5713));
    p_Val2_42_cast_i_fu_2849_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_103_fu_2841_p3),49));
    p_Val2_60_cast_i_fu_4588_p2 <= std_logic_vector(signed(p_Val2_125_reg_6174) + signed(p_Val2_24_reg_6180));
    p_Val2_61_fu_1780_p3 <= 
        tmp_125_fu_1763_p1 when (tmp_118_i_fu_1748_p2(0) = '1') else 
        storemerge1_i_fu_1767_p3;
    p_Val2_62_cast_i_fu_4620_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_128_fu_4612_p3),49));
    p_Val2_62_fu_1865_p2 <= std_logic_vector(unsigned(tmp_150_i_fu_1861_p1) + unsigned(p_Val2_61_fu_1780_p3));
    p_Val2_68_fu_1997_p3 <= 
        tmp_138_fu_1980_p1 when (tmp_179_i_fu_1965_p2(0) = '1') else 
        storemerge_i_fu_1984_p3;
    p_Val2_70_fu_2082_p2 <= std_logic_vector(unsigned(tmp_217_i_fu_2078_p1) + unsigned(p_Val2_68_fu_1997_p3));
    p_Val2_78_fu_2262_p1 <= reg_1301;
    p_Val2_83_fu_2355_p2 <= std_logic_vector(unsigned(p_Result_126_fu_2348_p3) + unsigned(mask_cast_i_fu_2333_p1));
    p_Val2_91_fu_2479_p1 <= x_assign_7_reg_5555;
    p_Val2_96_fu_2600_p3 <= 
        tmp_32_fu_2586_p1 when (isNeg_fu_2528_p3(0) = '1') else 
        tmp_33_fu_2590_p4;
    p_Val2_99_fu_2614_p3 <= 
        p_Val2_i_i_i_i_fu_2608_p2 when (p_Result_129_fu_2482_p3(0) = '1') else 
        p_Val2_96_fu_2600_p3;
    p_Val2_cast_fu_2632_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_i_i_i_reg_5567),17));
    p_Val2_i_i_i22_i_fu_3330_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(p_Val2_117_fu_3323_p3));
    p_Val2_i_i_i65_i_fu_5101_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(p_Val2_139_fu_5094_p3));
    p_Val2_i_i_i_i_fu_2608_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(p_Val2_96_fu_2600_p3));
        p_i_cast_fu_2648_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_i_fu_2641_p3),32));

    p_i_fu_2641_p3 <= 
        p_Val2_cast_fu_2632_p1 when (tmp_155_reg_5572(0) = '1') else 
        step_fu_2635_p2;
    p_r_i_i_i1_i_fu_1850_p2 <= (r_1_fu_1845_p2 or isneg_reg_5326);
    p_r_i_i_i_i_fu_2067_p2 <= (r_2_fu_2062_p2 or isneg_1_reg_5394);
    p_shl1_cast_fu_2194_p3 <= (tmp_157_fu_2190_p1 & ap_const_lv6_0);
    p_shl2_cast_fu_2702_p3 <= (tmp_160_fu_2698_p1 & ap_const_lv8_0);
    p_shl3_cast_fu_2714_p3 <= (tmp_161_fu_2710_p1 & ap_const_lv6_0);
    p_shl4_cast_fu_4224_p3 <= (tmp_230_fu_4220_p1 & ap_const_lv8_0);
    p_shl5_cast_fu_4236_p3 <= (tmp_231_fu_4232_p1 & ap_const_lv6_0);
    p_shl6_cast_fu_4473_p3 <= (tmp_238_fu_4469_p1 & ap_const_lv8_0);
    p_shl7_cast_fu_4485_p3 <= (tmp_239_fu_4481_p1 & ap_const_lv6_0);
    p_shl_cast_fu_2182_p3 <= (tmp_156_fu_2178_p1 & ap_const_lv8_0);
    phi_mul240_cast_fu_2745_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(phi_mul2_reg_964),19));
    phi_mul242_cast_fu_4516_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(phi_mul3_reg_1174),19));
    pt_buf_length_fu_2245_p0 <= pt_buf_length_i_fu_376;
    pt_buf_length_fu_2245_p2 <= std_logic_vector(signed(pt_buf_length_fu_2245_p0) + signed(ap_const_lv32_1));

    pt_buf_val_x_address0_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_CS_fsm_state83, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0, tmp_i_i_fu_2251_p1, tmp_121_i_fu_2688_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state83)) then 
            pt_buf_val_x_address0 <= tmp_121_i_fu_2688_p1(17 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            pt_buf_val_x_address0 <= tmp_i_i_fu_2251_p1(17 - 1 downto 0);
        else 
            pt_buf_val_x_address0 <= "XXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    pt_buf_val_x_ce0_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_CS_fsm_state83, ap_enable_reg_pp3_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state83) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1)))) then 
            pt_buf_val_x_ce0 <= ap_const_logic_1;
        else 
            pt_buf_val_x_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    pt_buf_val_x_we0_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter1, tmp_117_i_fu_2239_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (tmp_117_i_fu_2239_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1))) then 
            pt_buf_val_x_we0 <= ap_const_logic_1;
        else 
            pt_buf_val_x_we0 <= ap_const_logic_0;
        end if; 
    end process;


    pt_buf_val_y_address0_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_CS_fsm_state83, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0, tmp_i_i_fu_2251_p1, tmp_121_i_fu_2688_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state83)) then 
            pt_buf_val_y_address0 <= tmp_121_i_fu_2688_p1(17 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            pt_buf_val_y_address0 <= tmp_i_i_fu_2251_p1(17 - 1 downto 0);
        else 
            pt_buf_val_y_address0 <= "XXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    pt_buf_val_y_ce0_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_CS_fsm_state83, ap_enable_reg_pp3_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state83) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1)))) then 
            pt_buf_val_y_ce0 <= ap_const_logic_1;
        else 
            pt_buf_val_y_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    pt_buf_val_y_we0_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter1, tmp_117_i_fu_2239_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (tmp_117_i_fu_2239_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1))) then 
            pt_buf_val_y_we0 <= ap_const_logic_1;
        else 
            pt_buf_val_y_we0 <= ap_const_logic_0;
        end if; 
    end process;

    qb_1_fu_2022_p3 <= 
        isneg_1_reg_5394 when (tmp_193_i_reg_5442(0) = '1') else 
        tmp_139_fu_2014_p3;
    qb_assign_1_fu_1855_p2 <= (qb_fu_1805_p3 and p_r_i_i_i1_i_fu_1850_p2);
    qb_assign_3_fu_2072_p2 <= (qb_1_fu_2022_p3 and p_r_i_i_i_i_fu_2067_p2);
    qb_fu_1805_p3 <= 
        isneg_reg_5326 when (tmp_130_i_reg_5374(0) = '1') else 
        tmp_126_fu_1797_p3;
    r_1_fu_1845_p2 <= (tmp_149_i_fu_1839_p2 and icmp1_reg_5379);
    r_2_fu_2062_p2 <= (tmp_216_i_fu_2056_p2 and icmp3_reg_5447);
    r_fu_1382_p2 <= std_logic_vector(unsigned(r_i_reg_859) + unsigned(ap_const_lv11_1));
    ret_i_i_i_fu_2422_p1 <= p_Result_128_fu_2412_p4;
    ret_i_i_i_i_fu_2344_p1 <= p_Result_125_fu_2337_p3;
    rev_fu_4188_p2 <= (tmp_228_fu_4180_p3 xor ap_const_lv1_1);
    sel_tmp10_fu_2120_p2 <= (sel_tmp32_demorgan_fu_2115_p2 xor ap_const_lv1_1);
    sel_tmp11_fu_2126_p2 <= (sel_tmp10_fu_2120_p2 and icmp2_reg_5437);
    sel_tmp13_demorgan_fu_1898_p2 <= (tmp_107_i_reg_5356 or sel_tmp6_demorgan_fu_1882_p2);
    sel_tmp1_fu_1871_p2 <= (tmp_98_i_reg_5344 xor ap_const_lv1_1);
    sel_tmp1_i1_fu_3187_p2 <= (tmp_i_i_390_reg_5776 xor ap_const_lv1_1);
    sel_tmp1_i2_fu_4958_p2 <= (tmp_i_i1_reg_6243 xor ap_const_lv1_1);
    sel_tmp1_i_fu_2431_p2 <= (tmp_i1_fu_2307_p2 and sel_tmp_i_fu_2426_p2);
    sel_tmp25_demorgan_fu_2099_p2 <= (tmp_167_i_fu_1956_p2 or tmp_157_i_reg_5412);
    sel_tmp2_fu_1876_p2 <= (tmp_110_i_fu_1739_p2 and sel_tmp1_fu_1871_p2);
    sel_tmp2_i1_fu_3192_p2 <= (tmp_273_i_i_reg_5782 and sel_tmp1_i1_fu_3187_p2);
    sel_tmp2_i2_fu_4963_p2 <= (tmp_273_i_i1_reg_6249 and sel_tmp1_i2_fu_4958_p2);
    sel_tmp2_i_fu_2437_p3 <= 
        ret_i_i_i_i_fu_2344_p1 when (sel_tmp1_i_fu_2431_p2(0) = '1') else 
        ap_const_lv32_3F800000;
    sel_tmp32_demorgan_fu_2115_p2 <= (tmp_164_i_reg_5424 or sel_tmp25_demorgan_fu_2099_p2);
    sel_tmp3_fu_1909_p2 <= (sel_tmp_fu_1903_p2 and icmp_reg_5369);
    sel_tmp4_fu_2088_p2 <= (tmp_157_i_reg_5412 xor ap_const_lv1_1);
    sel_tmp5_demorgan_i_fu_2445_p2 <= (tmp_i1_fu_2307_p2 or tmp_i1_389_fu_2312_p2);
    sel_tmp5_fu_2093_p2 <= (tmp_167_i_fu_1956_p2 and sel_tmp4_fu_2088_p2);
    sel_tmp6_demorgan_fu_1882_p2 <= (tmp_98_i_reg_5344 or tmp_110_i_fu_1739_p2);
    sel_tmp6_fu_1887_p2 <= (sel_tmp6_demorgan_fu_1882_p2 xor ap_const_lv1_1);
    sel_tmp6_i_fu_2451_p3 <= 
        sel_tmp2_i_fu_2437_p3 when (sel_tmp5_demorgan_i_fu_2445_p2(0) = '1') else 
        ret_i_i_i_fu_2422_p1;
    sel_tmp7_fu_1893_p2 <= (tmp_107_i_reg_5356 and sel_tmp6_fu_1887_p2);
    sel_tmp7_i_fu_2459_p2 <= (tmp_i1_fu_2307_p2 xor ap_const_lv1_1);
    sel_tmp8_fu_2104_p2 <= (sel_tmp25_demorgan_fu_2099_p2 xor ap_const_lv1_1);
    sel_tmp8_i_fu_2465_p2 <= (tmp_i1_389_fu_2312_p2 and sel_tmp7_i_fu_2459_p2);
    sel_tmp9_fu_2110_p2 <= (tmp_164_i_reg_5424 and sel_tmp8_fu_2104_p2);
    sel_tmp_fu_1903_p2 <= (sel_tmp13_demorgan_fu_1898_p2 xor ap_const_lv1_1);
    sel_tmp_i1_fu_3183_p1 <= sel_tmp_v_i_fu_3176_p3;
    sel_tmp_i2_fu_4954_p1 <= sel_tmp_v_i1_fu_4947_p3;
    sel_tmp_i_fu_2426_p2 <= (p_Result_61_reg_5522 or or_cond_i_fu_2327_p2);
    sel_tmp_v_i1_fu_4947_p3 <= 
        p_Result_147_fu_4896_p3 when (tmp_i_i1_reg_6243(0) = '1') else 
        p_Result_148_fu_4939_p3;
    sel_tmp_v_i_fu_3176_p3 <= 
        p_Result_133_fu_3125_p3 when (tmp_i_i_390_reg_5776(0) = '1') else 
        p_Result_134_fu_3168_p3;
        sh_amt_1_cast82_i_fu_1950_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_1_reg_5430),16));

        sh_amt_1_cast_i_fu_1953_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_1_reg_5430),32));

    sh_amt_1_fu_1646_p3 <= 
        tmp_165_i_fu_1634_p2 when (tmp_164_i_fu_1628_p2(0) = '1') else 
        tmp_166_i_fu_1640_p2;
        sh_amt_cast83_i_fu_1733_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_reg_5362),16));

        sh_amt_cast_i_fu_1736_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_reg_5362),32));

    sh_amt_fu_1502_p3 <= 
        tmp_108_i_fu_1490_p2 when (tmp_107_i_fu_1484_p2(0) = '1') else 
        tmp_109_i_fu_1496_p2;
    sh_assign_1_fu_2546_p3 <= 
        tmp_294_i_i_i_cast_i_fu_2542_p1 when (isNeg_fu_2528_p3(0) = '1') else 
        sh_assign_fu_2522_p2;
    sh_assign_2_fu_3234_p2 <= std_logic_vector(signed(ap_const_lv9_181) + signed(tmp_i_i_i_i9_cast_i_fu_3230_p1));
        sh_assign_2_i_i_i13_1_fu_3282_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_assign_3_reg_5812),25));

        sh_assign_2_i_i_i13_s_fu_3279_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_assign_3_reg_5812),32));

        sh_assign_2_i_i_i56_1_fu_5053_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_assign_5_reg_6279),25));

        sh_assign_2_i_i_i56_s_fu_5050_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_assign_5_reg_6279),32));

        sh_assign_2_i_i_i_ca_1_fu_2558_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_assign_1_fu_2546_p3),25));

        sh_assign_2_i_i_i_ca_fu_2554_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_assign_1_fu_2546_p3),32));

    sh_assign_3_fu_3258_p3 <= 
        tmp_294_i_i_i12_cast_fu_3254_p1 when (isNeg_1_fu_3240_p3(0) = '1') else 
        sh_assign_2_fu_3234_p2;
    sh_assign_4_fu_5005_p2 <= std_logic_vector(signed(ap_const_lv9_181) + signed(tmp_i_i_i_i52_cast_i_fu_5001_p1));
    sh_assign_5_fu_5029_p3 <= 
        tmp_294_i_i_i55_cast_fu_5025_p1 when (isNeg_2_fu_5011_p3(0) = '1') else 
        sh_assign_4_fu_5005_p2;
    sh_assign_fu_2522_p2 <= std_logic_vector(signed(ap_const_lv9_181) + signed(tmp_i_i_i_i_cast_i_fu_2518_p1));
    step_fu_2635_p2 <= std_logic_vector(signed(ap_const_lv17_1FFFF) + signed(p_Val2_cast_fu_2632_p1));
    storemerge1_i_fu_1767_p3 <= 
        ap_const_lv16_FFFF when (isneg_reg_5326(0) = '1') else 
        ap_const_lv16_0;
    storemerge_i_fu_1984_p3 <= 
        ap_const_lv16_FFFF when (isneg_1_reg_5394(0) = '1') else 
        ap_const_lv16_0;
    t_V_10_fu_3076_p1 <= x_assign_8_fu_3069_p3;
    t_V_18_fu_4847_p1 <= x_assign_s_fu_4840_p3;

    threshold_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, threshold_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            threshold_blk_n <= threshold_empty_n;
        else 
            threshold_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    threshold_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, edge_rows_empty_n, edge_cols_empty_n, lines_rows_empty_n, lines_cols_empty_n, threshold_empty_n, lineGap_empty_n, lines_rows_out_full_n, lines_cols_out_full_n)
    begin
        if ((not(((lines_cols_out_full_n = ap_const_logic_0) or (lines_rows_out_full_n = ap_const_logic_0) or (lineGap_empty_n = ap_const_logic_0) or (threshold_empty_n = ap_const_logic_0) or (lines_cols_empty_n = ap_const_logic_0) or (lines_rows_empty_n = ap_const_logic_0) or (edge_cols_empty_n = ap_const_logic_0) or (edge_rows_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            threshold_read <= ap_const_logic_1;
        else 
            threshold_read <= ap_const_logic_0;
        end if; 
    end process;

    tmp32_V_12_fu_3778_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_123_reg_5910),32));
    tmp32_V_13_fu_3790_p2 <= std_logic_vector(shift_left(unsigned(tmp32_V_12_fu_3778_p1),to_integer(unsigned('0' & tmp_191_cast_i_fu_3786_p1(31-1 downto 0)))));
    tmp32_V_14_fu_3796_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_102_reg_5930),32));
    tmp32_V_15_fu_3799_p3 <= 
        tmp32_V_13_fu_3790_p2 when (icmp6_reg_5925(0) = '1') else 
        tmp32_V_14_fu_3796_p1;
    tmp32_V_18_fu_4695_p1 <= p_Val2_128_reg_6196(32 - 1 downto 0);
    tmp32_V_19_fu_4708_p2 <= std_logic_vector(shift_left(unsigned(tmp32_V_18_fu_4695_p1),to_integer(unsigned('0' & tmp_260_cast_i_fu_4704_p1(31-1 downto 0)))));
    tmp32_V_1_fu_2937_p2 <= std_logic_vector(shift_left(unsigned(tmp32_V_fu_2924_p1),to_integer(unsigned('0' & tmp_153_cast_i_fu_2933_p1(31-1 downto 0)))));
    tmp32_V_20_fu_4770_p1 <= tmp_255_fu_4764_p2(32 - 1 downto 0);
    tmp32_V_21_fu_4774_p3 <= 
        tmp32_V_19_fu_4708_p2 when (icmp7_fu_4689_p2(0) = '1') else 
        tmp32_V_20_fu_4770_p1;
    tmp32_V_24_fu_3011_p1 <= grp_fu_1269_p1;
    tmp32_V_25_fu_3806_p1 <= grp_fu_1269_p1;
    tmp32_V_26_fu_3820_p1 <= grp_fu_1272_p1;
    tmp32_V_27_fu_4782_p1 <= grp_fu_1269_p1;
    tmp32_V_2_fu_2999_p1 <= tmp_176_fu_2993_p2(32 - 1 downto 0);
    tmp32_V_3_fu_3745_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_V_reg_5885),32));
    tmp32_V_4_fu_3757_p2 <= std_logic_vector(shift_left(unsigned(tmp32_V_3_fu_3745_p1),to_integer(unsigned('0' & tmp_158_cast_i_fu_3753_p1(31-1 downto 0)))));
    tmp32_V_5_fu_3763_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_97_reg_5905),32));
    tmp32_V_6_fu_3003_p3 <= 
        tmp32_V_1_fu_2937_p2 when (icmp4_fu_2918_p2(0) = '1') else 
        tmp32_V_2_fu_2999_p1;
    tmp32_V_9_fu_3766_p3 <= 
        tmp32_V_4_fu_3757_p2 when (icmp5_reg_5900(0) = '1') else 
        tmp32_V_5_fu_3763_p1;
    tmp32_V_fu_2924_p1 <= p_Val2_103_reg_5729(32 - 1 downto 0);
    tmp82_cast_cast_fu_3842_p3 <= 
        ap_const_lv8_72 when (tmp_168_i_fu_3834_p2(0) = '1') else 
        ap_const_lv8_71;
    tmp83_cast_cast_fu_3910_p3 <= 
        ap_const_lv8_72 when (tmp_194_i_fu_3902_p2(0) = '1') else 
        ap_const_lv8_71;
    tmp85_cast_cast_fu_4804_p3 <= 
        ap_const_lv8_72 when (tmp_262_i_fu_4796_p2(0) = '1') else 
        ap_const_lv8_71;
    tmp_107_i_fu_1484_p2 <= "1" when (signed(F2_fu_1478_p2) > signed(ap_const_lv12_E)) else "0";
    tmp_108_i_fu_1490_p2 <= std_logic_vector(signed(ap_const_lv12_FF2) + signed(F2_fu_1478_p2));
    tmp_109_i_fu_1496_p2 <= std_logic_vector(unsigned(ap_const_lv12_E) - unsigned(F2_fu_1478_p2));
    tmp_110_i_fu_1739_p2 <= "1" when (F2_reg_5350 = ap_const_lv12_E) else "0";
    tmp_111_i_cast_fu_1388_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_i_reg_859),18));
    tmp_112_i_fu_2661_p2 <= "1" when (signed(cnt_i_cast_fu_2657_p1) < signed(M_reg_5560)) else "0";
    tmp_115_i_fu_2682_p2 <= "1" when (signed(grp_fu_2677_p2) < signed(pt_buf_length_i_fu_376)) else "0";
    tmp_117_i_fu_2239_p2 <= "1" when (edge_val_q0 = ap_const_lv8_0) else "0";
    tmp_118_i_fu_1748_p2 <= "1" when (unsigned(sh_amt_reg_5362) < unsigned(ap_const_lv12_36)) else "0";
        tmp_121_i_fu_2688_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_2677_p2),64));

    tmp_122_fu_1450_p1 <= ireg_V_fu_1420_p1(52 - 1 downto 0);
    tmp_123_fu_1744_p1 <= man_V_5_fu_1728_p3(16 - 1 downto 0);
    tmp_124_fu_1510_p4 <= sh_amt_fu_1502_p3(11 downto 4);
    tmp_124_i_fu_1753_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_amt_cast_i_fu_1736_p1),54));
    tmp_125_fu_1763_p1 <= tmp_125_i_fu_1757_p2(16 - 1 downto 0);
    tmp_125_i_fu_1757_p2 <= std_logic_vector(shift_right(signed(man_V_5_fu_1728_p3),to_integer(unsigned('0' & tmp_124_i_fu_1753_p1(31-1 downto 0)))));
    tmp_126_fu_1797_p3 <= man_V_5_fu_1728_p3(to_integer(unsigned(tmp_131_cast_i_fu_1793_p1)) downto to_integer(unsigned(tmp_131_cast_i_fu_1793_p1))) when (to_integer(unsigned(tmp_131_cast_i_fu_1793_p1))>= 0 and to_integer(unsigned(tmp_131_cast_i_fu_1793_p1))<=53) else "-";
    tmp_127_fu_1532_p4 <= F2_fu_1478_p2(11 downto 4);
    tmp_128_fu_1548_p1 <= F2_fu_1478_p2(6 - 1 downto 0);
    tmp_128_i_fu_1774_p2 <= std_logic_vector(shift_left(unsigned(tmp_123_fu_1744_p1),to_integer(unsigned('0' & sh_amt_cast83_i_fu_1733_p1(16-1 downto 0)))));
    tmp_129_fu_1816_p3 <= 
        ap_const_lv6_0 when (tmp_147_i_reg_5389(0) = '1') else 
        tmp_146_cast_i_op_fu_1811_p2;
    tmp_12_fu_3158_p4 <= p_Val2_113_fu_3137_p2(31 downto 23);
    tmp_130_fu_1823_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_129_fu_1816_p3),54));
    tmp_130_i_fu_1526_p2 <= "1" when (signed(tmp_108_i_fu_1490_p2) > signed(ap_const_lv12_36)) else "0";
    tmp_131_cast_i_fu_1793_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_131_i_fu_1788_p2),32));
    tmp_131_fu_1827_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv54_3FFFFFFFFFFFFF),to_integer(unsigned('0' & tmp_130_fu_1823_p1(31-1 downto 0)))));
    tmp_131_i_fu_1788_p2 <= std_logic_vector(signed(ap_const_lv12_FF1) + signed(F2_reg_5350));
    tmp_133_fu_1568_p1 <= ireg_V_1_fu_1564_p1(63 - 1 downto 0);
    tmp_134_i_fu_3400_p2 <= "1" when (signed(max_val1_i_reg_930) < signed(threshold_read_reg_5233)) else "0";
    tmp_135_fu_1594_p1 <= ireg_V_1_fu_1564_p1(52 - 1 downto 0);
    tmp_135_i_cast_fu_2766_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_max_n_phi_fu_956_p4),9));
    tmp_135_i_fu_2761_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_max_n_phi_fu_956_p4),64));
    tmp_136_fu_1961_p1 <= man_V_fu_1945_p3(16 - 1 downto 0);
        tmp_136_i_fu_2805_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_100_reg_5707),49));

    tmp_137_fu_1654_p4 <= sh_amt_1_fu_1646_p3(11 downto 4);
        tmp_137_i_fu_2808_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_23_reg_5713),49));

    tmp_138_fu_1980_p1 <= tmp_186_i_fu_1974_p2(16 - 1 downto 0);
    tmp_138_i_fu_2821_p2 <= "1" when (p_Val2_101_fu_2811_p2 = ap_const_lv49_0) else "0";
    tmp_139_fu_2014_p3 <= man_V_fu_1945_p3(to_integer(unsigned(tmp_199_cast_i_fu_2010_p1)) downto to_integer(unsigned(tmp_199_cast_i_fu_2010_p1))) when (to_integer(unsigned(tmp_199_cast_i_fu_2010_p1))>= 0 and to_integer(unsigned(tmp_199_cast_i_fu_2010_p1))<=53) else "-";
    tmp_140_fu_1676_p4 <= F2_1_fu_1622_p2(11 downto 4);
        tmp_140_i_fu_3405_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(max_n_i_reg_940),64));

    tmp_141_fu_1692_p1 <= F2_1_fu_1622_p2(6 - 1 downto 0);
    tmp_141_i_fu_3438_p2 <= "1" when (p_Val2_s_reg_5847 = ap_const_lv16_0) else "0";
    tmp_142_cast_i_fu_2835_p2 <= std_logic_vector(unsigned(ap_const_lv48_0) - unsigned(p_Val2_37_cast_i_fu_2817_p2));
    tmp_142_fu_2033_p3 <= 
        ap_const_lv6_0 when (tmp_214_i_reg_5457(0) = '1') else 
        tmp_213_cast_i_op_fu_2028_p2;
    tmp_143_fu_2040_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_142_fu_2033_p3),54));
    
    tmp_143_i_fu_2871_p3_proc : process(p_Result_131_fu_2863_p3)
    begin
        tmp_143_i_fu_2871_p3 <= std_logic_vector(to_unsigned(64, 64));
        for i in 0 to 64 - 1 loop
            if p_Result_131_fu_2863_p3(i) = '1' then
                tmp_143_i_fu_2871_p3 <= std_logic_vector(to_unsigned(i,64));
                exit;
            end if;
        end loop;
    end process;

    tmp_144_fu_2044_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv54_3FFFFFFFFFFFFF),to_integer(unsigned('0' & tmp_143_fu_2040_p1(31-1 downto 0)))));
    tmp_146_cast_i_op_fu_1811_p2 <= std_logic_vector(unsigned(ap_const_lv6_5) - unsigned(tmp_128_reg_5384));
    tmp_146_i_fu_1552_p2 <= std_logic_vector(signed(ap_const_lv12_FF0) + signed(F2_fu_1478_p2));
    tmp_147_i_fu_1558_p2 <= "1" when (signed(tmp_146_i_fu_1552_p2) > signed(ap_const_lv12_35)) else "0";
    tmp_148_fu_2303_p1 <= p_Val2_78_fu_2262_p1(31 - 1 downto 0);
    tmp_149_i_fu_1839_p2 <= "0" when (p_Result_s_fu_1833_p2 = ap_const_lv54_0) else "1";
    tmp_14_fu_3878_p3 <= 
        ap_const_lv31_0 when (tmp_141_i_reg_5875(0) = '1') else 
        tmp_206_fu_3874_p1;
    tmp_150_i_fu_1861_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(qb_assign_1_fu_1855_p2),16));
    tmp_153_cast_i_fu_2933_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_153_i_fu_2927_p2),32));
    tmp_153_i_fu_2927_p2 <= std_logic_vector(unsigned(ap_const_lv31_1F) - unsigned(msb_idx_1_fu_2900_p3));
    tmp_154_fu_2578_p3 <= tmp_296_i_i_i_i_fu_2566_p2(24 downto 24);
    tmp_155_fu_2628_p1 <= grp_sqrt_fixed_32_32_s_fu_1258_ap_return(1 - 1 downto 0);
    tmp_155_i_fu_1590_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_V_1_fu_1580_p4),12));
    tmp_156_fu_2178_p1 <= p_y_assign_reg_882(10 - 1 downto 0);
    tmp_157_fu_2190_p1 <= p_y_assign_reg_882(12 - 1 downto 0);
    tmp_157_i_fu_1616_p2 <= "1" when (tmp_133_fu_1568_p1 = ap_const_lv63_0) else "0";
    tmp_158_cast_i_fu_3753_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_158_i_fu_3748_p2),32));
    tmp_158_fu_2224_p1 <= ap_phi_mux_p_x_assign_phi_fu_900_p4(18 - 1 downto 0);
    tmp_158_i_fu_3748_p2 <= std_logic_vector(unsigned(ap_const_lv31_1F) - unsigned(msb_idx_3_reg_5895));
    tmp_159_fu_2694_p0 <= pt_buf_val_x_q0;
    tmp_159_fu_2694_p1 <= tmp_159_fu_2694_p0(18 - 1 downto 0);
    tmp_160_fu_2698_p0 <= pt_buf_val_y_q0;
    tmp_160_fu_2698_p1 <= tmp_160_fu_2698_p0(10 - 1 downto 0);
    tmp_160_i_fu_3025_p2 <= "0" when (p_Result_24_i_reg_5760 = ap_const_lv8_9E) else "1";
    tmp_161_fu_2710_p0 <= pt_buf_val_y_q0;
    tmp_161_fu_2710_p1 <= tmp_161_fu_2710_p0(12 - 1 downto 0);
    tmp_162_i_fu_3047_p3 <= (is_neg_reg_5724_pp4_iter5_reg & p_Repl2_19_trunc_i_fu_3041_p2);
    tmp_164_fu_2888_p1 <= msb_idx_fu_2883_p2(31 - 1 downto 0);
    tmp_164_i_fu_1628_p2 <= "1" when (signed(F2_1_fu_1622_p2) > signed(ap_const_lv12_E)) else "0";
    tmp_165_fu_2892_p3 <= msb_idx_fu_2883_p2(31 downto 31);
    tmp_165_i_fu_1634_p2 <= std_logic_vector(signed(ap_const_lv12_FF2) + signed(F2_1_fu_1622_p2));
    tmp_166_fu_2908_p4 <= msb_idx_1_fu_2900_p3(30 downto 5);
    tmp_166_i_fu_1640_p2 <= std_logic_vector(unsigned(ap_const_lv12_E) - unsigned(F2_1_fu_1622_p2));
    tmp_167_i_fu_1956_p2 <= "1" when (F2_1_reg_5418 = ap_const_lv12_E) else "0";
    tmp_168_fu_2943_p1 <= msb_idx_1_fu_2900_p3(6 - 1 downto 0);
    tmp_168_i_fu_3834_p2 <= "0" when (p_Result_26_i_reg_5955 = ap_const_lv8_9E) else "1";
    tmp_169_fu_2947_p2 <= "1" when (unsigned(msb_idx_1_fu_2900_p3) < unsigned(ap_const_lv31_1F)) else "0";
    tmp_170_fu_2953_p2 <= std_logic_vector(signed(ap_const_lv6_21) + signed(tmp_168_fu_2943_p1));
    
    tmp_171_fu_2959_p4_proc : process(p_Val2_42_cast_i_reg_5734)
    variable vlo_cpy : STD_LOGIC_VECTOR(49+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(49+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(49 - 1 downto 0);
    variable tmp_171_fu_2959_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(49 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(49 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(49 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_30(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := p_Val2_42_cast_i_reg_5734;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(49-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(49-1-unsigned(ap_const_lv32_30(6-1 downto 0)));
            for tmp_171_fu_2959_p4_i in 0 to 49-1 loop
                v0_cpy(tmp_171_fu_2959_p4_i) := p_Val2_42_cast_i_reg_5734(49-1-tmp_171_fu_2959_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(49-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_171_fu_2959_p4 <= resvalue(49-1 downto 0);
    end process;

    tmp_172_fu_2968_p2 <= std_logic_vector(unsigned(ap_const_lv6_F) - unsigned(tmp_168_fu_2943_p1));
    tmp_172_i_fu_3856_p3 <= (is_neg_1_reg_5880 & p_Repl2_21_trunc_i_fu_3850_p2);
    tmp_173_fu_2974_p3 <= 
        tmp_171_fu_2959_p4 when (tmp_169_fu_2947_p2(0) = '1') else 
        p_Val2_42_cast_i_reg_5734;
    tmp_174_fu_2981_p3 <= 
        tmp_172_fu_2968_p2 when (tmp_169_fu_2947_p2(0) = '1') else 
        tmp_170_fu_2953_p2;
    tmp_175_fu_2989_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_174_fu_2981_p3),49));
    tmp_175_i_fu_3378_p2 <= "1" when (signed(max_val_2_fu_3371_p2) > signed(max_val1_i_reg_930)) else "0";
    tmp_176_fu_2993_p2 <= std_logic_vector(shift_right(unsigned(tmp_173_fu_2974_p3),to_integer(unsigned('0' & tmp_175_fu_2989_p1(31-1 downto 0)))));
    tmp_178_fu_3030_p1 <= msb_idx_reg_5745_pp4_iter5_reg(8 - 1 downto 0);
    tmp_178_i_fu_3773_p2 <= "1" when (p_Val2_121_reg_5854 = ap_const_lv16_0) else "0";
    tmp_179_i_fu_1965_p2 <= "1" when (unsigned(sh_amt_1_reg_5430) < unsigned(ap_const_lv12_36)) else "0";
    tmp_17_fu_3946_p3 <= 
        ap_const_lv31_0 when (tmp_178_i_reg_5940(0) = '1') else 
        tmp_224_fu_3942_p1;
    tmp_182_i_fu_3596_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(p_Val2_121_reg_5854));
    tmp_184_fu_3301_p3 <= tmp_296_i_i_i15_i_fu_3289_p2(24 downto 24);
    tmp_185_fu_3336_p1 <= p_Val2_i_i_i22_i_fu_3330_p2(19 - 1 downto 0);
    tmp_185_i_fu_1970_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_amt_1_cast_i_fu_1953_p1),54));
    tmp_186_fu_3340_p1 <= p_Val2_117_fu_3323_p3(19 - 1 downto 0);
    tmp_186_i_fu_1974_p2 <= std_logic_vector(shift_right(signed(man_V_fu_1945_p3),to_integer(unsigned('0' & tmp_185_i_fu_1970_p1(31-1 downto 0)))));
    tmp_187_fu_3344_p3 <= 
        tmp_185_fu_3336_p1 when (p_Result_135_reg_5797(0) = '1') else 
        tmp_186_fu_3340_p1;
    tmp_188_fu_3351_p2 <= std_logic_vector(unsigned(ap_const_lv19_230) + unsigned(tmp_187_fu_3344_p3));
    tmp_189_fu_3410_p1 <= max_n_i_reg_940(10 - 1 downto 0);
    tmp_189_i_fu_1991_p2 <= std_logic_vector(shift_left(unsigned(tmp_136_fu_1961_p1),to_integer(unsigned('0' & sh_amt_1_cast82_i_fu_1950_p1(16-1 downto 0)))));
    tmp_191_cast_i_fu_3786_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_191_i_fu_3781_p2),32));
    tmp_191_fu_3490_p1 <= msb_idx_2_fu_3484_p2(31 - 1 downto 0);
    tmp_191_i_fu_3781_p2 <= std_logic_vector(unsigned(ap_const_lv31_1F) - unsigned(msb_idx_5_reg_5920));
    tmp_192_fu_3494_p3 <= msb_idx_2_fu_3484_p2(31 downto 31);
    tmp_193_fu_3510_p4 <= msb_idx_3_fu_3502_p3(30 downto 5);
    tmp_193_i_fu_1670_p2 <= "1" when (signed(tmp_165_i_fu_1634_p2) > signed(ap_const_lv12_36)) else "0";
    tmp_194_fu_3526_p1 <= msb_idx_3_fu_3502_p3(5 - 1 downto 0);
    tmp_194_i_fu_3902_p2 <= "0" when (p_Result_32_i_reg_5965 = ap_const_lv8_9E) else "1";
    tmp_195_fu_3530_p2 <= "1" when (unsigned(msb_idx_3_fu_3502_p3) < unsigned(ap_const_lv31_1F)) else "0";
    tmp_196_fu_3536_p2 <= std_logic_vector(unsigned(ap_const_lv5_1) + unsigned(tmp_194_fu_3526_p1));
    
    tmp_197_fu_3542_p4_proc : process(tmp_V_fu_3451_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(16+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(16+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(16 - 1 downto 0);
    variable tmp_197_fu_3542_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(16 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(16 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(16 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(4 - 1 downto 0) := ap_const_lv32_F(4 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(4 - 1 downto 0) := ap_const_lv32_0(4 - 1 downto 0);
        v0_cpy := tmp_V_fu_3451_p3;
        if (vlo_cpy(4 - 1 downto 0) > vhi_cpy(4 - 1 downto 0)) then
            vhi_cpy(4-1 downto 0) := std_logic_vector(16-1-unsigned(ap_const_lv32_0(4-1 downto 0)));
            vlo_cpy(4-1 downto 0) := std_logic_vector(16-1-unsigned(ap_const_lv32_F(4-1 downto 0)));
            for tmp_197_fu_3542_p4_i in 0 to 16-1 loop
                v0_cpy(tmp_197_fu_3542_p4_i) := tmp_V_fu_3451_p3(16-1-tmp_197_fu_3542_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(4-1 downto 0)))));

        section := (others=>'0');
        section(4-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(4-1 downto 0)) - unsigned(vlo_cpy(4-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(16-1 downto 0)))));
        res_mask := res_mask(16-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_197_fu_3542_p4 <= resvalue(16-1 downto 0);
    end process;

    tmp_198_fu_3552_p2 <= std_logic_vector(unsigned(ap_const_lv5_E) - unsigned(tmp_194_fu_3526_p1));
    tmp_198_i_fu_3924_p3 <= (is_neg_2_reg_5863 & p_Repl2_24_trunc_i_fu_3918_p2);
    tmp_199_cast_i_fu_2010_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_199_i_fu_2005_p2),32));
    tmp_199_fu_3558_p3 <= 
        tmp_197_fu_3542_p4 when (tmp_195_fu_3530_p2(0) = '1') else 
        tmp_V_fu_3451_p3;
    tmp_199_i_fu_2005_p2 <= std_logic_vector(signed(ap_const_lv12_FF1) + signed(F2_1_reg_5418));
    tmp_19_fu_3970_p4 <= tmp_14_fu_3878_p3(30 downto 23);
    tmp_200_fu_3566_p3 <= 
        tmp_198_fu_3552_p2 when (tmp_195_fu_3530_p2(0) = '1') else 
        tmp_196_fu_3536_p2;
    tmp_201_fu_3574_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_200_fu_3566_p3),16));
    tmp_202_fu_3578_p2 <= std_logic_vector(shift_right(unsigned(tmp_199_fu_3558_p3),to_integer(unsigned('0' & tmp_201_fu_3574_p1(16-1 downto 0)))));
    tmp_203_fu_3584_p1 <= tmp_202_fu_3578_p2(2 - 1 downto 0);
    tmp_205_fu_3839_p1 <= msb_idx_2_reg_5890(8 - 1 downto 0);
    tmp_206_fu_3874_p1 <= p_Result_138_fu_3863_p5(31 - 1 downto 0);
    tmp_207_fu_3885_p1 <= tmp_14_fu_3878_p3(23 - 1 downto 0);
    tmp_209_fu_3639_p1 <= msb_idx_4_fu_3633_p2(31 - 1 downto 0);
    tmp_20_fu_3980_p4 <= tmp_17_fu_3946_p3(30 downto 23);
    tmp_210_fu_3643_p3 <= msb_idx_4_fu_3633_p2(31 downto 31);
    tmp_211_fu_3659_p4 <= msb_idx_5_fu_3651_p3(30 downto 5);
    tmp_212_fu_3675_p1 <= msb_idx_5_fu_3651_p3(5 - 1 downto 0);
    tmp_213_cast_i_op_fu_2028_p2 <= std_logic_vector(unsigned(ap_const_lv6_5) - unsigned(tmp_141_reg_5452));
    tmp_213_fu_3679_p2 <= "1" when (unsigned(msb_idx_5_fu_3651_p3) < unsigned(ap_const_lv31_1F)) else "0";
    tmp_213_i_fu_1696_p2 <= std_logic_vector(signed(ap_const_lv12_FF0) + signed(F2_1_fu_1622_p2));
    tmp_214_fu_3685_p2 <= std_logic_vector(unsigned(ap_const_lv5_1) + unsigned(tmp_212_fu_3675_p1));
    tmp_214_i_fu_1702_p2 <= "1" when (signed(tmp_213_i_fu_1696_p2) > signed(ap_const_lv12_35)) else "0";
    
    tmp_215_fu_3691_p4_proc : process(p_Val2_123_fu_3601_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(16+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(16+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(16 - 1 downto 0);
    variable tmp_215_fu_3691_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(16 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(16 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(16 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(4 - 1 downto 0) := ap_const_lv32_F(4 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(4 - 1 downto 0) := ap_const_lv32_0(4 - 1 downto 0);
        v0_cpy := p_Val2_123_fu_3601_p3;
        if (vlo_cpy(4 - 1 downto 0) > vhi_cpy(4 - 1 downto 0)) then
            vhi_cpy(4-1 downto 0) := std_logic_vector(16-1-unsigned(ap_const_lv32_0(4-1 downto 0)));
            vlo_cpy(4-1 downto 0) := std_logic_vector(16-1-unsigned(ap_const_lv32_F(4-1 downto 0)));
            for tmp_215_fu_3691_p4_i in 0 to 16-1 loop
                v0_cpy(tmp_215_fu_3691_p4_i) := p_Val2_123_fu_3601_p3(16-1-tmp_215_fu_3691_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(4-1 downto 0)))));

        section := (others=>'0');
        section(4-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(4-1 downto 0)) - unsigned(vlo_cpy(4-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(16-1 downto 0)))));
        res_mask := res_mask(16-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_215_fu_3691_p4 <= resvalue(16-1 downto 0);
    end process;

    tmp_216_fu_3701_p2 <= std_logic_vector(unsigned(ap_const_lv5_E) - unsigned(tmp_212_fu_3675_p1));
    tmp_216_i_fu_2056_p2 <= "0" when (p_Result_54_fu_2050_p2 = ap_const_lv54_0) else "1";
    tmp_217_fu_3707_p3 <= 
        tmp_215_fu_3691_p4 when (tmp_213_fu_3679_p2(0) = '1') else 
        p_Val2_123_fu_3601_p3;
    tmp_217_i_fu_2078_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(qb_assign_3_fu_2072_p2),16));
    tmp_218_fu_3715_p3 <= 
        tmp_216_fu_3701_p2 when (tmp_213_fu_3679_p2(0) = '1') else 
        tmp_214_fu_3685_p2;
    tmp_219_fu_3723_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_218_fu_3715_p3),16));
    tmp_21_fu_4002_p2 <= (notrhs1_fu_3996_p2 or notlhs1_fu_3990_p2);
    tmp_220_fu_3727_p2 <= std_logic_vector(shift_right(unsigned(tmp_217_fu_3707_p3),to_integer(unsigned('0' & tmp_219_fu_3723_p1(16-1 downto 0)))));
    tmp_220_i_fu_4323_p2 <= "1" when (signed(abs_i_i_fu_4315_p3) < signed(threshold_read_reg_5233)) else "0";
    tmp_221_fu_3733_p1 <= tmp_220_fu_3727_p2(2 - 1 downto 0);
    tmp_221_i_fu_4124_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k_i_reg_1051),64));
    tmp_223_fu_3907_p1 <= msb_idx_4_reg_5915(8 - 1 downto 0);
    tmp_224_fu_3942_p1 <= p_Result_142_fu_3931_p5(31 - 1 downto 0);
    tmp_224_i_fu_4354_p2 <= "1" when (signed(abs_i44_i_fu_4346_p3) < signed(threshold_read_reg_5233)) else "0";
    tmp_225_fu_3953_p1 <= tmp_17_fu_3946_p3(23 - 1 downto 0);
    tmp_226_fu_4100_p2 <= std_logic_vector(shift_left(unsigned(j_3_reg_5645),to_integer(unsigned('0' & ap_const_lv32_10(31-1 downto 0)))));
    tmp_227_fu_4079_p2 <= std_logic_vector(shift_left(unsigned(i_3_reg_5652),to_integer(unsigned('0' & ap_const_lv32_10(31-1 downto 0)))));
    tmp_227_i_fu_4130_p4 <= j1_1_reg_1074(31 downto 16);
    tmp_228_fu_4180_p3 <= tmp_26_fu_4174_p2(31 downto 31);
    tmp_229_fu_4216_p1 <= j1_2_fu_4166_p3(18 - 1 downto 0);
    tmp_229_i_fu_4144_p4 <= i1_reg_1085(31 downto 16);
    tmp_22_fu_4020_p2 <= (notrhs2_fu_4014_p2 or notlhs2_fu_4008_p2);
    tmp_230_fu_4220_p1 <= i1_2_fu_4158_p3(10 - 1 downto 0);
    tmp_231_fu_4232_p1 <= i1_2_fu_4158_p3(12 - 1 downto 0);
    tmp_231_i_fu_4205_p2 <= "1" when (signed(i1_2_fu_4158_p3) < signed(rows_reg_5246)) else "0";
    tmp_232_fu_4382_p1 <= line_end_x_load_2_reg_6063(16 - 1 downto 0);
    tmp_233_fu_4391_p1 <= total_fu_4377_p2(10 - 1 downto 0);
    tmp_234_fu_5203_p1 <= line_end_y_q1(16 - 1 downto 0);
    tmp_235_fu_4406_p1 <= line_end_x_load_1_reg_6058(16 - 1 downto 0);
        tmp_235_i_fu_4386_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(total_fu_4377_p2),64));

    tmp_236_fu_5208_p1 <= line_end_y_q0(16 - 1 downto 0);
    tmp_237_fu_4465_p1 <= j1_5_fu_4457_p3(18 - 1 downto 0);
    tmp_238_fu_4469_p1 <= i1_5_fu_4449_p3(10 - 1 downto 0);
    tmp_239_fu_4481_p1 <= i1_5_fu_4449_p3(12 - 1 downto 0);
    tmp_239_i_fu_4410_p2 <= "1" when (signed(total_fu_4377_p2) > signed(ap_const_lv32_62)) else "0";
    tmp_23_fu_4026_p2 <= (tmp_22_fu_4020_p2 and tmp_21_fu_4002_p2);
    tmp_240_fu_5213_p1 <= total_5_i_reg_1204(16 - 1 downto 0);
    tmp_240_i_fu_4371_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k1_i_reg_1130),64));
    tmp_241_i_fu_4268_p2 <= "1" when (signed(gap_fu_4261_p2) > signed(lineGap_read_reg_5241)) else "0";
    tmp_243_fu_4659_p1 <= msb_idx_6_fu_4654_p2(31 - 1 downto 0);
    tmp_243_i_fu_4421_p4 <= j1_4_reg_1141(31 downto 16);
    tmp_244_fu_4663_p3 <= msb_idx_6_fu_4654_p2(31 downto 31);
    tmp_245_fu_4679_p4 <= msb_idx_7_fu_4671_p3(30 downto 5);
    tmp_245_i_fu_4435_p4 <= i1_3_reg_1152(31 downto 16);
    tmp_247_fu_4714_p1 <= msb_idx_7_fu_4671_p3(6 - 1 downto 0);
    tmp_248_fu_4718_p2 <= "1" when (unsigned(msb_idx_7_fu_4671_p3) < unsigned(ap_const_lv31_1F)) else "0";
    tmp_249_fu_4724_p2 <= std_logic_vector(signed(ap_const_lv6_21) + signed(tmp_247_fu_4714_p1));
    tmp_24_fu_1284_p0 <= p_Result_139_fu_3889_p3;
    tmp_24_fu_1284_p1 <= p_Result_143_fu_3957_p3;
    
    tmp_250_fu_4730_p4_proc : process(p_Val2_62_cast_i_reg_6201)
    variable vlo_cpy : STD_LOGIC_VECTOR(49+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(49+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(49 - 1 downto 0);
    variable tmp_250_fu_4730_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(49 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(49 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(49 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_30(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := p_Val2_62_cast_i_reg_6201;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(49-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(49-1-unsigned(ap_const_lv32_30(6-1 downto 0)));
            for tmp_250_fu_4730_p4_i in 0 to 49-1 loop
                v0_cpy(tmp_250_fu_4730_p4_i) := p_Val2_62_cast_i_reg_6201(49-1-tmp_250_fu_4730_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(49-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_250_fu_4730_p4 <= resvalue(49-1 downto 0);
    end process;

    tmp_250_i_cast_fu_4537_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(n5_i_reg_1163),9));
    tmp_250_i_fu_4532_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(n5_i_reg_1163),64));
    tmp_251_fu_4739_p2 <= std_logic_vector(unsigned(ap_const_lv6_F) - unsigned(tmp_247_fu_4714_p1));
        tmp_251_i_fu_4576_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_125_reg_6174),49));

    tmp_252_fu_4745_p3 <= 
        tmp_250_fu_4730_p4 when (tmp_248_fu_4718_p2(0) = '1') else 
        p_Val2_62_cast_i_reg_6201;
        tmp_252_i_fu_4579_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_24_reg_6180),49));

    tmp_253_fu_4752_p3 <= 
        tmp_251_fu_4739_p2 when (tmp_248_fu_4718_p2(0) = '1') else 
        tmp_249_fu_4724_p2;
    tmp_253_i_fu_4592_p2 <= "1" when (p_Val2_126_fu_4582_p2 = ap_const_lv49_0) else "0";
    tmp_254_fu_4760_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_253_fu_4752_p3),49));
    tmp_254_i_fu_5145_p2 <= "1" when (i1_5_reg_6114 = line_end_y_load_reg_6104) else "0";
    tmp_255_cast_i_fu_4606_p2 <= std_logic_vector(unsigned(ap_const_lv48_0) - unsigned(p_Val2_60_cast_i_fu_4588_p2));
    tmp_255_fu_4764_p2 <= std_logic_vector(shift_right(unsigned(tmp_252_fu_4745_p3),to_integer(unsigned('0' & tmp_254_fu_4760_p1(31-1 downto 0)))));
    
    tmp_256_i_fu_4642_p3_proc : process(p_Result_145_fu_4634_p3)
    begin
        tmp_256_i_fu_4642_p3 <= std_logic_vector(to_unsigned(64, 64));
        for i in 0 to 64 - 1 loop
            if p_Result_145_fu_4634_p3(i) = '1' then
                tmp_256_i_fu_4642_p3 <= std_logic_vector(to_unsigned(i,64));
                exit;
            end if;
        end loop;
    end process;

    tmp_257_fu_4801_p1 <= msb_idx_6_reg_6212_pp6_iter5_reg(8 - 1 downto 0);
    tmp_259_i_fu_5149_p2 <= "1" when (j1_5_reg_6120 = line_end_x_load_reg_6109) else "0";
    tmp_25_fu_4032_p2 <= (tmp_24_fu_1284_p2 and tmp_23_fu_4026_p2);
    tmp_260_cast_i_fu_4704_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_260_i_fu_4698_p2),32));
    tmp_260_i_fu_4698_p2 <= std_logic_vector(unsigned(ap_const_lv31_1F) - unsigned(msb_idx_7_fu_4671_p3));
    tmp_262_i_fu_4796_p2 <= "0" when (p_Result_40_i_reg_6227 = ap_const_lv8_9E) else "1";
    tmp_263_fu_5072_p3 <= tmp_296_i_i_i58_i_fu_5060_p2(24 downto 24);
    tmp_264_fu_5107_p1 <= p_Val2_i_i_i65_i_fu_5101_p2(19 - 1 downto 0);
    tmp_265_fu_5111_p1 <= p_Val2_139_fu_5094_p3(19 - 1 downto 0);
    tmp_266_fu_5115_p3 <= 
        tmp_264_fu_5107_p1 when (p_Result_149_reg_6264(0) = '1') else 
        tmp_265_fu_5111_p1;
    tmp_266_i_fu_4818_p3 <= (is_neg_3_reg_6191_pp6_iter5_reg & p_Repl2_27_trunc_i_fu_4812_p2);
    tmp_267_fu_5122_p2 <= std_logic_vector(unsigned(ap_const_lv19_230) + unsigned(tmp_266_fu_5115_p3));
    tmp_269_i_fu_5138_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFF) + signed(accum_q1));
    tmp_26_fu_4174_p2 <= (j1_2_fu_4166_p3 or i1_2_fu_4158_p3);
    tmp_273_i_i1_fu_4867_p2 <= "1" when (unsigned(loc_V_13_fu_4851_p4) > unsigned(ap_const_lv8_96)) else "0";
    tmp_273_i_i_fu_3096_p2 <= "1" when (unsigned(loc_V_9_fu_3080_p4) > unsigned(ap_const_lv8_96)) else "0";
    tmp_274_i_i1_fu_4883_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(index_V_4_fu_4873_p4),64));
    tmp_274_i_i_fu_3112_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(index_V_3_fu_3102_p4),64));
    tmp_276_i_i1_fu_4917_p2 <= (mask_table3_q0 xor ap_const_lv23_7FFFFF);
    tmp_276_i_i_fu_3146_p2 <= (mask_table3_q0 xor ap_const_lv23_7FFFFF);
    tmp_27_fu_4929_p4 <= p_Val2_135_fu_4908_p2(31 downto 23);
    tmp_293_i_i_i51_cast_fu_5046_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_293_i_i_i51_i_fu_5037_p4),79));
    tmp_293_i_i_i51_i_fu_5037_p4 <= ((ap_const_lv1_1 & loc_V_16_reg_6269) & ap_const_lv1_0);
    tmp_293_i_i_i8_cast7_fu_3275_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_293_i_i_i8_i_fu_3266_p4),79));
    tmp_293_i_i_i8_i_fu_3266_p4 <= ((ap_const_lv1_1 & loc_V_12_reg_5802) & ap_const_lv1_0);
    tmp_293_i_i_i_cast_fu_2514_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_293_i_i_i_i_fu_2504_p4),79));
    tmp_293_i_i_i_i_fu_2504_p4 <= ((ap_const_lv1_1 & loc_V_8_fu_2500_p1) & ap_const_lv1_0);
        tmp_294_i_i_i12_cast_fu_3254_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_294_i_i_i12_i_fu_3248_p2),9));

    tmp_294_i_i_i12_i_fu_3248_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) - unsigned(loc_V_11_fu_3216_p4));
        tmp_294_i_i_i55_cast_fu_5025_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_294_i_i_i55_i_fu_5019_p2),9));

    tmp_294_i_i_i55_i_fu_5019_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) - unsigned(loc_V_15_fu_4987_p4));
        tmp_294_i_i_i_cast_i_fu_2542_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_294_i_i_i_i_fu_2536_p2),9));

    tmp_294_i_i_i_i_fu_2536_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) - unsigned(loc_V_7_fu_2490_p4));
    tmp_295_i_i_i14_i_fu_3285_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_assign_2_i_i_i13_s_fu_3279_p1),79));
    tmp_295_i_i_i57_i_fu_5056_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_assign_2_i_i_i56_s_fu_5050_p1),79));
    tmp_295_i_i_i_i_fu_2562_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_assign_2_i_i_i_ca_fu_2554_p1),79));
    tmp_296_i_i_i15_i_fu_3289_p2 <= std_logic_vector(shift_right(unsigned(tmp_293_i_i_i8_i_fu_3266_p4),to_integer(unsigned('0' & sh_assign_2_i_i_i13_1_fu_3282_p1(25-1 downto 0)))));
    tmp_296_i_i_i58_i_fu_5060_p2 <= std_logic_vector(shift_right(unsigned(tmp_293_i_i_i51_i_fu_5037_p4),to_integer(unsigned('0' & sh_assign_2_i_i_i56_1_fu_5053_p1(25-1 downto 0)))));
    tmp_296_i_i_i_i_fu_2566_p2 <= std_logic_vector(shift_right(unsigned(tmp_293_i_i_i_i_fu_2504_p4),to_integer(unsigned('0' & sh_assign_2_i_i_i_ca_1_fu_2558_p1(25-1 downto 0)))));
    tmp_297_i_i_i16_i_fu_3295_p2 <= std_logic_vector(shift_left(unsigned(tmp_293_i_i_i8_cast7_fu_3275_p1),to_integer(unsigned('0' & tmp_295_i_i_i14_i_fu_3285_p1(31-1 downto 0)))));
    tmp_297_i_i_i59_i_fu_5066_p2 <= std_logic_vector(shift_left(unsigned(tmp_293_i_i_i51_cast_fu_5046_p1),to_integer(unsigned('0' & tmp_295_i_i_i57_i_fu_5056_p1(31-1 downto 0)))));
    tmp_297_i_i_i_i_fu_2572_p2 <= std_logic_vector(shift_left(unsigned(tmp_293_i_i_i_cast_fu_2514_p1),to_integer(unsigned('0' & tmp_295_i_i_i_i_fu_2562_p1(31-1 downto 0)))));
    tmp_29_cast_fu_1353_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_29_fu_1347_p2),64));
    tmp_29_fu_1347_p2 <= std_logic_vector(unsigned(phi_mul_reg_813) + unsigned(tmp_93_i_cast_fu_1343_p1));
    tmp_31_cast_fu_1723_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_31_fu_1717_p2),64));
    tmp_31_fu_1717_p2 <= std_logic_vector(unsigned(ap_const_lv9_B4) + unsigned(tmp_95_i_cast_fu_1713_p1));
    tmp_32_cast_fu_1398_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_1392_p2),64));
    tmp_32_fu_2586_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_154_fu_2578_p3),32));
    tmp_33_fu_2590_p4 <= tmp_297_i_i_i_i_fu_2572_p2(55 downto 24);
    tmp_34_fu_2202_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_2182_p3) + unsigned(p_shl1_cast_fu_2194_p3));
    tmp_35_fu_2228_p2 <= std_logic_vector(unsigned(tmp_34_reg_5478) + unsigned(tmp_158_fu_2224_p1));
    tmp_36_fu_2722_p2 <= std_logic_vector(unsigned(p_shl2_cast_fu_2702_p3) + unsigned(p_shl3_cast_fu_2714_p3));
    tmp_37_fu_2728_p2 <= std_logic_vector(unsigned(tmp_159_fu_2694_p1) + unsigned(tmp_36_fu_2722_p2));
    tmp_38_fu_2776_p2 <= std_logic_vector(unsigned(ap_const_lv9_B4) + unsigned(tmp_135_i_cast_fu_2766_p1));
    tmp_39_fu_3309_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_184_fu_3301_p3),32));
    tmp_40_cast_fu_2233_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_35_fu_2228_p2),64));
    tmp_40_fu_3313_p4 <= tmp_297_i_i_i16_i_fu_3295_p2(55 downto 24);
    tmp_41_fu_3357_p2 <= std_logic_vector(unsigned(phi_mul240_cast_reg_5678_pp4_iter7_reg) + unsigned(tmp_188_fu_3351_p2));
    tmp_42_fu_3414_p2 <= std_logic_vector(unsigned(ap_const_lv10_B4) + unsigned(tmp_189_fu_3410_p1));
    tmp_43_fu_4244_p2 <= std_logic_vector(unsigned(p_shl4_cast_fu_4224_p3) + unsigned(p_shl5_cast_fu_4236_p3));
        tmp_44_cast_fu_2734_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_37_fu_2728_p2),64));

    tmp_44_fu_4250_p2 <= std_logic_vector(unsigned(tmp_229_fu_4216_p1) + unsigned(tmp_43_fu_4244_p2));
    tmp_45_fu_5183_p2 <= std_logic_vector(unsigned(ap_const_lv10_64) + unsigned(tmp_233_reg_6094));
    tmp_45_i_fu_2317_p2 <= "1" when (loc_V_4_reg_5539 = ap_const_lv23_0) else "0";
    tmp_46_cast_fu_2782_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_38_fu_2776_p2),64));
    tmp_46_fu_4395_p2 <= std_logic_vector(unsigned(ap_const_lv10_C8) + unsigned(tmp_233_fu_4391_p1));
    tmp_46_i_fu_2322_p2 <= "1" when (loc_V_reg_5531 = ap_const_lv8_0) else "0";
    tmp_47_fu_5193_p2 <= std_logic_vector(unsigned(ap_const_lv10_12C) + unsigned(tmp_233_reg_6094));
    tmp_47_i_fu_2298_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(index_V_fu_2288_p4),64));
    tmp_48_fu_4493_p2 <= std_logic_vector(unsigned(p_shl6_cast_fu_4473_p3) + unsigned(p_shl7_cast_fu_4485_p3));
    tmp_48_i_fu_2400_p2 <= (mask_table1_q0 xor ap_const_lv23_7FFFFF);
    tmp_49_fu_4499_p2 <= std_logic_vector(unsigned(tmp_237_fu_4465_p1) + unsigned(tmp_48_fu_4493_p2));
    tmp_50_fu_4547_p2 <= std_logic_vector(unsigned(ap_const_lv9_B4) + unsigned(tmp_250_i_cast_fu_4537_p1));
    tmp_51_cast_fu_3362_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_41_fu_3357_p2),64));
    tmp_51_fu_5080_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_263_fu_5072_p3),32));
        tmp_52_cast_fu_3420_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_42_fu_3414_p2),64));

    tmp_52_fu_5084_p4 <= tmp_297_i_i_i59_i_fu_5066_p2(55 downto 24);
    tmp_53_fu_5128_p2 <= std_logic_vector(unsigned(phi_mul242_cast_reg_6145_pp6_iter7_reg) + unsigned(tmp_267_fu_5122_p2));
        tmp_58_cast_fu_4256_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_44_fu_4250_p2),64));

        tmp_59_cast_fu_5188_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_45_fu_5183_p2),64));

        tmp_60_cast_fu_4401_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_46_fu_4395_p2),64));

        tmp_61_cast_fu_5198_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_47_fu_5193_p2),64));

        tmp_65_cast_fu_4505_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_49_fu_4499_p2),64));

    tmp_67_cast_fu_4553_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_50_fu_4547_p2),64));
    tmp_72_cast_fu_5133_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_53_fu_5128_p2),64));
    tmp_83_i_fu_1454_p3 <= (ap_const_lv1_1 & tmp_122_fu_1450_p1);
    tmp_87_i_fu_1598_p3 <= (ap_const_lv1_1 & tmp_135_fu_1594_p1);
    tmp_91_i_fu_1332_p2 <= "1" when (signed(j_0_i_cast_cast_i_fu_1328_p1) < signed(lines_cols_read_reg_5228)) else "0";
    tmp_93_i_cast_fu_1343_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_0_i_i_reg_825),10));
    tmp_95_i_cast_fu_1713_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(n4_i_reg_870_pp2_iter12_reg),9));
    tmp_95_i_fu_1708_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(n4_i_reg_870_pp2_iter12_reg),64));
    tmp_96_i_fu_1446_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_V_fu_1436_p4),12));
    tmp_98_i_fu_1472_p2 <= "1" when (tmp_fu_1424_p1 = ap_const_lv63_0) else "0";
    tmp_V_fu_3451_p3 <= 
        p_Val2_s_reg_5847 when (is_neg_1_fu_3443_p3(0) = '1') else 
        p_Val2_118_fu_3433_p2;
    tmp_cast_cast_fu_3033_p3 <= 
        ap_const_lv8_72 when (tmp_160_i_fu_3025_p2(0) = '1') else 
        ap_const_lv8_71;
    tmp_fu_1424_p1 <= ireg_V_fu_1420_p1(63 - 1 downto 0);
    tmp_i1_389_fu_2312_p2 <= "1" when (unsigned(loc_V_reg_5531) > unsigned(ap_const_lv8_96)) else "0";
    tmp_i1_fu_2307_p2 <= "1" when (unsigned(loc_V_reg_5531) < unsigned(ap_const_lv8_7F)) else "0";
    tmp_i_fu_1317_p2 <= "1" when (signed(i_0_i_cast_cast_i_fu_1313_p1) < signed(lines_rows_read_reg_5223)) else "0";
    tmp_i_i1_fu_4861_p2 <= "1" when (unsigned(loc_V_13_fu_4851_p4) < unsigned(ap_const_lv8_7E)) else "0";
    tmp_i_i_390_fu_3090_p2 <= "1" when (unsigned(loc_V_9_fu_3080_p4) < unsigned(ap_const_lv8_7E)) else "0";
    tmp_i_i_fu_2251_p0 <= pt_buf_length_i_fu_376;
        tmp_i_i_fu_2251_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_i_i_fu_2251_p0),64));

    tmp_i_i_i_i52_cast_i_fu_5001_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loc_V_15_fu_4987_p4),9));
    tmp_i_i_i_i9_cast_i_fu_3230_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loc_V_11_fu_3216_p4),9));
    tmp_i_i_i_i_cast_i_fu_2518_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loc_V_7_fu_2490_p4),9));
    tmp_s_fu_1392_p2 <= std_logic_vector(unsigned(phi_mul1_reg_847) + unsigned(tmp_111_i_cast_fu_1388_p1));
    total_fu_4377_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(total_1_load_reg_5607));

    trigtab_V_address0_assign_proc : process(ap_CS_fsm_pp4_stage0, ap_enable_reg_pp4_iter0, ap_CS_fsm_state96, ap_CS_fsm_pp6_stage0, ap_enable_reg_pp6_iter0, ap_enable_reg_pp2_iter13, ap_block_pp2_stage0, ap_block_pp4_stage0, tmp_95_i_fu_1708_p1, tmp_46_cast_fu_2782_p1, tmp_52_cast_fu_3420_p1, tmp_67_cast_fu_4553_p1, ap_block_pp6_stage0)
    begin
        if (((ap_enable_reg_pp6_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_const_boolean_0 = ap_block_pp6_stage0))) then 
            trigtab_V_address0 <= tmp_67_cast_fu_4553_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state96)) then 
            trigtab_V_address0 <= tmp_52_cast_fu_3420_p1(9 - 1 downto 0);
        elsif (((ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_boolean_0 = ap_block_pp4_stage0))) then 
            trigtab_V_address0 <= tmp_46_cast_fu_2782_p1(9 - 1 downto 0);
        elsif (((ap_enable_reg_pp2_iter13 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            trigtab_V_address0 <= tmp_95_i_fu_1708_p1(9 - 1 downto 0);
        else 
            trigtab_V_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    trigtab_V_address1_assign_proc : process(ap_CS_fsm_pp4_stage0, ap_enable_reg_pp4_iter0, ap_CS_fsm_state96, ap_CS_fsm_pp6_stage0, ap_enable_reg_pp6_iter0, ap_enable_reg_pp2_iter13, ap_block_pp2_stage0, ap_block_pp4_stage0, tmp_31_cast_fu_1723_p1, tmp_135_i_fu_2761_p1, tmp_140_i_fu_3405_p1, ap_block_pp6_stage0, tmp_250_i_fu_4532_p1)
    begin
        if (((ap_enable_reg_pp6_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_const_boolean_0 = ap_block_pp6_stage0))) then 
            trigtab_V_address1 <= tmp_250_i_fu_4532_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state96)) then 
            trigtab_V_address1 <= tmp_140_i_fu_3405_p1(9 - 1 downto 0);
        elsif (((ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_boolean_0 = ap_block_pp4_stage0))) then 
            trigtab_V_address1 <= tmp_135_i_fu_2761_p1(9 - 1 downto 0);
        elsif (((ap_enable_reg_pp2_iter13 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            trigtab_V_address1 <= tmp_31_cast_fu_1723_p1(9 - 1 downto 0);
        else 
            trigtab_V_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    trigtab_V_ce0_assign_proc : process(ap_block_pp2_stage0_11001, ap_CS_fsm_pp4_stage0, ap_block_pp4_stage0_11001, ap_enable_reg_pp4_iter0, ap_CS_fsm_state96, ap_CS_fsm_pp6_stage0, ap_block_pp6_stage0_11001, ap_enable_reg_pp6_iter0, ap_enable_reg_pp2_iter13)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state96) or ((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter13 = ap_const_logic_1)) or ((ap_enable_reg_pp6_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_const_boolean_0 = ap_block_pp6_stage0_11001)))) then 
            trigtab_V_ce0 <= ap_const_logic_1;
        else 
            trigtab_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    trigtab_V_ce1_assign_proc : process(ap_block_pp2_stage0_11001, ap_CS_fsm_pp4_stage0, ap_block_pp4_stage0_11001, ap_enable_reg_pp4_iter0, ap_CS_fsm_state96, ap_CS_fsm_pp6_stage0, ap_block_pp6_stage0_11001, ap_enable_reg_pp6_iter0, ap_enable_reg_pp2_iter13)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state96) or ((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter13 = ap_const_logic_1)) or ((ap_enable_reg_pp6_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_const_boolean_0 = ap_block_pp6_stage0_11001)))) then 
            trigtab_V_ce1 <= ap_const_logic_1;
        else 
            trigtab_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    trigtab_V_d0 <= 
        newSel_fu_1914_p3 when (or_cond_fu_1922_p2(0) = '1') else 
        newSel1_fu_1928_p3;
    trigtab_V_d1 <= 
        newSel3_fu_2131_p3 when (or_cond1_fu_2139_p2(0) = '1') else 
        newSel4_fu_2145_p3;

    trigtab_V_we0_assign_proc : process(ap_block_pp2_stage0_11001, exitcond5_i_reg_5302_pp2_iter12_reg, ap_enable_reg_pp2_iter13)
    begin
        if (((exitcond5_i_reg_5302_pp2_iter12_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter13 = ap_const_logic_1))) then 
            trigtab_V_we0 <= ap_const_logic_1;
        else 
            trigtab_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    trigtab_V_we1_assign_proc : process(ap_block_pp2_stage0_11001, exitcond5_i_reg_5302_pp2_iter12_reg, ap_enable_reg_pp2_iter13)
    begin
        if (((exitcond5_i_reg_5302_pp2_iter12_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter13 = ap_const_logic_1))) then 
            trigtab_V_we1 <= ap_const_logic_1;
        else 
            trigtab_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    val_0_max_val_i_fu_3384_p3 <= 
        max_val_2_fu_3371_p2 when (tmp_175_i_fu_3378_p2(0) = '1') else 
        max_val1_i_reg_930;
    x0_1_fu_4105_p2 <= (tmp_226_fu_4100_p2 or ap_const_lv32_8000);
    x_1_fu_4273_p2 <= std_logic_vector(unsigned(j1_1_reg_1074) - unsigned(dx0_1_i_reg_1029));
    x_2_fu_5159_p2 <= std_logic_vector(unsigned(j1_4_reg_1141) - unsigned(dx0_2_i_reg_1108));
    x_assign_1_fu_4968_p3 <= 
        x_assign_s_reg_6232 when (sel_tmp2_i2_fu_4963_p2(0) = '1') else 
        sel_tmp_i2_fu_4954_p1;
    x_assign_2_fu_4328_p2 <= std_logic_vector(unsigned(line_end_y_q0) - unsigned(line_end_y_q1));
    x_assign_7_fu_2471_p3 <= 
        reg_1301 when (sel_tmp8_i_fu_2465_p2(0) = '1') else 
        sel_tmp6_i_fu_2451_p3;
    x_assign_8_fu_3069_p3 <= 
        ap_const_lv32_0 when (tmp_138_i_reg_5719_pp4_iter5_reg(0) = '1') else 
        f_fu_3065_p1;
    x_assign_9_fu_3197_p3 <= 
        x_assign_8_reg_5765 when (sel_tmp2_i1_fu_3192_p2(0) = '1') else 
        sel_tmp_i1_fu_3183_p1;
    x_assign_fu_4297_p2 <= std_logic_vector(unsigned(line_end_x_q0) - unsigned(line_end_x_q1));
    x_assign_s_fu_4840_p3 <= 
        ap_const_lv32_0 when (tmp_253_i_reg_6186_pp6_iter5_reg(0) = '1') else 
        f_5_fu_4836_p1;
    xs_exp_V_fu_2389_p3 <= 
        loc_V_reg_5531 when (p_Result_61_reg_5522(0) = '1') else 
        loc_V_5_fu_2369_p4;
    xs_sig_V_1_fu_2383_p3 <= 
        loc_V_4_reg_5539 when (p_Result_61_reg_5522(0) = '1') else 
        loc_V_6_fu_2379_p1;
    xs_sig_V_4_fu_3152_p2 <= (tmp_276_i_i_fu_3146_p2 and loc_V_10_fu_3142_p1);
    xs_sig_V_5_fu_4923_p2 <= (tmp_276_i_i1_fu_4917_p2 and loc_V_14_fu_4913_p1);
    xs_sig_V_fu_2406_p2 <= (xs_sig_V_1_fu_2383_p3 and tmp_48_i_fu_2400_p2);
    xs_sign_V_fu_2395_p2 <= (p_Result_61_reg_5522 or p_Result_127_fu_2361_p3);
    y0_1_fu_4084_p2 <= (tmp_227_fu_4079_p2 or ap_const_lv32_8000);
    y_1_fu_4279_p2 <= std_logic_vector(unsigned(i1_reg_1085) - unsigned(dy0_1_i_reg_1040));
    y_2_fu_5165_p2 <= std_logic_vector(unsigned(i1_3_reg_1152) - unsigned(dy0_2_i_reg_1119));
end behav;
