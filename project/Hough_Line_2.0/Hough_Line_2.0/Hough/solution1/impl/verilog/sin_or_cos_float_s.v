// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module sin_or_cos_float_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        t_in,
        do_cos,
        ap_return
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;
parameter    ap_const_lv32_0 = 32'd0;


input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] t_in;
input   do_cos;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_idle_pp0;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
reg    ap_block_pp0_stage0_11001;
wire   [3:0] ref_4oPi_table_100_V_address0;
reg    ref_4oPi_table_100_V_ce0;
wire   [99:0] ref_4oPi_table_100_V_q0;
wire   [7:0] second_order_float_2_address0;
reg    second_order_float_2_ce0;
wire   [29:0] second_order_float_2_q0;
wire   [7:0] second_order_float_3_address0;
reg    second_order_float_3_ce0;
wire   [22:0] second_order_float_3_q0;
wire   [7:0] second_order_float_s_address0;
reg    second_order_float_s_ce0;
wire  signed [14:0] second_order_float_s_q0;
reg   [0:0] do_cos_read_reg_1185;
reg   [0:0] do_cos_read_reg_1185_pp0_iter1_reg;
reg   [0:0] do_cos_read_reg_1185_pp0_iter2_reg;
reg   [0:0] do_cos_read_reg_1185_pp0_iter3_reg;
reg   [0:0] do_cos_read_reg_1185_pp0_iter4_reg;
reg   [0:0] do_cos_read_reg_1185_pp0_iter5_reg;
reg   [0:0] do_cos_read_reg_1185_pp0_iter6_reg;
reg   [0:0] p_Result_22_reg_1192;
reg   [0:0] p_Result_22_reg_1192_pp0_iter1_reg;
reg   [0:0] p_Result_22_reg_1192_pp0_iter2_reg;
reg   [0:0] p_Result_22_reg_1192_pp0_iter3_reg;
wire   [7:0] loc_V_fu_260_p4;
reg   [7:0] loc_V_reg_1198;
reg   [7:0] loc_V_reg_1198_pp0_iter1_reg;
reg   [7:0] loc_V_reg_1198_pp0_iter2_reg;
wire   [22:0] loc_V_1_fu_270_p1;
reg   [22:0] loc_V_1_reg_1205;
reg   [22:0] loc_V_1_reg_1205_pp0_iter1_reg;
wire   [0:0] closepath_fu_274_p2;
reg   [0:0] closepath_reg_1211;
reg   [0:0] closepath_reg_1211_pp0_iter1_reg;
reg   [0:0] closepath_reg_1211_pp0_iter2_reg;
wire   [3:0] tmp_38_fu_309_p1;
reg   [3:0] tmp_38_reg_1222;
reg   [79:0] Med_V_reg_1227;
reg   [57:0] p_Val2_8_reg_1232;
reg   [2:0] tmp_4_i_reg_1238;
wire   [0:0] tmp_21_fu_372_p2;
reg   [0:0] tmp_21_reg_1243;
reg   [0:0] tmp_21_reg_1243_pp0_iter3_reg;
reg   [0:0] tmp_21_reg_1243_pp0_iter4_reg;
reg   [0:0] tmp_21_reg_1243_pp0_iter5_reg;
reg   [0:0] tmp_21_reg_1243_pp0_iter6_reg;
wire   [2:0] p_Val2_29_fu_389_p3;
reg   [2:0] p_Val2_29_reg_1249;
reg   [28:0] Mx_V_reg_1255;
reg   [28:0] Mx_V_reg_1255_pp0_iter4_reg;
reg   [28:0] Mx_V_reg_1255_pp0_iter5_reg;
wire  signed [7:0] Ex_V_fu_483_p2;
reg  signed [7:0] Ex_V_reg_1262;
reg  signed [7:0] Ex_V_reg_1262_pp0_iter4_reg;
reg  signed [7:0] Ex_V_reg_1262_pp0_iter5_reg;
reg  signed [7:0] Ex_V_reg_1262_pp0_iter6_reg;
reg   [0:0] isNeg_reg_1268;
wire   [0:0] tmp_20_fu_497_p2;
reg   [0:0] tmp_20_reg_1274;
reg   [0:0] tmp_20_reg_1274_pp0_iter4_reg;
reg   [0:0] tmp_20_reg_1274_pp0_iter5_reg;
reg   [0:0] tmp_20_reg_1274_pp0_iter6_reg;
wire   [0:0] tmp_22_fu_502_p2;
reg   [0:0] tmp_22_reg_1280;
reg   [0:0] tmp_22_reg_1280_pp0_iter4_reg;
reg   [0:0] tmp_22_reg_1280_pp0_iter5_reg;
reg   [0:0] tmp_22_reg_1280_pp0_iter6_reg;
wire   [0:0] cos_basis_fu_583_p3;
reg   [0:0] cos_basis_reg_1288;
reg   [0:0] cos_basis_reg_1288_pp0_iter5_reg;
reg   [0:0] cos_basis_reg_1288_pp0_iter6_reg;
wire   [21:0] p_Val2_17_fu_600_p1;
reg   [21:0] p_Val2_17_reg_1294;
reg   [14:0] tmp_71_i_reg_1299;
wire   [0:0] or_cond_112_fu_743_p2;
reg   [0:0] or_cond_112_reg_1319;
reg   [0:0] or_cond_112_reg_1319_pp0_iter5_reg;
reg   [0:0] or_cond_112_reg_1319_pp0_iter6_reg;
wire   [0:0] p_Result_s_fu_763_p3;
reg   [0:0] p_Result_s_reg_1325;
reg   [0:0] p_Result_s_reg_1325_pp0_iter5_reg;
reg   [0:0] p_Result_s_reg_1325_pp0_iter6_reg;
reg   [28:0] p_Val2_21_reg_1330;
wire   [22:0] tmp_fu_828_p2;
reg   [22:0] tmp_reg_1335;
reg   [28:0] result_V_reg_1340;
reg   [15:0] p_Result_90_i_reg_1346;
reg   [12:0] p_Result_i1_reg_1351;
reg    ap_block_pp0_stage0_subdone;
wire   [63:0] tmp_5_i_i_fu_304_p1;
wire   [63:0] tmp_72_i_fu_646_p1;
wire   [31:0] p_Val2_s_fu_248_p1;
wire   [7:0] expv_op_fu_280_p2;
wire   [7:0] addr_V_fu_286_p3;
wire   [3:0] tmp_1_fu_294_p4;
wire   [99:0] tmp_7_i_i_fu_313_p1;
wire   [99:0] r_V_3_fu_316_p2;
wire   [23:0] p_Result_23_fu_332_p3;
wire   [79:0] r_V_4_fu_346_p0;
wire   [23:0] r_V_4_fu_346_p1;
wire   [103:0] r_V_4_fu_346_p2;
wire   [7:0] p_i_fu_377_p2;
wire   [0:0] tmp_39_fu_395_p1;
wire   [57:0] p_Val2_i_fu_399_p2;
wire   [57:0] p_Val2_10_fu_404_p3;
wire   [28:0] p_Result_i2_i_fu_411_p4;
wire   [29:0] p_Result_24_fu_421_p3;
reg   [29:0] p_Result_25_fu_429_p4;
wire   [31:0] p_Result_26_fu_439_p3;
reg   [31:0] val_assign_fu_447_p3;
wire   [4:0] Mx_zeros_V_fu_455_p1;
wire   [57:0] tmp_5_i_fu_459_p1;
wire   [57:0] p_Val2_12_fu_463_p2;
wire   [7:0] storemerge_i_fu_382_p3;
wire   [7:0] tmp_8_i_fu_479_p1;
wire  signed [8:0] sh_i_cast_fu_507_p1;
wire   [8:0] tmp_10_i_fu_510_p2;
wire  signed [8:0] sh_assign_fu_516_p3;
wire  signed [28:0] sh_assign_1_i_cast_fu_527_p1;
wire   [28:0] tmp_12_i_fu_534_p2;
wire   [31:0] tmp_11_i_fu_531_p1;
wire  signed [31:0] sh_assign_1_i_cast1_fu_523_p1;
wire   [31:0] tmp_12_i_cast_fu_539_p1;
wire   [31:0] tmp_13_i_fu_543_p2;
wire   [0:0] tmp_4_fu_556_p10;
wire   [0:0] tmp_s_fu_577_p2;
wire   [31:0] ssdm_int_V_write_ass_fu_549_p3;
wire   [14:0] tmp_i2_fu_604_p4;
wire   [29:0] p_Val2_19_fu_1171_p2;
wire   [0:0] not_do_cos_i_fu_627_p2;
wire   [0:0] sin_basis_fu_632_p2;
wire   [6:0] p_Result_i_fu_590_p4;
wire   [7:0] p_Result_27_fu_638_p3;
wire   [3:0] p_Result_31_fu_653_p3;
wire   [0:0] tmp_6_fu_659_p18;
wire   [0:0] tmp_7_fu_697_p18;
wire   [0:0] tmp_19_fu_735_p3;
wire   [0:0] tmp_8_fu_752_p2;
wire   [0:0] p_din_sign_V_fu_747_p2;
wire   [0:0] p_results_sign_V_ret_fu_757_p2;
wire  signed [22:0] p_Val2_1_fu_788_p0;
wire   [21:0] p_Val2_1_fu_788_p1;
wire   [44:0] p_Val2_1_fu_788_p2;
wire  signed [29:0] p_Val2_3_fu_1178_p2;
wire   [21:0] tmp_69_i_fu_794_p4;
wire   [13:0] tmp_75_i_fu_811_p4;
wire  signed [22:0] tmp_77_i_cast_fu_820_p1;
wire  signed [22:0] tmp_79_i_cast_cast_fu_824_p1;
wire  signed [29:0] tmp_cast_fu_843_p1;
wire  signed [29:0] tmp_76_i_fu_840_p1;
wire   [29:0] r_V_fu_846_p2;
wire   [28:0] Mx_V_read_assign_fu_834_p3;
wire  signed [29:0] p_Val2_22_fu_860_p0;
wire   [28:0] p_Val2_22_fu_860_p1;
wire   [57:0] p_Val2_22_fu_860_p2;
wire   [7:0] p_Ex_V_ret_fu_896_p3;
wire   [16:0] tmp_i2_111_fu_906_p3;
wire   [13:0] tmp_52_i_fu_925_p3;
wire   [31:0] p_Val2_24_fu_913_p5;
reg   [31:0] p_Result_29_fu_944_p4;
reg   [31:0] tmp_i_i_fu_954_p3;
wire   [31:0] p_Result_28_fu_932_p5;
reg   [31:0] p_Result_30_fu_966_p4;
reg   [31:0] tmp_i15_i_fu_976_p3;
wire   [28:0] tmp_43_fu_962_p1;
wire   [28:0] tmp_67_i1_fu_988_p2;
wire   [28:0] tmp_44_fu_984_p1;
wire   [0:0] tmp_68_i1_fu_993_p2;
wire   [31:0] shift_2_1_i_fu_999_p2;
wire  signed [8:0] rhs_V_fu_902_p1;
wire   [8:0] tmp_i3_fu_1019_p2;
wire  signed [31:0] tmp_i115_cast_fu_1025_p1;
wire   [31:0] shift_1_i_fu_1011_p3;
wire   [31:0] newexp_fu_1029_p2;
wire   [0:0] tmp_45_fu_1035_p3;
wire   [0:0] tmp_3_i_fu_1043_p2;
wire   [28:0] tmp_67_1_i_fu_1005_p2;
wire   [22:0] tmp_2_fu_1058_p4;
wire   [22:0] tmp_3_fu_1068_p4;
wire   [0:0] or_cond_i_fu_1048_p2;
wire   [0:0] tmp_9_fu_1100_p2;
wire   [7:0] out_exp_V_fu_1093_p3;
wire   [7:0] tmp_46_fu_1054_p1;
wire   [7:0] p_cast_cast_cast_fu_1086_p3;
wire   [7:0] p_results_exp_V_ret_fu_1105_p3;
wire   [0:0] not_or_cond_demorgan_fu_1120_p2;
wire   [0:0] not_or_cond_fu_1124_p2;
wire   [22:0] tmp_5_fu_1078_p3;
wire   [0:0] or_cond_fu_1138_p2;
wire   [22:0] newSel_cast_fu_1130_p3;
wire   [22:0] newSel1_fu_1142_p3;
wire   [7:0] ret_V_3_fu_1113_p3;
wire   [22:0] ret_V_4_fu_1150_p3;
wire   [31:0] p_Result_32_fu_1158_p4;
wire   [14:0] p_Val2_19_fu_1171_p0;
wire   [29:0] OP1_V_3_fu_614_p1;
wire   [14:0] p_Val2_19_fu_1171_p1;
wire   [14:0] p_Val2_3_fu_1178_p1;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to6;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire   [44:0] p_Val2_1_fu_788_p10;
wire   [57:0] p_Val2_22_fu_860_p10;
wire   [29:0] p_Val2_3_fu_1178_p10;
wire   [103:0] r_V_4_fu_346_p00;
wire   [103:0] r_V_4_fu_346_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
end

sin_or_cos_float_bkb #(
    .DataWidth( 100 ),
    .AddressRange( 13 ),
    .AddressWidth( 4 ))
ref_4oPi_table_100_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ref_4oPi_table_100_V_address0),
    .ce0(ref_4oPi_table_100_V_ce0),
    .q0(ref_4oPi_table_100_V_q0)
);

sin_or_cos_float_cud #(
    .DataWidth( 30 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
second_order_float_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(second_order_float_2_address0),
    .ce0(second_order_float_2_ce0),
    .q0(second_order_float_2_q0)
);

sin_or_cos_float_dEe #(
    .DataWidth( 23 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
second_order_float_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(second_order_float_3_address0),
    .ce0(second_order_float_3_ce0),
    .q0(second_order_float_3_q0)
);

sin_or_cos_float_eOg #(
    .DataWidth( 15 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
second_order_float_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(second_order_float_s_address0),
    .ce0(second_order_float_s_ce0),
    .q0(second_order_float_s_q0)
);

HoughLinesP_Core_fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 1 ))
HoughLinesP_Core_fYi_U29(
    .din0(1'd0),
    .din1(1'd1),
    .din2(1'd1),
    .din3(1'd0),
    .din4(1'd0),
    .din5(1'd1),
    .din6(1'd1),
    .din7(1'd0),
    .din8(p_Val2_29_reg_1249),
    .dout(tmp_4_fu_556_p10)
);

HoughLinesP_Core_g8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 1 ),
    .din9_WIDTH( 1 ),
    .din10_WIDTH( 1 ),
    .din11_WIDTH( 1 ),
    .din12_WIDTH( 1 ),
    .din13_WIDTH( 1 ),
    .din14_WIDTH( 1 ),
    .din15_WIDTH( 1 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 1 ))
HoughLinesP_Core_g8j_U30(
    .din0(1'd0),
    .din1(1'd0),
    .din2(1'd0),
    .din3(1'd1),
    .din4(1'd1),
    .din5(1'd1),
    .din6(1'd1),
    .din7(1'd0),
    .din8(1'd0),
    .din9(1'd1),
    .din10(1'd1),
    .din11(1'd1),
    .din12(1'd1),
    .din13(1'd0),
    .din14(1'd0),
    .din15(1'd0),
    .din16(p_Result_31_fu_653_p3),
    .dout(tmp_6_fu_659_p18)
);

HoughLinesP_Core_g8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 1 ),
    .din9_WIDTH( 1 ),
    .din10_WIDTH( 1 ),
    .din11_WIDTH( 1 ),
    .din12_WIDTH( 1 ),
    .din13_WIDTH( 1 ),
    .din14_WIDTH( 1 ),
    .din15_WIDTH( 1 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 1 ))
HoughLinesP_Core_g8j_U31(
    .din0(1'd0),
    .din1(1'd0),
    .din2(1'd1),
    .din3(1'd0),
    .din4(1'd1),
    .din5(1'd1),
    .din6(1'd0),
    .din7(1'd1),
    .din8(1'd1),
    .din9(1'd0),
    .din10(1'd1),
    .din11(1'd1),
    .din12(1'd0),
    .din13(1'd1),
    .din14(1'd0),
    .din15(1'd0),
    .din16(p_Result_31_fu_653_p3),
    .dout(tmp_7_fu_697_p18)
);

HoughLinesP_Core_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 30 ))
HoughLinesP_Core_hbi_U32(
    .din0(p_Val2_19_fu_1171_p0),
    .din1(p_Val2_19_fu_1171_p1),
    .dout(p_Val2_19_fu_1171_p2)
);

HoughLinesP_Core_ibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 30 ))
HoughLinesP_Core_ibs_U33(
    .din0(second_order_float_s_q0),
    .din1(p_Val2_3_fu_1178_p1),
    .dout(p_Val2_3_fu_1178_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        Ex_V_reg_1262 <= Ex_V_fu_483_p2;
        Ex_V_reg_1262_pp0_iter4_reg <= Ex_V_reg_1262;
        Ex_V_reg_1262_pp0_iter5_reg <= Ex_V_reg_1262_pp0_iter4_reg;
        Ex_V_reg_1262_pp0_iter6_reg <= Ex_V_reg_1262_pp0_iter5_reg;
        Mx_V_reg_1255 <= {{p_Val2_12_fu_463_p2[57:29]}};
        Mx_V_reg_1255_pp0_iter4_reg <= Mx_V_reg_1255;
        Mx_V_reg_1255_pp0_iter5_reg <= Mx_V_reg_1255_pp0_iter4_reg;
        closepath_reg_1211_pp0_iter2_reg <= closepath_reg_1211_pp0_iter1_reg;
        cos_basis_reg_1288 <= cos_basis_fu_583_p3;
        cos_basis_reg_1288_pp0_iter5_reg <= cos_basis_reg_1288;
        cos_basis_reg_1288_pp0_iter6_reg <= cos_basis_reg_1288_pp0_iter5_reg;
        do_cos_read_reg_1185_pp0_iter2_reg <= do_cos_read_reg_1185_pp0_iter1_reg;
        do_cos_read_reg_1185_pp0_iter3_reg <= do_cos_read_reg_1185_pp0_iter2_reg;
        do_cos_read_reg_1185_pp0_iter4_reg <= do_cos_read_reg_1185_pp0_iter3_reg;
        do_cos_read_reg_1185_pp0_iter5_reg <= do_cos_read_reg_1185_pp0_iter4_reg;
        do_cos_read_reg_1185_pp0_iter6_reg <= do_cos_read_reg_1185_pp0_iter5_reg;
        isNeg_reg_1268 <= Ex_V_fu_483_p2[32'd7];
        loc_V_reg_1198_pp0_iter2_reg <= loc_V_reg_1198_pp0_iter1_reg;
        or_cond_112_reg_1319 <= or_cond_112_fu_743_p2;
        or_cond_112_reg_1319_pp0_iter5_reg <= or_cond_112_reg_1319;
        or_cond_112_reg_1319_pp0_iter6_reg <= or_cond_112_reg_1319_pp0_iter5_reg;
        p_Result_22_reg_1192_pp0_iter2_reg <= p_Result_22_reg_1192_pp0_iter1_reg;
        p_Result_22_reg_1192_pp0_iter3_reg <= p_Result_22_reg_1192_pp0_iter2_reg;
        p_Result_90_i_reg_1346 <= {{p_Val2_22_fu_860_p2[57:42]}};
        p_Result_i1_reg_1351 <= {{p_Val2_22_fu_860_p2[41:29]}};
        p_Result_s_reg_1325 <= p_Result_s_fu_763_p3;
        p_Result_s_reg_1325_pp0_iter5_reg <= p_Result_s_reg_1325;
        p_Result_s_reg_1325_pp0_iter6_reg <= p_Result_s_reg_1325_pp0_iter5_reg;
        p_Val2_17_reg_1294 <= p_Val2_17_fu_600_p1;
        p_Val2_21_reg_1330 <= {{second_order_float_2_q0[29:1]}};
        p_Val2_29_reg_1249 <= p_Val2_29_fu_389_p3;
        p_Val2_8_reg_1232 <= {{r_V_4_fu_346_p2[76:19]}};
        result_V_reg_1340 <= {{p_Val2_22_fu_860_p2[57:29]}};
        tmp_20_reg_1274 <= tmp_20_fu_497_p2;
        tmp_20_reg_1274_pp0_iter4_reg <= tmp_20_reg_1274;
        tmp_20_reg_1274_pp0_iter5_reg <= tmp_20_reg_1274_pp0_iter4_reg;
        tmp_20_reg_1274_pp0_iter6_reg <= tmp_20_reg_1274_pp0_iter5_reg;
        tmp_21_reg_1243 <= tmp_21_fu_372_p2;
        tmp_21_reg_1243_pp0_iter3_reg <= tmp_21_reg_1243;
        tmp_21_reg_1243_pp0_iter4_reg <= tmp_21_reg_1243_pp0_iter3_reg;
        tmp_21_reg_1243_pp0_iter5_reg <= tmp_21_reg_1243_pp0_iter4_reg;
        tmp_21_reg_1243_pp0_iter6_reg <= tmp_21_reg_1243_pp0_iter5_reg;
        tmp_22_reg_1280 <= tmp_22_fu_502_p2;
        tmp_22_reg_1280_pp0_iter4_reg <= tmp_22_reg_1280;
        tmp_22_reg_1280_pp0_iter5_reg <= tmp_22_reg_1280_pp0_iter4_reg;
        tmp_22_reg_1280_pp0_iter6_reg <= tmp_22_reg_1280_pp0_iter5_reg;
        tmp_71_i_reg_1299 <= {{p_Val2_19_fu_1171_p2[29:15]}};
        tmp_reg_1335 <= tmp_fu_828_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Med_V_reg_1227 <= {{r_V_3_fu_316_p2[99:20]}};
        closepath_reg_1211 <= closepath_fu_274_p2;
        closepath_reg_1211_pp0_iter1_reg <= closepath_reg_1211;
        do_cos_read_reg_1185 <= do_cos;
        do_cos_read_reg_1185_pp0_iter1_reg <= do_cos_read_reg_1185;
        loc_V_1_reg_1205 <= loc_V_1_fu_270_p1;
        loc_V_1_reg_1205_pp0_iter1_reg <= loc_V_1_reg_1205;
        loc_V_reg_1198 <= {{p_Val2_s_fu_248_p1[30:23]}};
        loc_V_reg_1198_pp0_iter1_reg <= loc_V_reg_1198;
        p_Result_22_reg_1192 <= p_Val2_s_fu_248_p1[32'd31];
        p_Result_22_reg_1192_pp0_iter1_reg <= p_Result_22_reg_1192;
        tmp_38_reg_1222 <= tmp_38_fu_309_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (closepath_reg_1211_pp0_iter1_reg == 1'd0))) begin
        tmp_4_i_reg_1238 <= {{r_V_4_fu_346_p2[79:77]}};
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to6 = 1'b1;
    end else begin
        ap_idle_pp0_0to6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to6 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ref_4oPi_table_100_V_ce0 = 1'b1;
    end else begin
        ref_4oPi_table_100_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        second_order_float_2_ce0 = 1'b1;
    end else begin
        second_order_float_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        second_order_float_3_ce0 = 1'b1;
    end else begin
        second_order_float_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        second_order_float_s_ce0 = 1'b1;
    end else begin
        second_order_float_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Ex_V_fu_483_p2 = (storemerge_i_fu_382_p3 - tmp_8_i_fu_479_p1);

assign Mx_V_read_assign_fu_834_p3 = ((cos_basis_reg_1288_pp0_iter5_reg[0:0] === 1'b1) ? 29'd536870911 : Mx_V_reg_1255_pp0_iter5_reg);

assign Mx_zeros_V_fu_455_p1 = val_assign_fu_447_p3[4:0];

assign OP1_V_3_fu_614_p1 = tmp_i2_fu_604_p4;

assign addr_V_fu_286_p3 = ((closepath_fu_274_p2[0:0] === 1'b1) ? 8'd63 : expv_op_fu_280_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start == 1'b0);
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_return = p_Result_32_fu_1158_p4;

assign closepath_fu_274_p2 = ((loc_V_fu_260_p4 < 8'd126) ? 1'b1 : 1'b0);

assign cos_basis_fu_583_p3 = ((do_cos_read_reg_1185_pp0_iter3_reg[0:0] === 1'b1) ? tmp_s_fu_577_p2 : tmp_4_fu_556_p10);

assign expv_op_fu_280_p2 = ($signed(8'd194) + $signed(loc_V_fu_260_p4));

assign loc_V_1_fu_270_p1 = p_Val2_s_fu_248_p1[22:0];

assign loc_V_fu_260_p4 = {{p_Val2_s_fu_248_p1[30:23]}};

assign newSel1_fu_1142_p3 = ((or_cond_i_fu_1048_p2[0:0] === 1'b1) ? 23'd0 : tmp_5_fu_1078_p3);

assign newSel_cast_fu_1130_p3 = ((not_or_cond_fu_1124_p2[0:0] === 1'b1) ? 23'd8388607 : 23'd0);

assign newexp_fu_1029_p2 = ($signed(tmp_i115_cast_fu_1025_p1) - $signed(shift_1_i_fu_1011_p3));

assign not_do_cos_i_fu_627_p2 = (do_cos_read_reg_1185_pp0_iter3_reg ^ 1'd1);

assign not_or_cond_demorgan_fu_1120_p2 = (tmp_21_reg_1243_pp0_iter6_reg & tmp_20_reg_1274_pp0_iter6_reg);

assign not_or_cond_fu_1124_p2 = (not_or_cond_demorgan_fu_1120_p2 ^ 1'd1);

assign or_cond_112_fu_743_p2 = (tmp_21_reg_1243_pp0_iter3_reg & tmp_20_reg_1274);

assign or_cond_fu_1138_p2 = (tmp_22_reg_1280_pp0_iter6_reg | or_cond_112_reg_1319_pp0_iter6_reg);

assign or_cond_i_fu_1048_p2 = (tmp_45_fu_1035_p3 | tmp_3_i_fu_1043_p2);

assign out_exp_V_fu_1093_p3 = ((tmp_22_reg_1280_pp0_iter6_reg[0:0] === 1'b1) ? 8'd255 : 8'd0);

assign p_Ex_V_ret_fu_896_p3 = ((cos_basis_reg_1288_pp0_iter6_reg[0:0] === 1'b1) ? 8'd0 : Ex_V_reg_1262_pp0_iter6_reg);

assign p_Result_23_fu_332_p3 = {{1'd1}, {loc_V_1_reg_1205_pp0_iter1_reg}};

assign p_Result_24_fu_421_p3 = {{p_Result_i2_i_fu_411_p4}, {1'd1}};

integer ap_tvar_int_0;

always @ (p_Result_24_fu_421_p3) begin
    for (ap_tvar_int_0 = 30 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 29 - 0) begin
            p_Result_25_fu_429_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_25_fu_429_p4[ap_tvar_int_0] = p_Result_24_fu_421_p3[29 - ap_tvar_int_0];
        end
    end
end

assign p_Result_26_fu_439_p3 = {{2'd3}, {p_Result_25_fu_429_p4}};

assign p_Result_27_fu_638_p3 = {{sin_basis_fu_632_p2}, {p_Result_i_fu_590_p4}};

assign p_Result_28_fu_932_p5 = {{tmp_52_i_fu_925_p3}, {ap_const_lv32_0[17:0]}};

integer ap_tvar_int_1;

always @ (p_Val2_24_fu_913_p5) begin
    for (ap_tvar_int_1 = 32 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 31 - 0) begin
            p_Result_29_fu_944_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            p_Result_29_fu_944_p4[ap_tvar_int_1] = p_Val2_24_fu_913_p5[31 - ap_tvar_int_1];
        end
    end
end

integer ap_tvar_int_2;

always @ (p_Result_28_fu_932_p5) begin
    for (ap_tvar_int_2 = 32 - 1; ap_tvar_int_2 >= 0; ap_tvar_int_2 = ap_tvar_int_2 - 1) begin
        if (ap_tvar_int_2 > 31 - 0) begin
            p_Result_30_fu_966_p4[ap_tvar_int_2] = 1'b0;
        end else begin
            p_Result_30_fu_966_p4[ap_tvar_int_2] = p_Result_28_fu_932_p5[31 - ap_tvar_int_2];
        end
    end
end

assign p_Result_31_fu_653_p3 = {{p_Result_22_reg_1192_pp0_iter3_reg}, {p_Val2_29_reg_1249}};

assign p_Result_32_fu_1158_p4 = {{{p_Result_s_reg_1325_pp0_iter6_reg}, {ret_V_3_fu_1113_p3}}, {ret_V_4_fu_1150_p3}};

assign p_Result_i2_i_fu_411_p4 = {{p_Val2_10_fu_404_p3[57:29]}};

assign p_Result_i_fu_590_p4 = {{ssdm_int_V_write_ass_fu_549_p3[28:22]}};

assign p_Result_s_fu_763_p3 = ((or_cond_112_fu_743_p2[0:0] === 1'b1) ? p_din_sign_V_fu_747_p2 : p_results_sign_V_ret_fu_757_p2);

assign p_Val2_10_fu_404_p3 = ((tmp_39_fu_395_p1[0:0] === 1'b1) ? p_Val2_i_fu_399_p2 : p_Val2_8_reg_1232);

assign p_Val2_12_fu_463_p2 = p_Val2_10_fu_404_p3 << tmp_5_i_fu_459_p1;

assign p_Val2_17_fu_600_p1 = ssdm_int_V_write_ass_fu_549_p3[21:0];

assign p_Val2_19_fu_1171_p0 = OP1_V_3_fu_614_p1;

assign p_Val2_19_fu_1171_p1 = OP1_V_3_fu_614_p1;

assign p_Val2_1_fu_788_p0 = second_order_float_3_q0;

assign p_Val2_1_fu_788_p1 = p_Val2_1_fu_788_p10;

assign p_Val2_1_fu_788_p10 = p_Val2_17_reg_1294;

assign p_Val2_1_fu_788_p2 = ($signed(p_Val2_1_fu_788_p0) * $signed({{1'b0}, {p_Val2_1_fu_788_p1}}));

assign p_Val2_22_fu_860_p0 = r_V_fu_846_p2;

assign p_Val2_22_fu_860_p1 = p_Val2_22_fu_860_p10;

assign p_Val2_22_fu_860_p10 = Mx_V_read_assign_fu_834_p3;

assign p_Val2_22_fu_860_p2 = ($signed(p_Val2_22_fu_860_p0) * $signed({{1'b0}, {p_Val2_22_fu_860_p1}}));

assign p_Val2_24_fu_913_p5 = {{tmp_i2_111_fu_906_p3}, {ap_const_lv32_0[14:0]}};

assign p_Val2_29_fu_389_p3 = ((closepath_reg_1211_pp0_iter2_reg[0:0] === 1'b1) ? 3'd0 : tmp_4_i_reg_1238);

assign p_Val2_3_fu_1178_p1 = p_Val2_3_fu_1178_p10;

assign p_Val2_3_fu_1178_p10 = tmp_71_i_reg_1299;

assign p_Val2_i_fu_399_p2 = (58'd0 - p_Val2_8_reg_1232);

assign p_Val2_s_fu_248_p1 = t_in;

assign p_cast_cast_cast_fu_1086_p3 = ((do_cos_read_reg_1185_pp0_iter6_reg[0:0] === 1'b1) ? 8'd127 : 8'd0);

assign p_din_sign_V_fu_747_p2 = (p_Result_22_reg_1192_pp0_iter3_reg & not_do_cos_i_fu_627_p2);

assign p_i_fu_377_p2 = ($signed(8'd131) + $signed(loc_V_reg_1198_pp0_iter2_reg));

assign p_results_exp_V_ret_fu_1105_p3 = ((tmp_9_fu_1100_p2[0:0] === 1'b1) ? out_exp_V_fu_1093_p3 : tmp_46_fu_1054_p1);

assign p_results_sign_V_ret_fu_757_p2 = (tmp_8_fu_752_p2 & tmp_19_fu_735_p3);

assign r_V_3_fu_316_p2 = ref_4oPi_table_100_V_q0 << tmp_7_i_i_fu_313_p1;

assign r_V_4_fu_346_p0 = r_V_4_fu_346_p00;

assign r_V_4_fu_346_p00 = Med_V_reg_1227;

assign r_V_4_fu_346_p1 = r_V_4_fu_346_p10;

assign r_V_4_fu_346_p10 = p_Result_23_fu_332_p3;

assign r_V_4_fu_346_p2 = (r_V_4_fu_346_p0 * r_V_4_fu_346_p1);

assign r_V_fu_846_p2 = ($signed(tmp_cast_fu_843_p1) + $signed(tmp_76_i_fu_840_p1));

assign ref_4oPi_table_100_V_address0 = tmp_5_i_i_fu_304_p1;

assign ret_V_3_fu_1113_p3 = ((or_cond_112_reg_1319_pp0_iter6_reg[0:0] === 1'b1) ? p_cast_cast_cast_fu_1086_p3 : p_results_exp_V_ret_fu_1105_p3);

assign ret_V_4_fu_1150_p3 = ((or_cond_fu_1138_p2[0:0] === 1'b1) ? newSel_cast_fu_1130_p3 : newSel1_fu_1142_p3);

assign rhs_V_fu_902_p1 = $signed(p_Ex_V_ret_fu_896_p3);

assign second_order_float_2_address0 = tmp_72_i_fu_646_p1;

assign second_order_float_3_address0 = tmp_72_i_fu_646_p1;

assign second_order_float_s_address0 = tmp_72_i_fu_646_p1;

assign sh_assign_1_i_cast1_fu_523_p1 = sh_assign_fu_516_p3;

assign sh_assign_1_i_cast_fu_527_p1 = sh_assign_fu_516_p3;

assign sh_assign_fu_516_p3 = ((isNeg_reg_1268[0:0] === 1'b1) ? tmp_10_i_fu_510_p2 : sh_i_cast_fu_507_p1);

assign sh_i_cast_fu_507_p1 = Ex_V_reg_1262;

assign shift_1_i_fu_1011_p3 = ((tmp_68_i1_fu_993_p2[0:0] === 1'b1) ? shift_2_1_i_fu_999_p2 : tmp_i_i_fu_954_p3);

assign shift_2_1_i_fu_999_p2 = (32'd16 + tmp_i15_i_fu_976_p3);

assign sin_basis_fu_632_p2 = (tmp_4_fu_556_p10 ^ not_do_cos_i_fu_627_p2);

assign ssdm_int_V_write_ass_fu_549_p3 = ((isNeg_reg_1268[0:0] === 1'b1) ? tmp_12_i_cast_fu_539_p1 : tmp_13_i_fu_543_p2);

assign storemerge_i_fu_382_p3 = ((closepath_reg_1211_pp0_iter2_reg[0:0] === 1'b1) ? p_i_fu_377_p2 : 8'd0);

assign tmp_10_i_fu_510_p2 = ($signed(9'd0) - $signed(sh_i_cast_fu_507_p1));

assign tmp_11_i_fu_531_p1 = Mx_V_reg_1255;

assign tmp_12_i_cast_fu_539_p1 = tmp_12_i_fu_534_p2;

assign tmp_12_i_fu_534_p2 = Mx_V_reg_1255 >> sh_assign_1_i_cast_fu_527_p1;

assign tmp_13_i_fu_543_p2 = tmp_11_i_fu_531_p1 << sh_assign_1_i_cast1_fu_523_p1;

assign tmp_19_fu_735_p3 = ((cos_basis_fu_583_p3[0:0] === 1'b1) ? tmp_6_fu_659_p18 : tmp_7_fu_697_p18);

assign tmp_1_fu_294_p4 = {{addr_V_fu_286_p3[7:4]}};

assign tmp_20_fu_497_p2 = ((loc_V_reg_1198_pp0_iter2_reg == 8'd0) ? 1'b1 : 1'b0);

assign tmp_21_fu_372_p2 = ((loc_V_1_reg_1205_pp0_iter1_reg == 23'd0) ? 1'b1 : 1'b0);

assign tmp_22_fu_502_p2 = ((loc_V_reg_1198_pp0_iter2_reg == 8'd255) ? 1'b1 : 1'b0);

assign tmp_2_fu_1058_p4 = {{tmp_67_1_i_fu_1005_p2[27:5]}};

assign tmp_38_fu_309_p1 = addr_V_fu_286_p3[3:0];

assign tmp_39_fu_395_p1 = p_Val2_29_fu_389_p3[0:0];

assign tmp_3_fu_1068_p4 = {{tmp_67_i1_fu_988_p2[27:5]}};

assign tmp_3_i_fu_1043_p2 = ((result_V_reg_1340 == 29'd0) ? 1'b1 : 1'b0);

assign tmp_43_fu_962_p1 = tmp_i_i_fu_954_p3[28:0];

assign tmp_44_fu_984_p1 = tmp_i15_i_fu_976_p3[28:0];

assign tmp_45_fu_1035_p3 = newexp_fu_1029_p2[32'd31];

assign tmp_46_fu_1054_p1 = newexp_fu_1029_p2[7:0];

assign tmp_52_i_fu_925_p3 = {{p_Result_i1_reg_1351}, {1'd1}};

assign tmp_5_fu_1078_p3 = ((tmp_68_i1_fu_993_p2[0:0] === 1'b1) ? tmp_2_fu_1058_p4 : tmp_3_fu_1068_p4);

assign tmp_5_i_fu_459_p1 = Mx_zeros_V_fu_455_p1;

assign tmp_5_i_i_fu_304_p1 = tmp_1_fu_294_p4;

assign tmp_67_1_i_fu_1005_p2 = tmp_67_i1_fu_988_p2 << tmp_44_fu_984_p1;

assign tmp_67_i1_fu_988_p2 = result_V_reg_1340 << tmp_43_fu_962_p1;

assign tmp_68_i1_fu_993_p2 = ((tmp_i_i_fu_954_p3 == 32'd16) ? 1'b1 : 1'b0);

assign tmp_69_i_fu_794_p4 = {{p_Val2_1_fu_788_p2[44:23]}};

assign tmp_72_i_fu_646_p1 = p_Result_27_fu_638_p3;

assign tmp_75_i_fu_811_p4 = {{p_Val2_3_fu_1178_p2[29:16]}};

assign tmp_76_i_fu_840_p1 = $signed(p_Val2_21_reg_1330);

assign tmp_77_i_cast_fu_820_p1 = $signed(tmp_69_i_fu_794_p4);

assign tmp_79_i_cast_cast_fu_824_p1 = $signed(tmp_75_i_fu_811_p4);

assign tmp_7_i_i_fu_313_p1 = tmp_38_reg_1222;

assign tmp_8_fu_752_p2 = (tmp_22_reg_1280 ^ 1'd1);

assign tmp_8_i_fu_479_p1 = Mx_zeros_V_fu_455_p1;

assign tmp_9_fu_1100_p2 = (tmp_22_reg_1280_pp0_iter6_reg | or_cond_i_fu_1048_p2);

assign tmp_cast_fu_843_p1 = $signed(tmp_reg_1335);

assign tmp_fu_828_p2 = ($signed(tmp_77_i_cast_fu_820_p1) + $signed(tmp_79_i_cast_cast_fu_824_p1));

assign tmp_i115_cast_fu_1025_p1 = $signed(tmp_i3_fu_1019_p2);


always @ (p_Result_30_fu_966_p4) begin
    if (p_Result_30_fu_966_p4[0] == 1'b1) begin
        tmp_i15_i_fu_976_p3 = 32'd0;
    end else if (p_Result_30_fu_966_p4[1] == 1'b1) begin
        tmp_i15_i_fu_976_p3 = 32'd1;
    end else if (p_Result_30_fu_966_p4[2] == 1'b1) begin
        tmp_i15_i_fu_976_p3 = 32'd2;
    end else if (p_Result_30_fu_966_p4[3] == 1'b1) begin
        tmp_i15_i_fu_976_p3 = 32'd3;
    end else if (p_Result_30_fu_966_p4[4] == 1'b1) begin
        tmp_i15_i_fu_976_p3 = 32'd4;
    end else if (p_Result_30_fu_966_p4[5] == 1'b1) begin
        tmp_i15_i_fu_976_p3 = 32'd5;
    end else if (p_Result_30_fu_966_p4[6] == 1'b1) begin
        tmp_i15_i_fu_976_p3 = 32'd6;
    end else if (p_Result_30_fu_966_p4[7] == 1'b1) begin
        tmp_i15_i_fu_976_p3 = 32'd7;
    end else if (p_Result_30_fu_966_p4[8] == 1'b1) begin
        tmp_i15_i_fu_976_p3 = 32'd8;
    end else if (p_Result_30_fu_966_p4[9] == 1'b1) begin
        tmp_i15_i_fu_976_p3 = 32'd9;
    end else if (p_Result_30_fu_966_p4[10] == 1'b1) begin
        tmp_i15_i_fu_976_p3 = 32'd10;
    end else if (p_Result_30_fu_966_p4[11] == 1'b1) begin
        tmp_i15_i_fu_976_p3 = 32'd11;
    end else if (p_Result_30_fu_966_p4[12] == 1'b1) begin
        tmp_i15_i_fu_976_p3 = 32'd12;
    end else if (p_Result_30_fu_966_p4[13] == 1'b1) begin
        tmp_i15_i_fu_976_p3 = 32'd13;
    end else if (p_Result_30_fu_966_p4[14] == 1'b1) begin
        tmp_i15_i_fu_976_p3 = 32'd14;
    end else if (p_Result_30_fu_966_p4[15] == 1'b1) begin
        tmp_i15_i_fu_976_p3 = 32'd15;
    end else if (p_Result_30_fu_966_p4[16] == 1'b1) begin
        tmp_i15_i_fu_976_p3 = 32'd16;
    end else if (p_Result_30_fu_966_p4[17] == 1'b1) begin
        tmp_i15_i_fu_976_p3 = 32'd17;
    end else if (p_Result_30_fu_966_p4[18] == 1'b1) begin
        tmp_i15_i_fu_976_p3 = 32'd18;
    end else if (p_Result_30_fu_966_p4[19] == 1'b1) begin
        tmp_i15_i_fu_976_p3 = 32'd19;
    end else if (p_Result_30_fu_966_p4[20] == 1'b1) begin
        tmp_i15_i_fu_976_p3 = 32'd20;
    end else if (p_Result_30_fu_966_p4[21] == 1'b1) begin
        tmp_i15_i_fu_976_p3 = 32'd21;
    end else if (p_Result_30_fu_966_p4[22] == 1'b1) begin
        tmp_i15_i_fu_976_p3 = 32'd22;
    end else if (p_Result_30_fu_966_p4[23] == 1'b1) begin
        tmp_i15_i_fu_976_p3 = 32'd23;
    end else if (p_Result_30_fu_966_p4[24] == 1'b1) begin
        tmp_i15_i_fu_976_p3 = 32'd24;
    end else if (p_Result_30_fu_966_p4[25] == 1'b1) begin
        tmp_i15_i_fu_976_p3 = 32'd25;
    end else if (p_Result_30_fu_966_p4[26] == 1'b1) begin
        tmp_i15_i_fu_976_p3 = 32'd26;
    end else if (p_Result_30_fu_966_p4[27] == 1'b1) begin
        tmp_i15_i_fu_976_p3 = 32'd27;
    end else if (p_Result_30_fu_966_p4[28] == 1'b1) begin
        tmp_i15_i_fu_976_p3 = 32'd28;
    end else if (p_Result_30_fu_966_p4[29] == 1'b1) begin
        tmp_i15_i_fu_976_p3 = 32'd29;
    end else if (p_Result_30_fu_966_p4[30] == 1'b1) begin
        tmp_i15_i_fu_976_p3 = 32'd30;
    end else if (p_Result_30_fu_966_p4[31] == 1'b1) begin
        tmp_i15_i_fu_976_p3 = 32'd31;
    end else begin
        tmp_i15_i_fu_976_p3 = 32'd32;
    end
end

assign tmp_i2_111_fu_906_p3 = {{p_Result_90_i_reg_1346}, {1'd1}};

assign tmp_i2_fu_604_p4 = {{ssdm_int_V_write_ass_fu_549_p3[21:7]}};

assign tmp_i3_fu_1019_p2 = ($signed(9'd127) + $signed(rhs_V_fu_902_p1));


always @ (p_Result_29_fu_944_p4) begin
    if (p_Result_29_fu_944_p4[0] == 1'b1) begin
        tmp_i_i_fu_954_p3 = 32'd0;
    end else if (p_Result_29_fu_944_p4[1] == 1'b1) begin
        tmp_i_i_fu_954_p3 = 32'd1;
    end else if (p_Result_29_fu_944_p4[2] == 1'b1) begin
        tmp_i_i_fu_954_p3 = 32'd2;
    end else if (p_Result_29_fu_944_p4[3] == 1'b1) begin
        tmp_i_i_fu_954_p3 = 32'd3;
    end else if (p_Result_29_fu_944_p4[4] == 1'b1) begin
        tmp_i_i_fu_954_p3 = 32'd4;
    end else if (p_Result_29_fu_944_p4[5] == 1'b1) begin
        tmp_i_i_fu_954_p3 = 32'd5;
    end else if (p_Result_29_fu_944_p4[6] == 1'b1) begin
        tmp_i_i_fu_954_p3 = 32'd6;
    end else if (p_Result_29_fu_944_p4[7] == 1'b1) begin
        tmp_i_i_fu_954_p3 = 32'd7;
    end else if (p_Result_29_fu_944_p4[8] == 1'b1) begin
        tmp_i_i_fu_954_p3 = 32'd8;
    end else if (p_Result_29_fu_944_p4[9] == 1'b1) begin
        tmp_i_i_fu_954_p3 = 32'd9;
    end else if (p_Result_29_fu_944_p4[10] == 1'b1) begin
        tmp_i_i_fu_954_p3 = 32'd10;
    end else if (p_Result_29_fu_944_p4[11] == 1'b1) begin
        tmp_i_i_fu_954_p3 = 32'd11;
    end else if (p_Result_29_fu_944_p4[12] == 1'b1) begin
        tmp_i_i_fu_954_p3 = 32'd12;
    end else if (p_Result_29_fu_944_p4[13] == 1'b1) begin
        tmp_i_i_fu_954_p3 = 32'd13;
    end else if (p_Result_29_fu_944_p4[14] == 1'b1) begin
        tmp_i_i_fu_954_p3 = 32'd14;
    end else if (p_Result_29_fu_944_p4[15] == 1'b1) begin
        tmp_i_i_fu_954_p3 = 32'd15;
    end else if (p_Result_29_fu_944_p4[16] == 1'b1) begin
        tmp_i_i_fu_954_p3 = 32'd16;
    end else if (p_Result_29_fu_944_p4[17] == 1'b1) begin
        tmp_i_i_fu_954_p3 = 32'd17;
    end else if (p_Result_29_fu_944_p4[18] == 1'b1) begin
        tmp_i_i_fu_954_p3 = 32'd18;
    end else if (p_Result_29_fu_944_p4[19] == 1'b1) begin
        tmp_i_i_fu_954_p3 = 32'd19;
    end else if (p_Result_29_fu_944_p4[20] == 1'b1) begin
        tmp_i_i_fu_954_p3 = 32'd20;
    end else if (p_Result_29_fu_944_p4[21] == 1'b1) begin
        tmp_i_i_fu_954_p3 = 32'd21;
    end else if (p_Result_29_fu_944_p4[22] == 1'b1) begin
        tmp_i_i_fu_954_p3 = 32'd22;
    end else if (p_Result_29_fu_944_p4[23] == 1'b1) begin
        tmp_i_i_fu_954_p3 = 32'd23;
    end else if (p_Result_29_fu_944_p4[24] == 1'b1) begin
        tmp_i_i_fu_954_p3 = 32'd24;
    end else if (p_Result_29_fu_944_p4[25] == 1'b1) begin
        tmp_i_i_fu_954_p3 = 32'd25;
    end else if (p_Result_29_fu_944_p4[26] == 1'b1) begin
        tmp_i_i_fu_954_p3 = 32'd26;
    end else if (p_Result_29_fu_944_p4[27] == 1'b1) begin
        tmp_i_i_fu_954_p3 = 32'd27;
    end else if (p_Result_29_fu_944_p4[28] == 1'b1) begin
        tmp_i_i_fu_954_p3 = 32'd28;
    end else if (p_Result_29_fu_944_p4[29] == 1'b1) begin
        tmp_i_i_fu_954_p3 = 32'd29;
    end else if (p_Result_29_fu_944_p4[30] == 1'b1) begin
        tmp_i_i_fu_954_p3 = 32'd30;
    end else if (p_Result_29_fu_944_p4[31] == 1'b1) begin
        tmp_i_i_fu_954_p3 = 32'd31;
    end else begin
        tmp_i_i_fu_954_p3 = 32'd32;
    end
end

assign tmp_s_fu_577_p2 = (tmp_4_fu_556_p10 ^ 1'd1);


always @ (p_Result_26_fu_439_p3) begin
    if (p_Result_26_fu_439_p3[0] == 1'b1) begin
        val_assign_fu_447_p3 = 32'd0;
    end else if (p_Result_26_fu_439_p3[1] == 1'b1) begin
        val_assign_fu_447_p3 = 32'd1;
    end else if (p_Result_26_fu_439_p3[2] == 1'b1) begin
        val_assign_fu_447_p3 = 32'd2;
    end else if (p_Result_26_fu_439_p3[3] == 1'b1) begin
        val_assign_fu_447_p3 = 32'd3;
    end else if (p_Result_26_fu_439_p3[4] == 1'b1) begin
        val_assign_fu_447_p3 = 32'd4;
    end else if (p_Result_26_fu_439_p3[5] == 1'b1) begin
        val_assign_fu_447_p3 = 32'd5;
    end else if (p_Result_26_fu_439_p3[6] == 1'b1) begin
        val_assign_fu_447_p3 = 32'd6;
    end else if (p_Result_26_fu_439_p3[7] == 1'b1) begin
        val_assign_fu_447_p3 = 32'd7;
    end else if (p_Result_26_fu_439_p3[8] == 1'b1) begin
        val_assign_fu_447_p3 = 32'd8;
    end else if (p_Result_26_fu_439_p3[9] == 1'b1) begin
        val_assign_fu_447_p3 = 32'd9;
    end else if (p_Result_26_fu_439_p3[10] == 1'b1) begin
        val_assign_fu_447_p3 = 32'd10;
    end else if (p_Result_26_fu_439_p3[11] == 1'b1) begin
        val_assign_fu_447_p3 = 32'd11;
    end else if (p_Result_26_fu_439_p3[12] == 1'b1) begin
        val_assign_fu_447_p3 = 32'd12;
    end else if (p_Result_26_fu_439_p3[13] == 1'b1) begin
        val_assign_fu_447_p3 = 32'd13;
    end else if (p_Result_26_fu_439_p3[14] == 1'b1) begin
        val_assign_fu_447_p3 = 32'd14;
    end else if (p_Result_26_fu_439_p3[15] == 1'b1) begin
        val_assign_fu_447_p3 = 32'd15;
    end else if (p_Result_26_fu_439_p3[16] == 1'b1) begin
        val_assign_fu_447_p3 = 32'd16;
    end else if (p_Result_26_fu_439_p3[17] == 1'b1) begin
        val_assign_fu_447_p3 = 32'd17;
    end else if (p_Result_26_fu_439_p3[18] == 1'b1) begin
        val_assign_fu_447_p3 = 32'd18;
    end else if (p_Result_26_fu_439_p3[19] == 1'b1) begin
        val_assign_fu_447_p3 = 32'd19;
    end else if (p_Result_26_fu_439_p3[20] == 1'b1) begin
        val_assign_fu_447_p3 = 32'd20;
    end else if (p_Result_26_fu_439_p3[21] == 1'b1) begin
        val_assign_fu_447_p3 = 32'd21;
    end else if (p_Result_26_fu_439_p3[22] == 1'b1) begin
        val_assign_fu_447_p3 = 32'd22;
    end else if (p_Result_26_fu_439_p3[23] == 1'b1) begin
        val_assign_fu_447_p3 = 32'd23;
    end else if (p_Result_26_fu_439_p3[24] == 1'b1) begin
        val_assign_fu_447_p3 = 32'd24;
    end else if (p_Result_26_fu_439_p3[25] == 1'b1) begin
        val_assign_fu_447_p3 = 32'd25;
    end else if (p_Result_26_fu_439_p3[26] == 1'b1) begin
        val_assign_fu_447_p3 = 32'd26;
    end else if (p_Result_26_fu_439_p3[27] == 1'b1) begin
        val_assign_fu_447_p3 = 32'd27;
    end else if (p_Result_26_fu_439_p3[28] == 1'b1) begin
        val_assign_fu_447_p3 = 32'd28;
    end else if (p_Result_26_fu_439_p3[29] == 1'b1) begin
        val_assign_fu_447_p3 = 32'd29;
    end else if (p_Result_26_fu_439_p3[30] == 1'b1) begin
        val_assign_fu_447_p3 = 32'd30;
    end else if (p_Result_26_fu_439_p3[31] == 1'b1) begin
        val_assign_fu_447_p3 = 32'd31;
    end else begin
        val_assign_fu_447_p3 = 32'd32;
    end
end

endmodule //sin_or_cos_float_s
