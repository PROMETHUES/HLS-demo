// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module HoughLinesProbabilis (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        edge_val_address0,
        edge_val_ce0,
        edge_val_q0,
        edge_rows_dout,
        edge_rows_empty_n,
        edge_rows_read,
        edge_cols_dout,
        edge_cols_empty_n,
        edge_cols_read,
        lines_val_address0,
        lines_val_ce0,
        lines_val_we0,
        lines_val_d0,
        lines_val_address1,
        lines_val_ce1,
        lines_val_we1,
        lines_val_d1,
        lines_rows_dout,
        lines_rows_empty_n,
        lines_rows_read,
        lines_cols_dout,
        lines_cols_empty_n,
        lines_cols_read,
        threshold_dout,
        threshold_empty_n,
        threshold_read,
        lineGap_dout,
        lineGap_empty_n,
        lineGap_read,
        lines_rows_out_din,
        lines_rows_out_full_n,
        lines_rows_out_write,
        lines_cols_out_din,
        lines_cols_out_full_n,
        lines_cols_out_write
);

parameter    ap_ST_fsm_state1 = 159'd1;
parameter    ap_ST_fsm_state2 = 159'd2;
parameter    ap_ST_fsm_state3 = 159'd4;
parameter    ap_ST_fsm_state4 = 159'd8;
parameter    ap_ST_fsm_state5 = 159'd16;
parameter    ap_ST_fsm_state6 = 159'd32;
parameter    ap_ST_fsm_state7 = 159'd64;
parameter    ap_ST_fsm_pp2_stage0 = 159'd128;
parameter    ap_ST_fsm_state22 = 159'd256;
parameter    ap_ST_fsm_state23 = 159'd512;
parameter    ap_ST_fsm_pp3_stage0 = 159'd1024;
parameter    ap_ST_fsm_state26 = 159'd2048;
parameter    ap_ST_fsm_state27 = 159'd4096;
parameter    ap_ST_fsm_state28 = 159'd8192;
parameter    ap_ST_fsm_state29 = 159'd16384;
parameter    ap_ST_fsm_state30 = 159'd32768;
parameter    ap_ST_fsm_state31 = 159'd65536;
parameter    ap_ST_fsm_state32 = 159'd131072;
parameter    ap_ST_fsm_state33 = 159'd262144;
parameter    ap_ST_fsm_state34 = 159'd524288;
parameter    ap_ST_fsm_state35 = 159'd1048576;
parameter    ap_ST_fsm_state36 = 159'd2097152;
parameter    ap_ST_fsm_state37 = 159'd4194304;
parameter    ap_ST_fsm_state38 = 159'd8388608;
parameter    ap_ST_fsm_state39 = 159'd16777216;
parameter    ap_ST_fsm_state40 = 159'd33554432;
parameter    ap_ST_fsm_state41 = 159'd67108864;
parameter    ap_ST_fsm_state42 = 159'd134217728;
parameter    ap_ST_fsm_state43 = 159'd268435456;
parameter    ap_ST_fsm_state44 = 159'd536870912;
parameter    ap_ST_fsm_state45 = 159'd1073741824;
parameter    ap_ST_fsm_state46 = 159'd2147483648;
parameter    ap_ST_fsm_state47 = 159'd4294967296;
parameter    ap_ST_fsm_state48 = 159'd8589934592;
parameter    ap_ST_fsm_state49 = 159'd17179869184;
parameter    ap_ST_fsm_state50 = 159'd34359738368;
parameter    ap_ST_fsm_state51 = 159'd68719476736;
parameter    ap_ST_fsm_state52 = 159'd137438953472;
parameter    ap_ST_fsm_state53 = 159'd274877906944;
parameter    ap_ST_fsm_state54 = 159'd549755813888;
parameter    ap_ST_fsm_state55 = 159'd1099511627776;
parameter    ap_ST_fsm_state56 = 159'd2199023255552;
parameter    ap_ST_fsm_state57 = 159'd4398046511104;
parameter    ap_ST_fsm_state58 = 159'd8796093022208;
parameter    ap_ST_fsm_state59 = 159'd17592186044416;
parameter    ap_ST_fsm_state60 = 159'd35184372088832;
parameter    ap_ST_fsm_state61 = 159'd70368744177664;
parameter    ap_ST_fsm_state62 = 159'd140737488355328;
parameter    ap_ST_fsm_state63 = 159'd281474976710656;
parameter    ap_ST_fsm_state64 = 159'd562949953421312;
parameter    ap_ST_fsm_state65 = 159'd1125899906842624;
parameter    ap_ST_fsm_state66 = 159'd2251799813685248;
parameter    ap_ST_fsm_state67 = 159'd4503599627370496;
parameter    ap_ST_fsm_state68 = 159'd9007199254740992;
parameter    ap_ST_fsm_state69 = 159'd18014398509481984;
parameter    ap_ST_fsm_state70 = 159'd36028797018963968;
parameter    ap_ST_fsm_state71 = 159'd72057594037927936;
parameter    ap_ST_fsm_state72 = 159'd144115188075855872;
parameter    ap_ST_fsm_state73 = 159'd288230376151711744;
parameter    ap_ST_fsm_state74 = 159'd576460752303423488;
parameter    ap_ST_fsm_state75 = 159'd1152921504606846976;
parameter    ap_ST_fsm_state76 = 159'd2305843009213693952;
parameter    ap_ST_fsm_state77 = 159'd4611686018427387904;
parameter    ap_ST_fsm_state78 = 159'd9223372036854775808;
parameter    ap_ST_fsm_state79 = 159'd18446744073709551616;
parameter    ap_ST_fsm_state80 = 159'd36893488147419103232;
parameter    ap_ST_fsm_state81 = 159'd73786976294838206464;
parameter    ap_ST_fsm_state82 = 159'd147573952589676412928;
parameter    ap_ST_fsm_state83 = 159'd295147905179352825856;
parameter    ap_ST_fsm_state84 = 159'd590295810358705651712;
parameter    ap_ST_fsm_state85 = 159'd1180591620717411303424;
parameter    ap_ST_fsm_pp4_stage0 = 159'd2361183241434822606848;
parameter    ap_ST_fsm_state96 = 159'd4722366482869645213696;
parameter    ap_ST_fsm_state97 = 159'd9444732965739290427392;
parameter    ap_ST_fsm_state98 = 159'd18889465931478580854784;
parameter    ap_ST_fsm_state99 = 159'd37778931862957161709568;
parameter    ap_ST_fsm_state100 = 159'd75557863725914323419136;
parameter    ap_ST_fsm_state101 = 159'd151115727451828646838272;
parameter    ap_ST_fsm_state102 = 159'd302231454903657293676544;
parameter    ap_ST_fsm_state103 = 159'd604462909807314587353088;
parameter    ap_ST_fsm_state104 = 159'd1208925819614629174706176;
parameter    ap_ST_fsm_state105 = 159'd2417851639229258349412352;
parameter    ap_ST_fsm_state106 = 159'd4835703278458516698824704;
parameter    ap_ST_fsm_state107 = 159'd9671406556917033397649408;
parameter    ap_ST_fsm_state108 = 159'd19342813113834066795298816;
parameter    ap_ST_fsm_state109 = 159'd38685626227668133590597632;
parameter    ap_ST_fsm_state110 = 159'd77371252455336267181195264;
parameter    ap_ST_fsm_state111 = 159'd154742504910672534362390528;
parameter    ap_ST_fsm_state112 = 159'd309485009821345068724781056;
parameter    ap_ST_fsm_state113 = 159'd618970019642690137449562112;
parameter    ap_ST_fsm_state114 = 159'd1237940039285380274899124224;
parameter    ap_ST_fsm_state115 = 159'd2475880078570760549798248448;
parameter    ap_ST_fsm_state116 = 159'd4951760157141521099596496896;
parameter    ap_ST_fsm_state117 = 159'd9903520314283042199192993792;
parameter    ap_ST_fsm_state118 = 159'd19807040628566084398385987584;
parameter    ap_ST_fsm_state119 = 159'd39614081257132168796771975168;
parameter    ap_ST_fsm_state120 = 159'd79228162514264337593543950336;
parameter    ap_ST_fsm_state121 = 159'd158456325028528675187087900672;
parameter    ap_ST_fsm_state122 = 159'd316912650057057350374175801344;
parameter    ap_ST_fsm_state123 = 159'd633825300114114700748351602688;
parameter    ap_ST_fsm_state124 = 159'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state125 = 159'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state126 = 159'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state127 = 159'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state128 = 159'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state129 = 159'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state130 = 159'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state131 = 159'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state132 = 159'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state133 = 159'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state134 = 159'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state135 = 159'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state136 = 159'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state137 = 159'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state138 = 159'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state139 = 159'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state140 = 159'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state141 = 159'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state142 = 159'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state143 = 159'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state144 = 159'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state145 = 159'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_state146 = 159'd5316911983139663491615228241121378304;
parameter    ap_ST_fsm_state147 = 159'd10633823966279326983230456482242756608;
parameter    ap_ST_fsm_state148 = 159'd21267647932558653966460912964485513216;
parameter    ap_ST_fsm_state149 = 159'd42535295865117307932921825928971026432;
parameter    ap_ST_fsm_state150 = 159'd85070591730234615865843651857942052864;
parameter    ap_ST_fsm_state151 = 159'd170141183460469231731687303715884105728;
parameter    ap_ST_fsm_state152 = 159'd340282366920938463463374607431768211456;
parameter    ap_ST_fsm_state153 = 159'd680564733841876926926749214863536422912;
parameter    ap_ST_fsm_state154 = 159'd1361129467683753853853498429727072845824;
parameter    ap_ST_fsm_state155 = 159'd2722258935367507707706996859454145691648;
parameter    ap_ST_fsm_state156 = 159'd5444517870735015415413993718908291383296;
parameter    ap_ST_fsm_state157 = 159'd10889035741470030830827987437816582766592;
parameter    ap_ST_fsm_state158 = 159'd21778071482940061661655974875633165533184;
parameter    ap_ST_fsm_state159 = 159'd43556142965880123323311949751266331066368;
parameter    ap_ST_fsm_state160 = 159'd87112285931760246646623899502532662132736;
parameter    ap_ST_fsm_state161 = 159'd174224571863520493293247799005065324265472;
parameter    ap_ST_fsm_state162 = 159'd348449143727040986586495598010130648530944;
parameter    ap_ST_fsm_state163 = 159'd696898287454081973172991196020261297061888;
parameter    ap_ST_fsm_state164 = 159'd1393796574908163946345982392040522594123776;
parameter    ap_ST_fsm_state165 = 159'd2787593149816327892691964784081045188247552;
parameter    ap_ST_fsm_state166 = 159'd5575186299632655785383929568162090376495104;
parameter    ap_ST_fsm_state167 = 159'd11150372599265311570767859136324180752990208;
parameter    ap_ST_fsm_state168 = 159'd22300745198530623141535718272648361505980416;
parameter    ap_ST_fsm_state169 = 159'd44601490397061246283071436545296723011960832;
parameter    ap_ST_fsm_state170 = 159'd89202980794122492566142873090593446023921664;
parameter    ap_ST_fsm_state171 = 159'd178405961588244985132285746181186892047843328;
parameter    ap_ST_fsm_state172 = 159'd356811923176489970264571492362373784095686656;
parameter    ap_ST_fsm_state173 = 159'd713623846352979940529142984724747568191373312;
parameter    ap_ST_fsm_state174 = 159'd1427247692705959881058285969449495136382746624;
parameter    ap_ST_fsm_state175 = 159'd2854495385411919762116571938898990272765493248;
parameter    ap_ST_fsm_state176 = 159'd5708990770823839524233143877797980545530986496;
parameter    ap_ST_fsm_state177 = 159'd11417981541647679048466287755595961091061972992;
parameter    ap_ST_fsm_pp6_stage0 = 159'd22835963083295358096932575511191922182123945984;
parameter    ap_ST_fsm_state188 = 159'd45671926166590716193865151022383844364247891968;
parameter    ap_ST_fsm_state189 = 159'd91343852333181432387730302044767688728495783936;
parameter    ap_ST_fsm_state190 = 159'd182687704666362864775460604089535377456991567872;
parameter    ap_ST_fsm_state191 = 159'd365375409332725729550921208179070754913983135744;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [16:0] edge_val_address0;
output   edge_val_ce0;
input  [7:0] edge_val_q0;
input  [31:0] edge_rows_dout;
input   edge_rows_empty_n;
output   edge_rows_read;
input  [31:0] edge_cols_dout;
input   edge_cols_empty_n;
output   edge_cols_read;
output  [8:0] lines_val_address0;
output   lines_val_ce0;
output   lines_val_we0;
output  [15:0] lines_val_d0;
output  [8:0] lines_val_address1;
output   lines_val_ce1;
output   lines_val_we1;
output  [15:0] lines_val_d1;
input  [3:0] lines_rows_dout;
input   lines_rows_empty_n;
output   lines_rows_read;
input  [7:0] lines_cols_dout;
input   lines_cols_empty_n;
output   lines_cols_read;
input  [31:0] threshold_dout;
input   threshold_empty_n;
output   threshold_read;
input  [31:0] lineGap_dout;
input   lineGap_empty_n;
output   lineGap_read;
output  [3:0] lines_rows_out_din;
input   lines_rows_out_full_n;
output   lines_rows_out_write;
output  [7:0] lines_cols_out_din;
input   lines_cols_out_full_n;
output   lines_cols_out_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg edge_val_ce0;
reg edge_rows_read;
reg edge_cols_read;
reg[8:0] lines_val_address0;
reg lines_val_ce0;
reg lines_val_we0;
reg[15:0] lines_val_d0;
reg[8:0] lines_val_address1;
reg lines_val_ce1;
reg lines_val_we1;
reg[15:0] lines_val_d1;
reg lines_rows_read;
reg lines_cols_read;
reg threshold_read;
reg lineGap_read;
reg lines_rows_out_write;
reg lines_cols_out_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [158:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [4:0] mask_table1_address0;
reg    mask_table1_ce0;
wire   [22:0] mask_table1_q0;
reg   [4:0] mask_table3_address0;
reg    mask_table3_ce0;
wire   [22:0] mask_table3_q0;
reg   [4:0] one_half_table4_address0;
reg    one_half_table4_ce0;
wire   [23:0] one_half_table4_q0;
reg    edge_rows_blk_n;
reg    edge_cols_blk_n;
reg    lines_rows_blk_n;
reg    lines_cols_blk_n;
reg    threshold_blk_n;
reg    lineGap_blk_n;
reg    lines_rows_out_blk_n;
reg    lines_cols_out_blk_n;
reg   [7:0] n4_i_reg_870;
reg   [7:0] n4_i_reg_870_pp2_iter1_reg;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state8_pp2_stage0_iter0;
wire    ap_block_state9_pp2_stage0_iter1;
wire    ap_block_state10_pp2_stage0_iter2;
wire    ap_block_state11_pp2_stage0_iter3;
wire    ap_block_state12_pp2_stage0_iter4;
wire    ap_block_state13_pp2_stage0_iter5;
wire    ap_block_state14_pp2_stage0_iter6;
wire    ap_block_state15_pp2_stage0_iter7;
wire    ap_block_state16_pp2_stage0_iter8;
wire    ap_block_state17_pp2_stage0_iter9;
wire    ap_block_state18_pp2_stage0_iter10;
wire    ap_block_state19_pp2_stage0_iter11;
wire    ap_block_state20_pp2_stage0_iter12;
wire    ap_block_state21_pp2_stage0_iter13;
wire    ap_block_pp2_stage0_11001;
reg   [7:0] n4_i_reg_870_pp2_iter2_reg;
reg   [7:0] n4_i_reg_870_pp2_iter3_reg;
reg   [7:0] n4_i_reg_870_pp2_iter4_reg;
reg   [7:0] n4_i_reg_870_pp2_iter5_reg;
reg   [7:0] n4_i_reg_870_pp2_iter6_reg;
reg   [7:0] n4_i_reg_870_pp2_iter7_reg;
reg   [7:0] n4_i_reg_870_pp2_iter8_reg;
reg   [7:0] n4_i_reg_870_pp2_iter9_reg;
reg   [7:0] n4_i_reg_870_pp2_iter10_reg;
reg   [7:0] n4_i_reg_870_pp2_iter11_reg;
reg   [7:0] n4_i_reg_870_pp2_iter12_reg;
reg   [31:0] p_x_assign_reg_895;
reg   [31:0] max_val1_i_reg_930;
reg  signed [31:0] max_n_i_reg_940;
reg   [7:0] max_n_reg_952;
reg   [7:0] max_n_reg_952_pp4_iter1_reg;
wire    ap_CS_fsm_pp4_stage0;
wire    ap_block_state86_pp4_stage0_iter0;
wire    ap_block_state87_pp4_stage0_iter1;
wire    ap_block_state88_pp4_stage0_iter2;
wire    ap_block_state89_pp4_stage0_iter3;
wire    ap_block_state90_pp4_stage0_iter4;
wire    ap_block_state91_pp4_stage0_iter5;
wire    ap_block_state92_pp4_stage0_iter6;
wire    ap_block_state93_pp4_stage0_iter7;
wire    ap_block_state94_pp4_stage0_iter8;
wire    ap_block_state95_pp4_stage0_iter9;
wire    ap_block_pp4_stage0_11001;
reg   [7:0] max_n_reg_952_pp4_iter2_reg;
reg   [7:0] max_n_reg_952_pp4_iter3_reg;
reg   [7:0] max_n_reg_952_pp4_iter4_reg;
reg   [7:0] max_n_reg_952_pp4_iter5_reg;
reg   [7:0] max_n_reg_952_pp4_iter6_reg;
reg   [7:0] max_n_reg_952_pp4_iter7_reg;
reg   [7:0] max_n_reg_952_pp4_iter8_reg;
reg   [17:0] phi_mul2_reg_964;
reg   [7:0] n5_i_reg_1163;
reg   [17:0] phi_mul3_reg_1174;
wire   [31:0] grp_fu_1275_p1;
reg   [31:0] reg_1295;
reg    ap_enable_reg_pp2_iter1;
reg   [0:0] exitcond5_i_reg_5302;
wire    ap_CS_fsm_state27;
wire   [31:0] grp_fu_1263_p2;
reg   [31:0] reg_1301;
reg    ap_enable_reg_pp2_iter3;
reg   [0:0] exitcond5_i_reg_5302_pp2_iter2_reg;
wire    ap_CS_fsm_state38;
reg    ap_block_state1;
reg   [3:0] lines_rows_read_reg_5223;
reg   [7:0] lines_cols_read_reg_5228;
reg   [31:0] threshold_read_reg_5233;
reg   [31:0] lineGap_read_reg_5241;
reg   [31:0] rows_reg_5246;
reg   [31:0] cols_reg_5252;
wire   [9:0] next_mul_fu_1307_p2;
reg   [9:0] next_mul_reg_5258;
wire    ap_CS_fsm_state2;
wire   [0:0] tmp_i_fu_1317_p2;
wire   [2:0] i_fu_1322_p2;
reg   [2:0] i_reg_5267;
wire   [6:0] j_fu_1337_p2;
wire    ap_CS_fsm_state3;
wire   [17:0] next_mul1_fu_1358_p2;
reg   [17:0] next_mul1_reg_5280;
wire    ap_CS_fsm_state5;
wire   [0:0] exitcond3_i_fu_1364_p2;
wire   [7:0] n_fu_1370_p2;
reg   [7:0] n_reg_5289;
wire   [10:0] r_fu_1382_p2;
wire    ap_CS_fsm_state6;
wire   [0:0] exitcond5_i_fu_1403_p2;
reg   [0:0] exitcond5_i_reg_5302_pp2_iter1_reg;
reg   [0:0] exitcond5_i_reg_5302_pp2_iter3_reg;
reg   [0:0] exitcond5_i_reg_5302_pp2_iter4_reg;
reg   [0:0] exitcond5_i_reg_5302_pp2_iter5_reg;
reg   [0:0] exitcond5_i_reg_5302_pp2_iter6_reg;
reg   [0:0] exitcond5_i_reg_5302_pp2_iter7_reg;
reg   [0:0] exitcond5_i_reg_5302_pp2_iter8_reg;
reg   [0:0] exitcond5_i_reg_5302_pp2_iter9_reg;
reg   [0:0] exitcond5_i_reg_5302_pp2_iter10_reg;
reg   [0:0] exitcond5_i_reg_5302_pp2_iter11_reg;
reg   [0:0] exitcond5_i_reg_5302_pp2_iter12_reg;
wire   [7:0] n_2_fu_1409_p2;
reg   [7:0] n_2_reg_5306;
reg    ap_enable_reg_pp2_iter0;
wire   [31:0] n4_cast84_i_fu_1415_p1;
wire   [31:0] grp_sin_or_cos_float_s_fu_1228_ap_return;
reg   [31:0] v_assign_reg_5316;
wire   [31:0] grp_sin_or_cos_float_s_fu_1243_ap_return;
reg   [31:0] v_assign_1_reg_5321;
reg   [0:0] isneg_reg_5326;
wire   [53:0] p_Result_123_fu_1462_p1;
reg   [53:0] p_Result_123_reg_5334;
wire   [53:0] man_V_1_fu_1466_p2;
reg   [53:0] man_V_1_reg_5339;
wire   [0:0] tmp_98_i_fu_1472_p2;
reg   [0:0] tmp_98_i_reg_5344;
wire   [11:0] F2_fu_1478_p2;
reg   [11:0] F2_reg_5350;
wire   [0:0] tmp_107_i_fu_1484_p2;
reg   [0:0] tmp_107_i_reg_5356;
wire  signed [11:0] sh_amt_fu_1502_p3;
reg  signed [11:0] sh_amt_reg_5362;
wire   [0:0] icmp_fu_1520_p2;
reg   [0:0] icmp_reg_5369;
wire   [0:0] tmp_130_i_fu_1526_p2;
reg   [0:0] tmp_130_i_reg_5374;
wire   [0:0] icmp1_fu_1542_p2;
reg   [0:0] icmp1_reg_5379;
wire   [5:0] tmp_128_fu_1548_p1;
reg   [5:0] tmp_128_reg_5384;
wire   [0:0] tmp_147_i_fu_1558_p2;
reg   [0:0] tmp_147_i_reg_5389;
reg   [0:0] isneg_1_reg_5394;
wire   [53:0] p_Result_124_fu_1606_p1;
reg   [53:0] p_Result_124_reg_5402;
wire   [53:0] man_V_3_fu_1610_p2;
reg   [53:0] man_V_3_reg_5407;
wire   [0:0] tmp_157_i_fu_1616_p2;
reg   [0:0] tmp_157_i_reg_5412;
wire   [11:0] F2_1_fu_1622_p2;
reg   [11:0] F2_1_reg_5418;
wire   [0:0] tmp_164_i_fu_1628_p2;
reg   [0:0] tmp_164_i_reg_5424;
wire  signed [11:0] sh_amt_1_fu_1646_p3;
reg  signed [11:0] sh_amt_1_reg_5430;
wire   [0:0] icmp2_fu_1664_p2;
reg   [0:0] icmp2_reg_5437;
wire   [0:0] tmp_193_i_fu_1670_p2;
reg   [0:0] tmp_193_i_reg_5442;
wire   [0:0] icmp3_fu_1686_p2;
reg   [0:0] icmp3_reg_5447;
wire   [5:0] tmp_141_fu_1692_p1;
reg   [5:0] tmp_141_reg_5452;
wire   [0:0] tmp_214_i_fu_1702_p2;
reg   [0:0] tmp_214_i_reg_5457;
wire   [0:0] exitcond1_i_fu_2167_p2;
wire    ap_CS_fsm_state23;
wire   [31:0] i_1_fu_2172_p2;
reg   [31:0] i_1_reg_5473;
wire   [17:0] tmp_34_fu_2202_p2;
reg   [17:0] tmp_34_reg_5478;
wire   [0:0] exitcond2_i_fu_2213_p2;
reg   [0:0] exitcond2_i_reg_5495;
wire    ap_CS_fsm_pp3_stage0;
wire    ap_block_state24_pp3_stage0_iter0;
wire    ap_block_state25_pp3_stage0_iter1;
wire    ap_block_pp3_stage0_11001;
wire   [31:0] j_2_fu_2218_p2;
reg   [31:0] j_2_reg_5499;
reg    ap_enable_reg_pp3_iter0;
reg   [16:0] mask_val_addr_reg_5509;
wire   [31:0] grp_log_generic_float_s_fu_1213_ap_return;
reg   [31:0] tmp_i_i_i_reg_5517;
wire    ap_CS_fsm_state36;
reg   [0:0] p_Result_61_reg_5522;
wire    ap_CS_fsm_state39;
reg   [7:0] loc_V_reg_5531;
wire   [22:0] loc_V_4_fu_2284_p1;
reg   [22:0] loc_V_4_reg_5539;
wire   [30:0] tmp_148_fu_2303_p1;
reg   [30:0] tmp_148_reg_5550;
wire   [31:0] x_assign_7_fu_2471_p3;
reg   [31:0] x_assign_7_reg_5555;
wire    ap_CS_fsm_state40;
wire   [31:0] M_fu_2622_p2;
reg   [31:0] M_reg_5560;
wire    ap_CS_fsm_state41;
wire   [15:0] grp_sqrt_fixed_32_32_s_fu_1258_ap_return;
reg   [15:0] p_Val2_i_i_i_reg_5567;
wire    ap_CS_fsm_state46;
wire   [0:0] tmp_155_fu_2628_p1;
reg   [0:0] tmp_155_reg_5572;
wire  signed [31:0] p_i_cast_fu_2648_p1;
reg  signed [31:0] p_i_cast_reg_5577;
wire    ap_CS_fsm_state47;
wire   [31:0] max_val_fu_2652_p2;
reg   [31:0] max_val_reg_5582;
reg   [31:0] total_1_load_reg_5607;
wire    ap_CS_fsm_state48;
wire   [30:0] cnt_fu_2666_p2;
reg   [30:0] cnt_reg_5616;
wire   [0:0] tmp_112_i_fu_2661_p2;
wire  signed [31:0] grp_fu_2677_p2;
reg  signed [31:0] idx_reg_5626;
wire    ap_CS_fsm_state83;
wire   [0:0] tmp_115_i_fu_2682_p2;
reg   [0:0] tmp_115_i_reg_5631;
wire   [31:0] pt_buf_val_x_q0;
reg  signed [31:0] j_3_reg_5645;
wire    ap_CS_fsm_state84;
wire   [31:0] pt_buf_val_y_q0;
reg  signed [31:0] i_3_reg_5652;
wire   [0:0] mask_val_q0;
wire    ap_CS_fsm_state85;
wire  signed [47:0] OP1_V_fu_2739_p1;
reg  signed [47:0] OP1_V_reg_5668;
wire  signed [47:0] OP1_V_4_fu_2742_p1;
reg  signed [47:0] OP1_V_4_reg_5673;
wire   [18:0] phi_mul240_cast_fu_2745_p1;
reg   [18:0] phi_mul240_cast_reg_5678;
reg   [18:0] phi_mul240_cast_reg_5678_pp4_iter1_reg;
reg   [18:0] phi_mul240_cast_reg_5678_pp4_iter2_reg;
reg   [18:0] phi_mul240_cast_reg_5678_pp4_iter3_reg;
reg   [18:0] phi_mul240_cast_reg_5678_pp4_iter4_reg;
reg   [18:0] phi_mul240_cast_reg_5678_pp4_iter5_reg;
reg   [18:0] phi_mul240_cast_reg_5678_pp4_iter6_reg;
reg   [18:0] phi_mul240_cast_reg_5678_pp4_iter7_reg;
wire   [0:0] exitcond6_i_fu_2749_p2;
reg   [0:0] exitcond6_i_reg_5683;
reg   [0:0] exitcond6_i_reg_5683_pp4_iter1_reg;
reg   [0:0] exitcond6_i_reg_5683_pp4_iter2_reg;
reg   [0:0] exitcond6_i_reg_5683_pp4_iter3_reg;
reg   [0:0] exitcond6_i_reg_5683_pp4_iter4_reg;
reg   [0:0] exitcond6_i_reg_5683_pp4_iter5_reg;
reg   [0:0] exitcond6_i_reg_5683_pp4_iter6_reg;
reg   [0:0] exitcond6_i_reg_5683_pp4_iter7_reg;
reg   [0:0] exitcond6_i_reg_5683_pp4_iter8_reg;
wire   [7:0] n_1_fu_2755_p2;
reg   [7:0] n_1_reg_5687;
reg    ap_enable_reg_pp4_iter0;
wire   [17:0] next_mul2_fu_2770_p2;
wire  signed [47:0] p_Val2_100_fu_2791_p2;
reg  signed [47:0] p_Val2_100_reg_5707;
wire  signed [47:0] p_Val2_23_fu_2800_p2;
reg  signed [47:0] p_Val2_23_reg_5713;
wire   [0:0] tmp_138_i_fu_2821_p2;
reg   [0:0] tmp_138_i_reg_5719;
reg   [0:0] tmp_138_i_reg_5719_pp4_iter3_reg;
reg   [0:0] tmp_138_i_reg_5719_pp4_iter4_reg;
reg   [0:0] tmp_138_i_reg_5719_pp4_iter5_reg;
wire   [0:0] is_neg_fu_2827_p3;
reg   [0:0] is_neg_reg_5724;
reg   [0:0] is_neg_reg_5724_pp4_iter3_reg;
reg   [0:0] is_neg_reg_5724_pp4_iter4_reg;
reg   [0:0] is_neg_reg_5724_pp4_iter5_reg;
wire   [47:0] p_Val2_103_fu_2841_p3;
reg   [47:0] p_Val2_103_reg_5729;
wire   [48:0] p_Val2_42_cast_i_fu_2849_p1;
reg   [48:0] p_Val2_42_cast_i_reg_5734;
wire   [31:0] num_zeros_fu_2879_p1;
reg   [31:0] num_zeros_reg_5740;
wire   [31:0] msb_idx_fu_2883_p2;
reg   [31:0] msb_idx_reg_5745;
reg   [31:0] msb_idx_reg_5745_pp4_iter4_reg;
reg   [31:0] msb_idx_reg_5745_pp4_iter5_reg;
wire   [31:0] tmp32_V_6_fu_3003_p3;
reg   [31:0] tmp32_V_6_reg_5750;
wire   [31:0] tmp32_V_24_fu_3011_p1;
reg   [31:0] tmp32_V_24_reg_5755;
reg   [7:0] p_Result_24_i_reg_5760;
wire   [31:0] x_assign_8_fu_3069_p3;
reg   [31:0] x_assign_8_reg_5765;
wire   [31:0] t_V_10_fu_3076_p1;
reg   [31:0] t_V_10_reg_5770;
wire   [0:0] tmp_i_i_390_fu_3090_p2;
reg   [0:0] tmp_i_i_390_reg_5776;
wire   [0:0] tmp_273_i_i_fu_3096_p2;
reg   [0:0] tmp_273_i_i_reg_5782;
reg   [0:0] p_Result_135_reg_5797;
wire   [22:0] loc_V_12_fu_3226_p1;
reg   [22:0] loc_V_12_reg_5802;
wire   [0:0] isNeg_1_fu_3240_p3;
reg   [0:0] isNeg_1_reg_5807;
wire  signed [8:0] sh_assign_3_fu_3258_p3;
reg  signed [8:0] sh_assign_3_reg_5812;
reg   [17:0] accum_addr_1_reg_5818;
wire   [31:0] val_0_max_val_i_fu_3384_p3;
reg    ap_enable_reg_pp4_iter9;
wire   [31:0] n7_0_max_n_i_fu_3392_p3;
wire    ap_CS_fsm_state96;
wire   [0:0] tmp_134_i_fu_3400_p2;
wire   [15:0] trigtab_V_q0;
reg   [15:0] p_Val2_s_reg_5847;
wire    ap_CS_fsm_state97;
wire   [15:0] trigtab_V_q1;
reg  signed [15:0] p_Val2_121_reg_5854;
reg   [0:0] is_neg_2_reg_5863;
wire  signed [15:0] p_Val2_118_fu_3433_p2;
reg  signed [15:0] p_Val2_118_reg_5869;
wire    ap_CS_fsm_state98;
wire   [0:0] tmp_141_i_fu_3438_p2;
reg   [0:0] tmp_141_i_reg_5875;
wire   [0:0] is_neg_1_fu_3443_p3;
reg   [0:0] is_neg_1_reg_5880;
wire   [15:0] tmp_V_fu_3451_p3;
reg   [15:0] tmp_V_reg_5885;
wire   [31:0] msb_idx_2_fu_3484_p2;
reg   [31:0] msb_idx_2_reg_5890;
wire   [30:0] msb_idx_3_fu_3502_p3;
reg   [30:0] msb_idx_3_reg_5895;
wire   [0:0] icmp5_fu_3520_p2;
reg   [0:0] icmp5_reg_5900;
wire   [15:0] p_Result_97_fu_3588_p3;
reg   [15:0] p_Result_97_reg_5905;
wire   [15:0] p_Val2_123_fu_3601_p3;
reg   [15:0] p_Val2_123_reg_5910;
wire   [31:0] msb_idx_4_fu_3633_p2;
reg   [31:0] msb_idx_4_reg_5915;
wire   [30:0] msb_idx_5_fu_3651_p3;
reg   [30:0] msb_idx_5_reg_5920;
wire   [0:0] icmp6_fu_3669_p2;
reg   [0:0] icmp6_reg_5925;
wire   [15:0] p_Result_102_fu_3737_p3;
reg   [15:0] p_Result_102_reg_5930;
wire   [31:0] tmp32_V_9_fu_3766_p3;
reg   [31:0] tmp32_V_9_reg_5935;
wire    ap_CS_fsm_state99;
wire   [0:0] tmp_178_i_fu_3773_p2;
reg   [0:0] tmp_178_i_reg_5940;
wire   [31:0] tmp32_V_15_fu_3799_p3;
reg   [31:0] tmp32_V_15_reg_5945;
wire   [31:0] tmp32_V_25_fu_3806_p1;
reg   [31:0] tmp32_V_25_reg_5950;
wire    ap_CS_fsm_state101;
reg   [7:0] p_Result_26_i_reg_5955;
wire   [31:0] tmp32_V_26_fu_3820_p1;
reg   [31:0] tmp32_V_26_reg_5960;
reg   [7:0] p_Result_32_i_reg_5965;
wire   [0:0] tmp_25_fu_4032_p2;
reg   [0:0] tmp_25_reg_5970;
wire    ap_CS_fsm_state102;
wire   [0:0] exitcond7_i_fu_4112_p2;
wire    ap_CS_fsm_state168;
wire   [1:0] k_fu_4118_p2;
reg   [1:0] k_reg_5998;
reg   [0:0] line_end_y_addr_reg_6003;
reg   [0:0] line_end_x_addr_reg_6008;
wire   [31:0] i1_2_fu_4158_p3;
reg   [31:0] i1_2_reg_6013;
wire    ap_CS_fsm_state169;
wire   [31:0] j1_2_fu_4166_p3;
reg   [31:0] j1_2_reg_6018;
wire   [0:0] or_cond1_i_fu_4210_p2;
reg   [0:0] or_cond1_i_reg_6023;
wire   [31:0] x_1_fu_4273_p2;
wire    ap_CS_fsm_state170;
wire   [0:0] tmp_241_i_fu_4268_p2;
wire   [31:0] y_1_fu_4279_p2;
wire   [31:0] dx0_1_fu_4285_p2;
wire    ap_CS_fsm_state171;
wire   [31:0] dy0_1_fu_4291_p2;
wire   [31:0] line_end_x_q0;
reg   [31:0] line_end_x_load_1_reg_6058;
wire    ap_CS_fsm_state172;
wire   [31:0] line_end_x_q1;
reg   [31:0] line_end_x_load_2_reg_6063;
wire   [0:0] tmp_220_i_fu_4323_p2;
reg   [0:0] tmp_220_i_reg_6068;
wire   [0:0] tmp_224_i_fu_4354_p2;
reg   [0:0] tmp_224_i_reg_6072;
wire    ap_CS_fsm_state173;
wire   [1:0] k_1_fu_4365_p2;
reg   [1:0] k_1_reg_6079;
wire    ap_CS_fsm_state174;
wire   [0:0] exitcond8_i_fu_4359_p2;
wire   [9:0] tmp_233_fu_4391_p1;
reg   [9:0] tmp_233_reg_6094;
wire   [0:0] tmp_239_i_fu_4410_p2;
reg   [0:0] tmp_239_i_reg_6100;
wire   [31:0] line_end_y_q1;
reg   [31:0] line_end_y_load_reg_6104;
wire    ap_CS_fsm_state175;
reg   [31:0] line_end_x_load_reg_6109;
wire  signed [31:0] i1_5_fu_4449_p3;
reg  signed [31:0] i1_5_reg_6114;
wire    ap_CS_fsm_state176;
wire  signed [31:0] j1_5_fu_4457_p3;
reg  signed [31:0] j1_5_reg_6120;
reg   [16:0] mask_val_addr_3_reg_6126;
reg   [0:0] mask_val_load_2_reg_6131;
wire    ap_CS_fsm_state177;
wire  signed [47:0] OP1_V_5_fu_4510_p1;
reg  signed [47:0] OP1_V_5_reg_6135;
wire  signed [47:0] OP1_V_6_fu_4513_p1;
reg  signed [47:0] OP1_V_6_reg_6140;
wire   [18:0] phi_mul242_cast_fu_4516_p1;
reg   [18:0] phi_mul242_cast_reg_6145;
wire    ap_CS_fsm_pp6_stage0;
wire    ap_block_state178_pp6_stage0_iter0;
wire    ap_block_state179_pp6_stage0_iter1;
wire    ap_block_state180_pp6_stage0_iter2;
wire    ap_block_state181_pp6_stage0_iter3;
wire    ap_block_state182_pp6_stage0_iter4;
wire    ap_block_state183_pp6_stage0_iter5;
wire    ap_block_state184_pp6_stage0_iter6;
wire    ap_block_state185_pp6_stage0_iter7;
wire    ap_block_state186_pp6_stage0_iter8;
wire    ap_block_state187_pp6_stage0_iter9;
wire    ap_block_pp6_stage0_11001;
reg   [18:0] phi_mul242_cast_reg_6145_pp6_iter1_reg;
reg   [18:0] phi_mul242_cast_reg_6145_pp6_iter2_reg;
reg   [18:0] phi_mul242_cast_reg_6145_pp6_iter3_reg;
reg   [18:0] phi_mul242_cast_reg_6145_pp6_iter4_reg;
reg   [18:0] phi_mul242_cast_reg_6145_pp6_iter5_reg;
reg   [18:0] phi_mul242_cast_reg_6145_pp6_iter6_reg;
reg   [18:0] phi_mul242_cast_reg_6145_pp6_iter7_reg;
wire   [0:0] exitcond_i_fu_4520_p2;
reg   [0:0] exitcond_i_reg_6150;
reg   [0:0] exitcond_i_reg_6150_pp6_iter1_reg;
reg   [0:0] exitcond_i_reg_6150_pp6_iter2_reg;
reg   [0:0] exitcond_i_reg_6150_pp6_iter3_reg;
reg   [0:0] exitcond_i_reg_6150_pp6_iter4_reg;
reg   [0:0] exitcond_i_reg_6150_pp6_iter5_reg;
reg   [0:0] exitcond_i_reg_6150_pp6_iter6_reg;
reg   [0:0] exitcond_i_reg_6150_pp6_iter7_reg;
reg   [0:0] exitcond_i_reg_6150_pp6_iter8_reg;
wire   [7:0] n_3_fu_4526_p2;
reg    ap_enable_reg_pp6_iter0;
wire   [17:0] next_mul3_fu_4541_p2;
wire  signed [47:0] p_Val2_125_fu_4562_p2;
reg  signed [47:0] p_Val2_125_reg_6174;
wire  signed [47:0] p_Val2_24_fu_4571_p2;
reg  signed [47:0] p_Val2_24_reg_6180;
wire   [0:0] tmp_253_i_fu_4592_p2;
reg   [0:0] tmp_253_i_reg_6186;
reg   [0:0] tmp_253_i_reg_6186_pp6_iter3_reg;
reg   [0:0] tmp_253_i_reg_6186_pp6_iter4_reg;
reg   [0:0] tmp_253_i_reg_6186_pp6_iter5_reg;
wire   [0:0] is_neg_3_fu_4598_p3;
reg   [0:0] is_neg_3_reg_6191;
reg   [0:0] is_neg_3_reg_6191_pp6_iter3_reg;
reg   [0:0] is_neg_3_reg_6191_pp6_iter4_reg;
reg   [0:0] is_neg_3_reg_6191_pp6_iter5_reg;
wire   [47:0] p_Val2_128_fu_4612_p3;
reg   [47:0] p_Val2_128_reg_6196;
wire   [48:0] p_Val2_62_cast_i_fu_4620_p1;
reg   [48:0] p_Val2_62_cast_i_reg_6201;
wire   [31:0] num_zeros_3_fu_4650_p1;
reg   [31:0] num_zeros_3_reg_6207;
wire   [31:0] msb_idx_6_fu_4654_p2;
reg   [31:0] msb_idx_6_reg_6212;
reg   [31:0] msb_idx_6_reg_6212_pp6_iter4_reg;
reg   [31:0] msb_idx_6_reg_6212_pp6_iter5_reg;
wire   [31:0] tmp32_V_21_fu_4774_p3;
reg   [31:0] tmp32_V_21_reg_6217;
wire   [31:0] tmp32_V_27_fu_4782_p1;
reg   [31:0] tmp32_V_27_reg_6222;
reg   [7:0] p_Result_40_i_reg_6227;
wire   [31:0] x_assign_s_fu_4840_p3;
reg   [31:0] x_assign_s_reg_6232;
wire   [31:0] t_V_18_fu_4847_p1;
reg   [31:0] t_V_18_reg_6237;
wire   [0:0] tmp_i_i1_fu_4861_p2;
reg   [0:0] tmp_i_i1_reg_6243;
wire   [0:0] tmp_273_i_i1_fu_4867_p2;
reg   [0:0] tmp_273_i_i1_reg_6249;
reg   [0:0] p_Result_149_reg_6264;
wire   [22:0] loc_V_16_fu_4997_p1;
reg   [22:0] loc_V_16_reg_6269;
wire   [0:0] isNeg_2_fu_5011_p3;
reg   [0:0] isNeg_2_reg_6274;
wire  signed [8:0] sh_assign_5_fu_5029_p3;
reg  signed [8:0] sh_assign_5_reg_6279;
reg   [17:0] accum_addr_2_reg_6285;
wire   [31:0] x_2_fu_5159_p2;
wire    ap_CS_fsm_state188;
wire   [0:0] or_cond2_i_fu_5153_p2;
wire   [31:0] y_2_fu_5165_p2;
wire   [31:0] dx0_2_fu_5171_p2;
wire   [31:0] dy0_2_fu_5177_p2;
wire    ap_CS_fsm_state190;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state8;
reg    ap_enable_reg_pp2_iter2;
reg    ap_enable_reg_pp2_iter4;
reg    ap_enable_reg_pp2_iter5;
reg    ap_enable_reg_pp2_iter6;
reg    ap_enable_reg_pp2_iter7;
reg    ap_enable_reg_pp2_iter8;
reg    ap_enable_reg_pp2_iter9;
reg    ap_enable_reg_pp2_iter10;
reg    ap_enable_reg_pp2_iter11;
reg    ap_enable_reg_pp2_iter12;
reg    ap_enable_reg_pp2_iter13;
wire    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state24;
reg    ap_enable_reg_pp3_iter1;
wire    ap_block_pp4_stage0_subdone;
reg    ap_condition_pp4_exit_iter0_state86;
reg    ap_enable_reg_pp4_iter1;
reg    ap_enable_reg_pp4_iter2;
reg    ap_enable_reg_pp4_iter3;
reg    ap_enable_reg_pp4_iter4;
reg    ap_enable_reg_pp4_iter5;
reg    ap_enable_reg_pp4_iter6;
reg    ap_enable_reg_pp4_iter7;
reg    ap_enable_reg_pp4_iter8;
wire    ap_block_pp6_stage0_subdone;
reg    ap_condition_pp6_exit_iter0_state178;
reg    ap_enable_reg_pp6_iter1;
reg    ap_enable_reg_pp6_iter2;
reg    ap_enable_reg_pp6_iter3;
reg    ap_enable_reg_pp6_iter4;
reg    ap_enable_reg_pp6_iter5;
reg    ap_enable_reg_pp6_iter6;
reg    ap_enable_reg_pp6_iter7;
reg    ap_enable_reg_pp6_iter8;
reg    ap_enable_reg_pp6_iter9;
reg   [17:0] accum_address0;
reg    accum_ce0;
reg    accum_we0;
reg   [31:0] accum_d0;
wire   [31:0] accum_q0;
reg   [17:0] accum_address1;
reg    accum_ce1;
reg    accum_we1;
wire   [31:0] accum_q1;
reg   [16:0] mask_val_address0;
reg    mask_val_ce0;
reg    mask_val_we0;
reg   [0:0] mask_val_d0;
reg   [8:0] trigtab_V_address0;
reg    trigtab_V_ce0;
reg    trigtab_V_we0;
wire   [15:0] trigtab_V_d0;
reg   [8:0] trigtab_V_address1;
reg    trigtab_V_ce1;
reg    trigtab_V_we1;
wire   [15:0] trigtab_V_d1;
reg   [16:0] pt_buf_val_x_address0;
reg    pt_buf_val_x_ce0;
reg    pt_buf_val_x_we0;
reg   [16:0] pt_buf_val_y_address0;
reg    pt_buf_val_y_ce0;
reg    pt_buf_val_y_we0;
reg   [0:0] line_end_x_address0;
reg    line_end_x_ce0;
reg    line_end_x_we0;
reg   [0:0] line_end_x_address1;
reg    line_end_x_ce1;
reg   [0:0] line_end_y_address0;
reg    line_end_y_ce0;
reg    line_end_y_we0;
wire   [31:0] line_end_y_q0;
reg   [0:0] line_end_y_address1;
reg    line_end_y_ce1;
wire    grp_log_generic_float_s_fu_1213_ap_start;
wire    grp_log_generic_float_s_fu_1213_ap_done;
wire    grp_log_generic_float_s_fu_1213_ap_idle;
wire    grp_log_generic_float_s_fu_1213_ap_ready;
wire    grp_sin_or_cos_float_s_fu_1228_ap_start;
wire    grp_sin_or_cos_float_s_fu_1228_ap_done;
wire    grp_sin_or_cos_float_s_fu_1228_ap_idle;
wire    grp_sin_or_cos_float_s_fu_1228_ap_ready;
wire    grp_sin_or_cos_float_s_fu_1228_do_cos;
wire    grp_sin_or_cos_float_s_fu_1243_ap_start;
wire    grp_sin_or_cos_float_s_fu_1243_ap_done;
wire    grp_sin_or_cos_float_s_fu_1243_ap_idle;
wire    grp_sin_or_cos_float_s_fu_1243_ap_ready;
wire    grp_sin_or_cos_float_s_fu_1243_do_cos;
reg   [2:0] i_0_i_i_reg_802;
wire    ap_CS_fsm_state4;
reg   [9:0] phi_mul_reg_813;
reg   [6:0] j_0_i_i_reg_825;
wire   [0:0] tmp_91_i_fu_1332_p2;
reg   [7:0] n_i_reg_836;
wire    ap_CS_fsm_state7;
reg   [17:0] phi_mul1_reg_847;
reg   [10:0] r_i_reg_859;
wire   [0:0] exitcond4_i_fu_1376_p2;
reg   [7:0] ap_phi_mux_n4_i_phi_fu_874_p4;
wire    ap_block_pp2_stage0;
reg   [31:0] p_y_assign_reg_882;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state26;
reg   [31:0] ap_phi_mux_p_x_assign_phi_fu_900_p4;
wire    ap_block_pp3_stage0;
reg   [31:0] idx_i_reg_908;
wire   [0:0] ap_phi_mux_p_1_i_phi_fu_1190_p8;
reg   [30:0] cnt_i_reg_919;
reg   [7:0] ap_phi_mux_max_n_phi_fu_956_p4;
wire    ap_block_pp4_stage0;
wire   [31:0] x0_1_fu_4105_p2;
reg   [31:0] x_reg_975;
wire    ap_CS_fsm_state135;
reg   [31:0] y_reg_985;
wire   [31:0] y0_1_fu_4084_p2;
wire   [31:0] dx0_fu_4091_p3;
reg   [31:0] ap_phi_mux_dx_i_phi_fu_998_p4;
reg   [31:0] ap_phi_mux_dy_i_phi_fu_1009_p4;
wire   [31:0] dy0_fu_4070_p3;
reg   [0:0] xflag_i_reg_1017;
reg   [31:0] dx0_1_i_reg_1029;
reg   [31:0] dy0_1_i_reg_1040;
reg   [1:0] k_i_reg_1051;
reg   [31:0] ap_phi_mux_gap_1_i_phi_fu_1100_p4;
reg   [31:0] gap_i_reg_1062;
reg   [31:0] j1_1_reg_1074;
reg   [31:0] i1_reg_1085;
wire   [31:0] gap_fu_4261_p2;
reg   [31:0] dx0_2_i_reg_1108;
reg   [31:0] dy0_2_i_reg_1119;
reg   [1:0] k1_i_reg_1130;
reg   [31:0] j1_4_reg_1141;
reg   [31:0] i1_3_reg_1152;
reg   [0:0] p_1_i_reg_1185;
wire    ap_CS_fsm_state189;
reg   [31:0] total_5_i_reg_1204;
reg    grp_log_generic_float_s_fu_1213_ap_start_reg;
reg   [158:0] ap_NS_fsm;
wire    ap_NS_fsm_state28;
wire    ap_CS_fsm_state28;
reg    grp_sin_or_cos_float_s_fu_1228_ap_start_reg;
reg    grp_sin_or_cos_float_s_fu_1243_ap_start_reg;
wire    ap_CS_fsm_state42;
wire   [63:0] tmp_29_cast_fu_1353_p1;
wire   [63:0] tmp_32_cast_fu_1398_p1;
wire   [63:0] tmp_95_i_fu_1708_p1;
wire   [63:0] tmp_31_cast_fu_1723_p1;
wire   [63:0] tmp_40_cast_fu_2233_p1;
wire  signed [63:0] tmp_i_i_fu_2251_p1;
wire   [0:0] tmp_117_i_fu_2239_p2;
wire   [63:0] tmp_47_i_fu_2298_p1;
wire  signed [63:0] tmp_121_i_fu_2688_p1;
wire  signed [63:0] tmp_44_cast_fu_2734_p1;
wire   [63:0] tmp_46_cast_fu_2782_p1;
wire   [63:0] tmp_135_i_fu_2761_p1;
wire   [63:0] tmp_274_i_i_fu_3112_p1;
wire   [63:0] tmp_51_cast_fu_3362_p1;
wire  signed [63:0] tmp_52_cast_fu_3420_p1;
wire  signed [63:0] tmp_140_i_fu_3405_p1;
wire   [63:0] tmp_221_i_fu_4124_p1;
wire  signed [63:0] tmp_58_cast_fu_4256_p1;
wire   [63:0] tmp_240_i_fu_4371_p1;
wire  signed [63:0] tmp_235_i_fu_4386_p1;
wire  signed [63:0] tmp_60_cast_fu_4401_p1;
wire  signed [63:0] tmp_65_cast_fu_4505_p1;
wire   [63:0] tmp_67_cast_fu_4553_p1;
wire    ap_block_pp6_stage0;
wire   [63:0] tmp_250_i_fu_4532_p1;
wire   [63:0] tmp_274_i_i1_fu_4883_p1;
wire   [63:0] tmp_72_cast_fu_5133_p1;
wire  signed [63:0] tmp_59_cast_fu_5188_p1;
wire  signed [63:0] tmp_61_cast_fu_5198_p1;
reg   [31:0] pt_buf_length_i_fu_376;
wire   [31:0] pt_buf_length_fu_2245_p2;
reg   [31:0] total_1_fu_380;
wire  signed [31:0] total_fu_4377_p2;
wire   [15:0] tmp_232_fu_4382_p1;
wire   [15:0] tmp_235_fu_4406_p1;
wire   [15:0] tmp_234_fu_5203_p1;
wire   [15:0] tmp_236_fu_5208_p1;
wire    ap_CS_fsm_state191;
wire   [15:0] tmp_240_fu_5213_p1;
wire   [31:0] max_val_2_fu_3371_p2;
wire   [31:0] tmp_269_i_fu_5138_p2;
reg   [31:0] grp_fu_1263_p0;
reg   [31:0] grp_fu_1263_p1;
wire    ap_CS_fsm_state37;
reg   [31:0] grp_fu_1269_p0;
wire    ap_CS_fsm_state100;
reg   [31:0] grp_fu_1275_p0;
wire   [31:0] tmp_24_fu_1284_p0;
wire   [31:0] tmp_24_fu_1284_p1;
wire   [3:0] i_0_i_cast_cast_i_fu_1313_p1;
wire   [7:0] j_0_i_cast_cast_i_fu_1328_p1;
wire   [9:0] tmp_93_i_cast_fu_1343_p1;
wire   [9:0] tmp_29_fu_1347_p2;
wire   [17:0] tmp_111_i_cast_fu_1388_p1;
wire   [17:0] tmp_s_fu_1392_p2;
wire   [63:0] d_assign_3_fu_1278_p1;
wire   [63:0] ireg_V_fu_1420_p1;
wire   [10:0] exp_tmp_V_fu_1436_p4;
wire   [51:0] tmp_122_fu_1450_p1;
wire   [52:0] tmp_83_i_fu_1454_p3;
wire   [62:0] tmp_fu_1424_p1;
wire   [11:0] tmp_96_i_fu_1446_p1;
wire   [11:0] tmp_108_i_fu_1490_p2;
wire   [11:0] tmp_109_i_fu_1496_p2;
wire   [7:0] tmp_124_fu_1510_p4;
wire   [7:0] tmp_127_fu_1532_p4;
wire   [11:0] tmp_146_i_fu_1552_p2;
wire   [63:0] d_assign_fu_1281_p1;
wire   [63:0] ireg_V_1_fu_1564_p1;
wire   [10:0] exp_tmp_V_1_fu_1580_p4;
wire   [51:0] tmp_135_fu_1594_p1;
wire   [52:0] tmp_87_i_fu_1598_p3;
wire   [62:0] tmp_133_fu_1568_p1;
wire   [11:0] tmp_155_i_fu_1590_p1;
wire   [11:0] tmp_165_i_fu_1634_p2;
wire   [11:0] tmp_166_i_fu_1640_p2;
wire   [7:0] tmp_137_fu_1654_p4;
wire   [7:0] tmp_140_fu_1676_p4;
wire   [11:0] tmp_213_i_fu_1696_p2;
wire   [8:0] tmp_95_i_cast_fu_1713_p1;
wire   [8:0] tmp_31_fu_1717_p2;
wire   [53:0] man_V_5_fu_1728_p3;
wire  signed [31:0] sh_amt_cast_i_fu_1736_p1;
wire   [53:0] tmp_124_i_fu_1753_p1;
wire   [53:0] tmp_125_i_fu_1757_p2;
wire   [15:0] tmp_123_fu_1744_p1;
wire  signed [15:0] sh_amt_cast83_i_fu_1733_p1;
wire   [0:0] tmp_118_i_fu_1748_p2;
wire   [15:0] tmp_125_fu_1763_p1;
wire   [15:0] storemerge1_i_fu_1767_p3;
wire   [11:0] tmp_131_i_fu_1788_p2;
wire   [31:0] tmp_131_cast_i_fu_1793_p1;
wire   [0:0] tmp_126_fu_1797_p3;
wire   [5:0] tmp_146_cast_i_op_fu_1811_p2;
wire   [5:0] tmp_129_fu_1816_p3;
wire   [53:0] tmp_130_fu_1823_p1;
wire   [53:0] tmp_131_fu_1827_p2;
wire   [53:0] p_Result_s_fu_1833_p2;
wire   [0:0] tmp_149_i_fu_1839_p2;
wire   [0:0] r_1_fu_1845_p2;
wire   [0:0] p_r_i_i_i1_i_fu_1850_p2;
wire   [0:0] qb_fu_1805_p3;
wire   [0:0] qb_assign_1_fu_1855_p2;
wire   [15:0] tmp_150_i_fu_1861_p1;
wire   [15:0] p_Val2_61_fu_1780_p3;
wire   [0:0] tmp_110_i_fu_1739_p2;
wire   [0:0] sel_tmp1_fu_1871_p2;
wire   [0:0] sel_tmp6_demorgan_fu_1882_p2;
wire   [0:0] sel_tmp6_fu_1887_p2;
wire   [0:0] sel_tmp13_demorgan_fu_1898_p2;
wire   [0:0] sel_tmp_fu_1903_p2;
wire   [0:0] sel_tmp3_fu_1909_p2;
wire   [15:0] tmp_128_i_fu_1774_p2;
wire   [15:0] p_Val2_62_fu_1865_p2;
wire   [0:0] sel_tmp7_fu_1893_p2;
wire   [0:0] sel_tmp2_fu_1876_p2;
wire   [0:0] or_cond_fu_1922_p2;
wire   [15:0] newSel_fu_1914_p3;
wire   [15:0] newSel1_fu_1928_p3;
wire   [53:0] man_V_fu_1945_p3;
wire  signed [31:0] sh_amt_1_cast_i_fu_1953_p1;
wire   [53:0] tmp_185_i_fu_1970_p1;
wire   [53:0] tmp_186_i_fu_1974_p2;
wire   [15:0] tmp_136_fu_1961_p1;
wire  signed [15:0] sh_amt_1_cast82_i_fu_1950_p1;
wire   [0:0] tmp_179_i_fu_1965_p2;
wire   [15:0] tmp_138_fu_1980_p1;
wire   [15:0] storemerge_i_fu_1984_p3;
wire   [11:0] tmp_199_i_fu_2005_p2;
wire   [31:0] tmp_199_cast_i_fu_2010_p1;
wire   [0:0] tmp_139_fu_2014_p3;
wire   [5:0] tmp_213_cast_i_op_fu_2028_p2;
wire   [5:0] tmp_142_fu_2033_p3;
wire   [53:0] tmp_143_fu_2040_p1;
wire   [53:0] tmp_144_fu_2044_p2;
wire   [53:0] p_Result_54_fu_2050_p2;
wire   [0:0] tmp_216_i_fu_2056_p2;
wire   [0:0] r_2_fu_2062_p2;
wire   [0:0] p_r_i_i_i_i_fu_2067_p2;
wire   [0:0] qb_1_fu_2022_p3;
wire   [0:0] qb_assign_3_fu_2072_p2;
wire   [15:0] tmp_217_i_fu_2078_p1;
wire   [15:0] p_Val2_68_fu_1997_p3;
wire   [0:0] tmp_167_i_fu_1956_p2;
wire   [0:0] sel_tmp4_fu_2088_p2;
wire   [0:0] sel_tmp25_demorgan_fu_2099_p2;
wire   [0:0] sel_tmp8_fu_2104_p2;
wire   [0:0] sel_tmp32_demorgan_fu_2115_p2;
wire   [0:0] sel_tmp10_fu_2120_p2;
wire   [0:0] sel_tmp11_fu_2126_p2;
wire   [15:0] tmp_189_i_fu_1991_p2;
wire   [15:0] p_Val2_70_fu_2082_p2;
wire   [0:0] sel_tmp9_fu_2110_p2;
wire   [0:0] sel_tmp5_fu_2093_p2;
wire   [0:0] or_cond1_fu_2139_p2;
wire   [15:0] newSel3_fu_2131_p3;
wire   [15:0] newSel4_fu_2145_p3;
wire   [9:0] tmp_156_fu_2178_p1;
wire   [11:0] tmp_157_fu_2190_p1;
wire   [17:0] p_shl_cast_fu_2182_p3;
wire   [17:0] p_shl1_cast_fu_2194_p3;
wire   [17:0] tmp_158_fu_2224_p1;
wire   [17:0] tmp_35_fu_2228_p2;
wire  signed [31:0] pt_buf_length_fu_2245_p0;
wire  signed [31:0] tmp_i_i_fu_2251_p0;
wire   [31:0] p_Val2_78_fu_2262_p1;
wire   [4:0] index_V_fu_2288_p4;
wire   [0:0] tmp_45_i_fu_2317_p2;
wire   [0:0] tmp_46_i_fu_2322_p2;
wire   [31:0] p_Result_125_fu_2337_p3;
wire   [31:0] p_Result_126_fu_2348_p3;
wire   [31:0] mask_cast_i_fu_2333_p1;
wire   [31:0] p_Val2_83_fu_2355_p2;
wire   [22:0] loc_V_6_fu_2379_p1;
wire   [7:0] loc_V_5_fu_2369_p4;
wire   [0:0] p_Result_127_fu_2361_p3;
wire   [22:0] xs_sig_V_1_fu_2383_p3;
wire   [22:0] tmp_48_i_fu_2400_p2;
wire   [0:0] xs_sign_V_fu_2395_p2;
wire   [7:0] xs_exp_V_fu_2389_p3;
wire   [22:0] xs_sig_V_fu_2406_p2;
wire   [31:0] p_Result_128_fu_2412_p4;
wire   [0:0] or_cond_i_fu_2327_p2;
wire   [0:0] sel_tmp_i_fu_2426_p2;
wire   [0:0] tmp_i1_fu_2307_p2;
wire   [0:0] sel_tmp1_i_fu_2431_p2;
wire   [31:0] ret_i_i_i_i_fu_2344_p1;
wire   [0:0] tmp_i1_389_fu_2312_p2;
wire   [0:0] sel_tmp5_demorgan_i_fu_2445_p2;
wire   [31:0] sel_tmp2_i_fu_2437_p3;
wire   [31:0] ret_i_i_i_fu_2422_p1;
wire   [0:0] sel_tmp7_i_fu_2459_p2;
wire   [0:0] sel_tmp8_i_fu_2465_p2;
wire   [31:0] sel_tmp6_i_fu_2451_p3;
wire   [31:0] p_Val2_91_fu_2479_p1;
wire   [22:0] loc_V_8_fu_2500_p1;
wire   [24:0] tmp_293_i_i_i_i_fu_2504_p4;
wire   [7:0] loc_V_7_fu_2490_p4;
wire   [8:0] tmp_i_i_i_i_cast_i_fu_2518_p1;
wire   [8:0] sh_assign_fu_2522_p2;
wire   [7:0] tmp_294_i_i_i_i_fu_2536_p2;
wire   [0:0] isNeg_fu_2528_p3;
wire  signed [8:0] tmp_294_i_i_i_cast_i_fu_2542_p1;
wire  signed [8:0] sh_assign_1_fu_2546_p3;
wire  signed [31:0] sh_assign_2_i_i_i_ca_fu_2554_p1;
wire  signed [24:0] sh_assign_2_i_i_i_ca_1_fu_2558_p1;
wire   [78:0] tmp_293_i_i_i_cast_fu_2514_p1;
wire   [78:0] tmp_295_i_i_i_i_fu_2562_p1;
wire   [24:0] tmp_296_i_i_i_i_fu_2566_p2;
wire   [0:0] tmp_154_fu_2578_p3;
wire   [78:0] tmp_297_i_i_i_i_fu_2572_p2;
wire   [31:0] tmp_32_fu_2586_p1;
wire   [31:0] tmp_33_fu_2590_p4;
wire   [31:0] p_Val2_96_fu_2600_p3;
wire   [0:0] p_Result_129_fu_2482_p3;
wire   [31:0] p_Val2_i_i_i_i_fu_2608_p2;
wire   [31:0] p_Val2_99_fu_2614_p3;
wire   [16:0] p_Val2_cast_fu_2632_p1;
wire   [16:0] step_fu_2635_p2;
wire   [16:0] p_i_fu_2641_p3;
wire   [31:0] cnt_i_cast_fu_2657_p1;
wire   [31:0] grp_fu_2677_p0;
wire  signed [31:0] tmp_159_fu_2694_p0;
wire  signed [31:0] tmp_160_fu_2698_p0;
wire   [9:0] tmp_160_fu_2698_p1;
wire  signed [31:0] tmp_161_fu_2710_p0;
wire   [11:0] tmp_161_fu_2710_p1;
wire   [17:0] p_shl2_cast_fu_2702_p3;
wire   [17:0] p_shl3_cast_fu_2714_p3;
wire   [17:0] tmp_159_fu_2694_p1;
wire   [17:0] tmp_36_fu_2722_p2;
wire   [17:0] tmp_37_fu_2728_p2;
wire   [8:0] tmp_135_i_cast_fu_2766_p1;
wire   [8:0] tmp_38_fu_2776_p2;
wire  signed [15:0] p_Val2_100_fu_2791_p0;
wire  signed [31:0] p_Val2_100_fu_2791_p1;
wire  signed [15:0] p_Val2_23_fu_2800_p0;
wire  signed [31:0] p_Val2_23_fu_2800_p1;
wire  signed [48:0] tmp_137_i_fu_2808_p1;
wire  signed [48:0] tmp_136_i_fu_2805_p1;
wire   [48:0] p_Val2_101_fu_2811_p2;
wire   [47:0] p_Val2_37_cast_i_fu_2817_p2;
wire   [47:0] tmp_142_cast_i_fu_2835_p2;
reg   [48:0] p_Result_130_fu_2853_p4;
wire   [63:0] p_Result_131_fu_2863_p3;
reg   [63:0] tmp_143_i_fu_2871_p3;
wire   [0:0] tmp_165_fu_2892_p3;
wire   [30:0] tmp_164_fu_2888_p1;
wire   [30:0] msb_idx_1_fu_2900_p3;
wire   [25:0] tmp_166_fu_2908_p4;
wire   [30:0] tmp_153_i_fu_2927_p2;
wire   [31:0] tmp32_V_fu_2924_p1;
wire   [31:0] tmp_153_cast_i_fu_2933_p1;
wire   [5:0] tmp_168_fu_2943_p1;
wire   [0:0] tmp_169_fu_2947_p2;
reg   [48:0] tmp_171_fu_2959_p4;
wire   [5:0] tmp_172_fu_2968_p2;
wire   [5:0] tmp_170_fu_2953_p2;
wire   [5:0] tmp_174_fu_2981_p3;
wire   [48:0] tmp_173_fu_2974_p3;
wire   [48:0] tmp_175_fu_2989_p1;
wire   [48:0] tmp_176_fu_2993_p2;
wire   [0:0] icmp4_fu_2918_p2;
wire   [31:0] tmp32_V_1_fu_2937_p2;
wire   [31:0] tmp32_V_2_fu_2999_p1;
wire   [31:0] grp_fu_1269_p1;
wire   [0:0] tmp_160_i_fu_3025_p2;
wire   [7:0] tmp_178_fu_3030_p1;
wire   [7:0] tmp_cast_cast_fu_3033_p3;
wire   [7:0] p_Repl2_19_trunc_i_fu_3041_p2;
wire   [8:0] tmp_162_i_fu_3047_p3;
wire   [31:0] p_Result_132_fu_3054_p5;
wire   [31:0] f_fu_3065_p1;
wire   [7:0] loc_V_9_fu_3080_p4;
wire   [4:0] index_V_3_fu_3102_p4;
wire   [0:0] p_Result_85_fu_3118_p3;
wire   [31:0] one_half_i_cast_i_fu_3133_p1;
wire   [31:0] p_Val2_113_fu_3137_p2;
wire   [22:0] loc_V_10_fu_3142_p1;
wire   [22:0] tmp_276_i_i_fu_3146_p2;
wire   [8:0] tmp_12_fu_3158_p4;
wire   [22:0] xs_sig_V_4_fu_3152_p2;
wire   [31:0] p_Result_133_fu_3125_p3;
wire   [31:0] p_Result_134_fu_3168_p3;
wire   [31:0] sel_tmp_v_i_fu_3176_p3;
wire   [0:0] sel_tmp1_i1_fu_3187_p2;
wire   [0:0] sel_tmp2_i1_fu_3192_p2;
wire   [31:0] sel_tmp_i1_fu_3183_p1;
wire   [31:0] x_assign_9_fu_3197_p3;
wire   [31:0] p_Val2_115_fu_3204_p1;
wire   [7:0] loc_V_11_fu_3216_p4;
wire   [8:0] tmp_i_i_i_i9_cast_i_fu_3230_p1;
wire   [8:0] sh_assign_2_fu_3234_p2;
wire   [7:0] tmp_294_i_i_i12_i_fu_3248_p2;
wire  signed [8:0] tmp_294_i_i_i12_cast_fu_3254_p1;
wire   [24:0] tmp_293_i_i_i8_i_fu_3266_p4;
wire  signed [31:0] sh_assign_2_i_i_i13_s_fu_3279_p1;
wire  signed [24:0] sh_assign_2_i_i_i13_1_fu_3282_p1;
wire   [78:0] tmp_293_i_i_i8_cast7_fu_3275_p1;
wire   [78:0] tmp_295_i_i_i14_i_fu_3285_p1;
wire   [24:0] tmp_296_i_i_i15_i_fu_3289_p2;
wire   [0:0] tmp_184_fu_3301_p3;
wire   [78:0] tmp_297_i_i_i16_i_fu_3295_p2;
wire   [31:0] tmp_39_fu_3309_p1;
wire   [31:0] tmp_40_fu_3313_p4;
wire   [31:0] p_Val2_117_fu_3323_p3;
wire   [31:0] p_Val2_i_i_i22_i_fu_3330_p2;
wire   [18:0] tmp_185_fu_3336_p1;
wire   [18:0] tmp_186_fu_3340_p1;
wire   [18:0] tmp_187_fu_3344_p3;
wire   [18:0] tmp_188_fu_3351_p2;
wire   [18:0] tmp_41_fu_3357_p2;
wire   [0:0] tmp_175_i_fu_3378_p2;
wire   [31:0] max_n_1_cast79_i_fu_3367_p1;
wire   [9:0] tmp_189_fu_3410_p1;
wire   [9:0] tmp_42_fu_3414_p2;
wire  signed [15:0] is_neg_2_fu_3425_p1;
reg   [15:0] p_Result_136_fu_3458_p4;
wire   [31:0] p_Result_137_fu_3468_p3;
reg   [31:0] num_zeros_1_fu_3476_p3;
wire   [0:0] tmp_192_fu_3494_p3;
wire   [30:0] tmp_191_fu_3490_p1;
wire   [25:0] tmp_193_fu_3510_p4;
wire   [4:0] tmp_194_fu_3526_p1;
wire   [0:0] tmp_195_fu_3530_p2;
reg   [15:0] tmp_197_fu_3542_p4;
wire   [4:0] tmp_198_fu_3552_p2;
wire   [4:0] tmp_196_fu_3536_p2;
wire   [4:0] tmp_200_fu_3566_p3;
wire   [15:0] tmp_199_fu_3558_p3;
wire   [15:0] tmp_201_fu_3574_p1;
wire   [15:0] tmp_202_fu_3578_p2;
wire   [1:0] tmp_203_fu_3584_p1;
wire   [15:0] tmp_182_i_fu_3596_p2;
reg   [15:0] p_Result_140_fu_3607_p4;
wire   [31:0] p_Result_141_fu_3617_p3;
reg   [31:0] num_zeros_2_fu_3625_p3;
wire   [0:0] tmp_210_fu_3643_p3;
wire   [30:0] tmp_209_fu_3639_p1;
wire   [25:0] tmp_211_fu_3659_p4;
wire   [4:0] tmp_212_fu_3675_p1;
wire   [0:0] tmp_213_fu_3679_p2;
reg   [15:0] tmp_215_fu_3691_p4;
wire   [4:0] tmp_216_fu_3701_p2;
wire   [4:0] tmp_214_fu_3685_p2;
wire   [4:0] tmp_218_fu_3715_p3;
wire   [15:0] tmp_217_fu_3707_p3;
wire   [15:0] tmp_219_fu_3723_p1;
wire   [15:0] tmp_220_fu_3727_p2;
wire   [1:0] tmp_221_fu_3733_p1;
wire   [30:0] tmp_158_i_fu_3748_p2;
wire   [31:0] tmp32_V_3_fu_3745_p1;
wire   [31:0] tmp_158_cast_i_fu_3753_p1;
wire   [31:0] tmp32_V_4_fu_3757_p2;
wire   [31:0] tmp32_V_5_fu_3763_p1;
wire   [30:0] tmp_191_i_fu_3781_p2;
wire   [31:0] tmp32_V_12_fu_3778_p1;
wire   [31:0] tmp_191_cast_i_fu_3786_p1;
wire   [31:0] tmp32_V_13_fu_3790_p2;
wire   [31:0] tmp32_V_14_fu_3796_p1;
wire   [31:0] grp_fu_1272_p1;
wire   [0:0] tmp_168_i_fu_3834_p2;
wire   [7:0] tmp82_cast_cast_fu_3842_p3;
wire   [7:0] tmp_205_fu_3839_p1;
wire   [7:0] p_Repl2_21_trunc_i_fu_3850_p2;
wire   [8:0] tmp_172_i_fu_3856_p3;
wire   [31:0] p_Result_138_fu_3863_p5;
wire   [30:0] tmp_206_fu_3874_p1;
wire   [30:0] tmp_14_fu_3878_p3;
wire   [31:0] p_Result_139_fu_3889_p3;
wire   [0:0] tmp_194_i_fu_3902_p2;
wire   [7:0] tmp83_cast_cast_fu_3910_p3;
wire   [7:0] tmp_223_fu_3907_p1;
wire   [7:0] p_Repl2_24_trunc_i_fu_3918_p2;
wire   [8:0] tmp_198_i_fu_3924_p3;
wire   [31:0] p_Result_142_fu_3931_p5;
wire   [30:0] tmp_224_fu_3942_p1;
wire   [30:0] tmp_17_fu_3946_p3;
wire   [31:0] p_Result_143_fu_3957_p3;
wire   [7:0] tmp_19_fu_3970_p4;
wire   [22:0] tmp_207_fu_3885_p1;
wire   [0:0] notrhs1_fu_3996_p2;
wire   [0:0] notlhs1_fu_3990_p2;
wire   [7:0] tmp_20_fu_3980_p4;
wire   [22:0] tmp_225_fu_3953_p1;
wire   [0:0] notrhs2_fu_4014_p2;
wire   [0:0] notlhs2_fu_4008_p2;
wire   [0:0] tmp_21_fu_4002_p2;
wire   [0:0] tmp_22_fu_4020_p2;
wire   [0:0] tmp_23_fu_4026_p2;
wire   [0:0] tmp_24_fu_1284_p2;
wire   [29:0] grp_fu_4048_p0;
wire   [29:0] grp_fu_4064_p0;
wire   [29:0] grp_fu_4048_p2;
wire   [31:0] tmp_227_fu_4079_p2;
wire   [29:0] grp_fu_4064_p2;
wire   [31:0] tmp_226_fu_4100_p2;
wire   [15:0] tmp_227_i_fu_4130_p4;
wire   [15:0] tmp_229_i_fu_4144_p4;
wire  signed [31:0] i1_1_fu_4154_p1;
wire  signed [31:0] j1_fu_4140_p1;
wire   [31:0] tmp_26_fu_4174_p2;
wire   [0:0] tmp_228_fu_4180_p3;
wire   [0:0] notrhs_fu_4194_p2;
wire   [0:0] rev_fu_4188_p2;
wire   [0:0] tmp_231_i_fu_4205_p2;
wire   [0:0] or_cond303_not_i_fu_4199_p2;
wire   [9:0] tmp_230_fu_4220_p1;
wire   [11:0] tmp_231_fu_4232_p1;
wire   [17:0] p_shl4_cast_fu_4224_p3;
wire   [17:0] p_shl5_cast_fu_4236_p3;
wire   [17:0] tmp_229_fu_4216_p1;
wire   [17:0] tmp_43_fu_4244_p2;
wire   [17:0] tmp_44_fu_4250_p2;
wire   [31:0] x_assign_fu_4297_p2;
wire   [0:0] abscond_i_i_fu_4309_p2;
wire   [31:0] neg_i_i_fu_4303_p2;
wire   [31:0] abs_i_i_fu_4315_p3;
wire   [31:0] x_assign_2_fu_4328_p2;
wire   [0:0] abscond_i43_i_fu_4340_p2;
wire   [31:0] neg_i42_i_fu_4334_p2;
wire   [31:0] abs_i44_i_fu_4346_p3;
wire   [9:0] tmp_46_fu_4395_p2;
wire   [15:0] tmp_243_i_fu_4421_p4;
wire   [15:0] tmp_245_i_fu_4435_p4;
wire  signed [31:0] i1_4_fu_4445_p1;
wire  signed [31:0] j1_3_fu_4431_p1;
wire   [9:0] tmp_238_fu_4469_p1;
wire   [11:0] tmp_239_fu_4481_p1;
wire   [17:0] p_shl6_cast_fu_4473_p3;
wire   [17:0] p_shl7_cast_fu_4485_p3;
wire   [17:0] tmp_237_fu_4465_p1;
wire   [17:0] tmp_48_fu_4493_p2;
wire   [17:0] tmp_49_fu_4499_p2;
wire   [8:0] tmp_250_i_cast_fu_4537_p1;
wire   [8:0] tmp_50_fu_4547_p2;
wire  signed [15:0] p_Val2_125_fu_4562_p0;
wire  signed [31:0] p_Val2_125_fu_4562_p1;
wire  signed [15:0] p_Val2_24_fu_4571_p0;
wire  signed [31:0] p_Val2_24_fu_4571_p1;
wire  signed [48:0] tmp_252_i_fu_4579_p1;
wire  signed [48:0] tmp_251_i_fu_4576_p1;
wire   [48:0] p_Val2_126_fu_4582_p2;
wire   [47:0] p_Val2_60_cast_i_fu_4588_p2;
wire   [47:0] tmp_255_cast_i_fu_4606_p2;
reg   [48:0] p_Result_144_fu_4624_p4;
wire   [63:0] p_Result_145_fu_4634_p3;
reg   [63:0] tmp_256_i_fu_4642_p3;
wire   [0:0] tmp_244_fu_4663_p3;
wire   [30:0] tmp_243_fu_4659_p1;
wire   [30:0] msb_idx_7_fu_4671_p3;
wire   [25:0] tmp_245_fu_4679_p4;
wire   [30:0] tmp_260_i_fu_4698_p2;
wire   [31:0] tmp32_V_18_fu_4695_p1;
wire   [31:0] tmp_260_cast_i_fu_4704_p1;
wire   [5:0] tmp_247_fu_4714_p1;
wire   [0:0] tmp_248_fu_4718_p2;
reg   [48:0] tmp_250_fu_4730_p4;
wire   [5:0] tmp_251_fu_4739_p2;
wire   [5:0] tmp_249_fu_4724_p2;
wire   [5:0] tmp_253_fu_4752_p3;
wire   [48:0] tmp_252_fu_4745_p3;
wire   [48:0] tmp_254_fu_4760_p1;
wire   [48:0] tmp_255_fu_4764_p2;
wire   [0:0] icmp7_fu_4689_p2;
wire   [31:0] tmp32_V_19_fu_4708_p2;
wire   [31:0] tmp32_V_20_fu_4770_p1;
wire   [0:0] tmp_262_i_fu_4796_p2;
wire   [7:0] tmp_257_fu_4801_p1;
wire   [7:0] tmp85_cast_cast_fu_4804_p3;
wire   [7:0] p_Repl2_27_trunc_i_fu_4812_p2;
wire   [8:0] tmp_266_i_fu_4818_p3;
wire   [31:0] p_Result_146_fu_4825_p5;
wire   [31:0] f_5_fu_4836_p1;
wire   [7:0] loc_V_13_fu_4851_p4;
wire   [4:0] index_V_4_fu_4873_p4;
wire   [0:0] p_Result_113_fu_4889_p3;
wire   [31:0] one_half_i_cast_i1_fu_4904_p1;
wire   [31:0] p_Val2_135_fu_4908_p2;
wire   [22:0] loc_V_14_fu_4913_p1;
wire   [22:0] tmp_276_i_i1_fu_4917_p2;
wire   [8:0] tmp_27_fu_4929_p4;
wire   [22:0] xs_sig_V_5_fu_4923_p2;
wire   [31:0] p_Result_147_fu_4896_p3;
wire   [31:0] p_Result_148_fu_4939_p3;
wire   [31:0] sel_tmp_v_i1_fu_4947_p3;
wire   [0:0] sel_tmp1_i2_fu_4958_p2;
wire   [0:0] sel_tmp2_i2_fu_4963_p2;
wire   [31:0] sel_tmp_i2_fu_4954_p1;
wire   [31:0] x_assign_1_fu_4968_p3;
wire   [31:0] p_Val2_137_fu_4975_p1;
wire   [7:0] loc_V_15_fu_4987_p4;
wire   [8:0] tmp_i_i_i_i52_cast_i_fu_5001_p1;
wire   [8:0] sh_assign_4_fu_5005_p2;
wire   [7:0] tmp_294_i_i_i55_i_fu_5019_p2;
wire  signed [8:0] tmp_294_i_i_i55_cast_fu_5025_p1;
wire   [24:0] tmp_293_i_i_i51_i_fu_5037_p4;
wire  signed [31:0] sh_assign_2_i_i_i56_s_fu_5050_p1;
wire  signed [24:0] sh_assign_2_i_i_i56_1_fu_5053_p1;
wire   [78:0] tmp_293_i_i_i51_cast_fu_5046_p1;
wire   [78:0] tmp_295_i_i_i57_i_fu_5056_p1;
wire   [24:0] tmp_296_i_i_i58_i_fu_5060_p2;
wire   [0:0] tmp_263_fu_5072_p3;
wire   [78:0] tmp_297_i_i_i59_i_fu_5066_p2;
wire   [31:0] tmp_51_fu_5080_p1;
wire   [31:0] tmp_52_fu_5084_p4;
wire   [31:0] p_Val2_139_fu_5094_p3;
wire   [31:0] p_Val2_i_i_i65_i_fu_5101_p2;
wire   [18:0] tmp_264_fu_5107_p1;
wire   [18:0] tmp_265_fu_5111_p1;
wire   [18:0] tmp_266_fu_5115_p3;
wire   [18:0] tmp_267_fu_5122_p2;
wire   [18:0] tmp_53_fu_5128_p2;
wire   [0:0] tmp_254_i_fu_5145_p2;
wire   [0:0] tmp_259_i_fu_5149_p2;
wire   [9:0] tmp_45_fu_5183_p2;
wire   [9:0] tmp_47_fu_5193_p2;
reg    grp_fu_2677_ap_start;
wire    grp_fu_2677_ap_done;
reg    grp_fu_4048_ap_start;
wire    grp_fu_4048_ap_done;
reg    grp_fu_4064_ap_start;
wire    grp_fu_4064_ap_done;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_idle_pp4;
wire    ap_enable_pp4;
reg    ap_idle_pp6;
wire    ap_enable_pp6;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 159'd1;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter9 = 1'b0;
#0 ap_enable_reg_pp6_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter4 = 1'b0;
#0 ap_enable_reg_pp2_iter5 = 1'b0;
#0 ap_enable_reg_pp2_iter6 = 1'b0;
#0 ap_enable_reg_pp2_iter7 = 1'b0;
#0 ap_enable_reg_pp2_iter8 = 1'b0;
#0 ap_enable_reg_pp2_iter9 = 1'b0;
#0 ap_enable_reg_pp2_iter10 = 1'b0;
#0 ap_enable_reg_pp2_iter11 = 1'b0;
#0 ap_enable_reg_pp2_iter12 = 1'b0;
#0 ap_enable_reg_pp2_iter13 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp4_iter2 = 1'b0;
#0 ap_enable_reg_pp4_iter3 = 1'b0;
#0 ap_enable_reg_pp4_iter4 = 1'b0;
#0 ap_enable_reg_pp4_iter5 = 1'b0;
#0 ap_enable_reg_pp4_iter6 = 1'b0;
#0 ap_enable_reg_pp4_iter7 = 1'b0;
#0 ap_enable_reg_pp4_iter8 = 1'b0;
#0 ap_enable_reg_pp6_iter1 = 1'b0;
#0 ap_enable_reg_pp6_iter2 = 1'b0;
#0 ap_enable_reg_pp6_iter3 = 1'b0;
#0 ap_enable_reg_pp6_iter4 = 1'b0;
#0 ap_enable_reg_pp6_iter5 = 1'b0;
#0 ap_enable_reg_pp6_iter6 = 1'b0;
#0 ap_enable_reg_pp6_iter7 = 1'b0;
#0 ap_enable_reg_pp6_iter8 = 1'b0;
#0 ap_enable_reg_pp6_iter9 = 1'b0;
#0 grp_log_generic_float_s_fu_1213_ap_start_reg = 1'b0;
#0 grp_sin_or_cos_float_s_fu_1228_ap_start_reg = 1'b0;
#0 grp_sin_or_cos_float_s_fu_1243_ap_start_reg = 1'b0;
end

HoughLinesProbabipcA #(
    .DataWidth( 23 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
mask_table1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mask_table1_address0),
    .ce0(mask_table1_ce0),
    .q0(mask_table1_q0)
);

HoughLinesProbabipcA #(
    .DataWidth( 23 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
mask_table3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mask_table3_address0),
    .ce0(mask_table3_ce0),
    .q0(mask_table3_q0)
);

HoughLinesProbabircU #(
    .DataWidth( 24 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
one_half_table4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(one_half_table4_address0),
    .ce0(one_half_table4_ce0),
    .q0(one_half_table4_q0)
);

HoughLinesProbabisc4 #(
    .DataWidth( 32 ),
    .AddressRange( 201780 ),
    .AddressWidth( 18 ))
accum_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(accum_address0),
    .ce0(accum_ce0),
    .we0(accum_we0),
    .d0(accum_d0),
    .q0(accum_q0),
    .address1(accum_address1),
    .ce1(accum_ce1),
    .we1(accum_we1),
    .d1(max_val_2_fu_3371_p2),
    .q1(accum_q1)
);

HoughLinesProbabitde #(
    .DataWidth( 1 ),
    .AddressRange( 76800 ),
    .AddressWidth( 17 ))
mask_val_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mask_val_address0),
    .ce0(mask_val_ce0),
    .we0(mask_val_we0),
    .d0(mask_val_d0),
    .q0(mask_val_q0)
);

HoughLinesProbabiudo #(
    .DataWidth( 16 ),
    .AddressRange( 360 ),
    .AddressWidth( 9 ))
trigtab_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(trigtab_V_address0),
    .ce0(trigtab_V_ce0),
    .we0(trigtab_V_we0),
    .d0(trigtab_V_d0),
    .q0(trigtab_V_q0),
    .address1(trigtab_V_address1),
    .ce1(trigtab_V_ce1),
    .we1(trigtab_V_we1),
    .d1(trigtab_V_d1),
    .q1(trigtab_V_q1)
);

HoughLinesProbabivdy #(
    .DataWidth( 32 ),
    .AddressRange( 76800 ),
    .AddressWidth( 17 ))
pt_buf_val_x_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(pt_buf_val_x_address0),
    .ce0(pt_buf_val_x_ce0),
    .we0(pt_buf_val_x_we0),
    .d0(p_x_assign_reg_895),
    .q0(pt_buf_val_x_q0)
);

HoughLinesProbabivdy #(
    .DataWidth( 32 ),
    .AddressRange( 76800 ),
    .AddressWidth( 17 ))
pt_buf_val_y_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(pt_buf_val_y_address0),
    .ce0(pt_buf_val_y_ce0),
    .we0(pt_buf_val_y_we0),
    .d0(p_y_assign_reg_882),
    .q0(pt_buf_val_y_q0)
);

HoughLinesProbabixdS #(
    .DataWidth( 32 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
line_end_x_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(line_end_x_address0),
    .ce0(line_end_x_ce0),
    .we0(line_end_x_we0),
    .d0(j1_2_reg_6018),
    .q0(line_end_x_q0),
    .address1(line_end_x_address1),
    .ce1(line_end_x_ce1),
    .q1(line_end_x_q1)
);

HoughLinesProbabixdS #(
    .DataWidth( 32 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
line_end_y_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(line_end_y_address0),
    .ce0(line_end_y_ce0),
    .we0(line_end_y_we0),
    .d0(i1_2_reg_6013),
    .q0(line_end_y_q0),
    .address1(line_end_y_address1),
    .ce1(line_end_y_ce1),
    .q1(line_end_y_q1)
);

log_generic_float_s grp_log_generic_float_s_fu_1213(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_log_generic_float_s_fu_1213_ap_start),
    .ap_done(grp_log_generic_float_s_fu_1213_ap_done),
    .ap_idle(grp_log_generic_float_s_fu_1213_ap_idle),
    .ap_ready(grp_log_generic_float_s_fu_1213_ap_ready),
    .base_r(reg_1295),
    .ap_return(grp_log_generic_float_s_fu_1213_ap_return)
);

sin_or_cos_float_s grp_sin_or_cos_float_s_fu_1228(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_sin_or_cos_float_s_fu_1228_ap_start),
    .ap_done(grp_sin_or_cos_float_s_fu_1228_ap_done),
    .ap_idle(grp_sin_or_cos_float_s_fu_1228_ap_idle),
    .ap_ready(grp_sin_or_cos_float_s_fu_1228_ap_ready),
    .t_in(reg_1301),
    .do_cos(grp_sin_or_cos_float_s_fu_1228_do_cos),
    .ap_return(grp_sin_or_cos_float_s_fu_1228_ap_return)
);

sin_or_cos_float_s grp_sin_or_cos_float_s_fu_1243(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_sin_or_cos_float_s_fu_1243_ap_start),
    .ap_done(grp_sin_or_cos_float_s_fu_1243_ap_done),
    .ap_idle(grp_sin_or_cos_float_s_fu_1243_ap_idle),
    .ap_ready(grp_sin_or_cos_float_s_fu_1243_ap_ready),
    .t_in(reg_1301),
    .do_cos(grp_sin_or_cos_float_s_fu_1243_do_cos),
    .ap_return(grp_sin_or_cos_float_s_fu_1243_ap_return)
);

sqrt_fixed_32_32_s grp_sqrt_fixed_32_32_s_fu_1258(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .x_V(M_reg_5560),
    .ap_return(grp_sqrt_fixed_32_32_s_fu_1258_ap_return)
);

HoughLinesP_Core_zec #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
HoughLinesP_Core_zec_U54(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1263_p0),
    .din1(grp_fu_1263_p1),
    .ce(1'b1),
    .dout(grp_fu_1263_p2)
);

HoughLinesP_Core_Aem #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
HoughLinesP_Core_Aem_U55(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1269_p0),
    .ce(1'b1),
    .dout(grp_fu_1269_p1)
);

HoughLinesP_Core_Aem #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
HoughLinesP_Core_Aem_U56(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp32_V_15_reg_5945),
    .ce(1'b1),
    .dout(grp_fu_1272_p1)
);

HoughLinesP_Core_Bew #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
HoughLinesP_Core_Bew_U57(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1275_p0),
    .ce(1'b1),
    .dout(grp_fu_1275_p1)
);

HoughLinesP_Core_CeG #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
HoughLinesP_Core_CeG_U58(
    .din0(v_assign_reg_5316),
    .dout(d_assign_3_fu_1278_p1)
);

HoughLinesP_Core_CeG #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
HoughLinesP_Core_CeG_U59(
    .din0(v_assign_1_reg_5321),
    .dout(d_assign_fu_1281_p1)
);

HoughLinesP_Core_DeQ #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
HoughLinesP_Core_DeQ_U60(
    .din0(tmp_24_fu_1284_p0),
    .din1(tmp_24_fu_1284_p1),
    .opcode(5'd2),
    .dout(tmp_24_fu_1284_p2)
);

HoughLinesP_Core_Ee0 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
HoughLinesP_Core_Ee0_U61(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_2677_ap_start),
    .done(grp_fu_2677_ap_done),
    .din0(grp_fu_2677_p0),
    .din1(M_reg_5560),
    .ce(1'b1),
    .dout(grp_fu_2677_p2)
);

HoughLinesP_Core_Ffa #(
    .ID( 1 ),
    .NUM_STAGE( 34 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
HoughLinesP_Core_Ffa_U62(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_4048_ap_start),
    .done(grp_fu_4048_ap_done),
    .din0(grp_fu_4048_p0),
    .din1(p_Val2_121_reg_5854),
    .ce(1'b1),
    .dout(grp_fu_4048_p2)
);

HoughLinesP_Core_Ffa #(
    .ID( 1 ),
    .NUM_STAGE( 34 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
HoughLinesP_Core_Ffa_U63(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_4064_ap_start),
    .done(grp_fu_4064_ap_done),
    .din0(grp_fu_4064_p0),
    .din1(p_Val2_118_reg_5869),
    .ce(1'b1),
    .dout(grp_fu_4064_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state191)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_condition_pp2_exit_iter0_state8) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((exitcond3_i_fu_1364_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state8)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state8);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter10 <= ap_enable_reg_pp2_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter11 <= ap_enable_reg_pp2_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter12 <= ap_enable_reg_pp2_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter13 <= ap_enable_reg_pp2_iter12;
        end else if (((exitcond3_i_fu_1364_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
            ap_enable_reg_pp2_iter13 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter5 <= ap_enable_reg_pp2_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter6 <= ap_enable_reg_pp2_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter7 <= ap_enable_reg_pp2_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter8 <= ap_enable_reg_pp2_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter9 <= ap_enable_reg_pp2_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_condition_pp3_exit_iter0_state24) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if (((exitcond1_i_fu_2167_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state23))) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp3_exit_iter0_state24) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
            ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state24);
        end else if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
        end else if (((exitcond1_i_fu_2167_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state23))) begin
            ap_enable_reg_pp3_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_condition_pp4_exit_iter0_state86) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if (((mask_val_q0 == 1'd1) & (1'b1 == ap_CS_fsm_state85))) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp4_exit_iter0_state86)) begin
                ap_enable_reg_pp4_iter1 <= (1'b1 ^ ap_condition_pp4_exit_iter0_state86);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter2 <= ap_enable_reg_pp4_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter3 <= ap_enable_reg_pp4_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter4 <= ap_enable_reg_pp4_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter5 <= ap_enable_reg_pp4_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter6 <= ap_enable_reg_pp4_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter7 <= ap_enable_reg_pp4_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter8 <= ap_enable_reg_pp4_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter9 <= ap_enable_reg_pp4_iter8;
        end else if (((mask_val_q0 == 1'd1) & (1'b1 == ap_CS_fsm_state85))) begin
            ap_enable_reg_pp4_iter9 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp6_exit_iter0_state178) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_subdone))) begin
            ap_enable_reg_pp6_iter0 <= 1'b0;
        end else if (((mask_val_q0 == 1'd1) & (1'b1 == ap_CS_fsm_state177))) begin
            ap_enable_reg_pp6_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp6_exit_iter0_state178)) begin
                ap_enable_reg_pp6_iter1 <= (1'b1 ^ ap_condition_pp6_exit_iter0_state178);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp6_iter1 <= ap_enable_reg_pp6_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter2 <= ap_enable_reg_pp6_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter3 <= ap_enable_reg_pp6_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter4 <= ap_enable_reg_pp6_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter5 <= ap_enable_reg_pp6_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter6 <= ap_enable_reg_pp6_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter7 <= ap_enable_reg_pp6_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter8 <= ap_enable_reg_pp6_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter9 <= ap_enable_reg_pp6_iter8;
        end else if (((mask_val_q0 == 1'd1) & (1'b1 == ap_CS_fsm_state177))) begin
            ap_enable_reg_pp6_iter9 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_log_generic_float_s_fu_1213_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state27) & (1'b1 == ap_NS_fsm_state28))) begin
            grp_log_generic_float_s_fu_1213_ap_start_reg <= 1'b1;
        end else if ((grp_log_generic_float_s_fu_1213_ap_ready == 1'b1)) begin
            grp_log_generic_float_s_fu_1213_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_sin_or_cos_float_s_fu_1228_ap_start_reg <= 1'b0;
    end else begin
        if (((exitcond5_i_reg_5302_pp2_iter2_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter3 == 1'b1))) begin
            grp_sin_or_cos_float_s_fu_1228_ap_start_reg <= 1'b1;
        end else if ((grp_sin_or_cos_float_s_fu_1228_ap_ready == 1'b1)) begin
            grp_sin_or_cos_float_s_fu_1228_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_sin_or_cos_float_s_fu_1243_ap_start_reg <= 1'b0;
    end else begin
        if (((exitcond5_i_reg_5302_pp2_iter2_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter3 == 1'b1))) begin
            grp_sin_or_cos_float_s_fu_1243_ap_start_reg <= 1'b1;
        end else if ((grp_sin_or_cos_float_s_fu_1243_ap_ready == 1'b1)) begin
            grp_sin_or_cos_float_s_fu_1243_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state190) & ((tmp_115_i_reg_5631 == 1'd0) | (ap_phi_mux_p_1_i_phi_fu_1190_p8 == 1'd0)))) begin
        cnt_i_reg_919 <= cnt_reg_5616;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        cnt_i_reg_919 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state135)) begin
        dx0_1_i_reg_1029 <= ap_phi_mux_dx_i_phi_fu_998_p4;
    end else if ((1'b1 == ap_CS_fsm_state171)) begin
        dx0_1_i_reg_1029 <= dx0_1_fu_4285_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond2_i_fu_5153_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state188))) begin
        dx0_2_i_reg_1108 <= dx0_2_fu_5171_p2;
    end else if (((1'b1 == ap_CS_fsm_state173) & ((tmp_224_i_fu_4354_p2 == 1'd0) | (tmp_220_i_reg_6068 == 1'd0)))) begin
        dx0_2_i_reg_1108 <= dx0_1_i_reg_1029;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state135)) begin
        dy0_1_i_reg_1040 <= ap_phi_mux_dy_i_phi_fu_1009_p4;
    end else if ((1'b1 == ap_CS_fsm_state171)) begin
        dy0_1_i_reg_1040 <= dy0_1_fu_4291_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond2_i_fu_5153_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state188))) begin
        dy0_2_i_reg_1119 <= dy0_2_fu_5177_p2;
    end else if (((1'b1 == ap_CS_fsm_state173) & ((tmp_224_i_fu_4354_p2 == 1'd0) | (tmp_220_i_reg_6068 == 1'd0)))) begin
        dy0_2_i_reg_1119 <= dy0_1_i_reg_1040;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond7_i_fu_4112_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state168))) begin
        gap_i_reg_1062 <= 32'd0;
    end else if (((1'b1 == ap_CS_fsm_state170) & (((or_cond1_i_reg_6023 == 1'd1) & (tmp_241_i_fu_4268_p2 == 1'd0)) | ((or_cond1_i_reg_6023 == 1'd1) & (mask_val_q0 == 1'd1))))) begin
        gap_i_reg_1062 <= ap_phi_mux_gap_1_i_phi_fu_1100_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond2_i_fu_5153_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state188))) begin
        i1_3_reg_1152 <= y_2_fu_5165_p2;
    end else if ((1'b1 == ap_CS_fsm_state175)) begin
        i1_3_reg_1152 <= y_reg_985;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond7_i_fu_4112_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state168))) begin
        i1_reg_1085 <= y_reg_985;
    end else if (((1'b1 == ap_CS_fsm_state170) & (((or_cond1_i_reg_6023 == 1'd1) & (tmp_241_i_fu_4268_p2 == 1'd0)) | ((or_cond1_i_reg_6023 == 1'd1) & (mask_val_q0 == 1'd1))))) begin
        i1_reg_1085 <= y_1_fu_4279_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        i_0_i_i_reg_802 <= i_reg_5267;
    end else if ((~((lines_cols_out_full_n == 1'b0) | (lines_rows_out_full_n == 1'b0) | (lineGap_empty_n == 1'b0) | (threshold_empty_n == 1'b0) | (lines_cols_empty_n == 1'b0) | (lines_rows_empty_n == 1'b0) | (edge_cols_empty_n == 1'b0) | (edge_rows_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_i_i_reg_802 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state190) & ((tmp_115_i_reg_5631 == 1'd0) | (ap_phi_mux_p_1_i_phi_fu_1190_p8 == 1'd0)))) begin
        idx_i_reg_908 <= idx_reg_5626;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        idx_i_reg_908 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond7_i_fu_4112_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state168))) begin
        j1_1_reg_1074 <= x_reg_975;
    end else if (((1'b1 == ap_CS_fsm_state170) & (((or_cond1_i_reg_6023 == 1'd1) & (tmp_241_i_fu_4268_p2 == 1'd0)) | ((or_cond1_i_reg_6023 == 1'd1) & (mask_val_q0 == 1'd1))))) begin
        j1_1_reg_1074 <= x_1_fu_4273_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond2_i_fu_5153_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state188))) begin
        j1_4_reg_1141 <= x_2_fu_5159_p2;
    end else if ((1'b1 == ap_CS_fsm_state175)) begin
        j1_4_reg_1141 <= x_reg_975;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_i_fu_1317_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        j_0_i_i_reg_825 <= 7'd0;
    end else if (((tmp_91_i_fu_1332_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        j_0_i_i_reg_825 <= j_fu_1337_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond2_i_fu_5153_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state188))) begin
        k1_i_reg_1130 <= k_1_reg_6079;
    end else if (((1'b1 == ap_CS_fsm_state173) & ((tmp_224_i_fu_4354_p2 == 1'd0) | (tmp_220_i_reg_6068 == 1'd0)))) begin
        k1_i_reg_1130 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state135)) begin
        k_i_reg_1051 <= 2'd0;
    end else if ((1'b1 == ap_CS_fsm_state171)) begin
        k_i_reg_1051 <= k_reg_5998;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond6_i_reg_5683_pp4_iter8_reg == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter9 == 1'b1))) begin
        max_n_i_reg_940 <= n7_0_max_n_i_fu_3392_p3;
    end else if (((mask_val_q0 == 1'd1) & (1'b1 == ap_CS_fsm_state85))) begin
        max_n_i_reg_940 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond6_i_reg_5683 == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1))) begin
        max_n_reg_952 <= n_1_reg_5687;
    end else if (((mask_val_q0 == 1'd1) & (1'b1 == ap_CS_fsm_state85))) begin
        max_n_reg_952 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond6_i_reg_5683_pp4_iter8_reg == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter9 == 1'b1))) begin
        max_val1_i_reg_930 <= val_0_max_val_i_fu_3384_p3;
    end else if (((mask_val_q0 == 1'd1) & (1'b1 == ap_CS_fsm_state85))) begin
        max_val1_i_reg_930 <= max_val_reg_5582;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_i_fu_1364_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        n4_i_reg_870 <= 8'd0;
    end else if (((exitcond5_i_reg_5302 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        n4_i_reg_870 <= n_2_reg_5306;
    end
end

always @ (posedge ap_clk) begin
    if (((mask_val_q0 == 1'd1) & (1'b1 == ap_CS_fsm_state177))) begin
        n5_i_reg_1163 <= 8'd0;
    end else if (((exitcond_i_fu_4520_p2 == 1'd0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        n5_i_reg_1163 <= n_3_fu_4526_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_i_fu_1317_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        n_i_reg_836 <= 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        n_i_reg_836 <= n_reg_5289;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state189) & (((tmp_239_i_reg_6100 == 1'd1) & (tmp_224_i_reg_6072 == 1'd0)) | ((tmp_239_i_reg_6100 == 1'd1) & (tmp_220_i_reg_6068 == 1'd0))))) begin
        p_1_i_reg_1185 <= 1'd1;
    end else if ((((tmp_134_i_fu_3400_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state96)) | ((mask_val_q0 == 1'd0) & (1'b1 == ap_CS_fsm_state85)) | ((1'b1 == ap_CS_fsm_state189) & ((tmp_239_i_reg_6100 == 1'd0) | ((tmp_224_i_reg_6072 == 1'd1) & (tmp_220_i_reg_6068 == 1'd1)))))) begin
        p_1_i_reg_1185 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (exitcond2_i_reg_5495 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1))) begin
        p_x_assign_reg_895 <= j_2_reg_5499;
    end else if (((exitcond1_i_fu_2167_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state23))) begin
        p_x_assign_reg_895 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        p_y_assign_reg_882 <= i_1_reg_5473;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        p_y_assign_reg_882 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_i_fu_1317_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        phi_mul1_reg_847 <= 18'd0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        phi_mul1_reg_847 <= next_mul1_reg_5280;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond6_i_fu_2749_p2 == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        phi_mul2_reg_964 <= next_mul2_fu_2770_p2;
    end else if (((mask_val_q0 == 1'd1) & (1'b1 == ap_CS_fsm_state85))) begin
        phi_mul2_reg_964 <= 18'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((mask_val_q0 == 1'd1) & (1'b1 == ap_CS_fsm_state177))) begin
        phi_mul3_reg_1174 <= 18'd0;
    end else if (((exitcond_i_fu_4520_p2 == 1'd0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        phi_mul3_reg_1174 <= next_mul3_fu_4541_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        phi_mul_reg_813 <= next_mul_reg_5258;
    end else if ((~((lines_cols_out_full_n == 1'b0) | (lines_rows_out_full_n == 1'b0) | (lineGap_empty_n == 1'b0) | (threshold_empty_n == 1'b0) | (lines_cols_empty_n == 1'b0) | (lines_rows_empty_n == 1'b0) | (edge_cols_empty_n == 1'b0) | (edge_rows_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        phi_mul_reg_813 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (tmp_117_i_fu_2239_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1))) begin
        pt_buf_length_i_fu_376 <= pt_buf_length_fu_2245_p2;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        pt_buf_length_i_fu_376 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_i_fu_1364_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        r_i_reg_859 <= 11'd0;
    end else if (((exitcond4_i_fu_1376_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        r_i_reg_859 <= r_fu_1382_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond8_i_fu_4359_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state174))) begin
        total_1_fu_380 <= total_fu_4377_p2;
    end else if (((exitcond1_i_fu_2167_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state23))) begin
        total_1_fu_380 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state135)) begin
        if ((tmp_25_reg_5970 == 1'd0)) begin
            x_reg_975 <= j_3_reg_5645;
        end else if ((tmp_25_reg_5970 == 1'd1)) begin
            x_reg_975 <= x0_1_fu_4105_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state135)) begin
        if ((tmp_25_reg_5970 == 1'd0)) begin
            xflag_i_reg_1017 <= 1'd1;
        end else if ((tmp_25_reg_5970 == 1'd1)) begin
            xflag_i_reg_1017 <= 1'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state135)) begin
        if ((tmp_25_reg_5970 == 1'd0)) begin
            y_reg_985 <= y0_1_fu_4084_p2;
        end else if ((tmp_25_reg_5970 == 1'd1)) begin
            y_reg_985 <= i_3_reg_5652;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_i_reg_5302_pp2_iter11_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        F2_1_reg_5418 <= F2_1_fu_1622_p2;
        F2_reg_5350 <= F2_fu_1478_p2;
        icmp1_reg_5379 <= icmp1_fu_1542_p2;
        icmp2_reg_5437 <= icmp2_fu_1664_p2;
        icmp3_reg_5447 <= icmp3_fu_1686_p2;
        icmp_reg_5369 <= icmp_fu_1520_p2;
        isneg_1_reg_5394 <= ireg_V_1_fu_1564_p1[32'd63];
        isneg_reg_5326 <= ireg_V_fu_1420_p1[32'd63];
        man_V_1_reg_5339 <= man_V_1_fu_1466_p2;
        man_V_3_reg_5407 <= man_V_3_fu_1610_p2;
        p_Result_123_reg_5334[51 : 0] <= p_Result_123_fu_1462_p1[51 : 0];
        p_Result_124_reg_5402[51 : 0] <= p_Result_124_fu_1606_p1[51 : 0];
        sh_amt_1_reg_5430 <= sh_amt_1_fu_1646_p3;
        sh_amt_reg_5362 <= sh_amt_fu_1502_p3;
        tmp_107_i_reg_5356 <= tmp_107_i_fu_1484_p2;
        tmp_128_reg_5384 <= tmp_128_fu_1548_p1;
        tmp_130_i_reg_5374 <= tmp_130_i_fu_1526_p2;
        tmp_141_reg_5452 <= tmp_141_fu_1692_p1;
        tmp_147_i_reg_5389 <= tmp_147_i_fu_1558_p2;
        tmp_157_i_reg_5412 <= tmp_157_i_fu_1616_p2;
        tmp_164_i_reg_5424 <= tmp_164_i_fu_1628_p2;
        tmp_193_i_reg_5442 <= tmp_193_i_fu_1670_p2;
        tmp_214_i_reg_5457 <= tmp_214_i_fu_1702_p2;
        tmp_98_i_reg_5344 <= tmp_98_i_fu_1472_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        M_reg_5560 <= M_fu_2622_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((mask_val_q0 == 1'd1) & (1'b1 == ap_CS_fsm_state85))) begin
        OP1_V_4_reg_5673 <= OP1_V_4_fu_2742_p1;
        OP1_V_reg_5668 <= OP1_V_fu_2739_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((mask_val_q0 == 1'd1) & (1'b1 == ap_CS_fsm_state177))) begin
        OP1_V_5_reg_6135 <= OP1_V_5_fu_4510_p1;
        OP1_V_6_reg_6140 <= OP1_V_6_fu_4513_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond6_i_reg_5683_pp4_iter7_reg == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        accum_addr_1_reg_5818 <= tmp_51_cast_fu_3362_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_reg_6150_pp6_iter7_reg == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        accum_addr_2_reg_6285 <= tmp_72_cast_fu_5133_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        cnt_reg_5616 <= cnt_fu_2666_p2;
        total_1_load_reg_5607 <= total_1_fu_380;
    end
end

always @ (posedge ap_clk) begin
    if ((~((lines_cols_out_full_n == 1'b0) | (lines_rows_out_full_n == 1'b0) | (lineGap_empty_n == 1'b0) | (threshold_empty_n == 1'b0) | (lines_cols_empty_n == 1'b0) | (lines_rows_empty_n == 1'b0) | (edge_cols_empty_n == 1'b0) | (edge_rows_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cols_reg_5252 <= edge_cols_dout;
        lineGap_read_reg_5241 <= lineGap_dout;
        lines_cols_read_reg_5228 <= lines_cols_dout;
        lines_rows_read_reg_5223 <= lines_rows_dout;
        rows_reg_5246 <= edge_rows_dout;
        threshold_read_reg_5233 <= threshold_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        exitcond2_i_reg_5495 <= exitcond2_i_fu_2213_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        exitcond5_i_reg_5302 <= exitcond5_i_fu_1403_p2;
        exitcond5_i_reg_5302_pp2_iter1_reg <= exitcond5_i_reg_5302;
        n4_i_reg_870_pp2_iter1_reg <= n4_i_reg_870;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp2_stage0_11001)) begin
        exitcond5_i_reg_5302_pp2_iter10_reg <= exitcond5_i_reg_5302_pp2_iter9_reg;
        exitcond5_i_reg_5302_pp2_iter11_reg <= exitcond5_i_reg_5302_pp2_iter10_reg;
        exitcond5_i_reg_5302_pp2_iter12_reg <= exitcond5_i_reg_5302_pp2_iter11_reg;
        exitcond5_i_reg_5302_pp2_iter2_reg <= exitcond5_i_reg_5302_pp2_iter1_reg;
        exitcond5_i_reg_5302_pp2_iter3_reg <= exitcond5_i_reg_5302_pp2_iter2_reg;
        exitcond5_i_reg_5302_pp2_iter4_reg <= exitcond5_i_reg_5302_pp2_iter3_reg;
        exitcond5_i_reg_5302_pp2_iter5_reg <= exitcond5_i_reg_5302_pp2_iter4_reg;
        exitcond5_i_reg_5302_pp2_iter6_reg <= exitcond5_i_reg_5302_pp2_iter5_reg;
        exitcond5_i_reg_5302_pp2_iter7_reg <= exitcond5_i_reg_5302_pp2_iter6_reg;
        exitcond5_i_reg_5302_pp2_iter8_reg <= exitcond5_i_reg_5302_pp2_iter7_reg;
        exitcond5_i_reg_5302_pp2_iter9_reg <= exitcond5_i_reg_5302_pp2_iter8_reg;
        n4_i_reg_870_pp2_iter10_reg <= n4_i_reg_870_pp2_iter9_reg;
        n4_i_reg_870_pp2_iter11_reg <= n4_i_reg_870_pp2_iter10_reg;
        n4_i_reg_870_pp2_iter12_reg <= n4_i_reg_870_pp2_iter11_reg;
        n4_i_reg_870_pp2_iter2_reg <= n4_i_reg_870_pp2_iter1_reg;
        n4_i_reg_870_pp2_iter3_reg <= n4_i_reg_870_pp2_iter2_reg;
        n4_i_reg_870_pp2_iter4_reg <= n4_i_reg_870_pp2_iter3_reg;
        n4_i_reg_870_pp2_iter5_reg <= n4_i_reg_870_pp2_iter4_reg;
        n4_i_reg_870_pp2_iter6_reg <= n4_i_reg_870_pp2_iter5_reg;
        n4_i_reg_870_pp2_iter7_reg <= n4_i_reg_870_pp2_iter6_reg;
        n4_i_reg_870_pp2_iter8_reg <= n4_i_reg_870_pp2_iter7_reg;
        n4_i_reg_870_pp2_iter9_reg <= n4_i_reg_870_pp2_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        exitcond6_i_reg_5683 <= exitcond6_i_fu_2749_p2;
        exitcond6_i_reg_5683_pp4_iter1_reg <= exitcond6_i_reg_5683;
        max_n_reg_952_pp4_iter1_reg <= max_n_reg_952;
        phi_mul240_cast_reg_5678[17 : 0] <= phi_mul240_cast_fu_2745_p1[17 : 0];
        phi_mul240_cast_reg_5678_pp4_iter1_reg[17 : 0] <= phi_mul240_cast_reg_5678[17 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp4_stage0_11001)) begin
        exitcond6_i_reg_5683_pp4_iter2_reg <= exitcond6_i_reg_5683_pp4_iter1_reg;
        exitcond6_i_reg_5683_pp4_iter3_reg <= exitcond6_i_reg_5683_pp4_iter2_reg;
        exitcond6_i_reg_5683_pp4_iter4_reg <= exitcond6_i_reg_5683_pp4_iter3_reg;
        exitcond6_i_reg_5683_pp4_iter5_reg <= exitcond6_i_reg_5683_pp4_iter4_reg;
        exitcond6_i_reg_5683_pp4_iter6_reg <= exitcond6_i_reg_5683_pp4_iter5_reg;
        exitcond6_i_reg_5683_pp4_iter7_reg <= exitcond6_i_reg_5683_pp4_iter6_reg;
        exitcond6_i_reg_5683_pp4_iter8_reg <= exitcond6_i_reg_5683_pp4_iter7_reg;
        is_neg_reg_5724_pp4_iter3_reg <= is_neg_reg_5724;
        is_neg_reg_5724_pp4_iter4_reg <= is_neg_reg_5724_pp4_iter3_reg;
        is_neg_reg_5724_pp4_iter5_reg <= is_neg_reg_5724_pp4_iter4_reg;
        max_n_reg_952_pp4_iter2_reg <= max_n_reg_952_pp4_iter1_reg;
        max_n_reg_952_pp4_iter3_reg <= max_n_reg_952_pp4_iter2_reg;
        max_n_reg_952_pp4_iter4_reg <= max_n_reg_952_pp4_iter3_reg;
        max_n_reg_952_pp4_iter5_reg <= max_n_reg_952_pp4_iter4_reg;
        max_n_reg_952_pp4_iter6_reg <= max_n_reg_952_pp4_iter5_reg;
        max_n_reg_952_pp4_iter7_reg <= max_n_reg_952_pp4_iter6_reg;
        max_n_reg_952_pp4_iter8_reg <= max_n_reg_952_pp4_iter7_reg;
        msb_idx_reg_5745_pp4_iter4_reg <= msb_idx_reg_5745;
        msb_idx_reg_5745_pp4_iter5_reg <= msb_idx_reg_5745_pp4_iter4_reg;
        phi_mul240_cast_reg_5678_pp4_iter2_reg[17 : 0] <= phi_mul240_cast_reg_5678_pp4_iter1_reg[17 : 0];
        phi_mul240_cast_reg_5678_pp4_iter3_reg[17 : 0] <= phi_mul240_cast_reg_5678_pp4_iter2_reg[17 : 0];
        phi_mul240_cast_reg_5678_pp4_iter4_reg[17 : 0] <= phi_mul240_cast_reg_5678_pp4_iter3_reg[17 : 0];
        phi_mul240_cast_reg_5678_pp4_iter5_reg[17 : 0] <= phi_mul240_cast_reg_5678_pp4_iter4_reg[17 : 0];
        phi_mul240_cast_reg_5678_pp4_iter6_reg[17 : 0] <= phi_mul240_cast_reg_5678_pp4_iter5_reg[17 : 0];
        phi_mul240_cast_reg_5678_pp4_iter7_reg[17 : 0] <= phi_mul240_cast_reg_5678_pp4_iter6_reg[17 : 0];
        tmp_138_i_reg_5719_pp4_iter3_reg <= tmp_138_i_reg_5719;
        tmp_138_i_reg_5719_pp4_iter4_reg <= tmp_138_i_reg_5719_pp4_iter3_reg;
        tmp_138_i_reg_5719_pp4_iter5_reg <= tmp_138_i_reg_5719_pp4_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        exitcond_i_reg_6150 <= exitcond_i_fu_4520_p2;
        exitcond_i_reg_6150_pp6_iter1_reg <= exitcond_i_reg_6150;
        phi_mul242_cast_reg_6145[17 : 0] <= phi_mul242_cast_fu_4516_p1[17 : 0];
        phi_mul242_cast_reg_6145_pp6_iter1_reg[17 : 0] <= phi_mul242_cast_reg_6145[17 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp6_stage0_11001)) begin
        exitcond_i_reg_6150_pp6_iter2_reg <= exitcond_i_reg_6150_pp6_iter1_reg;
        exitcond_i_reg_6150_pp6_iter3_reg <= exitcond_i_reg_6150_pp6_iter2_reg;
        exitcond_i_reg_6150_pp6_iter4_reg <= exitcond_i_reg_6150_pp6_iter3_reg;
        exitcond_i_reg_6150_pp6_iter5_reg <= exitcond_i_reg_6150_pp6_iter4_reg;
        exitcond_i_reg_6150_pp6_iter6_reg <= exitcond_i_reg_6150_pp6_iter5_reg;
        exitcond_i_reg_6150_pp6_iter7_reg <= exitcond_i_reg_6150_pp6_iter6_reg;
        exitcond_i_reg_6150_pp6_iter8_reg <= exitcond_i_reg_6150_pp6_iter7_reg;
        is_neg_3_reg_6191_pp6_iter3_reg <= is_neg_3_reg_6191;
        is_neg_3_reg_6191_pp6_iter4_reg <= is_neg_3_reg_6191_pp6_iter3_reg;
        is_neg_3_reg_6191_pp6_iter5_reg <= is_neg_3_reg_6191_pp6_iter4_reg;
        msb_idx_6_reg_6212_pp6_iter4_reg <= msb_idx_6_reg_6212;
        msb_idx_6_reg_6212_pp6_iter5_reg <= msb_idx_6_reg_6212_pp6_iter4_reg;
        phi_mul242_cast_reg_6145_pp6_iter2_reg[17 : 0] <= phi_mul242_cast_reg_6145_pp6_iter1_reg[17 : 0];
        phi_mul242_cast_reg_6145_pp6_iter3_reg[17 : 0] <= phi_mul242_cast_reg_6145_pp6_iter2_reg[17 : 0];
        phi_mul242_cast_reg_6145_pp6_iter4_reg[17 : 0] <= phi_mul242_cast_reg_6145_pp6_iter3_reg[17 : 0];
        phi_mul242_cast_reg_6145_pp6_iter5_reg[17 : 0] <= phi_mul242_cast_reg_6145_pp6_iter4_reg[17 : 0];
        phi_mul242_cast_reg_6145_pp6_iter6_reg[17 : 0] <= phi_mul242_cast_reg_6145_pp6_iter5_reg[17 : 0];
        phi_mul242_cast_reg_6145_pp6_iter7_reg[17 : 0] <= phi_mul242_cast_reg_6145_pp6_iter6_reg[17 : 0];
        tmp_253_i_reg_6186_pp6_iter3_reg <= tmp_253_i_reg_6186;
        tmp_253_i_reg_6186_pp6_iter4_reg <= tmp_253_i_reg_6186_pp6_iter3_reg;
        tmp_253_i_reg_6186_pp6_iter5_reg <= tmp_253_i_reg_6186_pp6_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state169)) begin
        i1_2_reg_6013 <= i1_2_fu_4158_p3;
        j1_2_reg_6018 <= j1_2_fu_4166_p3;
        or_cond1_i_reg_6023 <= or_cond1_i_fu_4210_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state176)) begin
        i1_5_reg_6114 <= i1_5_fu_4449_p3;
        j1_5_reg_6120 <= j1_5_fu_4457_p3;
        mask_val_addr_3_reg_6126 <= tmp_65_cast_fu_4505_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        i_1_reg_5473 <= i_1_fu_2172_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        i_3_reg_5652 <= pt_buf_val_y_q0;
        j_3_reg_5645 <= pt_buf_val_x_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_reg_5267 <= i_fu_1322_p2;
        next_mul_reg_5258 <= next_mul_fu_1307_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state98)) begin
        icmp5_reg_5900 <= icmp5_fu_3520_p2;
        icmp6_reg_5925 <= icmp6_fu_3669_p2;
        is_neg_1_reg_5880 <= p_Val2_118_fu_3433_p2[32'd15];
        msb_idx_2_reg_5890 <= msb_idx_2_fu_3484_p2;
        msb_idx_3_reg_5895 <= msb_idx_3_fu_3502_p3;
        msb_idx_4_reg_5915 <= msb_idx_4_fu_3633_p2;
        msb_idx_5_reg_5920 <= msb_idx_5_fu_3651_p3;
        p_Result_102_reg_5930[1 : 0] <= p_Result_102_fu_3737_p3[1 : 0];
        p_Result_97_reg_5905[1 : 0] <= p_Result_97_fu_3588_p3[1 : 0];
        p_Val2_118_reg_5869 <= p_Val2_118_fu_3433_p2;
        p_Val2_123_reg_5910 <= p_Val2_123_fu_3601_p3;
        tmp_141_i_reg_5875 <= tmp_141_i_fu_3438_p2;
        tmp_V_reg_5885 <= tmp_V_fu_3451_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state83)) begin
        idx_reg_5626 <= grp_fu_2677_p2;
        tmp_115_i_reg_5631 <= tmp_115_i_fu_2682_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond6_i_reg_5683_pp4_iter6_reg == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        isNeg_1_reg_5807 <= sh_assign_2_fu_3234_p2[32'd8];
        loc_V_12_reg_5802 <= loc_V_12_fu_3226_p1;
        p_Result_135_reg_5797 <= p_Val2_115_fu_3204_p1[32'd31];
        sh_assign_3_reg_5812 <= sh_assign_3_fu_3258_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_reg_6150_pp6_iter6_reg == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        isNeg_2_reg_6274 <= sh_assign_4_fu_5005_p2[32'd8];
        loc_V_16_reg_6269 <= loc_V_16_fu_4997_p1;
        p_Result_149_reg_6264 <= p_Val2_137_fu_4975_p1[32'd31];
        sh_assign_5_reg_6279 <= sh_assign_5_fu_5029_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state97)) begin
        is_neg_2_reg_5863 <= is_neg_2_fu_3425_p1[32'd15];
        p_Val2_121_reg_5854 <= trigtab_V_q1;
        p_Val2_s_reg_5847 <= trigtab_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_reg_6150_pp6_iter1_reg == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        is_neg_3_reg_6191 <= p_Val2_126_fu_4582_p2[32'd48];
        num_zeros_3_reg_6207 <= num_zeros_3_fu_4650_p1;
        p_Val2_128_reg_6196 <= p_Val2_128_fu_4612_p3;
        p_Val2_62_cast_i_reg_6201[47 : 0] <= p_Val2_62_cast_i_fu_4620_p1[47 : 0];
        tmp_253_i_reg_6186 <= tmp_253_i_fu_4592_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond6_i_reg_5683_pp4_iter1_reg == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        is_neg_reg_5724 <= p_Val2_101_fu_2811_p2[32'd48];
        num_zeros_reg_5740 <= num_zeros_fu_2879_p1;
        p_Val2_103_reg_5729 <= p_Val2_103_fu_2841_p3;
        p_Val2_42_cast_i_reg_5734[47 : 0] <= p_Val2_42_cast_i_fu_2849_p1[47 : 0];
        tmp_138_i_reg_5719 <= tmp_138_i_fu_2821_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        j_2_reg_5499 <= j_2_fu_2218_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state174)) begin
        k_1_reg_6079 <= k_1_fu_4365_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state168)) begin
        k_reg_5998 <= k_fu_4118_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond7_i_fu_4112_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state168))) begin
        line_end_x_addr_reg_6008 <= tmp_221_i_fu_4124_p1;
        line_end_y_addr_reg_6003 <= tmp_221_i_fu_4124_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state172)) begin
        line_end_x_load_1_reg_6058 <= line_end_x_q0;
        line_end_x_load_2_reg_6063 <= line_end_x_q1;
        tmp_220_i_reg_6068 <= tmp_220_i_fu_4323_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state175)) begin
        line_end_x_load_reg_6109 <= line_end_x_q1;
        line_end_y_load_reg_6104 <= line_end_y_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        loc_V_4_reg_5539 <= loc_V_4_fu_2284_p1;
        loc_V_reg_5531 <= {{p_Val2_78_fu_2262_p1[30:23]}};
        p_Result_61_reg_5522 <= p_Val2_78_fu_2262_p1[32'd31];
        tmp_148_reg_5550 <= tmp_148_fu_2303_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (exitcond2_i_fu_2213_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        mask_val_addr_reg_5509 <= tmp_40_cast_fu_2233_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state177)) begin
        mask_val_load_2_reg_6131 <= mask_val_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        max_val_reg_5582 <= max_val_fu_2652_p2;
        p_i_cast_reg_5577 <= p_i_cast_fu_2648_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_253_i_reg_6186 == 1'd0) & (exitcond_i_reg_6150_pp6_iter2_reg == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        msb_idx_6_reg_6212 <= msb_idx_6_fu_4654_p2;
        tmp32_V_21_reg_6217 <= tmp32_V_21_fu_4774_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_138_i_reg_5719 == 1'd0) & (exitcond6_i_reg_5683_pp4_iter2_reg == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        msb_idx_reg_5745 <= msb_idx_fu_2883_p2;
        tmp32_V_6_reg_5750 <= tmp32_V_6_fu_3003_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        n_1_reg_5687 <= n_1_fu_2755_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        n_2_reg_5306 <= n_2_fu_1409_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        n_reg_5289 <= n_fu_1370_p2;
        next_mul1_reg_5280 <= next_mul1_fu_1358_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_138_i_reg_5719_pp4_iter4_reg == 1'd0) & (exitcond6_i_reg_5683_pp4_iter4_reg == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        p_Result_24_i_reg_5760 <= {{tmp32_V_24_fu_3011_p1[30:23]}};
        tmp32_V_24_reg_5755 <= tmp32_V_24_fu_3011_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_141_i_reg_5875 == 1'd0) & (1'b1 == ap_CS_fsm_state101))) begin
        p_Result_26_i_reg_5955 <= {{tmp32_V_25_fu_3806_p1[30:23]}};
        tmp32_V_25_reg_5950 <= tmp32_V_25_fu_3806_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_178_i_reg_5940 == 1'd0) & (1'b1 == ap_CS_fsm_state101))) begin
        p_Result_32_i_reg_5965 <= {{tmp32_V_26_fu_3820_p1[30:23]}};
        tmp32_V_26_reg_5960 <= tmp32_V_26_fu_3820_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_253_i_reg_6186_pp6_iter4_reg == 1'd0) & (exitcond_i_reg_6150_pp6_iter4_reg == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        p_Result_40_i_reg_6227 <= {{tmp32_V_27_fu_4782_p1[30:23]}};
        tmp32_V_27_reg_6222 <= tmp32_V_27_fu_4782_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond6_i_reg_5683 == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        p_Val2_100_reg_5707 <= p_Val2_100_fu_2791_p2;
        p_Val2_23_reg_5713 <= p_Val2_23_fu_2800_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_reg_6150 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        p_Val2_125_reg_6174 <= p_Val2_125_fu_4562_p2;
        p_Val2_24_reg_6180 <= p_Val2_24_fu_4571_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        p_Val2_i_i_i_reg_5567 <= grp_sqrt_fixed_32_32_s_fu_1258_ap_return;
        tmp_155_reg_5572 <= tmp_155_fu_2628_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state27) | ((exitcond5_i_reg_5302 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
        reg_1295 <= grp_fu_1275_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state38) | ((exitcond5_i_reg_5302_pp2_iter2_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter3 == 1'b1)))) begin
        reg_1301 <= grp_fu_1263_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond6_i_reg_5683_pp4_iter5_reg == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        t_V_10_reg_5770 <= t_V_10_fu_3076_p1;
        tmp_273_i_i_reg_5782 <= tmp_273_i_i_fu_3096_p2;
        tmp_i_i_390_reg_5776 <= tmp_i_i_390_fu_3090_p2;
        x_assign_8_reg_5765 <= x_assign_8_fu_3069_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_reg_6150_pp6_iter5_reg == 1'd0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        t_V_18_reg_6237 <= t_V_18_fu_4847_p1;
        tmp_273_i_i1_reg_6249 <= tmp_273_i_i1_fu_4867_p2;
        tmp_i_i1_reg_6243 <= tmp_i_i1_fu_4861_p2;
        x_assign_s_reg_6232 <= x_assign_s_fu_4840_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state99)) begin
        tmp32_V_15_reg_5945 <= tmp32_V_15_fu_3799_p3;
        tmp_178_i_reg_5940 <= tmp_178_i_fu_3773_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_141_i_reg_5875 == 1'd0) & (1'b1 == ap_CS_fsm_state99))) begin
        tmp32_V_9_reg_5935 <= tmp32_V_9_fu_3766_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_220_i_reg_6068 == 1'd1) & (1'b1 == ap_CS_fsm_state173))) begin
        tmp_224_i_reg_6072 <= tmp_224_i_fu_4354_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond8_i_fu_4359_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state174))) begin
        tmp_233_reg_6094 <= tmp_233_fu_4391_p1;
        tmp_239_i_reg_6100 <= tmp_239_i_fu_4410_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state102)) begin
        tmp_25_reg_5970 <= tmp_25_fu_4032_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_i_fu_2167_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state23))) begin
        tmp_34_reg_5478[17 : 6] <= tmp_34_fu_2202_p2[17 : 6];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        tmp_i_i_i_reg_5517 <= grp_log_generic_float_s_fu_1213_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((((tmp_112_i_fu_2661_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state48)) | ((tmp_115_i_reg_5631 == 1'd1) & (ap_phi_mux_p_1_i_phi_fu_1190_p8 == 1'd1) & (1'b1 == ap_CS_fsm_state190)))) begin
        total_5_i_reg_1204 <= total_1_fu_380;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_i_reg_5302_pp2_iter10_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        v_assign_1_reg_5321 <= grp_sin_or_cos_float_s_fu_1243_ap_return;
        v_assign_reg_5316 <= grp_sin_or_cos_float_s_fu_1228_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        x_assign_7_reg_5555 <= x_assign_7_fu_2471_p3;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter9 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        accum_address0 = accum_addr_2_reg_6285;
    end else if (((ap_enable_reg_pp4_iter8 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        accum_address0 = tmp_51_cast_fu_3362_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        accum_address0 = tmp_32_cast_fu_1398_p1;
    end else begin
        accum_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter8 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        accum_address1 = tmp_72_cast_fu_5133_p1;
    end else if (((ap_enable_reg_pp4_iter9 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        accum_address1 = accum_addr_1_reg_5818;
    end else begin
        accum_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | ((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter8 == 1'b1)) | ((ap_enable_reg_pp6_iter9 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001)))) begin
        accum_ce0 = 1'b1;
    end else begin
        accum_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter9 == 1'b1)) | ((ap_enable_reg_pp6_iter8 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001)))) begin
        accum_ce1 = 1'b1;
    end else begin
        accum_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter9 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        accum_d0 = tmp_269_i_fu_5138_p2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        accum_d0 = 32'd0;
    end else begin
        accum_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((exitcond4_i_fu_1376_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6)) | ((exitcond_i_reg_6150_pp6_iter8_reg == 1'd0) & (ap_enable_reg_pp6_iter9 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001)))) begin
        accum_we0 = 1'b1;
    end else begin
        accum_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond6_i_reg_5683_pp4_iter8_reg == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter9 == 1'b1))) begin
        accum_we1 = 1'b1;
    end else begin
        accum_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond5_i_fu_1403_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state8 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state8 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond2_i_fu_2213_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state24 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state24 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond6_i_fu_2749_p2 == 1'd1)) begin
        ap_condition_pp4_exit_iter0_state86 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter0_state86 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_i_fu_4520_p2 == 1'd1)) begin
        ap_condition_pp6_exit_iter0_state178 = 1'b1;
    end else begin
        ap_condition_pp6_exit_iter0_state178 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state191)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter13 == 1'b0) & (ap_enable_reg_pp2_iter12 == 1'b0) & (ap_enable_reg_pp2_iter11 == 1'b0) & (ap_enable_reg_pp2_iter10 == 1'b0) & (ap_enable_reg_pp2_iter9 == 1'b0) & (ap_enable_reg_pp2_iter8 == 1'b0) & (ap_enable_reg_pp2_iter7 == 1'b0) & (ap_enable_reg_pp2_iter6 == 1'b0) & (ap_enable_reg_pp2_iter5 == 1'b0) & (ap_enable_reg_pp2_iter4 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter9 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b0) & (ap_enable_reg_pp4_iter8 == 1'b0) & (ap_enable_reg_pp4_iter7 == 1'b0) & (ap_enable_reg_pp4_iter6 == 1'b0) & (ap_enable_reg_pp4_iter5 == 1'b0) & (ap_enable_reg_pp4_iter4 == 1'b0) & (ap_enable_reg_pp4_iter3 == 1'b0) & (ap_enable_reg_pp4_iter2 == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter9 == 1'b0) & (ap_enable_reg_pp6_iter8 == 1'b0) & (ap_enable_reg_pp6_iter7 == 1'b0) & (ap_enable_reg_pp6_iter6 == 1'b0) & (ap_enable_reg_pp6_iter5 == 1'b0) & (ap_enable_reg_pp6_iter4 == 1'b0) & (ap_enable_reg_pp6_iter3 == 1'b0) & (ap_enable_reg_pp6_iter2 == 1'b0) & (ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter0 == 1'b0))) begin
        ap_idle_pp6 = 1'b1;
    end else begin
        ap_idle_pp6 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state135)) begin
        if ((tmp_25_reg_5970 == 1'd0)) begin
            ap_phi_mux_dx_i_phi_fu_998_p4 = 32'd1;
        end else if ((tmp_25_reg_5970 == 1'd1)) begin
            ap_phi_mux_dx_i_phi_fu_998_p4 = dx0_fu_4091_p3;
        end else begin
            ap_phi_mux_dx_i_phi_fu_998_p4 = 'bx;
        end
    end else begin
        ap_phi_mux_dx_i_phi_fu_998_p4 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state135)) begin
        if ((tmp_25_reg_5970 == 1'd0)) begin
            ap_phi_mux_dy_i_phi_fu_1009_p4 = dy0_fu_4070_p3;
        end else if ((tmp_25_reg_5970 == 1'd1)) begin
            ap_phi_mux_dy_i_phi_fu_1009_p4 = 32'd1;
        end else begin
            ap_phi_mux_dy_i_phi_fu_1009_p4 = 'bx;
        end
    end else begin
        ap_phi_mux_dy_i_phi_fu_1009_p4 = 'bx;
    end
end

always @ (*) begin
    if (((or_cond1_i_reg_6023 == 1'd1) & (1'b1 == ap_CS_fsm_state170))) begin
        if (((tmp_241_i_fu_4268_p2 == 1'd0) & (mask_val_q0 == 1'd0))) begin
            ap_phi_mux_gap_1_i_phi_fu_1100_p4 = gap_fu_4261_p2;
        end else if ((mask_val_q0 == 1'd1)) begin
            ap_phi_mux_gap_1_i_phi_fu_1100_p4 = 32'd0;
        end else begin
            ap_phi_mux_gap_1_i_phi_fu_1100_p4 = 'bx;
        end
    end else begin
        ap_phi_mux_gap_1_i_phi_fu_1100_p4 = 'bx;
    end
end

always @ (*) begin
    if (((exitcond6_i_reg_5683 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        ap_phi_mux_max_n_phi_fu_956_p4 = n_1_reg_5687;
    end else begin
        ap_phi_mux_max_n_phi_fu_956_p4 = max_n_reg_952;
    end
end

always @ (*) begin
    if (((exitcond5_i_reg_5302 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        ap_phi_mux_n4_i_phi_fu_874_p4 = n_2_reg_5306;
    end else begin
        ap_phi_mux_n4_i_phi_fu_874_p4 = n4_i_reg_870;
    end
end

always @ (*) begin
    if (((exitcond2_i_reg_5495 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        ap_phi_mux_p_x_assign_phi_fu_900_p4 = j_2_reg_5499;
    end else begin
        ap_phi_mux_p_x_assign_phi_fu_900_p4 = p_x_assign_reg_895;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state191)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        edge_cols_blk_n = edge_cols_empty_n;
    end else begin
        edge_cols_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((lines_cols_out_full_n == 1'b0) | (lines_rows_out_full_n == 1'b0) | (lineGap_empty_n == 1'b0) | (threshold_empty_n == 1'b0) | (lines_cols_empty_n == 1'b0) | (lines_rows_empty_n == 1'b0) | (edge_cols_empty_n == 1'b0) | (edge_rows_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        edge_cols_read = 1'b1;
    end else begin
        edge_cols_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        edge_rows_blk_n = edge_rows_empty_n;
    end else begin
        edge_rows_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((lines_cols_out_full_n == 1'b0) | (lines_rows_out_full_n == 1'b0) | (lineGap_empty_n == 1'b0) | (threshold_empty_n == 1'b0) | (lines_cols_empty_n == 1'b0) | (lines_rows_empty_n == 1'b0) | (edge_cols_empty_n == 1'b0) | (edge_rows_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        edge_rows_read = 1'b1;
    end else begin
        edge_rows_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        edge_val_ce0 = 1'b1;
    end else begin
        edge_val_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        grp_fu_1263_p0 = tmp_i_i_i_reg_5517;
    end else if (((ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        grp_fu_1263_p0 = reg_1295;
    end else begin
        grp_fu_1263_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        grp_fu_1263_p1 = 32'd1069066811;
    end else if (((ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        grp_fu_1263_p1 = 32'd1016003125;
    end else begin
        grp_fu_1263_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter4 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        grp_fu_1269_p0 = tmp32_V_21_reg_6217;
    end else if ((1'b1 == ap_CS_fsm_state100)) begin
        grp_fu_1269_p0 = tmp32_V_9_reg_5935;
    end else if (((ap_enable_reg_pp4_iter4 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        grp_fu_1269_p0 = tmp32_V_6_reg_5750;
    end else begin
        grp_fu_1269_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_fu_1275_p0 = pt_buf_length_i_fu_376;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        grp_fu_1275_p0 = n4_cast84_i_fu_1415_p1;
    end else begin
        grp_fu_1275_p0 = 'bx;
    end
end

always @ (*) begin
    if (((tmp_112_i_fu_2661_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state48))) begin
        grp_fu_2677_ap_start = 1'b1;
    end else begin
        grp_fu_2677_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_25_fu_4032_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state102))) begin
        grp_fu_4048_ap_start = 1'b1;
    end else begin
        grp_fu_4048_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_25_fu_4032_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state102))) begin
        grp_fu_4064_ap_start = 1'b1;
    end else begin
        grp_fu_4064_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        lineGap_blk_n = lineGap_empty_n;
    end else begin
        lineGap_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((lines_cols_out_full_n == 1'b0) | (lines_rows_out_full_n == 1'b0) | (lineGap_empty_n == 1'b0) | (threshold_empty_n == 1'b0) | (lines_cols_empty_n == 1'b0) | (lines_rows_empty_n == 1'b0) | (edge_cols_empty_n == 1'b0) | (edge_rows_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        lineGap_read = 1'b1;
    end else begin
        lineGap_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state170)) begin
        line_end_x_address0 = line_end_x_addr_reg_6008;
    end else if ((1'b1 == ap_CS_fsm_state168)) begin
        line_end_x_address0 = 64'd1;
    end else begin
        line_end_x_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state174)) begin
        line_end_x_address1 = tmp_240_i_fu_4371_p1;
    end else if ((1'b1 == ap_CS_fsm_state168)) begin
        line_end_x_address1 = 64'd0;
    end else begin
        line_end_x_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state170) | (1'b1 == ap_CS_fsm_state168))) begin
        line_end_x_ce0 = 1'b1;
    end else begin
        line_end_x_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state174) | (1'b1 == ap_CS_fsm_state168))) begin
        line_end_x_ce1 = 1'b1;
    end else begin
        line_end_x_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((or_cond1_i_reg_6023 == 1'd1) & (mask_val_q0 == 1'd1) & (1'b1 == ap_CS_fsm_state170))) begin
        line_end_x_we0 = 1'b1;
    end else begin
        line_end_x_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state174) | (1'b1 == ap_CS_fsm_state172))) begin
        line_end_y_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state170)) begin
        line_end_y_address0 = line_end_y_addr_reg_6003;
    end else begin
        line_end_y_address0 = 'bx;
    end
end

always @ (*) begin
    if (((exitcond8_i_fu_4359_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state174))) begin
        line_end_y_address1 = tmp_240_i_fu_4371_p1;
    end else if (((1'b1 == ap_CS_fsm_state172) | ((exitcond8_i_fu_4359_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state174)))) begin
        line_end_y_address1 = 64'd0;
    end else begin
        line_end_y_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state174) | (1'b1 == ap_CS_fsm_state172) | (1'b1 == ap_CS_fsm_state170))) begin
        line_end_y_ce0 = 1'b1;
    end else begin
        line_end_y_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state172) | ((exitcond8_i_fu_4359_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state174)) | ((exitcond8_i_fu_4359_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state174)))) begin
        line_end_y_ce1 = 1'b1;
    end else begin
        line_end_y_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((or_cond1_i_reg_6023 == 1'd1) & (mask_val_q0 == 1'd1) & (1'b1 == ap_CS_fsm_state170))) begin
        line_end_y_we0 = 1'b1;
    end else begin
        line_end_y_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        lines_cols_blk_n = lines_cols_empty_n;
    end else begin
        lines_cols_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        lines_cols_out_blk_n = lines_cols_out_full_n;
    end else begin
        lines_cols_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((lines_cols_out_full_n == 1'b0) | (lines_rows_out_full_n == 1'b0) | (lineGap_empty_n == 1'b0) | (threshold_empty_n == 1'b0) | (lines_cols_empty_n == 1'b0) | (lines_rows_empty_n == 1'b0) | (edge_cols_empty_n == 1'b0) | (edge_rows_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        lines_cols_out_write = 1'b1;
    end else begin
        lines_cols_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((lines_cols_out_full_n == 1'b0) | (lines_rows_out_full_n == 1'b0) | (lineGap_empty_n == 1'b0) | (threshold_empty_n == 1'b0) | (lines_cols_empty_n == 1'b0) | (lines_rows_empty_n == 1'b0) | (edge_cols_empty_n == 1'b0) | (edge_rows_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        lines_cols_read = 1'b1;
    end else begin
        lines_cols_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        lines_rows_blk_n = lines_rows_empty_n;
    end else begin
        lines_rows_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        lines_rows_out_blk_n = lines_rows_out_full_n;
    end else begin
        lines_rows_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((lines_cols_out_full_n == 1'b0) | (lines_rows_out_full_n == 1'b0) | (lineGap_empty_n == 1'b0) | (threshold_empty_n == 1'b0) | (lines_cols_empty_n == 1'b0) | (lines_rows_empty_n == 1'b0) | (edge_cols_empty_n == 1'b0) | (edge_rows_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        lines_rows_out_write = 1'b1;
    end else begin
        lines_rows_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((lines_cols_out_full_n == 1'b0) | (lines_rows_out_full_n == 1'b0) | (lineGap_empty_n == 1'b0) | (threshold_empty_n == 1'b0) | (lines_cols_empty_n == 1'b0) | (lines_rows_empty_n == 1'b0) | (edge_cols_empty_n == 1'b0) | (edge_rows_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        lines_rows_read = 1'b1;
    end else begin
        lines_rows_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state189)) begin
        lines_val_address0 = tmp_61_cast_fu_5198_p1;
    end else if ((1'b1 == ap_CS_fsm_state174)) begin
        lines_val_address0 = tmp_235_i_fu_4386_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        lines_val_address0 = tmp_29_cast_fu_1353_p1;
    end else begin
        lines_val_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state191)) begin
        lines_val_address1 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state189)) begin
        lines_val_address1 = tmp_59_cast_fu_5188_p1;
    end else if ((1'b1 == ap_CS_fsm_state174)) begin
        lines_val_address1 = tmp_60_cast_fu_4401_p1;
    end else begin
        lines_val_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state174) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state189))) begin
        lines_val_ce0 = 1'b1;
    end else begin
        lines_val_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state174) | (1'b1 == ap_CS_fsm_state191) | (1'b1 == ap_CS_fsm_state189))) begin
        lines_val_ce1 = 1'b1;
    end else begin
        lines_val_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state189)) begin
        lines_val_d0 = tmp_236_fu_5208_p1;
    end else if ((1'b1 == ap_CS_fsm_state174)) begin
        lines_val_d0 = tmp_232_fu_4382_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        lines_val_d0 = 16'd0;
    end else begin
        lines_val_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state191)) begin
        lines_val_d1 = tmp_240_fu_5213_p1;
    end else if ((1'b1 == ap_CS_fsm_state189)) begin
        lines_val_d1 = tmp_234_fu_5203_p1;
    end else if ((1'b1 == ap_CS_fsm_state174)) begin
        lines_val_d1 = tmp_235_fu_4406_p1;
    end else begin
        lines_val_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((exitcond8_i_fu_4359_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state174)) | ((tmp_91_i_fu_1332_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3)) | ((1'b1 == ap_CS_fsm_state189) & ((tmp_224_i_reg_6072 == 1'd0) | (tmp_220_i_reg_6068 == 1'd0))))) begin
        lines_val_we0 = 1'b1;
    end else begin
        lines_val_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state191) | ((exitcond8_i_fu_4359_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state174)) | ((1'b1 == ap_CS_fsm_state189) & ((tmp_224_i_reg_6072 == 1'd0) | (tmp_220_i_reg_6068 == 1'd0))))) begin
        lines_val_we1 = 1'b1;
    end else begin
        lines_val_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        mask_table1_ce0 = 1'b1;
    end else begin
        mask_table1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter6 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        mask_table3_address0 = tmp_274_i_i1_fu_4883_p1;
    end else if (((ap_enable_reg_pp4_iter6 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        mask_table3_address0 = tmp_274_i_i_fu_3112_p1;
    end else begin
        mask_table3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter6 == 1'b1)) | ((ap_enable_reg_pp6_iter6 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001)))) begin
        mask_table3_ce0 = 1'b1;
    end else begin
        mask_table3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state188)) begin
        mask_val_address0 = mask_val_addr_3_reg_6126;
    end else if ((1'b1 == ap_CS_fsm_state176)) begin
        mask_val_address0 = tmp_65_cast_fu_4505_p1;
    end else if ((1'b1 == ap_CS_fsm_state169)) begin
        mask_val_address0 = tmp_58_cast_fu_4256_p1;
    end else if ((1'b1 == ap_CS_fsm_state84)) begin
        mask_val_address0 = tmp_44_cast_fu_2734_p1;
    end else if ((((tmp_117_i_fu_2239_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0)) | ((tmp_117_i_fu_2239_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0)))) begin
        mask_val_address0 = mask_val_addr_reg_5509;
    end else begin
        mask_val_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state169) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state188) | (1'b1 == ap_CS_fsm_state176) | ((1'b0 == ap_block_pp3_stage0_11001) & (tmp_117_i_fu_2239_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1)) | ((1'b0 == ap_block_pp3_stage0_11001) & (tmp_117_i_fu_2239_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1)))) begin
        mask_val_ce0 = 1'b1;
    end else begin
        mask_val_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state188) | ((tmp_117_i_fu_2239_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0)))) begin
        mask_val_d0 = 1'd0;
    end else if (((tmp_117_i_fu_2239_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        mask_val_d0 = 1'd1;
    end else begin
        mask_val_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (tmp_117_i_fu_2239_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1)) | ((1'b0 == ap_block_pp3_stage0_11001) & (tmp_117_i_fu_2239_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1)) | ((mask_val_load_2_reg_6131 == 1'd1) & (1'b1 == ap_CS_fsm_state188)))) begin
        mask_val_we0 = 1'b1;
    end else begin
        mask_val_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter6 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        one_half_table4_address0 = tmp_274_i_i1_fu_4883_p1;
    end else if (((ap_enable_reg_pp4_iter6 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        one_half_table4_address0 = tmp_274_i_i_fu_3112_p1;
    end else begin
        one_half_table4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter6 == 1'b1)) | ((ap_enable_reg_pp6_iter6 == 1'b1) & (1'b0 == ap_block_pp6_stage0_11001)))) begin
        one_half_table4_ce0 = 1'b1;
    end else begin
        one_half_table4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state83)) begin
        pt_buf_val_x_address0 = tmp_121_i_fu_2688_p1;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        pt_buf_val_x_address0 = tmp_i_i_fu_2251_p1;
    end else begin
        pt_buf_val_x_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state83) | ((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1)))) begin
        pt_buf_val_x_ce0 = 1'b1;
    end else begin
        pt_buf_val_x_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (tmp_117_i_fu_2239_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1))) begin
        pt_buf_val_x_we0 = 1'b1;
    end else begin
        pt_buf_val_x_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state83)) begin
        pt_buf_val_y_address0 = tmp_121_i_fu_2688_p1;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        pt_buf_val_y_address0 = tmp_i_i_fu_2251_p1;
    end else begin
        pt_buf_val_y_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state83) | ((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1)))) begin
        pt_buf_val_y_ce0 = 1'b1;
    end else begin
        pt_buf_val_y_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (tmp_117_i_fu_2239_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1))) begin
        pt_buf_val_y_we0 = 1'b1;
    end else begin
        pt_buf_val_y_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        threshold_blk_n = threshold_empty_n;
    end else begin
        threshold_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((lines_cols_out_full_n == 1'b0) | (lines_rows_out_full_n == 1'b0) | (lineGap_empty_n == 1'b0) | (threshold_empty_n == 1'b0) | (lines_cols_empty_n == 1'b0) | (lines_rows_empty_n == 1'b0) | (edge_cols_empty_n == 1'b0) | (edge_rows_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        threshold_read = 1'b1;
    end else begin
        threshold_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0))) begin
        trigtab_V_address0 = tmp_67_cast_fu_4553_p1;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        trigtab_V_address0 = tmp_52_cast_fu_3420_p1;
    end else if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0))) begin
        trigtab_V_address0 = tmp_46_cast_fu_2782_p1;
    end else if (((ap_enable_reg_pp2_iter13 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        trigtab_V_address0 = tmp_95_i_fu_1708_p1;
    end else begin
        trigtab_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0))) begin
        trigtab_V_address1 = tmp_250_i_fu_4532_p1;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        trigtab_V_address1 = tmp_140_i_fu_3405_p1;
    end else if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0))) begin
        trigtab_V_address1 = tmp_135_i_fu_2761_p1;
    end else if (((ap_enable_reg_pp2_iter13 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        trigtab_V_address1 = tmp_31_cast_fu_1723_p1;
    end else begin
        trigtab_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state96) | ((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter13 == 1'b1)) | ((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001)))) begin
        trigtab_V_ce0 = 1'b1;
    end else begin
        trigtab_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state96) | ((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter13 == 1'b1)) | ((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001)))) begin
        trigtab_V_ce1 = 1'b1;
    end else begin
        trigtab_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5_i_reg_5302_pp2_iter12_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter13 == 1'b1))) begin
        trigtab_V_we0 = 1'b1;
    end else begin
        trigtab_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5_i_reg_5302_pp2_iter12_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter13 == 1'b1))) begin
        trigtab_V_we1 = 1'b1;
    end else begin
        trigtab_V_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((lines_cols_out_full_n == 1'b0) | (lines_rows_out_full_n == 1'b0) | (lineGap_empty_n == 1'b0) | (threshold_empty_n == 1'b0) | (lines_cols_empty_n == 1'b0) | (lines_rows_empty_n == 1'b0) | (edge_cols_empty_n == 1'b0) | (edge_rows_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((tmp_i_fu_1317_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((tmp_91_i_fu_1332_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state5 : begin
            if (((exitcond3_i_fu_1364_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((exitcond4_i_fu_1376_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((exitcond5_i_fu_1403_p2 == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone)) & ~((ap_enable_reg_pp2_iter13 == 1'b1) & (ap_enable_reg_pp2_iter12 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((exitcond5_i_fu_1403_p2 == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone)) | ((ap_enable_reg_pp2_iter13 == 1'b1) & (ap_enable_reg_pp2_iter12 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            if (((exitcond1_i_fu_2167_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state23))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_pp3_stage0 : begin
            if (~((exitcond2_i_fu_2213_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if (((exitcond2_i_fu_2213_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            if (((tmp_112_i_fu_2661_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state48))) begin
                ap_NS_fsm = ap_ST_fsm_state191;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            if (((tmp_115_i_fu_2682_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state83))) begin
                ap_NS_fsm = ap_ST_fsm_state190;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state84;
            end
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            if (((mask_val_q0 == 1'd1) & (1'b1 == ap_CS_fsm_state85))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state190;
            end
        end
        ap_ST_fsm_pp4_stage0 : begin
            if ((~((exitcond6_i_fu_2749_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (ap_enable_reg_pp4_iter1 == 1'b0) & (1'b0 == ap_block_pp4_stage0_subdone)) & ~((ap_enable_reg_pp4_iter9 == 1'b1) & (ap_enable_reg_pp4_iter8 == 1'b0) & (1'b0 == ap_block_pp4_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if ((((ap_enable_reg_pp4_iter9 == 1'b1) & (ap_enable_reg_pp4_iter8 == 1'b0) & (1'b0 == ap_block_pp4_stage0_subdone)) | ((exitcond6_i_fu_2749_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (ap_enable_reg_pp4_iter1 == 1'b0) & (1'b0 == ap_block_pp4_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state96;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_state96 : begin
            if (((tmp_134_i_fu_3400_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state96))) begin
                ap_NS_fsm = ap_ST_fsm_state190;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state97;
            end
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            if (((tmp_25_fu_4032_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state102))) begin
                ap_NS_fsm = ap_ST_fsm_state136;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state103;
            end
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state121;
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            ap_NS_fsm = ap_ST_fsm_state124;
        end
        ap_ST_fsm_state124 : begin
            ap_NS_fsm = ap_ST_fsm_state125;
        end
        ap_ST_fsm_state125 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        ap_ST_fsm_state126 : begin
            ap_NS_fsm = ap_ST_fsm_state127;
        end
        ap_ST_fsm_state127 : begin
            ap_NS_fsm = ap_ST_fsm_state128;
        end
        ap_ST_fsm_state128 : begin
            ap_NS_fsm = ap_ST_fsm_state129;
        end
        ap_ST_fsm_state129 : begin
            ap_NS_fsm = ap_ST_fsm_state130;
        end
        ap_ST_fsm_state130 : begin
            ap_NS_fsm = ap_ST_fsm_state131;
        end
        ap_ST_fsm_state131 : begin
            ap_NS_fsm = ap_ST_fsm_state132;
        end
        ap_ST_fsm_state132 : begin
            ap_NS_fsm = ap_ST_fsm_state133;
        end
        ap_ST_fsm_state133 : begin
            ap_NS_fsm = ap_ST_fsm_state134;
        end
        ap_ST_fsm_state134 : begin
            ap_NS_fsm = ap_ST_fsm_state135;
        end
        ap_ST_fsm_state135 : begin
            ap_NS_fsm = ap_ST_fsm_state168;
        end
        ap_ST_fsm_state136 : begin
            ap_NS_fsm = ap_ST_fsm_state137;
        end
        ap_ST_fsm_state137 : begin
            ap_NS_fsm = ap_ST_fsm_state138;
        end
        ap_ST_fsm_state138 : begin
            ap_NS_fsm = ap_ST_fsm_state139;
        end
        ap_ST_fsm_state139 : begin
            ap_NS_fsm = ap_ST_fsm_state140;
        end
        ap_ST_fsm_state140 : begin
            ap_NS_fsm = ap_ST_fsm_state141;
        end
        ap_ST_fsm_state141 : begin
            ap_NS_fsm = ap_ST_fsm_state142;
        end
        ap_ST_fsm_state142 : begin
            ap_NS_fsm = ap_ST_fsm_state143;
        end
        ap_ST_fsm_state143 : begin
            ap_NS_fsm = ap_ST_fsm_state144;
        end
        ap_ST_fsm_state144 : begin
            ap_NS_fsm = ap_ST_fsm_state145;
        end
        ap_ST_fsm_state145 : begin
            ap_NS_fsm = ap_ST_fsm_state146;
        end
        ap_ST_fsm_state146 : begin
            ap_NS_fsm = ap_ST_fsm_state147;
        end
        ap_ST_fsm_state147 : begin
            ap_NS_fsm = ap_ST_fsm_state148;
        end
        ap_ST_fsm_state148 : begin
            ap_NS_fsm = ap_ST_fsm_state149;
        end
        ap_ST_fsm_state149 : begin
            ap_NS_fsm = ap_ST_fsm_state150;
        end
        ap_ST_fsm_state150 : begin
            ap_NS_fsm = ap_ST_fsm_state151;
        end
        ap_ST_fsm_state151 : begin
            ap_NS_fsm = ap_ST_fsm_state152;
        end
        ap_ST_fsm_state152 : begin
            ap_NS_fsm = ap_ST_fsm_state153;
        end
        ap_ST_fsm_state153 : begin
            ap_NS_fsm = ap_ST_fsm_state154;
        end
        ap_ST_fsm_state154 : begin
            ap_NS_fsm = ap_ST_fsm_state155;
        end
        ap_ST_fsm_state155 : begin
            ap_NS_fsm = ap_ST_fsm_state156;
        end
        ap_ST_fsm_state156 : begin
            ap_NS_fsm = ap_ST_fsm_state157;
        end
        ap_ST_fsm_state157 : begin
            ap_NS_fsm = ap_ST_fsm_state158;
        end
        ap_ST_fsm_state158 : begin
            ap_NS_fsm = ap_ST_fsm_state159;
        end
        ap_ST_fsm_state159 : begin
            ap_NS_fsm = ap_ST_fsm_state160;
        end
        ap_ST_fsm_state160 : begin
            ap_NS_fsm = ap_ST_fsm_state161;
        end
        ap_ST_fsm_state161 : begin
            ap_NS_fsm = ap_ST_fsm_state162;
        end
        ap_ST_fsm_state162 : begin
            ap_NS_fsm = ap_ST_fsm_state163;
        end
        ap_ST_fsm_state163 : begin
            ap_NS_fsm = ap_ST_fsm_state164;
        end
        ap_ST_fsm_state164 : begin
            ap_NS_fsm = ap_ST_fsm_state165;
        end
        ap_ST_fsm_state165 : begin
            ap_NS_fsm = ap_ST_fsm_state166;
        end
        ap_ST_fsm_state166 : begin
            ap_NS_fsm = ap_ST_fsm_state167;
        end
        ap_ST_fsm_state167 : begin
            ap_NS_fsm = ap_ST_fsm_state135;
        end
        ap_ST_fsm_state168 : begin
            if (((exitcond7_i_fu_4112_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state168))) begin
                ap_NS_fsm = ap_ST_fsm_state169;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state172;
            end
        end
        ap_ST_fsm_state169 : begin
            ap_NS_fsm = ap_ST_fsm_state170;
        end
        ap_ST_fsm_state170 : begin
            if (((1'b1 == ap_CS_fsm_state170) & (((or_cond1_i_reg_6023 == 1'd1) & (tmp_241_i_fu_4268_p2 == 1'd0)) | ((or_cond1_i_reg_6023 == 1'd1) & (mask_val_q0 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state169;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state171;
            end
        end
        ap_ST_fsm_state171 : begin
            ap_NS_fsm = ap_ST_fsm_state168;
        end
        ap_ST_fsm_state172 : begin
            ap_NS_fsm = ap_ST_fsm_state173;
        end
        ap_ST_fsm_state173 : begin
            if (((1'b1 == ap_CS_fsm_state173) & ((tmp_224_i_fu_4354_p2 == 1'd0) | (tmp_220_i_reg_6068 == 1'd0)))) begin
                ap_NS_fsm = ap_ST_fsm_state174;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state189;
            end
        end
        ap_ST_fsm_state174 : begin
            if (((exitcond8_i_fu_4359_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state174))) begin
                ap_NS_fsm = ap_ST_fsm_state189;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state175;
            end
        end
        ap_ST_fsm_state175 : begin
            ap_NS_fsm = ap_ST_fsm_state176;
        end
        ap_ST_fsm_state176 : begin
            ap_NS_fsm = ap_ST_fsm_state177;
        end
        ap_ST_fsm_state177 : begin
            if (((mask_val_q0 == 1'd1) & (1'b1 == ap_CS_fsm_state177))) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state188;
            end
        end
        ap_ST_fsm_pp6_stage0 : begin
            if ((~((exitcond_i_fu_4520_p2 == 1'd1) & (ap_enable_reg_pp6_iter0 == 1'b1) & (ap_enable_reg_pp6_iter1 == 1'b0) & (1'b0 == ap_block_pp6_stage0_subdone)) & ~((ap_enable_reg_pp6_iter9 == 1'b1) & (ap_enable_reg_pp6_iter8 == 1'b0) & (1'b0 == ap_block_pp6_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end else if ((((ap_enable_reg_pp6_iter9 == 1'b1) & (ap_enable_reg_pp6_iter8 == 1'b0) & (1'b0 == ap_block_pp6_stage0_subdone)) | ((exitcond_i_fu_4520_p2 == 1'd1) & (ap_enable_reg_pp6_iter0 == 1'b1) & (ap_enable_reg_pp6_iter1 == 1'b0) & (1'b0 == ap_block_pp6_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state188;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end
        end
        ap_ST_fsm_state188 : begin
            if (((or_cond2_i_fu_5153_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state188))) begin
                ap_NS_fsm = ap_ST_fsm_state174;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state176;
            end
        end
        ap_ST_fsm_state189 : begin
            ap_NS_fsm = ap_ST_fsm_state190;
        end
        ap_ST_fsm_state190 : begin
            if (((1'b1 == ap_CS_fsm_state190) & ((tmp_115_i_reg_5631 == 1'd0) | (ap_phi_mux_p_1_i_phi_fu_1190_p8 == 1'd0)))) begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state191;
            end
        end
        ap_ST_fsm_state191 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_1_fu_1622_p2 = (12'd1075 - tmp_155_i_fu_1590_p1);

assign F2_fu_1478_p2 = (12'd1075 - tmp_96_i_fu_1446_p1);

assign M_fu_2622_p2 = 32'd1 << p_Val2_99_fu_2614_p3;

assign OP1_V_4_fu_2742_p1 = i_3_reg_5652;

assign OP1_V_5_fu_4510_p1 = j1_5_reg_6120;

assign OP1_V_6_fu_4513_p1 = i1_5_reg_6114;

assign OP1_V_fu_2739_p1 = j_3_reg_5645;

assign abs_i44_i_fu_4346_p3 = ((abscond_i43_i_fu_4340_p2[0:0] === 1'b1) ? x_assign_2_fu_4328_p2 : neg_i42_i_fu_4334_p2);

assign abs_i_i_fu_4315_p3 = ((abscond_i_i_fu_4309_p2[0:0] === 1'b1) ? x_assign_fu_4297_p2 : neg_i_i_fu_4303_p2);

assign abscond_i43_i_fu_4340_p2 = (($signed(x_assign_2_fu_4328_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign abscond_i_i_fu_4309_p2 = (($signed(x_assign_fu_4297_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_pp6_stage0 = ap_CS_fsm[32'd154];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state100 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state101 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state102 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_state135 = ap_CS_fsm[32'd111];

assign ap_CS_fsm_state168 = ap_CS_fsm[32'd144];

assign ap_CS_fsm_state169 = ap_CS_fsm[32'd145];

assign ap_CS_fsm_state170 = ap_CS_fsm[32'd146];

assign ap_CS_fsm_state171 = ap_CS_fsm[32'd147];

assign ap_CS_fsm_state172 = ap_CS_fsm[32'd148];

assign ap_CS_fsm_state173 = ap_CS_fsm[32'd149];

assign ap_CS_fsm_state174 = ap_CS_fsm[32'd150];

assign ap_CS_fsm_state175 = ap_CS_fsm[32'd151];

assign ap_CS_fsm_state176 = ap_CS_fsm[32'd152];

assign ap_CS_fsm_state177 = ap_CS_fsm[32'd153];

assign ap_CS_fsm_state188 = ap_CS_fsm[32'd155];

assign ap_CS_fsm_state189 = ap_CS_fsm[32'd156];

assign ap_CS_fsm_state190 = ap_CS_fsm[32'd157];

assign ap_CS_fsm_state191 = ap_CS_fsm[32'd158];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state96 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state97 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state98 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state99 = ap_CS_fsm[32'd75];

assign ap_NS_fsm_state28 = ap_NS_fsm[32'd13];

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((lines_cols_out_full_n == 1'b0) | (lines_rows_out_full_n == 1'b0) | (lineGap_empty_n == 1'b0) | (threshold_empty_n == 1'b0) | (lines_cols_empty_n == 1'b0) | (lines_rows_empty_n == 1'b0) | (edge_cols_empty_n == 1'b0) | (edge_rows_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp2_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp2_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp2_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp2_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp2_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp2_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state178_pp6_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state179_pp6_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp2_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state180_pp6_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state181_pp6_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state182_pp6_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state183_pp6_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state184_pp6_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state185_pp6_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state186_pp6_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state187_pp6_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp2_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp2_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp2_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp2_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state86_pp4_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state87_pp4_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state88_pp4_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state89_pp4_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state90_pp4_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state91_pp4_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state92_pp4_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state93_pp4_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state94_pp4_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state95_pp4_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

assign ap_enable_pp6 = (ap_idle_pp6 ^ 1'b1);

assign ap_phi_mux_p_1_i_phi_fu_1190_p8 = p_1_i_reg_1185;

assign cnt_fu_2666_p2 = (cnt_i_reg_919 + 31'd1);

assign cnt_i_cast_fu_2657_p1 = cnt_i_reg_919;

assign dx0_1_fu_4285_p2 = (32'd0 - dx0_1_i_reg_1029);

assign dx0_2_fu_5171_p2 = (32'd0 - dx0_2_i_reg_1108);

assign dx0_fu_4091_p3 = {{grp_fu_4064_p2}, {2'd0}};

assign dy0_1_fu_4291_p2 = (32'd0 - dy0_1_i_reg_1040);

assign dy0_2_fu_5177_p2 = (32'd0 - dy0_2_i_reg_1119);

assign dy0_fu_4070_p3 = {{grp_fu_4048_p2}, {2'd0}};

assign edge_val_address0 = tmp_40_cast_fu_2233_p1;

assign exitcond1_i_fu_2167_p2 = ((p_y_assign_reg_882 == rows_reg_5246) ? 1'b1 : 1'b0);

assign exitcond2_i_fu_2213_p2 = ((ap_phi_mux_p_x_assign_phi_fu_900_p4 == cols_reg_5252) ? 1'b1 : 1'b0);

assign exitcond3_i_fu_1364_p2 = ((n_i_reg_836 == 8'd180) ? 1'b1 : 1'b0);

assign exitcond4_i_fu_1376_p2 = ((r_i_reg_859 == 11'd1121) ? 1'b1 : 1'b0);

assign exitcond5_i_fu_1403_p2 = ((ap_phi_mux_n4_i_phi_fu_874_p4 == 8'd180) ? 1'b1 : 1'b0);

assign exitcond6_i_fu_2749_p2 = ((ap_phi_mux_max_n_phi_fu_956_p4 == 8'd180) ? 1'b1 : 1'b0);

assign exitcond7_i_fu_4112_p2 = ((k_i_reg_1051 == 2'd2) ? 1'b1 : 1'b0);

assign exitcond8_i_fu_4359_p2 = ((k1_i_reg_1130 == 2'd2) ? 1'b1 : 1'b0);

assign exitcond_i_fu_4520_p2 = ((n5_i_reg_1163 == 8'd180) ? 1'b1 : 1'b0);

assign exp_tmp_V_1_fu_1580_p4 = {{ireg_V_1_fu_1564_p1[62:52]}};

assign exp_tmp_V_fu_1436_p4 = {{ireg_V_fu_1420_p1[62:52]}};

assign f_5_fu_4836_p1 = p_Result_146_fu_4825_p5;

assign f_fu_3065_p1 = p_Result_132_fu_3054_p5;

assign gap_fu_4261_p2 = (gap_i_reg_1062 + 32'd1);

assign grp_fu_2677_p0 = ($signed(idx_i_reg_908) + $signed(p_i_cast_reg_5577));

assign grp_fu_4048_p0 = {{p_Val2_118_reg_5869}, {14'd0}};

assign grp_fu_4064_p0 = {{p_Val2_121_reg_5854}, {14'd0}};

assign grp_log_generic_float_s_fu_1213_ap_start = grp_log_generic_float_s_fu_1213_ap_start_reg;

assign grp_sin_or_cos_float_s_fu_1228_ap_start = grp_sin_or_cos_float_s_fu_1228_ap_start_reg;

assign grp_sin_or_cos_float_s_fu_1228_do_cos = 1'd0;

assign grp_sin_or_cos_float_s_fu_1243_ap_start = grp_sin_or_cos_float_s_fu_1243_ap_start_reg;

assign grp_sin_or_cos_float_s_fu_1243_do_cos = 1'd1;

assign i1_1_fu_4154_p1 = $signed(tmp_229_i_fu_4144_p4);

assign i1_2_fu_4158_p3 = ((xflag_i_reg_1017[0:0] === 1'b1) ? i1_1_fu_4154_p1 : i1_reg_1085);

assign i1_4_fu_4445_p1 = $signed(tmp_245_i_fu_4435_p4);

assign i1_5_fu_4449_p3 = ((xflag_i_reg_1017[0:0] === 1'b1) ? i1_4_fu_4445_p1 : i1_3_reg_1152);

assign i_0_i_cast_cast_i_fu_1313_p1 = i_0_i_i_reg_802;

assign i_1_fu_2172_p2 = (p_y_assign_reg_882 + 32'd1);

assign i_fu_1322_p2 = (i_0_i_i_reg_802 + 3'd1);

assign icmp1_fu_1542_p2 = (($signed(tmp_127_fu_1532_p4) > $signed(8'd0)) ? 1'b1 : 1'b0);

assign icmp2_fu_1664_p2 = ((tmp_137_fu_1654_p4 == 8'd0) ? 1'b1 : 1'b0);

assign icmp3_fu_1686_p2 = (($signed(tmp_140_fu_1676_p4) > $signed(8'd0)) ? 1'b1 : 1'b0);

assign icmp4_fu_2918_p2 = ((tmp_166_fu_2908_p4 == 26'd0) ? 1'b1 : 1'b0);

assign icmp5_fu_3520_p2 = ((tmp_193_fu_3510_p4 == 26'd0) ? 1'b1 : 1'b0);

assign icmp6_fu_3669_p2 = ((tmp_211_fu_3659_p4 == 26'd0) ? 1'b1 : 1'b0);

assign icmp7_fu_4689_p2 = ((tmp_245_fu_4679_p4 == 26'd0) ? 1'b1 : 1'b0);

assign icmp_fu_1520_p2 = ((tmp_124_fu_1510_p4 == 8'd0) ? 1'b1 : 1'b0);

assign index_V_3_fu_3102_p4 = {{t_V_10_fu_3076_p1[27:23]}};

assign index_V_4_fu_4873_p4 = {{t_V_18_fu_4847_p1[27:23]}};

assign index_V_fu_2288_p4 = {{p_Val2_78_fu_2262_p1[27:23]}};

assign ireg_V_1_fu_1564_p1 = d_assign_fu_1281_p1;

assign ireg_V_fu_1420_p1 = d_assign_3_fu_1278_p1;

assign isNeg_1_fu_3240_p3 = sh_assign_2_fu_3234_p2[32'd8];

assign isNeg_2_fu_5011_p3 = sh_assign_4_fu_5005_p2[32'd8];

assign isNeg_fu_2528_p3 = sh_assign_fu_2522_p2[32'd8];

assign is_neg_1_fu_3443_p3 = p_Val2_118_fu_3433_p2[32'd15];

assign is_neg_2_fu_3425_p1 = trigtab_V_q1;

assign is_neg_3_fu_4598_p3 = p_Val2_126_fu_4582_p2[32'd48];

assign is_neg_fu_2827_p3 = p_Val2_101_fu_2811_p2[32'd48];

assign j1_2_fu_4166_p3 = ((xflag_i_reg_1017[0:0] === 1'b1) ? j1_1_reg_1074 : j1_fu_4140_p1);

assign j1_3_fu_4431_p1 = $signed(tmp_243_i_fu_4421_p4);

assign j1_5_fu_4457_p3 = ((xflag_i_reg_1017[0:0] === 1'b1) ? j1_4_reg_1141 : j1_3_fu_4431_p1);

assign j1_fu_4140_p1 = $signed(tmp_227_i_fu_4130_p4);

assign j_0_i_cast_cast_i_fu_1328_p1 = j_0_i_i_reg_825;

assign j_2_fu_2218_p2 = (ap_phi_mux_p_x_assign_phi_fu_900_p4 + 32'd1);

assign j_fu_1337_p2 = (j_0_i_i_reg_825 + 7'd1);

assign k_1_fu_4365_p2 = (k1_i_reg_1130 + 2'd1);

assign k_fu_4118_p2 = (k_i_reg_1051 + 2'd1);

assign lines_cols_out_din = lines_cols_dout;

assign lines_rows_out_din = lines_rows_dout;

assign loc_V_10_fu_3142_p1 = p_Val2_113_fu_3137_p2[22:0];

assign loc_V_11_fu_3216_p4 = {{p_Val2_115_fu_3204_p1[30:23]}};

assign loc_V_12_fu_3226_p1 = p_Val2_115_fu_3204_p1[22:0];

assign loc_V_13_fu_4851_p4 = {{t_V_18_fu_4847_p1[30:23]}};

assign loc_V_14_fu_4913_p1 = p_Val2_135_fu_4908_p2[22:0];

assign loc_V_15_fu_4987_p4 = {{p_Val2_137_fu_4975_p1[30:23]}};

assign loc_V_16_fu_4997_p1 = p_Val2_137_fu_4975_p1[22:0];

assign loc_V_4_fu_2284_p1 = p_Val2_78_fu_2262_p1[22:0];

assign loc_V_5_fu_2369_p4 = {{p_Val2_83_fu_2355_p2[30:23]}};

assign loc_V_6_fu_2379_p1 = p_Val2_83_fu_2355_p2[22:0];

assign loc_V_7_fu_2490_p4 = {{p_Val2_91_fu_2479_p1[30:23]}};

assign loc_V_8_fu_2500_p1 = p_Val2_91_fu_2479_p1[22:0];

assign loc_V_9_fu_3080_p4 = {{t_V_10_fu_3076_p1[30:23]}};

assign man_V_1_fu_1466_p2 = (54'd0 - p_Result_123_fu_1462_p1);

assign man_V_3_fu_1610_p2 = (54'd0 - p_Result_124_fu_1606_p1);

assign man_V_5_fu_1728_p3 = ((isneg_reg_5326[0:0] === 1'b1) ? man_V_1_reg_5339 : p_Result_123_reg_5334);

assign man_V_fu_1945_p3 = ((isneg_1_reg_5394[0:0] === 1'b1) ? man_V_3_reg_5407 : p_Result_124_reg_5402);

assign mask_cast_i_fu_2333_p1 = mask_table1_q0;

assign mask_table1_address0 = tmp_47_i_fu_2298_p1;

assign max_n_1_cast79_i_fu_3367_p1 = max_n_reg_952_pp4_iter8_reg;

assign max_val_2_fu_3371_p2 = (32'd1 + accum_q0);

assign max_val_fu_2652_p2 = ($signed(32'd4294967295) + $signed(threshold_read_reg_5233));

assign msb_idx_1_fu_2900_p3 = ((tmp_165_fu_2892_p3[0:0] === 1'b1) ? 31'd0 : tmp_164_fu_2888_p1);

assign msb_idx_2_fu_3484_p2 = (32'd15 - num_zeros_1_fu_3476_p3);

assign msb_idx_3_fu_3502_p3 = ((tmp_192_fu_3494_p3[0:0] === 1'b1) ? 31'd0 : tmp_191_fu_3490_p1);

assign msb_idx_4_fu_3633_p2 = (32'd15 - num_zeros_2_fu_3625_p3);

assign msb_idx_5_fu_3651_p3 = ((tmp_210_fu_3643_p3[0:0] === 1'b1) ? 31'd0 : tmp_209_fu_3639_p1);

assign msb_idx_6_fu_4654_p2 = (32'd48 - num_zeros_3_reg_6207);

assign msb_idx_7_fu_4671_p3 = ((tmp_244_fu_4663_p3[0:0] === 1'b1) ? 31'd0 : tmp_243_fu_4659_p1);

assign msb_idx_fu_2883_p2 = (32'd48 - num_zeros_reg_5740);

assign n4_cast84_i_fu_1415_p1 = ap_phi_mux_n4_i_phi_fu_874_p4;

assign n7_0_max_n_i_fu_3392_p3 = ((tmp_175_i_fu_3378_p2[0:0] === 1'b1) ? max_n_1_cast79_i_fu_3367_p1 : max_n_i_reg_940);

assign n_1_fu_2755_p2 = (ap_phi_mux_max_n_phi_fu_956_p4 + 8'd1);

assign n_2_fu_1409_p2 = (ap_phi_mux_n4_i_phi_fu_874_p4 + 8'd1);

assign n_3_fu_4526_p2 = (n5_i_reg_1163 + 8'd1);

assign n_fu_1370_p2 = (n_i_reg_836 + 8'd1);

assign neg_i42_i_fu_4334_p2 = (32'd0 - x_assign_2_fu_4328_p2);

assign neg_i_i_fu_4303_p2 = (32'd0 - x_assign_fu_4297_p2);

assign newSel1_fu_1928_p3 = ((sel_tmp2_fu_1876_p2[0:0] === 1'b1) ? tmp_123_fu_1744_p1 : 16'd0);

assign newSel3_fu_2131_p3 = ((sel_tmp11_fu_2126_p2[0:0] === 1'b1) ? tmp_189_i_fu_1991_p2 : p_Val2_70_fu_2082_p2);

assign newSel4_fu_2145_p3 = ((sel_tmp5_fu_2093_p2[0:0] === 1'b1) ? tmp_136_fu_1961_p1 : 16'd0);

assign newSel_fu_1914_p3 = ((sel_tmp3_fu_1909_p2[0:0] === 1'b1) ? tmp_128_i_fu_1774_p2 : p_Val2_62_fu_1865_p2);

assign next_mul1_fu_1358_p2 = (phi_mul1_reg_847 + 18'd1121);

assign next_mul2_fu_2770_p2 = (18'd1121 + phi_mul2_reg_964);

assign next_mul3_fu_4541_p2 = (18'd1121 + phi_mul3_reg_1174);

assign next_mul_fu_1307_p2 = (phi_mul_reg_813 + 10'd100);

assign notlhs1_fu_3990_p2 = ((tmp_19_fu_3970_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs2_fu_4008_p2 = ((tmp_20_fu_3980_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notrhs1_fu_3996_p2 = ((tmp_207_fu_3885_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs2_fu_4014_p2 = ((tmp_225_fu_3953_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs_fu_4194_p2 = (($signed(j1_2_fu_4166_p3) < $signed(cols_reg_5252)) ? 1'b1 : 1'b0);


always @ (p_Result_137_fu_3468_p3) begin
    if (p_Result_137_fu_3468_p3[0] == 1'b1) begin
        num_zeros_1_fu_3476_p3 = 32'd0;
    end else if (p_Result_137_fu_3468_p3[1] == 1'b1) begin
        num_zeros_1_fu_3476_p3 = 32'd1;
    end else if (p_Result_137_fu_3468_p3[2] == 1'b1) begin
        num_zeros_1_fu_3476_p3 = 32'd2;
    end else if (p_Result_137_fu_3468_p3[3] == 1'b1) begin
        num_zeros_1_fu_3476_p3 = 32'd3;
    end else if (p_Result_137_fu_3468_p3[4] == 1'b1) begin
        num_zeros_1_fu_3476_p3 = 32'd4;
    end else if (p_Result_137_fu_3468_p3[5] == 1'b1) begin
        num_zeros_1_fu_3476_p3 = 32'd5;
    end else if (p_Result_137_fu_3468_p3[6] == 1'b1) begin
        num_zeros_1_fu_3476_p3 = 32'd6;
    end else if (p_Result_137_fu_3468_p3[7] == 1'b1) begin
        num_zeros_1_fu_3476_p3 = 32'd7;
    end else if (p_Result_137_fu_3468_p3[8] == 1'b1) begin
        num_zeros_1_fu_3476_p3 = 32'd8;
    end else if (p_Result_137_fu_3468_p3[9] == 1'b1) begin
        num_zeros_1_fu_3476_p3 = 32'd9;
    end else if (p_Result_137_fu_3468_p3[10] == 1'b1) begin
        num_zeros_1_fu_3476_p3 = 32'd10;
    end else if (p_Result_137_fu_3468_p3[11] == 1'b1) begin
        num_zeros_1_fu_3476_p3 = 32'd11;
    end else if (p_Result_137_fu_3468_p3[12] == 1'b1) begin
        num_zeros_1_fu_3476_p3 = 32'd12;
    end else if (p_Result_137_fu_3468_p3[13] == 1'b1) begin
        num_zeros_1_fu_3476_p3 = 32'd13;
    end else if (p_Result_137_fu_3468_p3[14] == 1'b1) begin
        num_zeros_1_fu_3476_p3 = 32'd14;
    end else if (p_Result_137_fu_3468_p3[15] == 1'b1) begin
        num_zeros_1_fu_3476_p3 = 32'd15;
    end else if (p_Result_137_fu_3468_p3[16] == 1'b1) begin
        num_zeros_1_fu_3476_p3 = 32'd16;
    end else if (p_Result_137_fu_3468_p3[17] == 1'b1) begin
        num_zeros_1_fu_3476_p3 = 32'd17;
    end else if (p_Result_137_fu_3468_p3[18] == 1'b1) begin
        num_zeros_1_fu_3476_p3 = 32'd18;
    end else if (p_Result_137_fu_3468_p3[19] == 1'b1) begin
        num_zeros_1_fu_3476_p3 = 32'd19;
    end else if (p_Result_137_fu_3468_p3[20] == 1'b1) begin
        num_zeros_1_fu_3476_p3 = 32'd20;
    end else if (p_Result_137_fu_3468_p3[21] == 1'b1) begin
        num_zeros_1_fu_3476_p3 = 32'd21;
    end else if (p_Result_137_fu_3468_p3[22] == 1'b1) begin
        num_zeros_1_fu_3476_p3 = 32'd22;
    end else if (p_Result_137_fu_3468_p3[23] == 1'b1) begin
        num_zeros_1_fu_3476_p3 = 32'd23;
    end else if (p_Result_137_fu_3468_p3[24] == 1'b1) begin
        num_zeros_1_fu_3476_p3 = 32'd24;
    end else if (p_Result_137_fu_3468_p3[25] == 1'b1) begin
        num_zeros_1_fu_3476_p3 = 32'd25;
    end else if (p_Result_137_fu_3468_p3[26] == 1'b1) begin
        num_zeros_1_fu_3476_p3 = 32'd26;
    end else if (p_Result_137_fu_3468_p3[27] == 1'b1) begin
        num_zeros_1_fu_3476_p3 = 32'd27;
    end else if (p_Result_137_fu_3468_p3[28] == 1'b1) begin
        num_zeros_1_fu_3476_p3 = 32'd28;
    end else if (p_Result_137_fu_3468_p3[29] == 1'b1) begin
        num_zeros_1_fu_3476_p3 = 32'd29;
    end else if (p_Result_137_fu_3468_p3[30] == 1'b1) begin
        num_zeros_1_fu_3476_p3 = 32'd30;
    end else if (p_Result_137_fu_3468_p3[31] == 1'b1) begin
        num_zeros_1_fu_3476_p3 = 32'd31;
    end else begin
        num_zeros_1_fu_3476_p3 = 32'd32;
    end
end


always @ (p_Result_141_fu_3617_p3) begin
    if (p_Result_141_fu_3617_p3[0] == 1'b1) begin
        num_zeros_2_fu_3625_p3 = 32'd0;
    end else if (p_Result_141_fu_3617_p3[1] == 1'b1) begin
        num_zeros_2_fu_3625_p3 = 32'd1;
    end else if (p_Result_141_fu_3617_p3[2] == 1'b1) begin
        num_zeros_2_fu_3625_p3 = 32'd2;
    end else if (p_Result_141_fu_3617_p3[3] == 1'b1) begin
        num_zeros_2_fu_3625_p3 = 32'd3;
    end else if (p_Result_141_fu_3617_p3[4] == 1'b1) begin
        num_zeros_2_fu_3625_p3 = 32'd4;
    end else if (p_Result_141_fu_3617_p3[5] == 1'b1) begin
        num_zeros_2_fu_3625_p3 = 32'd5;
    end else if (p_Result_141_fu_3617_p3[6] == 1'b1) begin
        num_zeros_2_fu_3625_p3 = 32'd6;
    end else if (p_Result_141_fu_3617_p3[7] == 1'b1) begin
        num_zeros_2_fu_3625_p3 = 32'd7;
    end else if (p_Result_141_fu_3617_p3[8] == 1'b1) begin
        num_zeros_2_fu_3625_p3 = 32'd8;
    end else if (p_Result_141_fu_3617_p3[9] == 1'b1) begin
        num_zeros_2_fu_3625_p3 = 32'd9;
    end else if (p_Result_141_fu_3617_p3[10] == 1'b1) begin
        num_zeros_2_fu_3625_p3 = 32'd10;
    end else if (p_Result_141_fu_3617_p3[11] == 1'b1) begin
        num_zeros_2_fu_3625_p3 = 32'd11;
    end else if (p_Result_141_fu_3617_p3[12] == 1'b1) begin
        num_zeros_2_fu_3625_p3 = 32'd12;
    end else if (p_Result_141_fu_3617_p3[13] == 1'b1) begin
        num_zeros_2_fu_3625_p3 = 32'd13;
    end else if (p_Result_141_fu_3617_p3[14] == 1'b1) begin
        num_zeros_2_fu_3625_p3 = 32'd14;
    end else if (p_Result_141_fu_3617_p3[15] == 1'b1) begin
        num_zeros_2_fu_3625_p3 = 32'd15;
    end else if (p_Result_141_fu_3617_p3[16] == 1'b1) begin
        num_zeros_2_fu_3625_p3 = 32'd16;
    end else if (p_Result_141_fu_3617_p3[17] == 1'b1) begin
        num_zeros_2_fu_3625_p3 = 32'd17;
    end else if (p_Result_141_fu_3617_p3[18] == 1'b1) begin
        num_zeros_2_fu_3625_p3 = 32'd18;
    end else if (p_Result_141_fu_3617_p3[19] == 1'b1) begin
        num_zeros_2_fu_3625_p3 = 32'd19;
    end else if (p_Result_141_fu_3617_p3[20] == 1'b1) begin
        num_zeros_2_fu_3625_p3 = 32'd20;
    end else if (p_Result_141_fu_3617_p3[21] == 1'b1) begin
        num_zeros_2_fu_3625_p3 = 32'd21;
    end else if (p_Result_141_fu_3617_p3[22] == 1'b1) begin
        num_zeros_2_fu_3625_p3 = 32'd22;
    end else if (p_Result_141_fu_3617_p3[23] == 1'b1) begin
        num_zeros_2_fu_3625_p3 = 32'd23;
    end else if (p_Result_141_fu_3617_p3[24] == 1'b1) begin
        num_zeros_2_fu_3625_p3 = 32'd24;
    end else if (p_Result_141_fu_3617_p3[25] == 1'b1) begin
        num_zeros_2_fu_3625_p3 = 32'd25;
    end else if (p_Result_141_fu_3617_p3[26] == 1'b1) begin
        num_zeros_2_fu_3625_p3 = 32'd26;
    end else if (p_Result_141_fu_3617_p3[27] == 1'b1) begin
        num_zeros_2_fu_3625_p3 = 32'd27;
    end else if (p_Result_141_fu_3617_p3[28] == 1'b1) begin
        num_zeros_2_fu_3625_p3 = 32'd28;
    end else if (p_Result_141_fu_3617_p3[29] == 1'b1) begin
        num_zeros_2_fu_3625_p3 = 32'd29;
    end else if (p_Result_141_fu_3617_p3[30] == 1'b1) begin
        num_zeros_2_fu_3625_p3 = 32'd30;
    end else if (p_Result_141_fu_3617_p3[31] == 1'b1) begin
        num_zeros_2_fu_3625_p3 = 32'd31;
    end else begin
        num_zeros_2_fu_3625_p3 = 32'd32;
    end
end

assign num_zeros_3_fu_4650_p1 = tmp_256_i_fu_4642_p3[31:0];

assign num_zeros_fu_2879_p1 = tmp_143_i_fu_2871_p3[31:0];

assign one_half_i_cast_i1_fu_4904_p1 = one_half_table4_q0;

assign one_half_i_cast_i_fu_3133_p1 = one_half_table4_q0;

assign or_cond1_fu_2139_p2 = (sel_tmp9_fu_2110_p2 | sel_tmp11_fu_2126_p2);

assign or_cond1_i_fu_4210_p2 = (tmp_231_i_fu_4205_p2 & or_cond303_not_i_fu_4199_p2);

assign or_cond2_i_fu_5153_p2 = (tmp_259_i_fu_5149_p2 & tmp_254_i_fu_5145_p2);

assign or_cond303_not_i_fu_4199_p2 = (rev_fu_4188_p2 & notrhs_fu_4194_p2);

assign or_cond_fu_1922_p2 = (sel_tmp7_fu_1893_p2 | sel_tmp3_fu_1909_p2);

assign or_cond_i_fu_2327_p2 = (tmp_46_i_fu_2322_p2 & tmp_45_i_fu_2317_p2);

assign p_Repl2_19_trunc_i_fu_3041_p2 = (tmp_178_fu_3030_p1 + tmp_cast_cast_fu_3033_p3);

assign p_Repl2_21_trunc_i_fu_3850_p2 = (tmp82_cast_cast_fu_3842_p3 + tmp_205_fu_3839_p1);

assign p_Repl2_24_trunc_i_fu_3918_p2 = (tmp83_cast_cast_fu_3910_p3 + tmp_223_fu_3907_p1);

assign p_Repl2_27_trunc_i_fu_4812_p2 = (tmp_257_fu_4801_p1 + tmp85_cast_cast_fu_4804_p3);

assign p_Result_102_fu_3737_p3 = {{14'd0}, {tmp_221_fu_3733_p1}};

assign p_Result_113_fu_4889_p3 = t_V_18_reg_6237[32'd31];

assign p_Result_123_fu_1462_p1 = tmp_83_i_fu_1454_p3;

assign p_Result_124_fu_1606_p1 = tmp_87_i_fu_1598_p3;

assign p_Result_125_fu_2337_p3 = {{p_Result_61_reg_5522}, {31'd0}};

assign p_Result_126_fu_2348_p3 = {{1'd0}, {tmp_148_reg_5550}};

assign p_Result_127_fu_2361_p3 = p_Val2_83_fu_2355_p2[32'd31];

assign p_Result_128_fu_2412_p4 = {{{xs_sign_V_fu_2395_p2}, {xs_exp_V_fu_2389_p3}}, {xs_sig_V_fu_2406_p2}};

assign p_Result_129_fu_2482_p3 = p_Val2_91_fu_2479_p1[32'd31];

integer ap_tvar_int_0;

always @ (p_Val2_42_cast_i_fu_2849_p1) begin
    for (ap_tvar_int_0 = 49 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 48 - 0) begin
            p_Result_130_fu_2853_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_130_fu_2853_p4[ap_tvar_int_0] = p_Val2_42_cast_i_fu_2849_p1[48 - ap_tvar_int_0];
        end
    end
end

assign p_Result_131_fu_2863_p3 = {{15'd32767}, {p_Result_130_fu_2853_p4}};

assign p_Result_132_fu_3054_p5 = {{tmp_162_i_fu_3047_p3}, {tmp32_V_24_reg_5755[22:0]}};

assign p_Result_133_fu_3125_p3 = {{p_Result_85_fu_3118_p3}, {31'd0}};

assign p_Result_134_fu_3168_p3 = {{tmp_12_fu_3158_p4}, {xs_sig_V_4_fu_3152_p2}};

integer ap_tvar_int_1;

always @ (tmp_V_fu_3451_p3) begin
    for (ap_tvar_int_1 = 16 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 15 - 0) begin
            p_Result_136_fu_3458_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            p_Result_136_fu_3458_p4[ap_tvar_int_1] = tmp_V_fu_3451_p3[15 - ap_tvar_int_1];
        end
    end
end

assign p_Result_137_fu_3468_p3 = {{16'd65535}, {p_Result_136_fu_3458_p4}};

assign p_Result_138_fu_3863_p5 = {{tmp_172_i_fu_3856_p3}, {tmp32_V_25_reg_5950[22:0]}};

assign p_Result_139_fu_3889_p3 = {{1'd0}, {tmp_14_fu_3878_p3}};

integer ap_tvar_int_2;

always @ (p_Val2_123_fu_3601_p3) begin
    for (ap_tvar_int_2 = 16 - 1; ap_tvar_int_2 >= 0; ap_tvar_int_2 = ap_tvar_int_2 - 1) begin
        if (ap_tvar_int_2 > 15 - 0) begin
            p_Result_140_fu_3607_p4[ap_tvar_int_2] = 1'b0;
        end else begin
            p_Result_140_fu_3607_p4[ap_tvar_int_2] = p_Val2_123_fu_3601_p3[15 - ap_tvar_int_2];
        end
    end
end

assign p_Result_141_fu_3617_p3 = {{16'd65535}, {p_Result_140_fu_3607_p4}};

assign p_Result_142_fu_3931_p5 = {{tmp_198_i_fu_3924_p3}, {tmp32_V_26_reg_5960[22:0]}};

assign p_Result_143_fu_3957_p3 = {{1'd0}, {tmp_17_fu_3946_p3}};

integer ap_tvar_int_3;

always @ (p_Val2_62_cast_i_fu_4620_p1) begin
    for (ap_tvar_int_3 = 49 - 1; ap_tvar_int_3 >= 0; ap_tvar_int_3 = ap_tvar_int_3 - 1) begin
        if (ap_tvar_int_3 > 48 - 0) begin
            p_Result_144_fu_4624_p4[ap_tvar_int_3] = 1'b0;
        end else begin
            p_Result_144_fu_4624_p4[ap_tvar_int_3] = p_Val2_62_cast_i_fu_4620_p1[48 - ap_tvar_int_3];
        end
    end
end

assign p_Result_145_fu_4634_p3 = {{15'd32767}, {p_Result_144_fu_4624_p4}};

assign p_Result_146_fu_4825_p5 = {{tmp_266_i_fu_4818_p3}, {tmp32_V_27_reg_6222[22:0]}};

assign p_Result_147_fu_4896_p3 = {{p_Result_113_fu_4889_p3}, {31'd0}};

assign p_Result_148_fu_4939_p3 = {{tmp_27_fu_4929_p4}, {xs_sig_V_5_fu_4923_p2}};

assign p_Result_54_fu_2050_p2 = (tmp_144_fu_2044_p2 & man_V_fu_1945_p3);

assign p_Result_85_fu_3118_p3 = t_V_10_reg_5770[32'd31];

assign p_Result_97_fu_3588_p3 = {{14'd0}, {tmp_203_fu_3584_p1}};

assign p_Result_s_fu_1833_p2 = (tmp_131_fu_1827_p2 & man_V_5_fu_1728_p3);

assign p_Val2_100_fu_2791_p0 = trigtab_V_q0;

assign p_Val2_100_fu_2791_p1 = OP1_V_reg_5668;

assign p_Val2_100_fu_2791_p2 = ($signed(p_Val2_100_fu_2791_p0) * $signed(p_Val2_100_fu_2791_p1));

assign p_Val2_101_fu_2811_p2 = ($signed(tmp_137_i_fu_2808_p1) + $signed(tmp_136_i_fu_2805_p1));

assign p_Val2_103_fu_2841_p3 = ((is_neg_fu_2827_p3[0:0] === 1'b1) ? tmp_142_cast_i_fu_2835_p2 : p_Val2_37_cast_i_fu_2817_p2);

assign p_Val2_113_fu_3137_p2 = (one_half_i_cast_i_fu_3133_p1 + t_V_10_reg_5770);

assign p_Val2_115_fu_3204_p1 = x_assign_9_fu_3197_p3;

assign p_Val2_117_fu_3323_p3 = ((isNeg_1_reg_5807[0:0] === 1'b1) ? tmp_39_fu_3309_p1 : tmp_40_fu_3313_p4);

assign p_Val2_118_fu_3433_p2 = (16'd0 - p_Val2_s_reg_5847);

assign p_Val2_123_fu_3601_p3 = ((is_neg_2_reg_5863[0:0] === 1'b1) ? tmp_182_i_fu_3596_p2 : p_Val2_121_reg_5854);

assign p_Val2_125_fu_4562_p0 = trigtab_V_q0;

assign p_Val2_125_fu_4562_p1 = OP1_V_5_reg_6135;

assign p_Val2_125_fu_4562_p2 = ($signed(p_Val2_125_fu_4562_p0) * $signed(p_Val2_125_fu_4562_p1));

assign p_Val2_126_fu_4582_p2 = ($signed(tmp_252_i_fu_4579_p1) + $signed(tmp_251_i_fu_4576_p1));

assign p_Val2_128_fu_4612_p3 = ((is_neg_3_fu_4598_p3[0:0] === 1'b1) ? tmp_255_cast_i_fu_4606_p2 : p_Val2_60_cast_i_fu_4588_p2);

assign p_Val2_135_fu_4908_p2 = (one_half_i_cast_i1_fu_4904_p1 + t_V_18_reg_6237);

assign p_Val2_137_fu_4975_p1 = x_assign_1_fu_4968_p3;

assign p_Val2_139_fu_5094_p3 = ((isNeg_2_reg_6274[0:0] === 1'b1) ? tmp_51_fu_5080_p1 : tmp_52_fu_5084_p4);

assign p_Val2_23_fu_2800_p0 = trigtab_V_q1;

assign p_Val2_23_fu_2800_p1 = OP1_V_4_reg_5673;

assign p_Val2_23_fu_2800_p2 = ($signed(p_Val2_23_fu_2800_p0) * $signed(p_Val2_23_fu_2800_p1));

assign p_Val2_24_fu_4571_p0 = trigtab_V_q1;

assign p_Val2_24_fu_4571_p1 = OP1_V_6_reg_6140;

assign p_Val2_24_fu_4571_p2 = ($signed(p_Val2_24_fu_4571_p0) * $signed(p_Val2_24_fu_4571_p1));

assign p_Val2_37_cast_i_fu_2817_p2 = ($signed(p_Val2_100_reg_5707) + $signed(p_Val2_23_reg_5713));

assign p_Val2_42_cast_i_fu_2849_p1 = p_Val2_103_fu_2841_p3;

assign p_Val2_60_cast_i_fu_4588_p2 = ($signed(p_Val2_125_reg_6174) + $signed(p_Val2_24_reg_6180));

assign p_Val2_61_fu_1780_p3 = ((tmp_118_i_fu_1748_p2[0:0] === 1'b1) ? tmp_125_fu_1763_p1 : storemerge1_i_fu_1767_p3);

assign p_Val2_62_cast_i_fu_4620_p1 = p_Val2_128_fu_4612_p3;

assign p_Val2_62_fu_1865_p2 = (tmp_150_i_fu_1861_p1 + p_Val2_61_fu_1780_p3);

assign p_Val2_68_fu_1997_p3 = ((tmp_179_i_fu_1965_p2[0:0] === 1'b1) ? tmp_138_fu_1980_p1 : storemerge_i_fu_1984_p3);

assign p_Val2_70_fu_2082_p2 = (tmp_217_i_fu_2078_p1 + p_Val2_68_fu_1997_p3);

assign p_Val2_78_fu_2262_p1 = reg_1301;

assign p_Val2_83_fu_2355_p2 = (p_Result_126_fu_2348_p3 + mask_cast_i_fu_2333_p1);

assign p_Val2_91_fu_2479_p1 = x_assign_7_reg_5555;

assign p_Val2_96_fu_2600_p3 = ((isNeg_fu_2528_p3[0:0] === 1'b1) ? tmp_32_fu_2586_p1 : tmp_33_fu_2590_p4);

assign p_Val2_99_fu_2614_p3 = ((p_Result_129_fu_2482_p3[0:0] === 1'b1) ? p_Val2_i_i_i_i_fu_2608_p2 : p_Val2_96_fu_2600_p3);

assign p_Val2_cast_fu_2632_p1 = p_Val2_i_i_i_reg_5567;

assign p_Val2_i_i_i22_i_fu_3330_p2 = (32'd0 - p_Val2_117_fu_3323_p3);

assign p_Val2_i_i_i65_i_fu_5101_p2 = (32'd0 - p_Val2_139_fu_5094_p3);

assign p_Val2_i_i_i_i_fu_2608_p2 = (32'd0 - p_Val2_96_fu_2600_p3);

assign p_i_cast_fu_2648_p1 = $signed(p_i_fu_2641_p3);

assign p_i_fu_2641_p3 = ((tmp_155_reg_5572[0:0] === 1'b1) ? p_Val2_cast_fu_2632_p1 : step_fu_2635_p2);

assign p_r_i_i_i1_i_fu_1850_p2 = (r_1_fu_1845_p2 | isneg_reg_5326);

assign p_r_i_i_i_i_fu_2067_p2 = (r_2_fu_2062_p2 | isneg_1_reg_5394);

assign p_shl1_cast_fu_2194_p3 = {{tmp_157_fu_2190_p1}, {6'd0}};

assign p_shl2_cast_fu_2702_p3 = {{tmp_160_fu_2698_p1}, {8'd0}};

assign p_shl3_cast_fu_2714_p3 = {{tmp_161_fu_2710_p1}, {6'd0}};

assign p_shl4_cast_fu_4224_p3 = {{tmp_230_fu_4220_p1}, {8'd0}};

assign p_shl5_cast_fu_4236_p3 = {{tmp_231_fu_4232_p1}, {6'd0}};

assign p_shl6_cast_fu_4473_p3 = {{tmp_238_fu_4469_p1}, {8'd0}};

assign p_shl7_cast_fu_4485_p3 = {{tmp_239_fu_4481_p1}, {6'd0}};

assign p_shl_cast_fu_2182_p3 = {{tmp_156_fu_2178_p1}, {8'd0}};

assign phi_mul240_cast_fu_2745_p1 = phi_mul2_reg_964;

assign phi_mul242_cast_fu_4516_p1 = phi_mul3_reg_1174;

assign pt_buf_length_fu_2245_p0 = pt_buf_length_i_fu_376;

assign pt_buf_length_fu_2245_p2 = ($signed(pt_buf_length_fu_2245_p0) + $signed(32'd1));

assign qb_1_fu_2022_p3 = ((tmp_193_i_reg_5442[0:0] === 1'b1) ? isneg_1_reg_5394 : tmp_139_fu_2014_p3);

assign qb_assign_1_fu_1855_p2 = (qb_fu_1805_p3 & p_r_i_i_i1_i_fu_1850_p2);

assign qb_assign_3_fu_2072_p2 = (qb_1_fu_2022_p3 & p_r_i_i_i_i_fu_2067_p2);

assign qb_fu_1805_p3 = ((tmp_130_i_reg_5374[0:0] === 1'b1) ? isneg_reg_5326 : tmp_126_fu_1797_p3);

assign r_1_fu_1845_p2 = (tmp_149_i_fu_1839_p2 & icmp1_reg_5379);

assign r_2_fu_2062_p2 = (tmp_216_i_fu_2056_p2 & icmp3_reg_5447);

assign r_fu_1382_p2 = (r_i_reg_859 + 11'd1);

assign ret_i_i_i_fu_2422_p1 = p_Result_128_fu_2412_p4;

assign ret_i_i_i_i_fu_2344_p1 = p_Result_125_fu_2337_p3;

assign rev_fu_4188_p2 = (tmp_228_fu_4180_p3 ^ 1'd1);

assign sel_tmp10_fu_2120_p2 = (sel_tmp32_demorgan_fu_2115_p2 ^ 1'd1);

assign sel_tmp11_fu_2126_p2 = (sel_tmp10_fu_2120_p2 & icmp2_reg_5437);

assign sel_tmp13_demorgan_fu_1898_p2 = (tmp_107_i_reg_5356 | sel_tmp6_demorgan_fu_1882_p2);

assign sel_tmp1_fu_1871_p2 = (tmp_98_i_reg_5344 ^ 1'd1);

assign sel_tmp1_i1_fu_3187_p2 = (tmp_i_i_390_reg_5776 ^ 1'd1);

assign sel_tmp1_i2_fu_4958_p2 = (tmp_i_i1_reg_6243 ^ 1'd1);

assign sel_tmp1_i_fu_2431_p2 = (tmp_i1_fu_2307_p2 & sel_tmp_i_fu_2426_p2);

assign sel_tmp25_demorgan_fu_2099_p2 = (tmp_167_i_fu_1956_p2 | tmp_157_i_reg_5412);

assign sel_tmp2_fu_1876_p2 = (tmp_110_i_fu_1739_p2 & sel_tmp1_fu_1871_p2);

assign sel_tmp2_i1_fu_3192_p2 = (tmp_273_i_i_reg_5782 & sel_tmp1_i1_fu_3187_p2);

assign sel_tmp2_i2_fu_4963_p2 = (tmp_273_i_i1_reg_6249 & sel_tmp1_i2_fu_4958_p2);

assign sel_tmp2_i_fu_2437_p3 = ((sel_tmp1_i_fu_2431_p2[0:0] === 1'b1) ? ret_i_i_i_i_fu_2344_p1 : 32'd1065353216);

assign sel_tmp32_demorgan_fu_2115_p2 = (tmp_164_i_reg_5424 | sel_tmp25_demorgan_fu_2099_p2);

assign sel_tmp3_fu_1909_p2 = (sel_tmp_fu_1903_p2 & icmp_reg_5369);

assign sel_tmp4_fu_2088_p2 = (tmp_157_i_reg_5412 ^ 1'd1);

assign sel_tmp5_demorgan_i_fu_2445_p2 = (tmp_i1_fu_2307_p2 | tmp_i1_389_fu_2312_p2);

assign sel_tmp5_fu_2093_p2 = (tmp_167_i_fu_1956_p2 & sel_tmp4_fu_2088_p2);

assign sel_tmp6_demorgan_fu_1882_p2 = (tmp_98_i_reg_5344 | tmp_110_i_fu_1739_p2);

assign sel_tmp6_fu_1887_p2 = (sel_tmp6_demorgan_fu_1882_p2 ^ 1'd1);

assign sel_tmp6_i_fu_2451_p3 = ((sel_tmp5_demorgan_i_fu_2445_p2[0:0] === 1'b1) ? sel_tmp2_i_fu_2437_p3 : ret_i_i_i_fu_2422_p1);

assign sel_tmp7_fu_1893_p2 = (tmp_107_i_reg_5356 & sel_tmp6_fu_1887_p2);

assign sel_tmp7_i_fu_2459_p2 = (tmp_i1_fu_2307_p2 ^ 1'd1);

assign sel_tmp8_fu_2104_p2 = (sel_tmp25_demorgan_fu_2099_p2 ^ 1'd1);

assign sel_tmp8_i_fu_2465_p2 = (tmp_i1_389_fu_2312_p2 & sel_tmp7_i_fu_2459_p2);

assign sel_tmp9_fu_2110_p2 = (tmp_164_i_reg_5424 & sel_tmp8_fu_2104_p2);

assign sel_tmp_fu_1903_p2 = (sel_tmp13_demorgan_fu_1898_p2 ^ 1'd1);

assign sel_tmp_i1_fu_3183_p1 = sel_tmp_v_i_fu_3176_p3;

assign sel_tmp_i2_fu_4954_p1 = sel_tmp_v_i1_fu_4947_p3;

assign sel_tmp_i_fu_2426_p2 = (p_Result_61_reg_5522 | or_cond_i_fu_2327_p2);

assign sel_tmp_v_i1_fu_4947_p3 = ((tmp_i_i1_reg_6243[0:0] === 1'b1) ? p_Result_147_fu_4896_p3 : p_Result_148_fu_4939_p3);

assign sel_tmp_v_i_fu_3176_p3 = ((tmp_i_i_390_reg_5776[0:0] === 1'b1) ? p_Result_133_fu_3125_p3 : p_Result_134_fu_3168_p3);

assign sh_amt_1_cast82_i_fu_1950_p1 = sh_amt_1_reg_5430;

assign sh_amt_1_cast_i_fu_1953_p1 = sh_amt_1_reg_5430;

assign sh_amt_1_fu_1646_p3 = ((tmp_164_i_fu_1628_p2[0:0] === 1'b1) ? tmp_165_i_fu_1634_p2 : tmp_166_i_fu_1640_p2);

assign sh_amt_cast83_i_fu_1733_p1 = sh_amt_reg_5362;

assign sh_amt_cast_i_fu_1736_p1 = sh_amt_reg_5362;

assign sh_amt_fu_1502_p3 = ((tmp_107_i_fu_1484_p2[0:0] === 1'b1) ? tmp_108_i_fu_1490_p2 : tmp_109_i_fu_1496_p2);

assign sh_assign_1_fu_2546_p3 = ((isNeg_fu_2528_p3[0:0] === 1'b1) ? tmp_294_i_i_i_cast_i_fu_2542_p1 : sh_assign_fu_2522_p2);

assign sh_assign_2_fu_3234_p2 = ($signed(9'd385) + $signed(tmp_i_i_i_i9_cast_i_fu_3230_p1));

assign sh_assign_2_i_i_i13_1_fu_3282_p1 = sh_assign_3_reg_5812;

assign sh_assign_2_i_i_i13_s_fu_3279_p1 = sh_assign_3_reg_5812;

assign sh_assign_2_i_i_i56_1_fu_5053_p1 = sh_assign_5_reg_6279;

assign sh_assign_2_i_i_i56_s_fu_5050_p1 = sh_assign_5_reg_6279;

assign sh_assign_2_i_i_i_ca_1_fu_2558_p1 = sh_assign_1_fu_2546_p3;

assign sh_assign_2_i_i_i_ca_fu_2554_p1 = sh_assign_1_fu_2546_p3;

assign sh_assign_3_fu_3258_p3 = ((isNeg_1_fu_3240_p3[0:0] === 1'b1) ? tmp_294_i_i_i12_cast_fu_3254_p1 : sh_assign_2_fu_3234_p2);

assign sh_assign_4_fu_5005_p2 = ($signed(9'd385) + $signed(tmp_i_i_i_i52_cast_i_fu_5001_p1));

assign sh_assign_5_fu_5029_p3 = ((isNeg_2_fu_5011_p3[0:0] === 1'b1) ? tmp_294_i_i_i55_cast_fu_5025_p1 : sh_assign_4_fu_5005_p2);

assign sh_assign_fu_2522_p2 = ($signed(9'd385) + $signed(tmp_i_i_i_i_cast_i_fu_2518_p1));

assign step_fu_2635_p2 = ($signed(17'd131071) + $signed(p_Val2_cast_fu_2632_p1));

assign storemerge1_i_fu_1767_p3 = ((isneg_reg_5326[0:0] === 1'b1) ? 16'd65535 : 16'd0);

assign storemerge_i_fu_1984_p3 = ((isneg_1_reg_5394[0:0] === 1'b1) ? 16'd65535 : 16'd0);

assign t_V_10_fu_3076_p1 = x_assign_8_fu_3069_p3;

assign t_V_18_fu_4847_p1 = x_assign_s_fu_4840_p3;

assign tmp32_V_12_fu_3778_p1 = p_Val2_123_reg_5910;

assign tmp32_V_13_fu_3790_p2 = tmp32_V_12_fu_3778_p1 << tmp_191_cast_i_fu_3786_p1;

assign tmp32_V_14_fu_3796_p1 = p_Result_102_reg_5930;

assign tmp32_V_15_fu_3799_p3 = ((icmp6_reg_5925[0:0] === 1'b1) ? tmp32_V_13_fu_3790_p2 : tmp32_V_14_fu_3796_p1);

assign tmp32_V_18_fu_4695_p1 = p_Val2_128_reg_6196[31:0];

assign tmp32_V_19_fu_4708_p2 = tmp32_V_18_fu_4695_p1 << tmp_260_cast_i_fu_4704_p1;

assign tmp32_V_1_fu_2937_p2 = tmp32_V_fu_2924_p1 << tmp_153_cast_i_fu_2933_p1;

assign tmp32_V_20_fu_4770_p1 = tmp_255_fu_4764_p2[31:0];

assign tmp32_V_21_fu_4774_p3 = ((icmp7_fu_4689_p2[0:0] === 1'b1) ? tmp32_V_19_fu_4708_p2 : tmp32_V_20_fu_4770_p1);

assign tmp32_V_24_fu_3011_p1 = grp_fu_1269_p1;

assign tmp32_V_25_fu_3806_p1 = grp_fu_1269_p1;

assign tmp32_V_26_fu_3820_p1 = grp_fu_1272_p1;

assign tmp32_V_27_fu_4782_p1 = grp_fu_1269_p1;

assign tmp32_V_2_fu_2999_p1 = tmp_176_fu_2993_p2[31:0];

assign tmp32_V_3_fu_3745_p1 = tmp_V_reg_5885;

assign tmp32_V_4_fu_3757_p2 = tmp32_V_3_fu_3745_p1 << tmp_158_cast_i_fu_3753_p1;

assign tmp32_V_5_fu_3763_p1 = p_Result_97_reg_5905;

assign tmp32_V_6_fu_3003_p3 = ((icmp4_fu_2918_p2[0:0] === 1'b1) ? tmp32_V_1_fu_2937_p2 : tmp32_V_2_fu_2999_p1);

assign tmp32_V_9_fu_3766_p3 = ((icmp5_reg_5900[0:0] === 1'b1) ? tmp32_V_4_fu_3757_p2 : tmp32_V_5_fu_3763_p1);

assign tmp32_V_fu_2924_p1 = p_Val2_103_reg_5729[31:0];

assign tmp82_cast_cast_fu_3842_p3 = ((tmp_168_i_fu_3834_p2[0:0] === 1'b1) ? 8'd114 : 8'd113);

assign tmp83_cast_cast_fu_3910_p3 = ((tmp_194_i_fu_3902_p2[0:0] === 1'b1) ? 8'd114 : 8'd113);

assign tmp85_cast_cast_fu_4804_p3 = ((tmp_262_i_fu_4796_p2[0:0] === 1'b1) ? 8'd114 : 8'd113);

assign tmp_107_i_fu_1484_p2 = (($signed(F2_fu_1478_p2) > $signed(12'd14)) ? 1'b1 : 1'b0);

assign tmp_108_i_fu_1490_p2 = ($signed(12'd4082) + $signed(F2_fu_1478_p2));

assign tmp_109_i_fu_1496_p2 = (12'd14 - F2_fu_1478_p2);

assign tmp_110_i_fu_1739_p2 = ((F2_reg_5350 == 12'd14) ? 1'b1 : 1'b0);

assign tmp_111_i_cast_fu_1388_p1 = r_i_reg_859;

assign tmp_112_i_fu_2661_p2 = (($signed(cnt_i_cast_fu_2657_p1) < $signed(M_reg_5560)) ? 1'b1 : 1'b0);

assign tmp_115_i_fu_2682_p2 = (($signed(grp_fu_2677_p2) < $signed(pt_buf_length_i_fu_376)) ? 1'b1 : 1'b0);

assign tmp_117_i_fu_2239_p2 = ((edge_val_q0 == 8'd0) ? 1'b1 : 1'b0);

assign tmp_118_i_fu_1748_p2 = ((sh_amt_reg_5362 < 12'd54) ? 1'b1 : 1'b0);

assign tmp_121_i_fu_2688_p1 = grp_fu_2677_p2;

assign tmp_122_fu_1450_p1 = ireg_V_fu_1420_p1[51:0];

assign tmp_123_fu_1744_p1 = man_V_5_fu_1728_p3[15:0];

assign tmp_124_fu_1510_p4 = {{sh_amt_fu_1502_p3[11:4]}};

assign tmp_124_i_fu_1753_p1 = $unsigned(sh_amt_cast_i_fu_1736_p1);

assign tmp_125_fu_1763_p1 = tmp_125_i_fu_1757_p2[15:0];

assign tmp_125_i_fu_1757_p2 = $signed(man_V_5_fu_1728_p3) >>> tmp_124_i_fu_1753_p1;

assign tmp_126_fu_1797_p3 = man_V_5_fu_1728_p3[tmp_131_cast_i_fu_1793_p1];

assign tmp_127_fu_1532_p4 = {{F2_fu_1478_p2[11:4]}};

assign tmp_128_fu_1548_p1 = F2_fu_1478_p2[5:0];

assign tmp_128_i_fu_1774_p2 = tmp_123_fu_1744_p1 << sh_amt_cast83_i_fu_1733_p1;

assign tmp_129_fu_1816_p3 = ((tmp_147_i_reg_5389[0:0] === 1'b1) ? 6'd0 : tmp_146_cast_i_op_fu_1811_p2);

assign tmp_12_fu_3158_p4 = {{p_Val2_113_fu_3137_p2[31:23]}};

assign tmp_130_fu_1823_p1 = tmp_129_fu_1816_p3;

assign tmp_130_i_fu_1526_p2 = (($signed(tmp_108_i_fu_1490_p2) > $signed(12'd54)) ? 1'b1 : 1'b0);

assign tmp_131_cast_i_fu_1793_p1 = tmp_131_i_fu_1788_p2;

assign tmp_131_fu_1827_p2 = 54'd18014398509481983 >> tmp_130_fu_1823_p1;

assign tmp_131_i_fu_1788_p2 = ($signed(12'd4081) + $signed(F2_reg_5350));

assign tmp_133_fu_1568_p1 = ireg_V_1_fu_1564_p1[62:0];

assign tmp_134_i_fu_3400_p2 = (($signed(max_val1_i_reg_930) < $signed(threshold_read_reg_5233)) ? 1'b1 : 1'b0);

assign tmp_135_fu_1594_p1 = ireg_V_1_fu_1564_p1[51:0];

assign tmp_135_i_cast_fu_2766_p1 = ap_phi_mux_max_n_phi_fu_956_p4;

assign tmp_135_i_fu_2761_p1 = ap_phi_mux_max_n_phi_fu_956_p4;

assign tmp_136_fu_1961_p1 = man_V_fu_1945_p3[15:0];

assign tmp_136_i_fu_2805_p1 = p_Val2_100_reg_5707;

assign tmp_137_fu_1654_p4 = {{sh_amt_1_fu_1646_p3[11:4]}};

assign tmp_137_i_fu_2808_p1 = p_Val2_23_reg_5713;

assign tmp_138_fu_1980_p1 = tmp_186_i_fu_1974_p2[15:0];

assign tmp_138_i_fu_2821_p2 = ((p_Val2_101_fu_2811_p2 == 49'd0) ? 1'b1 : 1'b0);

assign tmp_139_fu_2014_p3 = man_V_fu_1945_p3[tmp_199_cast_i_fu_2010_p1];

assign tmp_140_fu_1676_p4 = {{F2_1_fu_1622_p2[11:4]}};

assign tmp_140_i_fu_3405_p1 = max_n_i_reg_940;

assign tmp_141_fu_1692_p1 = F2_1_fu_1622_p2[5:0];

assign tmp_141_i_fu_3438_p2 = ((p_Val2_s_reg_5847 == 16'd0) ? 1'b1 : 1'b0);

assign tmp_142_cast_i_fu_2835_p2 = (48'd0 - p_Val2_37_cast_i_fu_2817_p2);

assign tmp_142_fu_2033_p3 = ((tmp_214_i_reg_5457[0:0] === 1'b1) ? 6'd0 : tmp_213_cast_i_op_fu_2028_p2);

assign tmp_143_fu_2040_p1 = tmp_142_fu_2033_p3;


always @ (p_Result_131_fu_2863_p3) begin
    if (p_Result_131_fu_2863_p3[0] == 1'b1) begin
        tmp_143_i_fu_2871_p3 = 64'd0;
    end else if (p_Result_131_fu_2863_p3[1] == 1'b1) begin
        tmp_143_i_fu_2871_p3 = 64'd1;
    end else if (p_Result_131_fu_2863_p3[2] == 1'b1) begin
        tmp_143_i_fu_2871_p3 = 64'd2;
    end else if (p_Result_131_fu_2863_p3[3] == 1'b1) begin
        tmp_143_i_fu_2871_p3 = 64'd3;
    end else if (p_Result_131_fu_2863_p3[4] == 1'b1) begin
        tmp_143_i_fu_2871_p3 = 64'd4;
    end else if (p_Result_131_fu_2863_p3[5] == 1'b1) begin
        tmp_143_i_fu_2871_p3 = 64'd5;
    end else if (p_Result_131_fu_2863_p3[6] == 1'b1) begin
        tmp_143_i_fu_2871_p3 = 64'd6;
    end else if (p_Result_131_fu_2863_p3[7] == 1'b1) begin
        tmp_143_i_fu_2871_p3 = 64'd7;
    end else if (p_Result_131_fu_2863_p3[8] == 1'b1) begin
        tmp_143_i_fu_2871_p3 = 64'd8;
    end else if (p_Result_131_fu_2863_p3[9] == 1'b1) begin
        tmp_143_i_fu_2871_p3 = 64'd9;
    end else if (p_Result_131_fu_2863_p3[10] == 1'b1) begin
        tmp_143_i_fu_2871_p3 = 64'd10;
    end else if (p_Result_131_fu_2863_p3[11] == 1'b1) begin
        tmp_143_i_fu_2871_p3 = 64'd11;
    end else if (p_Result_131_fu_2863_p3[12] == 1'b1) begin
        tmp_143_i_fu_2871_p3 = 64'd12;
    end else if (p_Result_131_fu_2863_p3[13] == 1'b1) begin
        tmp_143_i_fu_2871_p3 = 64'd13;
    end else if (p_Result_131_fu_2863_p3[14] == 1'b1) begin
        tmp_143_i_fu_2871_p3 = 64'd14;
    end else if (p_Result_131_fu_2863_p3[15] == 1'b1) begin
        tmp_143_i_fu_2871_p3 = 64'd15;
    end else if (p_Result_131_fu_2863_p3[16] == 1'b1) begin
        tmp_143_i_fu_2871_p3 = 64'd16;
    end else if (p_Result_131_fu_2863_p3[17] == 1'b1) begin
        tmp_143_i_fu_2871_p3 = 64'd17;
    end else if (p_Result_131_fu_2863_p3[18] == 1'b1) begin
        tmp_143_i_fu_2871_p3 = 64'd18;
    end else if (p_Result_131_fu_2863_p3[19] == 1'b1) begin
        tmp_143_i_fu_2871_p3 = 64'd19;
    end else if (p_Result_131_fu_2863_p3[20] == 1'b1) begin
        tmp_143_i_fu_2871_p3 = 64'd20;
    end else if (p_Result_131_fu_2863_p3[21] == 1'b1) begin
        tmp_143_i_fu_2871_p3 = 64'd21;
    end else if (p_Result_131_fu_2863_p3[22] == 1'b1) begin
        tmp_143_i_fu_2871_p3 = 64'd22;
    end else if (p_Result_131_fu_2863_p3[23] == 1'b1) begin
        tmp_143_i_fu_2871_p3 = 64'd23;
    end else if (p_Result_131_fu_2863_p3[24] == 1'b1) begin
        tmp_143_i_fu_2871_p3 = 64'd24;
    end else if (p_Result_131_fu_2863_p3[25] == 1'b1) begin
        tmp_143_i_fu_2871_p3 = 64'd25;
    end else if (p_Result_131_fu_2863_p3[26] == 1'b1) begin
        tmp_143_i_fu_2871_p3 = 64'd26;
    end else if (p_Result_131_fu_2863_p3[27] == 1'b1) begin
        tmp_143_i_fu_2871_p3 = 64'd27;
    end else if (p_Result_131_fu_2863_p3[28] == 1'b1) begin
        tmp_143_i_fu_2871_p3 = 64'd28;
    end else if (p_Result_131_fu_2863_p3[29] == 1'b1) begin
        tmp_143_i_fu_2871_p3 = 64'd29;
    end else if (p_Result_131_fu_2863_p3[30] == 1'b1) begin
        tmp_143_i_fu_2871_p3 = 64'd30;
    end else if (p_Result_131_fu_2863_p3[31] == 1'b1) begin
        tmp_143_i_fu_2871_p3 = 64'd31;
    end else if (p_Result_131_fu_2863_p3[32] == 1'b1) begin
        tmp_143_i_fu_2871_p3 = 64'd32;
    end else if (p_Result_131_fu_2863_p3[33] == 1'b1) begin
        tmp_143_i_fu_2871_p3 = 64'd33;
    end else if (p_Result_131_fu_2863_p3[34] == 1'b1) begin
        tmp_143_i_fu_2871_p3 = 64'd34;
    end else if (p_Result_131_fu_2863_p3[35] == 1'b1) begin
        tmp_143_i_fu_2871_p3 = 64'd35;
    end else if (p_Result_131_fu_2863_p3[36] == 1'b1) begin
        tmp_143_i_fu_2871_p3 = 64'd36;
    end else if (p_Result_131_fu_2863_p3[37] == 1'b1) begin
        tmp_143_i_fu_2871_p3 = 64'd37;
    end else if (p_Result_131_fu_2863_p3[38] == 1'b1) begin
        tmp_143_i_fu_2871_p3 = 64'd38;
    end else if (p_Result_131_fu_2863_p3[39] == 1'b1) begin
        tmp_143_i_fu_2871_p3 = 64'd39;
    end else if (p_Result_131_fu_2863_p3[40] == 1'b1) begin
        tmp_143_i_fu_2871_p3 = 64'd40;
    end else if (p_Result_131_fu_2863_p3[41] == 1'b1) begin
        tmp_143_i_fu_2871_p3 = 64'd41;
    end else if (p_Result_131_fu_2863_p3[42] == 1'b1) begin
        tmp_143_i_fu_2871_p3 = 64'd42;
    end else if (p_Result_131_fu_2863_p3[43] == 1'b1) begin
        tmp_143_i_fu_2871_p3 = 64'd43;
    end else if (p_Result_131_fu_2863_p3[44] == 1'b1) begin
        tmp_143_i_fu_2871_p3 = 64'd44;
    end else if (p_Result_131_fu_2863_p3[45] == 1'b1) begin
        tmp_143_i_fu_2871_p3 = 64'd45;
    end else if (p_Result_131_fu_2863_p3[46] == 1'b1) begin
        tmp_143_i_fu_2871_p3 = 64'd46;
    end else if (p_Result_131_fu_2863_p3[47] == 1'b1) begin
        tmp_143_i_fu_2871_p3 = 64'd47;
    end else if (p_Result_131_fu_2863_p3[48] == 1'b1) begin
        tmp_143_i_fu_2871_p3 = 64'd48;
    end else if (p_Result_131_fu_2863_p3[49] == 1'b1) begin
        tmp_143_i_fu_2871_p3 = 64'd49;
    end else if (p_Result_131_fu_2863_p3[50] == 1'b1) begin
        tmp_143_i_fu_2871_p3 = 64'd50;
    end else if (p_Result_131_fu_2863_p3[51] == 1'b1) begin
        tmp_143_i_fu_2871_p3 = 64'd51;
    end else if (p_Result_131_fu_2863_p3[52] == 1'b1) begin
        tmp_143_i_fu_2871_p3 = 64'd52;
    end else if (p_Result_131_fu_2863_p3[53] == 1'b1) begin
        tmp_143_i_fu_2871_p3 = 64'd53;
    end else if (p_Result_131_fu_2863_p3[54] == 1'b1) begin
        tmp_143_i_fu_2871_p3 = 64'd54;
    end else if (p_Result_131_fu_2863_p3[55] == 1'b1) begin
        tmp_143_i_fu_2871_p3 = 64'd55;
    end else if (p_Result_131_fu_2863_p3[56] == 1'b1) begin
        tmp_143_i_fu_2871_p3 = 64'd56;
    end else if (p_Result_131_fu_2863_p3[57] == 1'b1) begin
        tmp_143_i_fu_2871_p3 = 64'd57;
    end else if (p_Result_131_fu_2863_p3[58] == 1'b1) begin
        tmp_143_i_fu_2871_p3 = 64'd58;
    end else if (p_Result_131_fu_2863_p3[59] == 1'b1) begin
        tmp_143_i_fu_2871_p3 = 64'd59;
    end else if (p_Result_131_fu_2863_p3[60] == 1'b1) begin
        tmp_143_i_fu_2871_p3 = 64'd60;
    end else if (p_Result_131_fu_2863_p3[61] == 1'b1) begin
        tmp_143_i_fu_2871_p3 = 64'd61;
    end else if (p_Result_131_fu_2863_p3[62] == 1'b1) begin
        tmp_143_i_fu_2871_p3 = 64'd62;
    end else if (p_Result_131_fu_2863_p3[63] == 1'b1) begin
        tmp_143_i_fu_2871_p3 = 64'd63;
    end else begin
        tmp_143_i_fu_2871_p3 = 64'd64;
    end
end

assign tmp_144_fu_2044_p2 = 54'd18014398509481983 >> tmp_143_fu_2040_p1;

assign tmp_146_cast_i_op_fu_1811_p2 = (6'd5 - tmp_128_reg_5384);

assign tmp_146_i_fu_1552_p2 = ($signed(12'd4080) + $signed(F2_fu_1478_p2));

assign tmp_147_i_fu_1558_p2 = (($signed(tmp_146_i_fu_1552_p2) > $signed(12'd53)) ? 1'b1 : 1'b0);

assign tmp_148_fu_2303_p1 = p_Val2_78_fu_2262_p1[30:0];

assign tmp_149_i_fu_1839_p2 = ((p_Result_s_fu_1833_p2 != 54'd0) ? 1'b1 : 1'b0);

assign tmp_14_fu_3878_p3 = ((tmp_141_i_reg_5875[0:0] === 1'b1) ? 31'd0 : tmp_206_fu_3874_p1);

assign tmp_150_i_fu_1861_p1 = qb_assign_1_fu_1855_p2;

assign tmp_153_cast_i_fu_2933_p1 = tmp_153_i_fu_2927_p2;

assign tmp_153_i_fu_2927_p2 = (31'd31 - msb_idx_1_fu_2900_p3);

assign tmp_154_fu_2578_p3 = tmp_296_i_i_i_i_fu_2566_p2[32'd24];

assign tmp_155_fu_2628_p1 = grp_sqrt_fixed_32_32_s_fu_1258_ap_return[0:0];

assign tmp_155_i_fu_1590_p1 = exp_tmp_V_1_fu_1580_p4;

assign tmp_156_fu_2178_p1 = p_y_assign_reg_882[9:0];

assign tmp_157_fu_2190_p1 = p_y_assign_reg_882[11:0];

assign tmp_157_i_fu_1616_p2 = ((tmp_133_fu_1568_p1 == 63'd0) ? 1'b1 : 1'b0);

assign tmp_158_cast_i_fu_3753_p1 = tmp_158_i_fu_3748_p2;

assign tmp_158_fu_2224_p1 = ap_phi_mux_p_x_assign_phi_fu_900_p4[17:0];

assign tmp_158_i_fu_3748_p2 = (31'd31 - msb_idx_3_reg_5895);

assign tmp_159_fu_2694_p0 = pt_buf_val_x_q0;

assign tmp_159_fu_2694_p1 = tmp_159_fu_2694_p0[17:0];

assign tmp_160_fu_2698_p0 = pt_buf_val_y_q0;

assign tmp_160_fu_2698_p1 = tmp_160_fu_2698_p0[9:0];

assign tmp_160_i_fu_3025_p2 = ((p_Result_24_i_reg_5760 != 8'd158) ? 1'b1 : 1'b0);

assign tmp_161_fu_2710_p0 = pt_buf_val_y_q0;

assign tmp_161_fu_2710_p1 = tmp_161_fu_2710_p0[11:0];

assign tmp_162_i_fu_3047_p3 = {{is_neg_reg_5724_pp4_iter5_reg}, {p_Repl2_19_trunc_i_fu_3041_p2}};

assign tmp_164_fu_2888_p1 = msb_idx_fu_2883_p2[30:0];

assign tmp_164_i_fu_1628_p2 = (($signed(F2_1_fu_1622_p2) > $signed(12'd14)) ? 1'b1 : 1'b0);

assign tmp_165_fu_2892_p3 = msb_idx_fu_2883_p2[32'd31];

assign tmp_165_i_fu_1634_p2 = ($signed(12'd4082) + $signed(F2_1_fu_1622_p2));

assign tmp_166_fu_2908_p4 = {{msb_idx_1_fu_2900_p3[30:5]}};

assign tmp_166_i_fu_1640_p2 = (12'd14 - F2_1_fu_1622_p2);

assign tmp_167_i_fu_1956_p2 = ((F2_1_reg_5418 == 12'd14) ? 1'b1 : 1'b0);

assign tmp_168_fu_2943_p1 = msb_idx_1_fu_2900_p3[5:0];

assign tmp_168_i_fu_3834_p2 = ((p_Result_26_i_reg_5955 != 8'd158) ? 1'b1 : 1'b0);

assign tmp_169_fu_2947_p2 = ((msb_idx_1_fu_2900_p3 < 31'd31) ? 1'b1 : 1'b0);

assign tmp_170_fu_2953_p2 = ($signed(6'd33) + $signed(tmp_168_fu_2943_p1));

integer ap_tvar_int_4;

always @ (p_Val2_42_cast_i_reg_5734) begin
    for (ap_tvar_int_4 = 49 - 1; ap_tvar_int_4 >= 0; ap_tvar_int_4 = ap_tvar_int_4 - 1) begin
        if (ap_tvar_int_4 > 48 - 0) begin
            tmp_171_fu_2959_p4[ap_tvar_int_4] = 1'b0;
        end else begin
            tmp_171_fu_2959_p4[ap_tvar_int_4] = p_Val2_42_cast_i_reg_5734[48 - ap_tvar_int_4];
        end
    end
end

assign tmp_172_fu_2968_p2 = (6'd15 - tmp_168_fu_2943_p1);

assign tmp_172_i_fu_3856_p3 = {{is_neg_1_reg_5880}, {p_Repl2_21_trunc_i_fu_3850_p2}};

assign tmp_173_fu_2974_p3 = ((tmp_169_fu_2947_p2[0:0] === 1'b1) ? tmp_171_fu_2959_p4 : p_Val2_42_cast_i_reg_5734);

assign tmp_174_fu_2981_p3 = ((tmp_169_fu_2947_p2[0:0] === 1'b1) ? tmp_172_fu_2968_p2 : tmp_170_fu_2953_p2);

assign tmp_175_fu_2989_p1 = tmp_174_fu_2981_p3;

assign tmp_175_i_fu_3378_p2 = (($signed(max_val_2_fu_3371_p2) > $signed(max_val1_i_reg_930)) ? 1'b1 : 1'b0);

assign tmp_176_fu_2993_p2 = tmp_173_fu_2974_p3 >> tmp_175_fu_2989_p1;

assign tmp_178_fu_3030_p1 = msb_idx_reg_5745_pp4_iter5_reg[7:0];

assign tmp_178_i_fu_3773_p2 = ((p_Val2_121_reg_5854 == 16'd0) ? 1'b1 : 1'b0);

assign tmp_179_i_fu_1965_p2 = ((sh_amt_1_reg_5430 < 12'd54) ? 1'b1 : 1'b0);

assign tmp_17_fu_3946_p3 = ((tmp_178_i_reg_5940[0:0] === 1'b1) ? 31'd0 : tmp_224_fu_3942_p1);

assign tmp_182_i_fu_3596_p2 = ($signed(16'd0) - $signed(p_Val2_121_reg_5854));

assign tmp_184_fu_3301_p3 = tmp_296_i_i_i15_i_fu_3289_p2[32'd24];

assign tmp_185_fu_3336_p1 = p_Val2_i_i_i22_i_fu_3330_p2[18:0];

assign tmp_185_i_fu_1970_p1 = $unsigned(sh_amt_1_cast_i_fu_1953_p1);

assign tmp_186_fu_3340_p1 = p_Val2_117_fu_3323_p3[18:0];

assign tmp_186_i_fu_1974_p2 = $signed(man_V_fu_1945_p3) >>> tmp_185_i_fu_1970_p1;

assign tmp_187_fu_3344_p3 = ((p_Result_135_reg_5797[0:0] === 1'b1) ? tmp_185_fu_3336_p1 : tmp_186_fu_3340_p1);

assign tmp_188_fu_3351_p2 = (19'd560 + tmp_187_fu_3344_p3);

assign tmp_189_fu_3410_p1 = max_n_i_reg_940[9:0];

assign tmp_189_i_fu_1991_p2 = tmp_136_fu_1961_p1 << sh_amt_1_cast82_i_fu_1950_p1;

assign tmp_191_cast_i_fu_3786_p1 = tmp_191_i_fu_3781_p2;

assign tmp_191_fu_3490_p1 = msb_idx_2_fu_3484_p2[30:0];

assign tmp_191_i_fu_3781_p2 = (31'd31 - msb_idx_5_reg_5920);

assign tmp_192_fu_3494_p3 = msb_idx_2_fu_3484_p2[32'd31];

assign tmp_193_fu_3510_p4 = {{msb_idx_3_fu_3502_p3[30:5]}};

assign tmp_193_i_fu_1670_p2 = (($signed(tmp_165_i_fu_1634_p2) > $signed(12'd54)) ? 1'b1 : 1'b0);

assign tmp_194_fu_3526_p1 = msb_idx_3_fu_3502_p3[4:0];

assign tmp_194_i_fu_3902_p2 = ((p_Result_32_i_reg_5965 != 8'd158) ? 1'b1 : 1'b0);

assign tmp_195_fu_3530_p2 = ((msb_idx_3_fu_3502_p3 < 31'd31) ? 1'b1 : 1'b0);

assign tmp_196_fu_3536_p2 = (5'd1 + tmp_194_fu_3526_p1);

integer ap_tvar_int_5;

always @ (tmp_V_fu_3451_p3) begin
    for (ap_tvar_int_5 = 16 - 1; ap_tvar_int_5 >= 0; ap_tvar_int_5 = ap_tvar_int_5 - 1) begin
        if (ap_tvar_int_5 > 15 - 0) begin
            tmp_197_fu_3542_p4[ap_tvar_int_5] = 1'b0;
        end else begin
            tmp_197_fu_3542_p4[ap_tvar_int_5] = tmp_V_fu_3451_p3[15 - ap_tvar_int_5];
        end
    end
end

assign tmp_198_fu_3552_p2 = (5'd14 - tmp_194_fu_3526_p1);

assign tmp_198_i_fu_3924_p3 = {{is_neg_2_reg_5863}, {p_Repl2_24_trunc_i_fu_3918_p2}};

assign tmp_199_cast_i_fu_2010_p1 = tmp_199_i_fu_2005_p2;

assign tmp_199_fu_3558_p3 = ((tmp_195_fu_3530_p2[0:0] === 1'b1) ? tmp_197_fu_3542_p4 : tmp_V_fu_3451_p3);

assign tmp_199_i_fu_2005_p2 = ($signed(12'd4081) + $signed(F2_1_reg_5418));

assign tmp_19_fu_3970_p4 = {{tmp_14_fu_3878_p3[30:23]}};

assign tmp_200_fu_3566_p3 = ((tmp_195_fu_3530_p2[0:0] === 1'b1) ? tmp_198_fu_3552_p2 : tmp_196_fu_3536_p2);

assign tmp_201_fu_3574_p1 = tmp_200_fu_3566_p3;

assign tmp_202_fu_3578_p2 = tmp_199_fu_3558_p3 >> tmp_201_fu_3574_p1;

assign tmp_203_fu_3584_p1 = tmp_202_fu_3578_p2[1:0];

assign tmp_205_fu_3839_p1 = msb_idx_2_reg_5890[7:0];

assign tmp_206_fu_3874_p1 = p_Result_138_fu_3863_p5[30:0];

assign tmp_207_fu_3885_p1 = tmp_14_fu_3878_p3[22:0];

assign tmp_209_fu_3639_p1 = msb_idx_4_fu_3633_p2[30:0];

assign tmp_20_fu_3980_p4 = {{tmp_17_fu_3946_p3[30:23]}};

assign tmp_210_fu_3643_p3 = msb_idx_4_fu_3633_p2[32'd31];

assign tmp_211_fu_3659_p4 = {{msb_idx_5_fu_3651_p3[30:5]}};

assign tmp_212_fu_3675_p1 = msb_idx_5_fu_3651_p3[4:0];

assign tmp_213_cast_i_op_fu_2028_p2 = (6'd5 - tmp_141_reg_5452);

assign tmp_213_fu_3679_p2 = ((msb_idx_5_fu_3651_p3 < 31'd31) ? 1'b1 : 1'b0);

assign tmp_213_i_fu_1696_p2 = ($signed(12'd4080) + $signed(F2_1_fu_1622_p2));

assign tmp_214_fu_3685_p2 = (5'd1 + tmp_212_fu_3675_p1);

assign tmp_214_i_fu_1702_p2 = (($signed(tmp_213_i_fu_1696_p2) > $signed(12'd53)) ? 1'b1 : 1'b0);

integer ap_tvar_int_6;

always @ (p_Val2_123_fu_3601_p3) begin
    for (ap_tvar_int_6 = 16 - 1; ap_tvar_int_6 >= 0; ap_tvar_int_6 = ap_tvar_int_6 - 1) begin
        if (ap_tvar_int_6 > 15 - 0) begin
            tmp_215_fu_3691_p4[ap_tvar_int_6] = 1'b0;
        end else begin
            tmp_215_fu_3691_p4[ap_tvar_int_6] = p_Val2_123_fu_3601_p3[15 - ap_tvar_int_6];
        end
    end
end

assign tmp_216_fu_3701_p2 = (5'd14 - tmp_212_fu_3675_p1);

assign tmp_216_i_fu_2056_p2 = ((p_Result_54_fu_2050_p2 != 54'd0) ? 1'b1 : 1'b0);

assign tmp_217_fu_3707_p3 = ((tmp_213_fu_3679_p2[0:0] === 1'b1) ? tmp_215_fu_3691_p4 : p_Val2_123_fu_3601_p3);

assign tmp_217_i_fu_2078_p1 = qb_assign_3_fu_2072_p2;

assign tmp_218_fu_3715_p3 = ((tmp_213_fu_3679_p2[0:0] === 1'b1) ? tmp_216_fu_3701_p2 : tmp_214_fu_3685_p2);

assign tmp_219_fu_3723_p1 = tmp_218_fu_3715_p3;

assign tmp_21_fu_4002_p2 = (notrhs1_fu_3996_p2 | notlhs1_fu_3990_p2);

assign tmp_220_fu_3727_p2 = tmp_217_fu_3707_p3 >> tmp_219_fu_3723_p1;

assign tmp_220_i_fu_4323_p2 = (($signed(abs_i_i_fu_4315_p3) < $signed(threshold_read_reg_5233)) ? 1'b1 : 1'b0);

assign tmp_221_fu_3733_p1 = tmp_220_fu_3727_p2[1:0];

assign tmp_221_i_fu_4124_p1 = k_i_reg_1051;

assign tmp_223_fu_3907_p1 = msb_idx_4_reg_5915[7:0];

assign tmp_224_fu_3942_p1 = p_Result_142_fu_3931_p5[30:0];

assign tmp_224_i_fu_4354_p2 = (($signed(abs_i44_i_fu_4346_p3) < $signed(threshold_read_reg_5233)) ? 1'b1 : 1'b0);

assign tmp_225_fu_3953_p1 = tmp_17_fu_3946_p3[22:0];

assign tmp_226_fu_4100_p2 = j_3_reg_5645 << 32'd16;

assign tmp_227_fu_4079_p2 = i_3_reg_5652 << 32'd16;

assign tmp_227_i_fu_4130_p4 = {{j1_1_reg_1074[31:16]}};

assign tmp_228_fu_4180_p3 = tmp_26_fu_4174_p2[32'd31];

assign tmp_229_fu_4216_p1 = j1_2_fu_4166_p3[17:0];

assign tmp_229_i_fu_4144_p4 = {{i1_reg_1085[31:16]}};

assign tmp_22_fu_4020_p2 = (notrhs2_fu_4014_p2 | notlhs2_fu_4008_p2);

assign tmp_230_fu_4220_p1 = i1_2_fu_4158_p3[9:0];

assign tmp_231_fu_4232_p1 = i1_2_fu_4158_p3[11:0];

assign tmp_231_i_fu_4205_p2 = (($signed(i1_2_fu_4158_p3) < $signed(rows_reg_5246)) ? 1'b1 : 1'b0);

assign tmp_232_fu_4382_p1 = line_end_x_load_2_reg_6063[15:0];

assign tmp_233_fu_4391_p1 = total_fu_4377_p2[9:0];

assign tmp_234_fu_5203_p1 = line_end_y_q1[15:0];

assign tmp_235_fu_4406_p1 = line_end_x_load_1_reg_6058[15:0];

assign tmp_235_i_fu_4386_p1 = total_fu_4377_p2;

assign tmp_236_fu_5208_p1 = line_end_y_q0[15:0];

assign tmp_237_fu_4465_p1 = j1_5_fu_4457_p3[17:0];

assign tmp_238_fu_4469_p1 = i1_5_fu_4449_p3[9:0];

assign tmp_239_fu_4481_p1 = i1_5_fu_4449_p3[11:0];

assign tmp_239_i_fu_4410_p2 = (($signed(total_fu_4377_p2) > $signed(32'd98)) ? 1'b1 : 1'b0);

assign tmp_23_fu_4026_p2 = (tmp_22_fu_4020_p2 & tmp_21_fu_4002_p2);

assign tmp_240_fu_5213_p1 = total_5_i_reg_1204[15:0];

assign tmp_240_i_fu_4371_p1 = k1_i_reg_1130;

assign tmp_241_i_fu_4268_p2 = (($signed(gap_fu_4261_p2) > $signed(lineGap_read_reg_5241)) ? 1'b1 : 1'b0);

assign tmp_243_fu_4659_p1 = msb_idx_6_fu_4654_p2[30:0];

assign tmp_243_i_fu_4421_p4 = {{j1_4_reg_1141[31:16]}};

assign tmp_244_fu_4663_p3 = msb_idx_6_fu_4654_p2[32'd31];

assign tmp_245_fu_4679_p4 = {{msb_idx_7_fu_4671_p3[30:5]}};

assign tmp_245_i_fu_4435_p4 = {{i1_3_reg_1152[31:16]}};

assign tmp_247_fu_4714_p1 = msb_idx_7_fu_4671_p3[5:0];

assign tmp_248_fu_4718_p2 = ((msb_idx_7_fu_4671_p3 < 31'd31) ? 1'b1 : 1'b0);

assign tmp_249_fu_4724_p2 = ($signed(6'd33) + $signed(tmp_247_fu_4714_p1));

assign tmp_24_fu_1284_p0 = p_Result_139_fu_3889_p3;

assign tmp_24_fu_1284_p1 = p_Result_143_fu_3957_p3;

integer ap_tvar_int_7;

always @ (p_Val2_62_cast_i_reg_6201) begin
    for (ap_tvar_int_7 = 49 - 1; ap_tvar_int_7 >= 0; ap_tvar_int_7 = ap_tvar_int_7 - 1) begin
        if (ap_tvar_int_7 > 48 - 0) begin
            tmp_250_fu_4730_p4[ap_tvar_int_7] = 1'b0;
        end else begin
            tmp_250_fu_4730_p4[ap_tvar_int_7] = p_Val2_62_cast_i_reg_6201[48 - ap_tvar_int_7];
        end
    end
end

assign tmp_250_i_cast_fu_4537_p1 = n5_i_reg_1163;

assign tmp_250_i_fu_4532_p1 = n5_i_reg_1163;

assign tmp_251_fu_4739_p2 = (6'd15 - tmp_247_fu_4714_p1);

assign tmp_251_i_fu_4576_p1 = p_Val2_125_reg_6174;

assign tmp_252_fu_4745_p3 = ((tmp_248_fu_4718_p2[0:0] === 1'b1) ? tmp_250_fu_4730_p4 : p_Val2_62_cast_i_reg_6201);

assign tmp_252_i_fu_4579_p1 = p_Val2_24_reg_6180;

assign tmp_253_fu_4752_p3 = ((tmp_248_fu_4718_p2[0:0] === 1'b1) ? tmp_251_fu_4739_p2 : tmp_249_fu_4724_p2);

assign tmp_253_i_fu_4592_p2 = ((p_Val2_126_fu_4582_p2 == 49'd0) ? 1'b1 : 1'b0);

assign tmp_254_fu_4760_p1 = tmp_253_fu_4752_p3;

assign tmp_254_i_fu_5145_p2 = ((i1_5_reg_6114 == line_end_y_load_reg_6104) ? 1'b1 : 1'b0);

assign tmp_255_cast_i_fu_4606_p2 = (48'd0 - p_Val2_60_cast_i_fu_4588_p2);

assign tmp_255_fu_4764_p2 = tmp_252_fu_4745_p3 >> tmp_254_fu_4760_p1;


always @ (p_Result_145_fu_4634_p3) begin
    if (p_Result_145_fu_4634_p3[0] == 1'b1) begin
        tmp_256_i_fu_4642_p3 = 64'd0;
    end else if (p_Result_145_fu_4634_p3[1] == 1'b1) begin
        tmp_256_i_fu_4642_p3 = 64'd1;
    end else if (p_Result_145_fu_4634_p3[2] == 1'b1) begin
        tmp_256_i_fu_4642_p3 = 64'd2;
    end else if (p_Result_145_fu_4634_p3[3] == 1'b1) begin
        tmp_256_i_fu_4642_p3 = 64'd3;
    end else if (p_Result_145_fu_4634_p3[4] == 1'b1) begin
        tmp_256_i_fu_4642_p3 = 64'd4;
    end else if (p_Result_145_fu_4634_p3[5] == 1'b1) begin
        tmp_256_i_fu_4642_p3 = 64'd5;
    end else if (p_Result_145_fu_4634_p3[6] == 1'b1) begin
        tmp_256_i_fu_4642_p3 = 64'd6;
    end else if (p_Result_145_fu_4634_p3[7] == 1'b1) begin
        tmp_256_i_fu_4642_p3 = 64'd7;
    end else if (p_Result_145_fu_4634_p3[8] == 1'b1) begin
        tmp_256_i_fu_4642_p3 = 64'd8;
    end else if (p_Result_145_fu_4634_p3[9] == 1'b1) begin
        tmp_256_i_fu_4642_p3 = 64'd9;
    end else if (p_Result_145_fu_4634_p3[10] == 1'b1) begin
        tmp_256_i_fu_4642_p3 = 64'd10;
    end else if (p_Result_145_fu_4634_p3[11] == 1'b1) begin
        tmp_256_i_fu_4642_p3 = 64'd11;
    end else if (p_Result_145_fu_4634_p3[12] == 1'b1) begin
        tmp_256_i_fu_4642_p3 = 64'd12;
    end else if (p_Result_145_fu_4634_p3[13] == 1'b1) begin
        tmp_256_i_fu_4642_p3 = 64'd13;
    end else if (p_Result_145_fu_4634_p3[14] == 1'b1) begin
        tmp_256_i_fu_4642_p3 = 64'd14;
    end else if (p_Result_145_fu_4634_p3[15] == 1'b1) begin
        tmp_256_i_fu_4642_p3 = 64'd15;
    end else if (p_Result_145_fu_4634_p3[16] == 1'b1) begin
        tmp_256_i_fu_4642_p3 = 64'd16;
    end else if (p_Result_145_fu_4634_p3[17] == 1'b1) begin
        tmp_256_i_fu_4642_p3 = 64'd17;
    end else if (p_Result_145_fu_4634_p3[18] == 1'b1) begin
        tmp_256_i_fu_4642_p3 = 64'd18;
    end else if (p_Result_145_fu_4634_p3[19] == 1'b1) begin
        tmp_256_i_fu_4642_p3 = 64'd19;
    end else if (p_Result_145_fu_4634_p3[20] == 1'b1) begin
        tmp_256_i_fu_4642_p3 = 64'd20;
    end else if (p_Result_145_fu_4634_p3[21] == 1'b1) begin
        tmp_256_i_fu_4642_p3 = 64'd21;
    end else if (p_Result_145_fu_4634_p3[22] == 1'b1) begin
        tmp_256_i_fu_4642_p3 = 64'd22;
    end else if (p_Result_145_fu_4634_p3[23] == 1'b1) begin
        tmp_256_i_fu_4642_p3 = 64'd23;
    end else if (p_Result_145_fu_4634_p3[24] == 1'b1) begin
        tmp_256_i_fu_4642_p3 = 64'd24;
    end else if (p_Result_145_fu_4634_p3[25] == 1'b1) begin
        tmp_256_i_fu_4642_p3 = 64'd25;
    end else if (p_Result_145_fu_4634_p3[26] == 1'b1) begin
        tmp_256_i_fu_4642_p3 = 64'd26;
    end else if (p_Result_145_fu_4634_p3[27] == 1'b1) begin
        tmp_256_i_fu_4642_p3 = 64'd27;
    end else if (p_Result_145_fu_4634_p3[28] == 1'b1) begin
        tmp_256_i_fu_4642_p3 = 64'd28;
    end else if (p_Result_145_fu_4634_p3[29] == 1'b1) begin
        tmp_256_i_fu_4642_p3 = 64'd29;
    end else if (p_Result_145_fu_4634_p3[30] == 1'b1) begin
        tmp_256_i_fu_4642_p3 = 64'd30;
    end else if (p_Result_145_fu_4634_p3[31] == 1'b1) begin
        tmp_256_i_fu_4642_p3 = 64'd31;
    end else if (p_Result_145_fu_4634_p3[32] == 1'b1) begin
        tmp_256_i_fu_4642_p3 = 64'd32;
    end else if (p_Result_145_fu_4634_p3[33] == 1'b1) begin
        tmp_256_i_fu_4642_p3 = 64'd33;
    end else if (p_Result_145_fu_4634_p3[34] == 1'b1) begin
        tmp_256_i_fu_4642_p3 = 64'd34;
    end else if (p_Result_145_fu_4634_p3[35] == 1'b1) begin
        tmp_256_i_fu_4642_p3 = 64'd35;
    end else if (p_Result_145_fu_4634_p3[36] == 1'b1) begin
        tmp_256_i_fu_4642_p3 = 64'd36;
    end else if (p_Result_145_fu_4634_p3[37] == 1'b1) begin
        tmp_256_i_fu_4642_p3 = 64'd37;
    end else if (p_Result_145_fu_4634_p3[38] == 1'b1) begin
        tmp_256_i_fu_4642_p3 = 64'd38;
    end else if (p_Result_145_fu_4634_p3[39] == 1'b1) begin
        tmp_256_i_fu_4642_p3 = 64'd39;
    end else if (p_Result_145_fu_4634_p3[40] == 1'b1) begin
        tmp_256_i_fu_4642_p3 = 64'd40;
    end else if (p_Result_145_fu_4634_p3[41] == 1'b1) begin
        tmp_256_i_fu_4642_p3 = 64'd41;
    end else if (p_Result_145_fu_4634_p3[42] == 1'b1) begin
        tmp_256_i_fu_4642_p3 = 64'd42;
    end else if (p_Result_145_fu_4634_p3[43] == 1'b1) begin
        tmp_256_i_fu_4642_p3 = 64'd43;
    end else if (p_Result_145_fu_4634_p3[44] == 1'b1) begin
        tmp_256_i_fu_4642_p3 = 64'd44;
    end else if (p_Result_145_fu_4634_p3[45] == 1'b1) begin
        tmp_256_i_fu_4642_p3 = 64'd45;
    end else if (p_Result_145_fu_4634_p3[46] == 1'b1) begin
        tmp_256_i_fu_4642_p3 = 64'd46;
    end else if (p_Result_145_fu_4634_p3[47] == 1'b1) begin
        tmp_256_i_fu_4642_p3 = 64'd47;
    end else if (p_Result_145_fu_4634_p3[48] == 1'b1) begin
        tmp_256_i_fu_4642_p3 = 64'd48;
    end else if (p_Result_145_fu_4634_p3[49] == 1'b1) begin
        tmp_256_i_fu_4642_p3 = 64'd49;
    end else if (p_Result_145_fu_4634_p3[50] == 1'b1) begin
        tmp_256_i_fu_4642_p3 = 64'd50;
    end else if (p_Result_145_fu_4634_p3[51] == 1'b1) begin
        tmp_256_i_fu_4642_p3 = 64'd51;
    end else if (p_Result_145_fu_4634_p3[52] == 1'b1) begin
        tmp_256_i_fu_4642_p3 = 64'd52;
    end else if (p_Result_145_fu_4634_p3[53] == 1'b1) begin
        tmp_256_i_fu_4642_p3 = 64'd53;
    end else if (p_Result_145_fu_4634_p3[54] == 1'b1) begin
        tmp_256_i_fu_4642_p3 = 64'd54;
    end else if (p_Result_145_fu_4634_p3[55] == 1'b1) begin
        tmp_256_i_fu_4642_p3 = 64'd55;
    end else if (p_Result_145_fu_4634_p3[56] == 1'b1) begin
        tmp_256_i_fu_4642_p3 = 64'd56;
    end else if (p_Result_145_fu_4634_p3[57] == 1'b1) begin
        tmp_256_i_fu_4642_p3 = 64'd57;
    end else if (p_Result_145_fu_4634_p3[58] == 1'b1) begin
        tmp_256_i_fu_4642_p3 = 64'd58;
    end else if (p_Result_145_fu_4634_p3[59] == 1'b1) begin
        tmp_256_i_fu_4642_p3 = 64'd59;
    end else if (p_Result_145_fu_4634_p3[60] == 1'b1) begin
        tmp_256_i_fu_4642_p3 = 64'd60;
    end else if (p_Result_145_fu_4634_p3[61] == 1'b1) begin
        tmp_256_i_fu_4642_p3 = 64'd61;
    end else if (p_Result_145_fu_4634_p3[62] == 1'b1) begin
        tmp_256_i_fu_4642_p3 = 64'd62;
    end else if (p_Result_145_fu_4634_p3[63] == 1'b1) begin
        tmp_256_i_fu_4642_p3 = 64'd63;
    end else begin
        tmp_256_i_fu_4642_p3 = 64'd64;
    end
end

assign tmp_257_fu_4801_p1 = msb_idx_6_reg_6212_pp6_iter5_reg[7:0];

assign tmp_259_i_fu_5149_p2 = ((j1_5_reg_6120 == line_end_x_load_reg_6109) ? 1'b1 : 1'b0);

assign tmp_25_fu_4032_p2 = (tmp_24_fu_1284_p2 & tmp_23_fu_4026_p2);

assign tmp_260_cast_i_fu_4704_p1 = tmp_260_i_fu_4698_p2;

assign tmp_260_i_fu_4698_p2 = (31'd31 - msb_idx_7_fu_4671_p3);

assign tmp_262_i_fu_4796_p2 = ((p_Result_40_i_reg_6227 != 8'd158) ? 1'b1 : 1'b0);

assign tmp_263_fu_5072_p3 = tmp_296_i_i_i58_i_fu_5060_p2[32'd24];

assign tmp_264_fu_5107_p1 = p_Val2_i_i_i65_i_fu_5101_p2[18:0];

assign tmp_265_fu_5111_p1 = p_Val2_139_fu_5094_p3[18:0];

assign tmp_266_fu_5115_p3 = ((p_Result_149_reg_6264[0:0] === 1'b1) ? tmp_264_fu_5107_p1 : tmp_265_fu_5111_p1);

assign tmp_266_i_fu_4818_p3 = {{is_neg_3_reg_6191_pp6_iter5_reg}, {p_Repl2_27_trunc_i_fu_4812_p2}};

assign tmp_267_fu_5122_p2 = (19'd560 + tmp_266_fu_5115_p3);

assign tmp_269_i_fu_5138_p2 = ($signed(32'd4294967295) + $signed(accum_q1));

assign tmp_26_fu_4174_p2 = (j1_2_fu_4166_p3 | i1_2_fu_4158_p3);

assign tmp_273_i_i1_fu_4867_p2 = ((loc_V_13_fu_4851_p4 > 8'd150) ? 1'b1 : 1'b0);

assign tmp_273_i_i_fu_3096_p2 = ((loc_V_9_fu_3080_p4 > 8'd150) ? 1'b1 : 1'b0);

assign tmp_274_i_i1_fu_4883_p1 = index_V_4_fu_4873_p4;

assign tmp_274_i_i_fu_3112_p1 = index_V_3_fu_3102_p4;

assign tmp_276_i_i1_fu_4917_p2 = (mask_table3_q0 ^ 23'd8388607);

assign tmp_276_i_i_fu_3146_p2 = (mask_table3_q0 ^ 23'd8388607);

assign tmp_27_fu_4929_p4 = {{p_Val2_135_fu_4908_p2[31:23]}};

assign tmp_293_i_i_i51_cast_fu_5046_p1 = tmp_293_i_i_i51_i_fu_5037_p4;

assign tmp_293_i_i_i51_i_fu_5037_p4 = {{{{1'd1}, {loc_V_16_reg_6269}}}, {1'd0}};

assign tmp_293_i_i_i8_cast7_fu_3275_p1 = tmp_293_i_i_i8_i_fu_3266_p4;

assign tmp_293_i_i_i8_i_fu_3266_p4 = {{{{1'd1}, {loc_V_12_reg_5802}}}, {1'd0}};

assign tmp_293_i_i_i_cast_fu_2514_p1 = tmp_293_i_i_i_i_fu_2504_p4;

assign tmp_293_i_i_i_i_fu_2504_p4 = {{{{1'd1}, {loc_V_8_fu_2500_p1}}}, {1'd0}};

assign tmp_294_i_i_i12_cast_fu_3254_p1 = $signed(tmp_294_i_i_i12_i_fu_3248_p2);

assign tmp_294_i_i_i12_i_fu_3248_p2 = (8'd127 - loc_V_11_fu_3216_p4);

assign tmp_294_i_i_i55_cast_fu_5025_p1 = $signed(tmp_294_i_i_i55_i_fu_5019_p2);

assign tmp_294_i_i_i55_i_fu_5019_p2 = (8'd127 - loc_V_15_fu_4987_p4);

assign tmp_294_i_i_i_cast_i_fu_2542_p1 = $signed(tmp_294_i_i_i_i_fu_2536_p2);

assign tmp_294_i_i_i_i_fu_2536_p2 = (8'd127 - loc_V_7_fu_2490_p4);

assign tmp_295_i_i_i14_i_fu_3285_p1 = $unsigned(sh_assign_2_i_i_i13_s_fu_3279_p1);

assign tmp_295_i_i_i57_i_fu_5056_p1 = $unsigned(sh_assign_2_i_i_i56_s_fu_5050_p1);

assign tmp_295_i_i_i_i_fu_2562_p1 = $unsigned(sh_assign_2_i_i_i_ca_fu_2554_p1);

assign tmp_296_i_i_i15_i_fu_3289_p2 = tmp_293_i_i_i8_i_fu_3266_p4 >> sh_assign_2_i_i_i13_1_fu_3282_p1;

assign tmp_296_i_i_i58_i_fu_5060_p2 = tmp_293_i_i_i51_i_fu_5037_p4 >> sh_assign_2_i_i_i56_1_fu_5053_p1;

assign tmp_296_i_i_i_i_fu_2566_p2 = tmp_293_i_i_i_i_fu_2504_p4 >> sh_assign_2_i_i_i_ca_1_fu_2558_p1;

assign tmp_297_i_i_i16_i_fu_3295_p2 = tmp_293_i_i_i8_cast7_fu_3275_p1 << tmp_295_i_i_i14_i_fu_3285_p1;

assign tmp_297_i_i_i59_i_fu_5066_p2 = tmp_293_i_i_i51_cast_fu_5046_p1 << tmp_295_i_i_i57_i_fu_5056_p1;

assign tmp_297_i_i_i_i_fu_2572_p2 = tmp_293_i_i_i_cast_fu_2514_p1 << tmp_295_i_i_i_i_fu_2562_p1;

assign tmp_29_cast_fu_1353_p1 = tmp_29_fu_1347_p2;

assign tmp_29_fu_1347_p2 = (phi_mul_reg_813 + tmp_93_i_cast_fu_1343_p1);

assign tmp_31_cast_fu_1723_p1 = tmp_31_fu_1717_p2;

assign tmp_31_fu_1717_p2 = (9'd180 + tmp_95_i_cast_fu_1713_p1);

assign tmp_32_cast_fu_1398_p1 = tmp_s_fu_1392_p2;

assign tmp_32_fu_2586_p1 = tmp_154_fu_2578_p3;

assign tmp_33_fu_2590_p4 = {{tmp_297_i_i_i_i_fu_2572_p2[55:24]}};

assign tmp_34_fu_2202_p2 = (p_shl_cast_fu_2182_p3 + p_shl1_cast_fu_2194_p3);

assign tmp_35_fu_2228_p2 = (tmp_34_reg_5478 + tmp_158_fu_2224_p1);

assign tmp_36_fu_2722_p2 = (p_shl2_cast_fu_2702_p3 + p_shl3_cast_fu_2714_p3);

assign tmp_37_fu_2728_p2 = (tmp_159_fu_2694_p1 + tmp_36_fu_2722_p2);

assign tmp_38_fu_2776_p2 = (9'd180 + tmp_135_i_cast_fu_2766_p1);

assign tmp_39_fu_3309_p1 = tmp_184_fu_3301_p3;

assign tmp_40_cast_fu_2233_p1 = tmp_35_fu_2228_p2;

assign tmp_40_fu_3313_p4 = {{tmp_297_i_i_i16_i_fu_3295_p2[55:24]}};

assign tmp_41_fu_3357_p2 = (phi_mul240_cast_reg_5678_pp4_iter7_reg + tmp_188_fu_3351_p2);

assign tmp_42_fu_3414_p2 = (10'd180 + tmp_189_fu_3410_p1);

assign tmp_43_fu_4244_p2 = (p_shl4_cast_fu_4224_p3 + p_shl5_cast_fu_4236_p3);

assign tmp_44_cast_fu_2734_p1 = $signed(tmp_37_fu_2728_p2);

assign tmp_44_fu_4250_p2 = (tmp_229_fu_4216_p1 + tmp_43_fu_4244_p2);

assign tmp_45_fu_5183_p2 = (10'd100 + tmp_233_reg_6094);

assign tmp_45_i_fu_2317_p2 = ((loc_V_4_reg_5539 == 23'd0) ? 1'b1 : 1'b0);

assign tmp_46_cast_fu_2782_p1 = tmp_38_fu_2776_p2;

assign tmp_46_fu_4395_p2 = (10'd200 + tmp_233_fu_4391_p1);

assign tmp_46_i_fu_2322_p2 = ((loc_V_reg_5531 == 8'd0) ? 1'b1 : 1'b0);

assign tmp_47_fu_5193_p2 = (10'd300 + tmp_233_reg_6094);

assign tmp_47_i_fu_2298_p1 = index_V_fu_2288_p4;

assign tmp_48_fu_4493_p2 = (p_shl6_cast_fu_4473_p3 + p_shl7_cast_fu_4485_p3);

assign tmp_48_i_fu_2400_p2 = (mask_table1_q0 ^ 23'd8388607);

assign tmp_49_fu_4499_p2 = (tmp_237_fu_4465_p1 + tmp_48_fu_4493_p2);

assign tmp_50_fu_4547_p2 = (9'd180 + tmp_250_i_cast_fu_4537_p1);

assign tmp_51_cast_fu_3362_p1 = tmp_41_fu_3357_p2;

assign tmp_51_fu_5080_p1 = tmp_263_fu_5072_p3;

assign tmp_52_cast_fu_3420_p1 = $signed(tmp_42_fu_3414_p2);

assign tmp_52_fu_5084_p4 = {{tmp_297_i_i_i59_i_fu_5066_p2[55:24]}};

assign tmp_53_fu_5128_p2 = (phi_mul242_cast_reg_6145_pp6_iter7_reg + tmp_267_fu_5122_p2);

assign tmp_58_cast_fu_4256_p1 = $signed(tmp_44_fu_4250_p2);

assign tmp_59_cast_fu_5188_p1 = $signed(tmp_45_fu_5183_p2);

assign tmp_60_cast_fu_4401_p1 = $signed(tmp_46_fu_4395_p2);

assign tmp_61_cast_fu_5198_p1 = $signed(tmp_47_fu_5193_p2);

assign tmp_65_cast_fu_4505_p1 = $signed(tmp_49_fu_4499_p2);

assign tmp_67_cast_fu_4553_p1 = tmp_50_fu_4547_p2;

assign tmp_72_cast_fu_5133_p1 = tmp_53_fu_5128_p2;

assign tmp_83_i_fu_1454_p3 = {{1'd1}, {tmp_122_fu_1450_p1}};

assign tmp_87_i_fu_1598_p3 = {{1'd1}, {tmp_135_fu_1594_p1}};

assign tmp_91_i_fu_1332_p2 = (($signed(j_0_i_cast_cast_i_fu_1328_p1) < $signed(lines_cols_read_reg_5228)) ? 1'b1 : 1'b0);

assign tmp_93_i_cast_fu_1343_p1 = j_0_i_i_reg_825;

assign tmp_95_i_cast_fu_1713_p1 = n4_i_reg_870_pp2_iter12_reg;

assign tmp_95_i_fu_1708_p1 = n4_i_reg_870_pp2_iter12_reg;

assign tmp_96_i_fu_1446_p1 = exp_tmp_V_fu_1436_p4;

assign tmp_98_i_fu_1472_p2 = ((tmp_fu_1424_p1 == 63'd0) ? 1'b1 : 1'b0);

assign tmp_V_fu_3451_p3 = ((is_neg_1_fu_3443_p3[0:0] === 1'b1) ? p_Val2_s_reg_5847 : p_Val2_118_fu_3433_p2);

assign tmp_cast_cast_fu_3033_p3 = ((tmp_160_i_fu_3025_p2[0:0] === 1'b1) ? 8'd114 : 8'd113);

assign tmp_fu_1424_p1 = ireg_V_fu_1420_p1[62:0];

assign tmp_i1_389_fu_2312_p2 = ((loc_V_reg_5531 > 8'd150) ? 1'b1 : 1'b0);

assign tmp_i1_fu_2307_p2 = ((loc_V_reg_5531 < 8'd127) ? 1'b1 : 1'b0);

assign tmp_i_fu_1317_p2 = (($signed(i_0_i_cast_cast_i_fu_1313_p1) < $signed(lines_rows_read_reg_5223)) ? 1'b1 : 1'b0);

assign tmp_i_i1_fu_4861_p2 = ((loc_V_13_fu_4851_p4 < 8'd126) ? 1'b1 : 1'b0);

assign tmp_i_i_390_fu_3090_p2 = ((loc_V_9_fu_3080_p4 < 8'd126) ? 1'b1 : 1'b0);

assign tmp_i_i_fu_2251_p0 = pt_buf_length_i_fu_376;

assign tmp_i_i_fu_2251_p1 = tmp_i_i_fu_2251_p0;

assign tmp_i_i_i_i52_cast_i_fu_5001_p1 = loc_V_15_fu_4987_p4;

assign tmp_i_i_i_i9_cast_i_fu_3230_p1 = loc_V_11_fu_3216_p4;

assign tmp_i_i_i_i_cast_i_fu_2518_p1 = loc_V_7_fu_2490_p4;

assign tmp_s_fu_1392_p2 = (phi_mul1_reg_847 + tmp_111_i_cast_fu_1388_p1);

assign total_fu_4377_p2 = (32'd1 + total_1_load_reg_5607);

assign trigtab_V_d0 = ((or_cond_fu_1922_p2[0:0] === 1'b1) ? newSel_fu_1914_p3 : newSel1_fu_1928_p3);

assign trigtab_V_d1 = ((or_cond1_fu_2139_p2[0:0] === 1'b1) ? newSel3_fu_2131_p3 : newSel4_fu_2145_p3);

assign val_0_max_val_i_fu_3384_p3 = ((tmp_175_i_fu_3378_p2[0:0] === 1'b1) ? max_val_2_fu_3371_p2 : max_val1_i_reg_930);

assign x0_1_fu_4105_p2 = (tmp_226_fu_4100_p2 | 32'd32768);

assign x_1_fu_4273_p2 = (j1_1_reg_1074 - dx0_1_i_reg_1029);

assign x_2_fu_5159_p2 = (j1_4_reg_1141 - dx0_2_i_reg_1108);

assign x_assign_1_fu_4968_p3 = ((sel_tmp2_i2_fu_4963_p2[0:0] === 1'b1) ? x_assign_s_reg_6232 : sel_tmp_i2_fu_4954_p1);

assign x_assign_2_fu_4328_p2 = (line_end_y_q0 - line_end_y_q1);

assign x_assign_7_fu_2471_p3 = ((sel_tmp8_i_fu_2465_p2[0:0] === 1'b1) ? reg_1301 : sel_tmp6_i_fu_2451_p3);

assign x_assign_8_fu_3069_p3 = ((tmp_138_i_reg_5719_pp4_iter5_reg[0:0] === 1'b1) ? 32'd0 : f_fu_3065_p1);

assign x_assign_9_fu_3197_p3 = ((sel_tmp2_i1_fu_3192_p2[0:0] === 1'b1) ? x_assign_8_reg_5765 : sel_tmp_i1_fu_3183_p1);

assign x_assign_fu_4297_p2 = (line_end_x_q0 - line_end_x_q1);

assign x_assign_s_fu_4840_p3 = ((tmp_253_i_reg_6186_pp6_iter5_reg[0:0] === 1'b1) ? 32'd0 : f_5_fu_4836_p1);

assign xs_exp_V_fu_2389_p3 = ((p_Result_61_reg_5522[0:0] === 1'b1) ? loc_V_reg_5531 : loc_V_5_fu_2369_p4);

assign xs_sig_V_1_fu_2383_p3 = ((p_Result_61_reg_5522[0:0] === 1'b1) ? loc_V_4_reg_5539 : loc_V_6_fu_2379_p1);

assign xs_sig_V_4_fu_3152_p2 = (tmp_276_i_i_fu_3146_p2 & loc_V_10_fu_3142_p1);

assign xs_sig_V_5_fu_4923_p2 = (tmp_276_i_i1_fu_4917_p2 & loc_V_14_fu_4913_p1);

assign xs_sig_V_fu_2406_p2 = (xs_sig_V_1_fu_2383_p3 & tmp_48_i_fu_2400_p2);

assign xs_sign_V_fu_2395_p2 = (p_Result_61_reg_5522 | p_Result_127_fu_2361_p3);

assign y0_1_fu_4084_p2 = (tmp_227_fu_4079_p2 | 32'd32768);

assign y_1_fu_4279_p2 = (i1_reg_1085 - dy0_1_i_reg_1040);

assign y_2_fu_5165_p2 = (i1_3_reg_1152 - dy0_2_i_reg_1119);

always @ (posedge ap_clk) begin
    p_Result_123_reg_5334[53:52] <= 2'b01;
    p_Result_124_reg_5402[53:52] <= 2'b01;
    tmp_34_reg_5478[5:0] <= 6'b000000;
    phi_mul240_cast_reg_5678[18] <= 1'b0;
    phi_mul240_cast_reg_5678_pp4_iter1_reg[18] <= 1'b0;
    phi_mul240_cast_reg_5678_pp4_iter2_reg[18] <= 1'b0;
    phi_mul240_cast_reg_5678_pp4_iter3_reg[18] <= 1'b0;
    phi_mul240_cast_reg_5678_pp4_iter4_reg[18] <= 1'b0;
    phi_mul240_cast_reg_5678_pp4_iter5_reg[18] <= 1'b0;
    phi_mul240_cast_reg_5678_pp4_iter6_reg[18] <= 1'b0;
    phi_mul240_cast_reg_5678_pp4_iter7_reg[18] <= 1'b0;
    p_Val2_42_cast_i_reg_5734[48] <= 1'b0;
    p_Result_97_reg_5905[15:2] <= 14'b00000000000000;
    p_Result_102_reg_5930[15:2] <= 14'b00000000000000;
    phi_mul242_cast_reg_6145[18] <= 1'b0;
    phi_mul242_cast_reg_6145_pp6_iter1_reg[18] <= 1'b0;
    phi_mul242_cast_reg_6145_pp6_iter2_reg[18] <= 1'b0;
    phi_mul242_cast_reg_6145_pp6_iter3_reg[18] <= 1'b0;
    phi_mul242_cast_reg_6145_pp6_iter4_reg[18] <= 1'b0;
    phi_mul242_cast_reg_6145_pp6_iter5_reg[18] <= 1'b0;
    phi_mul242_cast_reg_6145_pp6_iter6_reg[18] <= 1'b0;
    phi_mul242_cast_reg_6145_pp6_iter7_reg[18] <= 1'b0;
    p_Val2_62_cast_i_reg_6201[48] <= 1'b0;
end

endmodule //HoughLinesProbabilis
