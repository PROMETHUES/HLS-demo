// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module column_filter (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        p_src_data_stream_V_V_dout,
        p_src_data_stream_V_V_empty_n,
        p_src_data_stream_V_V_read,
        p_dst_V_V_din,
        p_dst_V_V_full_n,
        p_dst_V_V_write,
        p_read,
        rows_dout,
        rows_empty_n,
        rows_read,
        cols_dout,
        cols_empty_n,
        cols_read,
        rows_out_din,
        rows_out_full_n,
        rows_out_write,
        cols_out_din,
        cols_out_full_n,
        cols_out_write
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state6 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [34:0] p_src_data_stream_V_V_dout;
input   p_src_data_stream_V_V_empty_n;
output   p_src_data_stream_V_V_read;
output  [39:0] p_dst_V_V_din;
input   p_dst_V_V_full_n;
output   p_dst_V_V_write;
input  [0:0] p_read;
input  [31:0] rows_dout;
input   rows_empty_n;
output   rows_read;
input  [31:0] cols_dout;
input   cols_empty_n;
output   cols_read;
output  [31:0] rows_out_din;
input   rows_out_full_n;
output   rows_out_write;
output  [31:0] cols_out_din;
input   cols_out_full_n;
output   cols_out_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg p_src_data_stream_V_V_read;
reg p_dst_V_V_write;
reg rows_read;
reg cols_read;
reg rows_out_write;
reg cols_out_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    p_src_data_stream_V_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] tmp_13_i_reg_1285;
reg    p_dst_V_V_blk_n;
reg    ap_enable_reg_pp0_iter2;
reg   [0:0] tmp_14_i_reg_1289;
reg    rows_blk_n;
reg    cols_blk_n;
reg    rows_out_blk_n;
reg    cols_out_blk_n;
reg   [31:0] t_V_2_reg_300;
reg   [31:0] stop_row_reg_1200;
reg    ap_block_state1;
reg   [31:0] widthloop_reg_1213;
wire   [31:0] start_row_cast_i_cas_fu_324_p3;
reg   [31:0] start_row_cast_i_cas_reg_1218;
wire   [31:0] tmp_10_i_fu_332_p2;
reg   [31:0] tmp_10_i_reg_1224;
wire   [31:0] tmp_11_i_fu_338_p2;
reg   [31:0] tmp_11_i_reg_1235;
wire   [31:0] index_fu_344_p2;
reg   [31:0] index_reg_1240;
wire   [31:0] y_0_1_cast_i_fu_356_p1;
reg   [31:0] y_0_1_cast_i_reg_1251;
wire   [31:0] y_0_2_cast_i_cast_fu_360_p3;
reg   [31:0] y_0_2_cast_i_cast_reg_1256;
wire   [31:0] y_0_3_cast_i_cast_fu_368_p3;
reg   [31:0] y_0_3_cast_i_cast_reg_1261;
wire   [31:0] y_0_4_cast_i_cast_fu_376_p3;
reg   [31:0] y_0_4_cast_i_cast_reg_1266;
wire   [31:0] y_0_5_cast_i_cast_fu_384_p3;
reg   [31:0] y_0_5_cast_i_cast_reg_1271;
wire   [0:0] exitcond4_i_fu_392_p2;
wire    ap_CS_fsm_state2;
wire   [31:0] i_V_fu_397_p2;
reg   [31:0] i_V_reg_1280;
wire   [0:0] tmp_13_i_fu_403_p2;
wire   [0:0] tmp_14_i_fu_408_p2;
wire   [0:0] tmp_15_i_fu_413_p2;
reg   [0:0] tmp_15_i_reg_1293;
wire   [0:0] tmp_128_0_i_fu_740_p2;
reg   [0:0] tmp_128_0_i_reg_1304;
wire   [0:0] tmp_128_0_1_i_fu_746_p2;
reg   [0:0] tmp_128_0_1_i_reg_1308;
wire   [0:0] tmp_128_0_2_i_fu_751_p2;
reg   [0:0] tmp_128_0_2_i_reg_1312;
wire   [0:0] tmp_128_0_3_i_fu_756_p2;
reg   [0:0] tmp_128_0_3_i_reg_1316;
wire   [0:0] tmp_128_0_4_i_fu_761_p2;
reg   [0:0] tmp_128_0_4_i_reg_1320;
wire   [0:0] tmp_128_0_5_i_fu_766_p2;
reg   [0:0] tmp_128_0_5_i_reg_1324;
wire   [0:0] tmp_128_0_6_i_fu_771_p2;
reg   [0:0] tmp_128_0_6_i_reg_1328;
wire   [2:0] tmp_27_fu_789_p1;
reg   [2:0] tmp_27_reg_1332;
wire   [2:0] tmp_28_fu_806_p1;
reg   [2:0] tmp_28_reg_1337;
wire   [2:0] tmp_29_fu_823_p1;
reg   [2:0] tmp_29_reg_1342;
wire   [2:0] tmp_30_fu_840_p1;
reg   [2:0] tmp_30_reg_1347;
wire   [2:0] tmp_31_fu_857_p1;
reg   [2:0] tmp_31_reg_1352;
wire   [2:0] tmp_32_fu_874_p1;
reg   [2:0] tmp_32_reg_1357;
wire   [2:0] tmp_33_fu_891_p1;
reg   [2:0] tmp_33_reg_1362;
wire   [0:0] exitcond5_i_fu_895_p2;
wire    ap_block_state3_pp0_stage0_iter0;
reg    ap_block_state4_pp0_stage0_iter1;
reg    ap_block_state5_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
wire   [31:0] j_V_fu_900_p2;
reg    ap_enable_reg_pp0_iter0;
reg   [7:0] k_buf_0_val_13_V_a_reg_1376;
reg   [7:0] k_buf_0_val_13_V_a_reg_1376_pp0_iter1_reg;
reg   [7:0] k_buf_0_val_12_V_a_reg_1382;
reg   [7:0] k_buf_0_val_12_V_a_reg_1382_pp0_iter1_reg;
reg   [7:0] k_buf_0_val_11_V_a_reg_1388;
reg   [7:0] k_buf_0_val_11_V_a_reg_1388_pp0_iter1_reg;
reg   [7:0] k_buf_0_val_10_V_a_reg_1394;
reg   [7:0] k_buf_0_val_10_V_a_reg_1394_pp0_iter1_reg;
reg   [7:0] k_buf_0_val_9_V_ad_reg_1400;
reg   [7:0] k_buf_0_val_9_V_ad_reg_1400_pp0_iter1_reg;
reg   [7:0] k_buf_0_val_8_V_ad_reg_1406;
reg   [7:0] k_buf_0_val_8_V_ad_reg_1406_pp0_iter1_reg;
reg   [7:0] k_buf_0_val_7_V_ad_reg_1412;
reg   [7:0] k_buf_0_val_7_V_ad_reg_1412_pp0_iter1_reg;
wire   [34:0] k_buf_0_val_13_V_q0;
reg   [34:0] col_buf_0_val_0_V_s_reg_1418;
wire   [34:0] k_buf_0_val_12_V_q0;
reg   [34:0] col_buf_0_val_1_V_s_reg_1425;
wire   [34:0] k_buf_0_val_11_V_q0;
reg   [34:0] col_buf_0_val_2_V_s_reg_1433;
wire   [34:0] k_buf_0_val_10_V_q0;
reg   [34:0] col_buf_0_val_3_V_s_reg_1441;
wire   [34:0] k_buf_0_val_9_V_q0;
reg   [34:0] col_buf_0_val_4_V_s_reg_1449;
wire   [34:0] k_buf_0_val_8_V_q0;
reg   [34:0] col_buf_0_val_5_V_s_reg_1458;
wire   [34:0] k_buf_0_val_7_V_q0;
reg   [34:0] col_buf_0_val_6_V_s_reg_1467;
wire   [36:0] p_Val2_14_0_3_i_fu_1062_p2;
reg   [36:0] p_Val2_14_0_3_i_reg_1476;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
wire   [7:0] k_buf_0_val_7_V_address0;
reg    k_buf_0_val_7_V_ce0;
reg    k_buf_0_val_7_V_ce1;
reg    k_buf_0_val_7_V_we1;
reg   [34:0] k_buf_0_val_7_V_d1;
wire   [7:0] k_buf_0_val_8_V_address0;
reg    k_buf_0_val_8_V_ce0;
reg    k_buf_0_val_8_V_ce1;
reg    k_buf_0_val_8_V_we1;
reg   [34:0] k_buf_0_val_8_V_d1;
wire   [7:0] k_buf_0_val_9_V_address0;
reg    k_buf_0_val_9_V_ce0;
reg    k_buf_0_val_9_V_ce1;
reg    k_buf_0_val_9_V_we1;
reg   [34:0] k_buf_0_val_9_V_d1;
wire   [7:0] k_buf_0_val_10_V_address0;
reg    k_buf_0_val_10_V_ce0;
reg    k_buf_0_val_10_V_ce1;
reg    k_buf_0_val_10_V_we1;
reg   [34:0] k_buf_0_val_10_V_d1;
wire   [7:0] k_buf_0_val_11_V_address0;
reg    k_buf_0_val_11_V_ce0;
reg    k_buf_0_val_11_V_ce1;
reg    k_buf_0_val_11_V_we1;
reg   [34:0] k_buf_0_val_11_V_d1;
wire   [7:0] k_buf_0_val_12_V_address0;
reg    k_buf_0_val_12_V_ce0;
reg    k_buf_0_val_12_V_ce1;
reg    k_buf_0_val_12_V_we1;
reg   [34:0] k_buf_0_val_12_V_d1;
wire   [7:0] k_buf_0_val_13_V_address0;
reg    k_buf_0_val_13_V_ce0;
reg    k_buf_0_val_13_V_ce1;
reg    k_buf_0_val_13_V_we1;
reg   [34:0] k_buf_0_val_13_V_d1;
reg   [31:0] t_V_reg_289;
wire    ap_CS_fsm_state6;
wire   [63:0] tmp_111_0_i_fu_906_p1;
reg    ap_block_pp0_stage0_01001;
reg   [34:0] tmp_V_fu_98;
wire   [34:0] grp_load_fu_311_p1;
wire   [31:0] anchor_y_1_cast3_i2_s_fu_316_p3;
wire   [0:0] not_read_fu_350_p2;
wire   [31:0] tmp_138_0_i_fu_418_p2;
wire   [0:0] tmp_13_fu_424_p3;
wire   [0:0] tmp_140_0_i_fu_438_p2;
wire   [0:0] rev_fu_432_p2;
wire   [0:0] tmp_14_fu_449_p3;
wire   [31:0] p_assign_3_0_1_i_fu_464_p2;
wire   [0:0] tmp_15_fu_470_p3;
wire   [0:0] tmp_140_0_1_i_fu_484_p2;
wire   [0:0] rev2_fu_478_p2;
wire   [0:0] tmp_16_fu_495_p3;
wire   [31:0] p_assign_3_0_2_i_fu_510_p2;
wire   [0:0] tmp_17_fu_516_p3;
wire   [0:0] tmp_140_0_2_i_fu_530_p2;
wire   [0:0] rev3_fu_524_p2;
wire   [0:0] tmp_18_fu_541_p3;
wire   [31:0] p_assign_3_0_3_i_fu_556_p2;
wire   [0:0] tmp_19_fu_562_p3;
wire   [0:0] tmp_140_0_3_i_fu_576_p2;
wire   [0:0] rev4_fu_570_p2;
wire   [0:0] tmp_20_fu_587_p3;
wire   [31:0] p_assign_3_0_4_i_fu_602_p2;
wire   [0:0] tmp_21_fu_608_p3;
wire   [0:0] tmp_140_0_4_i_fu_622_p2;
wire   [0:0] rev5_fu_616_p2;
wire   [0:0] tmp_22_fu_633_p3;
wire   [31:0] p_assign_3_0_5_i_fu_648_p2;
wire   [0:0] tmp_23_fu_654_p3;
wire   [0:0] tmp_140_0_5_i_fu_668_p2;
wire   [0:0] rev6_fu_662_p2;
wire   [0:0] tmp_24_fu_679_p3;
wire   [31:0] p_assign_3_0_6_i_fu_694_p2;
wire   [0:0] tmp_25_fu_700_p3;
wire   [0:0] tmp_140_0_6_i_fu_714_p2;
wire   [0:0] rev7_fu_708_p2;
wire   [0:0] tmp_26_fu_725_p3;
wire   [0:0] or_cond_i1_0_i_fu_443_p2;
wire   [31:0] p_assign_4_0_i_fu_457_p3;
wire   [31:0] y_1_0_i_fu_776_p3;
wire   [31:0] row_assign_7_0_i_fu_784_p2;
wire   [0:0] or_cond_i1_0_1_i_fu_489_p2;
wire   [31:0] p_assign_4_0_1_i_fu_503_p3;
wire   [31:0] y_1_0_1_i_fu_793_p3;
wire   [31:0] row_assign_7_0_1_i_fu_801_p2;
wire   [0:0] or_cond_i1_0_2_i_fu_535_p2;
wire   [31:0] p_assign_4_0_2_i_fu_549_p3;
wire   [31:0] y_1_0_2_i_fu_810_p3;
wire   [31:0] row_assign_7_0_2_i_fu_818_p2;
wire   [0:0] or_cond_i1_0_3_i_fu_581_p2;
wire   [31:0] p_assign_4_0_3_i_fu_595_p3;
wire   [31:0] y_1_0_3_i_fu_827_p3;
wire   [31:0] row_assign_7_0_3_i_fu_835_p2;
wire   [0:0] or_cond_i1_0_4_i_fu_627_p2;
wire   [31:0] p_assign_4_0_4_i_fu_641_p3;
wire   [31:0] y_1_0_4_i_fu_844_p3;
wire   [31:0] row_assign_7_0_4_i_fu_852_p2;
wire   [0:0] or_cond_i1_0_5_i_fu_673_p2;
wire   [31:0] p_assign_4_0_5_i_fu_687_p3;
wire   [31:0] y_1_0_5_i_fu_861_p3;
wire   [31:0] row_assign_7_0_5_i_fu_869_p2;
wire   [0:0] or_cond_i1_0_6_i_fu_719_p2;
wire   [31:0] p_assign_4_0_6_i_fu_733_p3;
wire   [31:0] y_1_0_6_i_fu_878_p3;
wire   [31:0] row_assign_7_0_6_i_fu_886_p2;
wire   [34:0] tmp_3_fu_922_p9;
wire   [34:0] tmp_4_fu_948_p9;
wire   [34:0] tmp_5_fu_974_p9;
wire   [34:0] tmp_6_fu_1000_p9;
wire   [34:0] src_kernel_winY_0_v_6_fu_1019_p3;
wire   [34:0] src_kernel_winY_0_v_5_fu_993_p3;
wire  signed [35:0] OP1_V_0_1_i_fu_1030_p1;
wire  signed [35:0] OP1_V_0_0_i_fu_1026_p1;
wire   [35:0] addconv_i_fu_1034_p2;
wire   [34:0] src_kernel_winY_0_v_4_fu_967_p3;
wire   [34:0] src_kernel_winY_0_v_3_fu_941_p3;
wire  signed [35:0] tmp_164_0_2_cast_i_c_fu_1044_p1;
wire  signed [35:0] tmp_164_0_3_cast_i_c_fu_1048_p1;
wire   [35:0] tmp_fu_1052_p2;
wire  signed [36:0] tmp_cast_fu_1058_p1;
wire  signed [36:0] p_Val2_14_0_1_cast_fu_1040_p1;
wire   [34:0] tmp_s_fu_1092_p9;
wire   [34:0] tmp_1_fu_1110_p9;
wire   [34:0] tmp_2_fu_1128_p9;
wire   [34:0] src_kernel_winY_0_v_2_fu_1140_p3;
wire   [34:0] src_kernel_winY_0_v_1_fu_1122_p3;
wire   [34:0] src_kernel_winY_0_v_fu_1104_p3;
wire  signed [37:0] p_Val2_14_0_3_cast_fu_1146_p1;
wire  signed [37:0] tmp_164_0_4_cast_i_fu_1149_p1;
wire  signed [35:0] tmp_164_0_5_cast_i_c_fu_1153_p1;
wire  signed [35:0] tmp_164_0_6_cast_i_c_fu_1157_p1;
wire   [35:0] tmp2_fu_1167_p2;
wire  signed [37:0] tmp2_cast_fu_1173_p1;
wire   [37:0] tmp1_fu_1161_p2;
wire   [37:0] p_Val2_14_0_6_i_fu_1177_p2;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
end

column_filter_k_byd2 #(
    .DataWidth( 35 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
k_buf_0_val_7_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_7_V_address0),
    .ce0(k_buf_0_val_7_V_ce0),
    .q0(k_buf_0_val_7_V_q0),
    .address1(k_buf_0_val_7_V_ad_reg_1412_pp0_iter1_reg),
    .ce1(k_buf_0_val_7_V_ce1),
    .we1(k_buf_0_val_7_V_we1),
    .d1(k_buf_0_val_7_V_d1)
);

column_filter_k_byd2 #(
    .DataWidth( 35 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
k_buf_0_val_8_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_8_V_address0),
    .ce0(k_buf_0_val_8_V_ce0),
    .q0(k_buf_0_val_8_V_q0),
    .address1(k_buf_0_val_8_V_ad_reg_1406_pp0_iter1_reg),
    .ce1(k_buf_0_val_8_V_ce1),
    .we1(k_buf_0_val_8_V_we1),
    .d1(k_buf_0_val_8_V_d1)
);

column_filter_k_byd2 #(
    .DataWidth( 35 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
k_buf_0_val_9_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_9_V_address0),
    .ce0(k_buf_0_val_9_V_ce0),
    .q0(k_buf_0_val_9_V_q0),
    .address1(k_buf_0_val_9_V_ad_reg_1400_pp0_iter1_reg),
    .ce1(k_buf_0_val_9_V_ce1),
    .we1(k_buf_0_val_9_V_we1),
    .d1(k_buf_0_val_9_V_d1)
);

column_filter_k_byd2 #(
    .DataWidth( 35 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
k_buf_0_val_10_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_10_V_address0),
    .ce0(k_buf_0_val_10_V_ce0),
    .q0(k_buf_0_val_10_V_q0),
    .address1(k_buf_0_val_10_V_a_reg_1394_pp0_iter1_reg),
    .ce1(k_buf_0_val_10_V_ce1),
    .we1(k_buf_0_val_10_V_we1),
    .d1(k_buf_0_val_10_V_d1)
);

column_filter_k_byd2 #(
    .DataWidth( 35 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
k_buf_0_val_11_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_11_V_address0),
    .ce0(k_buf_0_val_11_V_ce0),
    .q0(k_buf_0_val_11_V_q0),
    .address1(k_buf_0_val_11_V_a_reg_1388_pp0_iter1_reg),
    .ce1(k_buf_0_val_11_V_ce1),
    .we1(k_buf_0_val_11_V_we1),
    .d1(k_buf_0_val_11_V_d1)
);

column_filter_k_byd2 #(
    .DataWidth( 35 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
k_buf_0_val_12_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_12_V_address0),
    .ce0(k_buf_0_val_12_V_ce0),
    .q0(k_buf_0_val_12_V_q0),
    .address1(k_buf_0_val_12_V_a_reg_1382_pp0_iter1_reg),
    .ce1(k_buf_0_val_12_V_ce1),
    .we1(k_buf_0_val_12_V_we1),
    .d1(k_buf_0_val_12_V_d1)
);

column_filter_k_byd2 #(
    .DataWidth( 35 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
k_buf_0_val_13_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_13_V_address0),
    .ce0(k_buf_0_val_13_V_ce0),
    .q0(k_buf_0_val_13_V_q0),
    .address1(k_buf_0_val_13_V_a_reg_1376_pp0_iter1_reg),
    .ce1(k_buf_0_val_13_V_ce1),
    .we1(k_buf_0_val_13_V_we1),
    .d1(k_buf_0_val_13_V_d1)
);

Haaris_Core_mux_7Ffa #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 35 ),
    .din1_WIDTH( 35 ),
    .din2_WIDTH( 35 ),
    .din3_WIDTH( 35 ),
    .din4_WIDTH( 35 ),
    .din5_WIDTH( 35 ),
    .din6_WIDTH( 35 ),
    .din7_WIDTH( 3 ),
    .dout_WIDTH( 35 ))
Haaris_Core_mux_7Ffa_U199(
    .din0(k_buf_0_val_13_V_q0),
    .din1(k_buf_0_val_12_V_q0),
    .din2(k_buf_0_val_11_V_q0),
    .din3(k_buf_0_val_10_V_q0),
    .din4(k_buf_0_val_9_V_q0),
    .din5(k_buf_0_val_8_V_q0),
    .din6(k_buf_0_val_7_V_q0),
    .din7(tmp_30_reg_1347),
    .dout(tmp_3_fu_922_p9)
);

Haaris_Core_mux_7Ffa #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 35 ),
    .din1_WIDTH( 35 ),
    .din2_WIDTH( 35 ),
    .din3_WIDTH( 35 ),
    .din4_WIDTH( 35 ),
    .din5_WIDTH( 35 ),
    .din6_WIDTH( 35 ),
    .din7_WIDTH( 3 ),
    .dout_WIDTH( 35 ))
Haaris_Core_mux_7Ffa_U200(
    .din0(k_buf_0_val_13_V_q0),
    .din1(k_buf_0_val_12_V_q0),
    .din2(k_buf_0_val_11_V_q0),
    .din3(k_buf_0_val_10_V_q0),
    .din4(k_buf_0_val_9_V_q0),
    .din5(k_buf_0_val_8_V_q0),
    .din6(k_buf_0_val_7_V_q0),
    .din7(tmp_31_reg_1352),
    .dout(tmp_4_fu_948_p9)
);

Haaris_Core_mux_7Ffa #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 35 ),
    .din1_WIDTH( 35 ),
    .din2_WIDTH( 35 ),
    .din3_WIDTH( 35 ),
    .din4_WIDTH( 35 ),
    .din5_WIDTH( 35 ),
    .din6_WIDTH( 35 ),
    .din7_WIDTH( 3 ),
    .dout_WIDTH( 35 ))
Haaris_Core_mux_7Ffa_U201(
    .din0(k_buf_0_val_13_V_q0),
    .din1(k_buf_0_val_12_V_q0),
    .din2(k_buf_0_val_11_V_q0),
    .din3(k_buf_0_val_10_V_q0),
    .din4(k_buf_0_val_9_V_q0),
    .din5(k_buf_0_val_8_V_q0),
    .din6(k_buf_0_val_7_V_q0),
    .din7(tmp_32_reg_1357),
    .dout(tmp_5_fu_974_p9)
);

Haaris_Core_mux_7Ffa #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 35 ),
    .din1_WIDTH( 35 ),
    .din2_WIDTH( 35 ),
    .din3_WIDTH( 35 ),
    .din4_WIDTH( 35 ),
    .din5_WIDTH( 35 ),
    .din6_WIDTH( 35 ),
    .din7_WIDTH( 3 ),
    .dout_WIDTH( 35 ))
Haaris_Core_mux_7Ffa_U202(
    .din0(k_buf_0_val_13_V_q0),
    .din1(k_buf_0_val_12_V_q0),
    .din2(k_buf_0_val_11_V_q0),
    .din3(k_buf_0_val_10_V_q0),
    .din4(k_buf_0_val_9_V_q0),
    .din5(k_buf_0_val_8_V_q0),
    .din6(k_buf_0_val_7_V_q0),
    .din7(tmp_33_reg_1362),
    .dout(tmp_6_fu_1000_p9)
);

Haaris_Core_mux_7Ffa #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 35 ),
    .din1_WIDTH( 35 ),
    .din2_WIDTH( 35 ),
    .din3_WIDTH( 35 ),
    .din4_WIDTH( 35 ),
    .din5_WIDTH( 35 ),
    .din6_WIDTH( 35 ),
    .din7_WIDTH( 3 ),
    .dout_WIDTH( 35 ))
Haaris_Core_mux_7Ffa_U203(
    .din0(col_buf_0_val_0_V_s_reg_1418),
    .din1(col_buf_0_val_1_V_s_reg_1425),
    .din2(col_buf_0_val_2_V_s_reg_1433),
    .din3(col_buf_0_val_3_V_s_reg_1441),
    .din4(col_buf_0_val_4_V_s_reg_1449),
    .din5(col_buf_0_val_5_V_s_reg_1458),
    .din6(col_buf_0_val_6_V_s_reg_1467),
    .din7(tmp_27_reg_1332),
    .dout(tmp_s_fu_1092_p9)
);

Haaris_Core_mux_7Ffa #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 35 ),
    .din1_WIDTH( 35 ),
    .din2_WIDTH( 35 ),
    .din3_WIDTH( 35 ),
    .din4_WIDTH( 35 ),
    .din5_WIDTH( 35 ),
    .din6_WIDTH( 35 ),
    .din7_WIDTH( 3 ),
    .dout_WIDTH( 35 ))
Haaris_Core_mux_7Ffa_U204(
    .din0(col_buf_0_val_0_V_s_reg_1418),
    .din1(col_buf_0_val_1_V_s_reg_1425),
    .din2(col_buf_0_val_2_V_s_reg_1433),
    .din3(col_buf_0_val_3_V_s_reg_1441),
    .din4(col_buf_0_val_4_V_s_reg_1449),
    .din5(col_buf_0_val_5_V_s_reg_1458),
    .din6(col_buf_0_val_6_V_s_reg_1467),
    .din7(tmp_28_reg_1337),
    .dout(tmp_1_fu_1110_p9)
);

Haaris_Core_mux_7Ffa #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 35 ),
    .din1_WIDTH( 35 ),
    .din2_WIDTH( 35 ),
    .din3_WIDTH( 35 ),
    .din4_WIDTH( 35 ),
    .din5_WIDTH( 35 ),
    .din6_WIDTH( 35 ),
    .din7_WIDTH( 3 ),
    .dout_WIDTH( 35 ))
Haaris_Core_mux_7Ffa_U205(
    .din0(col_buf_0_val_0_V_s_reg_1418),
    .din1(col_buf_0_val_1_V_s_reg_1425),
    .din2(col_buf_0_val_2_V_s_reg_1433),
    .din3(col_buf_0_val_3_V_s_reg_1441),
    .din4(col_buf_0_val_4_V_s_reg_1449),
    .din5(col_buf_0_val_5_V_s_reg_1458),
    .din6(col_buf_0_val_6_V_s_reg_1467),
    .din7(tmp_29_reg_1342),
    .dout(tmp_2_fu_1128_p9)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((exitcond4_i_fu_392_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond4_i_fu_392_p2 == 1'd0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state3)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond4_i_fu_392_p2 == 1'd0))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond5_i_fu_895_p2 == 1'd0))) begin
        t_V_2_reg_300 <= j_V_fu_900_p2;
    end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond4_i_fu_392_p2 == 1'd0))) begin
        t_V_2_reg_300 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        t_V_reg_289 <= i_V_reg_1280;
    end else if ((~((cols_out_full_n == 1'b0) | (rows_out_full_n == 1'b0) | (cols_empty_n == 1'b0) | (rows_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        t_V_reg_289 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        col_buf_0_val_0_V_s_reg_1418 <= k_buf_0_val_13_V_q0;
        col_buf_0_val_1_V_s_reg_1425 <= k_buf_0_val_12_V_q0;
        col_buf_0_val_2_V_s_reg_1433 <= k_buf_0_val_11_V_q0;
        col_buf_0_val_3_V_s_reg_1441 <= k_buf_0_val_10_V_q0;
        col_buf_0_val_4_V_s_reg_1449 <= k_buf_0_val_9_V_q0;
        col_buf_0_val_5_V_s_reg_1458 <= k_buf_0_val_8_V_q0;
        col_buf_0_val_6_V_s_reg_1467 <= k_buf_0_val_7_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_V_reg_1280 <= i_V_fu_397_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((cols_out_full_n == 1'b0) | (rows_out_full_n == 1'b0) | (cols_empty_n == 1'b0) | (rows_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        index_reg_1240 <= index_fu_344_p2;
        start_row_cast_i_cas_reg_1218[0] <= start_row_cast_i_cas_fu_324_p3[0];
start_row_cast_i_cas_reg_1218[2] <= start_row_cast_i_cas_fu_324_p3[2];
        stop_row_reg_1200 <= rows_dout;
        tmp_10_i_reg_1224 <= tmp_10_i_fu_332_p2;
        tmp_11_i_reg_1235 <= tmp_11_i_fu_338_p2;
        widthloop_reg_1213 <= cols_dout;
        y_0_1_cast_i_reg_1251[0] <= y_0_1_cast_i_fu_356_p1[0];
        y_0_2_cast_i_cast_reg_1256[1] <= y_0_2_cast_i_cast_fu_360_p3[1];
        y_0_3_cast_i_cast_reg_1261[1 : 0] <= y_0_3_cast_i_cast_fu_368_p3[1 : 0];
        y_0_4_cast_i_cast_reg_1266[0] <= y_0_4_cast_i_cast_fu_376_p3[0];
y_0_4_cast_i_cast_reg_1266[2] <= y_0_4_cast_i_cast_fu_376_p3[2];
        y_0_5_cast_i_cast_reg_1271[2 : 0] <= y_0_5_cast_i_cast_fu_384_p3[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond5_i_fu_895_p2 == 1'd0))) begin
        k_buf_0_val_10_V_a_reg_1394 <= tmp_111_0_i_fu_906_p1;
        k_buf_0_val_11_V_a_reg_1388 <= tmp_111_0_i_fu_906_p1;
        k_buf_0_val_12_V_a_reg_1382 <= tmp_111_0_i_fu_906_p1;
        k_buf_0_val_13_V_a_reg_1376 <= tmp_111_0_i_fu_906_p1;
        k_buf_0_val_7_V_ad_reg_1412 <= tmp_111_0_i_fu_906_p1;
        k_buf_0_val_8_V_ad_reg_1406 <= tmp_111_0_i_fu_906_p1;
        k_buf_0_val_9_V_ad_reg_1400 <= tmp_111_0_i_fu_906_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_10_V_a_reg_1394_pp0_iter1_reg <= k_buf_0_val_10_V_a_reg_1394;
        k_buf_0_val_11_V_a_reg_1388_pp0_iter1_reg <= k_buf_0_val_11_V_a_reg_1388;
        k_buf_0_val_12_V_a_reg_1382_pp0_iter1_reg <= k_buf_0_val_12_V_a_reg_1382;
        k_buf_0_val_13_V_a_reg_1376_pp0_iter1_reg <= k_buf_0_val_13_V_a_reg_1376;
        k_buf_0_val_7_V_ad_reg_1412_pp0_iter1_reg <= k_buf_0_val_7_V_ad_reg_1412;
        k_buf_0_val_8_V_ad_reg_1406_pp0_iter1_reg <= k_buf_0_val_8_V_ad_reg_1406;
        k_buf_0_val_9_V_ad_reg_1400_pp0_iter1_reg <= k_buf_0_val_9_V_ad_reg_1400;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_14_i_reg_1289 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_14_0_3_i_reg_1476 <= p_Val2_14_0_3_i_fu_1062_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond4_i_fu_392_p2 == 1'd0))) begin
        tmp_128_0_1_i_reg_1308 <= tmp_128_0_1_i_fu_746_p2;
        tmp_128_0_2_i_reg_1312 <= tmp_128_0_2_i_fu_751_p2;
        tmp_128_0_3_i_reg_1316 <= tmp_128_0_3_i_fu_756_p2;
        tmp_128_0_4_i_reg_1320 <= tmp_128_0_4_i_fu_761_p2;
        tmp_128_0_5_i_reg_1324 <= tmp_128_0_5_i_fu_766_p2;
        tmp_128_0_6_i_reg_1328 <= tmp_128_0_6_i_fu_771_p2;
        tmp_128_0_i_reg_1304 <= tmp_128_0_i_fu_740_p2;
        tmp_13_i_reg_1285 <= tmp_13_i_fu_403_p2;
        tmp_14_i_reg_1289 <= tmp_14_i_fu_408_p2;
        tmp_15_i_reg_1293 <= tmp_15_i_fu_413_p2;
        tmp_27_reg_1332 <= tmp_27_fu_789_p1;
        tmp_28_reg_1337 <= tmp_28_fu_806_p1;
        tmp_29_reg_1342 <= tmp_29_fu_823_p1;
        tmp_30_reg_1347 <= tmp_30_fu_840_p1;
        tmp_31_reg_1352 <= tmp_31_fu_857_p1;
        tmp_32_reg_1357 <= tmp_32_fu_874_p1;
        tmp_33_reg_1362 <= tmp_33_fu_891_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_13_i_reg_1285 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_fu_98 <= p_src_data_stream_V_V_dout;
    end
end

always @ (*) begin
    if ((exitcond5_i_fu_895_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond4_i_fu_392_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cols_blk_n = cols_empty_n;
    end else begin
        cols_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cols_out_blk_n = cols_out_full_n;
    end else begin
        cols_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((cols_out_full_n == 1'b0) | (rows_out_full_n == 1'b0) | (cols_empty_n == 1'b0) | (rows_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cols_out_write = 1'b1;
    end else begin
        cols_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((cols_out_full_n == 1'b0) | (rows_out_full_n == 1'b0) | (cols_empty_n == 1'b0) | (rows_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cols_read = 1'b1;
    end else begin
        cols_read = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond4_i_fu_392_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_10_V_ce0 = 1'b1;
    end else begin
        k_buf_0_val_10_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_14_i_reg_1289 == 1'd0) & (tmp_128_0_3_i_reg_1316 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_14_i_reg_1289 == 1'd1) & (tmp_13_i_reg_1285 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_10_V_ce1 = 1'b1;
    end else begin
        k_buf_0_val_10_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if (((tmp_14_i_reg_1289 == 1'd1) & (tmp_13_i_reg_1285 == 1'd1))) begin
            k_buf_0_val_10_V_d1 = col_buf_0_val_4_V_s_reg_1449;
        end else if (((tmp_14_i_reg_1289 == 1'd0) & (tmp_128_0_3_i_reg_1316 == 1'd1))) begin
            k_buf_0_val_10_V_d1 = tmp_V_fu_98;
        end else begin
            k_buf_0_val_10_V_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_10_V_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_14_i_reg_1289 == 1'd0) & (tmp_128_0_3_i_reg_1316 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_14_i_reg_1289 == 1'd1) & (tmp_13_i_reg_1285 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_10_V_we1 = 1'b1;
    end else begin
        k_buf_0_val_10_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_11_V_ce0 = 1'b1;
    end else begin
        k_buf_0_val_11_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_14_i_reg_1289 == 1'd0) & (tmp_128_0_2_i_reg_1312 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_14_i_reg_1289 == 1'd1) & (tmp_13_i_reg_1285 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_11_V_ce1 = 1'b1;
    end else begin
        k_buf_0_val_11_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if (((tmp_14_i_reg_1289 == 1'd1) & (tmp_13_i_reg_1285 == 1'd1))) begin
            k_buf_0_val_11_V_d1 = col_buf_0_val_3_V_s_reg_1441;
        end else if (((tmp_14_i_reg_1289 == 1'd0) & (tmp_128_0_2_i_reg_1312 == 1'd1))) begin
            k_buf_0_val_11_V_d1 = tmp_V_fu_98;
        end else begin
            k_buf_0_val_11_V_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_11_V_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_14_i_reg_1289 == 1'd0) & (tmp_128_0_2_i_reg_1312 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_14_i_reg_1289 == 1'd1) & (tmp_13_i_reg_1285 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_11_V_we1 = 1'b1;
    end else begin
        k_buf_0_val_11_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_12_V_ce0 = 1'b1;
    end else begin
        k_buf_0_val_12_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_14_i_reg_1289 == 1'd0) & (tmp_128_0_1_i_reg_1308 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_14_i_reg_1289 == 1'd1) & (tmp_13_i_reg_1285 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_12_V_ce1 = 1'b1;
    end else begin
        k_buf_0_val_12_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if (((tmp_14_i_reg_1289 == 1'd1) & (tmp_13_i_reg_1285 == 1'd1))) begin
            k_buf_0_val_12_V_d1 = col_buf_0_val_2_V_s_reg_1433;
        end else if (((tmp_14_i_reg_1289 == 1'd0) & (tmp_128_0_1_i_reg_1308 == 1'd1))) begin
            k_buf_0_val_12_V_d1 = tmp_V_fu_98;
        end else begin
            k_buf_0_val_12_V_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_12_V_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_14_i_reg_1289 == 1'd0) & (tmp_128_0_1_i_reg_1308 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_14_i_reg_1289 == 1'd1) & (tmp_13_i_reg_1285 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_12_V_we1 = 1'b1;
    end else begin
        k_buf_0_val_12_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_13_V_ce0 = 1'b1;
    end else begin
        k_buf_0_val_13_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_14_i_reg_1289 == 1'd0) & (tmp_128_0_i_reg_1304 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_14_i_reg_1289 == 1'd1) & (tmp_13_i_reg_1285 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_13_V_ce1 = 1'b1;
    end else begin
        k_buf_0_val_13_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if (((tmp_14_i_reg_1289 == 1'd1) & (tmp_13_i_reg_1285 == 1'd1))) begin
            k_buf_0_val_13_V_d1 = col_buf_0_val_1_V_s_reg_1425;
        end else if (((tmp_14_i_reg_1289 == 1'd0) & (tmp_128_0_i_reg_1304 == 1'd1))) begin
            k_buf_0_val_13_V_d1 = tmp_V_fu_98;
        end else begin
            k_buf_0_val_13_V_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_13_V_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_14_i_reg_1289 == 1'd0) & (tmp_128_0_i_reg_1304 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_14_i_reg_1289 == 1'd1) & (tmp_13_i_reg_1285 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_13_V_we1 = 1'b1;
    end else begin
        k_buf_0_val_13_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_7_V_ce0 = 1'b1;
    end else begin
        k_buf_0_val_7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_14_i_reg_1289 == 1'd0) & (tmp_128_0_6_i_reg_1328 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_14_i_reg_1289 == 1'd1) & (tmp_13_i_reg_1285 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_7_V_ce1 = 1'b1;
    end else begin
        k_buf_0_val_7_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if (((tmp_14_i_reg_1289 == 1'd1) & (tmp_13_i_reg_1285 == 1'd1))) begin
            k_buf_0_val_7_V_d1 = grp_load_fu_311_p1;
        end else if (((tmp_14_i_reg_1289 == 1'd0) & (tmp_128_0_6_i_reg_1328 == 1'd1))) begin
            k_buf_0_val_7_V_d1 = tmp_V_fu_98;
        end else begin
            k_buf_0_val_7_V_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_7_V_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_14_i_reg_1289 == 1'd0) & (tmp_128_0_6_i_reg_1328 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_14_i_reg_1289 == 1'd1) & (tmp_13_i_reg_1285 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_7_V_we1 = 1'b1;
    end else begin
        k_buf_0_val_7_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_8_V_ce0 = 1'b1;
    end else begin
        k_buf_0_val_8_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_14_i_reg_1289 == 1'd0) & (tmp_128_0_5_i_reg_1324 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_14_i_reg_1289 == 1'd1) & (tmp_13_i_reg_1285 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_8_V_ce1 = 1'b1;
    end else begin
        k_buf_0_val_8_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if (((tmp_14_i_reg_1289 == 1'd1) & (tmp_13_i_reg_1285 == 1'd1))) begin
            k_buf_0_val_8_V_d1 = col_buf_0_val_6_V_s_reg_1467;
        end else if (((tmp_14_i_reg_1289 == 1'd0) & (tmp_128_0_5_i_reg_1324 == 1'd1))) begin
            k_buf_0_val_8_V_d1 = tmp_V_fu_98;
        end else begin
            k_buf_0_val_8_V_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_8_V_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_14_i_reg_1289 == 1'd0) & (tmp_128_0_5_i_reg_1324 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_14_i_reg_1289 == 1'd1) & (tmp_13_i_reg_1285 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_8_V_we1 = 1'b1;
    end else begin
        k_buf_0_val_8_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_9_V_ce0 = 1'b1;
    end else begin
        k_buf_0_val_9_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_14_i_reg_1289 == 1'd0) & (tmp_128_0_4_i_reg_1320 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_14_i_reg_1289 == 1'd1) & (tmp_13_i_reg_1285 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_9_V_ce1 = 1'b1;
    end else begin
        k_buf_0_val_9_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if (((tmp_14_i_reg_1289 == 1'd1) & (tmp_13_i_reg_1285 == 1'd1))) begin
            k_buf_0_val_9_V_d1 = col_buf_0_val_5_V_s_reg_1458;
        end else if (((tmp_14_i_reg_1289 == 1'd0) & (tmp_128_0_4_i_reg_1320 == 1'd1))) begin
            k_buf_0_val_9_V_d1 = tmp_V_fu_98;
        end else begin
            k_buf_0_val_9_V_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_9_V_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_14_i_reg_1289 == 1'd0) & (tmp_128_0_4_i_reg_1320 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_14_i_reg_1289 == 1'd1) & (tmp_13_i_reg_1285 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_9_V_we1 = 1'b1;
    end else begin
        k_buf_0_val_9_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_14_i_reg_1289 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_dst_V_V_blk_n = p_dst_V_V_full_n;
    end else begin
        p_dst_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_14_i_reg_1289 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_dst_V_V_write = 1'b1;
    end else begin
        p_dst_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_13_i_reg_1285 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_src_data_stream_V_V_blk_n = p_src_data_stream_V_V_empty_n;
    end else begin
        p_src_data_stream_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_13_i_reg_1285 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_src_data_stream_V_V_read = 1'b1;
    end else begin
        p_src_data_stream_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        rows_blk_n = rows_empty_n;
    end else begin
        rows_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        rows_out_blk_n = rows_out_full_n;
    end else begin
        rows_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((cols_out_full_n == 1'b0) | (rows_out_full_n == 1'b0) | (cols_empty_n == 1'b0) | (rows_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        rows_out_write = 1'b1;
    end else begin
        rows_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((cols_out_full_n == 1'b0) | (rows_out_full_n == 1'b0) | (cols_empty_n == 1'b0) | (rows_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        rows_read = 1'b1;
    end else begin
        rows_read = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((cols_out_full_n == 1'b0) | (rows_out_full_n == 1'b0) | (cols_empty_n == 1'b0) | (rows_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond4_i_fu_392_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((exitcond5_i_fu_895_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((exitcond5_i_fu_895_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign OP1_V_0_0_i_fu_1026_p1 = $signed(src_kernel_winY_0_v_6_fu_1019_p3);

assign OP1_V_0_1_i_fu_1030_p1 = $signed(src_kernel_winY_0_v_5_fu_993_p3);

assign addconv_i_fu_1034_p2 = ($signed(OP1_V_0_1_i_fu_1030_p1) + $signed(OP1_V_0_0_i_fu_1026_p1));

assign anchor_y_1_cast3_i2_s_fu_316_p3 = ((p_read[0:0] === 1'b1) ? 32'd3 : 32'd0);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((tmp_14_i_reg_1289 == 1'd1) & (p_dst_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((tmp_13_i_reg_1285 == 1'd1) & (p_src_data_stream_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((tmp_14_i_reg_1289 == 1'd1) & (p_dst_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((tmp_13_i_reg_1285 == 1'd1) & (p_src_data_stream_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((tmp_14_i_reg_1289 == 1'd1) & (p_dst_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((tmp_13_i_reg_1285 == 1'd1) & (p_src_data_stream_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((cols_out_full_n == 1'b0) | (rows_out_full_n == 1'b0) | (cols_empty_n == 1'b0) | (rows_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter1 = ((tmp_13_i_reg_1285 == 1'd1) & (p_src_data_stream_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state5_pp0_stage0_iter2 = ((tmp_14_i_reg_1289 == 1'd1) & (p_dst_V_V_full_n == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign cols_out_din = cols_dout;

assign exitcond4_i_fu_392_p2 = ((t_V_reg_289 == tmp_11_i_reg_1235) ? 1'b1 : 1'b0);

assign exitcond5_i_fu_895_p2 = ((t_V_2_reg_300 == widthloop_reg_1213) ? 1'b1 : 1'b0);

assign grp_load_fu_311_p1 = tmp_V_fu_98;

assign i_V_fu_397_p2 = (t_V_reg_289 + 32'd1);

assign index_fu_344_p2 = ($signed(rows_dout) + $signed(32'd4294967289));

assign j_V_fu_900_p2 = (t_V_2_reg_300 + 32'd1);

assign k_buf_0_val_10_V_address0 = tmp_111_0_i_fu_906_p1;

assign k_buf_0_val_11_V_address0 = tmp_111_0_i_fu_906_p1;

assign k_buf_0_val_12_V_address0 = tmp_111_0_i_fu_906_p1;

assign k_buf_0_val_13_V_address0 = tmp_111_0_i_fu_906_p1;

assign k_buf_0_val_7_V_address0 = tmp_111_0_i_fu_906_p1;

assign k_buf_0_val_8_V_address0 = tmp_111_0_i_fu_906_p1;

assign k_buf_0_val_9_V_address0 = tmp_111_0_i_fu_906_p1;

assign not_read_fu_350_p2 = (p_read ^ 1'd1);

assign or_cond_i1_0_1_i_fu_489_p2 = (tmp_140_0_1_i_fu_484_p2 & rev2_fu_478_p2);

assign or_cond_i1_0_2_i_fu_535_p2 = (tmp_140_0_2_i_fu_530_p2 & rev3_fu_524_p2);

assign or_cond_i1_0_3_i_fu_581_p2 = (tmp_140_0_3_i_fu_576_p2 & rev4_fu_570_p2);

assign or_cond_i1_0_4_i_fu_627_p2 = (tmp_140_0_4_i_fu_622_p2 & rev5_fu_616_p2);

assign or_cond_i1_0_5_i_fu_673_p2 = (tmp_140_0_5_i_fu_668_p2 & rev6_fu_662_p2);

assign or_cond_i1_0_6_i_fu_719_p2 = (tmp_140_0_6_i_fu_714_p2 & rev7_fu_708_p2);

assign or_cond_i1_0_i_fu_443_p2 = (tmp_140_0_i_fu_438_p2 & rev_fu_432_p2);

assign p_Val2_14_0_1_cast_fu_1040_p1 = $signed(addconv_i_fu_1034_p2);

assign p_Val2_14_0_3_cast_fu_1146_p1 = $signed(p_Val2_14_0_3_i_reg_1476);

assign p_Val2_14_0_3_i_fu_1062_p2 = ($signed(tmp_cast_fu_1058_p1) + $signed(p_Val2_14_0_1_cast_fu_1040_p1));

assign p_Val2_14_0_6_i_fu_1177_p2 = ($signed(tmp2_cast_fu_1173_p1) + $signed(tmp1_fu_1161_p2));

assign p_assign_3_0_1_i_fu_464_p2 = ($signed(32'd4294967294) + $signed(t_V_reg_289));

assign p_assign_3_0_2_i_fu_510_p2 = ($signed(32'd4294967293) + $signed(t_V_reg_289));

assign p_assign_3_0_3_i_fu_556_p2 = ($signed(32'd4294967292) + $signed(t_V_reg_289));

assign p_assign_3_0_4_i_fu_602_p2 = ($signed(32'd4294967291) + $signed(t_V_reg_289));

assign p_assign_3_0_5_i_fu_648_p2 = ($signed(32'd4294967290) + $signed(t_V_reg_289));

assign p_assign_3_0_6_i_fu_694_p2 = ($signed(32'd4294967289) + $signed(t_V_reg_289));

assign p_assign_4_0_1_i_fu_503_p3 = ((tmp_16_fu_495_p3[0:0] === 1'b1) ? 32'd0 : tmp_10_i_reg_1224);

assign p_assign_4_0_2_i_fu_549_p3 = ((tmp_18_fu_541_p3[0:0] === 1'b1) ? 32'd0 : tmp_10_i_reg_1224);

assign p_assign_4_0_3_i_fu_595_p3 = ((tmp_20_fu_587_p3[0:0] === 1'b1) ? 32'd0 : tmp_10_i_reg_1224);

assign p_assign_4_0_4_i_fu_641_p3 = ((tmp_22_fu_633_p3[0:0] === 1'b1) ? 32'd0 : tmp_10_i_reg_1224);

assign p_assign_4_0_5_i_fu_687_p3 = ((tmp_24_fu_679_p3[0:0] === 1'b1) ? 32'd0 : tmp_10_i_reg_1224);

assign p_assign_4_0_6_i_fu_733_p3 = ((tmp_26_fu_725_p3[0:0] === 1'b1) ? 32'd0 : tmp_10_i_reg_1224);

assign p_assign_4_0_i_fu_457_p3 = ((tmp_14_fu_449_p3[0:0] === 1'b1) ? 32'd0 : tmp_10_i_reg_1224);

assign p_dst_V_V_din = $signed(p_Val2_14_0_6_i_fu_1177_p2);

assign rev2_fu_478_p2 = (tmp_15_fu_470_p3 ^ 1'd1);

assign rev3_fu_524_p2 = (tmp_17_fu_516_p3 ^ 1'd1);

assign rev4_fu_570_p2 = (tmp_19_fu_562_p3 ^ 1'd1);

assign rev5_fu_616_p2 = (tmp_21_fu_608_p3 ^ 1'd1);

assign rev6_fu_662_p2 = (tmp_23_fu_654_p3 ^ 1'd1);

assign rev7_fu_708_p2 = (tmp_25_fu_700_p3 ^ 1'd1);

assign rev_fu_432_p2 = (tmp_13_fu_424_p3 ^ 1'd1);

assign row_assign_7_0_1_i_fu_801_p2 = (y_1_0_1_i_fu_793_p3 - index_reg_1240);

assign row_assign_7_0_2_i_fu_818_p2 = (y_1_0_2_i_fu_810_p3 - index_reg_1240);

assign row_assign_7_0_3_i_fu_835_p2 = (y_1_0_3_i_fu_827_p3 - index_reg_1240);

assign row_assign_7_0_4_i_fu_852_p2 = (y_1_0_4_i_fu_844_p3 - index_reg_1240);

assign row_assign_7_0_5_i_fu_869_p2 = (y_1_0_5_i_fu_861_p3 - index_reg_1240);

assign row_assign_7_0_6_i_fu_886_p2 = (y_1_0_6_i_fu_878_p3 - index_reg_1240);

assign row_assign_7_0_i_fu_784_p2 = (y_1_0_i_fu_776_p3 - index_reg_1240);

assign rows_out_din = rows_dout;

assign src_kernel_winY_0_v_1_fu_1122_p3 = ((tmp_15_i_reg_1293[0:0] === 1'b1) ? tmp_1_fu_1110_p9 : col_buf_0_val_5_V_s_reg_1458);

assign src_kernel_winY_0_v_2_fu_1140_p3 = ((tmp_15_i_reg_1293[0:0] === 1'b1) ? tmp_2_fu_1128_p9 : col_buf_0_val_4_V_s_reg_1449);

assign src_kernel_winY_0_v_3_fu_941_p3 = ((tmp_15_i_reg_1293[0:0] === 1'b1) ? tmp_3_fu_922_p9 : k_buf_0_val_10_V_q0);

assign src_kernel_winY_0_v_4_fu_967_p3 = ((tmp_15_i_reg_1293[0:0] === 1'b1) ? tmp_4_fu_948_p9 : k_buf_0_val_11_V_q0);

assign src_kernel_winY_0_v_5_fu_993_p3 = ((tmp_15_i_reg_1293[0:0] === 1'b1) ? tmp_5_fu_974_p9 : k_buf_0_val_12_V_q0);

assign src_kernel_winY_0_v_6_fu_1019_p3 = ((tmp_15_i_reg_1293[0:0] === 1'b1) ? tmp_6_fu_1000_p9 : k_buf_0_val_13_V_q0);

assign src_kernel_winY_0_v_fu_1104_p3 = ((tmp_15_i_reg_1293[0:0] === 1'b1) ? tmp_s_fu_1092_p9 : col_buf_0_val_6_V_s_reg_1467);

assign start_out = real_start;

assign start_row_cast_i_cas_fu_324_p3 = ((p_read[0:0] === 1'b1) ? 32'd3 : 32'd6);

assign tmp1_fu_1161_p2 = ($signed(p_Val2_14_0_3_cast_fu_1146_p1) + $signed(tmp_164_0_4_cast_i_fu_1149_p1));

assign tmp2_cast_fu_1173_p1 = $signed(tmp2_fu_1167_p2);

assign tmp2_fu_1167_p2 = ($signed(tmp_164_0_5_cast_i_c_fu_1153_p1) + $signed(tmp_164_0_6_cast_i_c_fu_1157_p1));

assign tmp_10_i_fu_332_p2 = (rows_dout + 32'd7);

assign tmp_111_0_i_fu_906_p1 = t_V_2_reg_300;

assign tmp_11_i_fu_338_p2 = (tmp_10_i_fu_332_p2 - anchor_y_1_cast3_i2_s_fu_316_p3);

assign tmp_128_0_1_i_fu_746_p2 = ((y_0_1_cast_i_reg_1251 == t_V_reg_289) ? 1'b1 : 1'b0);

assign tmp_128_0_2_i_fu_751_p2 = ((y_0_2_cast_i_cast_reg_1256 == t_V_reg_289) ? 1'b1 : 1'b0);

assign tmp_128_0_3_i_fu_756_p2 = ((y_0_3_cast_i_cast_reg_1261 == t_V_reg_289) ? 1'b1 : 1'b0);

assign tmp_128_0_4_i_fu_761_p2 = ((y_0_4_cast_i_cast_reg_1266 == t_V_reg_289) ? 1'b1 : 1'b0);

assign tmp_128_0_5_i_fu_766_p2 = ((y_0_5_cast_i_cast_reg_1271 == t_V_reg_289) ? 1'b1 : 1'b0);

assign tmp_128_0_6_i_fu_771_p2 = ((start_row_cast_i_cas_reg_1218 == t_V_reg_289) ? 1'b1 : 1'b0);

assign tmp_128_0_i_fu_740_p2 = ((t_V_reg_289 == 32'd0) ? 1'b1 : 1'b0);

assign tmp_138_0_i_fu_418_p2 = ($signed(32'd4294967295) + $signed(t_V_reg_289));

assign tmp_13_fu_424_p3 = tmp_138_0_i_fu_418_p2[32'd31];

assign tmp_13_i_fu_403_p2 = ((t_V_reg_289 < stop_row_reg_1200) ? 1'b1 : 1'b0);

assign tmp_140_0_1_i_fu_484_p2 = (($signed(p_assign_3_0_1_i_fu_464_p2) < $signed(stop_row_reg_1200)) ? 1'b1 : 1'b0);

assign tmp_140_0_2_i_fu_530_p2 = (($signed(p_assign_3_0_2_i_fu_510_p2) < $signed(stop_row_reg_1200)) ? 1'b1 : 1'b0);

assign tmp_140_0_3_i_fu_576_p2 = (($signed(p_assign_3_0_3_i_fu_556_p2) < $signed(stop_row_reg_1200)) ? 1'b1 : 1'b0);

assign tmp_140_0_4_i_fu_622_p2 = (($signed(p_assign_3_0_4_i_fu_602_p2) < $signed(stop_row_reg_1200)) ? 1'b1 : 1'b0);

assign tmp_140_0_5_i_fu_668_p2 = (($signed(p_assign_3_0_5_i_fu_648_p2) < $signed(stop_row_reg_1200)) ? 1'b1 : 1'b0);

assign tmp_140_0_6_i_fu_714_p2 = (($signed(p_assign_3_0_6_i_fu_694_p2) < $signed(stop_row_reg_1200)) ? 1'b1 : 1'b0);

assign tmp_140_0_i_fu_438_p2 = (($signed(tmp_138_0_i_fu_418_p2) < $signed(stop_row_reg_1200)) ? 1'b1 : 1'b0);

assign tmp_14_fu_449_p3 = tmp_138_0_i_fu_418_p2[32'd31];

assign tmp_14_i_fu_408_p2 = ((t_V_reg_289 > start_row_cast_i_cas_reg_1218) ? 1'b1 : 1'b0);

assign tmp_15_fu_470_p3 = p_assign_3_0_1_i_fu_464_p2[32'd31];

assign tmp_15_i_fu_413_p2 = ((t_V_reg_289 > stop_row_reg_1200) ? 1'b1 : 1'b0);

assign tmp_164_0_2_cast_i_c_fu_1044_p1 = $signed(src_kernel_winY_0_v_4_fu_967_p3);

assign tmp_164_0_3_cast_i_c_fu_1048_p1 = $signed(src_kernel_winY_0_v_3_fu_941_p3);

assign tmp_164_0_4_cast_i_fu_1149_p1 = $signed(src_kernel_winY_0_v_2_fu_1140_p3);

assign tmp_164_0_5_cast_i_c_fu_1153_p1 = $signed(src_kernel_winY_0_v_1_fu_1122_p3);

assign tmp_164_0_6_cast_i_c_fu_1157_p1 = $signed(src_kernel_winY_0_v_fu_1104_p3);

assign tmp_16_fu_495_p3 = p_assign_3_0_1_i_fu_464_p2[32'd31];

assign tmp_17_fu_516_p3 = p_assign_3_0_2_i_fu_510_p2[32'd31];

assign tmp_18_fu_541_p3 = p_assign_3_0_2_i_fu_510_p2[32'd31];

assign tmp_19_fu_562_p3 = p_assign_3_0_3_i_fu_556_p2[32'd31];

assign tmp_20_fu_587_p3 = p_assign_3_0_3_i_fu_556_p2[32'd31];

assign tmp_21_fu_608_p3 = p_assign_3_0_4_i_fu_602_p2[32'd31];

assign tmp_22_fu_633_p3 = p_assign_3_0_4_i_fu_602_p2[32'd31];

assign tmp_23_fu_654_p3 = p_assign_3_0_5_i_fu_648_p2[32'd31];

assign tmp_24_fu_679_p3 = p_assign_3_0_5_i_fu_648_p2[32'd31];

assign tmp_25_fu_700_p3 = p_assign_3_0_6_i_fu_694_p2[32'd31];

assign tmp_26_fu_725_p3 = p_assign_3_0_6_i_fu_694_p2[32'd31];

assign tmp_27_fu_789_p1 = row_assign_7_0_i_fu_784_p2[2:0];

assign tmp_28_fu_806_p1 = row_assign_7_0_1_i_fu_801_p2[2:0];

assign tmp_29_fu_823_p1 = row_assign_7_0_2_i_fu_818_p2[2:0];

assign tmp_30_fu_840_p1 = row_assign_7_0_3_i_fu_835_p2[2:0];

assign tmp_31_fu_857_p1 = row_assign_7_0_4_i_fu_852_p2[2:0];

assign tmp_32_fu_874_p1 = row_assign_7_0_5_i_fu_869_p2[2:0];

assign tmp_33_fu_891_p1 = row_assign_7_0_6_i_fu_886_p2[2:0];

assign tmp_cast_fu_1058_p1 = $signed(tmp_fu_1052_p2);

assign tmp_fu_1052_p2 = ($signed(tmp_164_0_2_cast_i_c_fu_1044_p1) + $signed(tmp_164_0_3_cast_i_c_fu_1048_p1));

assign y_0_1_cast_i_fu_356_p1 = not_read_fu_350_p2;

assign y_0_2_cast_i_cast_fu_360_p3 = ((p_read[0:0] === 1'b1) ? 32'd0 : 32'd2);

assign y_0_3_cast_i_cast_fu_368_p3 = ((p_read[0:0] === 1'b1) ? 32'd0 : 32'd3);

assign y_0_4_cast_i_cast_fu_376_p3 = ((p_read[0:0] === 1'b1) ? 32'd1 : 32'd4);

assign y_0_5_cast_i_cast_fu_384_p3 = ((p_read[0:0] === 1'b1) ? 32'd2 : 32'd5);

assign y_1_0_1_i_fu_793_p3 = ((or_cond_i1_0_1_i_fu_489_p2[0:0] === 1'b1) ? p_assign_3_0_1_i_fu_464_p2 : p_assign_4_0_1_i_fu_503_p3);

assign y_1_0_2_i_fu_810_p3 = ((or_cond_i1_0_2_i_fu_535_p2[0:0] === 1'b1) ? p_assign_3_0_2_i_fu_510_p2 : p_assign_4_0_2_i_fu_549_p3);

assign y_1_0_3_i_fu_827_p3 = ((or_cond_i1_0_3_i_fu_581_p2[0:0] === 1'b1) ? p_assign_3_0_3_i_fu_556_p2 : p_assign_4_0_3_i_fu_595_p3);

assign y_1_0_4_i_fu_844_p3 = ((or_cond_i1_0_4_i_fu_627_p2[0:0] === 1'b1) ? p_assign_3_0_4_i_fu_602_p2 : p_assign_4_0_4_i_fu_641_p3);

assign y_1_0_5_i_fu_861_p3 = ((or_cond_i1_0_5_i_fu_673_p2[0:0] === 1'b1) ? p_assign_3_0_5_i_fu_648_p2 : p_assign_4_0_5_i_fu_687_p3);

assign y_1_0_6_i_fu_878_p3 = ((or_cond_i1_0_6_i_fu_719_p2[0:0] === 1'b1) ? p_assign_3_0_6_i_fu_694_p2 : p_assign_4_0_6_i_fu_733_p3);

assign y_1_0_i_fu_776_p3 = ((or_cond_i1_0_i_fu_443_p2[0:0] === 1'b1) ? tmp_138_0_i_fu_418_p2 : p_assign_4_0_i_fu_457_p3);

always @ (posedge ap_clk) begin
    start_row_cast_i_cas_reg_1218[1] <= 1'b1;
    start_row_cast_i_cas_reg_1218[31:3] <= 29'b00000000000000000000000000000;
    y_0_1_cast_i_reg_1251[31:1] <= 31'b0000000000000000000000000000000;
    y_0_2_cast_i_cast_reg_1256[0] <= 1'b0;
    y_0_2_cast_i_cast_reg_1256[31:2] <= 30'b000000000000000000000000000000;
    y_0_3_cast_i_cast_reg_1261[31:2] <= 30'b000000000000000000000000000000;
    y_0_4_cast_i_cast_reg_1266[1] <= 1'b0;
    y_0_4_cast_i_cast_reg_1266[31:3] <= 29'b00000000000000000000000000000;
    y_0_5_cast_i_cast_reg_1271[31:3] <= 29'b00000000000000000000000000000;
end

endmodule //column_filter
