// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module CalCim188 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        p_gradx_data_stream_V_V_dout,
        p_gradx_data_stream_V_V_empty_n,
        p_gradx_data_stream_V_V_read,
        p_grady_rows_V_dout,
        p_grady_rows_V_empty_n,
        p_grady_rows_V_read,
        p_grady_cols_V_dout,
        p_grady_cols_V_empty_n,
        p_grady_cols_V_read,
        p_grady_data_stream_V_V_dout,
        p_grady_data_stream_V_V_empty_n,
        p_grady_data_stream_V_V_read,
        p_gradxy_data_stream_V_V_dout,
        p_gradxy_data_stream_V_V_empty_n,
        p_gradxy_data_stream_V_V_read,
        p_dst_data_stream_V_din,
        p_dst_data_stream_V_full_n,
        p_dst_data_stream_V_write,
        k_dout,
        k_empty_n,
        k_read
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state21 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [34:0] p_gradx_data_stream_V_V_dout;
input   p_gradx_data_stream_V_V_empty_n;
output   p_gradx_data_stream_V_V_read;
input  [31:0] p_grady_rows_V_dout;
input   p_grady_rows_V_empty_n;
output   p_grady_rows_V_read;
input  [31:0] p_grady_cols_V_dout;
input   p_grady_cols_V_empty_n;
output   p_grady_cols_V_read;
input  [34:0] p_grady_data_stream_V_V_dout;
input   p_grady_data_stream_V_V_empty_n;
output   p_grady_data_stream_V_V_read;
input  [34:0] p_gradxy_data_stream_V_V_dout;
input   p_gradxy_data_stream_V_V_empty_n;
output   p_gradxy_data_stream_V_V_read;
output  [31:0] p_dst_data_stream_V_din;
input   p_dst_data_stream_V_full_n;
output   p_dst_data_stream_V_write;
input  [31:0] k_dout;
input   k_empty_n;
output   k_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg p_gradx_data_stream_V_V_read;
reg p_grady_rows_V_read;
reg p_grady_cols_V_read;
reg p_grady_data_stream_V_V_read;
reg p_gradxy_data_stream_V_V_read;
reg p_dst_data_stream_V_write;
reg k_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    p_gradx_data_stream_V_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond_i_reg_234;
reg    p_grady_rows_V_blk_n;
reg    p_grady_cols_V_blk_n;
reg    p_grady_data_stream_V_V_blk_n;
reg    p_gradxy_data_stream_V_V_blk_n;
reg    p_dst_data_stream_V_blk_n;
reg    ap_enable_reg_pp0_iter17;
reg   [0:0] exitcond_i_reg_234_pp0_iter16_reg;
reg    k_blk_n;
reg   [31:0] t_V_17_reg_112;
reg   [31:0] k_read_reg_210;
reg    ap_block_state1;
reg   [31:0] rows_reg_215;
reg   [31:0] cols_reg_220;
wire   [0:0] exitcond8_i_fu_176_p2;
wire    ap_CS_fsm_state2;
wire   [31:0] i_V_fu_181_p2;
reg   [31:0] i_V_reg_229;
wire   [0:0] exitcond_i_fu_187_p2;
wire    ap_block_state3_pp0_stage0_iter0;
reg    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state6_pp0_stage0_iter3;
wire    ap_block_state7_pp0_stage0_iter4;
wire    ap_block_state8_pp0_stage0_iter5;
wire    ap_block_state9_pp0_stage0_iter6;
wire    ap_block_state10_pp0_stage0_iter7;
wire    ap_block_state11_pp0_stage0_iter8;
wire    ap_block_state12_pp0_stage0_iter9;
wire    ap_block_state13_pp0_stage0_iter10;
wire    ap_block_state14_pp0_stage0_iter11;
wire    ap_block_state15_pp0_stage0_iter12;
wire    ap_block_state16_pp0_stage0_iter13;
wire    ap_block_state17_pp0_stage0_iter14;
wire    ap_block_state18_pp0_stage0_iter15;
wire    ap_block_state19_pp0_stage0_iter16;
reg    ap_block_state20_pp0_stage0_iter17;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] exitcond_i_reg_234_pp0_iter1_reg;
reg   [0:0] exitcond_i_reg_234_pp0_iter2_reg;
reg   [0:0] exitcond_i_reg_234_pp0_iter3_reg;
reg   [0:0] exitcond_i_reg_234_pp0_iter4_reg;
reg   [0:0] exitcond_i_reg_234_pp0_iter5_reg;
reg   [0:0] exitcond_i_reg_234_pp0_iter6_reg;
reg   [0:0] exitcond_i_reg_234_pp0_iter7_reg;
reg   [0:0] exitcond_i_reg_234_pp0_iter8_reg;
reg   [0:0] exitcond_i_reg_234_pp0_iter9_reg;
reg   [0:0] exitcond_i_reg_234_pp0_iter10_reg;
reg   [0:0] exitcond_i_reg_234_pp0_iter11_reg;
reg   [0:0] exitcond_i_reg_234_pp0_iter12_reg;
reg   [0:0] exitcond_i_reg_234_pp0_iter13_reg;
reg   [0:0] exitcond_i_reg_234_pp0_iter14_reg;
reg   [0:0] exitcond_i_reg_234_pp0_iter15_reg;
wire   [31:0] j_V_fu_192_p2;
reg    ap_enable_reg_pp0_iter0;
reg   [34:0] tmp_V_reg_243;
reg   [34:0] tmp_V_10_reg_248;
reg   [34:0] tmp_V_11_reg_253;
wire   [31:0] grp_fu_167_p1;
reg   [31:0] tmp_i_i_i_reg_273;
wire   [31:0] grp_fu_170_p1;
reg   [31:0] tmp_i_i22_i_reg_278;
wire   [31:0] grp_fu_173_p1;
reg   [31:0] tmp_i_i23_i_reg_283;
wire   [31:0] grp_fu_136_p2;
reg   [31:0] lgx_reg_288;
wire   [31:0] grp_fu_141_p2;
reg   [31:0] lgy_reg_294;
wire   [31:0] grp_fu_146_p2;
reg   [31:0] lgxy_reg_300;
wire   [31:0] grp_fu_151_p2;
reg   [31:0] tmp_60_i_reg_306;
wire   [31:0] grp_fu_155_p2;
reg   [31:0] tmp_61_i_reg_311;
wire   [31:0] grp_fu_123_p2;
reg   [31:0] trac_reg_316;
reg   [31:0] trac_reg_316_pp0_iter10_reg;
reg   [31:0] trac_reg_316_pp0_iter11_reg;
wire   [31:0] grp_fu_127_p2;
reg   [31:0] det_reg_322;
reg   [31:0] det_reg_322_pp0_iter12_reg;
reg   [31:0] det_reg_322_pp0_iter13_reg;
wire   [31:0] grp_fu_159_p2;
reg   [31:0] tmp_62_i_reg_327;
wire   [31:0] grp_fu_163_p2;
reg   [31:0] tmp_63_i_reg_332;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg   [31:0] t_V_reg_101;
wire    ap_CS_fsm_state21;
wire   [31:0] grp_fu_131_p2;
reg    ap_block_pp0_stage0_01001;
wire  signed [63:0] grp_fu_167_p0;
wire  signed [63:0] grp_fu_170_p0;
wire  signed [63:0] grp_fu_173_p0;
reg    grp_fu_123_ce;
reg    grp_fu_127_ce;
reg    grp_fu_131_ce;
reg    grp_fu_136_ce;
reg    grp_fu_141_ce;
reg    grp_fu_146_ce;
reg    grp_fu_151_ce;
reg    grp_fu_155_ce;
reg    grp_fu_159_ce;
reg    grp_fu_163_ce;
reg    grp_fu_167_ce;
reg    grp_fu_170_ce;
reg    grp_fu_173_ce;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
end

Haaris_Core_fadd_Lf8 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Haaris_Core_fadd_Lf8_U251(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(lgx_reg_288),
    .din1(lgy_reg_294),
    .ce(grp_fu_123_ce),
    .dout(grp_fu_123_p2)
);

Haaris_Core_fsub_Mgi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Haaris_Core_fsub_Mgi_U252(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_60_i_reg_306),
    .din1(tmp_61_i_reg_311),
    .ce(grp_fu_127_ce),
    .dout(grp_fu_127_p2)
);

Haaris_Core_fsub_Mgi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Haaris_Core_fsub_Mgi_U253(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(det_reg_322_pp0_iter13_reg),
    .din1(tmp_63_i_reg_332),
    .ce(grp_fu_131_ce),
    .dout(grp_fu_131_p2)
);

Haaris_Core_fmul_Ngs #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Haaris_Core_fmul_Ngs_U254(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_i_i_i_reg_273),
    .din1(32'd816295040),
    .ce(grp_fu_136_ce),
    .dout(grp_fu_136_p2)
);

Haaris_Core_fmul_Ngs #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Haaris_Core_fmul_Ngs_U255(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_i_i22_i_reg_278),
    .din1(32'd816295040),
    .ce(grp_fu_141_ce),
    .dout(grp_fu_141_p2)
);

Haaris_Core_fmul_Ngs #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Haaris_Core_fmul_Ngs_U256(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_i_i23_i_reg_283),
    .din1(32'd816295040),
    .ce(grp_fu_146_ce),
    .dout(grp_fu_146_p2)
);

Haaris_Core_fmul_Ngs #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Haaris_Core_fmul_Ngs_U257(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(lgx_reg_288),
    .din1(lgy_reg_294),
    .ce(grp_fu_151_ce),
    .dout(grp_fu_151_p2)
);

Haaris_Core_fmul_Ngs #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Haaris_Core_fmul_Ngs_U258(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(lgxy_reg_300),
    .din1(lgxy_reg_300),
    .ce(grp_fu_155_ce),
    .dout(grp_fu_155_p2)
);

Haaris_Core_fmul_Ngs #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Haaris_Core_fmul_Ngs_U259(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trac_reg_316),
    .din1(k_read_reg_210),
    .ce(grp_fu_159_ce),
    .dout(grp_fu_159_p2)
);

Haaris_Core_fmul_Ngs #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Haaris_Core_fmul_Ngs_U260(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_62_i_reg_327),
    .din1(trac_reg_316_pp0_iter11_reg),
    .ce(grp_fu_163_ce),
    .dout(grp_fu_163_p2)
);

Haaris_Core_sitofOgC #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
Haaris_Core_sitofOgC_U261(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_167_p0),
    .ce(grp_fu_167_ce),
    .dout(grp_fu_167_p1)
);

Haaris_Core_sitofOgC #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
Haaris_Core_sitofOgC_U262(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_170_p0),
    .ce(grp_fu_170_ce),
    .dout(grp_fu_170_p1)
);

Haaris_Core_sitofOgC #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
Haaris_Core_sitofOgC_U263(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_173_p0),
    .ce(grp_fu_173_ce),
    .dout(grp_fu_173_p1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond8_i_fu_176_p2 == 1'd1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((exitcond8_i_fu_176_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state3)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end else if (((exitcond8_i_fu_176_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter17 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_fu_187_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        t_V_17_reg_112 <= j_V_fu_192_p2;
    end else if (((exitcond8_i_fu_176_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        t_V_17_reg_112 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        t_V_reg_101 <= i_V_reg_229;
    end else if ((~((ap_start == 1'b0) | (k_empty_n == 1'b0) | (p_grady_cols_V_empty_n == 1'b0) | (p_grady_rows_V_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        t_V_reg_101 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (k_empty_n == 1'b0) | (p_grady_cols_V_empty_n == 1'b0) | (p_grady_rows_V_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cols_reg_220 <= p_grady_cols_V_dout;
        k_read_reg_210 <= k_dout;
        rows_reg_215 <= p_grady_rows_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_reg_234_pp0_iter10_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        det_reg_322 <= grp_fu_127_p2;
        tmp_62_i_reg_327 <= grp_fu_159_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        det_reg_322_pp0_iter12_reg <= det_reg_322;
        det_reg_322_pp0_iter13_reg <= det_reg_322_pp0_iter12_reg;
        exitcond_i_reg_234_pp0_iter10_reg <= exitcond_i_reg_234_pp0_iter9_reg;
        exitcond_i_reg_234_pp0_iter11_reg <= exitcond_i_reg_234_pp0_iter10_reg;
        exitcond_i_reg_234_pp0_iter12_reg <= exitcond_i_reg_234_pp0_iter11_reg;
        exitcond_i_reg_234_pp0_iter13_reg <= exitcond_i_reg_234_pp0_iter12_reg;
        exitcond_i_reg_234_pp0_iter14_reg <= exitcond_i_reg_234_pp0_iter13_reg;
        exitcond_i_reg_234_pp0_iter15_reg <= exitcond_i_reg_234_pp0_iter14_reg;
        exitcond_i_reg_234_pp0_iter16_reg <= exitcond_i_reg_234_pp0_iter15_reg;
        exitcond_i_reg_234_pp0_iter2_reg <= exitcond_i_reg_234_pp0_iter1_reg;
        exitcond_i_reg_234_pp0_iter3_reg <= exitcond_i_reg_234_pp0_iter2_reg;
        exitcond_i_reg_234_pp0_iter4_reg <= exitcond_i_reg_234_pp0_iter3_reg;
        exitcond_i_reg_234_pp0_iter5_reg <= exitcond_i_reg_234_pp0_iter4_reg;
        exitcond_i_reg_234_pp0_iter6_reg <= exitcond_i_reg_234_pp0_iter5_reg;
        exitcond_i_reg_234_pp0_iter7_reg <= exitcond_i_reg_234_pp0_iter6_reg;
        exitcond_i_reg_234_pp0_iter8_reg <= exitcond_i_reg_234_pp0_iter7_reg;
        exitcond_i_reg_234_pp0_iter9_reg <= exitcond_i_reg_234_pp0_iter8_reg;
        trac_reg_316_pp0_iter10_reg <= trac_reg_316;
        trac_reg_316_pp0_iter11_reg <= trac_reg_316_pp0_iter10_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exitcond_i_reg_234 <= exitcond_i_fu_187_p2;
        exitcond_i_reg_234_pp0_iter1_reg <= exitcond_i_reg_234;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_V_reg_229 <= i_V_fu_181_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_reg_234_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lgx_reg_288 <= grp_fu_136_p2;
        lgxy_reg_300 <= grp_fu_146_p2;
        lgy_reg_294 <= grp_fu_141_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_reg_234_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_60_i_reg_306 <= grp_fu_151_p2;
        tmp_61_i_reg_311 <= grp_fu_155_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_reg_234_pp0_iter12_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_63_i_reg_332 <= grp_fu_163_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_reg_234 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_10_reg_248 <= p_grady_data_stream_V_V_dout;
        tmp_V_11_reg_253 <= p_gradxy_data_stream_V_V_dout;
        tmp_V_reg_243 <= p_gradx_data_stream_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_reg_234_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_i_i22_i_reg_278 <= grp_fu_170_p1;
        tmp_i_i23_i_reg_283 <= grp_fu_173_p1;
        tmp_i_i_i_reg_273 <= grp_fu_167_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_reg_234_pp0_iter8_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        trac_reg_316 <= grp_fu_123_p2;
    end
end

always @ (*) begin
    if ((exitcond_i_fu_187_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond8_i_fu_176_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond8_i_fu_176_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_123_ce = 1'b1;
    end else begin
        grp_fu_123_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_127_ce = 1'b1;
    end else begin
        grp_fu_127_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_131_ce = 1'b1;
    end else begin
        grp_fu_131_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_136_ce = 1'b1;
    end else begin
        grp_fu_136_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_141_ce = 1'b1;
    end else begin
        grp_fu_141_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_146_ce = 1'b1;
    end else begin
        grp_fu_146_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_151_ce = 1'b1;
    end else begin
        grp_fu_151_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_155_ce = 1'b1;
    end else begin
        grp_fu_155_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_159_ce = 1'b1;
    end else begin
        grp_fu_159_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_163_ce = 1'b1;
    end else begin
        grp_fu_163_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_167_ce = 1'b1;
    end else begin
        grp_fu_167_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_170_ce = 1'b1;
    end else begin
        grp_fu_170_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_173_ce = 1'b1;
    end else begin
        grp_fu_173_ce = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        k_blk_n = k_empty_n;
    end else begin
        k_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (k_empty_n == 1'b0) | (p_grady_cols_V_empty_n == 1'b0) | (p_grady_rows_V_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        k_read = 1'b1;
    end else begin
        k_read = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_i_reg_234_pp0_iter16_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter17 == 1'b1))) begin
        p_dst_data_stream_V_blk_n = p_dst_data_stream_V_full_n;
    end else begin
        p_dst_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((exitcond_i_reg_234_pp0_iter16_reg == 1'd0) & (ap_enable_reg_pp0_iter17 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_dst_data_stream_V_write = 1'b1;
    end else begin
        p_dst_data_stream_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_i_reg_234 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_gradx_data_stream_V_V_blk_n = p_gradx_data_stream_V_V_empty_n;
    end else begin
        p_gradx_data_stream_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((exitcond_i_reg_234 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_gradx_data_stream_V_V_read = 1'b1;
    end else begin
        p_gradx_data_stream_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_i_reg_234 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_gradxy_data_stream_V_V_blk_n = p_gradxy_data_stream_V_V_empty_n;
    end else begin
        p_gradxy_data_stream_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((exitcond_i_reg_234 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_gradxy_data_stream_V_V_read = 1'b1;
    end else begin
        p_gradxy_data_stream_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_grady_cols_V_blk_n = p_grady_cols_V_empty_n;
    end else begin
        p_grady_cols_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (k_empty_n == 1'b0) | (p_grady_cols_V_empty_n == 1'b0) | (p_grady_rows_V_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_grady_cols_V_read = 1'b1;
    end else begin
        p_grady_cols_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_i_reg_234 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_grady_data_stream_V_V_blk_n = p_grady_data_stream_V_V_empty_n;
    end else begin
        p_grady_data_stream_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((exitcond_i_reg_234 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_grady_data_stream_V_V_read = 1'b1;
    end else begin
        p_grady_data_stream_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_grady_rows_V_blk_n = p_grady_rows_V_empty_n;
    end else begin
        p_grady_rows_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (k_empty_n == 1'b0) | (p_grady_cols_V_empty_n == 1'b0) | (p_grady_rows_V_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_grady_rows_V_read = 1'b1;
    end else begin
        p_grady_rows_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (k_empty_n == 1'b0) | (p_grady_cols_V_empty_n == 1'b0) | (p_grady_rows_V_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (exitcond8_i_fu_176_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_i_fu_187_p2 == 1'd1)) & ~((ap_enable_reg_pp0_iter16 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter17 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter16 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter17 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_i_fu_187_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((exitcond_i_reg_234_pp0_iter16_reg == 1'd0) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((exitcond_i_reg_234 == 1'd0) & (p_gradxy_data_stream_V_V_empty_n == 1'b0)) | ((exitcond_i_reg_234 == 1'd0) & (p_grady_data_stream_V_V_empty_n == 1'b0)) | ((exitcond_i_reg_234 == 1'd0) & (p_gradx_data_stream_V_V_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((exitcond_i_reg_234_pp0_iter16_reg == 1'd0) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((exitcond_i_reg_234 == 1'd0) & (p_gradxy_data_stream_V_V_empty_n == 1'b0)) | ((exitcond_i_reg_234 == 1'd0) & (p_grady_data_stream_V_V_empty_n == 1'b0)) | ((exitcond_i_reg_234 == 1'd0) & (p_gradx_data_stream_V_V_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((exitcond_i_reg_234_pp0_iter16_reg == 1'd0) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((exitcond_i_reg_234 == 1'd0) & (p_gradxy_data_stream_V_V_empty_n == 1'b0)) | ((exitcond_i_reg_234 == 1'd0) & (p_grady_data_stream_V_V_empty_n == 1'b0)) | ((exitcond_i_reg_234 == 1'd0) & (p_gradx_data_stream_V_V_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (k_empty_n == 1'b0) | (p_grady_cols_V_empty_n == 1'b0) | (p_grady_rows_V_empty_n == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state20_pp0_stage0_iter17 = ((exitcond_i_reg_234_pp0_iter16_reg == 1'd0) & (p_dst_data_stream_V_full_n == 1'b0));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter1 = (((exitcond_i_reg_234 == 1'd0) & (p_gradxy_data_stream_V_V_empty_n == 1'b0)) | ((exitcond_i_reg_234 == 1'd0) & (p_grady_data_stream_V_V_empty_n == 1'b0)) | ((exitcond_i_reg_234 == 1'd0) & (p_gradx_data_stream_V_V_empty_n == 1'b0)));
end

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign exitcond8_i_fu_176_p2 = ((t_V_reg_101 == rows_reg_215) ? 1'b1 : 1'b0);

assign exitcond_i_fu_187_p2 = ((t_V_17_reg_112 == cols_reg_220) ? 1'b1 : 1'b0);

assign grp_fu_167_p0 = $signed(tmp_V_reg_243);

assign grp_fu_170_p0 = $signed(tmp_V_10_reg_248);

assign grp_fu_173_p0 = $signed(tmp_V_11_reg_253);

assign i_V_fu_181_p2 = (t_V_reg_101 + 32'd1);

assign j_V_fu_192_p2 = (t_V_17_reg_112 + 32'd1);

assign p_dst_data_stream_V_din = grp_fu_131_p2;

endmodule //CalCim188
