-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Filter2D is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_src_rows_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
    p_src_cols_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
    p_src_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_data_stream_V_empty_n : IN STD_LOGIC;
    p_src_data_stream_V_read : OUT STD_LOGIC;
    p_dst_data_stream_V_V_din : OUT STD_LOGIC_VECTOR (14 downto 0);
    p_dst_data_stream_V_V_full_n : IN STD_LOGIC;
    p_dst_data_stream_V_V_write : OUT STD_LOGIC;
    p_kernel_val_0_V_1_read : IN STD_LOGIC_VECTOR (2 downto 0);
    p_kernel_val_0_V_2_read : IN STD_LOGIC_VECTOR (3 downto 0);
    p_kernel_val_0_V_3_read : IN STD_LOGIC_VECTOR (2 downto 0);
    p_kernel_val_0_V_4_read : IN STD_LOGIC_VECTOR (1 downto 0);
    p_kernel_val_1_V_0_read : IN STD_LOGIC_VECTOR (2 downto 0);
    p_kernel_val_1_V_2_read : IN STD_LOGIC_VECTOR (4 downto 0);
    p_kernel_val_1_V_3_read : IN STD_LOGIC_VECTOR (4 downto 0);
    p_kernel_val_1_V_4_read : IN STD_LOGIC_VECTOR (3 downto 0);
    p_kernel_val_2_V_0_read : IN STD_LOGIC_VECTOR (4 downto 0);
    p_kernel_val_2_V_1_read : IN STD_LOGIC_VECTOR (5 downto 0);
    p_kernel_val_2_V_3_read : IN STD_LOGIC_VECTOR (5 downto 0);
    p_kernel_val_2_V_4_read : IN STD_LOGIC_VECTOR (4 downto 0);
    p_kernel_val_3_V_0_read : IN STD_LOGIC_VECTOR (2 downto 0);
    p_kernel_val_3_V_1_read : IN STD_LOGIC_VECTOR (4 downto 0);
    p_kernel_val_3_V_2_read : IN STD_LOGIC_VECTOR (4 downto 0);
    p_kernel_val_3_V_4_read : IN STD_LOGIC_VECTOR (3 downto 0);
    p_kernel_val_4_V_0_read : IN STD_LOGIC_VECTOR (1 downto 0);
    p_kernel_val_4_V_1_read : IN STD_LOGIC_VECTOR (3 downto 0);
    p_kernel_val_4_V_2_read : IN STD_LOGIC_VECTOR (3 downto 0);
    p_kernel_val_4_V_3_read : IN STD_LOGIC_VECTOR (3 downto 0) );
end;


architecture behav of Filter2D is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_FFFFFFFE : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111110";
    constant ap_const_lv32_FFFFFFFD : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111101";
    constant ap_const_lv32_FFFFFFFC : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111100";
    constant ap_const_lv32_FFFFFFFB : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111011";
    constant ap_const_lv30_0 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv15_3FFF : STD_LOGIC_VECTOR (14 downto 0) := "011111111111111";
    constant ap_const_lv15_4000 : STD_LOGIC_VECTOR (14 downto 0) := "100000000000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_src_data_stream_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal or_cond_i_i_reg_2426 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_2366 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_reg_2357 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_dst_data_stream_V_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal or_cond_i_reg_2478 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_2478_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal t_V_7_reg_519 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_530_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_reg_2218 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_536_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_reg_2223 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_542_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_reg_2228 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_neg397_i_fu_548_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_neg397_i_reg_2234 : STD_LOGIC_VECTOR (31 downto 0);
    signal OP2_V_0_1_cast_fu_554_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal OP2_V_0_1_cast_reg_2248 : STD_LOGIC_VECTOR (10 downto 0);
    signal OP2_V_0_2_cast_fu_558_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal OP2_V_0_2_cast_reg_2253 : STD_LOGIC_VECTOR (11 downto 0);
    signal OP2_V_0_3_cast_fu_562_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal OP2_V_0_3_cast_reg_2258 : STD_LOGIC_VECTOR (10 downto 0);
    signal OP2_V_0_4_cast_fu_566_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal OP2_V_0_4_cast_reg_2263 : STD_LOGIC_VECTOR (9 downto 0);
    signal OP2_V_1_cast_fu_570_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal OP2_V_1_cast_reg_2268 : STD_LOGIC_VECTOR (10 downto 0);
    signal OP2_V_1_2_cast_fu_574_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal OP2_V_1_2_cast_reg_2273 : STD_LOGIC_VECTOR (12 downto 0);
    signal OP2_V_1_3_cast_fu_578_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal OP2_V_1_3_cast_reg_2278 : STD_LOGIC_VECTOR (12 downto 0);
    signal OP2_V_1_4_cast_fu_582_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal OP2_V_1_4_cast_reg_2283 : STD_LOGIC_VECTOR (11 downto 0);
    signal OP2_V_2_cast_fu_586_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal OP2_V_2_cast_reg_2288 : STD_LOGIC_VECTOR (11 downto 0);
    signal OP2_V_2_1_cast_fu_590_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal OP2_V_2_1_cast_reg_2293 : STD_LOGIC_VECTOR (13 downto 0);
    signal OP2_V_2_3_cast_fu_594_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal OP2_V_2_3_cast_reg_2298 : STD_LOGIC_VECTOR (13 downto 0);
    signal OP2_V_2_4_cast_fu_598_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal OP2_V_2_4_cast_reg_2303 : STD_LOGIC_VECTOR (12 downto 0);
    signal OP2_V_3_cast_fu_602_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal OP2_V_3_cast_reg_2308 : STD_LOGIC_VECTOR (10 downto 0);
    signal OP2_V_3_1_cast_fu_606_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal OP2_V_3_1_cast_reg_2313 : STD_LOGIC_VECTOR (12 downto 0);
    signal OP2_V_3_2_cast_fu_610_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal OP2_V_3_2_cast_reg_2318 : STD_LOGIC_VECTOR (12 downto 0);
    signal OP2_V_3_4_cast_fu_614_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal OP2_V_3_4_cast_reg_2323 : STD_LOGIC_VECTOR (11 downto 0);
    signal OP2_V_4_cast_fu_618_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal OP2_V_4_cast_reg_2328 : STD_LOGIC_VECTOR (9 downto 0);
    signal OP2_V_4_1_cast_fu_622_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal OP2_V_4_1_cast_reg_2333 : STD_LOGIC_VECTOR (11 downto 0);
    signal OP2_V_4_2_cast_fu_626_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal OP2_V_4_2_cast_reg_2338 : STD_LOGIC_VECTOR (11 downto 0);
    signal OP2_V_4_3_cast_fu_630_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal OP2_V_4_3_cast_reg_2343 : STD_LOGIC_VECTOR (11 downto 0);
    signal exitcond393_i_fu_634_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal i_V_fu_639_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_V_reg_2352 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_645_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_274_not_fu_650_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_274_not_reg_2361 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_656_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_fu_662_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_reg_2371 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_304_3_fu_668_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_304_3_reg_2375 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_304_4_fu_674_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_304_4_reg_2379 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_fu_680_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_reg_2383 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_85_fu_928_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_85_reg_2392 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_86_fu_945_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_86_reg_2397 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_87_fu_962_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_87_reg_2402 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_88_fu_979_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_88_reg_2407 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_89_fu_996_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_89_reg_2412 : STD_LOGIC_VECTOR (2 downto 0);
    signal exitcond392_i_fu_1000_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond392_i_reg_2417 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op218_read_state4 : BOOLEAN;
    signal ap_predicate_op231_read_state4 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal exitcond392_i_reg_2417_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond392_i_reg_2417_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal j_V_fu_1005_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal or_cond_i_i_fu_1052_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_fu_1086_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_reg_2430 : STD_LOGIC_VECTOR (0 downto 0);
    signal k_buf_0_val_5_addr_reg_2439 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_93_fu_1100_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_93_reg_2445 : STD_LOGIC_VECTOR (2 downto 0);
    signal k_buf_0_val_6_addr_reg_2454 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_7_addr_reg_2460 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_8_addr_reg_2466 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_9_addr_reg_2472 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_cond_i_fu_1104_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_2478_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_2478_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal src_kernel_win_0_va_20_fu_1274_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_20_reg_2482 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_21_fu_1296_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_21_reg_2488 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_22_fu_1318_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_22_reg_2494 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_22_reg_2494_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_23_fu_1340_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_23_reg_2500 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_23_reg_2500_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_24_fu_1362_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_24_reg_2505 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_38_reg_2511 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_8_1_fu_1385_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_V_8_1_reg_2516 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1926_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp9_reg_2521 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp9_reg_2521_pp0_iter2_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal src_kernel_win_0_va_31_reg_2526 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_19_1_1_fu_1543_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_Val2_19_1_1_reg_2531 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_1965_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp16_reg_2536 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal tmp23_fu_1622_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp23_reg_2542 : STD_LOGIC_VECTOR (13 downto 0);
    signal isneg_reg_2548 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_6_fu_1837_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_Val2_6_reg_2555 : STD_LOGIC_VECTOR (14 downto 0);
    signal newsignbit_reg_2561 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal k_buf_0_val_5_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_5_ce0 : STD_LOGIC;
    signal k_buf_0_val_5_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_5_ce1 : STD_LOGIC;
    signal k_buf_0_val_5_we1 : STD_LOGIC;
    signal k_buf_0_val_6_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_6_ce0 : STD_LOGIC;
    signal k_buf_0_val_6_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_6_ce1 : STD_LOGIC;
    signal k_buf_0_val_6_we1 : STD_LOGIC;
    signal k_buf_0_val_6_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_7_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_7_ce0 : STD_LOGIC;
    signal k_buf_0_val_7_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_7_ce1 : STD_LOGIC;
    signal k_buf_0_val_7_we1 : STD_LOGIC;
    signal k_buf_0_val_7_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_8_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_8_ce0 : STD_LOGIC;
    signal k_buf_0_val_8_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_8_ce1 : STD_LOGIC;
    signal k_buf_0_val_8_we1 : STD_LOGIC;
    signal k_buf_0_val_8_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_9_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_9_ce0 : STD_LOGIC;
    signal k_buf_0_val_9_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_9_ce1 : STD_LOGIC;
    signal k_buf_0_val_9_we1 : STD_LOGIC;
    signal k_buf_0_val_9_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal t_V_reg_508 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal tmp_18_fu_1091_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal src_kernel_win_0_va_fu_154 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_1_fu_158 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_2_fu_162 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_3_fu_166 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_4_fu_170 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_5_fu_174 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_6_fu_178 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_7_fu_182 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_8_fu_186 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_9_fu_190 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_10_fu_194 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_11_fu_198 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_12_fu_202 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_13_fu_206 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_14_fu_210 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_15_fu_214 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_16_fu_218 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_17_fu_222 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_18_fu_226 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_19_fu_230 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_s_fu_234 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_0_0_fu_1139_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_1_fu_238 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_4_0_fu_1227_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_2_fu_242 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_3_0_fu_1205_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_3_fu_246 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_2_0_fu_1183_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_4_fu_250 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_1_0_fu_1161_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_9_fu_685_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_75_fu_691_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_fu_705_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_fu_699_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_76_fu_716_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_8_1_fu_731_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_77_fu_737_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_331_1_fu_751_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev8_fu_745_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_78_fu_762_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_8_2_fu_777_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_79_fu_783_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_331_2_fu_797_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev9_fu_791_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_80_fu_808_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_8_3_fu_823_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_81_fu_829_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_331_3_fu_843_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev10_fu_837_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_82_fu_854_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_8_4_fu_869_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_83_fu_875_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_331_4_fu_889_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev11_fu_883_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_84_fu_900_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i427_i_fu_710_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_9_fu_724_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_2_fu_915_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal row_assign_s_fu_923_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_cond_i427_i_1_fu_756_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_9_1_fu_770_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_2_1_fu_932_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal row_assign_14_1_fu_940_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_cond_i427_i_2_fu_802_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_9_2_fu_816_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_2_2_fu_949_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal row_assign_14_2_fu_957_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_cond_i427_i_3_fu_848_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_9_3_fu_862_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_2_3_fu_966_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal row_assign_14_3_fu_974_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_cond_i427_i_4_fu_894_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_9_4_fu_908_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_2_4_fu_983_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal row_assign_14_4_fu_991_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_90_fu_1011_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal ImagLoc_x_fu_1027_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_91_fu_1033_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_fu_1047_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev12_fu_1041_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_92_fu_1058_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_1_fu_1066_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_fu_1073_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal col_assign_2_fu_1081_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_fu_1021_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_50_fu_1124_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_51_fu_1146_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_52_fu_1168_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_53_fu_1190_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_54_fu_1212_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_55_fu_1259_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_56_fu_1281_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_57_fu_1303_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_58_fu_1325_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_59_fu_1347_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_8_1_fu_1385_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal r_V_8_1_fu_1385_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_8_1_3_fu_1398_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_V_8_1_3_fu_1398_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_8_1_3_fu_1398_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal OP1_V_0_cast_fu_1472_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_8_fu_1476_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1933_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1941_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_shl_fu_1510_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl_cast_fu_1517_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_8_1_1_fu_1521_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_350_1_1_cast_cas_fu_1527_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_Val2_19_0_2_cast_fu_1497_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_1957_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1949_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp6_fu_1531_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp7_cast_fu_1540_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_8_3_2_fu_1560_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_V_8_3_2_fu_1560_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_8_3_3_fu_1565_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_V_8_4_2_fu_1592_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_V_8_4_2_fu_1592_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1995_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1980_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1987_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1972_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp43_cast_fu_1610_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp22_fu_1613_p2 : STD_LOGIC_VECTOR (12 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of tmp22_fu_1613_p2 : signal is "no";
    signal tmp39_cast_fu_1607_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp41_cast_fu_1618_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_Val2_19_1_1_cast_fu_1721_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp9_cast_fu_1724_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_8_1_4_fu_1736_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_V_8_1_4_fu_1736_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2020_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_2011_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp11_cast_fu_1749_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp12_cast_fu_1752_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_8_2_3_fu_1768_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_8_2_3_fu_1768_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_60_fu_1755_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_2029_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_Val2_19_2_2_fu_1758_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp35_cast_fu_1781_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp14_fu_1784_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp36_cast_fu_1790_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp17_fu_1793_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp38_cast_fu_1799_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_s_fu_1802_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_61_fu_1773_p2 : STD_LOGIC_VECTOR (14 downto 0);
    attribute use_dsp48 of tmp_61_fu_1773_p2 : signal is "no";
    signal tmp46_cast_fu_1816_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp24_fu_1819_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp47_cast_fu_1825_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp25_fu_1828_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp49_cast_fu_1834_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_26_fu_1884_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_i_i_fu_1879_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_i_fu_1894_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_fu_1889_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_not_i_i_fu_1898_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_9_fu_1903_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_Val2_7_i_i_fu_1910_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_1926_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_1926_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1933_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_1933_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1941_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_1941_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1949_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_1949_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1957_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1957_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1965_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_1965_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1972_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_1972_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1972_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1980_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_1980_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2003_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1987_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1987_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1987_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1995_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_1995_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1995_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_2003_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_2003_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2003_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_2011_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_2011_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2011_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_2020_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_2020_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2020_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_2029_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_2029_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2029_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_1926_p10 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1933_p10 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1941_p10 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1949_p10 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1957_p10 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1965_p10 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1972_p10 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1972_p20 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1980_p10 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1987_p10 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1987_p20 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1995_p10 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_2003_p10 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_2011_p10 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_2020_p10 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_2029_p10 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_V_8_1_3_fu_1398_p10 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_V_8_1_4_fu_1736_p10 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_8_1_fu_1385_p10 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_V_8_2_3_fu_1768_p10 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_8_3_2_fu_1560_p10 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_V_8_4_2_fu_1592_p10 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_condition_526 : BOOLEAN;
    signal ap_condition_67 : BOOLEAN;
    signal ap_condition_532 : BOOLEAN;

    component Haaris_Core_mux_5jbC IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (7 downto 0);
        din4 : IN STD_LOGIC_VECTOR (7 downto 0);
        din5 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component Haaris_Core_mac_mkbM IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (4 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (12 downto 0);
        dout : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component Haaris_Core_mac_mlbW IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (2 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (8 downto 0);
        dout : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component Haaris_Core_mac_mmb6 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (3 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (11 downto 0);
        dout : OUT STD_LOGIC_VECTOR (12 downto 0) );
    end component;


    component Haaris_Core_mac_mncg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (2 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (11 downto 0);
        dout : OUT STD_LOGIC_VECTOR (12 downto 0) );
    end component;


    component Haaris_Core_mac_mocq IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (1 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (10 downto 0);
        dout : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component Haaris_Core_mac_mpcA IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (4 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (12 downto 0);
        dout : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component Haaris_Core_mac_mqcK IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (2 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (10 downto 0);
        dout : OUT STD_LOGIC_VECTOR (12 downto 0) );
    end component;


    component Haaris_Core_mac_mrcU IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (3 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (11 downto 0);
        dout : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component Haaris_Core_mac_msc4 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (1 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component Haaris_Core_mac_mtde IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (3 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (12 downto 0);
        dout : OUT STD_LOGIC_VECTOR (12 downto 0) );
    end component;


    component Haaris_Core_mac_mudo IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (4 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (11 downto 0);
        dout : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component Haaris_Core_mac_mvdy IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (5 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (14 downto 0);
        dout : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component Haaris_Core_mac_mwdI IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (4 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (13 downto 0);
        dout : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component Filter2D_k_buf_0_eOg IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    k_buf_0_val_5_U : component Filter2D_k_buf_0_eOg
    generic map (
        DataWidth => 8,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_5_address0,
        ce0 => k_buf_0_val_5_ce0,
        q0 => k_buf_0_val_5_q0,
        address1 => k_buf_0_val_5_addr_reg_2439,
        ce1 => k_buf_0_val_5_ce1,
        we1 => k_buf_0_val_5_we1,
        d1 => p_src_data_stream_V_dout);

    k_buf_0_val_6_U : component Filter2D_k_buf_0_eOg
    generic map (
        DataWidth => 8,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_6_address0,
        ce0 => k_buf_0_val_6_ce0,
        q0 => k_buf_0_val_6_q0,
        address1 => k_buf_0_val_6_addr_reg_2454,
        ce1 => k_buf_0_val_6_ce1,
        we1 => k_buf_0_val_6_we1,
        d1 => k_buf_0_val_6_d1);

    k_buf_0_val_7_U : component Filter2D_k_buf_0_eOg
    generic map (
        DataWidth => 8,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_7_address0,
        ce0 => k_buf_0_val_7_ce0,
        q0 => k_buf_0_val_7_q0,
        address1 => k_buf_0_val_7_addr_reg_2460,
        ce1 => k_buf_0_val_7_ce1,
        we1 => k_buf_0_val_7_we1,
        d1 => k_buf_0_val_7_d1);

    k_buf_0_val_8_U : component Filter2D_k_buf_0_eOg
    generic map (
        DataWidth => 8,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_8_address0,
        ce0 => k_buf_0_val_8_ce0,
        q0 => k_buf_0_val_8_q0,
        address1 => k_buf_0_val_8_addr_reg_2466,
        ce1 => k_buf_0_val_8_ce1,
        we1 => k_buf_0_val_8_we1,
        d1 => k_buf_0_val_8_d1);

    k_buf_0_val_9_U : component Filter2D_k_buf_0_eOg
    generic map (
        DataWidth => 8,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_9_address0,
        ce0 => k_buf_0_val_9_ce0,
        q0 => k_buf_0_val_9_q0,
        address1 => k_buf_0_val_9_addr_reg_2472,
        ce1 => k_buf_0_val_9_ce1,
        we1 => k_buf_0_val_9_we1,
        d1 => k_buf_0_val_9_d1);

    Haaris_Core_mux_5jbC_U82 : component Haaris_Core_mux_5jbC
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_s_fu_234,
        din1 => ap_const_lv8_0,
        din2 => ap_const_lv8_0,
        din3 => ap_const_lv8_0,
        din4 => ap_const_lv8_0,
        din5 => tmp_93_reg_2445,
        dout => tmp_50_fu_1124_p7);

    Haaris_Core_mux_5jbC_U83 : component Haaris_Core_mux_5jbC
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_4_fu_250,
        din1 => ap_const_lv8_0,
        din2 => ap_const_lv8_0,
        din3 => ap_const_lv8_0,
        din4 => ap_const_lv8_0,
        din5 => tmp_93_reg_2445,
        dout => tmp_51_fu_1146_p7);

    Haaris_Core_mux_5jbC_U84 : component Haaris_Core_mux_5jbC
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_3_fu_246,
        din1 => ap_const_lv8_0,
        din2 => ap_const_lv8_0,
        din3 => ap_const_lv8_0,
        din4 => ap_const_lv8_0,
        din5 => tmp_93_reg_2445,
        dout => tmp_52_fu_1168_p7);

    Haaris_Core_mux_5jbC_U85 : component Haaris_Core_mux_5jbC
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_2_fu_242,
        din1 => ap_const_lv8_0,
        din2 => ap_const_lv8_0,
        din3 => ap_const_lv8_0,
        din4 => ap_const_lv8_0,
        din5 => tmp_93_reg_2445,
        dout => tmp_53_fu_1190_p7);

    Haaris_Core_mux_5jbC_U86 : component Haaris_Core_mux_5jbC
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_1_fu_238,
        din1 => ap_const_lv8_0,
        din2 => ap_const_lv8_0,
        din3 => ap_const_lv8_0,
        din4 => ap_const_lv8_0,
        din5 => tmp_93_reg_2445,
        dout => tmp_54_fu_1212_p7);

    Haaris_Core_mux_5jbC_U87 : component Haaris_Core_mux_5jbC
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_1139_p3,
        din1 => col_buf_0_val_1_0_fu_1161_p3,
        din2 => col_buf_0_val_2_0_fu_1183_p3,
        din3 => col_buf_0_val_3_0_fu_1205_p3,
        din4 => col_buf_0_val_4_0_fu_1227_p3,
        din5 => tmp_85_reg_2392,
        dout => tmp_55_fu_1259_p7);

    Haaris_Core_mux_5jbC_U88 : component Haaris_Core_mux_5jbC
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_1139_p3,
        din1 => col_buf_0_val_1_0_fu_1161_p3,
        din2 => col_buf_0_val_2_0_fu_1183_p3,
        din3 => col_buf_0_val_3_0_fu_1205_p3,
        din4 => col_buf_0_val_4_0_fu_1227_p3,
        din5 => tmp_86_reg_2397,
        dout => tmp_56_fu_1281_p7);

    Haaris_Core_mux_5jbC_U89 : component Haaris_Core_mux_5jbC
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_1139_p3,
        din1 => col_buf_0_val_1_0_fu_1161_p3,
        din2 => col_buf_0_val_2_0_fu_1183_p3,
        din3 => col_buf_0_val_3_0_fu_1205_p3,
        din4 => col_buf_0_val_4_0_fu_1227_p3,
        din5 => tmp_87_reg_2402,
        dout => tmp_57_fu_1303_p7);

    Haaris_Core_mux_5jbC_U90 : component Haaris_Core_mux_5jbC
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_1139_p3,
        din1 => col_buf_0_val_1_0_fu_1161_p3,
        din2 => col_buf_0_val_2_0_fu_1183_p3,
        din3 => col_buf_0_val_3_0_fu_1205_p3,
        din4 => col_buf_0_val_4_0_fu_1227_p3,
        din5 => tmp_88_reg_2407,
        dout => tmp_58_fu_1325_p7);

    Haaris_Core_mux_5jbC_U91 : component Haaris_Core_mux_5jbC
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 3,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_1139_p3,
        din1 => col_buf_0_val_1_0_fu_1161_p3,
        din2 => col_buf_0_val_2_0_fu_1183_p3,
        din3 => col_buf_0_val_3_0_fu_1205_p3,
        din4 => col_buf_0_val_4_0_fu_1227_p3,
        din5 => tmp_89_reg_2412,
        dout => tmp_59_fu_1347_p7);

    Haaris_Core_mac_mkbM_U92 : component Haaris_Core_mac_mkbM
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 5,
        din1_WIDTH => 8,
        din2_WIDTH => 13,
        dout_WIDTH => 14)
    port map (
        din0 => grp_fu_1926_p0,
        din1 => grp_fu_1926_p1,
        din2 => r_V_8_1_3_fu_1398_p2,
        dout => grp_fu_1926_p3);

    Haaris_Core_mac_mlbW_U93 : component Haaris_Core_mac_mlbW
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 3,
        din1_WIDTH => 8,
        din2_WIDTH => 9,
        dout_WIDTH => 12)
    port map (
        din0 => grp_fu_1933_p0,
        din1 => grp_fu_1933_p1,
        din2 => r_V_8_fu_1476_p2,
        dout => grp_fu_1933_p3);

    Haaris_Core_mac_mmb6_U94 : component Haaris_Core_mac_mmb6
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 4,
        din1_WIDTH => 8,
        din2_WIDTH => 12,
        dout_WIDTH => 13)
    port map (
        din0 => grp_fu_1941_p0,
        din1 => grp_fu_1941_p1,
        din2 => grp_fu_1933_p3,
        dout => grp_fu_1941_p3);

    Haaris_Core_mac_mncg_U95 : component Haaris_Core_mac_mncg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 3,
        din1_WIDTH => 8,
        din2_WIDTH => 12,
        dout_WIDTH => 13)
    port map (
        din0 => grp_fu_1949_p0,
        din1 => grp_fu_1949_p1,
        din2 => grp_fu_1957_p3,
        dout => grp_fu_1949_p3);

    Haaris_Core_mac_mocq_U96 : component Haaris_Core_mac_mocq
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 2,
        din1_WIDTH => 8,
        din2_WIDTH => 11,
        dout_WIDTH => 12)
    port map (
        din0 => grp_fu_1957_p0,
        din1 => grp_fu_1957_p1,
        din2 => r_V_8_1_reg_2516,
        dout => grp_fu_1957_p3);

    Haaris_Core_mac_mpcA_U97 : component Haaris_Core_mac_mpcA
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 5,
        din1_WIDTH => 8,
        din2_WIDTH => 13,
        dout_WIDTH => 14)
    port map (
        din0 => grp_fu_1965_p0,
        din1 => grp_fu_1965_p1,
        din2 => grp_fu_1995_p3,
        dout => grp_fu_1965_p3);

    Haaris_Core_mac_mqcK_U98 : component Haaris_Core_mac_mqcK
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 3,
        din1_WIDTH => 8,
        din2_WIDTH => 11,
        dout_WIDTH => 13)
    port map (
        din0 => grp_fu_1972_p0,
        din1 => grp_fu_1972_p1,
        din2 => grp_fu_1972_p2,
        dout => grp_fu_1972_p3);

    Haaris_Core_mac_mrcU_U99 : component Haaris_Core_mac_mrcU
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 4,
        din1_WIDTH => 8,
        din2_WIDTH => 12,
        dout_WIDTH => 12)
    port map (
        din0 => grp_fu_1980_p0,
        din1 => grp_fu_1980_p1,
        din2 => grp_fu_2003_p3,
        dout => grp_fu_1980_p3);

    Haaris_Core_mac_msc4_U100 : component Haaris_Core_mac_msc4
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 2,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        dout_WIDTH => 10)
    port map (
        din0 => grp_fu_1987_p0,
        din1 => grp_fu_1987_p1,
        din2 => grp_fu_1987_p2,
        dout => grp_fu_1987_p3);

    Haaris_Core_mac_mtde_U101 : component Haaris_Core_mac_mtde
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 4,
        din1_WIDTH => 8,
        din2_WIDTH => 13,
        dout_WIDTH => 13)
    port map (
        din0 => grp_fu_1995_p0,
        din1 => grp_fu_1995_p1,
        din2 => grp_fu_1995_p2,
        dout => grp_fu_1995_p3);

    Haaris_Core_mac_mrcU_U102 : component Haaris_Core_mac_mrcU
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 4,
        din1_WIDTH => 8,
        din2_WIDTH => 12,
        dout_WIDTH => 12)
    port map (
        din0 => grp_fu_2003_p0,
        din1 => grp_fu_2003_p1,
        din2 => grp_fu_2003_p2,
        dout => grp_fu_2003_p3);

    Haaris_Core_mac_mudo_U103 : component Haaris_Core_mac_mudo
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 5,
        din1_WIDTH => 8,
        din2_WIDTH => 12,
        dout_WIDTH => 12)
    port map (
        din0 => grp_fu_2011_p0,
        din1 => grp_fu_2011_p1,
        din2 => grp_fu_2011_p2,
        dout => grp_fu_2011_p3);

    Haaris_Core_mac_mvdy_U104 : component Haaris_Core_mac_mvdy
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 8,
        din2_WIDTH => 15,
        dout_WIDTH => 15)
    port map (
        din0 => grp_fu_2020_p0,
        din1 => grp_fu_2020_p1,
        din2 => grp_fu_2020_p2,
        dout => grp_fu_2020_p3);

    Haaris_Core_mac_mwdI_U105 : component Haaris_Core_mac_mwdI
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 5,
        din1_WIDTH => 8,
        din2_WIDTH => 14,
        dout_WIDTH => 14)
    port map (
        din0 => grp_fu_2029_p0,
        din1 => grp_fu_2029_p1,
        din2 => grp_fu_2029_p2,
        dout => grp_fu_2029_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((exitcond393_i_fu_634_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state3);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                elsif (((exitcond393_i_fu_634_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    t_V_7_reg_519_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond392_i_fu_1000_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                t_V_7_reg_519 <= j_V_fu_1005_p2;
            elsif (((exitcond393_i_fu_634_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                t_V_7_reg_519 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    t_V_reg_508_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                t_V_reg_508 <= i_V_reg_2352;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                t_V_reg_508 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                OP2_V_0_1_cast_reg_2248 <= OP2_V_0_1_cast_fu_554_p1;
                OP2_V_0_2_cast_reg_2253 <= OP2_V_0_2_cast_fu_558_p1;
                OP2_V_0_3_cast_reg_2258 <= OP2_V_0_3_cast_fu_562_p1;
                OP2_V_0_4_cast_reg_2263 <= OP2_V_0_4_cast_fu_566_p1;
                OP2_V_1_2_cast_reg_2273 <= OP2_V_1_2_cast_fu_574_p1;
                OP2_V_1_3_cast_reg_2278 <= OP2_V_1_3_cast_fu_578_p1;
                OP2_V_1_4_cast_reg_2283 <= OP2_V_1_4_cast_fu_582_p1;
                OP2_V_1_cast_reg_2268 <= OP2_V_1_cast_fu_570_p1;
                OP2_V_2_1_cast_reg_2293 <= OP2_V_2_1_cast_fu_590_p1;
                    OP2_V_2_3_cast_reg_2298(5 downto 0) <= OP2_V_2_3_cast_fu_594_p1(5 downto 0);
                    OP2_V_2_4_cast_reg_2303(4 downto 0) <= OP2_V_2_4_cast_fu_598_p1(4 downto 0);
                OP2_V_2_cast_reg_2288 <= OP2_V_2_cast_fu_586_p1;
                OP2_V_3_1_cast_reg_2313 <= OP2_V_3_1_cast_fu_606_p1;
                    OP2_V_3_2_cast_reg_2318(4 downto 0) <= OP2_V_3_2_cast_fu_610_p1(4 downto 0);
                    OP2_V_3_4_cast_reg_2323(3 downto 0) <= OP2_V_3_4_cast_fu_614_p1(3 downto 0);
                OP2_V_3_cast_reg_2308 <= OP2_V_3_cast_fu_602_p1;
                OP2_V_4_1_cast_reg_2333 <= OP2_V_4_1_cast_fu_622_p1;
                    OP2_V_4_2_cast_reg_2338(3 downto 0) <= OP2_V_4_2_cast_fu_626_p1(3 downto 0);
                    OP2_V_4_3_cast_reg_2343(3 downto 0) <= OP2_V_4_3_cast_fu_630_p1(3 downto 0);
                OP2_V_4_cast_reg_2328 <= OP2_V_4_cast_fu_618_p1;
                p_neg397_i_reg_2234 <= p_neg397_i_fu_548_p2;
                tmp_1_reg_2223 <= tmp_1_fu_536_p2;
                tmp_2_reg_2228 <= tmp_2_fu_542_p2;
                tmp_s_reg_2218 <= tmp_s_fu_530_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond392_i_fu_1000_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                brmerge_reg_2430 <= brmerge_fu_1086_p2;
                k_buf_0_val_5_addr_reg_2439 <= tmp_18_fu_1091_p1(8 - 1 downto 0);
                k_buf_0_val_6_addr_reg_2454 <= tmp_18_fu_1091_p1(8 - 1 downto 0);
                k_buf_0_val_7_addr_reg_2460 <= tmp_18_fu_1091_p1(8 - 1 downto 0);
                k_buf_0_val_8_addr_reg_2466 <= tmp_18_fu_1091_p1(8 - 1 downto 0);
                k_buf_0_val_9_addr_reg_2472 <= tmp_18_fu_1091_p1(8 - 1 downto 0);
                or_cond_i_i_reg_2426 <= or_cond_i_i_fu_1052_p2;
                or_cond_i_reg_2478 <= or_cond_i_fu_1104_p2;
                tmp_93_reg_2445 <= tmp_93_fu_1100_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                exitcond392_i_reg_2417 <= exitcond392_i_fu_1000_p2;
                exitcond392_i_reg_2417_pp0_iter1_reg <= exitcond392_i_reg_2417;
                or_cond_i_reg_2478_pp0_iter1_reg <= or_cond_i_reg_2478;
                src_kernel_win_0_va_20_reg_2482 <= src_kernel_win_0_va_20_fu_1274_p3;
                src_kernel_win_0_va_21_reg_2488 <= src_kernel_win_0_va_21_fu_1296_p3;
                src_kernel_win_0_va_22_reg_2494 <= src_kernel_win_0_va_22_fu_1318_p3;
                src_kernel_win_0_va_23_reg_2500 <= src_kernel_win_0_va_23_fu_1340_p3;
                src_kernel_win_0_va_24_reg_2505 <= src_kernel_win_0_va_24_fu_1362_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                exitcond392_i_reg_2417_pp0_iter2_reg <= exitcond392_i_reg_2417_pp0_iter1_reg;
                or_cond_i_reg_2478_pp0_iter2_reg <= or_cond_i_reg_2478_pp0_iter1_reg;
                or_cond_i_reg_2478_pp0_iter3_reg <= or_cond_i_reg_2478_pp0_iter2_reg;
                src_kernel_win_0_va_22_reg_2494_pp0_iter2_reg <= src_kernel_win_0_va_22_reg_2494;
                src_kernel_win_0_va_23_reg_2500_pp0_iter2_reg <= src_kernel_win_0_va_23_reg_2500;
                tmp9_reg_2521_pp0_iter2_reg <= tmp9_reg_2521;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_V_reg_2352 <= i_V_fu_639_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_i_reg_2478_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                isneg_reg_2548 <= p_Val2_s_fu_1802_p2(15 downto 15);
                newsignbit_reg_2561 <= p_Val2_s_fu_1802_p2(14 downto 14);
                p_Val2_6_reg_2555 <= p_Val2_6_fu_1837_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_i_reg_2478_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Val2_19_1_1_reg_2531 <= p_Val2_19_1_1_fu_1543_p2;
                src_kernel_win_0_va_31_reg_2526 <= src_kernel_win_0_va_6_fu_178;
                tmp23_reg_2542 <= tmp23_fu_1622_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_i_reg_2478 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                r_V_8_1_reg_2516 <= r_V_8_1_fu_1385_p2;
                src_kernel_win_0_va_38_reg_2511 <= src_kernel_win_0_va_14_fu_210;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op231_read_state4 = ap_const_boolean_1))) then
                right_border_buf_0_1_fu_238 <= col_buf_0_val_4_0_fu_1227_p3;
                right_border_buf_0_2_fu_242 <= col_buf_0_val_3_0_fu_1205_p3;
                right_border_buf_0_3_fu_246 <= col_buf_0_val_2_0_fu_1183_p3;
                right_border_buf_0_4_fu_250 <= col_buf_0_val_1_0_fu_1161_p3;
                right_border_buf_0_s_fu_234 <= col_buf_0_val_0_0_fu_1139_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond392_i_reg_2417_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
                src_kernel_win_0_va_10_fu_194 <= src_kernel_win_0_va_9_fu_190;
                src_kernel_win_0_va_11_fu_198 <= src_kernel_win_0_va_10_fu_194;
                src_kernel_win_0_va_8_fu_186 <= src_kernel_win_0_va_22_reg_2494_pp0_iter2_reg;
                src_kernel_win_0_va_9_fu_190 <= src_kernel_win_0_va_8_fu_186;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond392_i_reg_2417 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                src_kernel_win_0_va_12_fu_202 <= src_kernel_win_0_va_23_fu_1340_p3;
                src_kernel_win_0_va_13_fu_206 <= src_kernel_win_0_va_12_fu_202;
                src_kernel_win_0_va_14_fu_210 <= src_kernel_win_0_va_13_fu_206;
                src_kernel_win_0_va_15_fu_214 <= src_kernel_win_0_va_14_fu_210;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond392_i_reg_2417_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                src_kernel_win_0_va_16_fu_218 <= src_kernel_win_0_va_24_reg_2505;
                src_kernel_win_0_va_17_fu_222 <= src_kernel_win_0_va_16_fu_218;
                src_kernel_win_0_va_18_fu_226 <= src_kernel_win_0_va_17_fu_222;
                src_kernel_win_0_va_19_fu_230 <= src_kernel_win_0_va_18_fu_226;
                src_kernel_win_0_va_1_fu_158 <= src_kernel_win_0_va_fu_154;
                src_kernel_win_0_va_2_fu_162 <= src_kernel_win_0_va_1_fu_158;
                src_kernel_win_0_va_3_fu_166 <= src_kernel_win_0_va_2_fu_162;
                src_kernel_win_0_va_4_fu_170 <= src_kernel_win_0_va_21_reg_2488;
                src_kernel_win_0_va_5_fu_174 <= src_kernel_win_0_va_4_fu_170;
                src_kernel_win_0_va_6_fu_178 <= src_kernel_win_0_va_5_fu_174;
                src_kernel_win_0_va_7_fu_182 <= src_kernel_win_0_va_6_fu_178;
                src_kernel_win_0_va_fu_154 <= src_kernel_win_0_va_20_reg_2482;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_i_reg_2478_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                tmp16_reg_2536 <= grp_fu_1965_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_i_reg_2478 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp9_reg_2521 <= grp_fu_1926_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond393_i_fu_634_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                tmp_274_not_reg_2361 <= tmp_274_not_fu_650_p2;
                tmp_304_3_reg_2375 <= tmp_304_3_fu_668_p2;
                tmp_304_4_reg_2379 <= tmp_304_4_fu_674_p2;
                tmp_3_reg_2357 <= tmp_3_fu_645_p2;
                tmp_4_reg_2366 <= tmp_4_fu_656_p2;
                tmp_7_reg_2371 <= tmp_7_fu_662_p2;
                tmp_85_reg_2392 <= tmp_85_fu_928_p1;
                tmp_86_reg_2397 <= tmp_86_fu_945_p1;
                tmp_87_reg_2402 <= tmp_87_fu_962_p1;
                tmp_88_reg_2407 <= tmp_88_fu_979_p1;
                tmp_89_reg_2412 <= tmp_89_fu_996_p1;
                tmp_8_reg_2383 <= tmp_8_fu_680_p2;
            end if;
        end if;
    end process;
    OP2_V_2_3_cast_reg_2298(13 downto 6) <= "00000000";
    OP2_V_2_4_cast_reg_2303(12 downto 5) <= "00000000";
    OP2_V_3_2_cast_reg_2318(12 downto 5) <= "00000000";
    OP2_V_3_4_cast_reg_2323(11 downto 4) <= "00000000";
    OP2_V_4_2_cast_reg_2338(11 downto 4) <= "00000000";
    OP2_V_4_3_cast_reg_2343(11 downto 4) <= "00000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, exitcond393_i_fu_634_p2, ap_CS_fsm_state2, exitcond392_i_fu_1000_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter3)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((exitcond393_i_fu_634_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((exitcond392_i_fu_1000_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((exitcond392_i_fu_1000_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    ImagLoc_x_fu_1027_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFE) + signed(t_V_7_reg_519));
    OP1_V_0_cast_fu_1472_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_19_fu_230),9));
        OP2_V_0_1_cast_fu_554_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_0_V_1_read),11));

        OP2_V_0_2_cast_fu_558_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_0_V_2_read),12));

        OP2_V_0_3_cast_fu_562_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_0_V_3_read),11));

        OP2_V_0_4_cast_fu_566_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_0_V_4_read),10));

        OP2_V_1_2_cast_fu_574_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_1_V_2_read),13));

        OP2_V_1_3_cast_fu_578_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_1_V_3_read),13));

        OP2_V_1_4_cast_fu_582_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_1_V_4_read),12));

        OP2_V_1_cast_fu_570_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_1_V_0_read),11));

        OP2_V_2_1_cast_fu_590_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_2_V_1_read),14));

    OP2_V_2_3_cast_fu_594_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_kernel_val_2_V_3_read),14));
    OP2_V_2_4_cast_fu_598_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_kernel_val_2_V_4_read),13));
        OP2_V_2_cast_fu_586_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_2_V_0_read),12));

        OP2_V_3_1_cast_fu_606_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_3_V_1_read),13));

    OP2_V_3_2_cast_fu_610_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_kernel_val_3_V_2_read),13));
    OP2_V_3_4_cast_fu_614_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_kernel_val_3_V_4_read),12));
        OP2_V_3_cast_fu_602_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_3_V_0_read),11));

        OP2_V_4_1_cast_fu_622_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_4_V_1_read),12));

    OP2_V_4_2_cast_fu_626_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_kernel_val_4_V_2_read),12));
    OP2_V_4_3_cast_fu_630_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_kernel_val_4_V_3_read),12));
        OP2_V_4_cast_fu_618_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_4_V_0_read),10));

    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state8 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, or_cond_i_reg_2478_pp0_iter3_reg, ap_predicate_op218_read_state4, ap_predicate_op231_read_state4)
    begin
                ap_block_pp0_stage0_01001 <= (((or_cond_i_reg_2478_pp0_iter3_reg = ap_const_lv1_1) and (p_dst_data_stream_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op231_read_state4 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op218_read_state4 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, or_cond_i_reg_2478_pp0_iter3_reg, ap_predicate_op218_read_state4, ap_predicate_op231_read_state4)
    begin
                ap_block_pp0_stage0_11001 <= (((or_cond_i_reg_2478_pp0_iter3_reg = ap_const_lv1_1) and (p_dst_data_stream_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op231_read_state4 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op218_read_state4 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, or_cond_i_reg_2478_pp0_iter3_reg, ap_predicate_op218_read_state4, ap_predicate_op231_read_state4)
    begin
                ap_block_pp0_stage0_subdone <= (((or_cond_i_reg_2478_pp0_iter3_reg = ap_const_lv1_1) and (p_dst_data_stream_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op231_read_state4 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op218_read_state4 = ap_const_boolean_1)))));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter1_assign_proc : process(p_src_data_stream_V_empty_n, ap_predicate_op218_read_state4, ap_predicate_op231_read_state4)
    begin
                ap_block_state4_pp0_stage0_iter1 <= (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op231_read_state4 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op218_read_state4 = ap_const_boolean_1)));
    end process;

        ap_block_state5_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state7_pp0_stage0_iter4_assign_proc : process(p_dst_data_stream_V_V_full_n, or_cond_i_reg_2478_pp0_iter3_reg)
    begin
                ap_block_state7_pp0_stage0_iter4 <= ((or_cond_i_reg_2478_pp0_iter3_reg = ap_const_lv1_1) and (p_dst_data_stream_V_V_full_n = ap_const_logic_0));
    end process;


    ap_condition_526_assign_proc : process(or_cond_i_i_reg_2426, tmp_4_reg_2366, tmp_304_3_reg_2375)
    begin
                ap_condition_526 <= ((tmp_4_reg_2366 = ap_const_lv1_0) and (tmp_304_3_reg_2375 = ap_const_lv1_1) and (or_cond_i_i_reg_2426 = ap_const_lv1_1));
    end process;


    ap_condition_532_assign_proc : process(or_cond_i_i_reg_2426, tmp_4_reg_2366, tmp_7_reg_2371)
    begin
                ap_condition_532 <= ((tmp_4_reg_2366 = ap_const_lv1_0) and (tmp_7_reg_2371 = ap_const_lv1_1) and (or_cond_i_i_reg_2426 = ap_const_lv1_1));
    end process;


    ap_condition_67_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
                ap_condition_67 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_pp0_exit_iter0_state3_assign_proc : process(exitcond392_i_fu_1000_p2)
    begin
        if ((exitcond392_i_fu_1000_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, exitcond393_i_fu_634_p2, ap_CS_fsm_state2)
    begin
        if ((((exitcond393_i_fu_634_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op218_read_state4_assign_proc : process(or_cond_i_i_reg_2426, tmp_4_reg_2366)
    begin
                ap_predicate_op218_read_state4 <= ((tmp_4_reg_2366 = ap_const_lv1_0) and (or_cond_i_i_reg_2426 = ap_const_lv1_1));
    end process;


    ap_predicate_op231_read_state4_assign_proc : process(or_cond_i_i_reg_2426, tmp_4_reg_2366, tmp_3_reg_2357)
    begin
                ap_predicate_op231_read_state4 <= ((tmp_3_reg_2357 = ap_const_lv1_1) and (tmp_4_reg_2366 = ap_const_lv1_1) and (or_cond_i_i_reg_2426 = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(exitcond393_i_fu_634_p2, ap_CS_fsm_state2)
    begin
        if (((exitcond393_i_fu_634_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    brmerge_fu_1086_p2 <= (tmp_274_not_reg_2361 or tmp_16_fu_1047_p2);
    brmerge_i_i_i_i_fu_1894_p2 <= (newsignbit_reg_2561 xor isneg_reg_2548);
    col_assign_2_fu_1081_p2 <= std_logic_vector(unsigned(tmp_2_reg_2228) - unsigned(x_fu_1073_p3));
    col_buf_0_val_0_0_fu_1139_p3 <= 
        k_buf_0_val_5_q0 when (brmerge_reg_2430(0) = '1') else 
        tmp_50_fu_1124_p7;
    col_buf_0_val_1_0_fu_1161_p3 <= 
        k_buf_0_val_6_q0 when (brmerge_reg_2430(0) = '1') else 
        tmp_51_fu_1146_p7;
    col_buf_0_val_2_0_fu_1183_p3 <= 
        k_buf_0_val_7_q0 when (brmerge_reg_2430(0) = '1') else 
        tmp_52_fu_1168_p7;
    col_buf_0_val_3_0_fu_1205_p3 <= 
        k_buf_0_val_8_q0 when (brmerge_reg_2430(0) = '1') else 
        tmp_53_fu_1190_p7;
    col_buf_0_val_4_0_fu_1227_p3 <= 
        k_buf_0_val_9_q0 when (brmerge_reg_2430(0) = '1') else 
        tmp_54_fu_1212_p7;
    exitcond392_i_fu_1000_p2 <= "1" when (t_V_7_reg_519 = tmp_s_reg_2218) else "0";
    exitcond393_i_fu_634_p2 <= "1" when (t_V_reg_508 = tmp_1_reg_2223) else "0";
    grp_fu_1926_p0 <= OP2_V_1_2_cast_reg_2273(5 - 1 downto 0);
    grp_fu_1926_p1 <= grp_fu_1926_p10(8 - 1 downto 0);
    grp_fu_1926_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_13_fu_206),13));
    grp_fu_1933_p0 <= OP2_V_0_1_cast_reg_2248(3 - 1 downto 0);
    grp_fu_1933_p1 <= grp_fu_1933_p10(8 - 1 downto 0);
    grp_fu_1933_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_18_fu_226),11));
    grp_fu_1941_p0 <= OP2_V_0_2_cast_reg_2253(4 - 1 downto 0);
    grp_fu_1941_p1 <= grp_fu_1941_p10(8 - 1 downto 0);
    grp_fu_1941_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_17_fu_222),12));
    grp_fu_1949_p0 <= OP2_V_0_3_cast_reg_2258(3 - 1 downto 0);
    grp_fu_1949_p1 <= grp_fu_1949_p10(8 - 1 downto 0);
    grp_fu_1949_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_16_fu_218),11));
    grp_fu_1957_p0 <= OP2_V_0_4_cast_reg_2263(2 - 1 downto 0);
    grp_fu_1957_p1 <= grp_fu_1957_p10(8 - 1 downto 0);
    grp_fu_1957_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_24_reg_2505),10));
    grp_fu_1965_p0 <= OP2_V_2_4_cast_reg_2303(5 - 1 downto 0);
    grp_fu_1965_p1 <= grp_fu_1965_p10(8 - 1 downto 0);
    grp_fu_1965_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_22_reg_2494),13));
    grp_fu_1972_p0 <= OP2_V_3_cast_reg_2308(3 - 1 downto 0);
    grp_fu_1972_p1 <= grp_fu_1972_p10(8 - 1 downto 0);
    grp_fu_1972_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_7_fu_182),11));
    grp_fu_1972_p2 <= grp_fu_1972_p20(11 - 1 downto 0);
    grp_fu_1972_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_8_3_3_fu_1565_p3),13));
    grp_fu_1980_p0 <= OP2_V_3_4_cast_reg_2323(4 - 1 downto 0);
    grp_fu_1980_p1 <= grp_fu_1980_p10(8 - 1 downto 0);
    grp_fu_1980_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_21_reg_2488),12));
    grp_fu_1987_p0 <= OP2_V_4_cast_reg_2328(2 - 1 downto 0);
    grp_fu_1987_p1 <= grp_fu_1987_p10(8 - 1 downto 0);
    grp_fu_1987_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_3_fu_166),10));
    grp_fu_1987_p2 <= grp_fu_1987_p20(8 - 1 downto 0);
    grp_fu_1987_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_20_reg_2482),10));
    grp_fu_1995_p0 <= OP2_V_4_1_cast_reg_2333(4 - 1 downto 0);
    grp_fu_1995_p1 <= grp_fu_1995_p10(8 - 1 downto 0);
    grp_fu_1995_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_2_fu_162),12));
    grp_fu_1995_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_8_3_2_fu_1560_p0) * unsigned(r_V_8_3_2_fu_1560_p1), 13));
    grp_fu_2003_p0 <= OP2_V_4_3_cast_reg_2343(4 - 1 downto 0);
    grp_fu_2003_p1 <= grp_fu_2003_p10(8 - 1 downto 0);
    grp_fu_2003_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_fu_154),12));
    grp_fu_2003_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_8_4_2_fu_1592_p0) * unsigned(r_V_8_4_2_fu_1592_p1), 12));
    grp_fu_2011_p0 <= OP2_V_2_cast_reg_2288(5 - 1 downto 0);
    grp_fu_2011_p1 <= grp_fu_2011_p10(8 - 1 downto 0);
    grp_fu_2011_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_11_fu_198),12));
    grp_fu_2011_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_8_1_4_fu_1736_p0) * signed('0' &r_V_8_1_4_fu_1736_p1))), 12));
    grp_fu_2020_p0 <= OP2_V_2_1_cast_reg_2293(6 - 1 downto 0);
    grp_fu_2020_p1 <= grp_fu_2020_p10(8 - 1 downto 0);
    grp_fu_2020_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_10_fu_194),14));
    grp_fu_2020_p2 <= std_logic_vector(signed(p_Val2_19_1_1_cast_fu_1721_p1) + signed(tmp9_cast_fu_1724_p1));
    grp_fu_2029_p0 <= OP2_V_3_1_cast_reg_2313(5 - 1 downto 0);
    grp_fu_2029_p1 <= grp_fu_2029_p10(8 - 1 downto 0);
    grp_fu_2029_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_31_reg_2526),13));
    grp_fu_2029_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_8_2_3_fu_1768_p0) * unsigned(r_V_8_2_3_fu_1768_p1), 14));
    i_V_fu_639_p2 <= std_logic_vector(unsigned(t_V_reg_508) + unsigned(ap_const_lv32_1));
    icmp_fu_1021_p2 <= "0" when (tmp_90_fu_1011_p4 = ap_const_lv30_0) else "1";
    j_V_fu_1005_p2 <= std_logic_vector(unsigned(t_V_7_reg_519) + unsigned(ap_const_lv32_1));
    k_buf_0_val_5_address0 <= tmp_18_fu_1091_p1(8 - 1 downto 0);

    k_buf_0_val_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            k_buf_0_val_5_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, or_cond_i_i_reg_2426, tmp_4_reg_2366, tmp_304_4_reg_2379, ap_predicate_op231_read_state4, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_4_reg_2366 = ap_const_lv1_0) and (tmp_304_4_reg_2379 = ap_const_lv1_1) and (or_cond_i_i_reg_2426 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op231_read_state4 = ap_const_boolean_1)))) then 
            k_buf_0_val_5_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, or_cond_i_i_reg_2426, tmp_4_reg_2366, tmp_304_4_reg_2379, ap_predicate_op231_read_state4, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_4_reg_2366 = ap_const_lv1_0) and (tmp_304_4_reg_2379 = ap_const_lv1_1) and (or_cond_i_i_reg_2426 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op231_read_state4 = ap_const_boolean_1)))) then 
            k_buf_0_val_5_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_6_address0 <= tmp_18_fu_1091_p1(8 - 1 downto 0);

    k_buf_0_val_6_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            k_buf_0_val_6_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_6_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, or_cond_i_i_reg_2426, tmp_4_reg_2366, tmp_304_3_reg_2375, ap_predicate_op231_read_state4, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_4_reg_2366 = ap_const_lv1_0) and (tmp_304_3_reg_2375 = ap_const_lv1_1) and (or_cond_i_i_reg_2426 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op231_read_state4 = ap_const_boolean_1)))) then 
            k_buf_0_val_6_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_6_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_6_d1_assign_proc : process(p_src_data_stream_V_dout, ap_predicate_op231_read_state4, k_buf_0_val_5_q0, ap_condition_526, ap_condition_67)
    begin
        if ((ap_const_boolean_1 = ap_condition_67)) then
            if ((ap_predicate_op231_read_state4 = ap_const_boolean_1)) then 
                k_buf_0_val_6_d1 <= k_buf_0_val_5_q0;
            elsif ((ap_const_boolean_1 = ap_condition_526)) then 
                k_buf_0_val_6_d1 <= p_src_data_stream_V_dout;
            else 
                k_buf_0_val_6_d1 <= "XXXXXXXX";
            end if;
        else 
            k_buf_0_val_6_d1 <= "XXXXXXXX";
        end if; 
    end process;


    k_buf_0_val_6_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, or_cond_i_i_reg_2426, tmp_4_reg_2366, tmp_304_3_reg_2375, ap_predicate_op231_read_state4, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_4_reg_2366 = ap_const_lv1_0) and (tmp_304_3_reg_2375 = ap_const_lv1_1) and (or_cond_i_i_reg_2426 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op231_read_state4 = ap_const_boolean_1)))) then 
            k_buf_0_val_6_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_6_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_7_address0 <= tmp_18_fu_1091_p1(8 - 1 downto 0);

    k_buf_0_val_7_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            k_buf_0_val_7_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_7_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, or_cond_i_i_reg_2426, tmp_4_reg_2366, tmp_7_reg_2371, ap_predicate_op231_read_state4, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_4_reg_2366 = ap_const_lv1_0) and (tmp_7_reg_2371 = ap_const_lv1_1) and (or_cond_i_i_reg_2426 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op231_read_state4 = ap_const_boolean_1)))) then 
            k_buf_0_val_7_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_7_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_7_d1_assign_proc : process(p_src_data_stream_V_dout, ap_predicate_op231_read_state4, k_buf_0_val_6_q0, ap_condition_67, ap_condition_532)
    begin
        if ((ap_const_boolean_1 = ap_condition_67)) then
            if ((ap_predicate_op231_read_state4 = ap_const_boolean_1)) then 
                k_buf_0_val_7_d1 <= k_buf_0_val_6_q0;
            elsif ((ap_const_boolean_1 = ap_condition_532)) then 
                k_buf_0_val_7_d1 <= p_src_data_stream_V_dout;
            else 
                k_buf_0_val_7_d1 <= "XXXXXXXX";
            end if;
        else 
            k_buf_0_val_7_d1 <= "XXXXXXXX";
        end if; 
    end process;


    k_buf_0_val_7_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, or_cond_i_i_reg_2426, tmp_4_reg_2366, tmp_7_reg_2371, ap_predicate_op231_read_state4, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_4_reg_2366 = ap_const_lv1_0) and (tmp_7_reg_2371 = ap_const_lv1_1) and (or_cond_i_i_reg_2426 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op231_read_state4 = ap_const_boolean_1)))) then 
            k_buf_0_val_7_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_7_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_8_address0 <= tmp_18_fu_1091_p1(8 - 1 downto 0);

    k_buf_0_val_8_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            k_buf_0_val_8_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_8_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, or_cond_i_i_reg_2426, tmp_4_reg_2366, tmp_7_reg_2371, ap_predicate_op231_read_state4, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_4_reg_2366 = ap_const_lv1_0) and (tmp_7_reg_2371 = ap_const_lv1_1) and (or_cond_i_i_reg_2426 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op231_read_state4 = ap_const_boolean_1)))) then 
            k_buf_0_val_8_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_8_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_8_d1_assign_proc : process(p_src_data_stream_V_dout, ap_predicate_op231_read_state4, k_buf_0_val_7_q0, ap_condition_67, ap_condition_532)
    begin
        if ((ap_const_boolean_1 = ap_condition_67)) then
            if ((ap_predicate_op231_read_state4 = ap_const_boolean_1)) then 
                k_buf_0_val_8_d1 <= k_buf_0_val_7_q0;
            elsif ((ap_const_boolean_1 = ap_condition_532)) then 
                k_buf_0_val_8_d1 <= p_src_data_stream_V_dout;
            else 
                k_buf_0_val_8_d1 <= "XXXXXXXX";
            end if;
        else 
            k_buf_0_val_8_d1 <= "XXXXXXXX";
        end if; 
    end process;


    k_buf_0_val_8_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, or_cond_i_i_reg_2426, tmp_4_reg_2366, tmp_7_reg_2371, ap_predicate_op231_read_state4, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_4_reg_2366 = ap_const_lv1_0) and (tmp_7_reg_2371 = ap_const_lv1_1) and (or_cond_i_i_reg_2426 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op231_read_state4 = ap_const_boolean_1)))) then 
            k_buf_0_val_8_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_8_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_9_address0 <= tmp_18_fu_1091_p1(8 - 1 downto 0);

    k_buf_0_val_9_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            k_buf_0_val_9_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_9_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, or_cond_i_i_reg_2426, tmp_4_reg_2366, tmp_7_reg_2371, ap_predicate_op231_read_state4, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_4_reg_2366 = ap_const_lv1_0) and (tmp_7_reg_2371 = ap_const_lv1_1) and (or_cond_i_i_reg_2426 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op231_read_state4 = ap_const_boolean_1)))) then 
            k_buf_0_val_9_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_9_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_9_d1_assign_proc : process(p_src_data_stream_V_dout, ap_predicate_op231_read_state4, k_buf_0_val_8_q0, ap_condition_67, ap_condition_532)
    begin
        if ((ap_const_boolean_1 = ap_condition_67)) then
            if ((ap_predicate_op231_read_state4 = ap_const_boolean_1)) then 
                k_buf_0_val_9_d1 <= k_buf_0_val_8_q0;
            elsif ((ap_const_boolean_1 = ap_condition_532)) then 
                k_buf_0_val_9_d1 <= p_src_data_stream_V_dout;
            else 
                k_buf_0_val_9_d1 <= "XXXXXXXX";
            end if;
        else 
            k_buf_0_val_9_d1 <= "XXXXXXXX";
        end if; 
    end process;


    k_buf_0_val_9_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, or_cond_i_i_reg_2426, tmp_4_reg_2366, tmp_7_reg_2371, ap_predicate_op231_read_state4, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_4_reg_2366 = ap_const_lv1_0) and (tmp_7_reg_2371 = ap_const_lv1_1) and (or_cond_i_i_reg_2426 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op231_read_state4 = ap_const_boolean_1)))) then 
            k_buf_0_val_9_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_9_we1 <= ap_const_logic_0;
        end if; 
    end process;

    or_cond_i427_i_1_fu_756_p2 <= (tmp_331_1_fu_751_p2 and rev8_fu_745_p2);
    or_cond_i427_i_2_fu_802_p2 <= (tmp_331_2_fu_797_p2 and rev9_fu_791_p2);
    or_cond_i427_i_3_fu_848_p2 <= (tmp_331_3_fu_843_p2 and rev10_fu_837_p2);
    or_cond_i427_i_4_fu_894_p2 <= (tmp_331_4_fu_889_p2 and rev11_fu_883_p2);
    or_cond_i427_i_fu_710_p2 <= (tmp_11_fu_705_p2 and rev_fu_699_p2);
    or_cond_i_fu_1104_p2 <= (tmp_4_reg_2366 and icmp_fu_1021_p2);
    or_cond_i_i_fu_1052_p2 <= (tmp_16_fu_1047_p2 and rev12_fu_1041_p2);
        p_Val2_19_0_2_cast_fu_1497_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_1941_p3),14));

        p_Val2_19_1_1_cast_fu_1721_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_19_1_1_reg_2531),15));

    p_Val2_19_1_1_fu_1543_p2 <= std_logic_vector(unsigned(tmp6_fu_1531_p2) + unsigned(tmp7_cast_fu_1540_p1));
    p_Val2_19_2_2_fu_1758_p2 <= std_logic_vector(signed(tmp11_cast_fu_1749_p1) + signed(tmp12_cast_fu_1752_p1));
    p_Val2_6_fu_1837_p2 <= std_logic_vector(unsigned(tmp25_fu_1828_p2) + unsigned(tmp49_cast_fu_1834_p1));
    p_Val2_7_i_i_fu_1910_p3 <= 
        ap_const_lv15_4000 when (underflow_fu_1889_p2(0) = '1') else 
        p_Val2_6_reg_2555;
    p_Val2_9_fu_1903_p3 <= 
        ap_const_lv15_3FFF when (brmerge_i_i_i_i_fu_1894_p2(0) = '1') else 
        p_Val2_6_reg_2555;
    p_Val2_s_fu_1802_p2 <= std_logic_vector(unsigned(tmp17_fu_1793_p2) + unsigned(tmp38_cast_fu_1799_p1));
    p_assign_1_fu_1066_p3 <= 
        ap_const_lv32_0 when (tmp_92_fu_1058_p3(0) = '1') else 
        tmp_2_reg_2228;
    p_assign_8_1_fu_731_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFE) + signed(t_V_reg_508));
    p_assign_8_2_fu_777_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFD) + signed(t_V_reg_508));
    p_assign_8_3_fu_823_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFC) + signed(t_V_reg_508));
    p_assign_8_4_fu_869_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFB) + signed(t_V_reg_508));
    p_assign_9_1_fu_770_p3 <= 
        ap_const_lv32_0 when (tmp_78_fu_762_p3(0) = '1') else 
        p_neg397_i_reg_2234;
    p_assign_9_2_fu_816_p3 <= 
        ap_const_lv32_0 when (tmp_80_fu_808_p3(0) = '1') else 
        p_neg397_i_reg_2234;
    p_assign_9_3_fu_862_p3 <= 
        ap_const_lv32_0 when (tmp_82_fu_854_p3(0) = '1') else 
        p_neg397_i_reg_2234;
    p_assign_9_4_fu_908_p3 <= 
        ap_const_lv32_0 when (tmp_84_fu_900_p3(0) = '1') else 
        p_neg397_i_reg_2234;
    p_assign_9_fu_724_p3 <= 
        ap_const_lv32_0 when (tmp_76_fu_716_p3(0) = '1') else 
        p_neg397_i_reg_2234;

    p_dst_data_stream_V_V_blk_n_assign_proc : process(p_dst_data_stream_V_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, or_cond_i_reg_2478_pp0_iter3_reg)
    begin
        if (((or_cond_i_reg_2478_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            p_dst_data_stream_V_V_blk_n <= p_dst_data_stream_V_V_full_n;
        else 
            p_dst_data_stream_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_dst_data_stream_V_V_din <= 
        p_Val2_9_fu_1903_p3 when (underflow_not_i_i_fu_1898_p2(0) = '1') else 
        p_Val2_7_i_i_fu_1910_p3;

    p_dst_data_stream_V_V_write_assign_proc : process(ap_enable_reg_pp0_iter4, or_cond_i_reg_2478_pp0_iter3_reg, ap_block_pp0_stage0_11001)
    begin
        if (((or_cond_i_reg_2478_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            p_dst_data_stream_V_V_write <= ap_const_logic_1;
        else 
            p_dst_data_stream_V_V_write <= ap_const_logic_0;
        end if; 
    end process;

    p_neg397_i_fu_548_p2 <= std_logic_vector(unsigned(p_src_rows_V_read) + unsigned(ap_const_lv32_FFFFFFFF));
    p_shl_cast_fu_1517_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl_fu_1510_p3),12));
    p_shl_fu_1510_p3 <= (src_kernel_win_0_va_38_reg_2511 & ap_const_lv3_0);

    p_src_data_stream_V_blk_n_assign_proc : process(p_src_data_stream_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, or_cond_i_i_reg_2426, tmp_4_reg_2366, tmp_3_reg_2357)
    begin
        if ((((tmp_3_reg_2357 = ap_const_lv1_1) and (tmp_4_reg_2366 = ap_const_lv1_1) and (or_cond_i_i_reg_2426 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((tmp_4_reg_2366 = ap_const_lv1_0) and (or_cond_i_i_reg_2426 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            p_src_data_stream_V_blk_n <= p_src_data_stream_V_empty_n;
        else 
            p_src_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_data_stream_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op218_read_state4, ap_predicate_op231_read_state4, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op231_read_state4 = ap_const_boolean_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op218_read_state4 = ap_const_boolean_1)))) then 
            p_src_data_stream_V_read <= ap_const_logic_1;
        else 
            p_src_data_stream_V_read <= ap_const_logic_0;
        end if; 
    end process;

    r_V_8_1_1_fu_1521_p2 <= std_logic_vector(unsigned(ap_const_lv12_0) - unsigned(p_shl_cast_fu_1517_p1));
    r_V_8_1_3_fu_1398_p0 <= OP2_V_1_3_cast_reg_2278(5 - 1 downto 0);
    r_V_8_1_3_fu_1398_p1 <= r_V_8_1_3_fu_1398_p10(8 - 1 downto 0);
    r_V_8_1_3_fu_1398_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_12_fu_202),13));
    r_V_8_1_3_fu_1398_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_8_1_3_fu_1398_p0) * signed('0' &r_V_8_1_3_fu_1398_p1))), 13));
    r_V_8_1_4_fu_1736_p0 <= OP2_V_1_4_cast_reg_2283(4 - 1 downto 0);
    r_V_8_1_4_fu_1736_p1 <= r_V_8_1_4_fu_1736_p10(8 - 1 downto 0);
    r_V_8_1_4_fu_1736_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_23_reg_2500_pp0_iter2_reg),12));
    r_V_8_1_fu_1385_p0 <= OP2_V_1_cast_reg_2268(3 - 1 downto 0);
    r_V_8_1_fu_1385_p1 <= r_V_8_1_fu_1385_p10(8 - 1 downto 0);
    r_V_8_1_fu_1385_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_15_fu_214),11));
    r_V_8_1_fu_1385_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_8_1_fu_1385_p0) * signed('0' &r_V_8_1_fu_1385_p1))), 11));
    r_V_8_2_3_fu_1768_p0 <= OP2_V_2_3_cast_reg_2298(6 - 1 downto 0);
    r_V_8_2_3_fu_1768_p1 <= r_V_8_2_3_fu_1768_p10(8 - 1 downto 0);
    r_V_8_2_3_fu_1768_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_8_fu_186),14));
    r_V_8_3_2_fu_1560_p0 <= OP2_V_3_2_cast_reg_2318(5 - 1 downto 0);
    r_V_8_3_2_fu_1560_p1 <= r_V_8_3_2_fu_1560_p10(8 - 1 downto 0);
    r_V_8_3_2_fu_1560_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_5_fu_174),13));
    r_V_8_3_3_fu_1565_p3 <= (src_kernel_win_0_va_4_fu_170 & ap_const_lv3_0);
    r_V_8_4_2_fu_1592_p0 <= OP2_V_4_2_cast_reg_2338(4 - 1 downto 0);
    r_V_8_4_2_fu_1592_p1 <= r_V_8_4_2_fu_1592_p10(8 - 1 downto 0);
    r_V_8_4_2_fu_1592_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_1_fu_158),12));
    r_V_8_fu_1476_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(OP1_V_0_cast_fu_1472_p1));
    rev10_fu_837_p2 <= (tmp_81_fu_829_p3 xor ap_const_lv1_1);
    rev11_fu_883_p2 <= (tmp_83_fu_875_p3 xor ap_const_lv1_1);
    rev12_fu_1041_p2 <= (tmp_91_fu_1033_p3 xor ap_const_lv1_1);
    rev8_fu_745_p2 <= (tmp_77_fu_737_p3 xor ap_const_lv1_1);
    rev9_fu_791_p2 <= (tmp_79_fu_783_p3 xor ap_const_lv1_1);
    rev_fu_699_p2 <= (tmp_75_fu_691_p3 xor ap_const_lv1_1);
    row_assign_14_1_fu_940_p2 <= std_logic_vector(unsigned(p_neg397_i_reg_2234) - unsigned(y_2_1_fu_932_p3));
    row_assign_14_2_fu_957_p2 <= std_logic_vector(unsigned(p_neg397_i_reg_2234) - unsigned(y_2_2_fu_949_p3));
    row_assign_14_3_fu_974_p2 <= std_logic_vector(unsigned(p_neg397_i_reg_2234) - unsigned(y_2_3_fu_966_p3));
    row_assign_14_4_fu_991_p2 <= std_logic_vector(unsigned(p_neg397_i_reg_2234) - unsigned(y_2_4_fu_983_p3));
    row_assign_s_fu_923_p2 <= std_logic_vector(unsigned(p_neg397_i_reg_2234) - unsigned(y_2_fu_915_p3));
    src_kernel_win_0_va_20_fu_1274_p3 <= 
        tmp_55_fu_1259_p7 when (tmp_8_reg_2383(0) = '1') else 
        col_buf_0_val_0_0_fu_1139_p3;
    src_kernel_win_0_va_21_fu_1296_p3 <= 
        tmp_56_fu_1281_p7 when (tmp_8_reg_2383(0) = '1') else 
        col_buf_0_val_1_0_fu_1161_p3;
    src_kernel_win_0_va_22_fu_1318_p3 <= 
        tmp_57_fu_1303_p7 when (tmp_8_reg_2383(0) = '1') else 
        col_buf_0_val_2_0_fu_1183_p3;
    src_kernel_win_0_va_23_fu_1340_p3 <= 
        tmp_58_fu_1325_p7 when (tmp_8_reg_2383(0) = '1') else 
        col_buf_0_val_3_0_fu_1205_p3;
    src_kernel_win_0_va_24_fu_1362_p3 <= 
        tmp_59_fu_1347_p7 when (tmp_8_reg_2383(0) = '1') else 
        col_buf_0_val_4_0_fu_1227_p3;
        tmp11_cast_fu_1749_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_2020_p3),16));

        tmp12_cast_fu_1752_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_2011_p3),16));

    tmp14_fu_1784_p2 <= std_logic_vector(unsigned(p_Val2_19_2_2_fu_1758_p2) + unsigned(tmp35_cast_fu_1781_p1));
    tmp17_fu_1793_p2 <= std_logic_vector(unsigned(tmp14_fu_1784_p2) + unsigned(tmp36_cast_fu_1790_p1));
    tmp22_fu_1613_p2 <= std_logic_vector(signed(grp_fu_1972_p3) + signed(tmp43_cast_fu_1610_p1));
    tmp23_fu_1622_p2 <= std_logic_vector(unsigned(tmp39_cast_fu_1607_p1) + unsigned(tmp41_cast_fu_1618_p1));
    tmp24_fu_1819_p2 <= std_logic_vector(unsigned(tmp_61_fu_1773_p2) + unsigned(tmp46_cast_fu_1816_p1));
    tmp25_fu_1828_p2 <= std_logic_vector(unsigned(tmp24_fu_1819_p2) + unsigned(tmp47_cast_fu_1825_p1));
        tmp35_cast_fu_1781_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_2029_p3),16));

        tmp36_cast_fu_1790_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp16_reg_2536),16));

        tmp38_cast_fu_1799_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp23_reg_2542),16));

    tmp39_cast_fu_1607_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1980_p3),14));
        tmp41_cast_fu_1618_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp22_fu_1613_p2),14));

        tmp43_cast_fu_1610_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_1987_p3),13));

        tmp46_cast_fu_1816_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_2029_p3),15));

        tmp47_cast_fu_1825_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp16_reg_2536),15));

        tmp49_cast_fu_1834_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp23_reg_2542),15));

    tmp6_fu_1531_p2 <= std_logic_vector(signed(tmp_350_1_1_cast_cas_fu_1527_p1) + signed(p_Val2_19_0_2_cast_fu_1497_p1));
        tmp7_cast_fu_1540_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_1949_p3),14));

        tmp9_cast_fu_1724_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp9_reg_2521_pp0_iter2_reg),15));

    tmp_11_fu_705_p2 <= "1" when (signed(tmp_9_fu_685_p2) < signed(p_src_rows_V_read)) else "0";
    tmp_16_fu_1047_p2 <= "1" when (signed(ImagLoc_x_fu_1027_p2) < signed(p_src_cols_V_read)) else "0";
    tmp_18_fu_1091_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(x_fu_1073_p3),64));
    tmp_1_fu_536_p2 <= std_logic_vector(unsigned(p_src_rows_V_read) + unsigned(ap_const_lv32_3));
    tmp_26_fu_1884_p2 <= (newsignbit_reg_2561 xor ap_const_lv1_1);
    tmp_274_not_fu_650_p2 <= (tmp_3_fu_645_p2 xor ap_const_lv1_1);
    tmp_2_fu_542_p2 <= std_logic_vector(unsigned(p_src_cols_V_read) + unsigned(ap_const_lv32_FFFFFFFF));
    tmp_2_i_i_fu_1879_p2 <= (isneg_reg_2548 xor ap_const_lv1_1);
    tmp_304_3_fu_668_p2 <= "1" when (t_V_reg_508 = ap_const_lv32_1) else "0";
    tmp_304_4_fu_674_p2 <= "1" when (t_V_reg_508 = ap_const_lv32_2) else "0";
    tmp_331_1_fu_751_p2 <= "1" when (signed(p_assign_8_1_fu_731_p2) < signed(p_src_rows_V_read)) else "0";
    tmp_331_2_fu_797_p2 <= "1" when (signed(p_assign_8_2_fu_777_p2) < signed(p_src_rows_V_read)) else "0";
    tmp_331_3_fu_843_p2 <= "1" when (signed(p_assign_8_3_fu_823_p2) < signed(p_src_rows_V_read)) else "0";
    tmp_331_4_fu_889_p2 <= "1" when (signed(p_assign_8_4_fu_869_p2) < signed(p_src_rows_V_read)) else "0";
        tmp_350_1_1_cast_cas_fu_1527_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_8_1_1_fu_1521_p2),14));

    tmp_3_fu_645_p2 <= "1" when (unsigned(t_V_reg_508) < unsigned(p_src_rows_V_read)) else "0";
    tmp_4_fu_656_p2 <= "1" when (unsigned(t_V_reg_508) > unsigned(ap_const_lv32_2)) else "0";
        tmp_60_fu_1755_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_2011_p3),15));

    tmp_61_fu_1773_p2 <= std_logic_vector(signed(tmp_60_fu_1755_p1) + signed(grp_fu_2020_p3));
    tmp_75_fu_691_p3 <= tmp_9_fu_685_p2(31 downto 31);
    tmp_76_fu_716_p3 <= tmp_9_fu_685_p2(31 downto 31);
    tmp_77_fu_737_p3 <= p_assign_8_1_fu_731_p2(31 downto 31);
    tmp_78_fu_762_p3 <= p_assign_8_1_fu_731_p2(31 downto 31);
    tmp_79_fu_783_p3 <= p_assign_8_2_fu_777_p2(31 downto 31);
    tmp_7_fu_662_p2 <= "1" when (t_V_reg_508 = ap_const_lv32_0) else "0";
    tmp_80_fu_808_p3 <= p_assign_8_2_fu_777_p2(31 downto 31);
    tmp_81_fu_829_p3 <= p_assign_8_3_fu_823_p2(31 downto 31);
    tmp_82_fu_854_p3 <= p_assign_8_3_fu_823_p2(31 downto 31);
    tmp_83_fu_875_p3 <= p_assign_8_4_fu_869_p2(31 downto 31);
    tmp_84_fu_900_p3 <= p_assign_8_4_fu_869_p2(31 downto 31);
    tmp_85_fu_928_p1 <= row_assign_s_fu_923_p2(3 - 1 downto 0);
    tmp_86_fu_945_p1 <= row_assign_14_1_fu_940_p2(3 - 1 downto 0);
    tmp_87_fu_962_p1 <= row_assign_14_2_fu_957_p2(3 - 1 downto 0);
    tmp_88_fu_979_p1 <= row_assign_14_3_fu_974_p2(3 - 1 downto 0);
    tmp_89_fu_996_p1 <= row_assign_14_4_fu_991_p2(3 - 1 downto 0);
    tmp_8_fu_680_p2 <= "1" when (unsigned(t_V_reg_508) > unsigned(p_src_rows_V_read)) else "0";
    tmp_90_fu_1011_p4 <= t_V_7_reg_519(31 downto 2);
    tmp_91_fu_1033_p3 <= ImagLoc_x_fu_1027_p2(31 downto 31);
    tmp_92_fu_1058_p3 <= ImagLoc_x_fu_1027_p2(31 downto 31);
    tmp_93_fu_1100_p1 <= col_assign_2_fu_1081_p2(3 - 1 downto 0);
    tmp_9_fu_685_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFF) + signed(t_V_reg_508));
    tmp_s_fu_530_p2 <= std_logic_vector(unsigned(p_src_cols_V_read) + unsigned(ap_const_lv32_4));
    underflow_fu_1889_p2 <= (tmp_26_fu_1884_p2 and isneg_reg_2548);
    underflow_not_i_i_fu_1898_p2 <= (tmp_2_i_i_fu_1879_p2 or newsignbit_reg_2561);
    x_fu_1073_p3 <= 
        ImagLoc_x_fu_1027_p2 when (or_cond_i_i_fu_1052_p2(0) = '1') else 
        p_assign_1_fu_1066_p3;
    y_2_1_fu_932_p3 <= 
        p_assign_8_1_fu_731_p2 when (or_cond_i427_i_1_fu_756_p2(0) = '1') else 
        p_assign_9_1_fu_770_p3;
    y_2_2_fu_949_p3 <= 
        p_assign_8_2_fu_777_p2 when (or_cond_i427_i_2_fu_802_p2(0) = '1') else 
        p_assign_9_2_fu_816_p3;
    y_2_3_fu_966_p3 <= 
        p_assign_8_3_fu_823_p2 when (or_cond_i427_i_3_fu_848_p2(0) = '1') else 
        p_assign_9_3_fu_862_p3;
    y_2_4_fu_983_p3 <= 
        p_assign_8_4_fu_869_p2 when (or_cond_i427_i_4_fu_894_p2(0) = '1') else 
        p_assign_9_4_fu_908_p3;
    y_2_fu_915_p3 <= 
        tmp_9_fu_685_p2 when (or_cond_i427_i_fu_710_p2(0) = '1') else 
        p_assign_9_fu_724_p3;
end behav;
