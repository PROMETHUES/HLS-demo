-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity row_filter is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_src_V_V_dout : IN STD_LOGIC_VECTOR (39 downto 0);
    p_src_V_V_empty_n : IN STD_LOGIC;
    p_src_V_V_read : OUT STD_LOGIC;
    p_dst_data_stream_V_V_din : OUT STD_LOGIC_VECTOR (34 downto 0);
    p_dst_data_stream_V_V_full_n : IN STD_LOGIC;
    p_dst_data_stream_V_V_write : OUT STD_LOGIC;
    p_anchor_x_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    p_anchor_x_empty_n : IN STD_LOGIC;
    p_anchor_x_read : OUT STD_LOGIC;
    rows_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    rows_empty_n : IN STD_LOGIC;
    rows_read : OUT STD_LOGIC;
    cols_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    cols_empty_n : IN STD_LOGIC;
    cols_read : OUT STD_LOGIC );
end;


architecture behav of row_filter is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_FFFFFFFC : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv35_3FFFFFFFF : STD_LOGIC_VECTOR (34 downto 0) := "01111111111111111111111111111111111";
    constant ap_const_lv35_400000000 : STD_LOGIC_VECTOR (34 downto 0) := "10000000000000000000000000000000000";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_src_V_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal tmp_4_i_reg_979 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_dst_data_stream_V_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal tmp_9_i_reg_1007 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_i_reg_1007_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_anchor_x_blk_n : STD_LOGIC;
    signal rows_blk_n : STD_LOGIC;
    signal cols_blk_n : STD_LOGIC;
    signal t_V_1_reg_235 : STD_LOGIC_VECTOR (31 downto 0);
    signal heightloop_reg_909 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal cols_read_reg_914 : STD_LOGIC_VECTOR (31 downto 0);
    signal index_reg_920 : STD_LOGIC_VECTOR (0 downto 0);
    signal index_cast_i1_cast_fu_246_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal index_cast_i1_cast_reg_928 : STD_LOGIC_VECTOR (31 downto 0);
    signal right_border_fu_254_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal right_border_reg_933 : STD_LOGIC_VECTOR (31 downto 0);
    signal stop_fu_260_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal stop_reg_941 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_i_fu_266_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_i_reg_946 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_cast_i_cast_fu_272_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_cast_i_cast_reg_951 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond1_i_fu_280_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal i_V_fu_285_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_V_reg_965 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond2_i_fu_291_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond2_i_reg_970 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal exitcond2_i_reg_970_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond2_i_reg_970_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond2_i_reg_970_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal j_V_fu_296_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal tmp_4_i_fu_307_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_i_fu_312_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_i_reg_983 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_i_reg_983_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_fu_329_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_987 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_987_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal col_assign_fu_335_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal col_assign_reg_991 : STD_LOGIC_VECTOR (31 downto 0);
    signal col_assign_reg_991_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal or_cond1_i_fu_345_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_i_reg_996 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_i_reg_996_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_i_reg_996_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_i_reg_996_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_i_fu_351_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_i_reg_1002 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_i_reg_1002_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_i_reg_1002_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_i_reg_1002_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_i_fu_356_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_i_reg_1007_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_i_reg_1007_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_i_reg_1007_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_i_fu_402_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_i_reg_1011 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_i_reg_1011_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal x_i_reg_1011_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal row_buf_0_val_0_V_12_fu_460_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal row_buf_0_val_0_V_12_reg_1017 : STD_LOGIC_VECTOR (39 downto 0);
    signal row_buf_0_val_0_V_12_reg_1017_pp0_iter3_reg : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_V_1_fu_779_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp_V_1_reg_1032 : STD_LOGIC_VECTOR (34 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal l_border_buf_0_val_s_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal l_border_buf_0_val_s_ce0 : STD_LOGIC;
    signal l_border_buf_0_val_s_we0 : STD_LOGIC;
    signal l_border_buf_0_val_s_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal l_border_buf_0_val_s_ce1 : STD_LOGIC;
    signal l_border_buf_0_val_s_q1 : STD_LOGIC_VECTOR (39 downto 0);
    signal r_border_buf_0_val_s_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal r_border_buf_0_val_s_ce0 : STD_LOGIC;
    signal r_border_buf_0_val_s_we0 : STD_LOGIC;
    signal r_border_buf_0_val_s_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal r_border_buf_0_val_s_ce1 : STD_LOGIC;
    signal r_border_buf_0_val_s_q1 : STD_LOGIC_VECTOR (39 downto 0);
    signal t_V_reg_224 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal tmp_45_i_fu_423_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_50_i_fu_482_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_51_i_fu_490_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal row_buf_0_val_0_V_s_fu_94 : STD_LOGIC_VECTOR (39 downto 0);
    signal src_kernel_winX_temp_fu_98 : STD_LOGIC_VECTOR (39 downto 0);
    signal src_kernel_winX_temp_11_fu_509_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal src_kernel_winX_temp_1_fu_102 : STD_LOGIC_VECTOR (39 downto 0);
    signal src_kernel_winX_temp_2_fu_106 : STD_LOGIC_VECTOR (39 downto 0);
    signal src_kernel_winX_temp_3_fu_110 : STD_LOGIC_VECTOR (39 downto 0);
    signal src_kernel_winX_temp_4_fu_114 : STD_LOGIC_VECTOR (39 downto 0);
    signal src_kernel_winX_temp_5_fu_118 : STD_LOGIC_VECTOR (39 downto 0);
    signal row_buf_0_val_0_V_1_fu_122 : STD_LOGIC_VECTOR (39 downto 0);
    signal row_buf_0_val_0_V_2_fu_126 : STD_LOGIC_VECTOR (39 downto 0);
    signal row_buf_val_V_0_0_2_1_fu_439_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal row_buf_0_val_0_V_3_fu_130 : STD_LOGIC_VECTOR (39 downto 0);
    signal row_buf_0_val_0_V_10_fu_446_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal row_buf_0_val_0_V_4_fu_134 : STD_LOGIC_VECTOR (39 downto 0);
    signal row_buf_0_val_0_V_11_fu_453_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal ult_fu_318_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_fu_323_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_i_fu_340_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_fu_302_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_362_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_38_i_fu_376_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev1_fu_370_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_387_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_i_fu_381_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_1_i_fu_395_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal col_assign_2_i_fu_486_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp4_fu_505_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_fu_498_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal OP1_V_1_0_0_i_fu_535_p0 : STD_LOGIC_VECTOR (39 downto 0);
    signal OP1_V_1_0_0_1_i_fu_539_p0 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_7_fu_543_p0 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_7_fu_543_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal OP1_V_1_0_0_i_fu_535_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal OP1_V_1_0_0_1_i_fu_539_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal addconv_i_fu_549_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_73_0_0_2_cast_i_s_fu_559_p0 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_73_0_0_3_cast_i_s_fu_563_p0 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_8_fu_567_p0 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_8_fu_567_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_73_0_0_2_cast_i_s_fu_559_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_73_0_0_3_cast_i_s_fu_563_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_fu_573_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_7_fu_543_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_8_fu_567_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_cast_fu_579_p1 : STD_LOGIC_VECTOR (41 downto 0);
    signal p_Val2_11_0_0_1_ca_fu_555_p1 : STD_LOGIC_VECTOR (41 downto 0);
    signal p_Val2_11_0_0_3_i_fu_591_p2 : STD_LOGIC_VECTOR (41 downto 0);
    signal tmp_73_0_0_4_cast_i_fu_601_p0 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_6_fu_605_p0 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_3_fu_583_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp_5_fu_587_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp_73_0_0_5_cast_i_s_fu_615_p0 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_9_fu_619_p0 : STD_LOGIC_VECTOR (39 downto 0);
    signal p_Val2_11_0_0_3_ca_fu_597_p1 : STD_LOGIC_VECTOR (42 downto 0);
    signal tmp_73_0_0_4_cast_i_fu_601_p1 : STD_LOGIC_VECTOR (42 downto 0);
    signal tmp_73_0_0_5_cast_i_s_fu_615_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_73_0_0_6_cast_i_s_fu_623_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp8_fu_637_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp112_cast_fu_643_p1 : STD_LOGIC_VECTOR (42 downto 0);
    signal tmp7_fu_631_p2 : STD_LOGIC_VECTOR (42 downto 0);
    signal p_Val2_11_0_0_6_i_fu_647_p2 : STD_LOGIC_VECTOR (42 downto 0);
    signal tmp_4_fu_609_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp_9_fu_619_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp_6_fu_605_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp_10_fu_627_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp10_fu_667_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp9_fu_661_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp_s_fu_687_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal newsignbit_fu_679_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_i_i_i_i_fu_697_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal isneg_fu_653_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_i_fu_703_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_i_i_i_fu_709_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not38_i_i_i_i_fu_727_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newsignbit_0_not_i_i_fu_721_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge39_i_i_i_i_fu_733_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_fu_739_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_fu_715_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_not_i_i_i_fu_751_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_i_i_i_fu_745_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_s_fu_673_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal brmerge_i_i_i_fu_757_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_2_fu_763_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal p_Val2_4_i_i_i_fu_771_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component row_filter_l_bordGfk IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (39 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (39 downto 0) );
    end component;



begin
    l_border_buf_0_val_s_U : component row_filter_l_bordGfk
    generic map (
        DataWidth => 40,
        AddressRange => 7,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => l_border_buf_0_val_s_address0,
        ce0 => l_border_buf_0_val_s_ce0,
        we0 => l_border_buf_0_val_s_we0,
        d0 => row_buf_0_val_0_V_s_fu_94,
        address1 => l_border_buf_0_val_s_address1,
        ce1 => l_border_buf_0_val_s_ce1,
        q1 => l_border_buf_0_val_s_q1);

    r_border_buf_0_val_s_U : component row_filter_l_bordGfk
    generic map (
        DataWidth => 40,
        AddressRange => 7,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => r_border_buf_0_val_s_address0,
        ce0 => r_border_buf_0_val_s_ce0,
        we0 => r_border_buf_0_val_s_we0,
        d0 => row_buf_0_val_0_V_s_fu_94,
        address1 => r_border_buf_0_val_s_address1,
        ce1 => r_border_buf_0_val_s_ce1,
        q1 => r_border_buf_0_val_s_q1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((exitcond1_i_fu_280_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond1_i_fu_280_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state3);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond1_i_fu_280_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    t_V_1_reg_235_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond2_i_fu_291_p2 = ap_const_lv1_0))) then 
                t_V_1_reg_235 <= j_V_fu_296_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond1_i_fu_280_p2 = ap_const_lv1_0))) then 
                t_V_1_reg_235 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    t_V_reg_224_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                t_V_reg_224 <= i_V_reg_965;
            elsif ((not(((ap_start = ap_const_logic_0) or (cols_empty_n = ap_const_logic_0) or (rows_empty_n = ap_const_logic_0) or (p_anchor_x_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                t_V_reg_224 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond2_i_fu_291_p2 = ap_const_lv1_0))) then
                col_assign_reg_991 <= col_assign_fu_335_p2;
                or_cond1_i_reg_996 <= or_cond1_i_fu_345_p2;
                or_cond_i_reg_987 <= or_cond_i_fu_329_p2;
                tmp_4_i_reg_979 <= tmp_4_i_fu_307_p2;
                tmp_5_i_reg_983 <= tmp_5_i_fu_312_p2;
                tmp_8_i_reg_1002 <= tmp_8_i_fu_351_p2;
                tmp_9_i_reg_1007 <= tmp_9_i_fu_356_p2;
                x_i_reg_1011 <= x_i_fu_402_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                col_assign_reg_991_pp0_iter1_reg <= col_assign_reg_991;
                exitcond2_i_reg_970 <= exitcond2_i_fu_291_p2;
                exitcond2_i_reg_970_pp0_iter1_reg <= exitcond2_i_reg_970;
                or_cond1_i_reg_996_pp0_iter1_reg <= or_cond1_i_reg_996;
                or_cond_i_reg_987_pp0_iter1_reg <= or_cond_i_reg_987;
                tmp_5_i_reg_983_pp0_iter1_reg <= tmp_5_i_reg_983;
                tmp_8_i_reg_1002_pp0_iter1_reg <= tmp_8_i_reg_1002;
                tmp_9_i_reg_1007_pp0_iter1_reg <= tmp_9_i_reg_1007;
                x_i_reg_1011_pp0_iter1_reg <= x_i_reg_1011;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (cols_empty_n = ap_const_logic_0) or (rows_empty_n = ap_const_logic_0) or (p_anchor_x_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                cols_read_reg_914 <= cols_dout;
                heightloop_reg_909 <= rows_dout;
                    index_cast_i1_cast_reg_928(1 downto 0) <= index_cast_i1_cast_fu_246_p3(1 downto 0);
                index_reg_920 <= p_anchor_x_dout;
                right_border_reg_933 <= right_border_fu_254_p2;
                stop_reg_941 <= stop_fu_260_p2;
                tmp_1_i_reg_946 <= tmp_1_i_fu_266_p2;
                    tmp_2_cast_i_cast_reg_951(1 downto 0) <= tmp_2_cast_i_cast_fu_272_p3(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                exitcond2_i_reg_970_pp0_iter2_reg <= exitcond2_i_reg_970_pp0_iter1_reg;
                exitcond2_i_reg_970_pp0_iter3_reg <= exitcond2_i_reg_970_pp0_iter2_reg;
                or_cond1_i_reg_996_pp0_iter2_reg <= or_cond1_i_reg_996_pp0_iter1_reg;
                or_cond1_i_reg_996_pp0_iter3_reg <= or_cond1_i_reg_996_pp0_iter2_reg;
                row_buf_0_val_0_V_12_reg_1017 <= row_buf_0_val_0_V_12_fu_460_p3;
                row_buf_0_val_0_V_12_reg_1017_pp0_iter3_reg <= row_buf_0_val_0_V_12_reg_1017;
                tmp_8_i_reg_1002_pp0_iter2_reg <= tmp_8_i_reg_1002_pp0_iter1_reg;
                tmp_8_i_reg_1002_pp0_iter3_reg <= tmp_8_i_reg_1002_pp0_iter2_reg;
                tmp_9_i_reg_1007_pp0_iter2_reg <= tmp_9_i_reg_1007_pp0_iter1_reg;
                tmp_9_i_reg_1007_pp0_iter3_reg <= tmp_9_i_reg_1007_pp0_iter2_reg;
                tmp_9_i_reg_1007_pp0_iter4_reg <= tmp_9_i_reg_1007_pp0_iter3_reg;
                x_i_reg_1011_pp0_iter2_reg <= x_i_reg_1011_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_V_reg_965 <= i_V_fu_285_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (exitcond2_i_reg_970_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                row_buf_0_val_0_V_1_fu_122 <= row_buf_0_val_0_V_12_reg_1017_pp0_iter3_reg;
                src_kernel_winX_temp_1_fu_102 <= src_kernel_winX_temp_fu_98;
                src_kernel_winX_temp_2_fu_106 <= src_kernel_winX_temp_1_fu_102;
                src_kernel_winX_temp_3_fu_110 <= src_kernel_winX_temp_2_fu_106;
                src_kernel_winX_temp_4_fu_114 <= src_kernel_winX_temp_3_fu_110;
                src_kernel_winX_temp_5_fu_118 <= src_kernel_winX_temp_4_fu_114;
                src_kernel_winX_temp_fu_98 <= src_kernel_winX_temp_11_fu_509_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (exitcond2_i_reg_970_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                row_buf_0_val_0_V_2_fu_126 <= row_buf_val_V_0_0_2_1_fu_439_p3;
                row_buf_0_val_0_V_3_fu_130 <= row_buf_0_val_0_V_10_fu_446_p3;
                row_buf_0_val_0_V_4_fu_134 <= row_buf_0_val_0_V_11_fu_453_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_4_i_reg_979 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                row_buf_0_val_0_V_s_fu_94 <= p_src_V_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_9_i_reg_1007_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_V_1_reg_1032 <= tmp_V_1_fu_779_p3;
            end if;
        end if;
    end process;
    index_cast_i1_cast_reg_928(31 downto 2) <= "000000000000000000000000000000";
    tmp_2_cast_i_cast_reg_951(31 downto 2) <= "111111111111111111111111111111";

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, p_anchor_x_empty_n, rows_empty_n, cols_empty_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, exitcond1_i_fu_280_p2, ap_CS_fsm_state2, exitcond2_i_fu_291_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter4)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (cols_empty_n = ap_const_logic_0) or (rows_empty_n = ap_const_logic_0) or (p_anchor_x_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((exitcond1_i_fu_280_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((exitcond2_i_fu_291_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((exitcond2_i_fu_291_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    OP1_V_1_0_0_1_i_fu_539_p0 <= src_kernel_winX_temp_4_fu_114;
        OP1_V_1_0_0_1_i_fu_539_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(OP1_V_1_0_0_1_i_fu_539_p0),41));

    OP1_V_1_0_0_i_fu_535_p0 <= src_kernel_winX_temp_5_fu_118;
        OP1_V_1_0_0_i_fu_535_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(OP1_V_1_0_0_i_fu_535_p0),41));

    addconv_i_fu_549_p2 <= std_logic_vector(signed(OP1_V_1_0_0_i_fu_535_p1) + signed(OP1_V_1_0_0_1_i_fu_539_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state9 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(p_src_V_V_empty_n, p_dst_data_stream_V_V_full_n, ap_enable_reg_pp0_iter1, tmp_4_i_reg_979, ap_enable_reg_pp0_iter5, tmp_9_i_reg_1007_pp0_iter4_reg)
    begin
                ap_block_pp0_stage0_01001 <= (((tmp_9_i_reg_1007_pp0_iter4_reg = ap_const_lv1_1) and (p_dst_data_stream_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((tmp_4_i_reg_979 = ap_const_lv1_1) and (p_src_V_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(p_src_V_V_empty_n, p_dst_data_stream_V_V_full_n, ap_enable_reg_pp0_iter1, tmp_4_i_reg_979, ap_enable_reg_pp0_iter5, tmp_9_i_reg_1007_pp0_iter4_reg)
    begin
                ap_block_pp0_stage0_11001 <= (((tmp_9_i_reg_1007_pp0_iter4_reg = ap_const_lv1_1) and (p_dst_data_stream_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((tmp_4_i_reg_979 = ap_const_lv1_1) and (p_src_V_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(p_src_V_V_empty_n, p_dst_data_stream_V_V_full_n, ap_enable_reg_pp0_iter1, tmp_4_i_reg_979, ap_enable_reg_pp0_iter5, tmp_9_i_reg_1007_pp0_iter4_reg)
    begin
                ap_block_pp0_stage0_subdone <= (((tmp_9_i_reg_1007_pp0_iter4_reg = ap_const_lv1_1) and (p_dst_data_stream_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((tmp_4_i_reg_979 = ap_const_lv1_1) and (p_src_V_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, p_anchor_x_empty_n, rows_empty_n, cols_empty_n)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (cols_empty_n = ap_const_logic_0) or (rows_empty_n = ap_const_logic_0) or (p_anchor_x_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter1_assign_proc : process(p_src_V_V_empty_n, tmp_4_i_reg_979)
    begin
                ap_block_state4_pp0_stage0_iter1 <= ((tmp_4_i_reg_979 = ap_const_lv1_1) and (p_src_V_V_empty_n = ap_const_logic_0));
    end process;

        ap_block_state5_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state8_pp0_stage0_iter5_assign_proc : process(p_dst_data_stream_V_V_full_n, tmp_9_i_reg_1007_pp0_iter4_reg)
    begin
                ap_block_state8_pp0_stage0_iter5 <= ((tmp_9_i_reg_1007_pp0_iter4_reg = ap_const_lv1_1) and (p_dst_data_stream_V_V_full_n = ap_const_logic_0));
    end process;


    ap_condition_pp0_exit_iter0_state3_assign_proc : process(exitcond2_i_fu_291_p2)
    begin
        if ((exitcond2_i_fu_291_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, exitcond1_i_fu_280_p2, ap_CS_fsm_state2)
    begin
        if (((exitcond1_i_fu_280_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(exitcond1_i_fu_280_p2, ap_CS_fsm_state2)
    begin
        if (((exitcond1_i_fu_280_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    brmerge39_i_i_i_i_fu_733_p2 <= (p_not38_i_i_i_i_fu_727_p2 or newsignbit_0_not_i_i_fu_721_p2);
    brmerge_i_i_i_fu_757_p2 <= (underflow_not_i_i_i_fu_751_p2 or overflow_fu_715_p2);
    brmerge_i_i_i_i_fu_703_p2 <= (p_not_i_i_i_i_fu_697_p2 or newsignbit_fu_679_p3);
    brmerge_i_i_i_i_i_fu_745_p2 <= (underflow_fu_739_p2 or overflow_fu_715_p2);
    col_assign_2_i_fu_486_p2 <= std_logic_vector(unsigned(right_border_reg_933) - unsigned(x_i_reg_1011_pp0_iter2_reg));
    col_assign_fu_335_p2 <= std_logic_vector(unsigned(right_border_reg_933) - unsigned(t_V_1_reg_235));

    cols_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, cols_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            cols_blk_n <= cols_empty_n;
        else 
            cols_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    cols_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_anchor_x_empty_n, rows_empty_n, cols_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (cols_empty_n = ap_const_logic_0) or (rows_empty_n = ap_const_logic_0) or (p_anchor_x_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            cols_read <= ap_const_logic_1;
        else 
            cols_read <= ap_const_logic_0;
        end if; 
    end process;

    exitcond1_i_fu_280_p2 <= "1" when (t_V_reg_224 = heightloop_reg_909) else "0";
    exitcond2_i_fu_291_p2 <= "1" when (t_V_1_reg_235 = tmp_1_i_reg_946) else "0";
    i_V_fu_285_p2 <= std_logic_vector(unsigned(t_V_reg_224) + unsigned(ap_const_lv32_1));
    index_cast_i1_cast_fu_246_p3 <= 
        ap_const_lv32_3 when (p_anchor_x_dout(0) = '1') else 
        ap_const_lv32_0;
    isneg_fu_653_p3 <= p_Val2_11_0_0_6_i_fu_647_p2(42 downto 42);
    j_V_fu_296_p2 <= std_logic_vector(unsigned(t_V_1_reg_235) + unsigned(ap_const_lv32_1));
    l_border_buf_0_val_s_address0 <= ap_const_lv64_0(3 - 1 downto 0);
    l_border_buf_0_val_s_address1 <= tmp_50_i_fu_482_p1(3 - 1 downto 0);

    l_border_buf_0_val_s_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            l_border_buf_0_val_s_ce0 <= ap_const_logic_1;
        else 
            l_border_buf_0_val_s_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    l_border_buf_0_val_s_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            l_border_buf_0_val_s_ce1 <= ap_const_logic_1;
        else 
            l_border_buf_0_val_s_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    l_border_buf_0_val_s_we0_assign_proc : process(ap_block_pp0_stage0_11001, tmp_5_i_reg_983_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((tmp_5_i_reg_983_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            l_border_buf_0_val_s_we0 <= ap_const_logic_1;
        else 
            l_border_buf_0_val_s_we0 <= ap_const_logic_0;
        end if; 
    end process;

    newsignbit_0_not_i_i_fu_721_p2 <= (newsignbit_fu_679_p3 xor ap_const_lv1_1);
    newsignbit_fu_679_p3 <= p_Val2_11_0_0_6_i_fu_647_p2(34 downto 34);
    or_cond1_i_fu_345_p2 <= (tmp_7_i_fu_340_p2 or tmp_5_i_fu_312_p2);
    or_cond_i_fu_329_p2 <= (tmp_4_i_fu_307_p2 and rev_fu_323_p2);
    or_cond_i_i_fu_381_p2 <= (tmp_38_i_fu_376_p2 and rev1_fu_370_p2);
    overflow_fu_715_p2 <= (tmp_1_i_i_i_fu_709_p2 and brmerge_i_i_i_i_fu_703_p2);
        p_Val2_11_0_0_1_ca_fu_555_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(addconv_i_fu_549_p2),42));

        p_Val2_11_0_0_3_ca_fu_597_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_11_0_0_3_i_fu_591_p2),43));

    p_Val2_11_0_0_3_i_fu_591_p2 <= std_logic_vector(signed(tmp_cast_fu_579_p1) + signed(p_Val2_11_0_0_1_ca_fu_555_p1));
    p_Val2_11_0_0_6_i_fu_647_p2 <= std_logic_vector(signed(tmp112_cast_fu_643_p1) + signed(tmp7_fu_631_p2));
    p_Val2_2_fu_763_p3 <= 
        ap_const_lv35_3FFFFFFFF when (brmerge_i_i_i_i_i_fu_745_p2(0) = '1') else 
        p_Val2_s_fu_673_p2;
    p_Val2_4_i_i_i_fu_771_p3 <= 
        ap_const_lv35_400000000 when (underflow_fu_739_p2(0) = '1') else 
        p_Val2_s_fu_673_p2;
    p_Val2_s_fu_673_p2 <= std_logic_vector(unsigned(tmp10_fu_667_p2) + unsigned(tmp9_fu_661_p2));

    p_anchor_x_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_anchor_x_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_anchor_x_blk_n <= p_anchor_x_empty_n;
        else 
            p_anchor_x_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_anchor_x_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_anchor_x_empty_n, rows_empty_n, cols_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (cols_empty_n = ap_const_logic_0) or (rows_empty_n = ap_const_logic_0) or (p_anchor_x_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_anchor_x_read <= ap_const_logic_1;
        else 
            p_anchor_x_read <= ap_const_logic_0;
        end if; 
    end process;

    p_assign_1_i_fu_395_p3 <= 
        ap_const_lv32_0 when (tmp_2_fu_387_p3(0) = '1') else 
        right_border_reg_933;
    p_assign_fu_302_p2 <= std_logic_vector(unsigned(t_V_1_reg_235) + unsigned(tmp_2_cast_i_cast_reg_951));

    p_dst_data_stream_V_V_blk_n_assign_proc : process(p_dst_data_stream_V_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter5, tmp_9_i_reg_1007_pp0_iter4_reg)
    begin
        if (((tmp_9_i_reg_1007_pp0_iter4_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            p_dst_data_stream_V_V_blk_n <= p_dst_data_stream_V_V_full_n;
        else 
            p_dst_data_stream_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_dst_data_stream_V_V_din <= tmp_V_1_reg_1032;

    p_dst_data_stream_V_V_write_assign_proc : process(ap_enable_reg_pp0_iter5, tmp_9_i_reg_1007_pp0_iter4_reg, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_9_i_reg_1007_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_dst_data_stream_V_V_write <= ap_const_logic_1;
        else 
            p_dst_data_stream_V_V_write <= ap_const_logic_0;
        end if; 
    end process;

    p_not38_i_i_i_i_fu_727_p2 <= "0" when (tmp_s_fu_687_p4 = ap_const_lv8_FF) else "1";
    p_not_i_i_i_i_fu_697_p2 <= "0" when (tmp_s_fu_687_p4 = ap_const_lv8_0) else "1";

    p_src_V_V_blk_n_assign_proc : process(p_src_V_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, tmp_4_i_reg_979)
    begin
        if (((tmp_4_i_reg_979 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_src_V_V_blk_n <= p_src_V_V_empty_n;
        else 
            p_src_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_V_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_4_i_reg_979, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_4_i_reg_979 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_src_V_V_read <= ap_const_logic_1;
        else 
            p_src_V_V_read <= ap_const_logic_0;
        end if; 
    end process;

    r_border_buf_0_val_s_address0 <= tmp_45_i_fu_423_p1(3 - 1 downto 0);
    r_border_buf_0_val_s_address1 <= tmp_51_i_fu_490_p1(3 - 1 downto 0);

    r_border_buf_0_val_s_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            r_border_buf_0_val_s_ce0 <= ap_const_logic_1;
        else 
            r_border_buf_0_val_s_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    r_border_buf_0_val_s_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            r_border_buf_0_val_s_ce1 <= ap_const_logic_1;
        else 
            r_border_buf_0_val_s_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    r_border_buf_0_val_s_we0_assign_proc : process(ap_block_pp0_stage0_11001, or_cond_i_reg_987_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((or_cond_i_reg_987_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            r_border_buf_0_val_s_we0 <= ap_const_logic_1;
        else 
            r_border_buf_0_val_s_we0 <= ap_const_logic_0;
        end if; 
    end process;

    rev1_fu_370_p2 <= (tmp_1_fu_362_p3 xor ap_const_lv1_1);
    rev_fu_323_p2 <= (ult_fu_318_p2 xor ap_const_lv1_1);
    right_border_fu_254_p2 <= std_logic_vector(unsigned(cols_dout) + unsigned(ap_const_lv32_FFFFFFFF));
    row_buf_0_val_0_V_10_fu_446_p3 <= 
        row_buf_0_val_0_V_4_fu_134 when (index_reg_920(0) = '1') else 
        row_buf_0_val_0_V_3_fu_130;
    row_buf_0_val_0_V_11_fu_453_p3 <= 
        row_buf_0_val_0_V_s_fu_94 when (index_reg_920(0) = '1') else 
        row_buf_0_val_0_V_4_fu_134;
    row_buf_0_val_0_V_12_fu_460_p3 <= 
        row_buf_0_val_0_V_2_fu_126 when (index_reg_920(0) = '1') else 
        row_buf_0_val_0_V_s_fu_94;
    row_buf_val_V_0_0_2_1_fu_439_p3 <= 
        row_buf_0_val_0_V_3_fu_130 when (index_reg_920(0) = '1') else 
        row_buf_0_val_0_V_2_fu_126;

    rows_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, rows_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            rows_blk_n <= rows_empty_n;
        else 
            rows_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    rows_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_anchor_x_empty_n, rows_empty_n, cols_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (cols_empty_n = ap_const_logic_0) or (rows_empty_n = ap_const_logic_0) or (p_anchor_x_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            rows_read <= ap_const_logic_1;
        else 
            rows_read <= ap_const_logic_0;
        end if; 
    end process;

    sel_tmp3_fu_498_p3 <= 
        row_buf_0_val_0_V_1_fu_122 when (or_cond1_i_reg_996_pp0_iter3_reg(0) = '1') else 
        l_border_buf_0_val_s_q1;
    sel_tmp4_fu_505_p2 <= (tmp_8_i_reg_1002_pp0_iter3_reg and or_cond1_i_reg_996_pp0_iter3_reg);
    src_kernel_winX_temp_11_fu_509_p3 <= 
        r_border_buf_0_val_s_q1 when (sel_tmp4_fu_505_p2(0) = '1') else 
        sel_tmp3_fu_498_p3;
    stop_fu_260_p2 <= std_logic_vector(unsigned(cols_dout) + unsigned(index_cast_i1_cast_fu_246_p3));
    tmp10_fu_667_p2 <= std_logic_vector(unsigned(tmp_6_fu_605_p1) + unsigned(tmp_10_fu_627_p1));
        tmp112_cast_fu_643_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp8_fu_637_p2),43));

    tmp7_fu_631_p2 <= std_logic_vector(signed(p_Val2_11_0_0_3_ca_fu_597_p1) + signed(tmp_73_0_0_4_cast_i_fu_601_p1));
    tmp8_fu_637_p2 <= std_logic_vector(signed(tmp_73_0_0_5_cast_i_s_fu_615_p1) + signed(tmp_73_0_0_6_cast_i_s_fu_623_p1));
    tmp9_fu_661_p2 <= std_logic_vector(unsigned(tmp_4_fu_609_p2) + unsigned(tmp_9_fu_619_p1));
    tmp_10_fu_627_p1 <= src_kernel_winX_temp_11_fu_509_p3(35 - 1 downto 0);
    tmp_1_fu_362_p3 <= p_assign_fu_302_p2(31 downto 31);
    tmp_1_i_fu_266_p2 <= std_logic_vector(unsigned(cols_dout) + unsigned(ap_const_lv32_7));
    tmp_1_i_i_i_fu_709_p2 <= (isneg_fu_653_p3 xor ap_const_lv1_1);
    tmp_2_cast_i_cast_fu_272_p3 <= 
        ap_const_lv32_FFFFFFFC when (p_anchor_x_dout(0) = '1') else 
        ap_const_lv32_FFFFFFFF;
    tmp_2_fu_387_p3 <= p_assign_fu_302_p2(31 downto 31);
    tmp_38_i_fu_376_p2 <= "1" when (signed(p_assign_fu_302_p2) < signed(cols_read_reg_914)) else "0";
    tmp_3_fu_583_p1 <= tmp_7_fu_543_p2(35 - 1 downto 0);
    tmp_45_i_fu_423_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col_assign_reg_991_pp0_iter1_reg),64));
    tmp_4_fu_609_p2 <= std_logic_vector(unsigned(tmp_3_fu_583_p1) + unsigned(tmp_5_fu_587_p1));
    tmp_4_i_fu_307_p2 <= "1" when (unsigned(t_V_1_reg_235) < unsigned(cols_read_reg_914)) else "0";
    tmp_50_i_fu_482_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(x_i_reg_1011_pp0_iter2_reg),64));
    tmp_51_i_fu_490_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col_assign_2_i_fu_486_p2),64));
    tmp_5_fu_587_p1 <= tmp_8_fu_567_p2(35 - 1 downto 0);
    tmp_5_i_fu_312_p2 <= "1" when (t_V_1_reg_235 = ap_const_lv32_0) else "0";
    tmp_6_fu_605_p0 <= src_kernel_winX_temp_1_fu_102;
    tmp_6_fu_605_p1 <= tmp_6_fu_605_p0(35 - 1 downto 0);
    tmp_73_0_0_2_cast_i_s_fu_559_p0 <= src_kernel_winX_temp_3_fu_110;
        tmp_73_0_0_2_cast_i_s_fu_559_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_73_0_0_2_cast_i_s_fu_559_p0),41));

    tmp_73_0_0_3_cast_i_s_fu_563_p0 <= src_kernel_winX_temp_2_fu_106;
        tmp_73_0_0_3_cast_i_s_fu_563_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_73_0_0_3_cast_i_s_fu_563_p0),41));

    tmp_73_0_0_4_cast_i_fu_601_p0 <= src_kernel_winX_temp_1_fu_102;
        tmp_73_0_0_4_cast_i_fu_601_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_73_0_0_4_cast_i_fu_601_p0),43));

    tmp_73_0_0_5_cast_i_s_fu_615_p0 <= src_kernel_winX_temp_fu_98;
        tmp_73_0_0_5_cast_i_s_fu_615_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_73_0_0_5_cast_i_s_fu_615_p0),41));

        tmp_73_0_0_6_cast_i_s_fu_623_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(src_kernel_winX_temp_11_fu_509_p3),41));

    tmp_7_fu_543_p0 <= src_kernel_winX_temp_4_fu_114;
    tmp_7_fu_543_p1 <= src_kernel_winX_temp_5_fu_118;
    tmp_7_fu_543_p2 <= std_logic_vector(signed(tmp_7_fu_543_p0) + signed(tmp_7_fu_543_p1));
    tmp_7_i_fu_340_p2 <= "1" when (unsigned(t_V_1_reg_235) > unsigned(index_cast_i1_cast_reg_928)) else "0";
    tmp_8_fu_567_p0 <= src_kernel_winX_temp_2_fu_106;
    tmp_8_fu_567_p1 <= src_kernel_winX_temp_3_fu_110;
    tmp_8_fu_567_p2 <= std_logic_vector(signed(tmp_8_fu_567_p0) + signed(tmp_8_fu_567_p1));
    tmp_8_i_fu_351_p2 <= "1" when (unsigned(t_V_1_reg_235) > unsigned(stop_reg_941)) else "0";
    tmp_9_fu_619_p0 <= src_kernel_winX_temp_fu_98;
    tmp_9_fu_619_p1 <= tmp_9_fu_619_p0(35 - 1 downto 0);
    tmp_9_i_fu_356_p2 <= "1" when (unsigned(t_V_1_reg_235) > unsigned(ap_const_lv32_6)) else "0";
    tmp_V_1_fu_779_p3 <= 
        p_Val2_2_fu_763_p3 when (brmerge_i_i_i_fu_757_p2(0) = '1') else 
        p_Val2_4_i_i_i_fu_771_p3;
        tmp_cast_fu_579_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_fu_573_p2),42));

    tmp_fu_573_p2 <= std_logic_vector(signed(tmp_73_0_0_2_cast_i_s_fu_559_p1) + signed(tmp_73_0_0_3_cast_i_s_fu_563_p1));
    tmp_s_fu_687_p4 <= p_Val2_11_0_0_6_i_fu_647_p2(42 downto 35);
    ult_fu_318_p2 <= "1" when (unsigned(t_V_1_reg_235) < unsigned(right_border_reg_933)) else "0";
    underflow_fu_739_p2 <= (isneg_fu_653_p3 and brmerge39_i_i_i_i_fu_733_p2);
    underflow_not_i_i_i_fu_751_p2 <= (underflow_fu_739_p2 xor ap_const_lv1_1);
    x_i_fu_402_p3 <= 
        p_assign_fu_302_p2 when (or_cond_i_i_fu_381_p2(0) = '1') else 
        p_assign_1_i_fu_395_p3;
end behav;
