-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Haaris_Core is
generic (
    C_S_AXI_CTRL_ADDR_WIDTH : INTEGER := 6;
    C_S_AXI_CTRL_DATA_WIDTH : INTEGER := 32 );
port (
    s_axi_ctrl_AWVALID : IN STD_LOGIC;
    s_axi_ctrl_AWREADY : OUT STD_LOGIC;
    s_axi_ctrl_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_ADDR_WIDTH-1 downto 0);
    s_axi_ctrl_WVALID : IN STD_LOGIC;
    s_axi_ctrl_WREADY : OUT STD_LOGIC;
    s_axi_ctrl_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH-1 downto 0);
    s_axi_ctrl_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH/8-1 downto 0);
    s_axi_ctrl_ARVALID : IN STD_LOGIC;
    s_axi_ctrl_ARREADY : OUT STD_LOGIC;
    s_axi_ctrl_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_ADDR_WIDTH-1 downto 0);
    s_axi_ctrl_RVALID : OUT STD_LOGIC;
    s_axi_ctrl_RREADY : IN STD_LOGIC;
    s_axi_ctrl_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH-1 downto 0);
    s_axi_ctrl_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_ctrl_BVALID : OUT STD_LOGIC;
    s_axi_ctrl_BREADY : IN STD_LOGIC;
    s_axi_ctrl_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    interrupt : OUT STD_LOGIC;
    src_axis_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    src_axis_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
    src_axis_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
    src_axis_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    src_axis_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    src_axis_TID : IN STD_LOGIC_VECTOR (0 downto 0);
    src_axis_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
    dst_axis_TDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_axis_TKEEP : OUT STD_LOGIC_VECTOR (0 downto 0);
    dst_axis_TSTRB : OUT STD_LOGIC_VECTOR (0 downto 0);
    dst_axis_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    dst_axis_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    dst_axis_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
    dst_axis_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0);
    src_axis_TVALID : IN STD_LOGIC;
    src_axis_TREADY : OUT STD_LOGIC;
    dst_axis_TVALID : OUT STD_LOGIC;
    dst_axis_TREADY : IN STD_LOGIC );
end;


architecture behav of Haaris_Core is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "Haaris_Core,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7vx690tffg1761-3,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=8.750000,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=36,HLS_SYN_DSP=61,HLS_SYN_FF=18336,HLS_SYN_LUT=32634,HLS_VERSION=2018_2}";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_S_AXI_WSTRB_WIDTH : INTEGER range 63 downto 0 := 4;
    constant C_S_AXI_ADDR_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_ready : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal rows : STD_LOGIC_VECTOR (31 downto 0);
    signal cols : STD_LOGIC_VECTOR (31 downto 0);
    signal k : STD_LOGIC_VECTOR (31 downto 0);
    signal threshold : STD_LOGIC_VECTOR (31 downto 0);
    signal Haaris_Core_entry242_U0_ap_start : STD_LOGIC;
    signal Haaris_Core_entry242_U0_start_full_n : STD_LOGIC;
    signal Haaris_Core_entry242_U0_ap_done : STD_LOGIC;
    signal Haaris_Core_entry242_U0_ap_continue : STD_LOGIC;
    signal Haaris_Core_entry242_U0_ap_idle : STD_LOGIC;
    signal Haaris_Core_entry242_U0_ap_ready : STD_LOGIC;
    signal Haaris_Core_entry242_U0_start_out : STD_LOGIC;
    signal Haaris_Core_entry242_U0_start_write : STD_LOGIC;
    signal Haaris_Core_entry242_U0_rows_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Haaris_Core_entry242_U0_rows_out_write : STD_LOGIC;
    signal Haaris_Core_entry242_U0_rows_out1_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Haaris_Core_entry242_U0_rows_out1_write : STD_LOGIC;
    signal Haaris_Core_entry242_U0_cols_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Haaris_Core_entry242_U0_cols_out_write : STD_LOGIC;
    signal Haaris_Core_entry242_U0_cols_out2_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Haaris_Core_entry242_U0_cols_out2_write : STD_LOGIC;
    signal Haaris_Core_entry242_U0_k_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Haaris_Core_entry242_U0_k_out_write : STD_LOGIC;
    signal Haaris_Core_entry242_U0_threshold_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Haaris_Core_entry242_U0_threshold_out_write : STD_LOGIC;
    signal Block_Mat_exit47_pro_U0_ap_start : STD_LOGIC;
    signal Block_Mat_exit47_pro_U0_start_full_n : STD_LOGIC;
    signal Block_Mat_exit47_pro_U0_ap_done : STD_LOGIC;
    signal Block_Mat_exit47_pro_U0_ap_continue : STD_LOGIC;
    signal Block_Mat_exit47_pro_U0_ap_idle : STD_LOGIC;
    signal Block_Mat_exit47_pro_U0_ap_ready : STD_LOGIC;
    signal Block_Mat_exit47_pro_U0_start_out : STD_LOGIC;
    signal Block_Mat_exit47_pro_U0_start_write : STD_LOGIC;
    signal Block_Mat_exit47_pro_U0_rows_read : STD_LOGIC;
    signal Block_Mat_exit47_pro_U0_cols_read : STD_LOGIC;
    signal Block_Mat_exit47_pro_U0_src_rows_V_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Mat_exit47_pro_U0_src_rows_V_out_write : STD_LOGIC;
    signal Block_Mat_exit47_pro_U0_src_cols_V_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Mat_exit47_pro_U0_src_cols_V_out_write : STD_LOGIC;
    signal Block_Mat_exit47_pro_U0_gray_rows_V_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Mat_exit47_pro_U0_gray_rows_V_out_write : STD_LOGIC;
    signal Block_Mat_exit47_pro_U0_gray_cols_V_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Mat_exit47_pro_U0_gray_cols_V_out_write : STD_LOGIC;
    signal Block_Mat_exit47_pro_U0_dst0_rows_V_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Mat_exit47_pro_U0_dst0_rows_V_out_write : STD_LOGIC;
    signal Block_Mat_exit47_pro_U0_dst0_cols_V_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Mat_exit47_pro_U0_dst0_cols_V_out_write : STD_LOGIC;
    signal Block_Mat_exit47_pro_U0_dst1_rows_V_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Mat_exit47_pro_U0_dst1_rows_V_out_write : STD_LOGIC;
    signal Block_Mat_exit47_pro_U0_dst1_cols_V_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Mat_exit47_pro_U0_dst1_cols_V_out_write : STD_LOGIC;
    signal AXIvideo2Mat_U0_ap_start : STD_LOGIC;
    signal AXIvideo2Mat_U0_ap_done : STD_LOGIC;
    signal AXIvideo2Mat_U0_ap_continue : STD_LOGIC;
    signal AXIvideo2Mat_U0_ap_idle : STD_LOGIC;
    signal AXIvideo2Mat_U0_ap_ready : STD_LOGIC;
    signal AXIvideo2Mat_U0_start_out : STD_LOGIC;
    signal AXIvideo2Mat_U0_start_write : STD_LOGIC;
    signal AXIvideo2Mat_U0_src_axis_TREADY : STD_LOGIC;
    signal AXIvideo2Mat_U0_img_rows_V_read : STD_LOGIC;
    signal AXIvideo2Mat_U0_img_cols_V_read : STD_LOGIC;
    signal AXIvideo2Mat_U0_img_data_stream_0_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal AXIvideo2Mat_U0_img_data_stream_0_V_write : STD_LOGIC;
    signal AXIvideo2Mat_U0_img_data_stream_1_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal AXIvideo2Mat_U0_img_data_stream_1_V_write : STD_LOGIC;
    signal AXIvideo2Mat_U0_img_data_stream_2_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal AXIvideo2Mat_U0_img_data_stream_2_V_write : STD_LOGIC;
    signal AXIvideo2Mat_U0_img_rows_V_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal AXIvideo2Mat_U0_img_rows_V_out_write : STD_LOGIC;
    signal AXIvideo2Mat_U0_img_cols_V_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal AXIvideo2Mat_U0_img_cols_V_out_write : STD_LOGIC;
    signal CvtColor_U0_ap_start : STD_LOGIC;
    signal CvtColor_U0_ap_done : STD_LOGIC;
    signal CvtColor_U0_ap_continue : STD_LOGIC;
    signal CvtColor_U0_ap_idle : STD_LOGIC;
    signal CvtColor_U0_ap_ready : STD_LOGIC;
    signal CvtColor_U0_p_src_rows_V_read : STD_LOGIC;
    signal CvtColor_U0_p_src_cols_V_read : STD_LOGIC;
    signal CvtColor_U0_p_src_data_stream_0_V_read : STD_LOGIC;
    signal CvtColor_U0_p_src_data_stream_1_V_read : STD_LOGIC;
    signal CvtColor_U0_p_src_data_stream_2_V_read : STD_LOGIC;
    signal CvtColor_U0_p_dst_data_stream_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal CvtColor_U0_p_dst_data_stream_V_write : STD_LOGIC;
    signal Block_Mat_exit4750_p_U0_ap_start : STD_LOGIC;
    signal Block_Mat_exit4750_p_U0_start_full_n : STD_LOGIC;
    signal Block_Mat_exit4750_p_U0_ap_done : STD_LOGIC;
    signal Block_Mat_exit4750_p_U0_ap_continue : STD_LOGIC;
    signal Block_Mat_exit4750_p_U0_ap_idle : STD_LOGIC;
    signal Block_Mat_exit4750_p_U0_ap_ready : STD_LOGIC;
    signal Block_Mat_exit4750_p_U0_start_out : STD_LOGIC;
    signal Block_Mat_exit4750_p_U0_start_write : STD_LOGIC;
    signal Block_Mat_exit4750_p_U0_rows_read : STD_LOGIC;
    signal Block_Mat_exit4750_p_U0_cols_read : STD_LOGIC;
    signal Block_Mat_exit4750_p_U0_res_rows_V_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Mat_exit4750_p_U0_res_rows_V_out_write : STD_LOGIC;
    signal Block_Mat_exit4750_p_U0_res_cols_V_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Mat_exit4750_p_U0_res_cols_V_out_write : STD_LOGIC;
    signal Block_Mat_exit4750_p_U0_gray1_rows_V_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Mat_exit4750_p_U0_gray1_rows_V_out_write : STD_LOGIC;
    signal Block_Mat_exit4750_p_U0_gray1_cols_V_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Mat_exit4750_p_U0_gray1_cols_V_out_write : STD_LOGIC;
    signal Block_Mat_exit4750_p_U0_gray2_rows_V_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Mat_exit4750_p_U0_gray2_rows_V_out_write : STD_LOGIC;
    signal Block_Mat_exit4750_p_U0_gray2_cols_V_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Mat_exit4750_p_U0_gray2_cols_V_out_write : STD_LOGIC;
    signal Block_Mat_exit4750_p_U0_grad_x_rows_V_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Mat_exit4750_p_U0_grad_x_rows_V_out_write : STD_LOGIC;
    signal Block_Mat_exit4750_p_U0_grad_x_cols_V_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Mat_exit4750_p_U0_grad_x_cols_V_out_write : STD_LOGIC;
    signal Block_Mat_exit4750_p_U0_grad_x1_rows_V_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Mat_exit4750_p_U0_grad_x1_rows_V_out_write : STD_LOGIC;
    signal Block_Mat_exit4750_p_U0_grad_x1_cols_V_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Mat_exit4750_p_U0_grad_x1_cols_V_out_write : STD_LOGIC;
    signal Block_Mat_exit4750_p_U0_grad_x2_rows_V_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Mat_exit4750_p_U0_grad_x2_rows_V_out_write : STD_LOGIC;
    signal Block_Mat_exit4750_p_U0_grad_x2_cols_V_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Mat_exit4750_p_U0_grad_x2_cols_V_out_write : STD_LOGIC;
    signal Block_Mat_exit4750_p_U0_grad_x3_rows_V_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Mat_exit4750_p_U0_grad_x3_rows_V_out_write : STD_LOGIC;
    signal Block_Mat_exit4750_p_U0_grad_x3_cols_V_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Mat_exit4750_p_U0_grad_x3_cols_V_out_write : STD_LOGIC;
    signal Block_Mat_exit4750_p_U0_grad_y_rows_V_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Mat_exit4750_p_U0_grad_y_rows_V_out_write : STD_LOGIC;
    signal Block_Mat_exit4750_p_U0_grad_y_cols_V_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Mat_exit4750_p_U0_grad_y_cols_V_out_write : STD_LOGIC;
    signal Block_Mat_exit4750_p_U0_grad_y1_rows_V_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Mat_exit4750_p_U0_grad_y1_rows_V_out_write : STD_LOGIC;
    signal Block_Mat_exit4750_p_U0_grad_y1_cols_V_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Mat_exit4750_p_U0_grad_y1_cols_V_out_write : STD_LOGIC;
    signal Block_Mat_exit4750_p_U0_grad_y3_rows_V_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Mat_exit4750_p_U0_grad_y3_rows_V_out_write : STD_LOGIC;
    signal Block_Mat_exit4750_p_U0_grad_y3_cols_V_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Mat_exit4750_p_U0_grad_y3_cols_V_out_write : STD_LOGIC;
    signal Block_Mat_exit4750_p_U0_grad_xx_rows_V_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Mat_exit4750_p_U0_grad_xx_rows_V_out_write : STD_LOGIC;
    signal Block_Mat_exit4750_p_U0_grad_xx_cols_V_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Mat_exit4750_p_U0_grad_xx_cols_V_out_write : STD_LOGIC;
    signal Block_Mat_exit4750_p_U0_grad_yy_rows_V_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Mat_exit4750_p_U0_grad_yy_rows_V_out_write : STD_LOGIC;
    signal Block_Mat_exit4750_p_U0_grad_yy_cols_V_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Mat_exit4750_p_U0_grad_yy_cols_V_out_write : STD_LOGIC;
    signal Block_Mat_exit4750_p_U0_grad_xy_rows_V_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Mat_exit4750_p_U0_grad_xy_rows_V_out_write : STD_LOGIC;
    signal Block_Mat_exit4750_p_U0_grad_xy_cols_V_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Mat_exit4750_p_U0_grad_xy_cols_V_out_write : STD_LOGIC;
    signal Block_Mat_exit4750_p_U0_grad_gy_rows_V_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Mat_exit4750_p_U0_grad_gy_rows_V_out_write : STD_LOGIC;
    signal Block_Mat_exit4750_p_U0_grad_gy_cols_V_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Mat_exit4750_p_U0_grad_gy_cols_V_out_write : STD_LOGIC;
    signal Duplicate_1_U0_ap_start : STD_LOGIC;
    signal Duplicate_1_U0_ap_done : STD_LOGIC;
    signal Duplicate_1_U0_ap_continue : STD_LOGIC;
    signal Duplicate_1_U0_ap_idle : STD_LOGIC;
    signal Duplicate_1_U0_ap_ready : STD_LOGIC;
    signal Duplicate_1_U0_src_rows_V_read : STD_LOGIC;
    signal Duplicate_1_U0_src_cols_V_read : STD_LOGIC;
    signal Duplicate_1_U0_src_data_stream_V_read : STD_LOGIC;
    signal Duplicate_1_U0_dst1_data_stream_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal Duplicate_1_U0_dst1_data_stream_V_write : STD_LOGIC;
    signal Duplicate_1_U0_dst2_data_stream_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal Duplicate_1_U0_dst2_data_stream_V_write : STD_LOGIC;
    signal Sobel_U0_ap_start : STD_LOGIC;
    signal Sobel_U0_ap_done : STD_LOGIC;
    signal Sobel_U0_ap_continue : STD_LOGIC;
    signal Sobel_U0_ap_idle : STD_LOGIC;
    signal Sobel_U0_ap_ready : STD_LOGIC;
    signal Sobel_U0_p_src_rows_V_read : STD_LOGIC;
    signal Sobel_U0_p_src_cols_V_read : STD_LOGIC;
    signal Sobel_U0_p_src_data_stream_V_read : STD_LOGIC;
    signal Sobel_U0_p_dst_data_stream_V_V_din : STD_LOGIC_VECTOR (14 downto 0);
    signal Sobel_U0_p_dst_data_stream_V_V_write : STD_LOGIC;
    signal Duplicate181_U0_ap_start : STD_LOGIC;
    signal Duplicate181_U0_ap_done : STD_LOGIC;
    signal Duplicate181_U0_ap_continue : STD_LOGIC;
    signal Duplicate181_U0_ap_idle : STD_LOGIC;
    signal Duplicate181_U0_ap_ready : STD_LOGIC;
    signal Duplicate181_U0_src_rows_V_read : STD_LOGIC;
    signal Duplicate181_U0_src_cols_V_read : STD_LOGIC;
    signal Duplicate181_U0_src_data_stream_V_V_read : STD_LOGIC;
    signal Duplicate181_U0_dst1_data_stream_V_V_din : STD_LOGIC_VECTOR (14 downto 0);
    signal Duplicate181_U0_dst1_data_stream_V_V_write : STD_LOGIC;
    signal Duplicate181_U0_dst2_data_stream_V_V_din : STD_LOGIC_VECTOR (14 downto 0);
    signal Duplicate181_U0_dst2_data_stream_V_V_write : STD_LOGIC;
    signal Duplicate182_U0_ap_start : STD_LOGIC;
    signal Duplicate182_U0_ap_done : STD_LOGIC;
    signal Duplicate182_U0_ap_continue : STD_LOGIC;
    signal Duplicate182_U0_ap_idle : STD_LOGIC;
    signal Duplicate182_U0_ap_ready : STD_LOGIC;
    signal Duplicate182_U0_src_rows_V_read : STD_LOGIC;
    signal Duplicate182_U0_src_cols_V_read : STD_LOGIC;
    signal Duplicate182_U0_src_data_stream_V_V_read : STD_LOGIC;
    signal Duplicate182_U0_dst1_data_stream_V_V_din : STD_LOGIC_VECTOR (14 downto 0);
    signal Duplicate182_U0_dst1_data_stream_V_V_write : STD_LOGIC;
    signal Duplicate182_U0_dst2_data_stream_V_V_din : STD_LOGIC_VECTOR (14 downto 0);
    signal Duplicate182_U0_dst2_data_stream_V_V_write : STD_LOGIC;
    signal Sobel_1_U0_ap_start : STD_LOGIC;
    signal Sobel_1_U0_ap_done : STD_LOGIC;
    signal Sobel_1_U0_ap_continue : STD_LOGIC;
    signal Sobel_1_U0_ap_idle : STD_LOGIC;
    signal Sobel_1_U0_ap_ready : STD_LOGIC;
    signal Sobel_1_U0_p_src_rows_V_read : STD_LOGIC;
    signal Sobel_1_U0_p_src_cols_V_read : STD_LOGIC;
    signal Sobel_1_U0_p_src_data_stream_V_read : STD_LOGIC;
    signal Sobel_1_U0_p_dst_data_stream_V_V_din : STD_LOGIC_VECTOR (14 downto 0);
    signal Sobel_1_U0_p_dst_data_stream_V_V_write : STD_LOGIC;
    signal Duplicate183_U0_ap_start : STD_LOGIC;
    signal Duplicate183_U0_ap_done : STD_LOGIC;
    signal Duplicate183_U0_ap_continue : STD_LOGIC;
    signal Duplicate183_U0_ap_idle : STD_LOGIC;
    signal Duplicate183_U0_ap_ready : STD_LOGIC;
    signal Duplicate183_U0_src_rows_V_read : STD_LOGIC;
    signal Duplicate183_U0_src_cols_V_read : STD_LOGIC;
    signal Duplicate183_U0_src_data_stream_V_V_read : STD_LOGIC;
    signal Duplicate183_U0_dst1_data_stream_V_V_din : STD_LOGIC_VECTOR (14 downto 0);
    signal Duplicate183_U0_dst1_data_stream_V_V_write : STD_LOGIC;
    signal Duplicate183_U0_dst2_data_stream_V_V_din : STD_LOGIC_VECTOR (14 downto 0);
    signal Duplicate183_U0_dst2_data_stream_V_V_write : STD_LOGIC;
    signal Duplicate_U0_ap_start : STD_LOGIC;
    signal Duplicate_U0_ap_done : STD_LOGIC;
    signal Duplicate_U0_ap_continue : STD_LOGIC;
    signal Duplicate_U0_ap_idle : STD_LOGIC;
    signal Duplicate_U0_ap_ready : STD_LOGIC;
    signal Duplicate_U0_src_rows_V_read : STD_LOGIC;
    signal Duplicate_U0_src_cols_V_read : STD_LOGIC;
    signal Duplicate_U0_src_data_stream_V_V_read : STD_LOGIC;
    signal Duplicate_U0_dst1_data_stream_V_V_din : STD_LOGIC_VECTOR (14 downto 0);
    signal Duplicate_U0_dst1_data_stream_V_V_write : STD_LOGIC;
    signal Duplicate_U0_dst2_data_stream_V_V_din : STD_LOGIC_VECTOR (14 downto 0);
    signal Duplicate_U0_dst2_data_stream_V_V_write : STD_LOGIC;
    signal Mul184_U0_ap_start : STD_LOGIC;
    signal Mul184_U0_ap_done : STD_LOGIC;
    signal Mul184_U0_ap_continue : STD_LOGIC;
    signal Mul184_U0_ap_idle : STD_LOGIC;
    signal Mul184_U0_ap_ready : STD_LOGIC;
    signal Mul184_U0_src1_rows_V_read : STD_LOGIC;
    signal Mul184_U0_src1_cols_V_read : STD_LOGIC;
    signal Mul184_U0_src1_data_stream_V_V_read : STD_LOGIC;
    signal Mul184_U0_src2_data_stream_V_V_read : STD_LOGIC;
    signal Mul184_U0_dst_data_stream_V_V_din : STD_LOGIC_VECTOR (34 downto 0);
    signal Mul184_U0_dst_data_stream_V_V_write : STD_LOGIC;
    signal Mul185_U0_ap_start : STD_LOGIC;
    signal Mul185_U0_ap_done : STD_LOGIC;
    signal Mul185_U0_ap_continue : STD_LOGIC;
    signal Mul185_U0_ap_idle : STD_LOGIC;
    signal Mul185_U0_ap_ready : STD_LOGIC;
    signal Mul185_U0_src1_rows_V_read : STD_LOGIC;
    signal Mul185_U0_src1_cols_V_read : STD_LOGIC;
    signal Mul185_U0_src1_data_stream_V_V_read : STD_LOGIC;
    signal Mul185_U0_src2_data_stream_V_V_read : STD_LOGIC;
    signal Mul185_U0_dst_data_stream_V_V_din : STD_LOGIC_VECTOR (34 downto 0);
    signal Mul185_U0_dst_data_stream_V_V_write : STD_LOGIC;
    signal Mul_U0_ap_start : STD_LOGIC;
    signal Mul_U0_ap_done : STD_LOGIC;
    signal Mul_U0_ap_continue : STD_LOGIC;
    signal Mul_U0_ap_idle : STD_LOGIC;
    signal Mul_U0_ap_ready : STD_LOGIC;
    signal Mul_U0_src1_rows_V_read : STD_LOGIC;
    signal Mul_U0_src1_cols_V_read : STD_LOGIC;
    signal Mul_U0_src1_data_stream_V_V_read : STD_LOGIC;
    signal Mul_U0_src2_data_stream_V_V_read : STD_LOGIC;
    signal Mul_U0_dst_data_stream_V_V_din : STD_LOGIC_VECTOR (34 downto 0);
    signal Mul_U0_dst_data_stream_V_V_write : STD_LOGIC;
    signal BoxFilter186_U0_ap_start : STD_LOGIC;
    signal BoxFilter186_U0_ap_done : STD_LOGIC;
    signal BoxFilter186_U0_ap_continue : STD_LOGIC;
    signal BoxFilter186_U0_ap_idle : STD_LOGIC;
    signal BoxFilter186_U0_ap_ready : STD_LOGIC;
    signal BoxFilter186_U0_p_src_rows_V_read : STD_LOGIC;
    signal BoxFilter186_U0_p_src_cols_V_read : STD_LOGIC;
    signal BoxFilter186_U0_p_src_data_stream_V_V_read : STD_LOGIC;
    signal BoxFilter186_U0_p_dst_data_stream_V_V_din : STD_LOGIC_VECTOR (34 downto 0);
    signal BoxFilter186_U0_p_dst_data_stream_V_V_write : STD_LOGIC;
    signal BoxFilter187_U0_ap_start : STD_LOGIC;
    signal BoxFilter187_U0_ap_done : STD_LOGIC;
    signal BoxFilter187_U0_ap_continue : STD_LOGIC;
    signal BoxFilter187_U0_ap_idle : STD_LOGIC;
    signal BoxFilter187_U0_ap_ready : STD_LOGIC;
    signal BoxFilter187_U0_p_src_rows_V_read : STD_LOGIC;
    signal BoxFilter187_U0_p_src_cols_V_read : STD_LOGIC;
    signal BoxFilter187_U0_p_src_data_stream_V_V_read : STD_LOGIC;
    signal BoxFilter187_U0_p_dst_data_stream_V_V_din : STD_LOGIC_VECTOR (34 downto 0);
    signal BoxFilter187_U0_p_dst_data_stream_V_V_write : STD_LOGIC;
    signal BoxFilter_U0_ap_start : STD_LOGIC;
    signal BoxFilter_U0_ap_done : STD_LOGIC;
    signal BoxFilter_U0_ap_continue : STD_LOGIC;
    signal BoxFilter_U0_ap_idle : STD_LOGIC;
    signal BoxFilter_U0_ap_ready : STD_LOGIC;
    signal BoxFilter_U0_p_src_rows_V_read : STD_LOGIC;
    signal BoxFilter_U0_p_src_cols_V_read : STD_LOGIC;
    signal BoxFilter_U0_p_src_data_stream_V_V_read : STD_LOGIC;
    signal BoxFilter_U0_p_dst_data_stream_V_V_din : STD_LOGIC_VECTOR (34 downto 0);
    signal BoxFilter_U0_p_dst_data_stream_V_V_write : STD_LOGIC;
    signal CalCim188_U0_ap_start : STD_LOGIC;
    signal CalCim188_U0_ap_done : STD_LOGIC;
    signal CalCim188_U0_ap_continue : STD_LOGIC;
    signal CalCim188_U0_ap_idle : STD_LOGIC;
    signal CalCim188_U0_ap_ready : STD_LOGIC;
    signal CalCim188_U0_p_gradx_data_stream_V_V_read : STD_LOGIC;
    signal CalCim188_U0_p_grady_rows_V_read : STD_LOGIC;
    signal CalCim188_U0_p_grady_cols_V_read : STD_LOGIC;
    signal CalCim188_U0_p_grady_data_stream_V_V_read : STD_LOGIC;
    signal CalCim188_U0_p_gradxy_data_stream_V_V_read : STD_LOGIC;
    signal CalCim188_U0_p_dst_data_stream_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal CalCim188_U0_p_dst_data_stream_V_write : STD_LOGIC;
    signal CalCim188_U0_k_read : STD_LOGIC;
    signal FindMax_U0_ap_start : STD_LOGIC;
    signal FindMax_U0_ap_done : STD_LOGIC;
    signal FindMax_U0_ap_continue : STD_LOGIC;
    signal FindMax_U0_ap_idle : STD_LOGIC;
    signal FindMax_U0_ap_ready : STD_LOGIC;
    signal FindMax_U0_p_src_rows_V_read : STD_LOGIC;
    signal FindMax_U0_p_src_cols_V_read : STD_LOGIC;
    signal FindMax_U0_p_src_data_stream_V_read : STD_LOGIC;
    signal FindMax_U0_p_dst_data_stream_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal FindMax_U0_p_dst_data_stream_V_write : STD_LOGIC;
    signal FindMax_U0_threshold_read : STD_LOGIC;
    signal Dilate_U0_ap_start : STD_LOGIC;
    signal Dilate_U0_ap_done : STD_LOGIC;
    signal Dilate_U0_ap_continue : STD_LOGIC;
    signal Dilate_U0_ap_idle : STD_LOGIC;
    signal Dilate_U0_ap_ready : STD_LOGIC;
    signal Dilate_U0_p_src_rows_V_read : STD_LOGIC;
    signal Dilate_U0_p_src_cols_V_read : STD_LOGIC;
    signal Dilate_U0_p_src_data_stream_V_read : STD_LOGIC;
    signal Dilate_U0_p_dst_data_stream_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal Dilate_U0_p_dst_data_stream_V_write : STD_LOGIC;
    signal Mat2AXIvideo_U0_ap_start : STD_LOGIC;
    signal Mat2AXIvideo_U0_ap_done : STD_LOGIC;
    signal Mat2AXIvideo_U0_ap_continue : STD_LOGIC;
    signal Mat2AXIvideo_U0_ap_idle : STD_LOGIC;
    signal Mat2AXIvideo_U0_ap_ready : STD_LOGIC;
    signal Mat2AXIvideo_U0_img_rows_V_read : STD_LOGIC;
    signal Mat2AXIvideo_U0_img_cols_V_read : STD_LOGIC;
    signal Mat2AXIvideo_U0_img_data_stream_V_read : STD_LOGIC;
    signal Mat2AXIvideo_U0_dst_axis_TDATA : STD_LOGIC_VECTOR (7 downto 0);
    signal Mat2AXIvideo_U0_dst_axis_TVALID : STD_LOGIC;
    signal Mat2AXIvideo_U0_dst_axis_TKEEP : STD_LOGIC_VECTOR (0 downto 0);
    signal Mat2AXIvideo_U0_dst_axis_TSTRB : STD_LOGIC_VECTOR (0 downto 0);
    signal Mat2AXIvideo_U0_dst_axis_TUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Mat2AXIvideo_U0_dst_axis_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal Mat2AXIvideo_U0_dst_axis_TID : STD_LOGIC_VECTOR (0 downto 0);
    signal Mat2AXIvideo_U0_dst_axis_TDEST : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sync_continue : STD_LOGIC;
    signal rows_c_full_n : STD_LOGIC;
    signal rows_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal rows_c_empty_n : STD_LOGIC;
    signal rows_c90_full_n : STD_LOGIC;
    signal rows_c90_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal rows_c90_empty_n : STD_LOGIC;
    signal cols_c_full_n : STD_LOGIC;
    signal cols_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal cols_c_empty_n : STD_LOGIC;
    signal cols_c91_full_n : STD_LOGIC;
    signal cols_c91_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal cols_c91_empty_n : STD_LOGIC;
    signal k_c_full_n : STD_LOGIC;
    signal k_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal k_c_empty_n : STD_LOGIC;
    signal threshold_c_full_n : STD_LOGIC;
    signal threshold_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal threshold_c_empty_n : STD_LOGIC;
    signal src_rows_V_c_full_n : STD_LOGIC;
    signal src_rows_V_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal src_rows_V_c_empty_n : STD_LOGIC;
    signal src_cols_V_c_full_n : STD_LOGIC;
    signal src_cols_V_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal src_cols_V_c_empty_n : STD_LOGIC;
    signal gray_rows_V_c_full_n : STD_LOGIC;
    signal gray_rows_V_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal gray_rows_V_c_empty_n : STD_LOGIC;
    signal gray_cols_V_c_full_n : STD_LOGIC;
    signal gray_cols_V_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal gray_cols_V_c_empty_n : STD_LOGIC;
    signal dst0_rows_V_c_full_n : STD_LOGIC;
    signal dst0_rows_V_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal dst0_rows_V_c_empty_n : STD_LOGIC;
    signal dst0_cols_V_c_full_n : STD_LOGIC;
    signal dst0_cols_V_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal dst0_cols_V_c_empty_n : STD_LOGIC;
    signal dst1_rows_V_c_full_n : STD_LOGIC;
    signal dst1_rows_V_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal dst1_rows_V_c_empty_n : STD_LOGIC;
    signal dst1_cols_V_c_full_n : STD_LOGIC;
    signal dst1_cols_V_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal dst1_cols_V_c_empty_n : STD_LOGIC;
    signal src_data_stream_0_V_full_n : STD_LOGIC;
    signal src_data_stream_0_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal src_data_stream_0_V_empty_n : STD_LOGIC;
    signal src_data_stream_1_V_full_n : STD_LOGIC;
    signal src_data_stream_1_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal src_data_stream_1_V_empty_n : STD_LOGIC;
    signal src_data_stream_2_V_full_n : STD_LOGIC;
    signal src_data_stream_2_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal src_data_stream_2_V_empty_n : STD_LOGIC;
    signal src_rows_V_c92_full_n : STD_LOGIC;
    signal src_rows_V_c92_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal src_rows_V_c92_empty_n : STD_LOGIC;
    signal src_cols_V_c93_full_n : STD_LOGIC;
    signal src_cols_V_c93_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal src_cols_V_c93_empty_n : STD_LOGIC;
    signal gray_data_stream_0_s_full_n : STD_LOGIC;
    signal gray_data_stream_0_s_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal gray_data_stream_0_s_empty_n : STD_LOGIC;
    signal res_rows_V_c_full_n : STD_LOGIC;
    signal res_rows_V_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal res_rows_V_c_empty_n : STD_LOGIC;
    signal res_cols_V_c_full_n : STD_LOGIC;
    signal res_cols_V_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal res_cols_V_c_empty_n : STD_LOGIC;
    signal gray1_rows_V_c_full_n : STD_LOGIC;
    signal gray1_rows_V_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal gray1_rows_V_c_empty_n : STD_LOGIC;
    signal gray1_cols_V_c_full_n : STD_LOGIC;
    signal gray1_cols_V_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal gray1_cols_V_c_empty_n : STD_LOGIC;
    signal gray2_rows_V_c_full_n : STD_LOGIC;
    signal gray2_rows_V_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal gray2_rows_V_c_empty_n : STD_LOGIC;
    signal gray2_cols_V_c_full_n : STD_LOGIC;
    signal gray2_cols_V_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal gray2_cols_V_c_empty_n : STD_LOGIC;
    signal grad_x_rows_V_c_full_n : STD_LOGIC;
    signal grad_x_rows_V_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal grad_x_rows_V_c_empty_n : STD_LOGIC;
    signal grad_x_cols_V_c_full_n : STD_LOGIC;
    signal grad_x_cols_V_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal grad_x_cols_V_c_empty_n : STD_LOGIC;
    signal grad_x1_rows_V_c_full_n : STD_LOGIC;
    signal grad_x1_rows_V_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal grad_x1_rows_V_c_empty_n : STD_LOGIC;
    signal grad_x1_cols_V_c_full_n : STD_LOGIC;
    signal grad_x1_cols_V_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal grad_x1_cols_V_c_empty_n : STD_LOGIC;
    signal grad_x2_rows_V_c_full_n : STD_LOGIC;
    signal grad_x2_rows_V_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal grad_x2_rows_V_c_empty_n : STD_LOGIC;
    signal grad_x2_cols_V_c_full_n : STD_LOGIC;
    signal grad_x2_cols_V_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal grad_x2_cols_V_c_empty_n : STD_LOGIC;
    signal grad_x3_rows_V_c_full_n : STD_LOGIC;
    signal grad_x3_rows_V_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal grad_x3_rows_V_c_empty_n : STD_LOGIC;
    signal grad_x3_cols_V_c_full_n : STD_LOGIC;
    signal grad_x3_cols_V_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal grad_x3_cols_V_c_empty_n : STD_LOGIC;
    signal grad_y_rows_V_c_full_n : STD_LOGIC;
    signal grad_y_rows_V_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal grad_y_rows_V_c_empty_n : STD_LOGIC;
    signal grad_y_cols_V_c_full_n : STD_LOGIC;
    signal grad_y_cols_V_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal grad_y_cols_V_c_empty_n : STD_LOGIC;
    signal grad_y1_rows_V_c_full_n : STD_LOGIC;
    signal grad_y1_rows_V_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal grad_y1_rows_V_c_empty_n : STD_LOGIC;
    signal grad_y1_cols_V_c_full_n : STD_LOGIC;
    signal grad_y1_cols_V_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal grad_y1_cols_V_c_empty_n : STD_LOGIC;
    signal grad_y3_rows_V_c_full_n : STD_LOGIC;
    signal grad_y3_rows_V_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal grad_y3_rows_V_c_empty_n : STD_LOGIC;
    signal grad_y3_cols_V_c_full_n : STD_LOGIC;
    signal grad_y3_cols_V_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal grad_y3_cols_V_c_empty_n : STD_LOGIC;
    signal grad_xx_rows_V_c_full_n : STD_LOGIC;
    signal grad_xx_rows_V_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal grad_xx_rows_V_c_empty_n : STD_LOGIC;
    signal grad_xx_cols_V_c_full_n : STD_LOGIC;
    signal grad_xx_cols_V_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal grad_xx_cols_V_c_empty_n : STD_LOGIC;
    signal grad_yy_rows_V_c_full_n : STD_LOGIC;
    signal grad_yy_rows_V_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal grad_yy_rows_V_c_empty_n : STD_LOGIC;
    signal grad_yy_cols_V_c_full_n : STD_LOGIC;
    signal grad_yy_cols_V_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal grad_yy_cols_V_c_empty_n : STD_LOGIC;
    signal grad_xy_rows_V_c_full_n : STD_LOGIC;
    signal grad_xy_rows_V_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal grad_xy_rows_V_c_empty_n : STD_LOGIC;
    signal grad_xy_cols_V_c_full_n : STD_LOGIC;
    signal grad_xy_cols_V_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal grad_xy_cols_V_c_empty_n : STD_LOGIC;
    signal grad_gy_rows_V_c_full_n : STD_LOGIC;
    signal grad_gy_rows_V_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal grad_gy_rows_V_c_empty_n : STD_LOGIC;
    signal grad_gy_cols_V_c_full_n : STD_LOGIC;
    signal grad_gy_cols_V_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal grad_gy_cols_V_c_empty_n : STD_LOGIC;
    signal gray1_data_stream_0_full_n : STD_LOGIC;
    signal gray1_data_stream_0_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal gray1_data_stream_0_empty_n : STD_LOGIC;
    signal gray2_data_stream_0_full_n : STD_LOGIC;
    signal gray2_data_stream_0_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal gray2_data_stream_0_empty_n : STD_LOGIC;
    signal grad_x_data_stream_0_full_n : STD_LOGIC;
    signal grad_x_data_stream_0_dout : STD_LOGIC_VECTOR (14 downto 0);
    signal grad_x_data_stream_0_empty_n : STD_LOGIC;
    signal grad_x1_data_stream_s_full_n : STD_LOGIC;
    signal grad_x1_data_stream_s_dout : STD_LOGIC_VECTOR (14 downto 0);
    signal grad_x1_data_stream_s_empty_n : STD_LOGIC;
    signal grad_x2_data_stream_s_full_n : STD_LOGIC;
    signal grad_x2_data_stream_s_dout : STD_LOGIC_VECTOR (14 downto 0);
    signal grad_x2_data_stream_s_empty_n : STD_LOGIC;
    signal grad_x3_data_stream_s_full_n : STD_LOGIC;
    signal grad_x3_data_stream_s_dout : STD_LOGIC_VECTOR (14 downto 0);
    signal grad_x3_data_stream_s_empty_n : STD_LOGIC;
    signal grad_x4_data_stream_s_full_n : STD_LOGIC;
    signal grad_x4_data_stream_s_dout : STD_LOGIC_VECTOR (14 downto 0);
    signal grad_x4_data_stream_s_empty_n : STD_LOGIC;
    signal grad_y_data_stream_0_full_n : STD_LOGIC;
    signal grad_y_data_stream_0_dout : STD_LOGIC_VECTOR (14 downto 0);
    signal grad_y_data_stream_0_empty_n : STD_LOGIC;
    signal grad_y1_data_stream_s_full_n : STD_LOGIC;
    signal grad_y1_data_stream_s_dout : STD_LOGIC_VECTOR (14 downto 0);
    signal grad_y1_data_stream_s_empty_n : STD_LOGIC;
    signal grad_y2_data_stream_s_full_n : STD_LOGIC;
    signal grad_y2_data_stream_s_dout : STD_LOGIC_VECTOR (14 downto 0);
    signal grad_y2_data_stream_s_empty_n : STD_LOGIC;
    signal grad_y3_data_stream_s_full_n : STD_LOGIC;
    signal grad_y3_data_stream_s_dout : STD_LOGIC_VECTOR (14 downto 0);
    signal grad_y3_data_stream_s_empty_n : STD_LOGIC;
    signal grad_y4_data_stream_s_full_n : STD_LOGIC;
    signal grad_y4_data_stream_s_dout : STD_LOGIC_VECTOR (14 downto 0);
    signal grad_y4_data_stream_s_empty_n : STD_LOGIC;
    signal grad_xx_data_stream_s_full_n : STD_LOGIC;
    signal grad_xx_data_stream_s_dout : STD_LOGIC_VECTOR (34 downto 0);
    signal grad_xx_data_stream_s_empty_n : STD_LOGIC;
    signal grad_yy_data_stream_s_full_n : STD_LOGIC;
    signal grad_yy_data_stream_s_dout : STD_LOGIC_VECTOR (34 downto 0);
    signal grad_yy_data_stream_s_empty_n : STD_LOGIC;
    signal grad_xy_data_stream_s_full_n : STD_LOGIC;
    signal grad_xy_data_stream_s_dout : STD_LOGIC_VECTOR (34 downto 0);
    signal grad_xy_data_stream_s_empty_n : STD_LOGIC;
    signal grad_gx_data_stream_s_full_n : STD_LOGIC;
    signal grad_gx_data_stream_s_dout : STD_LOGIC_VECTOR (34 downto 0);
    signal grad_gx_data_stream_s_empty_n : STD_LOGIC;
    signal grad_gy_data_stream_s_full_n : STD_LOGIC;
    signal grad_gy_data_stream_s_dout : STD_LOGIC_VECTOR (34 downto 0);
    signal grad_gy_data_stream_s_empty_n : STD_LOGIC;
    signal grad_gxy_data_stream_full_n : STD_LOGIC;
    signal grad_gxy_data_stream_dout : STD_LOGIC_VECTOR (34 downto 0);
    signal grad_gxy_data_stream_empty_n : STD_LOGIC;
    signal res_data_stream_0_V_full_n : STD_LOGIC;
    signal res_data_stream_0_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal res_data_stream_0_V_empty_n : STD_LOGIC;
    signal dst0_data_stream_0_s_full_n : STD_LOGIC;
    signal dst0_data_stream_0_s_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal dst0_data_stream_0_s_empty_n : STD_LOGIC;
    signal dst1_data_stream_0_s_full_n : STD_LOGIC;
    signal dst1_data_stream_0_s_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal dst1_data_stream_0_s_empty_n : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal ap_sync_reg_AXIvideo2Mat_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_AXIvideo2Mat_U0_ap_ready : STD_LOGIC;
    signal AXIvideo2Mat_U0_ap_ready_count : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal ap_sync_reg_Haaris_Core_entry242_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_Haaris_Core_entry242_U0_ap_ready : STD_LOGIC;
    signal Haaris_Core_entry242_U0_ap_ready_count : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal start_for_Block_Mat_exit47_pro_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Block_Mat_exit47_pro_U0_full_n : STD_LOGIC;
    signal start_for_Block_Mat_exit47_pro_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Block_Mat_exit47_pro_U0_empty_n : STD_LOGIC;
    signal start_for_Block_Mat_exit4750_p_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Block_Mat_exit4750_p_U0_full_n : STD_LOGIC;
    signal start_for_Block_Mat_exit4750_p_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Block_Mat_exit4750_p_U0_empty_n : STD_LOGIC;
    signal start_for_CalCim188_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_CalCim188_U0_full_n : STD_LOGIC;
    signal start_for_CalCim188_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_CalCim188_U0_empty_n : STD_LOGIC;
    signal start_for_FindMax_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_FindMax_U0_full_n : STD_LOGIC;
    signal start_for_FindMax_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_FindMax_U0_empty_n : STD_LOGIC;
    signal start_for_Duplicate_1_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Duplicate_1_U0_full_n : STD_LOGIC;
    signal start_for_Duplicate_1_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Duplicate_1_U0_empty_n : STD_LOGIC;
    signal start_for_Dilate_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Dilate_U0_full_n : STD_LOGIC;
    signal start_for_Dilate_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Dilate_U0_empty_n : STD_LOGIC;
    signal start_for_Mat2AXIvideo_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Mat2AXIvideo_U0_full_n : STD_LOGIC;
    signal start_for_Mat2AXIvideo_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Mat2AXIvideo_U0_empty_n : STD_LOGIC;
    signal start_for_CvtColor_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_CvtColor_U0_full_n : STD_LOGIC;
    signal start_for_CvtColor_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_CvtColor_U0_empty_n : STD_LOGIC;
    signal CvtColor_U0_start_full_n : STD_LOGIC;
    signal CvtColor_U0_start_write : STD_LOGIC;
    signal start_for_Sobel_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Sobel_U0_full_n : STD_LOGIC;
    signal start_for_Sobel_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Sobel_U0_empty_n : STD_LOGIC;
    signal start_for_Duplicate181_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Duplicate181_U0_full_n : STD_LOGIC;
    signal start_for_Duplicate181_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Duplicate181_U0_empty_n : STD_LOGIC;
    signal start_for_Duplicate182_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Duplicate182_U0_full_n : STD_LOGIC;
    signal start_for_Duplicate182_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Duplicate182_U0_empty_n : STD_LOGIC;
    signal start_for_Sobel_1_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Sobel_1_U0_full_n : STD_LOGIC;
    signal start_for_Sobel_1_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Sobel_1_U0_empty_n : STD_LOGIC;
    signal start_for_Duplicate183_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Duplicate183_U0_full_n : STD_LOGIC;
    signal start_for_Duplicate183_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Duplicate183_U0_empty_n : STD_LOGIC;
    signal start_for_Duplicate_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Duplicate_U0_full_n : STD_LOGIC;
    signal start_for_Duplicate_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Duplicate_U0_empty_n : STD_LOGIC;
    signal start_for_Mul184_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Mul184_U0_full_n : STD_LOGIC;
    signal start_for_Mul184_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Mul184_U0_empty_n : STD_LOGIC;
    signal start_for_Mul185_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Mul185_U0_full_n : STD_LOGIC;
    signal start_for_Mul185_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Mul185_U0_empty_n : STD_LOGIC;
    signal start_for_Mul_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Mul_U0_full_n : STD_LOGIC;
    signal start_for_Mul_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Mul_U0_empty_n : STD_LOGIC;
    signal start_for_BoxFilter186_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_BoxFilter186_U0_full_n : STD_LOGIC;
    signal start_for_BoxFilter186_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_BoxFilter186_U0_empty_n : STD_LOGIC;
    signal start_for_BoxFilter187_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_BoxFilter187_U0_full_n : STD_LOGIC;
    signal start_for_BoxFilter187_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_BoxFilter187_U0_empty_n : STD_LOGIC;
    signal start_for_BoxFilter_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_BoxFilter_U0_full_n : STD_LOGIC;
    signal start_for_BoxFilter_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_BoxFilter_U0_empty_n : STD_LOGIC;
    signal Duplicate_1_U0_start_full_n : STD_LOGIC;
    signal Duplicate_1_U0_start_write : STD_LOGIC;
    signal Sobel_U0_start_full_n : STD_LOGIC;
    signal Sobel_U0_start_write : STD_LOGIC;
    signal Duplicate181_U0_start_full_n : STD_LOGIC;
    signal Duplicate181_U0_start_write : STD_LOGIC;
    signal Duplicate182_U0_start_full_n : STD_LOGIC;
    signal Duplicate182_U0_start_write : STD_LOGIC;
    signal Sobel_1_U0_start_full_n : STD_LOGIC;
    signal Sobel_1_U0_start_write : STD_LOGIC;
    signal Duplicate183_U0_start_full_n : STD_LOGIC;
    signal Duplicate183_U0_start_write : STD_LOGIC;
    signal Duplicate_U0_start_full_n : STD_LOGIC;
    signal Duplicate_U0_start_write : STD_LOGIC;
    signal Mul184_U0_start_full_n : STD_LOGIC;
    signal Mul184_U0_start_write : STD_LOGIC;
    signal Mul185_U0_start_full_n : STD_LOGIC;
    signal Mul185_U0_start_write : STD_LOGIC;
    signal Mul_U0_start_full_n : STD_LOGIC;
    signal Mul_U0_start_write : STD_LOGIC;
    signal BoxFilter186_U0_start_full_n : STD_LOGIC;
    signal BoxFilter186_U0_start_write : STD_LOGIC;
    signal BoxFilter187_U0_start_full_n : STD_LOGIC;
    signal BoxFilter187_U0_start_write : STD_LOGIC;
    signal BoxFilter_U0_start_full_n : STD_LOGIC;
    signal BoxFilter_U0_start_write : STD_LOGIC;
    signal CalCim188_U0_start_full_n : STD_LOGIC;
    signal CalCim188_U0_start_write : STD_LOGIC;
    signal FindMax_U0_start_full_n : STD_LOGIC;
    signal FindMax_U0_start_write : STD_LOGIC;
    signal Dilate_U0_start_full_n : STD_LOGIC;
    signal Dilate_U0_start_write : STD_LOGIC;
    signal Mat2AXIvideo_U0_start_full_n : STD_LOGIC;
    signal Mat2AXIvideo_U0_start_write : STD_LOGIC;

    component Haaris_Core_entry242 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        rows : IN STD_LOGIC_VECTOR (31 downto 0);
        cols : IN STD_LOGIC_VECTOR (31 downto 0);
        k : IN STD_LOGIC_VECTOR (31 downto 0);
        threshold : IN STD_LOGIC_VECTOR (31 downto 0);
        rows_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        rows_out_full_n : IN STD_LOGIC;
        rows_out_write : OUT STD_LOGIC;
        rows_out1_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        rows_out1_full_n : IN STD_LOGIC;
        rows_out1_write : OUT STD_LOGIC;
        cols_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        cols_out_full_n : IN STD_LOGIC;
        cols_out_write : OUT STD_LOGIC;
        cols_out2_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        cols_out2_full_n : IN STD_LOGIC;
        cols_out2_write : OUT STD_LOGIC;
        k_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        k_out_full_n : IN STD_LOGIC;
        k_out_write : OUT STD_LOGIC;
        threshold_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        threshold_out_full_n : IN STD_LOGIC;
        threshold_out_write : OUT STD_LOGIC );
    end component;


    component Block_Mat_exit47_pro IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        rows_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        rows_empty_n : IN STD_LOGIC;
        rows_read : OUT STD_LOGIC;
        cols_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        cols_empty_n : IN STD_LOGIC;
        cols_read : OUT STD_LOGIC;
        src_rows_V_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        src_rows_V_out_full_n : IN STD_LOGIC;
        src_rows_V_out_write : OUT STD_LOGIC;
        src_cols_V_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        src_cols_V_out_full_n : IN STD_LOGIC;
        src_cols_V_out_write : OUT STD_LOGIC;
        gray_rows_V_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        gray_rows_V_out_full_n : IN STD_LOGIC;
        gray_rows_V_out_write : OUT STD_LOGIC;
        gray_cols_V_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        gray_cols_V_out_full_n : IN STD_LOGIC;
        gray_cols_V_out_write : OUT STD_LOGIC;
        dst0_rows_V_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        dst0_rows_V_out_full_n : IN STD_LOGIC;
        dst0_rows_V_out_write : OUT STD_LOGIC;
        dst0_cols_V_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        dst0_cols_V_out_full_n : IN STD_LOGIC;
        dst0_cols_V_out_write : OUT STD_LOGIC;
        dst1_rows_V_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        dst1_rows_V_out_full_n : IN STD_LOGIC;
        dst1_rows_V_out_write : OUT STD_LOGIC;
        dst1_cols_V_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        dst1_cols_V_out_full_n : IN STD_LOGIC;
        dst1_cols_V_out_write : OUT STD_LOGIC );
    end component;


    component AXIvideo2Mat IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        src_axis_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        src_axis_TVALID : IN STD_LOGIC;
        src_axis_TREADY : OUT STD_LOGIC;
        src_axis_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
        src_axis_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        src_axis_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        src_axis_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        src_axis_TID : IN STD_LOGIC_VECTOR (0 downto 0);
        src_axis_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
        img_rows_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        img_rows_V_empty_n : IN STD_LOGIC;
        img_rows_V_read : OUT STD_LOGIC;
        img_cols_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        img_cols_V_empty_n : IN STD_LOGIC;
        img_cols_V_read : OUT STD_LOGIC;
        img_data_stream_0_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_data_stream_0_V_full_n : IN STD_LOGIC;
        img_data_stream_0_V_write : OUT STD_LOGIC;
        img_data_stream_1_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_data_stream_1_V_full_n : IN STD_LOGIC;
        img_data_stream_1_V_write : OUT STD_LOGIC;
        img_data_stream_2_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_data_stream_2_V_full_n : IN STD_LOGIC;
        img_data_stream_2_V_write : OUT STD_LOGIC;
        img_rows_V_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        img_rows_V_out_full_n : IN STD_LOGIC;
        img_rows_V_out_write : OUT STD_LOGIC;
        img_cols_V_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        img_cols_V_out_full_n : IN STD_LOGIC;
        img_cols_V_out_write : OUT STD_LOGIC );
    end component;


    component CvtColor IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_src_rows_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        p_src_rows_V_empty_n : IN STD_LOGIC;
        p_src_rows_V_read : OUT STD_LOGIC;
        p_src_cols_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        p_src_cols_V_empty_n : IN STD_LOGIC;
        p_src_cols_V_read : OUT STD_LOGIC;
        p_src_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        p_src_data_stream_0_V_empty_n : IN STD_LOGIC;
        p_src_data_stream_0_V_read : OUT STD_LOGIC;
        p_src_data_stream_1_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        p_src_data_stream_1_V_empty_n : IN STD_LOGIC;
        p_src_data_stream_1_V_read : OUT STD_LOGIC;
        p_src_data_stream_2_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        p_src_data_stream_2_V_empty_n : IN STD_LOGIC;
        p_src_data_stream_2_V_read : OUT STD_LOGIC;
        p_dst_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_dst_data_stream_V_full_n : IN STD_LOGIC;
        p_dst_data_stream_V_write : OUT STD_LOGIC );
    end component;


    component Block_Mat_exit4750_p IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        rows_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        rows_empty_n : IN STD_LOGIC;
        rows_read : OUT STD_LOGIC;
        cols_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        cols_empty_n : IN STD_LOGIC;
        cols_read : OUT STD_LOGIC;
        res_rows_V_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        res_rows_V_out_full_n : IN STD_LOGIC;
        res_rows_V_out_write : OUT STD_LOGIC;
        res_cols_V_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        res_cols_V_out_full_n : IN STD_LOGIC;
        res_cols_V_out_write : OUT STD_LOGIC;
        gray1_rows_V_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        gray1_rows_V_out_full_n : IN STD_LOGIC;
        gray1_rows_V_out_write : OUT STD_LOGIC;
        gray1_cols_V_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        gray1_cols_V_out_full_n : IN STD_LOGIC;
        gray1_cols_V_out_write : OUT STD_LOGIC;
        gray2_rows_V_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        gray2_rows_V_out_full_n : IN STD_LOGIC;
        gray2_rows_V_out_write : OUT STD_LOGIC;
        gray2_cols_V_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        gray2_cols_V_out_full_n : IN STD_LOGIC;
        gray2_cols_V_out_write : OUT STD_LOGIC;
        grad_x_rows_V_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        grad_x_rows_V_out_full_n : IN STD_LOGIC;
        grad_x_rows_V_out_write : OUT STD_LOGIC;
        grad_x_cols_V_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        grad_x_cols_V_out_full_n : IN STD_LOGIC;
        grad_x_cols_V_out_write : OUT STD_LOGIC;
        grad_x1_rows_V_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        grad_x1_rows_V_out_full_n : IN STD_LOGIC;
        grad_x1_rows_V_out_write : OUT STD_LOGIC;
        grad_x1_cols_V_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        grad_x1_cols_V_out_full_n : IN STD_LOGIC;
        grad_x1_cols_V_out_write : OUT STD_LOGIC;
        grad_x2_rows_V_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        grad_x2_rows_V_out_full_n : IN STD_LOGIC;
        grad_x2_rows_V_out_write : OUT STD_LOGIC;
        grad_x2_cols_V_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        grad_x2_cols_V_out_full_n : IN STD_LOGIC;
        grad_x2_cols_V_out_write : OUT STD_LOGIC;
        grad_x3_rows_V_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        grad_x3_rows_V_out_full_n : IN STD_LOGIC;
        grad_x3_rows_V_out_write : OUT STD_LOGIC;
        grad_x3_cols_V_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        grad_x3_cols_V_out_full_n : IN STD_LOGIC;
        grad_x3_cols_V_out_write : OUT STD_LOGIC;
        grad_y_rows_V_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        grad_y_rows_V_out_full_n : IN STD_LOGIC;
        grad_y_rows_V_out_write : OUT STD_LOGIC;
        grad_y_cols_V_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        grad_y_cols_V_out_full_n : IN STD_LOGIC;
        grad_y_cols_V_out_write : OUT STD_LOGIC;
        grad_y1_rows_V_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        grad_y1_rows_V_out_full_n : IN STD_LOGIC;
        grad_y1_rows_V_out_write : OUT STD_LOGIC;
        grad_y1_cols_V_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        grad_y1_cols_V_out_full_n : IN STD_LOGIC;
        grad_y1_cols_V_out_write : OUT STD_LOGIC;
        grad_y3_rows_V_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        grad_y3_rows_V_out_full_n : IN STD_LOGIC;
        grad_y3_rows_V_out_write : OUT STD_LOGIC;
        grad_y3_cols_V_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        grad_y3_cols_V_out_full_n : IN STD_LOGIC;
        grad_y3_cols_V_out_write : OUT STD_LOGIC;
        grad_xx_rows_V_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        grad_xx_rows_V_out_full_n : IN STD_LOGIC;
        grad_xx_rows_V_out_write : OUT STD_LOGIC;
        grad_xx_cols_V_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        grad_xx_cols_V_out_full_n : IN STD_LOGIC;
        grad_xx_cols_V_out_write : OUT STD_LOGIC;
        grad_yy_rows_V_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        grad_yy_rows_V_out_full_n : IN STD_LOGIC;
        grad_yy_rows_V_out_write : OUT STD_LOGIC;
        grad_yy_cols_V_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        grad_yy_cols_V_out_full_n : IN STD_LOGIC;
        grad_yy_cols_V_out_write : OUT STD_LOGIC;
        grad_xy_rows_V_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        grad_xy_rows_V_out_full_n : IN STD_LOGIC;
        grad_xy_rows_V_out_write : OUT STD_LOGIC;
        grad_xy_cols_V_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        grad_xy_cols_V_out_full_n : IN STD_LOGIC;
        grad_xy_cols_V_out_write : OUT STD_LOGIC;
        grad_gy_rows_V_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        grad_gy_rows_V_out_full_n : IN STD_LOGIC;
        grad_gy_rows_V_out_write : OUT STD_LOGIC;
        grad_gy_cols_V_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        grad_gy_cols_V_out_full_n : IN STD_LOGIC;
        grad_gy_cols_V_out_write : OUT STD_LOGIC );
    end component;


    component Duplicate_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        src_rows_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        src_rows_V_empty_n : IN STD_LOGIC;
        src_rows_V_read : OUT STD_LOGIC;
        src_cols_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        src_cols_V_empty_n : IN STD_LOGIC;
        src_cols_V_read : OUT STD_LOGIC;
        src_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        src_data_stream_V_empty_n : IN STD_LOGIC;
        src_data_stream_V_read : OUT STD_LOGIC;
        dst1_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        dst1_data_stream_V_full_n : IN STD_LOGIC;
        dst1_data_stream_V_write : OUT STD_LOGIC;
        dst2_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        dst2_data_stream_V_full_n : IN STD_LOGIC;
        dst2_data_stream_V_write : OUT STD_LOGIC );
    end component;


    component Sobel IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_src_rows_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        p_src_rows_V_empty_n : IN STD_LOGIC;
        p_src_rows_V_read : OUT STD_LOGIC;
        p_src_cols_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        p_src_cols_V_empty_n : IN STD_LOGIC;
        p_src_cols_V_read : OUT STD_LOGIC;
        p_src_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        p_src_data_stream_V_empty_n : IN STD_LOGIC;
        p_src_data_stream_V_read : OUT STD_LOGIC;
        p_dst_data_stream_V_V_din : OUT STD_LOGIC_VECTOR (14 downto 0);
        p_dst_data_stream_V_V_full_n : IN STD_LOGIC;
        p_dst_data_stream_V_V_write : OUT STD_LOGIC );
    end component;


    component Duplicate181 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        src_rows_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        src_rows_V_empty_n : IN STD_LOGIC;
        src_rows_V_read : OUT STD_LOGIC;
        src_cols_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        src_cols_V_empty_n : IN STD_LOGIC;
        src_cols_V_read : OUT STD_LOGIC;
        src_data_stream_V_V_dout : IN STD_LOGIC_VECTOR (14 downto 0);
        src_data_stream_V_V_empty_n : IN STD_LOGIC;
        src_data_stream_V_V_read : OUT STD_LOGIC;
        dst1_data_stream_V_V_din : OUT STD_LOGIC_VECTOR (14 downto 0);
        dst1_data_stream_V_V_full_n : IN STD_LOGIC;
        dst1_data_stream_V_V_write : OUT STD_LOGIC;
        dst2_data_stream_V_V_din : OUT STD_LOGIC_VECTOR (14 downto 0);
        dst2_data_stream_V_V_full_n : IN STD_LOGIC;
        dst2_data_stream_V_V_write : OUT STD_LOGIC );
    end component;


    component Duplicate182 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        src_rows_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        src_rows_V_empty_n : IN STD_LOGIC;
        src_rows_V_read : OUT STD_LOGIC;
        src_cols_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        src_cols_V_empty_n : IN STD_LOGIC;
        src_cols_V_read : OUT STD_LOGIC;
        src_data_stream_V_V_dout : IN STD_LOGIC_VECTOR (14 downto 0);
        src_data_stream_V_V_empty_n : IN STD_LOGIC;
        src_data_stream_V_V_read : OUT STD_LOGIC;
        dst1_data_stream_V_V_din : OUT STD_LOGIC_VECTOR (14 downto 0);
        dst1_data_stream_V_V_full_n : IN STD_LOGIC;
        dst1_data_stream_V_V_write : OUT STD_LOGIC;
        dst2_data_stream_V_V_din : OUT STD_LOGIC_VECTOR (14 downto 0);
        dst2_data_stream_V_V_full_n : IN STD_LOGIC;
        dst2_data_stream_V_V_write : OUT STD_LOGIC );
    end component;


    component Sobel_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_src_rows_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        p_src_rows_V_empty_n : IN STD_LOGIC;
        p_src_rows_V_read : OUT STD_LOGIC;
        p_src_cols_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        p_src_cols_V_empty_n : IN STD_LOGIC;
        p_src_cols_V_read : OUT STD_LOGIC;
        p_src_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        p_src_data_stream_V_empty_n : IN STD_LOGIC;
        p_src_data_stream_V_read : OUT STD_LOGIC;
        p_dst_data_stream_V_V_din : OUT STD_LOGIC_VECTOR (14 downto 0);
        p_dst_data_stream_V_V_full_n : IN STD_LOGIC;
        p_dst_data_stream_V_V_write : OUT STD_LOGIC );
    end component;


    component Duplicate183 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        src_rows_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        src_rows_V_empty_n : IN STD_LOGIC;
        src_rows_V_read : OUT STD_LOGIC;
        src_cols_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        src_cols_V_empty_n : IN STD_LOGIC;
        src_cols_V_read : OUT STD_LOGIC;
        src_data_stream_V_V_dout : IN STD_LOGIC_VECTOR (14 downto 0);
        src_data_stream_V_V_empty_n : IN STD_LOGIC;
        src_data_stream_V_V_read : OUT STD_LOGIC;
        dst1_data_stream_V_V_din : OUT STD_LOGIC_VECTOR (14 downto 0);
        dst1_data_stream_V_V_full_n : IN STD_LOGIC;
        dst1_data_stream_V_V_write : OUT STD_LOGIC;
        dst2_data_stream_V_V_din : OUT STD_LOGIC_VECTOR (14 downto 0);
        dst2_data_stream_V_V_full_n : IN STD_LOGIC;
        dst2_data_stream_V_V_write : OUT STD_LOGIC );
    end component;


    component Duplicate IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        src_rows_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        src_rows_V_empty_n : IN STD_LOGIC;
        src_rows_V_read : OUT STD_LOGIC;
        src_cols_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        src_cols_V_empty_n : IN STD_LOGIC;
        src_cols_V_read : OUT STD_LOGIC;
        src_data_stream_V_V_dout : IN STD_LOGIC_VECTOR (14 downto 0);
        src_data_stream_V_V_empty_n : IN STD_LOGIC;
        src_data_stream_V_V_read : OUT STD_LOGIC;
        dst1_data_stream_V_V_din : OUT STD_LOGIC_VECTOR (14 downto 0);
        dst1_data_stream_V_V_full_n : IN STD_LOGIC;
        dst1_data_stream_V_V_write : OUT STD_LOGIC;
        dst2_data_stream_V_V_din : OUT STD_LOGIC_VECTOR (14 downto 0);
        dst2_data_stream_V_V_full_n : IN STD_LOGIC;
        dst2_data_stream_V_V_write : OUT STD_LOGIC );
    end component;


    component Mul184 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        src1_rows_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        src1_rows_V_empty_n : IN STD_LOGIC;
        src1_rows_V_read : OUT STD_LOGIC;
        src1_cols_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        src1_cols_V_empty_n : IN STD_LOGIC;
        src1_cols_V_read : OUT STD_LOGIC;
        src1_data_stream_V_V_dout : IN STD_LOGIC_VECTOR (14 downto 0);
        src1_data_stream_V_V_empty_n : IN STD_LOGIC;
        src1_data_stream_V_V_read : OUT STD_LOGIC;
        src2_data_stream_V_V_dout : IN STD_LOGIC_VECTOR (14 downto 0);
        src2_data_stream_V_V_empty_n : IN STD_LOGIC;
        src2_data_stream_V_V_read : OUT STD_LOGIC;
        dst_data_stream_V_V_din : OUT STD_LOGIC_VECTOR (34 downto 0);
        dst_data_stream_V_V_full_n : IN STD_LOGIC;
        dst_data_stream_V_V_write : OUT STD_LOGIC );
    end component;


    component Mul185 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        src1_rows_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        src1_rows_V_empty_n : IN STD_LOGIC;
        src1_rows_V_read : OUT STD_LOGIC;
        src1_cols_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        src1_cols_V_empty_n : IN STD_LOGIC;
        src1_cols_V_read : OUT STD_LOGIC;
        src1_data_stream_V_V_dout : IN STD_LOGIC_VECTOR (14 downto 0);
        src1_data_stream_V_V_empty_n : IN STD_LOGIC;
        src1_data_stream_V_V_read : OUT STD_LOGIC;
        src2_data_stream_V_V_dout : IN STD_LOGIC_VECTOR (14 downto 0);
        src2_data_stream_V_V_empty_n : IN STD_LOGIC;
        src2_data_stream_V_V_read : OUT STD_LOGIC;
        dst_data_stream_V_V_din : OUT STD_LOGIC_VECTOR (34 downto 0);
        dst_data_stream_V_V_full_n : IN STD_LOGIC;
        dst_data_stream_V_V_write : OUT STD_LOGIC );
    end component;


    component Mul IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        src1_rows_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        src1_rows_V_empty_n : IN STD_LOGIC;
        src1_rows_V_read : OUT STD_LOGIC;
        src1_cols_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        src1_cols_V_empty_n : IN STD_LOGIC;
        src1_cols_V_read : OUT STD_LOGIC;
        src1_data_stream_V_V_dout : IN STD_LOGIC_VECTOR (14 downto 0);
        src1_data_stream_V_V_empty_n : IN STD_LOGIC;
        src1_data_stream_V_V_read : OUT STD_LOGIC;
        src2_data_stream_V_V_dout : IN STD_LOGIC_VECTOR (14 downto 0);
        src2_data_stream_V_V_empty_n : IN STD_LOGIC;
        src2_data_stream_V_V_read : OUT STD_LOGIC;
        dst_data_stream_V_V_din : OUT STD_LOGIC_VECTOR (34 downto 0);
        dst_data_stream_V_V_full_n : IN STD_LOGIC;
        dst_data_stream_V_V_write : OUT STD_LOGIC );
    end component;


    component BoxFilter186 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_src_rows_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        p_src_rows_V_empty_n : IN STD_LOGIC;
        p_src_rows_V_read : OUT STD_LOGIC;
        p_src_cols_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        p_src_cols_V_empty_n : IN STD_LOGIC;
        p_src_cols_V_read : OUT STD_LOGIC;
        p_src_data_stream_V_V_dout : IN STD_LOGIC_VECTOR (34 downto 0);
        p_src_data_stream_V_V_empty_n : IN STD_LOGIC;
        p_src_data_stream_V_V_read : OUT STD_LOGIC;
        p_dst_data_stream_V_V_din : OUT STD_LOGIC_VECTOR (34 downto 0);
        p_dst_data_stream_V_V_full_n : IN STD_LOGIC;
        p_dst_data_stream_V_V_write : OUT STD_LOGIC );
    end component;


    component BoxFilter187 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_src_rows_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        p_src_rows_V_empty_n : IN STD_LOGIC;
        p_src_rows_V_read : OUT STD_LOGIC;
        p_src_cols_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        p_src_cols_V_empty_n : IN STD_LOGIC;
        p_src_cols_V_read : OUT STD_LOGIC;
        p_src_data_stream_V_V_dout : IN STD_LOGIC_VECTOR (34 downto 0);
        p_src_data_stream_V_V_empty_n : IN STD_LOGIC;
        p_src_data_stream_V_V_read : OUT STD_LOGIC;
        p_dst_data_stream_V_V_din : OUT STD_LOGIC_VECTOR (34 downto 0);
        p_dst_data_stream_V_V_full_n : IN STD_LOGIC;
        p_dst_data_stream_V_V_write : OUT STD_LOGIC );
    end component;


    component BoxFilter IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_src_rows_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        p_src_rows_V_empty_n : IN STD_LOGIC;
        p_src_rows_V_read : OUT STD_LOGIC;
        p_src_cols_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        p_src_cols_V_empty_n : IN STD_LOGIC;
        p_src_cols_V_read : OUT STD_LOGIC;
        p_src_data_stream_V_V_dout : IN STD_LOGIC_VECTOR (34 downto 0);
        p_src_data_stream_V_V_empty_n : IN STD_LOGIC;
        p_src_data_stream_V_V_read : OUT STD_LOGIC;
        p_dst_data_stream_V_V_din : OUT STD_LOGIC_VECTOR (34 downto 0);
        p_dst_data_stream_V_V_full_n : IN STD_LOGIC;
        p_dst_data_stream_V_V_write : OUT STD_LOGIC );
    end component;


    component CalCim188 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_gradx_data_stream_V_V_dout : IN STD_LOGIC_VECTOR (34 downto 0);
        p_gradx_data_stream_V_V_empty_n : IN STD_LOGIC;
        p_gradx_data_stream_V_V_read : OUT STD_LOGIC;
        p_grady_rows_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        p_grady_rows_V_empty_n : IN STD_LOGIC;
        p_grady_rows_V_read : OUT STD_LOGIC;
        p_grady_cols_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        p_grady_cols_V_empty_n : IN STD_LOGIC;
        p_grady_cols_V_read : OUT STD_LOGIC;
        p_grady_data_stream_V_V_dout : IN STD_LOGIC_VECTOR (34 downto 0);
        p_grady_data_stream_V_V_empty_n : IN STD_LOGIC;
        p_grady_data_stream_V_V_read : OUT STD_LOGIC;
        p_gradxy_data_stream_V_V_dout : IN STD_LOGIC_VECTOR (34 downto 0);
        p_gradxy_data_stream_V_V_empty_n : IN STD_LOGIC;
        p_gradxy_data_stream_V_V_read : OUT STD_LOGIC;
        p_dst_data_stream_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        p_dst_data_stream_V_full_n : IN STD_LOGIC;
        p_dst_data_stream_V_write : OUT STD_LOGIC;
        k_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        k_empty_n : IN STD_LOGIC;
        k_read : OUT STD_LOGIC );
    end component;


    component FindMax IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_src_rows_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        p_src_rows_V_empty_n : IN STD_LOGIC;
        p_src_rows_V_read : OUT STD_LOGIC;
        p_src_cols_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        p_src_cols_V_empty_n : IN STD_LOGIC;
        p_src_cols_V_read : OUT STD_LOGIC;
        p_src_data_stream_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        p_src_data_stream_V_empty_n : IN STD_LOGIC;
        p_src_data_stream_V_read : OUT STD_LOGIC;
        p_dst_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_dst_data_stream_V_full_n : IN STD_LOGIC;
        p_dst_data_stream_V_write : OUT STD_LOGIC;
        threshold_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        threshold_empty_n : IN STD_LOGIC;
        threshold_read : OUT STD_LOGIC );
    end component;


    component Dilate IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_src_rows_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        p_src_rows_V_empty_n : IN STD_LOGIC;
        p_src_rows_V_read : OUT STD_LOGIC;
        p_src_cols_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        p_src_cols_V_empty_n : IN STD_LOGIC;
        p_src_cols_V_read : OUT STD_LOGIC;
        p_src_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        p_src_data_stream_V_empty_n : IN STD_LOGIC;
        p_src_data_stream_V_read : OUT STD_LOGIC;
        p_dst_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_dst_data_stream_V_full_n : IN STD_LOGIC;
        p_dst_data_stream_V_write : OUT STD_LOGIC );
    end component;


    component Mat2AXIvideo IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        img_rows_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        img_rows_V_empty_n : IN STD_LOGIC;
        img_rows_V_read : OUT STD_LOGIC;
        img_cols_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        img_cols_V_empty_n : IN STD_LOGIC;
        img_cols_V_read : OUT STD_LOGIC;
        img_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        img_data_stream_V_empty_n : IN STD_LOGIC;
        img_data_stream_V_read : OUT STD_LOGIC;
        dst_axis_TDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
        dst_axis_TVALID : OUT STD_LOGIC;
        dst_axis_TREADY : IN STD_LOGIC;
        dst_axis_TKEEP : OUT STD_LOGIC_VECTOR (0 downto 0);
        dst_axis_TSTRB : OUT STD_LOGIC_VECTOR (0 downto 0);
        dst_axis_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        dst_axis_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
        dst_axis_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
        dst_axis_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component fifo_w32_d2_A_x IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w32_d11_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w32_d12_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w32_d4_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w32_d13_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w8_d2_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w32_d5_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w32_d6_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w32_d7_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w32_d8_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w32_d9_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w32_d10_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w15_d2_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (14 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (14 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w35_d2_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (34 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (34 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Block_MVhK IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Block_MWhU IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_CalCim1Xh4 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_FindMaxYie IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_DuplicaZio IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Dilate_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Mat2AXI0iy IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_CvtColo1iI IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Sobel_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Duplica2iS IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Duplica3i2 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Sobel_14jc IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Duplica5jm IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Duplica6jw IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Mul184_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Mul185_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Mul_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_BoxFilt7jG IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_BoxFilt8jQ IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_BoxFilt9j0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component Haaris_Core_ctrl_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC;
        rows : OUT STD_LOGIC_VECTOR (31 downto 0);
        cols : OUT STD_LOGIC_VECTOR (31 downto 0);
        k : OUT STD_LOGIC_VECTOR (31 downto 0);
        threshold : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    Haaris_Core_ctrl_s_axi_U : component Haaris_Core_ctrl_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CTRL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CTRL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_ctrl_AWVALID,
        AWREADY => s_axi_ctrl_AWREADY,
        AWADDR => s_axi_ctrl_AWADDR,
        WVALID => s_axi_ctrl_WVALID,
        WREADY => s_axi_ctrl_WREADY,
        WDATA => s_axi_ctrl_WDATA,
        WSTRB => s_axi_ctrl_WSTRB,
        ARVALID => s_axi_ctrl_ARVALID,
        ARREADY => s_axi_ctrl_ARREADY,
        ARADDR => s_axi_ctrl_ARADDR,
        RVALID => s_axi_ctrl_RVALID,
        RREADY => s_axi_ctrl_RREADY,
        RDATA => s_axi_ctrl_RDATA,
        RRESP => s_axi_ctrl_RRESP,
        BVALID => s_axi_ctrl_BVALID,
        BREADY => s_axi_ctrl_BREADY,
        BRESP => s_axi_ctrl_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle,
        rows => rows,
        cols => cols,
        k => k,
        threshold => threshold);

    Haaris_Core_entry242_U0 : component Haaris_Core_entry242
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Haaris_Core_entry242_U0_ap_start,
        start_full_n => Haaris_Core_entry242_U0_start_full_n,
        ap_done => Haaris_Core_entry242_U0_ap_done,
        ap_continue => Haaris_Core_entry242_U0_ap_continue,
        ap_idle => Haaris_Core_entry242_U0_ap_idle,
        ap_ready => Haaris_Core_entry242_U0_ap_ready,
        start_out => Haaris_Core_entry242_U0_start_out,
        start_write => Haaris_Core_entry242_U0_start_write,
        rows => rows,
        cols => cols,
        k => k,
        threshold => threshold,
        rows_out_din => Haaris_Core_entry242_U0_rows_out_din,
        rows_out_full_n => rows_c_full_n,
        rows_out_write => Haaris_Core_entry242_U0_rows_out_write,
        rows_out1_din => Haaris_Core_entry242_U0_rows_out1_din,
        rows_out1_full_n => rows_c90_full_n,
        rows_out1_write => Haaris_Core_entry242_U0_rows_out1_write,
        cols_out_din => Haaris_Core_entry242_U0_cols_out_din,
        cols_out_full_n => cols_c_full_n,
        cols_out_write => Haaris_Core_entry242_U0_cols_out_write,
        cols_out2_din => Haaris_Core_entry242_U0_cols_out2_din,
        cols_out2_full_n => cols_c91_full_n,
        cols_out2_write => Haaris_Core_entry242_U0_cols_out2_write,
        k_out_din => Haaris_Core_entry242_U0_k_out_din,
        k_out_full_n => k_c_full_n,
        k_out_write => Haaris_Core_entry242_U0_k_out_write,
        threshold_out_din => Haaris_Core_entry242_U0_threshold_out_din,
        threshold_out_full_n => threshold_c_full_n,
        threshold_out_write => Haaris_Core_entry242_U0_threshold_out_write);

    Block_Mat_exit47_pro_U0 : component Block_Mat_exit47_pro
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Block_Mat_exit47_pro_U0_ap_start,
        start_full_n => Block_Mat_exit47_pro_U0_start_full_n,
        ap_done => Block_Mat_exit47_pro_U0_ap_done,
        ap_continue => Block_Mat_exit47_pro_U0_ap_continue,
        ap_idle => Block_Mat_exit47_pro_U0_ap_idle,
        ap_ready => Block_Mat_exit47_pro_U0_ap_ready,
        start_out => Block_Mat_exit47_pro_U0_start_out,
        start_write => Block_Mat_exit47_pro_U0_start_write,
        rows_dout => rows_c_dout,
        rows_empty_n => rows_c_empty_n,
        rows_read => Block_Mat_exit47_pro_U0_rows_read,
        cols_dout => cols_c_dout,
        cols_empty_n => cols_c_empty_n,
        cols_read => Block_Mat_exit47_pro_U0_cols_read,
        src_rows_V_out_din => Block_Mat_exit47_pro_U0_src_rows_V_out_din,
        src_rows_V_out_full_n => src_rows_V_c_full_n,
        src_rows_V_out_write => Block_Mat_exit47_pro_U0_src_rows_V_out_write,
        src_cols_V_out_din => Block_Mat_exit47_pro_U0_src_cols_V_out_din,
        src_cols_V_out_full_n => src_cols_V_c_full_n,
        src_cols_V_out_write => Block_Mat_exit47_pro_U0_src_cols_V_out_write,
        gray_rows_V_out_din => Block_Mat_exit47_pro_U0_gray_rows_V_out_din,
        gray_rows_V_out_full_n => gray_rows_V_c_full_n,
        gray_rows_V_out_write => Block_Mat_exit47_pro_U0_gray_rows_V_out_write,
        gray_cols_V_out_din => Block_Mat_exit47_pro_U0_gray_cols_V_out_din,
        gray_cols_V_out_full_n => gray_cols_V_c_full_n,
        gray_cols_V_out_write => Block_Mat_exit47_pro_U0_gray_cols_V_out_write,
        dst0_rows_V_out_din => Block_Mat_exit47_pro_U0_dst0_rows_V_out_din,
        dst0_rows_V_out_full_n => dst0_rows_V_c_full_n,
        dst0_rows_V_out_write => Block_Mat_exit47_pro_U0_dst0_rows_V_out_write,
        dst0_cols_V_out_din => Block_Mat_exit47_pro_U0_dst0_cols_V_out_din,
        dst0_cols_V_out_full_n => dst0_cols_V_c_full_n,
        dst0_cols_V_out_write => Block_Mat_exit47_pro_U0_dst0_cols_V_out_write,
        dst1_rows_V_out_din => Block_Mat_exit47_pro_U0_dst1_rows_V_out_din,
        dst1_rows_V_out_full_n => dst1_rows_V_c_full_n,
        dst1_rows_V_out_write => Block_Mat_exit47_pro_U0_dst1_rows_V_out_write,
        dst1_cols_V_out_din => Block_Mat_exit47_pro_U0_dst1_cols_V_out_din,
        dst1_cols_V_out_full_n => dst1_cols_V_c_full_n,
        dst1_cols_V_out_write => Block_Mat_exit47_pro_U0_dst1_cols_V_out_write);

    AXIvideo2Mat_U0 : component AXIvideo2Mat
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => AXIvideo2Mat_U0_ap_start,
        start_full_n => start_for_CvtColor_U0_full_n,
        ap_done => AXIvideo2Mat_U0_ap_done,
        ap_continue => AXIvideo2Mat_U0_ap_continue,
        ap_idle => AXIvideo2Mat_U0_ap_idle,
        ap_ready => AXIvideo2Mat_U0_ap_ready,
        start_out => AXIvideo2Mat_U0_start_out,
        start_write => AXIvideo2Mat_U0_start_write,
        src_axis_TDATA => src_axis_TDATA,
        src_axis_TVALID => src_axis_TVALID,
        src_axis_TREADY => AXIvideo2Mat_U0_src_axis_TREADY,
        src_axis_TKEEP => src_axis_TKEEP,
        src_axis_TSTRB => src_axis_TSTRB,
        src_axis_TUSER => src_axis_TUSER,
        src_axis_TLAST => src_axis_TLAST,
        src_axis_TID => src_axis_TID,
        src_axis_TDEST => src_axis_TDEST,
        img_rows_V_dout => src_rows_V_c_dout,
        img_rows_V_empty_n => src_rows_V_c_empty_n,
        img_rows_V_read => AXIvideo2Mat_U0_img_rows_V_read,
        img_cols_V_dout => src_cols_V_c_dout,
        img_cols_V_empty_n => src_cols_V_c_empty_n,
        img_cols_V_read => AXIvideo2Mat_U0_img_cols_V_read,
        img_data_stream_0_V_din => AXIvideo2Mat_U0_img_data_stream_0_V_din,
        img_data_stream_0_V_full_n => src_data_stream_0_V_full_n,
        img_data_stream_0_V_write => AXIvideo2Mat_U0_img_data_stream_0_V_write,
        img_data_stream_1_V_din => AXIvideo2Mat_U0_img_data_stream_1_V_din,
        img_data_stream_1_V_full_n => src_data_stream_1_V_full_n,
        img_data_stream_1_V_write => AXIvideo2Mat_U0_img_data_stream_1_V_write,
        img_data_stream_2_V_din => AXIvideo2Mat_U0_img_data_stream_2_V_din,
        img_data_stream_2_V_full_n => src_data_stream_2_V_full_n,
        img_data_stream_2_V_write => AXIvideo2Mat_U0_img_data_stream_2_V_write,
        img_rows_V_out_din => AXIvideo2Mat_U0_img_rows_V_out_din,
        img_rows_V_out_full_n => src_rows_V_c92_full_n,
        img_rows_V_out_write => AXIvideo2Mat_U0_img_rows_V_out_write,
        img_cols_V_out_din => AXIvideo2Mat_U0_img_cols_V_out_din,
        img_cols_V_out_full_n => src_cols_V_c93_full_n,
        img_cols_V_out_write => AXIvideo2Mat_U0_img_cols_V_out_write);

    CvtColor_U0 : component CvtColor
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => CvtColor_U0_ap_start,
        ap_done => CvtColor_U0_ap_done,
        ap_continue => CvtColor_U0_ap_continue,
        ap_idle => CvtColor_U0_ap_idle,
        ap_ready => CvtColor_U0_ap_ready,
        p_src_rows_V_dout => src_rows_V_c92_dout,
        p_src_rows_V_empty_n => src_rows_V_c92_empty_n,
        p_src_rows_V_read => CvtColor_U0_p_src_rows_V_read,
        p_src_cols_V_dout => src_cols_V_c93_dout,
        p_src_cols_V_empty_n => src_cols_V_c93_empty_n,
        p_src_cols_V_read => CvtColor_U0_p_src_cols_V_read,
        p_src_data_stream_0_V_dout => src_data_stream_0_V_dout,
        p_src_data_stream_0_V_empty_n => src_data_stream_0_V_empty_n,
        p_src_data_stream_0_V_read => CvtColor_U0_p_src_data_stream_0_V_read,
        p_src_data_stream_1_V_dout => src_data_stream_1_V_dout,
        p_src_data_stream_1_V_empty_n => src_data_stream_1_V_empty_n,
        p_src_data_stream_1_V_read => CvtColor_U0_p_src_data_stream_1_V_read,
        p_src_data_stream_2_V_dout => src_data_stream_2_V_dout,
        p_src_data_stream_2_V_empty_n => src_data_stream_2_V_empty_n,
        p_src_data_stream_2_V_read => CvtColor_U0_p_src_data_stream_2_V_read,
        p_dst_data_stream_V_din => CvtColor_U0_p_dst_data_stream_V_din,
        p_dst_data_stream_V_full_n => gray_data_stream_0_s_full_n,
        p_dst_data_stream_V_write => CvtColor_U0_p_dst_data_stream_V_write);

    Block_Mat_exit4750_p_U0 : component Block_Mat_exit4750_p
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Block_Mat_exit4750_p_U0_ap_start,
        start_full_n => Block_Mat_exit4750_p_U0_start_full_n,
        ap_done => Block_Mat_exit4750_p_U0_ap_done,
        ap_continue => Block_Mat_exit4750_p_U0_ap_continue,
        ap_idle => Block_Mat_exit4750_p_U0_ap_idle,
        ap_ready => Block_Mat_exit4750_p_U0_ap_ready,
        start_out => Block_Mat_exit4750_p_U0_start_out,
        start_write => Block_Mat_exit4750_p_U0_start_write,
        rows_dout => rows_c90_dout,
        rows_empty_n => rows_c90_empty_n,
        rows_read => Block_Mat_exit4750_p_U0_rows_read,
        cols_dout => cols_c91_dout,
        cols_empty_n => cols_c91_empty_n,
        cols_read => Block_Mat_exit4750_p_U0_cols_read,
        res_rows_V_out_din => Block_Mat_exit4750_p_U0_res_rows_V_out_din,
        res_rows_V_out_full_n => res_rows_V_c_full_n,
        res_rows_V_out_write => Block_Mat_exit4750_p_U0_res_rows_V_out_write,
        res_cols_V_out_din => Block_Mat_exit4750_p_U0_res_cols_V_out_din,
        res_cols_V_out_full_n => res_cols_V_c_full_n,
        res_cols_V_out_write => Block_Mat_exit4750_p_U0_res_cols_V_out_write,
        gray1_rows_V_out_din => Block_Mat_exit4750_p_U0_gray1_rows_V_out_din,
        gray1_rows_V_out_full_n => gray1_rows_V_c_full_n,
        gray1_rows_V_out_write => Block_Mat_exit4750_p_U0_gray1_rows_V_out_write,
        gray1_cols_V_out_din => Block_Mat_exit4750_p_U0_gray1_cols_V_out_din,
        gray1_cols_V_out_full_n => gray1_cols_V_c_full_n,
        gray1_cols_V_out_write => Block_Mat_exit4750_p_U0_gray1_cols_V_out_write,
        gray2_rows_V_out_din => Block_Mat_exit4750_p_U0_gray2_rows_V_out_din,
        gray2_rows_V_out_full_n => gray2_rows_V_c_full_n,
        gray2_rows_V_out_write => Block_Mat_exit4750_p_U0_gray2_rows_V_out_write,
        gray2_cols_V_out_din => Block_Mat_exit4750_p_U0_gray2_cols_V_out_din,
        gray2_cols_V_out_full_n => gray2_cols_V_c_full_n,
        gray2_cols_V_out_write => Block_Mat_exit4750_p_U0_gray2_cols_V_out_write,
        grad_x_rows_V_out_din => Block_Mat_exit4750_p_U0_grad_x_rows_V_out_din,
        grad_x_rows_V_out_full_n => grad_x_rows_V_c_full_n,
        grad_x_rows_V_out_write => Block_Mat_exit4750_p_U0_grad_x_rows_V_out_write,
        grad_x_cols_V_out_din => Block_Mat_exit4750_p_U0_grad_x_cols_V_out_din,
        grad_x_cols_V_out_full_n => grad_x_cols_V_c_full_n,
        grad_x_cols_V_out_write => Block_Mat_exit4750_p_U0_grad_x_cols_V_out_write,
        grad_x1_rows_V_out_din => Block_Mat_exit4750_p_U0_grad_x1_rows_V_out_din,
        grad_x1_rows_V_out_full_n => grad_x1_rows_V_c_full_n,
        grad_x1_rows_V_out_write => Block_Mat_exit4750_p_U0_grad_x1_rows_V_out_write,
        grad_x1_cols_V_out_din => Block_Mat_exit4750_p_U0_grad_x1_cols_V_out_din,
        grad_x1_cols_V_out_full_n => grad_x1_cols_V_c_full_n,
        grad_x1_cols_V_out_write => Block_Mat_exit4750_p_U0_grad_x1_cols_V_out_write,
        grad_x2_rows_V_out_din => Block_Mat_exit4750_p_U0_grad_x2_rows_V_out_din,
        grad_x2_rows_V_out_full_n => grad_x2_rows_V_c_full_n,
        grad_x2_rows_V_out_write => Block_Mat_exit4750_p_U0_grad_x2_rows_V_out_write,
        grad_x2_cols_V_out_din => Block_Mat_exit4750_p_U0_grad_x2_cols_V_out_din,
        grad_x2_cols_V_out_full_n => grad_x2_cols_V_c_full_n,
        grad_x2_cols_V_out_write => Block_Mat_exit4750_p_U0_grad_x2_cols_V_out_write,
        grad_x3_rows_V_out_din => Block_Mat_exit4750_p_U0_grad_x3_rows_V_out_din,
        grad_x3_rows_V_out_full_n => grad_x3_rows_V_c_full_n,
        grad_x3_rows_V_out_write => Block_Mat_exit4750_p_U0_grad_x3_rows_V_out_write,
        grad_x3_cols_V_out_din => Block_Mat_exit4750_p_U0_grad_x3_cols_V_out_din,
        grad_x3_cols_V_out_full_n => grad_x3_cols_V_c_full_n,
        grad_x3_cols_V_out_write => Block_Mat_exit4750_p_U0_grad_x3_cols_V_out_write,
        grad_y_rows_V_out_din => Block_Mat_exit4750_p_U0_grad_y_rows_V_out_din,
        grad_y_rows_V_out_full_n => grad_y_rows_V_c_full_n,
        grad_y_rows_V_out_write => Block_Mat_exit4750_p_U0_grad_y_rows_V_out_write,
        grad_y_cols_V_out_din => Block_Mat_exit4750_p_U0_grad_y_cols_V_out_din,
        grad_y_cols_V_out_full_n => grad_y_cols_V_c_full_n,
        grad_y_cols_V_out_write => Block_Mat_exit4750_p_U0_grad_y_cols_V_out_write,
        grad_y1_rows_V_out_din => Block_Mat_exit4750_p_U0_grad_y1_rows_V_out_din,
        grad_y1_rows_V_out_full_n => grad_y1_rows_V_c_full_n,
        grad_y1_rows_V_out_write => Block_Mat_exit4750_p_U0_grad_y1_rows_V_out_write,
        grad_y1_cols_V_out_din => Block_Mat_exit4750_p_U0_grad_y1_cols_V_out_din,
        grad_y1_cols_V_out_full_n => grad_y1_cols_V_c_full_n,
        grad_y1_cols_V_out_write => Block_Mat_exit4750_p_U0_grad_y1_cols_V_out_write,
        grad_y3_rows_V_out_din => Block_Mat_exit4750_p_U0_grad_y3_rows_V_out_din,
        grad_y3_rows_V_out_full_n => grad_y3_rows_V_c_full_n,
        grad_y3_rows_V_out_write => Block_Mat_exit4750_p_U0_grad_y3_rows_V_out_write,
        grad_y3_cols_V_out_din => Block_Mat_exit4750_p_U0_grad_y3_cols_V_out_din,
        grad_y3_cols_V_out_full_n => grad_y3_cols_V_c_full_n,
        grad_y3_cols_V_out_write => Block_Mat_exit4750_p_U0_grad_y3_cols_V_out_write,
        grad_xx_rows_V_out_din => Block_Mat_exit4750_p_U0_grad_xx_rows_V_out_din,
        grad_xx_rows_V_out_full_n => grad_xx_rows_V_c_full_n,
        grad_xx_rows_V_out_write => Block_Mat_exit4750_p_U0_grad_xx_rows_V_out_write,
        grad_xx_cols_V_out_din => Block_Mat_exit4750_p_U0_grad_xx_cols_V_out_din,
        grad_xx_cols_V_out_full_n => grad_xx_cols_V_c_full_n,
        grad_xx_cols_V_out_write => Block_Mat_exit4750_p_U0_grad_xx_cols_V_out_write,
        grad_yy_rows_V_out_din => Block_Mat_exit4750_p_U0_grad_yy_rows_V_out_din,
        grad_yy_rows_V_out_full_n => grad_yy_rows_V_c_full_n,
        grad_yy_rows_V_out_write => Block_Mat_exit4750_p_U0_grad_yy_rows_V_out_write,
        grad_yy_cols_V_out_din => Block_Mat_exit4750_p_U0_grad_yy_cols_V_out_din,
        grad_yy_cols_V_out_full_n => grad_yy_cols_V_c_full_n,
        grad_yy_cols_V_out_write => Block_Mat_exit4750_p_U0_grad_yy_cols_V_out_write,
        grad_xy_rows_V_out_din => Block_Mat_exit4750_p_U0_grad_xy_rows_V_out_din,
        grad_xy_rows_V_out_full_n => grad_xy_rows_V_c_full_n,
        grad_xy_rows_V_out_write => Block_Mat_exit4750_p_U0_grad_xy_rows_V_out_write,
        grad_xy_cols_V_out_din => Block_Mat_exit4750_p_U0_grad_xy_cols_V_out_din,
        grad_xy_cols_V_out_full_n => grad_xy_cols_V_c_full_n,
        grad_xy_cols_V_out_write => Block_Mat_exit4750_p_U0_grad_xy_cols_V_out_write,
        grad_gy_rows_V_out_din => Block_Mat_exit4750_p_U0_grad_gy_rows_V_out_din,
        grad_gy_rows_V_out_full_n => grad_gy_rows_V_c_full_n,
        grad_gy_rows_V_out_write => Block_Mat_exit4750_p_U0_grad_gy_rows_V_out_write,
        grad_gy_cols_V_out_din => Block_Mat_exit4750_p_U0_grad_gy_cols_V_out_din,
        grad_gy_cols_V_out_full_n => grad_gy_cols_V_c_full_n,
        grad_gy_cols_V_out_write => Block_Mat_exit4750_p_U0_grad_gy_cols_V_out_write);

    Duplicate_1_U0 : component Duplicate_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Duplicate_1_U0_ap_start,
        ap_done => Duplicate_1_U0_ap_done,
        ap_continue => Duplicate_1_U0_ap_continue,
        ap_idle => Duplicate_1_U0_ap_idle,
        ap_ready => Duplicate_1_U0_ap_ready,
        src_rows_V_dout => gray_rows_V_c_dout,
        src_rows_V_empty_n => gray_rows_V_c_empty_n,
        src_rows_V_read => Duplicate_1_U0_src_rows_V_read,
        src_cols_V_dout => gray_cols_V_c_dout,
        src_cols_V_empty_n => gray_cols_V_c_empty_n,
        src_cols_V_read => Duplicate_1_U0_src_cols_V_read,
        src_data_stream_V_dout => gray_data_stream_0_s_dout,
        src_data_stream_V_empty_n => gray_data_stream_0_s_empty_n,
        src_data_stream_V_read => Duplicate_1_U0_src_data_stream_V_read,
        dst1_data_stream_V_din => Duplicate_1_U0_dst1_data_stream_V_din,
        dst1_data_stream_V_full_n => gray1_data_stream_0_full_n,
        dst1_data_stream_V_write => Duplicate_1_U0_dst1_data_stream_V_write,
        dst2_data_stream_V_din => Duplicate_1_U0_dst2_data_stream_V_din,
        dst2_data_stream_V_full_n => gray2_data_stream_0_full_n,
        dst2_data_stream_V_write => Duplicate_1_U0_dst2_data_stream_V_write);

    Sobel_U0 : component Sobel
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Sobel_U0_ap_start,
        ap_done => Sobel_U0_ap_done,
        ap_continue => Sobel_U0_ap_continue,
        ap_idle => Sobel_U0_ap_idle,
        ap_ready => Sobel_U0_ap_ready,
        p_src_rows_V_dout => gray1_rows_V_c_dout,
        p_src_rows_V_empty_n => gray1_rows_V_c_empty_n,
        p_src_rows_V_read => Sobel_U0_p_src_rows_V_read,
        p_src_cols_V_dout => gray1_cols_V_c_dout,
        p_src_cols_V_empty_n => gray1_cols_V_c_empty_n,
        p_src_cols_V_read => Sobel_U0_p_src_cols_V_read,
        p_src_data_stream_V_dout => gray1_data_stream_0_dout,
        p_src_data_stream_V_empty_n => gray1_data_stream_0_empty_n,
        p_src_data_stream_V_read => Sobel_U0_p_src_data_stream_V_read,
        p_dst_data_stream_V_V_din => Sobel_U0_p_dst_data_stream_V_V_din,
        p_dst_data_stream_V_V_full_n => grad_x_data_stream_0_full_n,
        p_dst_data_stream_V_V_write => Sobel_U0_p_dst_data_stream_V_V_write);

    Duplicate181_U0 : component Duplicate181
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Duplicate181_U0_ap_start,
        ap_done => Duplicate181_U0_ap_done,
        ap_continue => Duplicate181_U0_ap_continue,
        ap_idle => Duplicate181_U0_ap_idle,
        ap_ready => Duplicate181_U0_ap_ready,
        src_rows_V_dout => grad_x_rows_V_c_dout,
        src_rows_V_empty_n => grad_x_rows_V_c_empty_n,
        src_rows_V_read => Duplicate181_U0_src_rows_V_read,
        src_cols_V_dout => grad_x_cols_V_c_dout,
        src_cols_V_empty_n => grad_x_cols_V_c_empty_n,
        src_cols_V_read => Duplicate181_U0_src_cols_V_read,
        src_data_stream_V_V_dout => grad_x_data_stream_0_dout,
        src_data_stream_V_V_empty_n => grad_x_data_stream_0_empty_n,
        src_data_stream_V_V_read => Duplicate181_U0_src_data_stream_V_V_read,
        dst1_data_stream_V_V_din => Duplicate181_U0_dst1_data_stream_V_V_din,
        dst1_data_stream_V_V_full_n => grad_x1_data_stream_s_full_n,
        dst1_data_stream_V_V_write => Duplicate181_U0_dst1_data_stream_V_V_write,
        dst2_data_stream_V_V_din => Duplicate181_U0_dst2_data_stream_V_V_din,
        dst2_data_stream_V_V_full_n => grad_x2_data_stream_s_full_n,
        dst2_data_stream_V_V_write => Duplicate181_U0_dst2_data_stream_V_V_write);

    Duplicate182_U0 : component Duplicate182
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Duplicate182_U0_ap_start,
        ap_done => Duplicate182_U0_ap_done,
        ap_continue => Duplicate182_U0_ap_continue,
        ap_idle => Duplicate182_U0_ap_idle,
        ap_ready => Duplicate182_U0_ap_ready,
        src_rows_V_dout => grad_x1_rows_V_c_dout,
        src_rows_V_empty_n => grad_x1_rows_V_c_empty_n,
        src_rows_V_read => Duplicate182_U0_src_rows_V_read,
        src_cols_V_dout => grad_x1_cols_V_c_dout,
        src_cols_V_empty_n => grad_x1_cols_V_c_empty_n,
        src_cols_V_read => Duplicate182_U0_src_cols_V_read,
        src_data_stream_V_V_dout => grad_x1_data_stream_s_dout,
        src_data_stream_V_V_empty_n => grad_x1_data_stream_s_empty_n,
        src_data_stream_V_V_read => Duplicate182_U0_src_data_stream_V_V_read,
        dst1_data_stream_V_V_din => Duplicate182_U0_dst1_data_stream_V_V_din,
        dst1_data_stream_V_V_full_n => grad_x3_data_stream_s_full_n,
        dst1_data_stream_V_V_write => Duplicate182_U0_dst1_data_stream_V_V_write,
        dst2_data_stream_V_V_din => Duplicate182_U0_dst2_data_stream_V_V_din,
        dst2_data_stream_V_V_full_n => grad_x4_data_stream_s_full_n,
        dst2_data_stream_V_V_write => Duplicate182_U0_dst2_data_stream_V_V_write);

    Sobel_1_U0 : component Sobel_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Sobel_1_U0_ap_start,
        ap_done => Sobel_1_U0_ap_done,
        ap_continue => Sobel_1_U0_ap_continue,
        ap_idle => Sobel_1_U0_ap_idle,
        ap_ready => Sobel_1_U0_ap_ready,
        p_src_rows_V_dout => gray2_rows_V_c_dout,
        p_src_rows_V_empty_n => gray2_rows_V_c_empty_n,
        p_src_rows_V_read => Sobel_1_U0_p_src_rows_V_read,
        p_src_cols_V_dout => gray2_cols_V_c_dout,
        p_src_cols_V_empty_n => gray2_cols_V_c_empty_n,
        p_src_cols_V_read => Sobel_1_U0_p_src_cols_V_read,
        p_src_data_stream_V_dout => gray2_data_stream_0_dout,
        p_src_data_stream_V_empty_n => gray2_data_stream_0_empty_n,
        p_src_data_stream_V_read => Sobel_1_U0_p_src_data_stream_V_read,
        p_dst_data_stream_V_V_din => Sobel_1_U0_p_dst_data_stream_V_V_din,
        p_dst_data_stream_V_V_full_n => grad_y_data_stream_0_full_n,
        p_dst_data_stream_V_V_write => Sobel_1_U0_p_dst_data_stream_V_V_write);

    Duplicate183_U0 : component Duplicate183
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Duplicate183_U0_ap_start,
        ap_done => Duplicate183_U0_ap_done,
        ap_continue => Duplicate183_U0_ap_continue,
        ap_idle => Duplicate183_U0_ap_idle,
        ap_ready => Duplicate183_U0_ap_ready,
        src_rows_V_dout => grad_y_rows_V_c_dout,
        src_rows_V_empty_n => grad_y_rows_V_c_empty_n,
        src_rows_V_read => Duplicate183_U0_src_rows_V_read,
        src_cols_V_dout => grad_y_cols_V_c_dout,
        src_cols_V_empty_n => grad_y_cols_V_c_empty_n,
        src_cols_V_read => Duplicate183_U0_src_cols_V_read,
        src_data_stream_V_V_dout => grad_y_data_stream_0_dout,
        src_data_stream_V_V_empty_n => grad_y_data_stream_0_empty_n,
        src_data_stream_V_V_read => Duplicate183_U0_src_data_stream_V_V_read,
        dst1_data_stream_V_V_din => Duplicate183_U0_dst1_data_stream_V_V_din,
        dst1_data_stream_V_V_full_n => grad_y1_data_stream_s_full_n,
        dst1_data_stream_V_V_write => Duplicate183_U0_dst1_data_stream_V_V_write,
        dst2_data_stream_V_V_din => Duplicate183_U0_dst2_data_stream_V_V_din,
        dst2_data_stream_V_V_full_n => grad_y2_data_stream_s_full_n,
        dst2_data_stream_V_V_write => Duplicate183_U0_dst2_data_stream_V_V_write);

    Duplicate_U0 : component Duplicate
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Duplicate_U0_ap_start,
        ap_done => Duplicate_U0_ap_done,
        ap_continue => Duplicate_U0_ap_continue,
        ap_idle => Duplicate_U0_ap_idle,
        ap_ready => Duplicate_U0_ap_ready,
        src_rows_V_dout => grad_y1_rows_V_c_dout,
        src_rows_V_empty_n => grad_y1_rows_V_c_empty_n,
        src_rows_V_read => Duplicate_U0_src_rows_V_read,
        src_cols_V_dout => grad_y1_cols_V_c_dout,
        src_cols_V_empty_n => grad_y1_cols_V_c_empty_n,
        src_cols_V_read => Duplicate_U0_src_cols_V_read,
        src_data_stream_V_V_dout => grad_y1_data_stream_s_dout,
        src_data_stream_V_V_empty_n => grad_y1_data_stream_s_empty_n,
        src_data_stream_V_V_read => Duplicate_U0_src_data_stream_V_V_read,
        dst1_data_stream_V_V_din => Duplicate_U0_dst1_data_stream_V_V_din,
        dst1_data_stream_V_V_full_n => grad_y3_data_stream_s_full_n,
        dst1_data_stream_V_V_write => Duplicate_U0_dst1_data_stream_V_V_write,
        dst2_data_stream_V_V_din => Duplicate_U0_dst2_data_stream_V_V_din,
        dst2_data_stream_V_V_full_n => grad_y4_data_stream_s_full_n,
        dst2_data_stream_V_V_write => Duplicate_U0_dst2_data_stream_V_V_write);

    Mul184_U0 : component Mul184
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Mul184_U0_ap_start,
        ap_done => Mul184_U0_ap_done,
        ap_continue => Mul184_U0_ap_continue,
        ap_idle => Mul184_U0_ap_idle,
        ap_ready => Mul184_U0_ap_ready,
        src1_rows_V_dout => grad_x3_rows_V_c_dout,
        src1_rows_V_empty_n => grad_x3_rows_V_c_empty_n,
        src1_rows_V_read => Mul184_U0_src1_rows_V_read,
        src1_cols_V_dout => grad_x3_cols_V_c_dout,
        src1_cols_V_empty_n => grad_x3_cols_V_c_empty_n,
        src1_cols_V_read => Mul184_U0_src1_cols_V_read,
        src1_data_stream_V_V_dout => grad_x3_data_stream_s_dout,
        src1_data_stream_V_V_empty_n => grad_x3_data_stream_s_empty_n,
        src1_data_stream_V_V_read => Mul184_U0_src1_data_stream_V_V_read,
        src2_data_stream_V_V_dout => grad_x4_data_stream_s_dout,
        src2_data_stream_V_V_empty_n => grad_x4_data_stream_s_empty_n,
        src2_data_stream_V_V_read => Mul184_U0_src2_data_stream_V_V_read,
        dst_data_stream_V_V_din => Mul184_U0_dst_data_stream_V_V_din,
        dst_data_stream_V_V_full_n => grad_xx_data_stream_s_full_n,
        dst_data_stream_V_V_write => Mul184_U0_dst_data_stream_V_V_write);

    Mul185_U0 : component Mul185
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Mul185_U0_ap_start,
        ap_done => Mul185_U0_ap_done,
        ap_continue => Mul185_U0_ap_continue,
        ap_idle => Mul185_U0_ap_idle,
        ap_ready => Mul185_U0_ap_ready,
        src1_rows_V_dout => grad_y3_rows_V_c_dout,
        src1_rows_V_empty_n => grad_y3_rows_V_c_empty_n,
        src1_rows_V_read => Mul185_U0_src1_rows_V_read,
        src1_cols_V_dout => grad_y3_cols_V_c_dout,
        src1_cols_V_empty_n => grad_y3_cols_V_c_empty_n,
        src1_cols_V_read => Mul185_U0_src1_cols_V_read,
        src1_data_stream_V_V_dout => grad_y3_data_stream_s_dout,
        src1_data_stream_V_V_empty_n => grad_y3_data_stream_s_empty_n,
        src1_data_stream_V_V_read => Mul185_U0_src1_data_stream_V_V_read,
        src2_data_stream_V_V_dout => grad_y4_data_stream_s_dout,
        src2_data_stream_V_V_empty_n => grad_y4_data_stream_s_empty_n,
        src2_data_stream_V_V_read => Mul185_U0_src2_data_stream_V_V_read,
        dst_data_stream_V_V_din => Mul185_U0_dst_data_stream_V_V_din,
        dst_data_stream_V_V_full_n => grad_yy_data_stream_s_full_n,
        dst_data_stream_V_V_write => Mul185_U0_dst_data_stream_V_V_write);

    Mul_U0 : component Mul
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Mul_U0_ap_start,
        ap_done => Mul_U0_ap_done,
        ap_continue => Mul_U0_ap_continue,
        ap_idle => Mul_U0_ap_idle,
        ap_ready => Mul_U0_ap_ready,
        src1_rows_V_dout => grad_x2_rows_V_c_dout,
        src1_rows_V_empty_n => grad_x2_rows_V_c_empty_n,
        src1_rows_V_read => Mul_U0_src1_rows_V_read,
        src1_cols_V_dout => grad_x2_cols_V_c_dout,
        src1_cols_V_empty_n => grad_x2_cols_V_c_empty_n,
        src1_cols_V_read => Mul_U0_src1_cols_V_read,
        src1_data_stream_V_V_dout => grad_x2_data_stream_s_dout,
        src1_data_stream_V_V_empty_n => grad_x2_data_stream_s_empty_n,
        src1_data_stream_V_V_read => Mul_U0_src1_data_stream_V_V_read,
        src2_data_stream_V_V_dout => grad_y2_data_stream_s_dout,
        src2_data_stream_V_V_empty_n => grad_y2_data_stream_s_empty_n,
        src2_data_stream_V_V_read => Mul_U0_src2_data_stream_V_V_read,
        dst_data_stream_V_V_din => Mul_U0_dst_data_stream_V_V_din,
        dst_data_stream_V_V_full_n => grad_xy_data_stream_s_full_n,
        dst_data_stream_V_V_write => Mul_U0_dst_data_stream_V_V_write);

    BoxFilter186_U0 : component BoxFilter186
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => BoxFilter186_U0_ap_start,
        ap_done => BoxFilter186_U0_ap_done,
        ap_continue => BoxFilter186_U0_ap_continue,
        ap_idle => BoxFilter186_U0_ap_idle,
        ap_ready => BoxFilter186_U0_ap_ready,
        p_src_rows_V_dout => grad_xx_rows_V_c_dout,
        p_src_rows_V_empty_n => grad_xx_rows_V_c_empty_n,
        p_src_rows_V_read => BoxFilter186_U0_p_src_rows_V_read,
        p_src_cols_V_dout => grad_xx_cols_V_c_dout,
        p_src_cols_V_empty_n => grad_xx_cols_V_c_empty_n,
        p_src_cols_V_read => BoxFilter186_U0_p_src_cols_V_read,
        p_src_data_stream_V_V_dout => grad_xx_data_stream_s_dout,
        p_src_data_stream_V_V_empty_n => grad_xx_data_stream_s_empty_n,
        p_src_data_stream_V_V_read => BoxFilter186_U0_p_src_data_stream_V_V_read,
        p_dst_data_stream_V_V_din => BoxFilter186_U0_p_dst_data_stream_V_V_din,
        p_dst_data_stream_V_V_full_n => grad_gx_data_stream_s_full_n,
        p_dst_data_stream_V_V_write => BoxFilter186_U0_p_dst_data_stream_V_V_write);

    BoxFilter187_U0 : component BoxFilter187
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => BoxFilter187_U0_ap_start,
        ap_done => BoxFilter187_U0_ap_done,
        ap_continue => BoxFilter187_U0_ap_continue,
        ap_idle => BoxFilter187_U0_ap_idle,
        ap_ready => BoxFilter187_U0_ap_ready,
        p_src_rows_V_dout => grad_yy_rows_V_c_dout,
        p_src_rows_V_empty_n => grad_yy_rows_V_c_empty_n,
        p_src_rows_V_read => BoxFilter187_U0_p_src_rows_V_read,
        p_src_cols_V_dout => grad_yy_cols_V_c_dout,
        p_src_cols_V_empty_n => grad_yy_cols_V_c_empty_n,
        p_src_cols_V_read => BoxFilter187_U0_p_src_cols_V_read,
        p_src_data_stream_V_V_dout => grad_yy_data_stream_s_dout,
        p_src_data_stream_V_V_empty_n => grad_yy_data_stream_s_empty_n,
        p_src_data_stream_V_V_read => BoxFilter187_U0_p_src_data_stream_V_V_read,
        p_dst_data_stream_V_V_din => BoxFilter187_U0_p_dst_data_stream_V_V_din,
        p_dst_data_stream_V_V_full_n => grad_gy_data_stream_s_full_n,
        p_dst_data_stream_V_V_write => BoxFilter187_U0_p_dst_data_stream_V_V_write);

    BoxFilter_U0 : component BoxFilter
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => BoxFilter_U0_ap_start,
        ap_done => BoxFilter_U0_ap_done,
        ap_continue => BoxFilter_U0_ap_continue,
        ap_idle => BoxFilter_U0_ap_idle,
        ap_ready => BoxFilter_U0_ap_ready,
        p_src_rows_V_dout => grad_xy_rows_V_c_dout,
        p_src_rows_V_empty_n => grad_xy_rows_V_c_empty_n,
        p_src_rows_V_read => BoxFilter_U0_p_src_rows_V_read,
        p_src_cols_V_dout => grad_xy_cols_V_c_dout,
        p_src_cols_V_empty_n => grad_xy_cols_V_c_empty_n,
        p_src_cols_V_read => BoxFilter_U0_p_src_cols_V_read,
        p_src_data_stream_V_V_dout => grad_xy_data_stream_s_dout,
        p_src_data_stream_V_V_empty_n => grad_xy_data_stream_s_empty_n,
        p_src_data_stream_V_V_read => BoxFilter_U0_p_src_data_stream_V_V_read,
        p_dst_data_stream_V_V_din => BoxFilter_U0_p_dst_data_stream_V_V_din,
        p_dst_data_stream_V_V_full_n => grad_gxy_data_stream_full_n,
        p_dst_data_stream_V_V_write => BoxFilter_U0_p_dst_data_stream_V_V_write);

    CalCim188_U0 : component CalCim188
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => CalCim188_U0_ap_start,
        ap_done => CalCim188_U0_ap_done,
        ap_continue => CalCim188_U0_ap_continue,
        ap_idle => CalCim188_U0_ap_idle,
        ap_ready => CalCim188_U0_ap_ready,
        p_gradx_data_stream_V_V_dout => grad_gx_data_stream_s_dout,
        p_gradx_data_stream_V_V_empty_n => grad_gx_data_stream_s_empty_n,
        p_gradx_data_stream_V_V_read => CalCim188_U0_p_gradx_data_stream_V_V_read,
        p_grady_rows_V_dout => grad_gy_rows_V_c_dout,
        p_grady_rows_V_empty_n => grad_gy_rows_V_c_empty_n,
        p_grady_rows_V_read => CalCim188_U0_p_grady_rows_V_read,
        p_grady_cols_V_dout => grad_gy_cols_V_c_dout,
        p_grady_cols_V_empty_n => grad_gy_cols_V_c_empty_n,
        p_grady_cols_V_read => CalCim188_U0_p_grady_cols_V_read,
        p_grady_data_stream_V_V_dout => grad_gy_data_stream_s_dout,
        p_grady_data_stream_V_V_empty_n => grad_gy_data_stream_s_empty_n,
        p_grady_data_stream_V_V_read => CalCim188_U0_p_grady_data_stream_V_V_read,
        p_gradxy_data_stream_V_V_dout => grad_gxy_data_stream_dout,
        p_gradxy_data_stream_V_V_empty_n => grad_gxy_data_stream_empty_n,
        p_gradxy_data_stream_V_V_read => CalCim188_U0_p_gradxy_data_stream_V_V_read,
        p_dst_data_stream_V_din => CalCim188_U0_p_dst_data_stream_V_din,
        p_dst_data_stream_V_full_n => res_data_stream_0_V_full_n,
        p_dst_data_stream_V_write => CalCim188_U0_p_dst_data_stream_V_write,
        k_dout => k_c_dout,
        k_empty_n => k_c_empty_n,
        k_read => CalCim188_U0_k_read);

    FindMax_U0 : component FindMax
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => FindMax_U0_ap_start,
        ap_done => FindMax_U0_ap_done,
        ap_continue => FindMax_U0_ap_continue,
        ap_idle => FindMax_U0_ap_idle,
        ap_ready => FindMax_U0_ap_ready,
        p_src_rows_V_dout => res_rows_V_c_dout,
        p_src_rows_V_empty_n => res_rows_V_c_empty_n,
        p_src_rows_V_read => FindMax_U0_p_src_rows_V_read,
        p_src_cols_V_dout => res_cols_V_c_dout,
        p_src_cols_V_empty_n => res_cols_V_c_empty_n,
        p_src_cols_V_read => FindMax_U0_p_src_cols_V_read,
        p_src_data_stream_V_dout => res_data_stream_0_V_dout,
        p_src_data_stream_V_empty_n => res_data_stream_0_V_empty_n,
        p_src_data_stream_V_read => FindMax_U0_p_src_data_stream_V_read,
        p_dst_data_stream_V_din => FindMax_U0_p_dst_data_stream_V_din,
        p_dst_data_stream_V_full_n => dst0_data_stream_0_s_full_n,
        p_dst_data_stream_V_write => FindMax_U0_p_dst_data_stream_V_write,
        threshold_dout => threshold_c_dout,
        threshold_empty_n => threshold_c_empty_n,
        threshold_read => FindMax_U0_threshold_read);

    Dilate_U0 : component Dilate
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Dilate_U0_ap_start,
        ap_done => Dilate_U0_ap_done,
        ap_continue => Dilate_U0_ap_continue,
        ap_idle => Dilate_U0_ap_idle,
        ap_ready => Dilate_U0_ap_ready,
        p_src_rows_V_dout => dst0_rows_V_c_dout,
        p_src_rows_V_empty_n => dst0_rows_V_c_empty_n,
        p_src_rows_V_read => Dilate_U0_p_src_rows_V_read,
        p_src_cols_V_dout => dst0_cols_V_c_dout,
        p_src_cols_V_empty_n => dst0_cols_V_c_empty_n,
        p_src_cols_V_read => Dilate_U0_p_src_cols_V_read,
        p_src_data_stream_V_dout => dst0_data_stream_0_s_dout,
        p_src_data_stream_V_empty_n => dst0_data_stream_0_s_empty_n,
        p_src_data_stream_V_read => Dilate_U0_p_src_data_stream_V_read,
        p_dst_data_stream_V_din => Dilate_U0_p_dst_data_stream_V_din,
        p_dst_data_stream_V_full_n => dst1_data_stream_0_s_full_n,
        p_dst_data_stream_V_write => Dilate_U0_p_dst_data_stream_V_write);

    Mat2AXIvideo_U0 : component Mat2AXIvideo
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Mat2AXIvideo_U0_ap_start,
        ap_done => Mat2AXIvideo_U0_ap_done,
        ap_continue => Mat2AXIvideo_U0_ap_continue,
        ap_idle => Mat2AXIvideo_U0_ap_idle,
        ap_ready => Mat2AXIvideo_U0_ap_ready,
        img_rows_V_dout => dst1_rows_V_c_dout,
        img_rows_V_empty_n => dst1_rows_V_c_empty_n,
        img_rows_V_read => Mat2AXIvideo_U0_img_rows_V_read,
        img_cols_V_dout => dst1_cols_V_c_dout,
        img_cols_V_empty_n => dst1_cols_V_c_empty_n,
        img_cols_V_read => Mat2AXIvideo_U0_img_cols_V_read,
        img_data_stream_V_dout => dst1_data_stream_0_s_dout,
        img_data_stream_V_empty_n => dst1_data_stream_0_s_empty_n,
        img_data_stream_V_read => Mat2AXIvideo_U0_img_data_stream_V_read,
        dst_axis_TDATA => Mat2AXIvideo_U0_dst_axis_TDATA,
        dst_axis_TVALID => Mat2AXIvideo_U0_dst_axis_TVALID,
        dst_axis_TREADY => dst_axis_TREADY,
        dst_axis_TKEEP => Mat2AXIvideo_U0_dst_axis_TKEEP,
        dst_axis_TSTRB => Mat2AXIvideo_U0_dst_axis_TSTRB,
        dst_axis_TUSER => Mat2AXIvideo_U0_dst_axis_TUSER,
        dst_axis_TLAST => Mat2AXIvideo_U0_dst_axis_TLAST,
        dst_axis_TID => Mat2AXIvideo_U0_dst_axis_TID,
        dst_axis_TDEST => Mat2AXIvideo_U0_dst_axis_TDEST);

    rows_c_U : component fifo_w32_d2_A_x
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Haaris_Core_entry242_U0_rows_out_din,
        if_full_n => rows_c_full_n,
        if_write => Haaris_Core_entry242_U0_rows_out_write,
        if_dout => rows_c_dout,
        if_empty_n => rows_c_empty_n,
        if_read => Block_Mat_exit47_pro_U0_rows_read);

    rows_c90_U : component fifo_w32_d2_A_x
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Haaris_Core_entry242_U0_rows_out1_din,
        if_full_n => rows_c90_full_n,
        if_write => Haaris_Core_entry242_U0_rows_out1_write,
        if_dout => rows_c90_dout,
        if_empty_n => rows_c90_empty_n,
        if_read => Block_Mat_exit4750_p_U0_rows_read);

    cols_c_U : component fifo_w32_d2_A_x
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Haaris_Core_entry242_U0_cols_out_din,
        if_full_n => cols_c_full_n,
        if_write => Haaris_Core_entry242_U0_cols_out_write,
        if_dout => cols_c_dout,
        if_empty_n => cols_c_empty_n,
        if_read => Block_Mat_exit47_pro_U0_cols_read);

    cols_c91_U : component fifo_w32_d2_A_x
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Haaris_Core_entry242_U0_cols_out2_din,
        if_full_n => cols_c91_full_n,
        if_write => Haaris_Core_entry242_U0_cols_out2_write,
        if_dout => cols_c91_dout,
        if_empty_n => cols_c91_empty_n,
        if_read => Block_Mat_exit4750_p_U0_cols_read);

    k_c_U : component fifo_w32_d11_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Haaris_Core_entry242_U0_k_out_din,
        if_full_n => k_c_full_n,
        if_write => Haaris_Core_entry242_U0_k_out_write,
        if_dout => k_c_dout,
        if_empty_n => k_c_empty_n,
        if_read => CalCim188_U0_k_read);

    threshold_c_U : component fifo_w32_d12_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Haaris_Core_entry242_U0_threshold_out_din,
        if_full_n => threshold_c_full_n,
        if_write => Haaris_Core_entry242_U0_threshold_out_write,
        if_dout => threshold_c_dout,
        if_empty_n => threshold_c_empty_n,
        if_read => FindMax_U0_threshold_read);

    src_rows_V_c_U : component fifo_w32_d2_A_x
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit47_pro_U0_src_rows_V_out_din,
        if_full_n => src_rows_V_c_full_n,
        if_write => Block_Mat_exit47_pro_U0_src_rows_V_out_write,
        if_dout => src_rows_V_c_dout,
        if_empty_n => src_rows_V_c_empty_n,
        if_read => AXIvideo2Mat_U0_img_rows_V_read);

    src_cols_V_c_U : component fifo_w32_d2_A_x
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit47_pro_U0_src_cols_V_out_din,
        if_full_n => src_cols_V_c_full_n,
        if_write => Block_Mat_exit47_pro_U0_src_cols_V_out_write,
        if_dout => src_cols_V_c_dout,
        if_empty_n => src_cols_V_c_empty_n,
        if_read => AXIvideo2Mat_U0_img_cols_V_read);

    gray_rows_V_c_U : component fifo_w32_d4_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit47_pro_U0_gray_rows_V_out_din,
        if_full_n => gray_rows_V_c_full_n,
        if_write => Block_Mat_exit47_pro_U0_gray_rows_V_out_write,
        if_dout => gray_rows_V_c_dout,
        if_empty_n => gray_rows_V_c_empty_n,
        if_read => Duplicate_1_U0_src_rows_V_read);

    gray_cols_V_c_U : component fifo_w32_d4_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit47_pro_U0_gray_cols_V_out_din,
        if_full_n => gray_cols_V_c_full_n,
        if_write => Block_Mat_exit47_pro_U0_gray_cols_V_out_write,
        if_dout => gray_cols_V_c_dout,
        if_empty_n => gray_cols_V_c_empty_n,
        if_read => Duplicate_1_U0_src_cols_V_read);

    dst0_rows_V_c_U : component fifo_w32_d12_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit47_pro_U0_dst0_rows_V_out_din,
        if_full_n => dst0_rows_V_c_full_n,
        if_write => Block_Mat_exit47_pro_U0_dst0_rows_V_out_write,
        if_dout => dst0_rows_V_c_dout,
        if_empty_n => dst0_rows_V_c_empty_n,
        if_read => Dilate_U0_p_src_rows_V_read);

    dst0_cols_V_c_U : component fifo_w32_d12_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit47_pro_U0_dst0_cols_V_out_din,
        if_full_n => dst0_cols_V_c_full_n,
        if_write => Block_Mat_exit47_pro_U0_dst0_cols_V_out_write,
        if_dout => dst0_cols_V_c_dout,
        if_empty_n => dst0_cols_V_c_empty_n,
        if_read => Dilate_U0_p_src_cols_V_read);

    dst1_rows_V_c_U : component fifo_w32_d13_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit47_pro_U0_dst1_rows_V_out_din,
        if_full_n => dst1_rows_V_c_full_n,
        if_write => Block_Mat_exit47_pro_U0_dst1_rows_V_out_write,
        if_dout => dst1_rows_V_c_dout,
        if_empty_n => dst1_rows_V_c_empty_n,
        if_read => Mat2AXIvideo_U0_img_rows_V_read);

    dst1_cols_V_c_U : component fifo_w32_d13_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit47_pro_U0_dst1_cols_V_out_din,
        if_full_n => dst1_cols_V_c_full_n,
        if_write => Block_Mat_exit47_pro_U0_dst1_cols_V_out_write,
        if_dout => dst1_cols_V_c_dout,
        if_empty_n => dst1_cols_V_c_empty_n,
        if_read => Mat2AXIvideo_U0_img_cols_V_read);

    src_data_stream_0_V_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => AXIvideo2Mat_U0_img_data_stream_0_V_din,
        if_full_n => src_data_stream_0_V_full_n,
        if_write => AXIvideo2Mat_U0_img_data_stream_0_V_write,
        if_dout => src_data_stream_0_V_dout,
        if_empty_n => src_data_stream_0_V_empty_n,
        if_read => CvtColor_U0_p_src_data_stream_0_V_read);

    src_data_stream_1_V_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => AXIvideo2Mat_U0_img_data_stream_1_V_din,
        if_full_n => src_data_stream_1_V_full_n,
        if_write => AXIvideo2Mat_U0_img_data_stream_1_V_write,
        if_dout => src_data_stream_1_V_dout,
        if_empty_n => src_data_stream_1_V_empty_n,
        if_read => CvtColor_U0_p_src_data_stream_1_V_read);

    src_data_stream_2_V_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => AXIvideo2Mat_U0_img_data_stream_2_V_din,
        if_full_n => src_data_stream_2_V_full_n,
        if_write => AXIvideo2Mat_U0_img_data_stream_2_V_write,
        if_dout => src_data_stream_2_V_dout,
        if_empty_n => src_data_stream_2_V_empty_n,
        if_read => CvtColor_U0_p_src_data_stream_2_V_read);

    src_rows_V_c92_U : component fifo_w32_d2_A_x
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => AXIvideo2Mat_U0_img_rows_V_out_din,
        if_full_n => src_rows_V_c92_full_n,
        if_write => AXIvideo2Mat_U0_img_rows_V_out_write,
        if_dout => src_rows_V_c92_dout,
        if_empty_n => src_rows_V_c92_empty_n,
        if_read => CvtColor_U0_p_src_rows_V_read);

    src_cols_V_c93_U : component fifo_w32_d2_A_x
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => AXIvideo2Mat_U0_img_cols_V_out_din,
        if_full_n => src_cols_V_c93_full_n,
        if_write => AXIvideo2Mat_U0_img_cols_V_out_write,
        if_dout => src_cols_V_c93_dout,
        if_empty_n => src_cols_V_c93_empty_n,
        if_read => CvtColor_U0_p_src_cols_V_read);

    gray_data_stream_0_s_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => CvtColor_U0_p_dst_data_stream_V_din,
        if_full_n => gray_data_stream_0_s_full_n,
        if_write => CvtColor_U0_p_dst_data_stream_V_write,
        if_dout => gray_data_stream_0_s_dout,
        if_empty_n => gray_data_stream_0_s_empty_n,
        if_read => Duplicate_1_U0_src_data_stream_V_read);

    res_rows_V_c_U : component fifo_w32_d11_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit4750_p_U0_res_rows_V_out_din,
        if_full_n => res_rows_V_c_full_n,
        if_write => Block_Mat_exit4750_p_U0_res_rows_V_out_write,
        if_dout => res_rows_V_c_dout,
        if_empty_n => res_rows_V_c_empty_n,
        if_read => FindMax_U0_p_src_rows_V_read);

    res_cols_V_c_U : component fifo_w32_d11_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit4750_p_U0_res_cols_V_out_din,
        if_full_n => res_cols_V_c_full_n,
        if_write => Block_Mat_exit4750_p_U0_res_cols_V_out_write,
        if_dout => res_cols_V_c_dout,
        if_empty_n => res_cols_V_c_empty_n,
        if_read => FindMax_U0_p_src_cols_V_read);

    gray1_rows_V_c_U : component fifo_w32_d5_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit4750_p_U0_gray1_rows_V_out_din,
        if_full_n => gray1_rows_V_c_full_n,
        if_write => Block_Mat_exit4750_p_U0_gray1_rows_V_out_write,
        if_dout => gray1_rows_V_c_dout,
        if_empty_n => gray1_rows_V_c_empty_n,
        if_read => Sobel_U0_p_src_rows_V_read);

    gray1_cols_V_c_U : component fifo_w32_d5_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit4750_p_U0_gray1_cols_V_out_din,
        if_full_n => gray1_cols_V_c_full_n,
        if_write => Block_Mat_exit4750_p_U0_gray1_cols_V_out_write,
        if_dout => gray1_cols_V_c_dout,
        if_empty_n => gray1_cols_V_c_empty_n,
        if_read => Sobel_U0_p_src_cols_V_read);

    gray2_rows_V_c_U : component fifo_w32_d5_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit4750_p_U0_gray2_rows_V_out_din,
        if_full_n => gray2_rows_V_c_full_n,
        if_write => Block_Mat_exit4750_p_U0_gray2_rows_V_out_write,
        if_dout => gray2_rows_V_c_dout,
        if_empty_n => gray2_rows_V_c_empty_n,
        if_read => Sobel_1_U0_p_src_rows_V_read);

    gray2_cols_V_c_U : component fifo_w32_d5_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit4750_p_U0_gray2_cols_V_out_din,
        if_full_n => gray2_cols_V_c_full_n,
        if_write => Block_Mat_exit4750_p_U0_gray2_cols_V_out_write,
        if_dout => gray2_cols_V_c_dout,
        if_empty_n => gray2_cols_V_c_empty_n,
        if_read => Sobel_1_U0_p_src_cols_V_read);

    grad_x_rows_V_c_U : component fifo_w32_d6_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit4750_p_U0_grad_x_rows_V_out_din,
        if_full_n => grad_x_rows_V_c_full_n,
        if_write => Block_Mat_exit4750_p_U0_grad_x_rows_V_out_write,
        if_dout => grad_x_rows_V_c_dout,
        if_empty_n => grad_x_rows_V_c_empty_n,
        if_read => Duplicate181_U0_src_rows_V_read);

    grad_x_cols_V_c_U : component fifo_w32_d6_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit4750_p_U0_grad_x_cols_V_out_din,
        if_full_n => grad_x_cols_V_c_full_n,
        if_write => Block_Mat_exit4750_p_U0_grad_x_cols_V_out_write,
        if_dout => grad_x_cols_V_c_dout,
        if_empty_n => grad_x_cols_V_c_empty_n,
        if_read => Duplicate181_U0_src_cols_V_read);

    grad_x1_rows_V_c_U : component fifo_w32_d7_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit4750_p_U0_grad_x1_rows_V_out_din,
        if_full_n => grad_x1_rows_V_c_full_n,
        if_write => Block_Mat_exit4750_p_U0_grad_x1_rows_V_out_write,
        if_dout => grad_x1_rows_V_c_dout,
        if_empty_n => grad_x1_rows_V_c_empty_n,
        if_read => Duplicate182_U0_src_rows_V_read);

    grad_x1_cols_V_c_U : component fifo_w32_d7_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit4750_p_U0_grad_x1_cols_V_out_din,
        if_full_n => grad_x1_cols_V_c_full_n,
        if_write => Block_Mat_exit4750_p_U0_grad_x1_cols_V_out_write,
        if_dout => grad_x1_cols_V_c_dout,
        if_empty_n => grad_x1_cols_V_c_empty_n,
        if_read => Duplicate182_U0_src_cols_V_read);

    grad_x2_rows_V_c_U : component fifo_w32_d7_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit4750_p_U0_grad_x2_rows_V_out_din,
        if_full_n => grad_x2_rows_V_c_full_n,
        if_write => Block_Mat_exit4750_p_U0_grad_x2_rows_V_out_write,
        if_dout => grad_x2_rows_V_c_dout,
        if_empty_n => grad_x2_rows_V_c_empty_n,
        if_read => Mul_U0_src1_rows_V_read);

    grad_x2_cols_V_c_U : component fifo_w32_d7_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit4750_p_U0_grad_x2_cols_V_out_din,
        if_full_n => grad_x2_cols_V_c_full_n,
        if_write => Block_Mat_exit4750_p_U0_grad_x2_cols_V_out_write,
        if_dout => grad_x2_cols_V_c_dout,
        if_empty_n => grad_x2_cols_V_c_empty_n,
        if_read => Mul_U0_src1_cols_V_read);

    grad_x3_rows_V_c_U : component fifo_w32_d8_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit4750_p_U0_grad_x3_rows_V_out_din,
        if_full_n => grad_x3_rows_V_c_full_n,
        if_write => Block_Mat_exit4750_p_U0_grad_x3_rows_V_out_write,
        if_dout => grad_x3_rows_V_c_dout,
        if_empty_n => grad_x3_rows_V_c_empty_n,
        if_read => Mul184_U0_src1_rows_V_read);

    grad_x3_cols_V_c_U : component fifo_w32_d8_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit4750_p_U0_grad_x3_cols_V_out_din,
        if_full_n => grad_x3_cols_V_c_full_n,
        if_write => Block_Mat_exit4750_p_U0_grad_x3_cols_V_out_write,
        if_dout => grad_x3_cols_V_c_dout,
        if_empty_n => grad_x3_cols_V_c_empty_n,
        if_read => Mul184_U0_src1_cols_V_read);

    grad_y_rows_V_c_U : component fifo_w32_d6_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit4750_p_U0_grad_y_rows_V_out_din,
        if_full_n => grad_y_rows_V_c_full_n,
        if_write => Block_Mat_exit4750_p_U0_grad_y_rows_V_out_write,
        if_dout => grad_y_rows_V_c_dout,
        if_empty_n => grad_y_rows_V_c_empty_n,
        if_read => Duplicate183_U0_src_rows_V_read);

    grad_y_cols_V_c_U : component fifo_w32_d6_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit4750_p_U0_grad_y_cols_V_out_din,
        if_full_n => grad_y_cols_V_c_full_n,
        if_write => Block_Mat_exit4750_p_U0_grad_y_cols_V_out_write,
        if_dout => grad_y_cols_V_c_dout,
        if_empty_n => grad_y_cols_V_c_empty_n,
        if_read => Duplicate183_U0_src_cols_V_read);

    grad_y1_rows_V_c_U : component fifo_w32_d7_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit4750_p_U0_grad_y1_rows_V_out_din,
        if_full_n => grad_y1_rows_V_c_full_n,
        if_write => Block_Mat_exit4750_p_U0_grad_y1_rows_V_out_write,
        if_dout => grad_y1_rows_V_c_dout,
        if_empty_n => grad_y1_rows_V_c_empty_n,
        if_read => Duplicate_U0_src_rows_V_read);

    grad_y1_cols_V_c_U : component fifo_w32_d7_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit4750_p_U0_grad_y1_cols_V_out_din,
        if_full_n => grad_y1_cols_V_c_full_n,
        if_write => Block_Mat_exit4750_p_U0_grad_y1_cols_V_out_write,
        if_dout => grad_y1_cols_V_c_dout,
        if_empty_n => grad_y1_cols_V_c_empty_n,
        if_read => Duplicate_U0_src_cols_V_read);

    grad_y3_rows_V_c_U : component fifo_w32_d8_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit4750_p_U0_grad_y3_rows_V_out_din,
        if_full_n => grad_y3_rows_V_c_full_n,
        if_write => Block_Mat_exit4750_p_U0_grad_y3_rows_V_out_write,
        if_dout => grad_y3_rows_V_c_dout,
        if_empty_n => grad_y3_rows_V_c_empty_n,
        if_read => Mul185_U0_src1_rows_V_read);

    grad_y3_cols_V_c_U : component fifo_w32_d8_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit4750_p_U0_grad_y3_cols_V_out_din,
        if_full_n => grad_y3_cols_V_c_full_n,
        if_write => Block_Mat_exit4750_p_U0_grad_y3_cols_V_out_write,
        if_dout => grad_y3_cols_V_c_dout,
        if_empty_n => grad_y3_cols_V_c_empty_n,
        if_read => Mul185_U0_src1_cols_V_read);

    grad_xx_rows_V_c_U : component fifo_w32_d9_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit4750_p_U0_grad_xx_rows_V_out_din,
        if_full_n => grad_xx_rows_V_c_full_n,
        if_write => Block_Mat_exit4750_p_U0_grad_xx_rows_V_out_write,
        if_dout => grad_xx_rows_V_c_dout,
        if_empty_n => grad_xx_rows_V_c_empty_n,
        if_read => BoxFilter186_U0_p_src_rows_V_read);

    grad_xx_cols_V_c_U : component fifo_w32_d9_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit4750_p_U0_grad_xx_cols_V_out_din,
        if_full_n => grad_xx_cols_V_c_full_n,
        if_write => Block_Mat_exit4750_p_U0_grad_xx_cols_V_out_write,
        if_dout => grad_xx_cols_V_c_dout,
        if_empty_n => grad_xx_cols_V_c_empty_n,
        if_read => BoxFilter186_U0_p_src_cols_V_read);

    grad_yy_rows_V_c_U : component fifo_w32_d9_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit4750_p_U0_grad_yy_rows_V_out_din,
        if_full_n => grad_yy_rows_V_c_full_n,
        if_write => Block_Mat_exit4750_p_U0_grad_yy_rows_V_out_write,
        if_dout => grad_yy_rows_V_c_dout,
        if_empty_n => grad_yy_rows_V_c_empty_n,
        if_read => BoxFilter187_U0_p_src_rows_V_read);

    grad_yy_cols_V_c_U : component fifo_w32_d9_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit4750_p_U0_grad_yy_cols_V_out_din,
        if_full_n => grad_yy_cols_V_c_full_n,
        if_write => Block_Mat_exit4750_p_U0_grad_yy_cols_V_out_write,
        if_dout => grad_yy_cols_V_c_dout,
        if_empty_n => grad_yy_cols_V_c_empty_n,
        if_read => BoxFilter187_U0_p_src_cols_V_read);

    grad_xy_rows_V_c_U : component fifo_w32_d8_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit4750_p_U0_grad_xy_rows_V_out_din,
        if_full_n => grad_xy_rows_V_c_full_n,
        if_write => Block_Mat_exit4750_p_U0_grad_xy_rows_V_out_write,
        if_dout => grad_xy_rows_V_c_dout,
        if_empty_n => grad_xy_rows_V_c_empty_n,
        if_read => BoxFilter_U0_p_src_rows_V_read);

    grad_xy_cols_V_c_U : component fifo_w32_d8_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit4750_p_U0_grad_xy_cols_V_out_din,
        if_full_n => grad_xy_cols_V_c_full_n,
        if_write => Block_Mat_exit4750_p_U0_grad_xy_cols_V_out_write,
        if_dout => grad_xy_cols_V_c_dout,
        if_empty_n => grad_xy_cols_V_c_empty_n,
        if_read => BoxFilter_U0_p_src_cols_V_read);

    grad_gy_rows_V_c_U : component fifo_w32_d10_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit4750_p_U0_grad_gy_rows_V_out_din,
        if_full_n => grad_gy_rows_V_c_full_n,
        if_write => Block_Mat_exit4750_p_U0_grad_gy_rows_V_out_write,
        if_dout => grad_gy_rows_V_c_dout,
        if_empty_n => grad_gy_rows_V_c_empty_n,
        if_read => CalCim188_U0_p_grady_rows_V_read);

    grad_gy_cols_V_c_U : component fifo_w32_d10_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit4750_p_U0_grad_gy_cols_V_out_din,
        if_full_n => grad_gy_cols_V_c_full_n,
        if_write => Block_Mat_exit4750_p_U0_grad_gy_cols_V_out_write,
        if_dout => grad_gy_cols_V_c_dout,
        if_empty_n => grad_gy_cols_V_c_empty_n,
        if_read => CalCim188_U0_p_grady_cols_V_read);

    gray1_data_stream_0_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Duplicate_1_U0_dst1_data_stream_V_din,
        if_full_n => gray1_data_stream_0_full_n,
        if_write => Duplicate_1_U0_dst1_data_stream_V_write,
        if_dout => gray1_data_stream_0_dout,
        if_empty_n => gray1_data_stream_0_empty_n,
        if_read => Sobel_U0_p_src_data_stream_V_read);

    gray2_data_stream_0_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Duplicate_1_U0_dst2_data_stream_V_din,
        if_full_n => gray2_data_stream_0_full_n,
        if_write => Duplicate_1_U0_dst2_data_stream_V_write,
        if_dout => gray2_data_stream_0_dout,
        if_empty_n => gray2_data_stream_0_empty_n,
        if_read => Sobel_1_U0_p_src_data_stream_V_read);

    grad_x_data_stream_0_U : component fifo_w15_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Sobel_U0_p_dst_data_stream_V_V_din,
        if_full_n => grad_x_data_stream_0_full_n,
        if_write => Sobel_U0_p_dst_data_stream_V_V_write,
        if_dout => grad_x_data_stream_0_dout,
        if_empty_n => grad_x_data_stream_0_empty_n,
        if_read => Duplicate181_U0_src_data_stream_V_V_read);

    grad_x1_data_stream_s_U : component fifo_w15_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Duplicate181_U0_dst1_data_stream_V_V_din,
        if_full_n => grad_x1_data_stream_s_full_n,
        if_write => Duplicate181_U0_dst1_data_stream_V_V_write,
        if_dout => grad_x1_data_stream_s_dout,
        if_empty_n => grad_x1_data_stream_s_empty_n,
        if_read => Duplicate182_U0_src_data_stream_V_V_read);

    grad_x2_data_stream_s_U : component fifo_w15_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Duplicate181_U0_dst2_data_stream_V_V_din,
        if_full_n => grad_x2_data_stream_s_full_n,
        if_write => Duplicate181_U0_dst2_data_stream_V_V_write,
        if_dout => grad_x2_data_stream_s_dout,
        if_empty_n => grad_x2_data_stream_s_empty_n,
        if_read => Mul_U0_src1_data_stream_V_V_read);

    grad_x3_data_stream_s_U : component fifo_w15_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Duplicate182_U0_dst1_data_stream_V_V_din,
        if_full_n => grad_x3_data_stream_s_full_n,
        if_write => Duplicate182_U0_dst1_data_stream_V_V_write,
        if_dout => grad_x3_data_stream_s_dout,
        if_empty_n => grad_x3_data_stream_s_empty_n,
        if_read => Mul184_U0_src1_data_stream_V_V_read);

    grad_x4_data_stream_s_U : component fifo_w15_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Duplicate182_U0_dst2_data_stream_V_V_din,
        if_full_n => grad_x4_data_stream_s_full_n,
        if_write => Duplicate182_U0_dst2_data_stream_V_V_write,
        if_dout => grad_x4_data_stream_s_dout,
        if_empty_n => grad_x4_data_stream_s_empty_n,
        if_read => Mul184_U0_src2_data_stream_V_V_read);

    grad_y_data_stream_0_U : component fifo_w15_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Sobel_1_U0_p_dst_data_stream_V_V_din,
        if_full_n => grad_y_data_stream_0_full_n,
        if_write => Sobel_1_U0_p_dst_data_stream_V_V_write,
        if_dout => grad_y_data_stream_0_dout,
        if_empty_n => grad_y_data_stream_0_empty_n,
        if_read => Duplicate183_U0_src_data_stream_V_V_read);

    grad_y1_data_stream_s_U : component fifo_w15_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Duplicate183_U0_dst1_data_stream_V_V_din,
        if_full_n => grad_y1_data_stream_s_full_n,
        if_write => Duplicate183_U0_dst1_data_stream_V_V_write,
        if_dout => grad_y1_data_stream_s_dout,
        if_empty_n => grad_y1_data_stream_s_empty_n,
        if_read => Duplicate_U0_src_data_stream_V_V_read);

    grad_y2_data_stream_s_U : component fifo_w15_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Duplicate183_U0_dst2_data_stream_V_V_din,
        if_full_n => grad_y2_data_stream_s_full_n,
        if_write => Duplicate183_U0_dst2_data_stream_V_V_write,
        if_dout => grad_y2_data_stream_s_dout,
        if_empty_n => grad_y2_data_stream_s_empty_n,
        if_read => Mul_U0_src2_data_stream_V_V_read);

    grad_y3_data_stream_s_U : component fifo_w15_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Duplicate_U0_dst1_data_stream_V_V_din,
        if_full_n => grad_y3_data_stream_s_full_n,
        if_write => Duplicate_U0_dst1_data_stream_V_V_write,
        if_dout => grad_y3_data_stream_s_dout,
        if_empty_n => grad_y3_data_stream_s_empty_n,
        if_read => Mul185_U0_src1_data_stream_V_V_read);

    grad_y4_data_stream_s_U : component fifo_w15_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Duplicate_U0_dst2_data_stream_V_V_din,
        if_full_n => grad_y4_data_stream_s_full_n,
        if_write => Duplicate_U0_dst2_data_stream_V_V_write,
        if_dout => grad_y4_data_stream_s_dout,
        if_empty_n => grad_y4_data_stream_s_empty_n,
        if_read => Mul185_U0_src2_data_stream_V_V_read);

    grad_xx_data_stream_s_U : component fifo_w35_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Mul184_U0_dst_data_stream_V_V_din,
        if_full_n => grad_xx_data_stream_s_full_n,
        if_write => Mul184_U0_dst_data_stream_V_V_write,
        if_dout => grad_xx_data_stream_s_dout,
        if_empty_n => grad_xx_data_stream_s_empty_n,
        if_read => BoxFilter186_U0_p_src_data_stream_V_V_read);

    grad_yy_data_stream_s_U : component fifo_w35_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Mul185_U0_dst_data_stream_V_V_din,
        if_full_n => grad_yy_data_stream_s_full_n,
        if_write => Mul185_U0_dst_data_stream_V_V_write,
        if_dout => grad_yy_data_stream_s_dout,
        if_empty_n => grad_yy_data_stream_s_empty_n,
        if_read => BoxFilter187_U0_p_src_data_stream_V_V_read);

    grad_xy_data_stream_s_U : component fifo_w35_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Mul_U0_dst_data_stream_V_V_din,
        if_full_n => grad_xy_data_stream_s_full_n,
        if_write => Mul_U0_dst_data_stream_V_V_write,
        if_dout => grad_xy_data_stream_s_dout,
        if_empty_n => grad_xy_data_stream_s_empty_n,
        if_read => BoxFilter_U0_p_src_data_stream_V_V_read);

    grad_gx_data_stream_s_U : component fifo_w35_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => BoxFilter186_U0_p_dst_data_stream_V_V_din,
        if_full_n => grad_gx_data_stream_s_full_n,
        if_write => BoxFilter186_U0_p_dst_data_stream_V_V_write,
        if_dout => grad_gx_data_stream_s_dout,
        if_empty_n => grad_gx_data_stream_s_empty_n,
        if_read => CalCim188_U0_p_gradx_data_stream_V_V_read);

    grad_gy_data_stream_s_U : component fifo_w35_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => BoxFilter187_U0_p_dst_data_stream_V_V_din,
        if_full_n => grad_gy_data_stream_s_full_n,
        if_write => BoxFilter187_U0_p_dst_data_stream_V_V_write,
        if_dout => grad_gy_data_stream_s_dout,
        if_empty_n => grad_gy_data_stream_s_empty_n,
        if_read => CalCim188_U0_p_grady_data_stream_V_V_read);

    grad_gxy_data_stream_U : component fifo_w35_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => BoxFilter_U0_p_dst_data_stream_V_V_din,
        if_full_n => grad_gxy_data_stream_full_n,
        if_write => BoxFilter_U0_p_dst_data_stream_V_V_write,
        if_dout => grad_gxy_data_stream_dout,
        if_empty_n => grad_gxy_data_stream_empty_n,
        if_read => CalCim188_U0_p_gradxy_data_stream_V_V_read);

    res_data_stream_0_V_U : component fifo_w32_d2_A_x
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => CalCim188_U0_p_dst_data_stream_V_din,
        if_full_n => res_data_stream_0_V_full_n,
        if_write => CalCim188_U0_p_dst_data_stream_V_write,
        if_dout => res_data_stream_0_V_dout,
        if_empty_n => res_data_stream_0_V_empty_n,
        if_read => FindMax_U0_p_src_data_stream_V_read);

    dst0_data_stream_0_s_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => FindMax_U0_p_dst_data_stream_V_din,
        if_full_n => dst0_data_stream_0_s_full_n,
        if_write => FindMax_U0_p_dst_data_stream_V_write,
        if_dout => dst0_data_stream_0_s_dout,
        if_empty_n => dst0_data_stream_0_s_empty_n,
        if_read => Dilate_U0_p_src_data_stream_V_read);

    dst1_data_stream_0_s_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Dilate_U0_p_dst_data_stream_V_din,
        if_full_n => dst1_data_stream_0_s_full_n,
        if_write => Dilate_U0_p_dst_data_stream_V_write,
        if_dout => dst1_data_stream_0_s_dout,
        if_empty_n => dst1_data_stream_0_s_empty_n,
        if_read => Mat2AXIvideo_U0_img_data_stream_V_read);

    start_for_Block_MVhK_U : component start_for_Block_MVhK
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Block_Mat_exit47_pro_U0_din,
        if_full_n => start_for_Block_Mat_exit47_pro_U0_full_n,
        if_write => Haaris_Core_entry242_U0_start_write,
        if_dout => start_for_Block_Mat_exit47_pro_U0_dout,
        if_empty_n => start_for_Block_Mat_exit47_pro_U0_empty_n,
        if_read => Block_Mat_exit47_pro_U0_ap_ready);

    start_for_Block_MWhU_U : component start_for_Block_MWhU
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Block_Mat_exit4750_p_U0_din,
        if_full_n => start_for_Block_Mat_exit4750_p_U0_full_n,
        if_write => Haaris_Core_entry242_U0_start_write,
        if_dout => start_for_Block_Mat_exit4750_p_U0_dout,
        if_empty_n => start_for_Block_Mat_exit4750_p_U0_empty_n,
        if_read => Block_Mat_exit4750_p_U0_ap_ready);

    start_for_CalCim1Xh4_U : component start_for_CalCim1Xh4
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_CalCim188_U0_din,
        if_full_n => start_for_CalCim188_U0_full_n,
        if_write => Haaris_Core_entry242_U0_start_write,
        if_dout => start_for_CalCim188_U0_dout,
        if_empty_n => start_for_CalCim188_U0_empty_n,
        if_read => CalCim188_U0_ap_ready);

    start_for_FindMaxYie_U : component start_for_FindMaxYie
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_FindMax_U0_din,
        if_full_n => start_for_FindMax_U0_full_n,
        if_write => Haaris_Core_entry242_U0_start_write,
        if_dout => start_for_FindMax_U0_dout,
        if_empty_n => start_for_FindMax_U0_empty_n,
        if_read => FindMax_U0_ap_ready);

    start_for_DuplicaZio_U : component start_for_DuplicaZio
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Duplicate_1_U0_din,
        if_full_n => start_for_Duplicate_1_U0_full_n,
        if_write => Block_Mat_exit47_pro_U0_start_write,
        if_dout => start_for_Duplicate_1_U0_dout,
        if_empty_n => start_for_Duplicate_1_U0_empty_n,
        if_read => Duplicate_1_U0_ap_ready);

    start_for_Dilate_U0_U : component start_for_Dilate_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Dilate_U0_din,
        if_full_n => start_for_Dilate_U0_full_n,
        if_write => Block_Mat_exit47_pro_U0_start_write,
        if_dout => start_for_Dilate_U0_dout,
        if_empty_n => start_for_Dilate_U0_empty_n,
        if_read => Dilate_U0_ap_ready);

    start_for_Mat2AXI0iy_U : component start_for_Mat2AXI0iy
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Mat2AXIvideo_U0_din,
        if_full_n => start_for_Mat2AXIvideo_U0_full_n,
        if_write => Block_Mat_exit47_pro_U0_start_write,
        if_dout => start_for_Mat2AXIvideo_U0_dout,
        if_empty_n => start_for_Mat2AXIvideo_U0_empty_n,
        if_read => Mat2AXIvideo_U0_ap_ready);

    start_for_CvtColo1iI_U : component start_for_CvtColo1iI
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_CvtColor_U0_din,
        if_full_n => start_for_CvtColor_U0_full_n,
        if_write => AXIvideo2Mat_U0_start_write,
        if_dout => start_for_CvtColor_U0_dout,
        if_empty_n => start_for_CvtColor_U0_empty_n,
        if_read => CvtColor_U0_ap_ready);

    start_for_Sobel_U0_U : component start_for_Sobel_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Sobel_U0_din,
        if_full_n => start_for_Sobel_U0_full_n,
        if_write => Block_Mat_exit4750_p_U0_start_write,
        if_dout => start_for_Sobel_U0_dout,
        if_empty_n => start_for_Sobel_U0_empty_n,
        if_read => Sobel_U0_ap_ready);

    start_for_Duplica2iS_U : component start_for_Duplica2iS
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Duplicate181_U0_din,
        if_full_n => start_for_Duplicate181_U0_full_n,
        if_write => Block_Mat_exit4750_p_U0_start_write,
        if_dout => start_for_Duplicate181_U0_dout,
        if_empty_n => start_for_Duplicate181_U0_empty_n,
        if_read => Duplicate181_U0_ap_ready);

    start_for_Duplica3i2_U : component start_for_Duplica3i2
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Duplicate182_U0_din,
        if_full_n => start_for_Duplicate182_U0_full_n,
        if_write => Block_Mat_exit4750_p_U0_start_write,
        if_dout => start_for_Duplicate182_U0_dout,
        if_empty_n => start_for_Duplicate182_U0_empty_n,
        if_read => Duplicate182_U0_ap_ready);

    start_for_Sobel_14jc_U : component start_for_Sobel_14jc
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Sobel_1_U0_din,
        if_full_n => start_for_Sobel_1_U0_full_n,
        if_write => Block_Mat_exit4750_p_U0_start_write,
        if_dout => start_for_Sobel_1_U0_dout,
        if_empty_n => start_for_Sobel_1_U0_empty_n,
        if_read => Sobel_1_U0_ap_ready);

    start_for_Duplica5jm_U : component start_for_Duplica5jm
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Duplicate183_U0_din,
        if_full_n => start_for_Duplicate183_U0_full_n,
        if_write => Block_Mat_exit4750_p_U0_start_write,
        if_dout => start_for_Duplicate183_U0_dout,
        if_empty_n => start_for_Duplicate183_U0_empty_n,
        if_read => Duplicate183_U0_ap_ready);

    start_for_Duplica6jw_U : component start_for_Duplica6jw
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Duplicate_U0_din,
        if_full_n => start_for_Duplicate_U0_full_n,
        if_write => Block_Mat_exit4750_p_U0_start_write,
        if_dout => start_for_Duplicate_U0_dout,
        if_empty_n => start_for_Duplicate_U0_empty_n,
        if_read => Duplicate_U0_ap_ready);

    start_for_Mul184_U0_U : component start_for_Mul184_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Mul184_U0_din,
        if_full_n => start_for_Mul184_U0_full_n,
        if_write => Block_Mat_exit4750_p_U0_start_write,
        if_dout => start_for_Mul184_U0_dout,
        if_empty_n => start_for_Mul184_U0_empty_n,
        if_read => Mul184_U0_ap_ready);

    start_for_Mul185_U0_U : component start_for_Mul185_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Mul185_U0_din,
        if_full_n => start_for_Mul185_U0_full_n,
        if_write => Block_Mat_exit4750_p_U0_start_write,
        if_dout => start_for_Mul185_U0_dout,
        if_empty_n => start_for_Mul185_U0_empty_n,
        if_read => Mul185_U0_ap_ready);

    start_for_Mul_U0_U : component start_for_Mul_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Mul_U0_din,
        if_full_n => start_for_Mul_U0_full_n,
        if_write => Block_Mat_exit4750_p_U0_start_write,
        if_dout => start_for_Mul_U0_dout,
        if_empty_n => start_for_Mul_U0_empty_n,
        if_read => Mul_U0_ap_ready);

    start_for_BoxFilt7jG_U : component start_for_BoxFilt7jG
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_BoxFilter186_U0_din,
        if_full_n => start_for_BoxFilter186_U0_full_n,
        if_write => Block_Mat_exit4750_p_U0_start_write,
        if_dout => start_for_BoxFilter186_U0_dout,
        if_empty_n => start_for_BoxFilter186_U0_empty_n,
        if_read => BoxFilter186_U0_ap_ready);

    start_for_BoxFilt8jQ_U : component start_for_BoxFilt8jQ
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_BoxFilter187_U0_din,
        if_full_n => start_for_BoxFilter187_U0_full_n,
        if_write => Block_Mat_exit4750_p_U0_start_write,
        if_dout => start_for_BoxFilter187_U0_dout,
        if_empty_n => start_for_BoxFilter187_U0_empty_n,
        if_read => BoxFilter187_U0_ap_ready);

    start_for_BoxFilt9j0_U : component start_for_BoxFilt9j0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_BoxFilter_U0_din,
        if_full_n => start_for_BoxFilter_U0_full_n,
        if_write => Block_Mat_exit4750_p_U0_start_write,
        if_dout => start_for_BoxFilter_U0_dout,
        if_empty_n => start_for_BoxFilter_U0_empty_n,
        if_read => BoxFilter_U0_ap_ready);





    ap_sync_reg_AXIvideo2Mat_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_AXIvideo2Mat_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_AXIvideo2Mat_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_AXIvideo2Mat_U0_ap_ready <= ap_sync_AXIvideo2Mat_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_Haaris_Core_entry242_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_Haaris_Core_entry242_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_Haaris_Core_entry242_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_Haaris_Core_entry242_U0_ap_ready <= ap_sync_Haaris_Core_entry242_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    AXIvideo2Mat_U0_ap_ready_count_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_sync_ready = ap_const_logic_1) and (ap_const_logic_0 = AXIvideo2Mat_U0_ap_ready))) then 
                AXIvideo2Mat_U0_ap_ready_count <= std_logic_vector(unsigned(AXIvideo2Mat_U0_ap_ready_count) - unsigned(ap_const_lv2_1));
            elsif (((ap_const_logic_1 = AXIvideo2Mat_U0_ap_ready) and (ap_sync_ready = ap_const_logic_0))) then 
                AXIvideo2Mat_U0_ap_ready_count <= std_logic_vector(unsigned(AXIvideo2Mat_U0_ap_ready_count) + unsigned(ap_const_lv2_1));
            end if; 
        end if;
    end process;

    Haaris_Core_entry242_U0_ap_ready_count_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_0 = Haaris_Core_entry242_U0_ap_ready) and (ap_sync_ready = ap_const_logic_1))) then 
                Haaris_Core_entry242_U0_ap_ready_count <= std_logic_vector(unsigned(Haaris_Core_entry242_U0_ap_ready_count) - unsigned(ap_const_lv2_1));
            elsif (((ap_const_logic_1 = Haaris_Core_entry242_U0_ap_ready) and (ap_sync_ready = ap_const_logic_0))) then 
                Haaris_Core_entry242_U0_ap_ready_count <= std_logic_vector(unsigned(Haaris_Core_entry242_U0_ap_ready_count) + unsigned(ap_const_lv2_1));
            end if; 
        end if;
    end process;
    AXIvideo2Mat_U0_ap_continue <= ap_const_logic_1;
    AXIvideo2Mat_U0_ap_start <= ((ap_sync_reg_AXIvideo2Mat_U0_ap_ready xor ap_const_logic_1) and ap_start);
    Block_Mat_exit4750_p_U0_ap_continue <= ap_const_logic_1;
    Block_Mat_exit4750_p_U0_ap_start <= start_for_Block_Mat_exit4750_p_U0_empty_n;
    Block_Mat_exit4750_p_U0_start_full_n <= (start_for_Sobel_U0_full_n and start_for_Sobel_1_U0_full_n and start_for_Mul_U0_full_n and start_for_Mul185_U0_full_n and start_for_Mul184_U0_full_n and start_for_Duplicate_U0_full_n and start_for_Duplicate183_U0_full_n and start_for_Duplicate182_U0_full_n and start_for_Duplicate181_U0_full_n and start_for_BoxFilter_U0_full_n and start_for_BoxFilter187_U0_full_n and start_for_BoxFilter186_U0_full_n);
    Block_Mat_exit47_pro_U0_ap_continue <= ap_const_logic_1;
    Block_Mat_exit47_pro_U0_ap_start <= start_for_Block_Mat_exit47_pro_U0_empty_n;
    Block_Mat_exit47_pro_U0_start_full_n <= (start_for_Mat2AXIvideo_U0_full_n and start_for_Duplicate_1_U0_full_n and start_for_Dilate_U0_full_n);
    BoxFilter186_U0_ap_continue <= ap_const_logic_1;
    BoxFilter186_U0_ap_start <= start_for_BoxFilter186_U0_empty_n;
    BoxFilter186_U0_start_full_n <= ap_const_logic_1;
    BoxFilter186_U0_start_write <= ap_const_logic_0;
    BoxFilter187_U0_ap_continue <= ap_const_logic_1;
    BoxFilter187_U0_ap_start <= start_for_BoxFilter187_U0_empty_n;
    BoxFilter187_U0_start_full_n <= ap_const_logic_1;
    BoxFilter187_U0_start_write <= ap_const_logic_0;
    BoxFilter_U0_ap_continue <= ap_const_logic_1;
    BoxFilter_U0_ap_start <= start_for_BoxFilter_U0_empty_n;
    BoxFilter_U0_start_full_n <= ap_const_logic_1;
    BoxFilter_U0_start_write <= ap_const_logic_0;
    CalCim188_U0_ap_continue <= ap_const_logic_1;
    CalCim188_U0_ap_start <= start_for_CalCim188_U0_empty_n;
    CalCim188_U0_start_full_n <= ap_const_logic_1;
    CalCim188_U0_start_write <= ap_const_logic_0;
    CvtColor_U0_ap_continue <= ap_const_logic_1;
    CvtColor_U0_ap_start <= start_for_CvtColor_U0_empty_n;
    CvtColor_U0_start_full_n <= ap_const_logic_1;
    CvtColor_U0_start_write <= ap_const_logic_0;
    Dilate_U0_ap_continue <= ap_const_logic_1;
    Dilate_U0_ap_start <= start_for_Dilate_U0_empty_n;
    Dilate_U0_start_full_n <= ap_const_logic_1;
    Dilate_U0_start_write <= ap_const_logic_0;
    Duplicate181_U0_ap_continue <= ap_const_logic_1;
    Duplicate181_U0_ap_start <= start_for_Duplicate181_U0_empty_n;
    Duplicate181_U0_start_full_n <= ap_const_logic_1;
    Duplicate181_U0_start_write <= ap_const_logic_0;
    Duplicate182_U0_ap_continue <= ap_const_logic_1;
    Duplicate182_U0_ap_start <= start_for_Duplicate182_U0_empty_n;
    Duplicate182_U0_start_full_n <= ap_const_logic_1;
    Duplicate182_U0_start_write <= ap_const_logic_0;
    Duplicate183_U0_ap_continue <= ap_const_logic_1;
    Duplicate183_U0_ap_start <= start_for_Duplicate183_U0_empty_n;
    Duplicate183_U0_start_full_n <= ap_const_logic_1;
    Duplicate183_U0_start_write <= ap_const_logic_0;
    Duplicate_1_U0_ap_continue <= ap_const_logic_1;
    Duplicate_1_U0_ap_start <= start_for_Duplicate_1_U0_empty_n;
    Duplicate_1_U0_start_full_n <= ap_const_logic_1;
    Duplicate_1_U0_start_write <= ap_const_logic_0;
    Duplicate_U0_ap_continue <= ap_const_logic_1;
    Duplicate_U0_ap_start <= start_for_Duplicate_U0_empty_n;
    Duplicate_U0_start_full_n <= ap_const_logic_1;
    Duplicate_U0_start_write <= ap_const_logic_0;
    FindMax_U0_ap_continue <= ap_const_logic_1;
    FindMax_U0_ap_start <= start_for_FindMax_U0_empty_n;
    FindMax_U0_start_full_n <= ap_const_logic_1;
    FindMax_U0_start_write <= ap_const_logic_0;
    Haaris_Core_entry242_U0_ap_continue <= ap_const_logic_1;
    Haaris_Core_entry242_U0_ap_start <= ((ap_sync_reg_Haaris_Core_entry242_U0_ap_ready xor ap_const_logic_1) and ap_start);
    Haaris_Core_entry242_U0_start_full_n <= (start_for_FindMax_U0_full_n and start_for_CalCim188_U0_full_n and start_for_Block_Mat_exit47_pro_U0_full_n and start_for_Block_Mat_exit4750_p_U0_full_n);
    Mat2AXIvideo_U0_ap_continue <= ap_const_logic_1;
    Mat2AXIvideo_U0_ap_start <= start_for_Mat2AXIvideo_U0_empty_n;
    Mat2AXIvideo_U0_start_full_n <= ap_const_logic_1;
    Mat2AXIvideo_U0_start_write <= ap_const_logic_0;
    Mul184_U0_ap_continue <= ap_const_logic_1;
    Mul184_U0_ap_start <= start_for_Mul184_U0_empty_n;
    Mul184_U0_start_full_n <= ap_const_logic_1;
    Mul184_U0_start_write <= ap_const_logic_0;
    Mul185_U0_ap_continue <= ap_const_logic_1;
    Mul185_U0_ap_start <= start_for_Mul185_U0_empty_n;
    Mul185_U0_start_full_n <= ap_const_logic_1;
    Mul185_U0_start_write <= ap_const_logic_0;
    Mul_U0_ap_continue <= ap_const_logic_1;
    Mul_U0_ap_start <= start_for_Mul_U0_empty_n;
    Mul_U0_start_full_n <= ap_const_logic_1;
    Mul_U0_start_write <= ap_const_logic_0;
    Sobel_1_U0_ap_continue <= ap_const_logic_1;
    Sobel_1_U0_ap_start <= start_for_Sobel_1_U0_empty_n;
    Sobel_1_U0_start_full_n <= ap_const_logic_1;
    Sobel_1_U0_start_write <= ap_const_logic_0;
    Sobel_U0_ap_continue <= ap_const_logic_1;
    Sobel_U0_ap_start <= start_for_Sobel_U0_empty_n;
    Sobel_U0_start_full_n <= ap_const_logic_1;
    Sobel_U0_start_write <= ap_const_logic_0;
    ap_done <= Mat2AXIvideo_U0_ap_done;
    ap_idle <= (Sobel_U0_ap_idle and Sobel_1_U0_ap_idle and Mul_U0_ap_idle and Mul185_U0_ap_idle and Mul184_U0_ap_idle and Mat2AXIvideo_U0_ap_idle and Haaris_Core_entry242_U0_ap_idle and FindMax_U0_ap_idle and Duplicate_U0_ap_idle and Duplicate_1_U0_ap_idle and Duplicate183_U0_ap_idle and Duplicate182_U0_ap_idle and Duplicate181_U0_ap_idle and Dilate_U0_ap_idle and CvtColor_U0_ap_idle and CalCim188_U0_ap_idle and BoxFilter_U0_ap_idle and BoxFilter187_U0_ap_idle and BoxFilter186_U0_ap_idle and Block_Mat_exit47_pro_U0_ap_idle and Block_Mat_exit4750_p_U0_ap_idle and AXIvideo2Mat_U0_ap_idle);
    ap_ready <= ap_sync_ready;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    ap_sync_AXIvideo2Mat_U0_ap_ready <= (ap_sync_reg_AXIvideo2Mat_U0_ap_ready or AXIvideo2Mat_U0_ap_ready);
    ap_sync_Haaris_Core_entry242_U0_ap_ready <= (ap_sync_reg_Haaris_Core_entry242_U0_ap_ready or Haaris_Core_entry242_U0_ap_ready);
    ap_sync_continue <= ap_const_logic_1;
    ap_sync_done <= Mat2AXIvideo_U0_ap_done;
    ap_sync_ready <= (ap_sync_Haaris_Core_entry242_U0_ap_ready and ap_sync_AXIvideo2Mat_U0_ap_ready);
    dst_axis_TDATA <= Mat2AXIvideo_U0_dst_axis_TDATA;
    dst_axis_TDEST <= Mat2AXIvideo_U0_dst_axis_TDEST;
    dst_axis_TID <= Mat2AXIvideo_U0_dst_axis_TID;
    dst_axis_TKEEP <= Mat2AXIvideo_U0_dst_axis_TKEEP;
    dst_axis_TLAST <= Mat2AXIvideo_U0_dst_axis_TLAST;
    dst_axis_TSTRB <= Mat2AXIvideo_U0_dst_axis_TSTRB;
    dst_axis_TUSER <= Mat2AXIvideo_U0_dst_axis_TUSER;
    dst_axis_TVALID <= Mat2AXIvideo_U0_dst_axis_TVALID;
    src_axis_TREADY <= AXIvideo2Mat_U0_src_axis_TREADY;
    start_for_Block_Mat_exit4750_p_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Block_Mat_exit47_pro_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_BoxFilter186_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_BoxFilter187_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_BoxFilter_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_CalCim188_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_CvtColor_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Dilate_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Duplicate181_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Duplicate182_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Duplicate183_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Duplicate_1_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Duplicate_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_FindMax_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Mat2AXIvideo_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Mul184_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Mul185_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Mul_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Sobel_1_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Sobel_U0_din <= (0=>ap_const_logic_1, others=>'-');
end behav;
