-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity column_filter is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    p_src_data_stream_V_V_dout : IN STD_LOGIC_VECTOR (34 downto 0);
    p_src_data_stream_V_V_empty_n : IN STD_LOGIC;
    p_src_data_stream_V_V_read : OUT STD_LOGIC;
    p_dst_V_V_din : OUT STD_LOGIC_VECTOR (39 downto 0);
    p_dst_V_V_full_n : IN STD_LOGIC;
    p_dst_V_V_write : OUT STD_LOGIC;
    p_read : IN STD_LOGIC_VECTOR (0 downto 0);
    rows_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    rows_empty_n : IN STD_LOGIC;
    rows_read : OUT STD_LOGIC;
    cols_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    cols_empty_n : IN STD_LOGIC;
    cols_read : OUT STD_LOGIC;
    rows_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    rows_out_full_n : IN STD_LOGIC;
    rows_out_write : OUT STD_LOGIC;
    cols_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    cols_out_full_n : IN STD_LOGIC;
    cols_out_write : OUT STD_LOGIC );
end;


architecture behav of column_filter is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_FFFFFFF9 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_FFFFFFFE : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111110";
    constant ap_const_lv32_FFFFFFFD : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111101";
    constant ap_const_lv32_FFFFFFFC : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111100";
    constant ap_const_lv32_FFFFFFFB : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111011";
    constant ap_const_lv32_FFFFFFFA : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111010";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal p_src_data_stream_V_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal tmp_13_i_reg_1285 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_dst_V_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal tmp_14_i_reg_1289 : STD_LOGIC_VECTOR (0 downto 0);
    signal rows_blk_n : STD_LOGIC;
    signal cols_blk_n : STD_LOGIC;
    signal rows_out_blk_n : STD_LOGIC;
    signal cols_out_blk_n : STD_LOGIC;
    signal t_V_2_reg_300 : STD_LOGIC_VECTOR (31 downto 0);
    signal stop_row_reg_1200 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal widthloop_reg_1213 : STD_LOGIC_VECTOR (31 downto 0);
    signal start_row_cast_i_cas_fu_324_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal start_row_cast_i_cas_reg_1218 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_i_fu_332_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_i_reg_1224 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_i_fu_338_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_i_reg_1235 : STD_LOGIC_VECTOR (31 downto 0);
    signal index_fu_344_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal index_reg_1240 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_0_1_cast_i_fu_356_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_0_1_cast_i_reg_1251 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_0_2_cast_i_cast_fu_360_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_0_2_cast_i_cast_reg_1256 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_0_3_cast_i_cast_fu_368_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_0_3_cast_i_cast_reg_1261 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_0_4_cast_i_cast_fu_376_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_0_4_cast_i_cast_reg_1266 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_0_5_cast_i_cast_fu_384_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_0_5_cast_i_cast_reg_1271 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond4_i_fu_392_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal i_V_fu_397_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_V_reg_1280 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_i_fu_403_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_i_fu_408_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_i_fu_413_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_i_reg_1293 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_128_0_i_fu_740_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_128_0_i_reg_1304 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_128_0_1_i_fu_746_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_128_0_1_i_reg_1308 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_128_0_2_i_fu_751_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_128_0_2_i_reg_1312 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_128_0_3_i_fu_756_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_128_0_3_i_reg_1316 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_128_0_4_i_fu_761_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_128_0_4_i_reg_1320 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_128_0_5_i_fu_766_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_128_0_5_i_reg_1324 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_128_0_6_i_fu_771_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_128_0_6_i_reg_1328 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_27_fu_789_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_27_reg_1332 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_28_fu_806_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_28_reg_1337 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_29_fu_823_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_29_reg_1342 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_30_fu_840_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_30_reg_1347 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_31_fu_857_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_31_reg_1352 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_32_fu_874_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_32_reg_1357 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_33_fu_891_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_33_reg_1362 : STD_LOGIC_VECTOR (2 downto 0);
    signal exitcond5_i_fu_895_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal j_V_fu_900_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal k_buf_0_val_13_V_a_reg_1376 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_13_V_a_reg_1376_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_12_V_a_reg_1382 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_12_V_a_reg_1382_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_11_V_a_reg_1388 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_11_V_a_reg_1388_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_10_V_a_reg_1394 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_10_V_a_reg_1394_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_9_V_ad_reg_1400 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_9_V_ad_reg_1400_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_8_V_ad_reg_1406 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_8_V_ad_reg_1406_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_7_V_ad_reg_1412 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_7_V_ad_reg_1412_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_13_V_q0 : STD_LOGIC_VECTOR (34 downto 0);
    signal col_buf_0_val_0_V_s_reg_1418 : STD_LOGIC_VECTOR (34 downto 0);
    signal k_buf_0_val_12_V_q0 : STD_LOGIC_VECTOR (34 downto 0);
    signal col_buf_0_val_1_V_s_reg_1425 : STD_LOGIC_VECTOR (34 downto 0);
    signal k_buf_0_val_11_V_q0 : STD_LOGIC_VECTOR (34 downto 0);
    signal col_buf_0_val_2_V_s_reg_1433 : STD_LOGIC_VECTOR (34 downto 0);
    signal k_buf_0_val_10_V_q0 : STD_LOGIC_VECTOR (34 downto 0);
    signal col_buf_0_val_3_V_s_reg_1441 : STD_LOGIC_VECTOR (34 downto 0);
    signal k_buf_0_val_9_V_q0 : STD_LOGIC_VECTOR (34 downto 0);
    signal col_buf_0_val_4_V_s_reg_1449 : STD_LOGIC_VECTOR (34 downto 0);
    signal k_buf_0_val_8_V_q0 : STD_LOGIC_VECTOR (34 downto 0);
    signal col_buf_0_val_5_V_s_reg_1458 : STD_LOGIC_VECTOR (34 downto 0);
    signal k_buf_0_val_7_V_q0 : STD_LOGIC_VECTOR (34 downto 0);
    signal col_buf_0_val_6_V_s_reg_1467 : STD_LOGIC_VECTOR (34 downto 0);
    signal p_Val2_14_0_3_i_fu_1062_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal p_Val2_14_0_3_i_reg_1476 : STD_LOGIC_VECTOR (36 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal k_buf_0_val_7_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_7_V_ce0 : STD_LOGIC;
    signal k_buf_0_val_7_V_ce1 : STD_LOGIC;
    signal k_buf_0_val_7_V_we1 : STD_LOGIC;
    signal k_buf_0_val_7_V_d1 : STD_LOGIC_VECTOR (34 downto 0);
    signal k_buf_0_val_8_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_8_V_ce0 : STD_LOGIC;
    signal k_buf_0_val_8_V_ce1 : STD_LOGIC;
    signal k_buf_0_val_8_V_we1 : STD_LOGIC;
    signal k_buf_0_val_8_V_d1 : STD_LOGIC_VECTOR (34 downto 0);
    signal k_buf_0_val_9_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_9_V_ce0 : STD_LOGIC;
    signal k_buf_0_val_9_V_ce1 : STD_LOGIC;
    signal k_buf_0_val_9_V_we1 : STD_LOGIC;
    signal k_buf_0_val_9_V_d1 : STD_LOGIC_VECTOR (34 downto 0);
    signal k_buf_0_val_10_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_10_V_ce0 : STD_LOGIC;
    signal k_buf_0_val_10_V_ce1 : STD_LOGIC;
    signal k_buf_0_val_10_V_we1 : STD_LOGIC;
    signal k_buf_0_val_10_V_d1 : STD_LOGIC_VECTOR (34 downto 0);
    signal k_buf_0_val_11_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_11_V_ce0 : STD_LOGIC;
    signal k_buf_0_val_11_V_ce1 : STD_LOGIC;
    signal k_buf_0_val_11_V_we1 : STD_LOGIC;
    signal k_buf_0_val_11_V_d1 : STD_LOGIC_VECTOR (34 downto 0);
    signal k_buf_0_val_12_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_12_V_ce0 : STD_LOGIC;
    signal k_buf_0_val_12_V_ce1 : STD_LOGIC;
    signal k_buf_0_val_12_V_we1 : STD_LOGIC;
    signal k_buf_0_val_12_V_d1 : STD_LOGIC_VECTOR (34 downto 0);
    signal k_buf_0_val_13_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_13_V_ce0 : STD_LOGIC;
    signal k_buf_0_val_13_V_ce1 : STD_LOGIC;
    signal k_buf_0_val_13_V_we1 : STD_LOGIC;
    signal k_buf_0_val_13_V_d1 : STD_LOGIC_VECTOR (34 downto 0);
    signal t_V_reg_289 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal tmp_111_0_i_fu_906_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_V_fu_98 : STD_LOGIC_VECTOR (34 downto 0);
    signal grp_load_fu_311_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal anchor_y_1_cast3_i2_s_fu_316_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal not_read_fu_350_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_138_0_i_fu_418_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_fu_424_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_140_0_i_fu_438_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_fu_432_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_fu_449_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_3_0_1_i_fu_464_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_fu_470_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_140_0_1_i_fu_484_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev2_fu_478_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_fu_495_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_3_0_2_i_fu_510_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_fu_516_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_140_0_2_i_fu_530_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev3_fu_524_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_541_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_3_0_3_i_fu_556_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_fu_562_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_140_0_3_i_fu_576_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev4_fu_570_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_fu_587_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_3_0_4_i_fu_602_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_21_fu_608_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_140_0_4_i_fu_622_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev5_fu_616_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_fu_633_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_3_0_5_i_fu_648_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_23_fu_654_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_140_0_5_i_fu_668_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev6_fu_662_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_fu_679_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_3_0_6_i_fu_694_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_25_fu_700_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_140_0_6_i_fu_714_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev7_fu_708_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_fu_725_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i1_0_i_fu_443_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_4_0_i_fu_457_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_1_0_i_fu_776_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal row_assign_7_0_i_fu_784_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_cond_i1_0_1_i_fu_489_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_4_0_1_i_fu_503_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_1_0_1_i_fu_793_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal row_assign_7_0_1_i_fu_801_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_cond_i1_0_2_i_fu_535_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_4_0_2_i_fu_549_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_1_0_2_i_fu_810_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal row_assign_7_0_2_i_fu_818_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_cond_i1_0_3_i_fu_581_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_4_0_3_i_fu_595_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_1_0_3_i_fu_827_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal row_assign_7_0_3_i_fu_835_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_cond_i1_0_4_i_fu_627_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_4_0_4_i_fu_641_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_1_0_4_i_fu_844_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal row_assign_7_0_4_i_fu_852_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_cond_i1_0_5_i_fu_673_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_4_0_5_i_fu_687_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_1_0_5_i_fu_861_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal row_assign_7_0_5_i_fu_869_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_cond_i1_0_6_i_fu_719_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_4_0_6_i_fu_733_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_1_0_6_i_fu_878_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal row_assign_7_0_6_i_fu_886_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_922_p9 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp_4_fu_948_p9 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp_5_fu_974_p9 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp_6_fu_1000_p9 : STD_LOGIC_VECTOR (34 downto 0);
    signal src_kernel_winY_0_v_6_fu_1019_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal src_kernel_winY_0_v_5_fu_993_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal OP1_V_0_1_i_fu_1030_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal OP1_V_0_0_i_fu_1026_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal addconv_i_fu_1034_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal src_kernel_winY_0_v_4_fu_967_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal src_kernel_winY_0_v_3_fu_941_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp_164_0_2_cast_i_c_fu_1044_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp_164_0_3_cast_i_c_fu_1048_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp_fu_1052_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp_cast_fu_1058_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal p_Val2_14_0_1_cast_fu_1040_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal tmp_s_fu_1092_p9 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp_1_fu_1110_p9 : STD_LOGIC_VECTOR (34 downto 0);
    signal tmp_2_fu_1128_p9 : STD_LOGIC_VECTOR (34 downto 0);
    signal src_kernel_winY_0_v_2_fu_1140_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal src_kernel_winY_0_v_1_fu_1122_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal src_kernel_winY_0_v_fu_1104_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal p_Val2_14_0_3_cast_fu_1146_p1 : STD_LOGIC_VECTOR (37 downto 0);
    signal tmp_164_0_4_cast_i_fu_1149_p1 : STD_LOGIC_VECTOR (37 downto 0);
    signal tmp_164_0_5_cast_i_c_fu_1153_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp_164_0_6_cast_i_c_fu_1157_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp2_fu_1167_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp2_cast_fu_1173_p1 : STD_LOGIC_VECTOR (37 downto 0);
    signal tmp1_fu_1161_p2 : STD_LOGIC_VECTOR (37 downto 0);
    signal p_Val2_14_0_6_i_fu_1177_p2 : STD_LOGIC_VECTOR (37 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component Haaris_Core_mux_7Ffa IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (34 downto 0);
        din1 : IN STD_LOGIC_VECTOR (34 downto 0);
        din2 : IN STD_LOGIC_VECTOR (34 downto 0);
        din3 : IN STD_LOGIC_VECTOR (34 downto 0);
        din4 : IN STD_LOGIC_VECTOR (34 downto 0);
        din5 : IN STD_LOGIC_VECTOR (34 downto 0);
        din6 : IN STD_LOGIC_VECTOR (34 downto 0);
        din7 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (34 downto 0) );
    end component;


    component column_filter_k_byd2 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (34 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (34 downto 0) );
    end component;



begin
    k_buf_0_val_7_V_U : component column_filter_k_byd2
    generic map (
        DataWidth => 35,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_7_V_address0,
        ce0 => k_buf_0_val_7_V_ce0,
        q0 => k_buf_0_val_7_V_q0,
        address1 => k_buf_0_val_7_V_ad_reg_1412_pp0_iter1_reg,
        ce1 => k_buf_0_val_7_V_ce1,
        we1 => k_buf_0_val_7_V_we1,
        d1 => k_buf_0_val_7_V_d1);

    k_buf_0_val_8_V_U : component column_filter_k_byd2
    generic map (
        DataWidth => 35,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_8_V_address0,
        ce0 => k_buf_0_val_8_V_ce0,
        q0 => k_buf_0_val_8_V_q0,
        address1 => k_buf_0_val_8_V_ad_reg_1406_pp0_iter1_reg,
        ce1 => k_buf_0_val_8_V_ce1,
        we1 => k_buf_0_val_8_V_we1,
        d1 => k_buf_0_val_8_V_d1);

    k_buf_0_val_9_V_U : component column_filter_k_byd2
    generic map (
        DataWidth => 35,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_9_V_address0,
        ce0 => k_buf_0_val_9_V_ce0,
        q0 => k_buf_0_val_9_V_q0,
        address1 => k_buf_0_val_9_V_ad_reg_1400_pp0_iter1_reg,
        ce1 => k_buf_0_val_9_V_ce1,
        we1 => k_buf_0_val_9_V_we1,
        d1 => k_buf_0_val_9_V_d1);

    k_buf_0_val_10_V_U : component column_filter_k_byd2
    generic map (
        DataWidth => 35,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_10_V_address0,
        ce0 => k_buf_0_val_10_V_ce0,
        q0 => k_buf_0_val_10_V_q0,
        address1 => k_buf_0_val_10_V_a_reg_1394_pp0_iter1_reg,
        ce1 => k_buf_0_val_10_V_ce1,
        we1 => k_buf_0_val_10_V_we1,
        d1 => k_buf_0_val_10_V_d1);

    k_buf_0_val_11_V_U : component column_filter_k_byd2
    generic map (
        DataWidth => 35,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_11_V_address0,
        ce0 => k_buf_0_val_11_V_ce0,
        q0 => k_buf_0_val_11_V_q0,
        address1 => k_buf_0_val_11_V_a_reg_1388_pp0_iter1_reg,
        ce1 => k_buf_0_val_11_V_ce1,
        we1 => k_buf_0_val_11_V_we1,
        d1 => k_buf_0_val_11_V_d1);

    k_buf_0_val_12_V_U : component column_filter_k_byd2
    generic map (
        DataWidth => 35,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_12_V_address0,
        ce0 => k_buf_0_val_12_V_ce0,
        q0 => k_buf_0_val_12_V_q0,
        address1 => k_buf_0_val_12_V_a_reg_1382_pp0_iter1_reg,
        ce1 => k_buf_0_val_12_V_ce1,
        we1 => k_buf_0_val_12_V_we1,
        d1 => k_buf_0_val_12_V_d1);

    k_buf_0_val_13_V_U : component column_filter_k_byd2
    generic map (
        DataWidth => 35,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_13_V_address0,
        ce0 => k_buf_0_val_13_V_ce0,
        q0 => k_buf_0_val_13_V_q0,
        address1 => k_buf_0_val_13_V_a_reg_1376_pp0_iter1_reg,
        ce1 => k_buf_0_val_13_V_ce1,
        we1 => k_buf_0_val_13_V_we1,
        d1 => k_buf_0_val_13_V_d1);

    Haaris_Core_mux_7Ffa_U199 : component Haaris_Core_mux_7Ffa
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 35,
        din1_WIDTH => 35,
        din2_WIDTH => 35,
        din3_WIDTH => 35,
        din4_WIDTH => 35,
        din5_WIDTH => 35,
        din6_WIDTH => 35,
        din7_WIDTH => 3,
        dout_WIDTH => 35)
    port map (
        din0 => k_buf_0_val_13_V_q0,
        din1 => k_buf_0_val_12_V_q0,
        din2 => k_buf_0_val_11_V_q0,
        din3 => k_buf_0_val_10_V_q0,
        din4 => k_buf_0_val_9_V_q0,
        din5 => k_buf_0_val_8_V_q0,
        din6 => k_buf_0_val_7_V_q0,
        din7 => tmp_30_reg_1347,
        dout => tmp_3_fu_922_p9);

    Haaris_Core_mux_7Ffa_U200 : component Haaris_Core_mux_7Ffa
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 35,
        din1_WIDTH => 35,
        din2_WIDTH => 35,
        din3_WIDTH => 35,
        din4_WIDTH => 35,
        din5_WIDTH => 35,
        din6_WIDTH => 35,
        din7_WIDTH => 3,
        dout_WIDTH => 35)
    port map (
        din0 => k_buf_0_val_13_V_q0,
        din1 => k_buf_0_val_12_V_q0,
        din2 => k_buf_0_val_11_V_q0,
        din3 => k_buf_0_val_10_V_q0,
        din4 => k_buf_0_val_9_V_q0,
        din5 => k_buf_0_val_8_V_q0,
        din6 => k_buf_0_val_7_V_q0,
        din7 => tmp_31_reg_1352,
        dout => tmp_4_fu_948_p9);

    Haaris_Core_mux_7Ffa_U201 : component Haaris_Core_mux_7Ffa
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 35,
        din1_WIDTH => 35,
        din2_WIDTH => 35,
        din3_WIDTH => 35,
        din4_WIDTH => 35,
        din5_WIDTH => 35,
        din6_WIDTH => 35,
        din7_WIDTH => 3,
        dout_WIDTH => 35)
    port map (
        din0 => k_buf_0_val_13_V_q0,
        din1 => k_buf_0_val_12_V_q0,
        din2 => k_buf_0_val_11_V_q0,
        din3 => k_buf_0_val_10_V_q0,
        din4 => k_buf_0_val_9_V_q0,
        din5 => k_buf_0_val_8_V_q0,
        din6 => k_buf_0_val_7_V_q0,
        din7 => tmp_32_reg_1357,
        dout => tmp_5_fu_974_p9);

    Haaris_Core_mux_7Ffa_U202 : component Haaris_Core_mux_7Ffa
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 35,
        din1_WIDTH => 35,
        din2_WIDTH => 35,
        din3_WIDTH => 35,
        din4_WIDTH => 35,
        din5_WIDTH => 35,
        din6_WIDTH => 35,
        din7_WIDTH => 3,
        dout_WIDTH => 35)
    port map (
        din0 => k_buf_0_val_13_V_q0,
        din1 => k_buf_0_val_12_V_q0,
        din2 => k_buf_0_val_11_V_q0,
        din3 => k_buf_0_val_10_V_q0,
        din4 => k_buf_0_val_9_V_q0,
        din5 => k_buf_0_val_8_V_q0,
        din6 => k_buf_0_val_7_V_q0,
        din7 => tmp_33_reg_1362,
        dout => tmp_6_fu_1000_p9);

    Haaris_Core_mux_7Ffa_U203 : component Haaris_Core_mux_7Ffa
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 35,
        din1_WIDTH => 35,
        din2_WIDTH => 35,
        din3_WIDTH => 35,
        din4_WIDTH => 35,
        din5_WIDTH => 35,
        din6_WIDTH => 35,
        din7_WIDTH => 3,
        dout_WIDTH => 35)
    port map (
        din0 => col_buf_0_val_0_V_s_reg_1418,
        din1 => col_buf_0_val_1_V_s_reg_1425,
        din2 => col_buf_0_val_2_V_s_reg_1433,
        din3 => col_buf_0_val_3_V_s_reg_1441,
        din4 => col_buf_0_val_4_V_s_reg_1449,
        din5 => col_buf_0_val_5_V_s_reg_1458,
        din6 => col_buf_0_val_6_V_s_reg_1467,
        din7 => tmp_27_reg_1332,
        dout => tmp_s_fu_1092_p9);

    Haaris_Core_mux_7Ffa_U204 : component Haaris_Core_mux_7Ffa
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 35,
        din1_WIDTH => 35,
        din2_WIDTH => 35,
        din3_WIDTH => 35,
        din4_WIDTH => 35,
        din5_WIDTH => 35,
        din6_WIDTH => 35,
        din7_WIDTH => 3,
        dout_WIDTH => 35)
    port map (
        din0 => col_buf_0_val_0_V_s_reg_1418,
        din1 => col_buf_0_val_1_V_s_reg_1425,
        din2 => col_buf_0_val_2_V_s_reg_1433,
        din3 => col_buf_0_val_3_V_s_reg_1441,
        din4 => col_buf_0_val_4_V_s_reg_1449,
        din5 => col_buf_0_val_5_V_s_reg_1458,
        din6 => col_buf_0_val_6_V_s_reg_1467,
        din7 => tmp_28_reg_1337,
        dout => tmp_1_fu_1110_p9);

    Haaris_Core_mux_7Ffa_U205 : component Haaris_Core_mux_7Ffa
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 35,
        din1_WIDTH => 35,
        din2_WIDTH => 35,
        din3_WIDTH => 35,
        din4_WIDTH => 35,
        din5_WIDTH => 35,
        din6_WIDTH => 35,
        din7_WIDTH => 3,
        dout_WIDTH => 35)
    port map (
        din0 => col_buf_0_val_0_V_s_reg_1418,
        din1 => col_buf_0_val_1_V_s_reg_1425,
        din2 => col_buf_0_val_2_V_s_reg_1433,
        din3 => col_buf_0_val_3_V_s_reg_1441,
        din4 => col_buf_0_val_4_V_s_reg_1449,
        din5 => col_buf_0_val_5_V_s_reg_1458,
        din6 => col_buf_0_val_6_V_s_reg_1467,
        din7 => tmp_29_reg_1342,
        dout => tmp_2_fu_1128_p9);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((exitcond4_i_fu_392_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond4_i_fu_392_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state3);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond4_i_fu_392_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    t_V_2_reg_300_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond5_i_fu_895_p2 = ap_const_lv1_0))) then 
                t_V_2_reg_300 <= j_V_fu_900_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond4_i_fu_392_p2 = ap_const_lv1_0))) then 
                t_V_2_reg_300 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    t_V_reg_289_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                t_V_reg_289 <= i_V_reg_1280;
            elsif ((not(((cols_out_full_n = ap_const_logic_0) or (rows_out_full_n = ap_const_logic_0) or (cols_empty_n = ap_const_logic_0) or (rows_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                t_V_reg_289 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                col_buf_0_val_0_V_s_reg_1418 <= k_buf_0_val_13_V_q0;
                col_buf_0_val_1_V_s_reg_1425 <= k_buf_0_val_12_V_q0;
                col_buf_0_val_2_V_s_reg_1433 <= k_buf_0_val_11_V_q0;
                col_buf_0_val_3_V_s_reg_1441 <= k_buf_0_val_10_V_q0;
                col_buf_0_val_4_V_s_reg_1449 <= k_buf_0_val_9_V_q0;
                col_buf_0_val_5_V_s_reg_1458 <= k_buf_0_val_8_V_q0;
                col_buf_0_val_6_V_s_reg_1467 <= k_buf_0_val_7_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_V_reg_1280 <= i_V_fu_397_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((cols_out_full_n = ap_const_logic_0) or (rows_out_full_n = ap_const_logic_0) or (cols_empty_n = ap_const_logic_0) or (rows_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                index_reg_1240 <= index_fu_344_p2;
                    start_row_cast_i_cas_reg_1218(0) <= start_row_cast_i_cas_fu_324_p3(0);    start_row_cast_i_cas_reg_1218(2) <= start_row_cast_i_cas_fu_324_p3(2);
                stop_row_reg_1200 <= rows_dout;
                tmp_10_i_reg_1224 <= tmp_10_i_fu_332_p2;
                tmp_11_i_reg_1235 <= tmp_11_i_fu_338_p2;
                widthloop_reg_1213 <= cols_dout;
                    y_0_1_cast_i_reg_1251(0) <= y_0_1_cast_i_fu_356_p1(0);
                    y_0_2_cast_i_cast_reg_1256(1) <= y_0_2_cast_i_cast_fu_360_p3(1);
                    y_0_3_cast_i_cast_reg_1261(1 downto 0) <= y_0_3_cast_i_cast_fu_368_p3(1 downto 0);
                    y_0_4_cast_i_cast_reg_1266(0) <= y_0_4_cast_i_cast_fu_376_p3(0);    y_0_4_cast_i_cast_reg_1266(2) <= y_0_4_cast_i_cast_fu_376_p3(2);
                    y_0_5_cast_i_cast_reg_1271(2 downto 0) <= y_0_5_cast_i_cast_fu_384_p3(2 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond5_i_fu_895_p2 = ap_const_lv1_0))) then
                k_buf_0_val_10_V_a_reg_1394 <= tmp_111_0_i_fu_906_p1(8 - 1 downto 0);
                k_buf_0_val_11_V_a_reg_1388 <= tmp_111_0_i_fu_906_p1(8 - 1 downto 0);
                k_buf_0_val_12_V_a_reg_1382 <= tmp_111_0_i_fu_906_p1(8 - 1 downto 0);
                k_buf_0_val_13_V_a_reg_1376 <= tmp_111_0_i_fu_906_p1(8 - 1 downto 0);
                k_buf_0_val_7_V_ad_reg_1412 <= tmp_111_0_i_fu_906_p1(8 - 1 downto 0);
                k_buf_0_val_8_V_ad_reg_1406 <= tmp_111_0_i_fu_906_p1(8 - 1 downto 0);
                k_buf_0_val_9_V_ad_reg_1400 <= tmp_111_0_i_fu_906_p1(8 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                k_buf_0_val_10_V_a_reg_1394_pp0_iter1_reg <= k_buf_0_val_10_V_a_reg_1394;
                k_buf_0_val_11_V_a_reg_1388_pp0_iter1_reg <= k_buf_0_val_11_V_a_reg_1388;
                k_buf_0_val_12_V_a_reg_1382_pp0_iter1_reg <= k_buf_0_val_12_V_a_reg_1382;
                k_buf_0_val_13_V_a_reg_1376_pp0_iter1_reg <= k_buf_0_val_13_V_a_reg_1376;
                k_buf_0_val_7_V_ad_reg_1412_pp0_iter1_reg <= k_buf_0_val_7_V_ad_reg_1412;
                k_buf_0_val_8_V_ad_reg_1406_pp0_iter1_reg <= k_buf_0_val_8_V_ad_reg_1406;
                k_buf_0_val_9_V_ad_reg_1400_pp0_iter1_reg <= k_buf_0_val_9_V_ad_reg_1400;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_14_i_reg_1289 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Val2_14_0_3_i_reg_1476 <= p_Val2_14_0_3_i_fu_1062_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond4_i_fu_392_p2 = ap_const_lv1_0))) then
                tmp_128_0_1_i_reg_1308 <= tmp_128_0_1_i_fu_746_p2;
                tmp_128_0_2_i_reg_1312 <= tmp_128_0_2_i_fu_751_p2;
                tmp_128_0_3_i_reg_1316 <= tmp_128_0_3_i_fu_756_p2;
                tmp_128_0_4_i_reg_1320 <= tmp_128_0_4_i_fu_761_p2;
                tmp_128_0_5_i_reg_1324 <= tmp_128_0_5_i_fu_766_p2;
                tmp_128_0_6_i_reg_1328 <= tmp_128_0_6_i_fu_771_p2;
                tmp_128_0_i_reg_1304 <= tmp_128_0_i_fu_740_p2;
                tmp_13_i_reg_1285 <= tmp_13_i_fu_403_p2;
                tmp_14_i_reg_1289 <= tmp_14_i_fu_408_p2;
                tmp_15_i_reg_1293 <= tmp_15_i_fu_413_p2;
                tmp_27_reg_1332 <= tmp_27_fu_789_p1;
                tmp_28_reg_1337 <= tmp_28_fu_806_p1;
                tmp_29_reg_1342 <= tmp_29_fu_823_p1;
                tmp_30_reg_1347 <= tmp_30_fu_840_p1;
                tmp_31_reg_1352 <= tmp_31_fu_857_p1;
                tmp_32_reg_1357 <= tmp_32_fu_874_p1;
                tmp_33_reg_1362 <= tmp_33_fu_891_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_13_i_reg_1285 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_V_fu_98 <= p_src_data_stream_V_V_dout;
            end if;
        end if;
    end process;
    start_row_cast_i_cas_reg_1218(1) <= '1';
    start_row_cast_i_cas_reg_1218(31 downto 3) <= "00000000000000000000000000000";
    y_0_1_cast_i_reg_1251(31 downto 1) <= "0000000000000000000000000000000";
    y_0_2_cast_i_cast_reg_1256(0) <= '0';
    y_0_2_cast_i_cast_reg_1256(31 downto 2) <= "000000000000000000000000000000";
    y_0_3_cast_i_cast_reg_1261(31 downto 2) <= "000000000000000000000000000000";
    y_0_4_cast_i_cast_reg_1266(1) <= '0';
    y_0_4_cast_i_cast_reg_1266(31 downto 3) <= "00000000000000000000000000000";
    y_0_5_cast_i_cast_reg_1271(31 downto 3) <= "00000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, rows_empty_n, cols_empty_n, rows_out_full_n, cols_out_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, exitcond4_i_fu_392_p2, ap_CS_fsm_state2, exitcond5_i_fu_895_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((cols_out_full_n = ap_const_logic_0) or (rows_out_full_n = ap_const_logic_0) or (cols_empty_n = ap_const_logic_0) or (rows_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((exitcond4_i_fu_392_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((exitcond5_i_fu_895_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((exitcond5_i_fu_895_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
        OP1_V_0_0_i_fu_1026_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(src_kernel_winY_0_v_6_fu_1019_p3),36));

        OP1_V_0_1_i_fu_1030_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(src_kernel_winY_0_v_5_fu_993_p3),36));

    addconv_i_fu_1034_p2 <= std_logic_vector(signed(OP1_V_0_1_i_fu_1030_p1) + signed(OP1_V_0_0_i_fu_1026_p1));
    anchor_y_1_cast3_i2_s_fu_316_p3 <= 
        ap_const_lv32_3 when (p_read(0) = '1') else 
        ap_const_lv32_0;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state6 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(p_src_data_stream_V_V_empty_n, p_dst_V_V_full_n, ap_enable_reg_pp0_iter1, tmp_13_i_reg_1285, ap_enable_reg_pp0_iter2, tmp_14_i_reg_1289)
    begin
                ap_block_pp0_stage0_01001 <= (((tmp_14_i_reg_1289 = ap_const_lv1_1) and (p_dst_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((tmp_13_i_reg_1285 = ap_const_lv1_1) and (p_src_data_stream_V_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(p_src_data_stream_V_V_empty_n, p_dst_V_V_full_n, ap_enable_reg_pp0_iter1, tmp_13_i_reg_1285, ap_enable_reg_pp0_iter2, tmp_14_i_reg_1289)
    begin
                ap_block_pp0_stage0_11001 <= (((tmp_14_i_reg_1289 = ap_const_lv1_1) and (p_dst_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((tmp_13_i_reg_1285 = ap_const_lv1_1) and (p_src_data_stream_V_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(p_src_data_stream_V_V_empty_n, p_dst_V_V_full_n, ap_enable_reg_pp0_iter1, tmp_13_i_reg_1285, ap_enable_reg_pp0_iter2, tmp_14_i_reg_1289)
    begin
                ap_block_pp0_stage0_subdone <= (((tmp_14_i_reg_1289 = ap_const_lv1_1) and (p_dst_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((tmp_13_i_reg_1285 = ap_const_lv1_1) and (p_src_data_stream_V_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg, rows_empty_n, cols_empty_n, rows_out_full_n, cols_out_full_n)
    begin
                ap_block_state1 <= ((cols_out_full_n = ap_const_logic_0) or (rows_out_full_n = ap_const_logic_0) or (cols_empty_n = ap_const_logic_0) or (rows_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter1_assign_proc : process(p_src_data_stream_V_V_empty_n, tmp_13_i_reg_1285)
    begin
                ap_block_state4_pp0_stage0_iter1 <= ((tmp_13_i_reg_1285 = ap_const_lv1_1) and (p_src_data_stream_V_V_empty_n = ap_const_logic_0));
    end process;


    ap_block_state5_pp0_stage0_iter2_assign_proc : process(p_dst_V_V_full_n, tmp_14_i_reg_1289)
    begin
                ap_block_state5_pp0_stage0_iter2 <= ((tmp_14_i_reg_1289 = ap_const_lv1_1) and (p_dst_V_V_full_n = ap_const_logic_0));
    end process;


    ap_condition_pp0_exit_iter0_state3_assign_proc : process(exitcond5_i_fu_895_p2)
    begin
        if ((exitcond5_i_fu_895_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, exitcond4_i_fu_392_p2, ap_CS_fsm_state2)
    begin
        if (((exitcond4_i_fu_392_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;

    cols_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, cols_empty_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            cols_blk_n <= cols_empty_n;
        else 
            cols_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    cols_out_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, cols_out_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            cols_out_blk_n <= cols_out_full_n;
        else 
            cols_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    cols_out_din <= cols_dout;

    cols_out_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, rows_empty_n, cols_empty_n, rows_out_full_n, cols_out_full_n)
    begin
        if ((not(((cols_out_full_n = ap_const_logic_0) or (rows_out_full_n = ap_const_logic_0) or (cols_empty_n = ap_const_logic_0) or (rows_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            cols_out_write <= ap_const_logic_1;
        else 
            cols_out_write <= ap_const_logic_0;
        end if; 
    end process;


    cols_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, rows_empty_n, cols_empty_n, rows_out_full_n, cols_out_full_n)
    begin
        if ((not(((cols_out_full_n = ap_const_logic_0) or (rows_out_full_n = ap_const_logic_0) or (cols_empty_n = ap_const_logic_0) or (rows_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            cols_read <= ap_const_logic_1;
        else 
            cols_read <= ap_const_logic_0;
        end if; 
    end process;

    exitcond4_i_fu_392_p2 <= "1" when (t_V_reg_289 = tmp_11_i_reg_1235) else "0";
    exitcond5_i_fu_895_p2 <= "1" when (t_V_2_reg_300 = widthloop_reg_1213) else "0";
    grp_load_fu_311_p1 <= tmp_V_fu_98;
    i_V_fu_397_p2 <= std_logic_vector(unsigned(t_V_reg_289) + unsigned(ap_const_lv32_1));
    index_fu_344_p2 <= std_logic_vector(unsigned(rows_dout) + unsigned(ap_const_lv32_FFFFFFF9));

    internal_ap_ready_assign_proc : process(exitcond4_i_fu_392_p2, ap_CS_fsm_state2)
    begin
        if (((exitcond4_i_fu_392_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    j_V_fu_900_p2 <= std_logic_vector(unsigned(t_V_2_reg_300) + unsigned(ap_const_lv32_1));
    k_buf_0_val_10_V_address0 <= tmp_111_0_i_fu_906_p1(8 - 1 downto 0);

    k_buf_0_val_10_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_10_V_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_10_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_10_V_ce1_assign_proc : process(tmp_13_i_reg_1285, ap_enable_reg_pp0_iter2, tmp_14_i_reg_1289, tmp_128_0_3_i_reg_1316, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_14_i_reg_1289 = ap_const_lv1_0) and (tmp_128_0_3_i_reg_1316 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_14_i_reg_1289 = ap_const_lv1_1) and (tmp_13_i_reg_1285 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_10_V_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_10_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_10_V_d1_assign_proc : process(ap_block_pp0_stage0, tmp_13_i_reg_1285, ap_enable_reg_pp0_iter2, tmp_14_i_reg_1289, tmp_128_0_3_i_reg_1316, col_buf_0_val_4_V_s_reg_1449, tmp_V_fu_98)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if (((tmp_14_i_reg_1289 = ap_const_lv1_1) and (tmp_13_i_reg_1285 = ap_const_lv1_1))) then 
                k_buf_0_val_10_V_d1 <= col_buf_0_val_4_V_s_reg_1449;
            elsif (((tmp_14_i_reg_1289 = ap_const_lv1_0) and (tmp_128_0_3_i_reg_1316 = ap_const_lv1_1))) then 
                k_buf_0_val_10_V_d1 <= tmp_V_fu_98;
            else 
                k_buf_0_val_10_V_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            k_buf_0_val_10_V_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    k_buf_0_val_10_V_we1_assign_proc : process(tmp_13_i_reg_1285, ap_enable_reg_pp0_iter2, tmp_14_i_reg_1289, tmp_128_0_3_i_reg_1316, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_14_i_reg_1289 = ap_const_lv1_0) and (tmp_128_0_3_i_reg_1316 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_14_i_reg_1289 = ap_const_lv1_1) and (tmp_13_i_reg_1285 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_10_V_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_10_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_11_V_address0 <= tmp_111_0_i_fu_906_p1(8 - 1 downto 0);

    k_buf_0_val_11_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_11_V_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_11_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_11_V_ce1_assign_proc : process(tmp_13_i_reg_1285, ap_enable_reg_pp0_iter2, tmp_14_i_reg_1289, tmp_128_0_2_i_reg_1312, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_14_i_reg_1289 = ap_const_lv1_0) and (tmp_128_0_2_i_reg_1312 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_14_i_reg_1289 = ap_const_lv1_1) and (tmp_13_i_reg_1285 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_11_V_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_11_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_11_V_d1_assign_proc : process(ap_block_pp0_stage0, tmp_13_i_reg_1285, ap_enable_reg_pp0_iter2, tmp_14_i_reg_1289, tmp_128_0_2_i_reg_1312, col_buf_0_val_3_V_s_reg_1441, tmp_V_fu_98)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if (((tmp_14_i_reg_1289 = ap_const_lv1_1) and (tmp_13_i_reg_1285 = ap_const_lv1_1))) then 
                k_buf_0_val_11_V_d1 <= col_buf_0_val_3_V_s_reg_1441;
            elsif (((tmp_14_i_reg_1289 = ap_const_lv1_0) and (tmp_128_0_2_i_reg_1312 = ap_const_lv1_1))) then 
                k_buf_0_val_11_V_d1 <= tmp_V_fu_98;
            else 
                k_buf_0_val_11_V_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            k_buf_0_val_11_V_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    k_buf_0_val_11_V_we1_assign_proc : process(tmp_13_i_reg_1285, ap_enable_reg_pp0_iter2, tmp_14_i_reg_1289, tmp_128_0_2_i_reg_1312, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_14_i_reg_1289 = ap_const_lv1_0) and (tmp_128_0_2_i_reg_1312 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_14_i_reg_1289 = ap_const_lv1_1) and (tmp_13_i_reg_1285 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_11_V_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_11_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_12_V_address0 <= tmp_111_0_i_fu_906_p1(8 - 1 downto 0);

    k_buf_0_val_12_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_12_V_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_12_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_12_V_ce1_assign_proc : process(tmp_13_i_reg_1285, ap_enable_reg_pp0_iter2, tmp_14_i_reg_1289, tmp_128_0_1_i_reg_1308, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_14_i_reg_1289 = ap_const_lv1_0) and (tmp_128_0_1_i_reg_1308 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_14_i_reg_1289 = ap_const_lv1_1) and (tmp_13_i_reg_1285 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_12_V_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_12_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_12_V_d1_assign_proc : process(ap_block_pp0_stage0, tmp_13_i_reg_1285, ap_enable_reg_pp0_iter2, tmp_14_i_reg_1289, tmp_128_0_1_i_reg_1308, col_buf_0_val_2_V_s_reg_1433, tmp_V_fu_98)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if (((tmp_14_i_reg_1289 = ap_const_lv1_1) and (tmp_13_i_reg_1285 = ap_const_lv1_1))) then 
                k_buf_0_val_12_V_d1 <= col_buf_0_val_2_V_s_reg_1433;
            elsif (((tmp_14_i_reg_1289 = ap_const_lv1_0) and (tmp_128_0_1_i_reg_1308 = ap_const_lv1_1))) then 
                k_buf_0_val_12_V_d1 <= tmp_V_fu_98;
            else 
                k_buf_0_val_12_V_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            k_buf_0_val_12_V_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    k_buf_0_val_12_V_we1_assign_proc : process(tmp_13_i_reg_1285, ap_enable_reg_pp0_iter2, tmp_14_i_reg_1289, tmp_128_0_1_i_reg_1308, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_14_i_reg_1289 = ap_const_lv1_0) and (tmp_128_0_1_i_reg_1308 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_14_i_reg_1289 = ap_const_lv1_1) and (tmp_13_i_reg_1285 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_12_V_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_12_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_13_V_address0 <= tmp_111_0_i_fu_906_p1(8 - 1 downto 0);

    k_buf_0_val_13_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_13_V_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_13_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_13_V_ce1_assign_proc : process(tmp_13_i_reg_1285, ap_enable_reg_pp0_iter2, tmp_14_i_reg_1289, tmp_128_0_i_reg_1304, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_14_i_reg_1289 = ap_const_lv1_0) and (tmp_128_0_i_reg_1304 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_14_i_reg_1289 = ap_const_lv1_1) and (tmp_13_i_reg_1285 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_13_V_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_13_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_13_V_d1_assign_proc : process(ap_block_pp0_stage0, tmp_13_i_reg_1285, ap_enable_reg_pp0_iter2, tmp_14_i_reg_1289, tmp_128_0_i_reg_1304, col_buf_0_val_1_V_s_reg_1425, tmp_V_fu_98)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if (((tmp_14_i_reg_1289 = ap_const_lv1_1) and (tmp_13_i_reg_1285 = ap_const_lv1_1))) then 
                k_buf_0_val_13_V_d1 <= col_buf_0_val_1_V_s_reg_1425;
            elsif (((tmp_14_i_reg_1289 = ap_const_lv1_0) and (tmp_128_0_i_reg_1304 = ap_const_lv1_1))) then 
                k_buf_0_val_13_V_d1 <= tmp_V_fu_98;
            else 
                k_buf_0_val_13_V_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            k_buf_0_val_13_V_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    k_buf_0_val_13_V_we1_assign_proc : process(tmp_13_i_reg_1285, ap_enable_reg_pp0_iter2, tmp_14_i_reg_1289, tmp_128_0_i_reg_1304, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_14_i_reg_1289 = ap_const_lv1_0) and (tmp_128_0_i_reg_1304 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_14_i_reg_1289 = ap_const_lv1_1) and (tmp_13_i_reg_1285 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_13_V_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_13_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_7_V_address0 <= tmp_111_0_i_fu_906_p1(8 - 1 downto 0);

    k_buf_0_val_7_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_7_V_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_7_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_7_V_ce1_assign_proc : process(tmp_13_i_reg_1285, ap_enable_reg_pp0_iter2, tmp_14_i_reg_1289, tmp_128_0_6_i_reg_1328, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_14_i_reg_1289 = ap_const_lv1_0) and (tmp_128_0_6_i_reg_1328 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_14_i_reg_1289 = ap_const_lv1_1) and (tmp_13_i_reg_1285 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_7_V_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_7_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_7_V_d1_assign_proc : process(ap_block_pp0_stage0, tmp_13_i_reg_1285, ap_enable_reg_pp0_iter2, tmp_14_i_reg_1289, tmp_128_0_6_i_reg_1328, tmp_V_fu_98, grp_load_fu_311_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if (((tmp_14_i_reg_1289 = ap_const_lv1_1) and (tmp_13_i_reg_1285 = ap_const_lv1_1))) then 
                k_buf_0_val_7_V_d1 <= grp_load_fu_311_p1;
            elsif (((tmp_14_i_reg_1289 = ap_const_lv1_0) and (tmp_128_0_6_i_reg_1328 = ap_const_lv1_1))) then 
                k_buf_0_val_7_V_d1 <= tmp_V_fu_98;
            else 
                k_buf_0_val_7_V_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            k_buf_0_val_7_V_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    k_buf_0_val_7_V_we1_assign_proc : process(tmp_13_i_reg_1285, ap_enable_reg_pp0_iter2, tmp_14_i_reg_1289, tmp_128_0_6_i_reg_1328, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_14_i_reg_1289 = ap_const_lv1_0) and (tmp_128_0_6_i_reg_1328 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_14_i_reg_1289 = ap_const_lv1_1) and (tmp_13_i_reg_1285 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_7_V_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_7_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_8_V_address0 <= tmp_111_0_i_fu_906_p1(8 - 1 downto 0);

    k_buf_0_val_8_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_8_V_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_8_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_8_V_ce1_assign_proc : process(tmp_13_i_reg_1285, ap_enable_reg_pp0_iter2, tmp_14_i_reg_1289, tmp_128_0_5_i_reg_1324, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_14_i_reg_1289 = ap_const_lv1_0) and (tmp_128_0_5_i_reg_1324 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_14_i_reg_1289 = ap_const_lv1_1) and (tmp_13_i_reg_1285 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_8_V_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_8_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_8_V_d1_assign_proc : process(ap_block_pp0_stage0, tmp_13_i_reg_1285, ap_enable_reg_pp0_iter2, tmp_14_i_reg_1289, tmp_128_0_5_i_reg_1324, col_buf_0_val_6_V_s_reg_1467, tmp_V_fu_98)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if (((tmp_14_i_reg_1289 = ap_const_lv1_1) and (tmp_13_i_reg_1285 = ap_const_lv1_1))) then 
                k_buf_0_val_8_V_d1 <= col_buf_0_val_6_V_s_reg_1467;
            elsif (((tmp_14_i_reg_1289 = ap_const_lv1_0) and (tmp_128_0_5_i_reg_1324 = ap_const_lv1_1))) then 
                k_buf_0_val_8_V_d1 <= tmp_V_fu_98;
            else 
                k_buf_0_val_8_V_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            k_buf_0_val_8_V_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    k_buf_0_val_8_V_we1_assign_proc : process(tmp_13_i_reg_1285, ap_enable_reg_pp0_iter2, tmp_14_i_reg_1289, tmp_128_0_5_i_reg_1324, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_14_i_reg_1289 = ap_const_lv1_0) and (tmp_128_0_5_i_reg_1324 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_14_i_reg_1289 = ap_const_lv1_1) and (tmp_13_i_reg_1285 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_8_V_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_8_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_9_V_address0 <= tmp_111_0_i_fu_906_p1(8 - 1 downto 0);

    k_buf_0_val_9_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_9_V_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_9_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_9_V_ce1_assign_proc : process(tmp_13_i_reg_1285, ap_enable_reg_pp0_iter2, tmp_14_i_reg_1289, tmp_128_0_4_i_reg_1320, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_14_i_reg_1289 = ap_const_lv1_0) and (tmp_128_0_4_i_reg_1320 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_14_i_reg_1289 = ap_const_lv1_1) and (tmp_13_i_reg_1285 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_9_V_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_9_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_9_V_d1_assign_proc : process(ap_block_pp0_stage0, tmp_13_i_reg_1285, ap_enable_reg_pp0_iter2, tmp_14_i_reg_1289, tmp_128_0_4_i_reg_1320, col_buf_0_val_5_V_s_reg_1458, tmp_V_fu_98)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if (((tmp_14_i_reg_1289 = ap_const_lv1_1) and (tmp_13_i_reg_1285 = ap_const_lv1_1))) then 
                k_buf_0_val_9_V_d1 <= col_buf_0_val_5_V_s_reg_1458;
            elsif (((tmp_14_i_reg_1289 = ap_const_lv1_0) and (tmp_128_0_4_i_reg_1320 = ap_const_lv1_1))) then 
                k_buf_0_val_9_V_d1 <= tmp_V_fu_98;
            else 
                k_buf_0_val_9_V_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            k_buf_0_val_9_V_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    k_buf_0_val_9_V_we1_assign_proc : process(tmp_13_i_reg_1285, ap_enable_reg_pp0_iter2, tmp_14_i_reg_1289, tmp_128_0_4_i_reg_1320, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_14_i_reg_1289 = ap_const_lv1_0) and (tmp_128_0_4_i_reg_1320 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_14_i_reg_1289 = ap_const_lv1_1) and (tmp_13_i_reg_1285 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_9_V_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_9_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    not_read_fu_350_p2 <= (p_read xor ap_const_lv1_1);
    or_cond_i1_0_1_i_fu_489_p2 <= (tmp_140_0_1_i_fu_484_p2 and rev2_fu_478_p2);
    or_cond_i1_0_2_i_fu_535_p2 <= (tmp_140_0_2_i_fu_530_p2 and rev3_fu_524_p2);
    or_cond_i1_0_3_i_fu_581_p2 <= (tmp_140_0_3_i_fu_576_p2 and rev4_fu_570_p2);
    or_cond_i1_0_4_i_fu_627_p2 <= (tmp_140_0_4_i_fu_622_p2 and rev5_fu_616_p2);
    or_cond_i1_0_5_i_fu_673_p2 <= (tmp_140_0_5_i_fu_668_p2 and rev6_fu_662_p2);
    or_cond_i1_0_6_i_fu_719_p2 <= (tmp_140_0_6_i_fu_714_p2 and rev7_fu_708_p2);
    or_cond_i1_0_i_fu_443_p2 <= (tmp_140_0_i_fu_438_p2 and rev_fu_432_p2);
        p_Val2_14_0_1_cast_fu_1040_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(addconv_i_fu_1034_p2),37));

        p_Val2_14_0_3_cast_fu_1146_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_14_0_3_i_reg_1476),38));

    p_Val2_14_0_3_i_fu_1062_p2 <= std_logic_vector(signed(tmp_cast_fu_1058_p1) + signed(p_Val2_14_0_1_cast_fu_1040_p1));
    p_Val2_14_0_6_i_fu_1177_p2 <= std_logic_vector(signed(tmp2_cast_fu_1173_p1) + signed(tmp1_fu_1161_p2));
    p_assign_3_0_1_i_fu_464_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFE) + signed(t_V_reg_289));
    p_assign_3_0_2_i_fu_510_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFD) + signed(t_V_reg_289));
    p_assign_3_0_3_i_fu_556_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFC) + signed(t_V_reg_289));
    p_assign_3_0_4_i_fu_602_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFB) + signed(t_V_reg_289));
    p_assign_3_0_5_i_fu_648_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFA) + signed(t_V_reg_289));
    p_assign_3_0_6_i_fu_694_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFF9) + signed(t_V_reg_289));
    p_assign_4_0_1_i_fu_503_p3 <= 
        ap_const_lv32_0 when (tmp_16_fu_495_p3(0) = '1') else 
        tmp_10_i_reg_1224;
    p_assign_4_0_2_i_fu_549_p3 <= 
        ap_const_lv32_0 when (tmp_18_fu_541_p3(0) = '1') else 
        tmp_10_i_reg_1224;
    p_assign_4_0_3_i_fu_595_p3 <= 
        ap_const_lv32_0 when (tmp_20_fu_587_p3(0) = '1') else 
        tmp_10_i_reg_1224;
    p_assign_4_0_4_i_fu_641_p3 <= 
        ap_const_lv32_0 when (tmp_22_fu_633_p3(0) = '1') else 
        tmp_10_i_reg_1224;
    p_assign_4_0_5_i_fu_687_p3 <= 
        ap_const_lv32_0 when (tmp_24_fu_679_p3(0) = '1') else 
        tmp_10_i_reg_1224;
    p_assign_4_0_6_i_fu_733_p3 <= 
        ap_const_lv32_0 when (tmp_26_fu_725_p3(0) = '1') else 
        tmp_10_i_reg_1224;
    p_assign_4_0_i_fu_457_p3 <= 
        ap_const_lv32_0 when (tmp_14_fu_449_p3(0) = '1') else 
        tmp_10_i_reg_1224;

    p_dst_V_V_blk_n_assign_proc : process(p_dst_V_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, tmp_14_i_reg_1289)
    begin
        if (((tmp_14_i_reg_1289 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_dst_V_V_blk_n <= p_dst_V_V_full_n;
        else 
            p_dst_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

        p_dst_V_V_din <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_14_0_6_i_fu_1177_p2),40));


    p_dst_V_V_write_assign_proc : process(ap_enable_reg_pp0_iter2, tmp_14_i_reg_1289, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_14_i_reg_1289 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_dst_V_V_write <= ap_const_logic_1;
        else 
            p_dst_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    p_src_data_stream_V_V_blk_n_assign_proc : process(p_src_data_stream_V_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, tmp_13_i_reg_1285)
    begin
        if (((tmp_13_i_reg_1285 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_src_data_stream_V_V_blk_n <= p_src_data_stream_V_V_empty_n;
        else 
            p_src_data_stream_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_data_stream_V_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_13_i_reg_1285, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_13_i_reg_1285 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_src_data_stream_V_V_read <= ap_const_logic_1;
        else 
            p_src_data_stream_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    rev2_fu_478_p2 <= (tmp_15_fu_470_p3 xor ap_const_lv1_1);
    rev3_fu_524_p2 <= (tmp_17_fu_516_p3 xor ap_const_lv1_1);
    rev4_fu_570_p2 <= (tmp_19_fu_562_p3 xor ap_const_lv1_1);
    rev5_fu_616_p2 <= (tmp_21_fu_608_p3 xor ap_const_lv1_1);
    rev6_fu_662_p2 <= (tmp_23_fu_654_p3 xor ap_const_lv1_1);
    rev7_fu_708_p2 <= (tmp_25_fu_700_p3 xor ap_const_lv1_1);
    rev_fu_432_p2 <= (tmp_13_fu_424_p3 xor ap_const_lv1_1);
    row_assign_7_0_1_i_fu_801_p2 <= std_logic_vector(unsigned(y_1_0_1_i_fu_793_p3) - unsigned(index_reg_1240));
    row_assign_7_0_2_i_fu_818_p2 <= std_logic_vector(unsigned(y_1_0_2_i_fu_810_p3) - unsigned(index_reg_1240));
    row_assign_7_0_3_i_fu_835_p2 <= std_logic_vector(unsigned(y_1_0_3_i_fu_827_p3) - unsigned(index_reg_1240));
    row_assign_7_0_4_i_fu_852_p2 <= std_logic_vector(unsigned(y_1_0_4_i_fu_844_p3) - unsigned(index_reg_1240));
    row_assign_7_0_5_i_fu_869_p2 <= std_logic_vector(unsigned(y_1_0_5_i_fu_861_p3) - unsigned(index_reg_1240));
    row_assign_7_0_6_i_fu_886_p2 <= std_logic_vector(unsigned(y_1_0_6_i_fu_878_p3) - unsigned(index_reg_1240));
    row_assign_7_0_i_fu_784_p2 <= std_logic_vector(unsigned(y_1_0_i_fu_776_p3) - unsigned(index_reg_1240));

    rows_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, rows_empty_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            rows_blk_n <= rows_empty_n;
        else 
            rows_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    rows_out_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, rows_out_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            rows_out_blk_n <= rows_out_full_n;
        else 
            rows_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    rows_out_din <= rows_dout;

    rows_out_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, rows_empty_n, cols_empty_n, rows_out_full_n, cols_out_full_n)
    begin
        if ((not(((cols_out_full_n = ap_const_logic_0) or (rows_out_full_n = ap_const_logic_0) or (cols_empty_n = ap_const_logic_0) or (rows_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            rows_out_write <= ap_const_logic_1;
        else 
            rows_out_write <= ap_const_logic_0;
        end if; 
    end process;


    rows_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, rows_empty_n, cols_empty_n, rows_out_full_n, cols_out_full_n)
    begin
        if ((not(((cols_out_full_n = ap_const_logic_0) or (rows_out_full_n = ap_const_logic_0) or (cols_empty_n = ap_const_logic_0) or (rows_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            rows_read <= ap_const_logic_1;
        else 
            rows_read <= ap_const_logic_0;
        end if; 
    end process;

    src_kernel_winY_0_v_1_fu_1122_p3 <= 
        tmp_1_fu_1110_p9 when (tmp_15_i_reg_1293(0) = '1') else 
        col_buf_0_val_5_V_s_reg_1458;
    src_kernel_winY_0_v_2_fu_1140_p3 <= 
        tmp_2_fu_1128_p9 when (tmp_15_i_reg_1293(0) = '1') else 
        col_buf_0_val_4_V_s_reg_1449;
    src_kernel_winY_0_v_3_fu_941_p3 <= 
        tmp_3_fu_922_p9 when (tmp_15_i_reg_1293(0) = '1') else 
        k_buf_0_val_10_V_q0;
    src_kernel_winY_0_v_4_fu_967_p3 <= 
        tmp_4_fu_948_p9 when (tmp_15_i_reg_1293(0) = '1') else 
        k_buf_0_val_11_V_q0;
    src_kernel_winY_0_v_5_fu_993_p3 <= 
        tmp_5_fu_974_p9 when (tmp_15_i_reg_1293(0) = '1') else 
        k_buf_0_val_12_V_q0;
    src_kernel_winY_0_v_6_fu_1019_p3 <= 
        tmp_6_fu_1000_p9 when (tmp_15_i_reg_1293(0) = '1') else 
        k_buf_0_val_13_V_q0;
    src_kernel_winY_0_v_fu_1104_p3 <= 
        tmp_s_fu_1092_p9 when (tmp_15_i_reg_1293(0) = '1') else 
        col_buf_0_val_6_V_s_reg_1467;
    start_out <= real_start;
    start_row_cast_i_cas_fu_324_p3 <= 
        ap_const_lv32_3 when (p_read(0) = '1') else 
        ap_const_lv32_6;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp1_fu_1161_p2 <= std_logic_vector(signed(p_Val2_14_0_3_cast_fu_1146_p1) + signed(tmp_164_0_4_cast_i_fu_1149_p1));
        tmp2_cast_fu_1173_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp2_fu_1167_p2),38));

    tmp2_fu_1167_p2 <= std_logic_vector(signed(tmp_164_0_5_cast_i_c_fu_1153_p1) + signed(tmp_164_0_6_cast_i_c_fu_1157_p1));
    tmp_10_i_fu_332_p2 <= std_logic_vector(unsigned(rows_dout) + unsigned(ap_const_lv32_7));
    tmp_111_0_i_fu_906_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_2_reg_300),64));
    tmp_11_i_fu_338_p2 <= std_logic_vector(unsigned(tmp_10_i_fu_332_p2) - unsigned(anchor_y_1_cast3_i2_s_fu_316_p3));
    tmp_128_0_1_i_fu_746_p2 <= "1" when (y_0_1_cast_i_reg_1251 = t_V_reg_289) else "0";
    tmp_128_0_2_i_fu_751_p2 <= "1" when (y_0_2_cast_i_cast_reg_1256 = t_V_reg_289) else "0";
    tmp_128_0_3_i_fu_756_p2 <= "1" when (y_0_3_cast_i_cast_reg_1261 = t_V_reg_289) else "0";
    tmp_128_0_4_i_fu_761_p2 <= "1" when (y_0_4_cast_i_cast_reg_1266 = t_V_reg_289) else "0";
    tmp_128_0_5_i_fu_766_p2 <= "1" when (y_0_5_cast_i_cast_reg_1271 = t_V_reg_289) else "0";
    tmp_128_0_6_i_fu_771_p2 <= "1" when (start_row_cast_i_cas_reg_1218 = t_V_reg_289) else "0";
    tmp_128_0_i_fu_740_p2 <= "1" when (t_V_reg_289 = ap_const_lv32_0) else "0";
    tmp_138_0_i_fu_418_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFF) + signed(t_V_reg_289));
    tmp_13_fu_424_p3 <= tmp_138_0_i_fu_418_p2(31 downto 31);
    tmp_13_i_fu_403_p2 <= "1" when (unsigned(t_V_reg_289) < unsigned(stop_row_reg_1200)) else "0";
    tmp_140_0_1_i_fu_484_p2 <= "1" when (signed(p_assign_3_0_1_i_fu_464_p2) < signed(stop_row_reg_1200)) else "0";
    tmp_140_0_2_i_fu_530_p2 <= "1" when (signed(p_assign_3_0_2_i_fu_510_p2) < signed(stop_row_reg_1200)) else "0";
    tmp_140_0_3_i_fu_576_p2 <= "1" when (signed(p_assign_3_0_3_i_fu_556_p2) < signed(stop_row_reg_1200)) else "0";
    tmp_140_0_4_i_fu_622_p2 <= "1" when (signed(p_assign_3_0_4_i_fu_602_p2) < signed(stop_row_reg_1200)) else "0";
    tmp_140_0_5_i_fu_668_p2 <= "1" when (signed(p_assign_3_0_5_i_fu_648_p2) < signed(stop_row_reg_1200)) else "0";
    tmp_140_0_6_i_fu_714_p2 <= "1" when (signed(p_assign_3_0_6_i_fu_694_p2) < signed(stop_row_reg_1200)) else "0";
    tmp_140_0_i_fu_438_p2 <= "1" when (signed(tmp_138_0_i_fu_418_p2) < signed(stop_row_reg_1200)) else "0";
    tmp_14_fu_449_p3 <= tmp_138_0_i_fu_418_p2(31 downto 31);
    tmp_14_i_fu_408_p2 <= "1" when (unsigned(t_V_reg_289) > unsigned(start_row_cast_i_cas_reg_1218)) else "0";
    tmp_15_fu_470_p3 <= p_assign_3_0_1_i_fu_464_p2(31 downto 31);
    tmp_15_i_fu_413_p2 <= "1" when (unsigned(t_V_reg_289) > unsigned(stop_row_reg_1200)) else "0";
        tmp_164_0_2_cast_i_c_fu_1044_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(src_kernel_winY_0_v_4_fu_967_p3),36));

        tmp_164_0_3_cast_i_c_fu_1048_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(src_kernel_winY_0_v_3_fu_941_p3),36));

        tmp_164_0_4_cast_i_fu_1149_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(src_kernel_winY_0_v_2_fu_1140_p3),38));

        tmp_164_0_5_cast_i_c_fu_1153_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(src_kernel_winY_0_v_1_fu_1122_p3),36));

        tmp_164_0_6_cast_i_c_fu_1157_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(src_kernel_winY_0_v_fu_1104_p3),36));

    tmp_16_fu_495_p3 <= p_assign_3_0_1_i_fu_464_p2(31 downto 31);
    tmp_17_fu_516_p3 <= p_assign_3_0_2_i_fu_510_p2(31 downto 31);
    tmp_18_fu_541_p3 <= p_assign_3_0_2_i_fu_510_p2(31 downto 31);
    tmp_19_fu_562_p3 <= p_assign_3_0_3_i_fu_556_p2(31 downto 31);
    tmp_20_fu_587_p3 <= p_assign_3_0_3_i_fu_556_p2(31 downto 31);
    tmp_21_fu_608_p3 <= p_assign_3_0_4_i_fu_602_p2(31 downto 31);
    tmp_22_fu_633_p3 <= p_assign_3_0_4_i_fu_602_p2(31 downto 31);
    tmp_23_fu_654_p3 <= p_assign_3_0_5_i_fu_648_p2(31 downto 31);
    tmp_24_fu_679_p3 <= p_assign_3_0_5_i_fu_648_p2(31 downto 31);
    tmp_25_fu_700_p3 <= p_assign_3_0_6_i_fu_694_p2(31 downto 31);
    tmp_26_fu_725_p3 <= p_assign_3_0_6_i_fu_694_p2(31 downto 31);
    tmp_27_fu_789_p1 <= row_assign_7_0_i_fu_784_p2(3 - 1 downto 0);
    tmp_28_fu_806_p1 <= row_assign_7_0_1_i_fu_801_p2(3 - 1 downto 0);
    tmp_29_fu_823_p1 <= row_assign_7_0_2_i_fu_818_p2(3 - 1 downto 0);
    tmp_30_fu_840_p1 <= row_assign_7_0_3_i_fu_835_p2(3 - 1 downto 0);
    tmp_31_fu_857_p1 <= row_assign_7_0_4_i_fu_852_p2(3 - 1 downto 0);
    tmp_32_fu_874_p1 <= row_assign_7_0_5_i_fu_869_p2(3 - 1 downto 0);
    tmp_33_fu_891_p1 <= row_assign_7_0_6_i_fu_886_p2(3 - 1 downto 0);
        tmp_cast_fu_1058_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_fu_1052_p2),37));

    tmp_fu_1052_p2 <= std_logic_vector(signed(tmp_164_0_2_cast_i_c_fu_1044_p1) + signed(tmp_164_0_3_cast_i_c_fu_1048_p1));
    y_0_1_cast_i_fu_356_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(not_read_fu_350_p2),32));
    y_0_2_cast_i_cast_fu_360_p3 <= 
        ap_const_lv32_0 when (p_read(0) = '1') else 
        ap_const_lv32_2;
    y_0_3_cast_i_cast_fu_368_p3 <= 
        ap_const_lv32_0 when (p_read(0) = '1') else 
        ap_const_lv32_3;
    y_0_4_cast_i_cast_fu_376_p3 <= 
        ap_const_lv32_1 when (p_read(0) = '1') else 
        ap_const_lv32_4;
    y_0_5_cast_i_cast_fu_384_p3 <= 
        ap_const_lv32_2 when (p_read(0) = '1') else 
        ap_const_lv32_5;
    y_1_0_1_i_fu_793_p3 <= 
        p_assign_3_0_1_i_fu_464_p2 when (or_cond_i1_0_1_i_fu_489_p2(0) = '1') else 
        p_assign_4_0_1_i_fu_503_p3;
    y_1_0_2_i_fu_810_p3 <= 
        p_assign_3_0_2_i_fu_510_p2 when (or_cond_i1_0_2_i_fu_535_p2(0) = '1') else 
        p_assign_4_0_2_i_fu_549_p3;
    y_1_0_3_i_fu_827_p3 <= 
        p_assign_3_0_3_i_fu_556_p2 when (or_cond_i1_0_3_i_fu_581_p2(0) = '1') else 
        p_assign_4_0_3_i_fu_595_p3;
    y_1_0_4_i_fu_844_p3 <= 
        p_assign_3_0_4_i_fu_602_p2 when (or_cond_i1_0_4_i_fu_627_p2(0) = '1') else 
        p_assign_4_0_4_i_fu_641_p3;
    y_1_0_5_i_fu_861_p3 <= 
        p_assign_3_0_5_i_fu_648_p2 when (or_cond_i1_0_5_i_fu_673_p2(0) = '1') else 
        p_assign_4_0_5_i_fu_687_p3;
    y_1_0_6_i_fu_878_p3 <= 
        p_assign_3_0_6_i_fu_694_p2 when (or_cond_i1_0_6_i_fu_719_p2(0) = '1') else 
        p_assign_4_0_6_i_fu_733_p3;
    y_1_0_i_fu_776_p3 <= 
        tmp_138_0_i_fu_418_p2 when (or_cond_i1_0_i_fu_443_p2(0) = '1') else 
        p_assign_4_0_i_fu_457_p3;
end behav;
